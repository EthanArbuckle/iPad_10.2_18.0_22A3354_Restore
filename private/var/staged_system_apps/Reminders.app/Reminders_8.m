uint64_t sub_10041DA9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000735C(v1, a1, &qword_10064A080);
}

void sub_10041DAC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = *(_QWORD *)(v1 + 88);
  if (v9)
    v10 = v9 == a1;
  else
    v10 = 0;
  if (v10)
  {
    *(_QWORD *)(v1 + 88) = 0;
    swift_release();
    sub_10002B1E8(a1 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v11 = TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)(v8);
    if (v11)
    {
      v13 = v11;
      v14 = v12;
      ObjectType = swift_getObjectType(v11, v12);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(ObjectType, v14);
      swift_unknownObjectRelease(v13);
    }
    else
    {
      v16 = 0;
    }
    if (qword_10063D7C8 != -1)
      swift_once(&qword_10063D7C8, sub_1004191EC);
    v17 = type metadata accessor for Logger(0);
    sub_100012DC4(v17, (uint64_t)qword_10065C128);
    v18 = sub_10002B1E8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v22 = swift_slowAlloc(64, -1);
      v30 = v22;
      *(_DWORD *)v21 = 136315394;
      if ((v16 & 1) != 0)
        v23 = 1702195828;
      else
        v23 = 0x65736C6166;
      if ((v16 & 1) != 0)
        v24 = 0xE400000000000000;
      else
        v24 = 0xE500000000000000;
      v29 = sub_100027E40(v23, v24, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease(v24);
      *(_WORD *)(v21 + 12) = 2080;
      v25 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v26 = TTRTreeStorageItem.treeItemDescription.getter(v3, v25);
      v28 = v27;
      v29 = sub_100027E40(v26, v27, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v21 + 14, v21 + 22);
      swift_bridgeObjectRelease(v28);
      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Reminders List mark item committable for pencil {marked: %s, item: %s}", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy(v22, 2, &type metadata for Any[8]);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
}

unint64_t sub_10041DDD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = sub_10002A750(&qword_10064A080);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(v0, (uint64_t)v3, &qword_10064A080);
  v7 = sub_10002A750(&qword_10063F268);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7);
  if (v8 == 1)
  {
    sub_1000073A0((uint64_t)v3, &qword_10064A080);
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  v11 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  v12 = 0x20676E6974696465;
  v13 = 0xD000000000000014;
  if (!*(_BYTE *)(v0 + *(int *)(v11 + 20)))
  {
    v13 = 0x20676E6974696465;
    v12 = 0x7469646520746F6ELL;
  }
  if (v8 == 1)
    return v12;
  else
    return v13;
}

_QWORD *sub_10041DFB4()
{
  _QWORD *v0;

  sub_1000381C8((uint64_t)(v0 + 2));
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[6]);
  swift_release();
  swift_bridgeObjectRelease(v0[9]);
  swift_release();
  swift_release();
  swift_release();
  sub_10001F544((uint64_t)v0 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  return v0;
}

uint64_t sub_10041E020()
{
  uint64_t v0;

  sub_10041DFB4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10041E044()
{
  return type metadata accessor for TTRReminderListEditingPresenter(0);
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter(uint64_t a1)
{
  return sub_100007328(a1, qword_10065C170, (uint64_t)&nominal type descriptor for TTRReminderListEditingPresenter);
}

uint64_t sub_10041E060(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100535C60;
  v4[1] = &unk_100535C78;
  v4[2] = &unk_100535C78;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = &unk_100535C90;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for TTRReminderListEditingPresenter.EditingState(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter.EditingState(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10065C3F8, (uint64_t)&nominal type descriptor for TTRReminderListEditingPresenter.EditingState);
}

uint64_t sub_10041E120()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType(Strong, v2);
  v6 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 56))(v0, &off_100606F60, ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v6;
}

uint64_t sub_10041E19C()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterWillBeginEditing(_:)();
}

uint64_t sub_10041E1BC()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterDidFinishEditing(_:editingSession:)();
}

uint64_t sub_10041E1DC()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterWillBeginEditing(_:)();
}

uint64_t sub_10041E1FC()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterDidFinishEditing(_:)();
}

void sub_10041E21C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  sub_10041B17C(a1, a2, a3, a4, a5 & 0x101, a6);
}

_QWORD *sub_10041E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return sub_10042CE70(a1, a2, a3, a6 & 1, (a6 >> 8) & 1);
}

uint64_t sub_10041E234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 664))(a1, ObjectType, v4);
}

uint64_t sub_10041E28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 672))(ObjectType, v3) & 1;
}

uint64_t sub_10041E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v12;

  v12 = (_QWORD *)swift_task_alloc(dword_10065C47C);
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_10041E35C;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  v12[3] = a2;
  v12[8] = *v5;
  return swift_task_switch(sub_10041E3D8, 0, 0);
}

uint64_t sub_10041E35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_10041E3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *v5;
  return swift_task_switch(sub_10041E3D8, 0, 0);
}

uint64_t sub_10041E3D8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjCClassFromMetadata;
  NSString v9;
  uint64_t v10;
  char *v12;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 56) + 16);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24);
    swift_getObjectType(Strong, v2);
    v4 = *(int **)(v3 + 72);
    v12 = (char *)v4 + *v4;
    v5 = (_QWORD *)swift_task_alloc(v4[1]);
    *(_QWORD *)(v0 + 80) = v5;
    *v5 = v0;
    v5[1] = sub_10041E500;
    __asm { BR              X8 }
  }
  v6 = *(_QWORD *)(v0 + 64);
  v7 = (void *)objc_opt_self(REMError);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v6);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "unexpectedNilPropertyWithClass:property:", ObjCClassFromMetadata, v9);

  swift_willThrow(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041E500(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_10041E5AC;
  }
  else
  {
    *(_QWORD *)(v4 + 96) = a1;
    v6 = sub_10041E574;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10041E574()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_10041E5AC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10041E5E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v12 = a2[7];
  ObjectType = swift_getObjectType(a2[6], a2);
  v14 = a2[5];
  v16 = swift_getObjectType(a2[4], v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 432))(v16, v14);
  v18 = TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)(a1, 0, 0xE000000000000000, a3, a4, a5, a6, a7, v17, ObjectType, v12);
  swift_bridgeObjectRelease(v17);
  return v18;
}

_QWORD *sub_10041E6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 != v5)
  {
    if (qword_10063D7C8 != -1)
      swift_once(&qword_10063D7C8, sub_1004191EC);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_10065C128);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.fault.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      *(_DWORD *)v10 = 134218240;
      v14 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(a1);
      *(_WORD *)(v10 + 12) = 2048;
      v14 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v10 + 14, v10 + 22);
      swift_bridgeObjectRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "objectIDs count not matching titles count {objectIDs: %ld, titles: %ld}", (uint8_t *)v10, 0x16u);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
    }
  }
  __chkstk_darwin(a1);
  swift_bridgeObjectRetain(a1);
  v12 = sub_10042B750(v11, sub_10042D9A0);
  swift_bridgeObjectRelease(a1);
  return v12;
}

uint64_t sub_10041E87C(uint64_t result, void *a2, uint64_t a3)
{
  id v4;

  if (*(_QWORD *)(a3 + 16) <= result)
    goto LABEL_4;
  if ((result & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a3 + 16 * result + 40));
LABEL_4:
    v4 = a2;
    return (uint64_t)a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10041E8E0(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = a2[7];
  ObjectType = swift_getObjectType(a2[6], a2);
  v15 = a3(a1);
  v16 = a2[4];
  v17 = a2[5];
  v19 = swift_getObjectType(v16, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 432))(v19, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v13 + 168))(v15, 2, a5, a6, a7, a8, a9, v20, ObjectType, v13);
  swift_bridgeObjectRelease(v15);
  return swift_bridgeObjectRelease(v20);
}

uint64_t sub_10041E9C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1003003A4(a2, a3, a4);
}

uint64_t sub_10041E9EC()
{
  return sub_10041C600((void (*)(char *))sub_10042DAAC);
}

void sub_10041EA18(double a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  id v68;
  uint64_t v69[2];

  v66 = *v1;
  v3 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v3);
  v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_10065C450);
  __chkstk_darwin(v5);
  v60 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  __chkstk_darwin(v7);
  v53 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10065C458);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v63 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v55 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v57 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  v56 = v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - v18;
  v67 = v1;
  sub_10002B1E8((uint64_t)v1 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)&v53 - v18, v20);
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v21 = type metadata accessor for Logger(0);
  sub_100012DC4(v21, (uint64_t)qword_10065C128);
  v22 = sub_10002B1E8((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.debug.getter();
  v25 = os_log_type_enabled(v23, v24);
  v62 = v19;
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v69[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v29 = TTRTreeStorageItem.treeItemDescription.getter(v11, v28);
    v31 = v30;
    v68 = (id)sub_100027E40(v29, v30, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v26 + 4, v26 + 12);
    swift_bridgeObjectRelease(v31);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "PencilWritingStateReporter: schedule for item %s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, &type metadata for Any[8]);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  v54 = OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable;
  if (*(_QWORD *)((char *)v67
                 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  v69[0] = 1;
  v32 = sub_10002A750(&qword_10065C460);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v69[0] = CurrentValueSubject.init(_:)(v69);
  v33 = v53;
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)(a1);
  v34 = v58;
  v35 = v59;
  v36 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, 1, 1, v59);
  v68 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v38 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v61, 1, 1, v37);
  v39 = sub_10042B6C4();
  v40 = sub_100023FEC(&qword_10065C468, &qword_10065C460, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v41 = sub_1000175C8((unint64_t *)&qword_100642DA0, (uint64_t (*)(uint64_t))sub_10042B6C4, (uint64_t)&protocol conformance descriptor for NSRunLoop);
  v42 = v63;
  Publisher.delay<A>(for:tolerance:scheduler:options:)(v33, v36, &v68, v38, v32, v39, v40, v41);
  sub_1000073A0(v38, &qword_1006547E0);

  sub_1000073A0(v36, &qword_10065C450);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  swift_release();
  v43 = (uint64_t)v62;
  v44 = v57;
  sub_10002B1E8((uint64_t)v62, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v45 = *(unsigned __int8 *)(v55 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = swift_allocObject(&unk_100607098, v46 + v56, v45 | 7);
  sub_10001F580(v44, v47 + v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v48 = sub_100023FEC(&qword_10065C470, &qword_10065C458, (uint64_t)&protocol conformance descriptor for Publishers.Delay<A, B>);
  v49 = v67;
  v50 = v65;
  v51 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v67, sub_10042B704, v47, 0, 0, v65, v66, v48);
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v42, v50, v52);
  sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)((char *)v49 + v54) = v51;
  swift_release();
}

double sub_10041F00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v8 = type metadata accessor for Logger(0);
  sub_100012DC4(v8, (uint64_t)qword_10065C128);
  v9 = sub_10002B1E8(a3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = a1;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v22 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v15 = TTRTreeStorageItem.treeItemDescription.getter(v5, v14);
    v17 = v16;
    v21 = sub_100027E40(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v17);
    a1 = v20;
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "PencilWritingStateReporter: perform delayed action for item %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, &type metadata for Any[8]);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (swift_weakLoadStrong(a1+ OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_editingPresenter))
  {
    sub_10041DAC4(a1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10041F250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10065C128);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v16 = v7;
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v10 = TTRTreeStorageItem.treeItemDescription.getter(v8, v9);
    v12 = v11;
    v15 = sub_100027E40(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v6 + 4, v6 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "PencilWritingStateReporter: cancel scheduled for item %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v0, 2);
  }
  v13 = OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(_QWORD *)(v1 + v13) = 0;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10041F464()
{
  uint64_t v0;

  sub_10001F544(v0 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_weakDestroy(v0 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_editingPresenter);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10041F4BC()
{
  return type metadata accessor for PencilWritingStateReporter(0);
}

uint64_t type metadata accessor for PencilWritingStateReporter(uint64_t a1)
{
  return sub_100007328(a1, qword_10065C278, (uint64_t)&nominal type descriptor for PencilWritingStateReporter);
}

uint64_t sub_10041F4D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100535C90;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void **sub_10041F558(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  id v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  uint64_t v189;
  unsigned __int8 v191;
  void *v192;
  unsigned __int8 v193;
  char v194;
  char *v195;
  uint64_t v196;
  char v197;
  void **v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v3, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v7;
        v201 = v6;
        switch(swift_getEnumCaseMultiPayload(v3, v8))
        {
          case 1u:
            v9 = *v3;
            *a1 = *v3;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, v3, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, v3, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, v3, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, v3, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, v3, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *v3;
            *a1 = *v3;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *v3;
            *a1 = *v3;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = (char *)a1 + v105;
        v107 = (char *)v3 + v105;
        v108 = *(uint64_t *)((char *)v3 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v196 = *((_QWORD *)v107 + 7);
          v191 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v196, v191);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v196;
          v106[64] = v191;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v197 = v114 & 1;
            v120 = *((_QWORD *)v107 + 10);
            v192 = (void *)*((_QWORD *)v107 + 9);
            v121 = *((_QWORD *)v107 + 11);
            v122 = *((_QWORD *)v107 + 12);
            v123 = *((_QWORD *)v107 + 13);
            v124 = *((_QWORD *)v107 + 14);
            sub_10002B764(v192, v120, v121, v122, v123, v124, v114 & 1);
            *((_QWORD *)v106 + 9) = v192;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v121;
            *((_QWORD *)v106 + 12) = v122;
            *((_QWORD *)v106 + 13) = v123;
            *((_QWORD *)v106 + 14) = v124;
            v106[120] = v197;
          }
          v119 = v199;
          v6 = v201;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        *((_BYTE *)a1 + v104[6]) = *((_BYTE *)v3 + v104[6]);
        *((_BYTE *)a1 + v104[7]) = *((_BYTE *)v3 + v104[7]);
        *((_BYTE *)a1 + v104[8]) = *((_BYTE *)v3 + v104[8]);
        *((_BYTE *)a1 + v104[9]) = *((_BYTE *)v3 + v104[9]);
        *((_BYTE *)a1 + v104[10]) = *((_BYTE *)v3 + v104[10]);
        v125 = v104[11];
        v126 = *(void **)((char *)v3 + v125);
        *(void **)((char *)a1 + v125) = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v200 = v7;
        v202 = v6;
        switch(swift_getEnumCaseMultiPayload(v3, v15))
        {
          case 1u:
            v16 = *v3;
            *a1 = *v3;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, v3, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, v3, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, v3, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, v3, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, v3, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *v3;
            *a1 = *v3;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *v3;
            *a1 = *v3;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = (char *)a1 + v138;
        v140 = (char *)v3 + v138;
        v141 = *(uint64_t *)((char *)v3 + v138 + 8);
        if (v141)
        {
          v198 = v3;
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v147 = *((_QWORD *)v140 + 6);
          v146 = *((_QWORD *)v140 + 7);
          v193 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v147, v146, v193);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v147;
          *((_QWORD *)v139 + 7) = v146;
          v139[64] = v193;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v148 = v140[120];
          if (v148 == 255)
          {
            v149 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v149;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v194 = v148 & 1;
            v155 = (void *)*((_QWORD *)v140 + 9);
            v154 = *((_QWORD *)v140 + 10);
            v156 = *((_QWORD *)v140 + 11);
            v157 = *((_QWORD *)v140 + 12);
            v158 = *((_QWORD *)v140 + 13);
            v159 = *((_QWORD *)v140 + 14);
            sub_10002B764(v155, v154, v156, v157, v158, v159, v148 & 1);
            *((_QWORD *)v139 + 9) = v155;
            *((_QWORD *)v139 + 10) = v154;
            *((_QWORD *)v139 + 11) = v156;
            *((_QWORD *)v139 + 12) = v157;
            *((_QWORD *)v139 + 13) = v158;
            *((_QWORD *)v139 + 14) = v159;
            v139[120] = v194;
          }
          v153 = v200;
          v6 = v202;
          v139[121] = v140[121];
          v3 = v198;
        }
        else
        {
          v150 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v150;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v151 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v151;
          v152 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v152;
          v153 = v7;
        }
        *((_BYTE *)a1 + v137[6]) = *((_BYTE *)v3 + v137[6]);
        *((_BYTE *)a1 + v137[7]) = *((_BYTE *)v3 + v137[7]);
        *((_BYTE *)a1 + v137[8]) = *((_BYTE *)v3 + v137[8]);
        *((_BYTE *)a1 + v137[9]) = *((_BYTE *)v3 + v137[9]);
        *((_BYTE *)a1 + v137[10]) = *((_BYTE *)v3 + v137[10]);
        v160 = v137[11];
        v161 = *(void **)((char *)v3 + v160);
        *(void **)((char *)a1 + v160) = v161;
        v162 = v161;
        v50 = a1;
        v51 = v153;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *v3;
        *a1 = *v3;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)((char *)a1 + v22);
        v24 = (void **)((char *)v3 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v23, v24, v166);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v23, v24, v167);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v170 = *v24;
              *v23 = *v24;
              v171 = v170;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *v3;
        *a1 = *v3;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)((char *)a1 + v31);
        v33 = (void **)((char *)v3 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v32, v33, v174);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v32, v33, v189);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v32, v33, v175);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v178 = *v33;
              *v32 = *v33;
              v179 = v178;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *v3;
        *a1 = *v3;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)((char *)a1 + v40);
        v42 = (void **)((char *)v3 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v41, v42, v183);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v41, v42, v184);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v187 = *v42;
              *v41 = *v42;
              v188 = v187;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *a1 = *v3;
        *((_BYTE *)a1 + 8) = *((_BYTE *)v3 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
        v48 = v3[2];
        a1[2] = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *v3;
        *a1 = *v3;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48))(v3, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *v3;
          *a1 = *v3;
          v81 = *(int *)(v53 + 20);
          v195 = (char *)a1 + v81;
          v82 = (char *)v3 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v195, v82, v83, v86);
          v7 = v84;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = (void **)((char *)a1 + v87);
        v89 = (void **)((char *)v3 + v87);
        v90 = v89[1];
        if (v90)
        {
          *v88 = *v89;
          v88[1] = v90;
          v91 = (void *)v89[2];
          v88[2] = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          v88[2] = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(v3, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, v3, v93);
          *((_BYTE *)a1 + *(int *)(v62 + 20)) = *((_BYTE *)v3 + *(int *)(v62 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v94 + 20)) = *(void **)((char *)v3 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)v3;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)v3 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    *(void **)((char *)a1 + *(int *)(v6 + 20)) = *(void **)((char *)v3 + *(int *)(v6 + 20));
  }
  return a1;
}

void sub_100420548(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v3))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_22;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_23;
      }
      goto LABEL_23;
    case 1u:
      v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v4))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_22:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v5 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          break;
      }
LABEL_23:
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v17 = (char *)a1 + *(int *)(v16 + 20);
      v18 = *((_QWORD *)v17 + 1);
      if (v18)
      {
        swift_bridgeObjectRelease(v18);
        sub_10003E2EC(*((void **)v17 + 2), *((_QWORD *)v17 + 3), *((_QWORD *)v17 + 4), *((_QWORD *)v17 + 5), *((_QWORD *)v17 + 6), *((_QWORD *)v17 + 7), v17[64]);
        v19 = v17[120];
        if (v19 != 255)
          sub_10002B328(*((void **)v17 + 9), *((_QWORD *)v17 + 10), *((_QWORD *)v17 + 11), *((_QWORD *)v17 + 12), *((_QWORD *)v17 + 13), *((_QWORD *)v17 + 14), v19 & 1);
      }
      v9 = *(id *)((char *)a1 + *(int *)(v16 + 44));
      goto LABEL_27;
    case 2u:

      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload(a1, v6))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 3u:

      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload(a1, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 4u:

      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload(a1, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v9 = (id)*a1;
      goto LABEL_27;
    case 7u:
      v10 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1, 1, v10))
      {
        swift_bridgeObjectRelease(*a1);
        v11 = (char *)a1 + *(int *)(v10 + 20);
        v12 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      }
      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v13 = a1[1];
      if (!v13)
        return;
      swift_bridgeObjectRelease(v13);
LABEL_16:
      v9 = (id)a1[2];
LABEL_27:

      break;
    case 8u:
      v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
        return;
LABEL_20:
      v15 = type metadata accessor for Date(0);
LABEL_21:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      break;
    case 9u:
      a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v15 = type metadata accessor for AnyTip(0);
      goto LABEL_21;
    default:
      return;
  }
}

void **sub_1004208E0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  int v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  void *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  id v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  id v190;
  void *v191;
  id v192;
  uint64_t v193;
  void **v195;
  void **v196;
  char *v197;
  void **v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v200 = v6;
      v202 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        v195 = a1;
        v198 = a2;
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v112 = *((_QWORD *)v105 + 7);
        v113 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v112, v113);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v112;
        v104[64] = v113;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v114 = v105[120];
        if (v114 == 255)
        {
          v115 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v115;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v120 = (void *)*((_QWORD *)v105 + 9);
          v121 = *((_QWORD *)v105 + 10);
          v122 = *((_QWORD *)v105 + 11);
          v123 = *((_QWORD *)v105 + 12);
          v124 = *((_QWORD *)v105 + 13);
          v125 = *((_QWORD *)v105 + 14);
          v126 = v114 & 1;
          sub_10002B764(v120, v121, v122, v123, v124, v125, v114 & 1);
          *((_QWORD *)v104 + 9) = v120;
          *((_QWORD *)v104 + 10) = v121;
          *((_QWORD *)v104 + 11) = v122;
          *((_QWORD *)v104 + 12) = v123;
          *((_QWORD *)v104 + 13) = v124;
          *((_QWORD *)v104 + 14) = v125;
          v104[120] = v126;
        }
        v119 = v200;
        a3 = v202;
        v104[121] = v105[121];
        a1 = v195;
        a2 = v198;
      }
      else
      {
        v116 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v116;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v117 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v117;
        v118 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v118;
        v119 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v127 = v102[11];
      v128 = *(void **)((char *)a2 + v127);
      *(void **)((char *)a1 + v127) = v128;
      v129 = v128;
      v48 = a1;
      v49 = v119;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v201 = v6;
      v203 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v131 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v132 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v133 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v134 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v135 = *a2;
          *a1 = *a2;
          v136 = v135;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v137 = *a2;
          *a1 = *a2;
          v138 = v137;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v139 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v140 = v139[5];
      v141 = (char *)a1 + v140;
      v142 = (char *)a2 + v140;
      v143 = *(uint64_t *)((char *)a2 + v140 + 8);
      if (v143)
      {
        v196 = a1;
        v199 = a2;
        *(_QWORD *)v141 = *(_QWORD *)v142;
        *((_QWORD *)v141 + 1) = v143;
        v144 = (void *)*((_QWORD *)v142 + 2);
        v145 = *((_QWORD *)v142 + 3);
        v146 = *((_QWORD *)v142 + 4);
        v147 = *((_QWORD *)v142 + 5);
        v148 = *((_QWORD *)v142 + 6);
        v149 = *((_QWORD *)v142 + 7);
        v150 = v142[64];
        swift_bridgeObjectRetain(v143);
        sub_10003E1F0(v144, v145, v146, v147, v148, v149, v150);
        *((_QWORD *)v141 + 2) = v144;
        *((_QWORD *)v141 + 3) = v145;
        *((_QWORD *)v141 + 4) = v146;
        *((_QWORD *)v141 + 5) = v147;
        *((_QWORD *)v141 + 6) = v148;
        *((_QWORD *)v141 + 7) = v149;
        v141[64] = v150;
        *(_DWORD *)(v141 + 65) = *(_DWORD *)(v142 + 65);
        v151 = v142[120];
        if (v151 == 255)
        {
          v152 = *(_OWORD *)(v142 + 88);
          *(_OWORD *)(v141 + 72) = *(_OWORD *)(v142 + 72);
          *(_OWORD *)(v141 + 88) = v152;
          *(_OWORD *)(v141 + 104) = *(_OWORD *)(v142 + 104);
          v141[120] = v142[120];
        }
        else
        {
          v157 = (void *)*((_QWORD *)v142 + 9);
          v158 = *((_QWORD *)v142 + 10);
          v159 = *((_QWORD *)v142 + 11);
          v160 = *((_QWORD *)v142 + 12);
          v161 = *((_QWORD *)v142 + 13);
          v162 = *((_QWORD *)v142 + 14);
          v163 = v151 & 1;
          sub_10002B764(v157, v158, v159, v160, v161, v162, v151 & 1);
          *((_QWORD *)v141 + 9) = v157;
          *((_QWORD *)v141 + 10) = v158;
          *((_QWORD *)v141 + 11) = v159;
          *((_QWORD *)v141 + 12) = v160;
          *((_QWORD *)v141 + 13) = v161;
          *((_QWORD *)v141 + 14) = v162;
          v141[120] = v163;
        }
        v156 = v201;
        a3 = v203;
        v141[121] = v142[121];
        a1 = v196;
        a2 = v199;
      }
      else
      {
        v153 = *((_OWORD *)v142 + 5);
        *((_OWORD *)v141 + 4) = *((_OWORD *)v142 + 4);
        *((_OWORD *)v141 + 5) = v153;
        *((_OWORD *)v141 + 6) = *((_OWORD *)v142 + 6);
        *(_OWORD *)(v141 + 106) = *(_OWORD *)(v142 + 106);
        v154 = *((_OWORD *)v142 + 1);
        *(_OWORD *)v141 = *(_OWORD *)v142;
        *((_OWORD *)v141 + 1) = v154;
        v155 = *((_OWORD *)v142 + 3);
        *((_OWORD *)v141 + 2) = *((_OWORD *)v142 + 2);
        *((_OWORD *)v141 + 3) = v155;
        v156 = v6;
      }
      *((_BYTE *)a1 + v139[6]) = *((_BYTE *)a2 + v139[6]);
      *((_BYTE *)a1 + v139[7]) = *((_BYTE *)a2 + v139[7]);
      *((_BYTE *)a1 + v139[8]) = *((_BYTE *)a2 + v139[8]);
      *((_BYTE *)a1 + v139[9]) = *((_BYTE *)a2 + v139[9]);
      *((_BYTE *)a1 + v139[10]) = *((_BYTE *)a2 + v139[10]);
      v164 = v139[11];
      v165 = *(void **)((char *)a2 + v164);
      *(void **)((char *)a1 + v164) = v165;
      v166 = v165;
      v48 = a1;
      v49 = v156;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v21, v22, v167);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v21, v22, v168);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v21, v22, v169);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v21, v22, v170);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v21, v22, v171);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v172 = *v22;
            *v21 = *v22;
            v173 = v172;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v174 = *v22;
            *v21 = *v22;
            v175 = v174;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v30, v31, v176);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v30, v31, v177);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v30, v31, v178);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v193 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v30, v31, v193);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v30, v31, v179);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v180 = *v31;
            *v30 = *v31;
            v181 = v180;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v182 = *v31;
            *v30 = *v31;
            v183 = v182;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v39, v40, v184);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v39, v40, v185);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v39, v40, v186);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v39, v40, v187);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v188 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v39, v40, v188);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v189 = *v40;
            *v39 = *v40;
            v190 = v189;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v191 = *v40;
            *v39 = *v40;
            v192 = v191;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v197 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v197, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **sub_100421878(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  unsigned __int8 v200;
  void *v201;
  uint64_t v202;
  char v203;
  char *v204;
  uint64_t v205;
  char v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v208 = v6;
        v210 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v205 = *((_QWORD *)v106 + 7);
          v200 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v205, v200);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v205;
          v105[64] = v200;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v206 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v201 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v201, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v201;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v206;
          }
          v123 = v208;
          a3 = v210;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v209 = v6;
        v211 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v207 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v202 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v202, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v202;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v203 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v203;
          }
          v162 = v209;
          a3 = v211;
          v143[121] = v144[121];
          v141 = v207;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v204 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v204, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_10042289C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_100423400(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100423F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100423F88);
}

uint64_t sub_100423F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100423FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100423FD0);
}

uint64_t sub_100423FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(uint64_t a1)
{
  return sub_100007328(a1, qword_10065C368, (uint64_t)&nominal type descriptor for TTRReminderListEditingPresenter.PendingDisplay);
}

uint64_t sub_100424024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10042AAD8(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

char *sub_10042403C(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(void **, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void **, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(void **, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t, __n128);
  __n128 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  id v176;
  void *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  id v185;
  void *v186;
  id v187;
  uint64_t v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int *v194;
  int *v195;
  unsigned __int8 v196;
  uint64_t v197;
  unsigned __int8 v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_10063F268);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10002A750(&qword_10064A080);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v11))
      {
        case 0u:
          v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v211 = v11;
          switch(swift_getEnumCaseMultiPayload(a2, v12))
          {
            case 1u:
              v13 = *a2;
              *(_QWORD *)a1 = *a2;
              v14 = v13;
              v15 = a1;
              v16 = v12;
              v17 = 1;
              goto LABEL_45;
            case 2u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
              v15 = a1;
              v16 = v12;
              v17 = 2;
              goto LABEL_45;
            case 3u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(a1, a2, v103);
              v15 = a1;
              v16 = v12;
              v17 = 3;
              goto LABEL_45;
            case 4u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(a1, a2, v104);
              v15 = a1;
              v16 = v12;
              v17 = 4;
              goto LABEL_45;
            case 5u:
              v105 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(a1, a2, v105);
              v15 = a1;
              v16 = v12;
              v17 = 5;
              goto LABEL_45;
            case 6u:
              v106 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(a1, a2, v106);
              v15 = a1;
              v16 = v12;
              v17 = 6;
              goto LABEL_45;
            case 8u:
              v107 = *a2;
              *(_QWORD *)a1 = *a2;
              v108 = v107;
              v15 = a1;
              v16 = v12;
              v17 = 8;
              goto LABEL_45;
            case 9u:
              v109 = *a2;
              *(_QWORD *)a1 = *a2;
              v110 = v109;
              v15 = a1;
              v16 = v12;
              v17 = 9;
LABEL_45:
              swift_storeEnumTagMultiPayload(v15, v16, v17);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
              break;
          }
          v111 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v112 = v111[5];
          v113 = &a1[v112];
          v114 = (char *)a2 + v112;
          v115 = *(uint64_t *)((char *)a2 + v112 + 8);
          if (v115)
          {
            v209 = v8;
            *(_QWORD *)v113 = *(_QWORD *)v114;
            *((_QWORD *)v113 + 1) = v115;
            v116 = (void *)*((_QWORD *)v114 + 2);
            v117 = *((_QWORD *)v114 + 3);
            v119 = *((_QWORD *)v114 + 4);
            v118 = *((_QWORD *)v114 + 5);
            v190 = *((_QWORD *)v114 + 6);
            v194 = v111;
            v201 = *((_QWORD *)v114 + 7);
            v196 = v114[64];
            swift_bridgeObjectRetain(v115);
            sub_10003E1F0(v116, v117, v119, v118, v190, v201, v196);
            *((_QWORD *)v113 + 2) = v116;
            *((_QWORD *)v113 + 3) = v117;
            *((_QWORD *)v113 + 4) = v119;
            *((_QWORD *)v113 + 5) = v118;
            *((_QWORD *)v113 + 6) = v190;
            *((_QWORD *)v113 + 7) = v201;
            v113[64] = v196;
            *(_DWORD *)(v113 + 65) = *(_DWORD *)(v114 + 65);
            v120 = v114[120];
            if (v120 == 255)
            {
              v121 = *(_OWORD *)(v114 + 88);
              *(_OWORD *)(v113 + 72) = *(_OWORD *)(v114 + 72);
              *(_OWORD *)(v113 + 88) = v121;
              *(_OWORD *)(v113 + 104) = *(_OWORD *)(v114 + 104);
              v113[120] = v114[120];
            }
            else
            {
              v202 = v120 & 1;
              v125 = (void *)*((_QWORD *)v114 + 9);
              v126 = *((_QWORD *)v114 + 10);
              v127 = *((_QWORD *)v114 + 11);
              v128 = *((_QWORD *)v114 + 12);
              v197 = *((_QWORD *)v114 + 13);
              v191 = *((_QWORD *)v114 + 14);
              sub_10002B764(v125, v126, v127, v128, v197, v191, v120 & 1);
              *((_QWORD *)v113 + 9) = v125;
              *((_QWORD *)v113 + 10) = v126;
              *((_QWORD *)v113 + 11) = v127;
              *((_QWORD *)v113 + 12) = v128;
              *((_QWORD *)v113 + 13) = v197;
              *((_QWORD *)v113 + 14) = v191;
              v113[120] = v202;
            }
            v8 = v209;
            v11 = v211;
            v113[121] = v114[121];
            v111 = v194;
          }
          else
          {
            v122 = *((_OWORD *)v114 + 5);
            *((_OWORD *)v113 + 4) = *((_OWORD *)v114 + 4);
            *((_OWORD *)v113 + 5) = v122;
            *((_OWORD *)v113 + 6) = *((_OWORD *)v114 + 6);
            *(_OWORD *)(v113 + 106) = *(_OWORD *)(v114 + 106);
            v123 = *((_OWORD *)v114 + 1);
            *(_OWORD *)v113 = *(_OWORD *)v114;
            *((_OWORD *)v113 + 1) = v123;
            v124 = *((_OWORD *)v114 + 3);
            *((_OWORD *)v113 + 2) = *((_OWORD *)v114 + 2);
            *((_OWORD *)v113 + 3) = v124;
          }
          a1[v111[6]] = *((_BYTE *)a2 + v111[6]);
          a1[v111[7]] = *((_BYTE *)a2 + v111[7]);
          a1[v111[8]] = *((_BYTE *)a2 + v111[8]);
          a1[v111[9]] = *((_BYTE *)a2 + v111[9]);
          a1[v111[10]] = *((_BYTE *)a2 + v111[10]);
          v129 = v111[11];
          v130 = *(char **)((char *)a2 + v129);
          *(_QWORD *)&a1[v129] = v130;
          v131 = v130;
          v56 = a1;
          v57 = v11;
          v58 = 0;
          goto LABEL_102;
        case 1u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v212 = v11;
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 1u:
              v19 = *a2;
              *(_QWORD *)a1 = *a2;
              v20 = v19;
              v21 = a1;
              v22 = v18;
              v23 = 1;
              goto LABEL_61;
            case 2u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
              v21 = a1;
              v22 = v18;
              v23 = 2;
              goto LABEL_61;
            case 3u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
              v21 = a1;
              v22 = v18;
              v23 = 3;
              goto LABEL_61;
            case 4u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
              v21 = a1;
              v22 = v18;
              v23 = 4;
              goto LABEL_61;
            case 5u:
              v135 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
              v21 = a1;
              v22 = v18;
              v23 = 5;
              goto LABEL_61;
            case 6u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
              v21 = a1;
              v22 = v18;
              v23 = 6;
              goto LABEL_61;
            case 8u:
              v137 = *a2;
              *(_QWORD *)a1 = *a2;
              v138 = v137;
              v21 = a1;
              v22 = v18;
              v23 = 8;
              goto LABEL_61;
            case 9u:
              v139 = *a2;
              *(_QWORD *)a1 = *a2;
              v140 = v139;
              v21 = a1;
              v22 = v18;
              v23 = 9;
LABEL_61:
              swift_storeEnumTagMultiPayload(v21, v22, v23);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v142 = v141[5];
          v143 = &a1[v142];
          v144 = (char *)a2 + v142;
          v145 = *(uint64_t *)((char *)a2 + v142 + 8);
          if (v145)
          {
            v210 = v8;
            *(_QWORD *)v143 = *(_QWORD *)v144;
            *((_QWORD *)v143 + 1) = v145;
            v146 = (void *)*((_QWORD *)v144 + 2);
            v147 = *((_QWORD *)v144 + 3);
            v149 = *((_QWORD *)v144 + 4);
            v148 = *((_QWORD *)v144 + 5);
            v192 = *((_QWORD *)v144 + 6);
            v195 = v141;
            v203 = *((_QWORD *)v144 + 7);
            v198 = v144[64];
            swift_bridgeObjectRetain(v145);
            sub_10003E1F0(v146, v147, v149, v148, v192, v203, v198);
            *((_QWORD *)v143 + 2) = v146;
            *((_QWORD *)v143 + 3) = v147;
            *((_QWORD *)v143 + 4) = v149;
            *((_QWORD *)v143 + 5) = v148;
            *((_QWORD *)v143 + 6) = v192;
            *((_QWORD *)v143 + 7) = v203;
            v143[64] = v198;
            *(_DWORD *)(v143 + 65) = *(_DWORD *)(v144 + 65);
            v150 = v144[120];
            if (v150 == 255)
            {
              v151 = *(_OWORD *)(v144 + 88);
              *(_OWORD *)(v143 + 72) = *(_OWORD *)(v144 + 72);
              *(_OWORD *)(v143 + 88) = v151;
              *(_OWORD *)(v143 + 104) = *(_OWORD *)(v144 + 104);
              v143[120] = v144[120];
            }
            else
            {
              v204 = v150 & 1;
              v155 = (void *)*((_QWORD *)v144 + 9);
              v156 = *((_QWORD *)v144 + 10);
              v157 = *((_QWORD *)v144 + 11);
              v158 = *((_QWORD *)v144 + 12);
              v199 = *((_QWORD *)v144 + 13);
              v193 = *((_QWORD *)v144 + 14);
              sub_10002B764(v155, v156, v157, v158, v199, v193, v150 & 1);
              *((_QWORD *)v143 + 9) = v155;
              *((_QWORD *)v143 + 10) = v156;
              *((_QWORD *)v143 + 11) = v157;
              *((_QWORD *)v143 + 12) = v158;
              *((_QWORD *)v143 + 13) = v199;
              *((_QWORD *)v143 + 14) = v193;
              v143[120] = v204;
            }
            v8 = v210;
            v11 = v212;
            v143[121] = v144[121];
            v141 = v195;
          }
          else
          {
            v152 = *((_OWORD *)v144 + 5);
            *((_OWORD *)v143 + 4) = *((_OWORD *)v144 + 4);
            *((_OWORD *)v143 + 5) = v152;
            *((_OWORD *)v143 + 6) = *((_OWORD *)v144 + 6);
            *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
            v153 = *((_OWORD *)v144 + 1);
            *(_OWORD *)v143 = *(_OWORD *)v144;
            *((_OWORD *)v143 + 1) = v153;
            v154 = *((_OWORD *)v144 + 3);
            *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
            *((_OWORD *)v143 + 3) = v154;
          }
          a1[v141[6]] = *((_BYTE *)a2 + v141[6]);
          a1[v141[7]] = *((_BYTE *)a2 + v141[7]);
          a1[v141[8]] = *((_BYTE *)a2 + v141[8]);
          a1[v141[9]] = *((_BYTE *)a2 + v141[9]);
          a1[v141[10]] = *((_BYTE *)a2 + v141[10]);
          v159 = v141[11];
          v160 = *(char **)((char *)a2 + v159);
          *(_QWORD *)&a1[v159] = v160;
          v161 = v160;
          v56 = a1;
          v57 = v11;
          v58 = 1;
          goto LABEL_102;
        case 2u:
          v205 = v8;
          v213 = v11;
          v24 = *a2;
          *(_QWORD *)a1 = *a2;
          v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v26 = (void **)&a1[v25];
          v27 = (void **)((char *)a2 + v25);
          v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v29 = *(_QWORD *)(v28 - 8);
          v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48);
          v31 = v24;
          if (v30(v27, 1, v28))
          {
            v32 = sub_10002A750(&qword_100644980);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
            v8 = v205;
            v33 = v213;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v27, v28))
            {
              case 1u:
                v71 = *v27;
                *v26 = *v27;
                v72 = v71;
                v73 = v26;
                v74 = v28;
                v75 = 1;
                goto LABEL_77;
              case 2u:
                v162 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v26, v27, v162);
                v73 = v26;
                v74 = v28;
                v75 = 2;
                goto LABEL_77;
              case 3u:
                v163 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v26, v27, v163);
                v73 = v26;
                v74 = v28;
                v75 = 3;
                goto LABEL_77;
              case 4u:
                v164 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v26, v27, v164);
                v73 = v26;
                v74 = v28;
                v75 = 4;
                goto LABEL_77;
              case 5u:
                v165 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v26, v27, v165);
                v73 = v26;
                v74 = v28;
                v75 = 5;
                goto LABEL_77;
              case 6u:
                v166 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v26, v27, v166);
                v73 = v26;
                v74 = v28;
                v75 = 6;
                goto LABEL_77;
              case 8u:
                v167 = *v27;
                *v26 = *v27;
                v168 = v167;
                v73 = v26;
                v74 = v28;
                v75 = 8;
                goto LABEL_77;
              case 9u:
                v169 = *v27;
                *v26 = *v27;
                v170 = v169;
                v73 = v26;
                v74 = v28;
                v75 = 9;
LABEL_77:
                swift_storeEnumTagMultiPayload(v73, v74, v75);
                break;
              default:
                memcpy(v26, v27, *(_QWORD *)(v29 + 64));
                break;
            }
            v33 = v213;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
            v8 = v205;
          }
          v56 = a1;
          v57 = v33;
          v58 = 2;
          goto LABEL_102;
        case 3u:
          v206 = v8;
          v214 = v11;
          v34 = *a2;
          *(_QWORD *)a1 = *a2;
          v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v36 = (void **)&a1[v35];
          v37 = (void **)((char *)a2 + v35);
          v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v39 = *(_QWORD *)(v38 - 8);
          v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48);
          v41 = v34;
          if (v40(v37, 1, v38))
          {
            v42 = sub_10002A750(&qword_100644980);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
            v8 = v206;
            v43 = v214;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v37, v38))
            {
              case 1u:
                v76 = *v37;
                *v36 = *v37;
                v77 = v76;
                v78 = v36;
                v79 = v38;
                v80 = 1;
                goto LABEL_99;
              case 2u:
                v171 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v36, v37, v171);
                v78 = v36;
                v79 = v38;
                v80 = 2;
                goto LABEL_99;
              case 3u:
                v172 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v36, v37, v172);
                v78 = v36;
                v79 = v38;
                v80 = 3;
                goto LABEL_99;
              case 4u:
                v173 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v36, v37, v173);
                v78 = v36;
                v79 = v38;
                v80 = 4;
                goto LABEL_99;
              case 5u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v36, v37, v188);
                v78 = v36;
                v79 = v38;
                v80 = 5;
                goto LABEL_99;
              case 6u:
                v174 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v36, v37, v174);
                v78 = v36;
                v79 = v38;
                v80 = 6;
                goto LABEL_99;
              case 8u:
                v175 = *v37;
                *v36 = *v37;
                v176 = v175;
                v78 = v36;
                v79 = v38;
                v80 = 8;
                goto LABEL_99;
              case 9u:
                v177 = *v37;
                *v36 = *v37;
                v178 = v177;
                v78 = v36;
                v79 = v38;
                v80 = 9;
LABEL_99:
                swift_storeEnumTagMultiPayload(v78, v79, v80);
                break;
              default:
                memcpy(v36, v37, *(_QWORD *)(v39 + 64));
                break;
            }
            v8 = v206;
            v43 = v214;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          }
          v56 = a1;
          v57 = v43;
          v58 = 3;
          goto LABEL_102;
        case 4u:
          v207 = v8;
          v215 = v11;
          v44 = *a2;
          *(_QWORD *)a1 = *a2;
          v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v46 = (void **)&a1[v45];
          v47 = (void **)((char *)a2 + v45);
          v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v49 = *(_QWORD *)(v48 - 8);
          v50 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48);
          v51 = v44;
          if (v50(v47, 1, v48))
          {
            v52 = sub_10002A750(&qword_100644980);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
            v8 = v207;
            v53 = v215;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v47, v48))
            {
              case 1u:
                v81 = *v47;
                *v46 = *v47;
                v82 = v81;
                v83 = v46;
                v84 = v48;
                v85 = 1;
                goto LABEL_95;
              case 2u:
                v179 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v46, v47, v179);
                v83 = v46;
                v84 = v48;
                v85 = 2;
                goto LABEL_95;
              case 3u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v46, v47, v180);
                v83 = v46;
                v84 = v48;
                v85 = 3;
                goto LABEL_95;
              case 4u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v46, v47, v181);
                v83 = v46;
                v84 = v48;
                v85 = 4;
                goto LABEL_95;
              case 5u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v46, v47, v182);
                v83 = v46;
                v84 = v48;
                v85 = 5;
                goto LABEL_95;
              case 6u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v46, v47, v183);
                v83 = v46;
                v84 = v48;
                v85 = 6;
                goto LABEL_95;
              case 8u:
                v184 = *v47;
                *v46 = *v47;
                v185 = v184;
                v83 = v46;
                v84 = v48;
                v85 = 8;
                goto LABEL_95;
              case 9u:
                v186 = *v47;
                *v46 = *v47;
                v187 = v186;
                v83 = v46;
                v84 = v48;
                v85 = 9;
LABEL_95:
                swift_storeEnumTagMultiPayload(v83, v84, v85);
                break;
              default:
                memcpy(v46, v47, *(_QWORD *)(v49 + 64));
                break;
            }
            v53 = v215;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
            v8 = v207;
          }
          v56 = a1;
          v57 = v53;
          v58 = 4;
          goto LABEL_102;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v54 = a2[2];
          *((_QWORD *)a1 + 2) = v54;
          v55 = v54;
          v56 = a1;
          v57 = v11;
          v58 = 5;
          goto LABEL_102;
        case 6u:
          v66 = *a2;
          *(_QWORD *)a1 = *a2;
          v67 = v66;
          v56 = a1;
          v57 = v11;
          v58 = 6;
          goto LABEL_102;
        case 7u:
          v59 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v60 = *(_QWORD *)(v59 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v60 + 48))(a2, 1, v59))
          {
            v61 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            v86 = *a2;
            *(_QWORD *)a1 = *a2;
            v87 = *(int *)(v59 + 20);
            v200 = &a1[v87];
            v208 = v8;
            v88 = (char *)a2 + v87;
            v216 = v11;
            v89 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v90 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v89 - 8) + 16);
            v91 = swift_bridgeObjectRetain(v86);
            v92 = v88;
            v8 = v208;
            v93 = v89;
            v11 = v216;
            v90(v200, v92, v93, v91);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(a1, 0, 1, v59);
          }
          v94 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v95 = &a1[v94];
          v96 = (char **)((char *)a2 + v94);
          v97 = v96[1];
          if (v97)
          {
            *(_QWORD *)v95 = *v96;
            *((_QWORD *)v95 + 1) = v97;
            v98 = (void *)v96[2];
            *((_QWORD *)v95 + 2) = v98;
            swift_bridgeObjectRetain(v97);
            v99 = v98;
          }
          else
          {
            *(_OWORD *)v95 = *(_OWORD *)v96;
            *((_QWORD *)v95 + 2) = v96[2];
          }
          v56 = a1;
          v57 = v11;
          v58 = 7;
          goto LABEL_102;
        case 8u:
          v68 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v69 = *(_QWORD *)(v68 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v69 + 48))(a2, 1, v68))
          {
            v70 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          }
          else
          {
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
            a1[*(int *)(v68 + 20)] = *((_BYTE *)a2 + *(int *)(v68 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(a1, 0, 1, v68);
          }
          v101 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v101 + 20)] = *(char **)((char *)a2 + *(int *)(v101 + 20));
          v56 = a1;
          v57 = v11;
          v58 = 8;
          goto LABEL_102;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v62 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v63 = &a1[v62];
          v64 = (char *)a2 + v62;
          v65 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          v56 = a1;
          v57 = v11;
          v58 = 9;
LABEL_102:
          swift_storeEnumTagMultiPayload(v56, v57, v58);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      a1[*(int *)(v7 + 48)] = *((_BYTE *)a2 + *(int *)(v7 + 48));
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void sub_100425100(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;

  v2 = sub_10002A750(&qword_10063F268);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a1, v3))
    {
      case 0u:
        v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v4))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1u:
        v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v5))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v6 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
            break;
          default:
            break;
        }
LABEL_24:
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v18 = (char *)a1 + *(int *)(v17 + 20);
        v19 = *((_QWORD *)v18 + 1);
        if (v19)
        {
          swift_bridgeObjectRelease(v19);
          sub_10003E2EC(*((void **)v18 + 2), *((_QWORD *)v18 + 3), *((_QWORD *)v18 + 4), *((_QWORD *)v18 + 5), *((_QWORD *)v18 + 6), *((_QWORD *)v18 + 7), v18[64]);
          v20 = v18[120];
          if (v20 != 255)
            sub_10002B328(*((void **)v18 + 9), *((_QWORD *)v18 + 10), *((_QWORD *)v18 + 11), *((_QWORD *)v18 + 12), *((_QWORD *)v18 + 13), *((_QWORD *)v18 + 14), v20 & 1);
        }
        v10 = *(id *)((char *)a1 + *(int *)(v17 + 44));
        goto LABEL_28;
      case 2u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v7))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:
        v10 = (id)*a1;
        goto LABEL_28;
      case 7u:
        v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1, 1, v11))
        {
          swift_bridgeObjectRelease(*a1);
          v12 = (char *)a1 + *(int *)(v11 + 20);
          v13 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        a1 = (_QWORD *)((char *)a1
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v14 = a1[1];
        if (!v14)
          return;
        swift_bridgeObjectRelease(v14);
LABEL_18:
        v10 = (id)a1[2];
LABEL_28:

        break;
      case 8u:
        v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(a1, 1, v15))
          return;
LABEL_20:
        v16 = type metadata accessor for Date(0);
LABEL_22:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
        break;
      case 9u:
        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v16 = type metadata accessor for AnyTip(0);
        goto LABEL_22;
      default:
        return;
    }
  }
}

void **sub_1004254C0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  unsigned __int8 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int *v193;
  unsigned __int8 v194;
  void *v195;
  char *v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v6 = sub_10002A750(&qword_10063F268);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10002A750(&qword_10064A080);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v9))
    {
      case 0u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v201 = a3;
        v209 = v9;
        switch(swift_getEnumCaseMultiPayload(a2, v10))
        {
          case 1u:
            v11 = *a2;
            *a1 = *a2;
            v12 = v11;
            v13 = a1;
            v14 = v10;
            v15 = 1;
            goto LABEL_43;
          case 2u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v13 = a1;
            v14 = v10;
            v15 = 2;
            goto LABEL_43;
          case 3u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v13 = a1;
            v14 = v10;
            v15 = 3;
            goto LABEL_43;
          case 4u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v13 = a1;
            v14 = v10;
            v15 = 4;
            goto LABEL_43;
          case 5u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
            v13 = a1;
            v14 = v10;
            v15 = 5;
            goto LABEL_43;
          case 6u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
            v13 = a1;
            v14 = v10;
            v15 = 6;
            goto LABEL_43;
          case 8u:
            v102 = *a2;
            *a1 = *a2;
            v103 = v102;
            v13 = a1;
            v14 = v10;
            v15 = 8;
            goto LABEL_43;
          case 9u:
            v104 = *a2;
            *a1 = *a2;
            v105 = v104;
            v13 = a1;
            v14 = v10;
            v15 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v13, v14, v15);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        v106 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v107 = v106[5];
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        v110 = *(uint64_t *)((char *)a2 + v107 + 8);
        if (v110)
        {
          v207 = v7;
          *(_QWORD *)v108 = *(_QWORD *)v109;
          *((_QWORD *)v108 + 1) = v110;
          v111 = (void *)*((_QWORD *)v109 + 2);
          v112 = *((_QWORD *)v109 + 3);
          v114 = *((_QWORD *)v109 + 4);
          v113 = *((_QWORD *)v109 + 5);
          v115 = *((_QWORD *)v109 + 7);
          v193 = v106;
          v197 = *((_QWORD *)v109 + 6);
          v189 = v109[64];
          swift_bridgeObjectRetain(v110);
          sub_10003E1F0(v111, v112, v114, v113, v197, v115, v189);
          *((_QWORD *)v108 + 2) = v111;
          *((_QWORD *)v108 + 3) = v112;
          *((_QWORD *)v108 + 4) = v114;
          *((_QWORD *)v108 + 5) = v113;
          *((_QWORD *)v108 + 6) = v197;
          *((_QWORD *)v108 + 7) = v115;
          v108[64] = v189;
          *(_DWORD *)(v108 + 65) = *(_DWORD *)(v109 + 65);
          v116 = v109[120];
          if (v116 == 255)
          {
            v117 = *(_OWORD *)(v109 + 88);
            *(_OWORD *)(v108 + 72) = *(_OWORD *)(v109 + 72);
            *(_OWORD *)(v108 + 88) = v117;
            *(_OWORD *)(v108 + 104) = *(_OWORD *)(v109 + 104);
            v108[120] = v109[120];
          }
          else
          {
            v198 = v116 & 1;
            v123 = (void *)*((_QWORD *)v109 + 9);
            v122 = *((_QWORD *)v109 + 10);
            v124 = *((_QWORD *)v109 + 11);
            v125 = *((_QWORD *)v109 + 12);
            v126 = *((_QWORD *)v109 + 13);
            v190 = *((_QWORD *)v109 + 14);
            sub_10002B764(v123, v122, v124, v125, v126, v190, v116 & 1);
            *((_QWORD *)v108 + 9) = v123;
            *((_QWORD *)v108 + 10) = v122;
            *((_QWORD *)v108 + 11) = v124;
            *((_QWORD *)v108 + 12) = v125;
            *((_QWORD *)v108 + 13) = v126;
            *((_QWORD *)v108 + 14) = v190;
            v108[120] = v198;
          }
          a3 = v201;
          v7 = v207;
          v121 = v209;
          v108[121] = v109[121];
          v106 = v193;
        }
        else
        {
          v118 = *((_OWORD *)v109 + 5);
          *((_OWORD *)v108 + 4) = *((_OWORD *)v109 + 4);
          *((_OWORD *)v108 + 5) = v118;
          *((_OWORD *)v108 + 6) = *((_OWORD *)v109 + 6);
          *(_OWORD *)(v108 + 106) = *(_OWORD *)(v109 + 106);
          v119 = *((_OWORD *)v109 + 1);
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_OWORD *)v108 + 1) = v119;
          v120 = *((_OWORD *)v109 + 3);
          *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
          *((_OWORD *)v108 + 3) = v120;
          v121 = v9;
        }
        *((_BYTE *)a1 + v106[6]) = *((_BYTE *)a2 + v106[6]);
        *((_BYTE *)a1 + v106[7]) = *((_BYTE *)a2 + v106[7]);
        *((_BYTE *)a1 + v106[8]) = *((_BYTE *)a2 + v106[8]);
        *((_BYTE *)a1 + v106[9]) = *((_BYTE *)a2 + v106[9]);
        *((_BYTE *)a1 + v106[10]) = *((_BYTE *)a2 + v106[10]);
        v127 = v106[11];
        v128 = *(void **)((char *)a2 + v127);
        *(void **)((char *)a1 + v127) = v128;
        v129 = v128;
        v51 = a1;
        v52 = v121;
        v53 = 0;
        goto LABEL_100;
      case 1u:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v202 = a3;
        v210 = v9;
        switch(swift_getEnumCaseMultiPayload(a2, v16))
        {
          case 1u:
            v17 = *a2;
            *a1 = *a2;
            v18 = v17;
            v19 = a1;
            v20 = v16;
            v21 = 1;
            goto LABEL_59;
          case 2u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v19 = a1;
            v20 = v16;
            v21 = 2;
            goto LABEL_59;
          case 3u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v19 = a1;
            v20 = v16;
            v21 = 3;
            goto LABEL_59;
          case 4u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v19 = a1;
            v20 = v16;
            v21 = 4;
            goto LABEL_59;
          case 5u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v19 = a1;
            v20 = v16;
            v21 = 5;
            goto LABEL_59;
          case 6u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v19 = a1;
            v20 = v16;
            v21 = 6;
            goto LABEL_59;
          case 8u:
            v135 = *a2;
            *a1 = *a2;
            v136 = v135;
            v19 = a1;
            v20 = v16;
            v21 = 8;
            goto LABEL_59;
          case 9u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v19 = a1;
            v20 = v16;
            v21 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        v139 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v140 = v139[5];
        v141 = (char *)a1 + v140;
        v142 = (char *)a2 + v140;
        v143 = *(uint64_t *)((char *)a2 + v140 + 8);
        if (v143)
        {
          v208 = v7;
          *(_QWORD *)v141 = *(_QWORD *)v142;
          *((_QWORD *)v141 + 1) = v143;
          v144 = (void *)*((_QWORD *)v142 + 2);
          v145 = *((_QWORD *)v142 + 3);
          v146 = *((_QWORD *)v142 + 4);
          v147 = *((_QWORD *)v142 + 5);
          v191 = *((_QWORD *)v142 + 6);
          v199 = *((_QWORD *)v142 + 7);
          v194 = v142[64];
          swift_bridgeObjectRetain(v143);
          sub_10003E1F0(v144, v145, v146, v147, v191, v199, v194);
          *((_QWORD *)v141 + 2) = v144;
          *((_QWORD *)v141 + 3) = v145;
          *((_QWORD *)v141 + 4) = v146;
          *((_QWORD *)v141 + 5) = v147;
          *((_QWORD *)v141 + 6) = v191;
          *((_QWORD *)v141 + 7) = v199;
          v141[64] = v194;
          *(_DWORD *)(v141 + 65) = *(_DWORD *)(v142 + 65);
          v148 = v142[120];
          if (v148 == 255)
          {
            v149 = *(_OWORD *)(v142 + 88);
            *(_OWORD *)(v141 + 72) = *(_OWORD *)(v142 + 72);
            *(_OWORD *)(v141 + 88) = v149;
            *(_OWORD *)(v141 + 104) = *(_OWORD *)(v142 + 104);
            v141[120] = v142[120];
          }
          else
          {
            v200 = v148 & 1;
            v154 = *((_QWORD *)v142 + 10);
            v155 = *((_QWORD *)v142 + 11);
            v156 = *((_QWORD *)v142 + 12);
            v157 = *((_QWORD *)v142 + 13);
            v192 = *((_QWORD *)v142 + 14);
            v195 = (void *)*((_QWORD *)v142 + 9);
            sub_10002B764(v195, v154, v155, v156, v157, v192, v148 & 1);
            *((_QWORD *)v141 + 9) = v195;
            *((_QWORD *)v141 + 10) = v154;
            *((_QWORD *)v141 + 11) = v155;
            *((_QWORD *)v141 + 12) = v156;
            *((_QWORD *)v141 + 13) = v157;
            *((_QWORD *)v141 + 14) = v192;
            v141[120] = v200;
          }
          a3 = v202;
          v7 = v208;
          v153 = v210;
          v141[121] = v142[121];
        }
        else
        {
          v150 = *((_OWORD *)v142 + 5);
          *((_OWORD *)v141 + 4) = *((_OWORD *)v142 + 4);
          *((_OWORD *)v141 + 5) = v150;
          *((_OWORD *)v141 + 6) = *((_OWORD *)v142 + 6);
          *(_OWORD *)(v141 + 106) = *(_OWORD *)(v142 + 106);
          v151 = *((_OWORD *)v142 + 1);
          *(_OWORD *)v141 = *(_OWORD *)v142;
          *((_OWORD *)v141 + 1) = v151;
          v152 = *((_OWORD *)v142 + 3);
          *((_OWORD *)v141 + 2) = *((_OWORD *)v142 + 2);
          *((_OWORD *)v141 + 3) = v152;
          v153 = v210;
        }
        *((_BYTE *)a1 + v139[6]) = *((_BYTE *)a2 + v139[6]);
        *((_BYTE *)a1 + v139[7]) = *((_BYTE *)a2 + v139[7]);
        *((_BYTE *)a1 + v139[8]) = *((_BYTE *)a2 + v139[8]);
        *((_BYTE *)a1 + v139[9]) = *((_BYTE *)a2 + v139[9]);
        *((_BYTE *)a1 + v139[10]) = *((_BYTE *)a2 + v139[10]);
        v158 = v139[11];
        v159 = *(void **)((char *)a2 + v158);
        *(void **)((char *)a1 + v158) = v159;
        v160 = v159;
        v51 = a1;
        v52 = v153;
        v53 = 1;
        goto LABEL_100;
      case 2u:
        v203 = v7;
        v211 = v9;
        v22 = *a2;
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (void **)((char *)a1 + v23);
        v25 = (void **)((char *)a2 + v23);
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
        v29 = v22;
        if (v28(v25, 1, v26))
        {
          v30 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 1u:
              v66 = *v25;
              *v24 = *v25;
              v67 = v66;
              v68 = v24;
              v69 = v26;
              v70 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v24, v25, v161);
              v68 = v24;
              v69 = v26;
              v70 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v24, v25, v162);
              v68 = v24;
              v69 = v26;
              v70 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v24, v25, v163);
              v68 = v24;
              v69 = v26;
              v70 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v24, v25, v164);
              v68 = v24;
              v69 = v26;
              v70 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v24, v25, v165);
              v68 = v24;
              v69 = v26;
              v70 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v25;
              *v24 = *v25;
              v167 = v166;
              v68 = v24;
              v69 = v26;
              v70 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v25;
              *v24 = *v25;
              v169 = v168;
              v68 = v24;
              v69 = v26;
              v70 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v68, v69, v70);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v7 = v203;
        v52 = v211;
        v51 = a1;
        v53 = 2;
        goto LABEL_100;
      case 3u:
        v204 = v7;
        v212 = v9;
        v31 = *a2;
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v33 = (void **)((char *)a1 + v32);
        v34 = (void **)((char *)a2 + v32);
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
        v38 = v31;
        if (v37(v34, 1, v35))
        {
          v39 = sub_10002A750(&qword_100644980);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          v7 = v204;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v34, v35))
          {
            case 1u:
              v71 = *v34;
              *v33 = *v34;
              v72 = v71;
              v73 = v33;
              v74 = v35;
              v75 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v33, v34, v170);
              v73 = v33;
              v74 = v35;
              v75 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v33, v34, v171);
              v73 = v33;
              v74 = v35;
              v75 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v33, v34, v172);
              v73 = v33;
              v74 = v35;
              v75 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v33, v34, v187);
              v73 = v33;
              v74 = v35;
              v75 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v33, v34, v173);
              v73 = v33;
              v74 = v35;
              v75 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v34;
              *v33 = *v34;
              v175 = v174;
              v73 = v33;
              v74 = v35;
              v75 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v34;
              *v33 = *v34;
              v177 = v176;
              v73 = v33;
              v74 = v35;
              v75 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
              break;
          }
          v7 = v204;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v51 = a1;
        v52 = v212;
        v53 = 3;
        goto LABEL_100;
      case 4u:
        v205 = v7;
        v213 = v9;
        v40 = *a2;
        *a1 = *a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v42 = (void **)((char *)a1 + v41);
        v43 = (void **)((char *)a2 + v41);
        v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
        v47 = v40;
        if (v46(v43, 1, v44))
        {
          v48 = sub_10002A750(&qword_100644980);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v43, v44))
          {
            case 1u:
              v76 = *v43;
              *v42 = *v43;
              v77 = v76;
              v78 = v42;
              v79 = v44;
              v80 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v42, v43, v178);
              v78 = v42;
              v79 = v44;
              v80 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v42, v43, v179);
              v78 = v42;
              v79 = v44;
              v80 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v42, v43, v180);
              v78 = v42;
              v79 = v44;
              v80 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v42, v43, v181);
              v78 = v42;
              v79 = v44;
              v80 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v42, v43, v182);
              v78 = v42;
              v79 = v44;
              v80 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v43;
              *v42 = *v43;
              v184 = v183;
              v78 = v42;
              v79 = v44;
              v80 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v43;
              *v42 = *v43;
              v186 = v185;
              v78 = v42;
              v79 = v44;
              v80 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v78, v79, v80);
              break;
            default:
              memcpy(v42, v43, *(_QWORD *)(v45 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        v7 = v205;
        v52 = v213;
        v51 = a1;
        v53 = 4;
        goto LABEL_100;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v49 = a2[2];
        a1[2] = v49;
        v50 = v49;
        v51 = a1;
        v52 = v9;
        v53 = 5;
        goto LABEL_100;
      case 6u:
        v61 = *a2;
        *a1 = *a2;
        v62 = v61;
        v51 = a1;
        v52 = v9;
        v53 = 6;
        goto LABEL_100;
      case 7u:
        v54 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v55 = *(_QWORD *)(v54 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v55 + 48))(a2, 1, v54))
        {
          v56 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v81 = *a2;
          *a1 = *a2;
          v82 = *(int *)(v54 + 20);
          v206 = (char *)a1 + v82;
          v196 = (char *)a2 + v82;
          v214 = v9;
          v83 = v7;
          v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v85 = a3;
          v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
          v87 = swift_bridgeObjectRetain(v81);
          v88 = v84;
          v7 = v83;
          v9 = v214;
          v86(v206, v196, v88, v87);
          a3 = v85;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v54);
        }
        v89 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v90 = (void **)((char *)a1 + v89);
        v91 = (void **)((char *)a2 + v89);
        v92 = v91[1];
        if (v92)
        {
          *v90 = *v91;
          v90[1] = v92;
          v93 = (void *)v91[2];
          v90[2] = v93;
          swift_bridgeObjectRetain(v92);
          v94 = v93;
        }
        else
        {
          *(_OWORD *)v90 = *(_OWORD *)v91;
          v90[2] = v91[2];
        }
        v51 = a1;
        v52 = v9;
        v53 = 7;
        goto LABEL_100;
      case 8u:
        v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
        {
          v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          *((_BYTE *)a1 + *(int *)(v63 + 20)) = *((_BYTE *)a2 + *(int *)(v63 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
        }
        v96 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v96 + 20)) = *(void **)((char *)a2 + *(int *)(v96 + 20));
        v51 = a1;
        v52 = v9;
        v53 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
        v51 = a1;
        v52 = v9;
        v53 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v51, v52, v53);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **sub_10042654C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void **v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(void **, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void **v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(void **, uint64_t, uint64_t);
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(void **, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void **v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(void **, uint64_t, uint64_t);
  id v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void **v108;
  void **v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(void **, uint64_t, uint64_t);
  id v113;
  uint64_t v114;
  void *v115;
  id v116;
  void **v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void *v127;
  id v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  id v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void **v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, char *, uint64_t, __n128);
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  void *v153;
  id v154;
  __int128 v155;
  void *v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  id v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void **v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  id v174;
  void **v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  void (*v183)(char *, char *, uint64_t, __n128);
  __n128 v184;
  char *v185;
  char *v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t v190;
  void *v191;
  id v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  id v202;
  void *v203;
  id v204;
  int *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  id v237;
  void *v238;
  id v239;
  int *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  id v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  id v272;
  void *v273;
  id v274;
  int *v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  uint64_t v295;
  void *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  void *v302;
  id v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  id v310;
  void *v311;
  id v312;
  int *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  int v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  uint64_t v333;
  void *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  id v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  id v348;
  void *v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  void *v356;
  id v357;
  void *v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  void *v365;
  id v366;
  void *v367;
  id v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  void *v374;
  id v375;
  void *v376;
  id v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  void *v385;
  id v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  void *v392;
  id v393;
  void *v394;
  id v395;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int *v401;
  int *v402;
  unsigned __int8 v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unsigned __int8 v407;
  uint64_t v408;
  unsigned __int8 v409;
  uint64_t v410;
  int *v411;
  int *v412;
  char *v413;
  uint64_t v414;
  char v415;
  uint64_t v416;
  char v417;
  uint64_t v418;
  char v419;
  unsigned __int8 v420;
  char v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;

  v6 = sub_10002A750(&qword_10063F268);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v11))
      {
        case 0u:
          v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v431 = v11;
          switch(swift_getEnumCaseMultiPayload(a2, v12))
          {
            case 1u:
              v13 = *a2;
              *a1 = *a2;
              v14 = v13;
              v15 = a1;
              v16 = v12;
              v17 = 1;
              goto LABEL_79;
            case 2u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(a1, a2, v196);
              v15 = a1;
              v16 = v12;
              v17 = 2;
              goto LABEL_79;
            case 3u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(a1, a2, v197);
              v15 = a1;
              v16 = v12;
              v17 = 3;
              goto LABEL_79;
            case 4u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(a1, a2, v198);
              v15 = a1;
              v16 = v12;
              v17 = 4;
              goto LABEL_79;
            case 5u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(a1, a2, v199);
              v15 = a1;
              v16 = v12;
              v17 = 5;
              goto LABEL_79;
            case 6u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(a1, a2, v200);
              v15 = a1;
              v16 = v12;
              v17 = 6;
              goto LABEL_79;
            case 8u:
              v201 = *a2;
              *a1 = *a2;
              v202 = v201;
              v15 = a1;
              v16 = v12;
              v17 = 8;
              goto LABEL_79;
            case 9u:
              v203 = *a2;
              *a1 = *a2;
              v204 = v203;
              v15 = a1;
              v16 = v12;
              v17 = 9;
LABEL_79:
              swift_storeEnumTagMultiPayload(v15, v16, v17);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
              break;
          }
          v205 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v206 = v205[5];
          v207 = (char *)a1 + v206;
          v208 = (char *)a2 + v206;
          if (*(void **)((char *)a2 + v206 + 8))
          {
            v401 = v205;
            v427 = a3;
            *(_QWORD *)v207 = *(_QWORD *)v208;
            v209 = *((_QWORD *)v208 + 1);
            *((_QWORD *)v207 + 1) = v209;
            v210 = (void *)*((_QWORD *)v208 + 2);
            v211 = *((_QWORD *)v208 + 3);
            v213 = *((_QWORD *)v208 + 4);
            v212 = *((_QWORD *)v208 + 5);
            v397 = *((_QWORD *)v208 + 6);
            v414 = *((_QWORD *)v208 + 7);
            v407 = v208[64];
            swift_bridgeObjectRetain(v209);
            sub_10003E1F0(v210, v211, v213, v212, v397, v414, v407);
            *((_QWORD *)v207 + 2) = v210;
            *((_QWORD *)v207 + 3) = v211;
            *((_QWORD *)v207 + 4) = v213;
            *((_QWORD *)v207 + 5) = v212;
            *((_QWORD *)v207 + 6) = v397;
            *((_QWORD *)v207 + 7) = v414;
            v207[64] = v407;
            v207[65] = v208[65];
            v207[66] = v208[66];
            v207[67] = v208[67];
            v207[68] = v208[68];
            v214 = v208[120];
            if (v214 == 255)
            {
              v215 = *(_OWORD *)(v208 + 72);
              v216 = *(_OWORD *)(v208 + 88);
              v217 = *(_OWORD *)(v208 + 104);
              v207[120] = v208[120];
              *(_OWORD *)(v207 + 88) = v216;
              *(_OWORD *)(v207 + 104) = v217;
              *(_OWORD *)(v207 + 72) = v215;
            }
            else
            {
              v415 = v214 & 1;
              v224 = (void *)*((_QWORD *)v208 + 9);
              v408 = *((_QWORD *)v208 + 10);
              v225 = *((_QWORD *)v208 + 11);
              v226 = *((_QWORD *)v208 + 12);
              v227 = *((_QWORD *)v208 + 13);
              v398 = *((_QWORD *)v208 + 14);
              sub_10002B764(v224, v408, v225, v226, v227, v398, v214 & 1);
              *((_QWORD *)v207 + 9) = v224;
              *((_QWORD *)v207 + 10) = v408;
              *((_QWORD *)v207 + 11) = v225;
              *((_QWORD *)v207 + 12) = v226;
              *((_QWORD *)v207 + 13) = v227;
              *((_QWORD *)v207 + 14) = v398;
              v207[120] = v415;
            }
            a3 = v427;
            v11 = v431;
            v207[121] = v208[121];
            v205 = v401;
          }
          else
          {
            v218 = *(_OWORD *)v208;
            v219 = *((_OWORD *)v208 + 1);
            v220 = *((_OWORD *)v208 + 3);
            *((_OWORD *)v207 + 2) = *((_OWORD *)v208 + 2);
            *((_OWORD *)v207 + 3) = v220;
            *(_OWORD *)v207 = v218;
            *((_OWORD *)v207 + 1) = v219;
            v221 = *((_OWORD *)v208 + 4);
            v222 = *((_OWORD *)v208 + 5);
            v223 = *((_OWORD *)v208 + 6);
            *(_OWORD *)(v207 + 106) = *(_OWORD *)(v208 + 106);
            *((_OWORD *)v207 + 5) = v222;
            *((_OWORD *)v207 + 6) = v223;
            *((_OWORD *)v207 + 4) = v221;
          }
          *((_BYTE *)a1 + v205[6]) = *((_BYTE *)a2 + v205[6]);
          *((_BYTE *)a1 + v205[7]) = *((_BYTE *)a2 + v205[7]);
          *((_BYTE *)a1 + v205[8]) = *((_BYTE *)a2 + v205[8]);
          *((_BYTE *)a1 + v205[9]) = *((_BYTE *)a2 + v205[9]);
          *((_BYTE *)a1 + v205[10]) = *((_BYTE *)a2 + v205[10]);
          v228 = v205[11];
          v229 = *(void **)((char *)a2 + v228);
          *(void **)((char *)a1 + v228) = v229;
          v230 = v229;
          v64 = a1;
          v65 = v11;
          v66 = 0;
          goto LABEL_168;
        case 1u:
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v433 = v11;
          switch(swift_getEnumCaseMultiPayload(a2, v26))
          {
            case 1u:
              v27 = *a2;
              *a1 = *a2;
              v28 = v27;
              v29 = a1;
              v30 = v26;
              v31 = 1;
              goto LABEL_95;
            case 2u:
              v231 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(a1, a2, v231);
              v29 = a1;
              v30 = v26;
              v31 = 2;
              goto LABEL_95;
            case 3u:
              v232 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(a1, a2, v232);
              v29 = a1;
              v30 = v26;
              v31 = 3;
              goto LABEL_95;
            case 4u:
              v233 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(a1, a2, v233);
              v29 = a1;
              v30 = v26;
              v31 = 4;
              goto LABEL_95;
            case 5u:
              v234 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(a1, a2, v234);
              v29 = a1;
              v30 = v26;
              v31 = 5;
              goto LABEL_95;
            case 6u:
              v235 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v235 - 8) + 16))(a1, a2, v235);
              v29 = a1;
              v30 = v26;
              v31 = 6;
              goto LABEL_95;
            case 8u:
              v236 = *a2;
              *a1 = *a2;
              v237 = v236;
              v29 = a1;
              v30 = v26;
              v31 = 8;
              goto LABEL_95;
            case 9u:
              v238 = *a2;
              *a1 = *a2;
              v239 = v238;
              v29 = a1;
              v30 = v26;
              v31 = 9;
LABEL_95:
              swift_storeEnumTagMultiPayload(v29, v30, v31);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
              break;
          }
          v240 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v241 = v240[5];
          v242 = (char *)a1 + v241;
          v243 = (char *)a2 + v241;
          if (*(void **)((char *)a2 + v241 + 8))
          {
            v402 = v240;
            v428 = a3;
            *(_QWORD *)v242 = *(_QWORD *)v243;
            v244 = *((_QWORD *)v243 + 1);
            *((_QWORD *)v242 + 1) = v244;
            v245 = (void *)*((_QWORD *)v243 + 2);
            v246 = *((_QWORD *)v243 + 3);
            v248 = *((_QWORD *)v243 + 4);
            v247 = *((_QWORD *)v243 + 5);
            v399 = *((_QWORD *)v243 + 6);
            v416 = *((_QWORD *)v243 + 7);
            v409 = v243[64];
            swift_bridgeObjectRetain(v244);
            sub_10003E1F0(v245, v246, v248, v247, v399, v416, v409);
            *((_QWORD *)v242 + 2) = v245;
            *((_QWORD *)v242 + 3) = v246;
            *((_QWORD *)v242 + 4) = v248;
            *((_QWORD *)v242 + 5) = v247;
            *((_QWORD *)v242 + 6) = v399;
            *((_QWORD *)v242 + 7) = v416;
            v242[64] = v409;
            v242[65] = v243[65];
            v242[66] = v243[66];
            v242[67] = v243[67];
            v242[68] = v243[68];
            v249 = v243[120];
            if (v249 == 255)
            {
              v250 = *(_OWORD *)(v243 + 72);
              v251 = *(_OWORD *)(v243 + 88);
              v252 = *(_OWORD *)(v243 + 104);
              v242[120] = v243[120];
              *(_OWORD *)(v242 + 88) = v251;
              *(_OWORD *)(v242 + 104) = v252;
              *(_OWORD *)(v242 + 72) = v250;
            }
            else
            {
              v417 = v249 & 1;
              v259 = (void *)*((_QWORD *)v243 + 9);
              v410 = *((_QWORD *)v243 + 10);
              v260 = *((_QWORD *)v243 + 11);
              v261 = *((_QWORD *)v243 + 12);
              v262 = *((_QWORD *)v243 + 13);
              v400 = *((_QWORD *)v243 + 14);
              sub_10002B764(v259, v410, v260, v261, v262, v400, v249 & 1);
              *((_QWORD *)v242 + 9) = v259;
              *((_QWORD *)v242 + 10) = v410;
              *((_QWORD *)v242 + 11) = v260;
              *((_QWORD *)v242 + 12) = v261;
              *((_QWORD *)v242 + 13) = v262;
              *((_QWORD *)v242 + 14) = v400;
              v242[120] = v417;
            }
            a3 = v428;
            v11 = v433;
            v242[121] = v243[121];
            v240 = v402;
          }
          else
          {
            v253 = *(_OWORD *)v243;
            v254 = *((_OWORD *)v243 + 1);
            v255 = *((_OWORD *)v243 + 3);
            *((_OWORD *)v242 + 2) = *((_OWORD *)v243 + 2);
            *((_OWORD *)v242 + 3) = v255;
            *(_OWORD *)v242 = v253;
            *((_OWORD *)v242 + 1) = v254;
            v256 = *((_OWORD *)v243 + 4);
            v257 = *((_OWORD *)v243 + 5);
            v258 = *((_OWORD *)v243 + 6);
            *(_OWORD *)(v242 + 106) = *(_OWORD *)(v243 + 106);
            *((_OWORD *)v242 + 5) = v257;
            *((_OWORD *)v242 + 6) = v258;
            *((_OWORD *)v242 + 4) = v256;
          }
          *((_BYTE *)a1 + v240[6]) = *((_BYTE *)a2 + v240[6]);
          *((_BYTE *)a1 + v240[7]) = *((_BYTE *)a2 + v240[7]);
          *((_BYTE *)a1 + v240[8]) = *((_BYTE *)a2 + v240[8]);
          *((_BYTE *)a1 + v240[9]) = *((_BYTE *)a2 + v240[9]);
          *((_BYTE *)a1 + v240[10]) = *((_BYTE *)a2 + v240[10]);
          v263 = v240[11];
          v264 = *(void **)((char *)a2 + v263);
          *(void **)((char *)a1 + v263) = v264;
          v265 = v264;
          v64 = a1;
          v65 = v11;
          v66 = 1;
          goto LABEL_168;
        case 2u:
          v422 = a3;
          v434 = v11;
          v32 = *a2;
          *a1 = *a2;
          v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v34 = (void **)((char *)a1 + v33);
          v35 = (void **)((char *)a2 + v33);
          v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v37 = *(_QWORD *)(v36 - 8);
          v38 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48);
          v39 = v32;
          if (v38(v35, 1, v36))
          {
            v40 = sub_10002A750(&qword_100644980);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
            a3 = v422;
            v41 = v434;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v35, v36))
            {
              case 1u:
                v127 = *v35;
                *v34 = *v35;
                v128 = v127;
                v129 = v34;
                v130 = v36;
                v131 = 1;
                goto LABEL_143;
              case 2u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v34, v35, v342);
                v129 = v34;
                v130 = v36;
                v131 = 2;
                goto LABEL_143;
              case 3u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v34, v35, v343);
                v129 = v34;
                v130 = v36;
                v131 = 3;
                goto LABEL_143;
              case 4u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v34, v35, v344);
                v129 = v34;
                v130 = v36;
                v131 = 4;
                goto LABEL_143;
              case 5u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v34, v35, v345);
                v129 = v34;
                v130 = v36;
                v131 = 5;
                goto LABEL_143;
              case 6u:
                v346 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v34, v35, v346);
                v129 = v34;
                v130 = v36;
                v131 = 6;
                goto LABEL_143;
              case 8u:
                v347 = *v35;
                *v34 = *v35;
                v348 = v347;
                v129 = v34;
                v130 = v36;
                v131 = 8;
                goto LABEL_143;
              case 9u:
                v349 = *v35;
                *v34 = *v35;
                v350 = v349;
                v129 = v34;
                v130 = v36;
                v131 = 9;
LABEL_143:
                swift_storeEnumTagMultiPayload(v129, v130, v131);
                break;
              default:
                memcpy(v34, v35, *(_QWORD *)(v37 + 64));
                break;
            }
            a3 = v422;
            v41 = v434;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          v64 = a1;
          v65 = v41;
          v66 = 2;
          goto LABEL_168;
        case 3u:
          v423 = a3;
          v435 = v11;
          v42 = *a2;
          *a1 = *a2;
          v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v44 = (void **)((char *)a1 + v43);
          v45 = (void **)((char *)a2 + v43);
          v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v47 = *(_QWORD *)(v46 - 8);
          v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
          v49 = v42;
          if (v48(v45, 1, v46))
          {
            v50 = sub_10002A750(&qword_100644980);
            memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            a3 = v423;
            v51 = v435;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v45, v46))
            {
              case 1u:
                v132 = *v45;
                *v44 = *v45;
                v133 = v132;
                v134 = v44;
                v135 = v46;
                v136 = 1;
                goto LABEL_154;
              case 2u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v44, v45, v351);
                v134 = v44;
                v135 = v46;
                v136 = 2;
                goto LABEL_154;
              case 3u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v44, v45, v352);
                v134 = v44;
                v135 = v46;
                v136 = 3;
                goto LABEL_154;
              case 4u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v44, v45, v353);
                v134 = v44;
                v135 = v46;
                v136 = 4;
                goto LABEL_154;
              case 5u:
                v354 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v44, v45, v354);
                v134 = v44;
                v135 = v46;
                v136 = 5;
                goto LABEL_154;
              case 6u:
                v355 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v44, v45, v355);
                v134 = v44;
                v135 = v46;
                v136 = 6;
                goto LABEL_154;
              case 8u:
                v356 = *v45;
                *v44 = *v45;
                v357 = v356;
                v134 = v44;
                v135 = v46;
                v136 = 8;
                goto LABEL_154;
              case 9u:
                v358 = *v45;
                *v44 = *v45;
                v359 = v358;
                v134 = v44;
                v135 = v46;
                v136 = 9;
LABEL_154:
                swift_storeEnumTagMultiPayload(v134, v135, v136);
                break;
              default:
                memcpy(v44, v45, *(_QWORD *)(v47 + 64));
                break;
            }
            a3 = v423;
            v51 = v435;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
          }
          v64 = a1;
          v65 = v51;
          v66 = 3;
          goto LABEL_168;
        case 4u:
          v424 = a3;
          v436 = v11;
          v52 = *a2;
          *a1 = *a2;
          v53 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v54 = (void **)((char *)a1 + v53);
          v55 = (void **)((char *)a2 + v53);
          v56 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v57 = *(_QWORD *)(v56 - 8);
          v58 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v57 + 48);
          v59 = v52;
          if (v58(v55, 1, v56))
          {
            v60 = sub_10002A750(&qword_100644980);
            memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
            a3 = v424;
            v61 = v436;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v55, v56))
            {
              case 1u:
                v137 = *v55;
                *v54 = *v55;
                v138 = v137;
                v139 = v54;
                v140 = v56;
                v141 = 1;
                goto LABEL_165;
              case 2u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v54, v55, v360);
                v139 = v54;
                v140 = v56;
                v141 = 2;
                goto LABEL_165;
              case 3u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v54, v55, v361);
                v139 = v54;
                v140 = v56;
                v141 = 3;
                goto LABEL_165;
              case 4u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v54, v55, v362);
                v139 = v54;
                v140 = v56;
                v141 = 4;
                goto LABEL_165;
              case 5u:
                v363 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v54, v55, v363);
                v139 = v54;
                v140 = v56;
                v141 = 5;
                goto LABEL_165;
              case 6u:
                v364 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v54, v55, v364);
                v139 = v54;
                v140 = v56;
                v141 = 6;
                goto LABEL_165;
              case 8u:
                v365 = *v55;
                *v54 = *v55;
                v366 = v365;
                v139 = v54;
                v140 = v56;
                v141 = 8;
                goto LABEL_165;
              case 9u:
                v367 = *v55;
                *v54 = *v55;
                v368 = v367;
                v139 = v54;
                v140 = v56;
                v141 = 9;
LABEL_165:
                swift_storeEnumTagMultiPayload(v139, v140, v141);
                break;
              default:
                memcpy(v54, v55, *(_QWORD *)(v57 + 64));
                break;
            }
            a3 = v424;
            v61 = v436;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
          }
          v64 = a1;
          v65 = v61;
          v66 = 4;
          goto LABEL_168;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v62 = a2[2];
          a1[2] = v62;
          v63 = v62;
          v64 = a1;
          v65 = v11;
          v66 = 5;
          goto LABEL_168;
        case 6u:
          v74 = *a2;
          *a1 = *a2;
          v75 = v74;
          v64 = a1;
          v65 = v11;
          v66 = 6;
          goto LABEL_168;
        case 7u:
          v67 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v68 + 48))(a2, 1, v67))
          {
            v69 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            v142 = *a2;
            *a1 = *a2;
            v143 = *(int *)(v67 + 20);
            v413 = (char *)a2 + v143;
            v425 = (char *)a1 + v143;
            v441 = v11;
            v144 = a3;
            v145 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v146 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v145 - 8) + 16);
            v147 = swift_bridgeObjectRetain(v142);
            v148 = v145;
            a3 = v144;
            v11 = v441;
            v146(v425, v413, v148, v147);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v68 + 56))(a1, 0, 1, v67);
          }
          v149 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v150 = (void **)((char *)a1 + v149);
          v151 = (void **)((char *)a2 + v149);
          if (v151[1])
          {
            *v150 = *v151;
            v152 = v151[1];
            v150[1] = v152;
            v153 = (void *)v151[2];
            v150[2] = v153;
            swift_bridgeObjectRetain(v152);
            v154 = v153;
          }
          else
          {
            v155 = *(_OWORD *)v151;
            v150[2] = v151[2];
            *(_OWORD *)v150 = v155;
          }
          v64 = a1;
          v65 = v11;
          v66 = 7;
          goto LABEL_168;
        case 8u:
          v76 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v77 = *(_QWORD *)(v76 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48))(a2, 1, v76))
          {
            v78 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            v161 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(a1, a2, v161);
            *((_BYTE *)a1 + *(int *)(v76 + 20)) = *((_BYTE *)a2 + *(int *)(v76 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(a1, 0, 1, v76);
          }
          v162 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v162 + 20)) = *(void **)((char *)a2 + *(int *)(v162 + 20));
          v64 = a1;
          v65 = v11;
          v66 = 8;
          goto LABEL_168;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v70 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v71 = (char *)a1 + v70;
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
          v64 = a1;
          v65 = v11;
          v66 = 9;
LABEL_168:
          swift_storeEnumTagMultiPayload(v64, v65, v66);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_205;
    }
LABEL_8:
    v18 = sub_10002A750(&qword_10064A080);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_205;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, &qword_10063F268);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v19))
    {
      case 0u:
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v432 = v19;
        switch(swift_getEnumCaseMultiPayload(a2, v20))
        {
          case 1u:
            v21 = *a2;
            *a1 = *a2;
            v22 = v21;
            v23 = a1;
            v24 = v20;
            v25 = 1;
            goto LABEL_111;
          case 2u:
            v266 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v266 - 8) + 16))(a1, a2, v266);
            v23 = a1;
            v24 = v20;
            v25 = 2;
            goto LABEL_111;
          case 3u:
            v267 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(a1, a2, v267);
            v23 = a1;
            v24 = v20;
            v25 = 3;
            goto LABEL_111;
          case 4u:
            v268 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v268 - 8) + 16))(a1, a2, v268);
            v23 = a1;
            v24 = v20;
            v25 = 4;
            goto LABEL_111;
          case 5u:
            v269 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v269 - 8) + 16))(a1, a2, v269);
            v23 = a1;
            v24 = v20;
            v25 = 5;
            goto LABEL_111;
          case 6u:
            v270 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(a1, a2, v270);
            v23 = a1;
            v24 = v20;
            v25 = 6;
            goto LABEL_111;
          case 8u:
            v271 = *a2;
            *a1 = *a2;
            v272 = v271;
            v23 = a1;
            v24 = v20;
            v25 = 8;
            goto LABEL_111;
          case 9u:
            v273 = *a2;
            *a1 = *a2;
            v274 = v273;
            v23 = a1;
            v24 = v20;
            v25 = 9;
LABEL_111:
            swift_storeEnumTagMultiPayload(v23, v24, v25);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            break;
        }
        v275 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v276 = v275[5];
        v277 = (char *)a1 + v276;
        v278 = (char *)a2 + v276;
        if (*(void **)((char *)a2 + v276 + 8))
        {
          v411 = v275;
          v429 = a3;
          *(_QWORD *)v277 = *(_QWORD *)v278;
          v279 = *((_QWORD *)v278 + 1);
          *((_QWORD *)v277 + 1) = v279;
          v280 = (void *)*((_QWORD *)v278 + 2);
          v281 = *((_QWORD *)v278 + 3);
          v283 = *((_QWORD *)v278 + 4);
          v282 = *((_QWORD *)v278 + 5);
          v284 = *((_QWORD *)v278 + 7);
          v418 = *((_QWORD *)v278 + 6);
          v403 = v278[64];
          swift_bridgeObjectRetain(v279);
          sub_10003E1F0(v280, v281, v283, v282, v418, v284, v403);
          *((_QWORD *)v277 + 2) = v280;
          *((_QWORD *)v277 + 3) = v281;
          *((_QWORD *)v277 + 4) = v283;
          *((_QWORD *)v277 + 5) = v282;
          *((_QWORD *)v277 + 6) = v418;
          *((_QWORD *)v277 + 7) = v284;
          v277[64] = v403;
          v277[65] = v278[65];
          v277[66] = v278[66];
          v277[67] = v278[67];
          v277[68] = v278[68];
          v285 = v278[120];
          if (v285 == 255)
          {
            v286 = *(_OWORD *)(v278 + 72);
            v287 = *(_OWORD *)(v278 + 88);
            v288 = *(_OWORD *)(v278 + 104);
            v277[120] = v278[120];
            *(_OWORD *)(v277 + 88) = v287;
            *(_OWORD *)(v277 + 104) = v288;
            *(_OWORD *)(v277 + 72) = v286;
          }
          else
          {
            v419 = v285 & 1;
            v296 = (void *)*((_QWORD *)v278 + 9);
            v297 = *((_QWORD *)v278 + 10);
            v298 = *((_QWORD *)v278 + 11);
            v299 = *((_QWORD *)v278 + 12);
            v300 = *((_QWORD *)v278 + 13);
            v404 = *((_QWORD *)v278 + 14);
            sub_10002B764(v296, v297, v298, v299, v300, v404, v285 & 1);
            *((_QWORD *)v277 + 9) = v296;
            *((_QWORD *)v277 + 10) = v297;
            *((_QWORD *)v277 + 11) = v298;
            *((_QWORD *)v277 + 12) = v299;
            *((_QWORD *)v277 + 13) = v300;
            *((_QWORD *)v277 + 14) = v404;
            v277[120] = v419;
          }
          a3 = v429;
          v295 = v432;
          v277[121] = v278[121];
          v275 = v411;
        }
        else
        {
          v289 = *(_OWORD *)v278;
          v290 = *((_OWORD *)v278 + 1);
          v291 = *((_OWORD *)v278 + 3);
          *((_OWORD *)v277 + 2) = *((_OWORD *)v278 + 2);
          *((_OWORD *)v277 + 3) = v291;
          *(_OWORD *)v277 = v289;
          *((_OWORD *)v277 + 1) = v290;
          v292 = *((_OWORD *)v278 + 4);
          v293 = *((_OWORD *)v278 + 5);
          v294 = *((_OWORD *)v278 + 6);
          *(_OWORD *)(v277 + 106) = *(_OWORD *)(v278 + 106);
          *((_OWORD *)v277 + 5) = v293;
          *((_OWORD *)v277 + 6) = v294;
          *((_OWORD *)v277 + 4) = v292;
          v295 = v19;
        }
        *((_BYTE *)a1 + v275[6]) = *((_BYTE *)a2 + v275[6]);
        *((_BYTE *)a1 + v275[7]) = *((_BYTE *)a2 + v275[7]);
        *((_BYTE *)a1 + v275[8]) = *((_BYTE *)a2 + v275[8]);
        *((_BYTE *)a1 + v275[9]) = *((_BYTE *)a2 + v275[9]);
        *((_BYTE *)a1 + v275[10]) = *((_BYTE *)a2 + v275[10]);
        v301 = v275[11];
        v302 = *(void **)((char *)a2 + v301);
        *(void **)((char *)a1 + v301) = v302;
        v303 = v302;
        v117 = a1;
        v118 = v295;
        v119 = 0;
        goto LABEL_203;
      case 1u:
        v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v437 = v19;
        switch(swift_getEnumCaseMultiPayload(a2, v79))
        {
          case 1u:
            v80 = *a2;
            *a1 = *a2;
            v81 = v80;
            v82 = a1;
            v83 = v79;
            v84 = 1;
            goto LABEL_127;
          case 2u:
            v304 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(a1, a2, v304);
            v82 = a1;
            v83 = v79;
            v84 = 2;
            goto LABEL_127;
          case 3u:
            v305 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v305 - 8) + 16))(a1, a2, v305);
            v82 = a1;
            v83 = v79;
            v84 = 3;
            goto LABEL_127;
          case 4u:
            v306 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v306 - 8) + 16))(a1, a2, v306);
            v82 = a1;
            v83 = v79;
            v84 = 4;
            goto LABEL_127;
          case 5u:
            v307 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v307 - 8) + 16))(a1, a2, v307);
            v82 = a1;
            v83 = v79;
            v84 = 5;
            goto LABEL_127;
          case 6u:
            v308 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v308 - 8) + 16))(a1, a2, v308);
            v82 = a1;
            v83 = v79;
            v84 = 6;
            goto LABEL_127;
          case 8u:
            v309 = *a2;
            *a1 = *a2;
            v310 = v309;
            v82 = a1;
            v83 = v79;
            v84 = 8;
            goto LABEL_127;
          case 9u:
            v311 = *a2;
            *a1 = *a2;
            v312 = v311;
            v82 = a1;
            v83 = v79;
            v84 = 9;
LABEL_127:
            swift_storeEnumTagMultiPayload(v82, v83, v84);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            break;
        }
        v313 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v314 = v313[5];
        v315 = (char *)a1 + v314;
        v316 = (char *)a2 + v314;
        if (*(void **)((char *)a2 + v314 + 8))
        {
          v412 = v313;
          v430 = a3;
          *(_QWORD *)v315 = *(_QWORD *)v316;
          v317 = *((_QWORD *)v316 + 1);
          *((_QWORD *)v315 + 1) = v317;
          v318 = (void *)*((_QWORD *)v316 + 2);
          v319 = *((_QWORD *)v316 + 3);
          v320 = *((_QWORD *)v316 + 4);
          v321 = *((_QWORD *)v316 + 5);
          v322 = *((_QWORD *)v316 + 7);
          v405 = *((_QWORD *)v316 + 6);
          v420 = v316[64];
          swift_bridgeObjectRetain(v317);
          sub_10003E1F0(v318, v319, v320, v321, v405, v322, v420);
          *((_QWORD *)v315 + 2) = v318;
          *((_QWORD *)v315 + 3) = v319;
          *((_QWORD *)v315 + 4) = v320;
          *((_QWORD *)v315 + 5) = v321;
          *((_QWORD *)v315 + 6) = v405;
          *((_QWORD *)v315 + 7) = v322;
          v315[64] = v420;
          v315[65] = v316[65];
          v315[66] = v316[66];
          v315[67] = v316[67];
          v315[68] = v316[68];
          v323 = v316[120];
          if (v323 == 255)
          {
            v324 = *(_OWORD *)(v316 + 72);
            v325 = *(_OWORD *)(v316 + 88);
            v326 = *(_OWORD *)(v316 + 104);
            v315[120] = v316[120];
            *(_OWORD *)(v315 + 88) = v325;
            *(_OWORD *)(v315 + 104) = v326;
            *(_OWORD *)(v315 + 72) = v324;
          }
          else
          {
            v421 = v323 & 1;
            v334 = (void *)*((_QWORD *)v316 + 9);
            v335 = *((_QWORD *)v316 + 10);
            v336 = *((_QWORD *)v316 + 11);
            v337 = *((_QWORD *)v316 + 12);
            v338 = *((_QWORD *)v316 + 13);
            v406 = *((_QWORD *)v316 + 14);
            sub_10002B764(v334, v335, v336, v337, v338, v406, v323 & 1);
            *((_QWORD *)v315 + 9) = v334;
            *((_QWORD *)v315 + 10) = v335;
            *((_QWORD *)v315 + 11) = v336;
            *((_QWORD *)v315 + 12) = v337;
            *((_QWORD *)v315 + 13) = v338;
            *((_QWORD *)v315 + 14) = v406;
            v315[120] = v421;
          }
          a3 = v430;
          v333 = v437;
          v315[121] = v316[121];
          v313 = v412;
        }
        else
        {
          v327 = *(_OWORD *)v316;
          v328 = *((_OWORD *)v316 + 1);
          v329 = *((_OWORD *)v316 + 3);
          *((_OWORD *)v315 + 2) = *((_OWORD *)v316 + 2);
          *((_OWORD *)v315 + 3) = v329;
          *(_OWORD *)v315 = v327;
          *((_OWORD *)v315 + 1) = v328;
          v330 = *((_OWORD *)v316 + 4);
          v331 = *((_OWORD *)v316 + 5);
          v332 = *((_OWORD *)v316 + 6);
          *(_OWORD *)(v315 + 106) = *(_OWORD *)(v316 + 106);
          *((_OWORD *)v315 + 5) = v331;
          *((_OWORD *)v315 + 6) = v332;
          *((_OWORD *)v315 + 4) = v330;
          v333 = v19;
        }
        *((_BYTE *)a1 + v313[6]) = *((_BYTE *)a2 + v313[6]);
        *((_BYTE *)a1 + v313[7]) = *((_BYTE *)a2 + v313[7]);
        *((_BYTE *)a1 + v313[8]) = *((_BYTE *)a2 + v313[8]);
        *((_BYTE *)a1 + v313[9]) = *((_BYTE *)a2 + v313[9]);
        *((_BYTE *)a1 + v313[10]) = *((_BYTE *)a2 + v313[10]);
        v339 = v313[11];
        v340 = *(void **)((char *)a2 + v339);
        *(void **)((char *)a1 + v339) = v340;
        v341 = v340;
        v117 = a1;
        v118 = v333;
        v119 = 1;
        goto LABEL_203;
      case 2u:
        v438 = v19;
        v85 = a3;
        v86 = *a2;
        *a1 = *a2;
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v88 = (void **)((char *)a1 + v87);
        v89 = (void **)((char *)a2 + v87);
        v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v91 + 48);
        v93 = v86;
        if (v92(v89, 1, v90))
        {
          v94 = sub_10002A750(&qword_100644980);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v89, v90))
          {
            case 1u:
              v163 = *v89;
              *v88 = *v89;
              v164 = v163;
              v165 = v88;
              v166 = v90;
              v167 = 1;
              goto LABEL_178;
            case 2u:
              v369 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v88, v89, v369);
              v165 = v88;
              v166 = v90;
              v167 = 2;
              goto LABEL_178;
            case 3u:
              v370 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v88, v89, v370);
              v165 = v88;
              v166 = v90;
              v167 = 3;
              goto LABEL_178;
            case 4u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v88, v89, v371);
              v165 = v88;
              v166 = v90;
              v167 = 4;
              goto LABEL_178;
            case 5u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v88, v89, v372);
              v165 = v88;
              v166 = v90;
              v167 = 5;
              goto LABEL_178;
            case 6u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v88, v89, v373);
              v165 = v88;
              v166 = v90;
              v167 = 6;
              goto LABEL_178;
            case 8u:
              v374 = *v89;
              *v88 = *v89;
              v375 = v374;
              v165 = v88;
              v166 = v90;
              v167 = 8;
              goto LABEL_178;
            case 9u:
              v376 = *v89;
              *v88 = *v89;
              v377 = v376;
              v165 = v88;
              v166 = v90;
              v167 = 9;
LABEL_178:
              swift_storeEnumTagMultiPayload(v165, v166, v167);
              break;
            default:
              memcpy(v88, v89, *(_QWORD *)(v91 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        a3 = v85;
        v117 = a1;
        v118 = v438;
        v119 = 2;
        goto LABEL_203;
      case 3u:
        v439 = v19;
        v95 = a3;
        v96 = *a2;
        *a1 = *a2;
        v97 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v98 = (void **)((char *)a1 + v97);
        v99 = (void **)((char *)a2 + v97);
        v100 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v101 = *(_QWORD *)(v100 - 8);
        v102 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v101 + 48);
        v103 = v96;
        if (v102(v99, 1, v100))
        {
          v104 = sub_10002A750(&qword_100644980);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v99, v100))
          {
            case 1u:
              v168 = *v99;
              *v98 = *v99;
              v169 = v168;
              v170 = v98;
              v171 = v100;
              v172 = 1;
              goto LABEL_189;
            case 2u:
              v378 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v98, v99, v378);
              v170 = v98;
              v171 = v100;
              v172 = 2;
              goto LABEL_189;
            case 3u:
              v379 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v98, v99, v379);
              v170 = v98;
              v171 = v100;
              v172 = 3;
              goto LABEL_189;
            case 4u:
              v380 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v98, v99, v380);
              v170 = v98;
              v171 = v100;
              v172 = 4;
              goto LABEL_189;
            case 5u:
              v381 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v98, v99, v381);
              v170 = v98;
              v171 = v100;
              v172 = 5;
              goto LABEL_189;
            case 6u:
              v382 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v98, v99, v382);
              v170 = v98;
              v171 = v100;
              v172 = 6;
              goto LABEL_189;
            case 8u:
              v383 = *v99;
              *v98 = *v99;
              v384 = v383;
              v170 = v98;
              v171 = v100;
              v172 = 8;
              goto LABEL_189;
            case 9u:
              v385 = *v99;
              *v98 = *v99;
              v386 = v385;
              v170 = v98;
              v171 = v100;
              v172 = 9;
LABEL_189:
              swift_storeEnumTagMultiPayload(v170, v171, v172);
              break;
            default:
              memcpy(v98, v99, *(_QWORD *)(v101 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        }
        a3 = v95;
        v117 = a1;
        v118 = v439;
        v119 = 3;
        goto LABEL_203;
      case 4u:
        v440 = v19;
        v105 = a3;
        v106 = *a2;
        *a1 = *a2;
        v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v108 = (void **)((char *)a1 + v107);
        v109 = (void **)((char *)a2 + v107);
        v110 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v111 = *(_QWORD *)(v110 - 8);
        v112 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v111 + 48);
        v113 = v106;
        if (v112(v109, 1, v110))
        {
          v114 = sub_10002A750(&qword_100644980);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v109, v110))
          {
            case 1u:
              v173 = *v109;
              *v108 = *v109;
              v174 = v173;
              v175 = v108;
              v176 = v110;
              v177 = 1;
              goto LABEL_200;
            case 2u:
              v387 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v108, v109, v387);
              v175 = v108;
              v176 = v110;
              v177 = 2;
              goto LABEL_200;
            case 3u:
              v388 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v108, v109, v388);
              v175 = v108;
              v176 = v110;
              v177 = 3;
              goto LABEL_200;
            case 4u:
              v389 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v108, v109, v389);
              v175 = v108;
              v176 = v110;
              v177 = 4;
              goto LABEL_200;
            case 5u:
              v390 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v108, v109, v390);
              v175 = v108;
              v176 = v110;
              v177 = 5;
              goto LABEL_200;
            case 6u:
              v391 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v108, v109, v391);
              v175 = v108;
              v176 = v110;
              v177 = 6;
              goto LABEL_200;
            case 8u:
              v392 = *v109;
              *v108 = *v109;
              v393 = v392;
              v175 = v108;
              v176 = v110;
              v177 = 8;
              goto LABEL_200;
            case 9u:
              v394 = *v109;
              *v108 = *v109;
              v395 = v394;
              v175 = v108;
              v176 = v110;
              v177 = 9;
LABEL_200:
              swift_storeEnumTagMultiPayload(v175, v176, v177);
              break;
            default:
              memcpy(v108, v109, *(_QWORD *)(v111 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
        }
        a3 = v105;
        v117 = a1;
        v118 = v440;
        v119 = 4;
        goto LABEL_203;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v115 = a2[2];
        a1[2] = v115;
        v116 = v115;
        v117 = a1;
        v118 = v19;
        v119 = 5;
        goto LABEL_203;
      case 6u:
        v156 = *a2;
        *a1 = *a2;
        v157 = v156;
        v117 = a1;
        v118 = v19;
        v119 = 6;
        goto LABEL_203;
      case 7u:
        v120 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v121 = *(_QWORD *)(v120 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v121 + 48))(a2, 1, v120))
        {
          v122 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          v178 = *a2;
          *a1 = *a2;
          v179 = *(int *)(v120 + 20);
          v426 = a3;
          v442 = v19;
          v180 = (char *)a1 + v179;
          v181 = (char *)a2 + v179;
          v182 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v183 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v182 - 8) + 16);
          v184 = swift_bridgeObjectRetain(v178);
          v185 = v180;
          v186 = v181;
          a3 = v426;
          v19 = v442;
          v183(v185, v186, v182, v184);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v121 + 56))(a1, 0, 1, v120);
        }
        v187 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v188 = (void **)((char *)a1 + v187);
        v189 = (void **)((char *)a2 + v187);
        if (v189[1])
        {
          *v188 = *v189;
          v190 = v189[1];
          v188[1] = v190;
          v191 = (void *)v189[2];
          v188[2] = v191;
          swift_bridgeObjectRetain(v190);
          v192 = v191;
        }
        else
        {
          v193 = *(_OWORD *)v189;
          v188[2] = v189[2];
          *(_OWORD *)v188 = v193;
        }
        v117 = a1;
        v118 = v19;
        v119 = 7;
        goto LABEL_203;
      case 8u:
        v158 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v159 = *(_QWORD *)(v158 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v159 + 48))(a2, 1, v158))
        {
          v160 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
        }
        else
        {
          v194 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(a1, a2, v194);
          *((_BYTE *)a1 + *(int *)(v158 + 20)) = *((_BYTE *)a2 + *(int *)(v158 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v159 + 56))(a1, 0, 1, v158);
        }
        v195 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v195 + 20)) = *(void **)((char *)a2 + *(int *)(v195 + 20));
        v117 = a1;
        v118 = v19;
        v119 = 8;
        goto LABEL_203;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v123 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v124 = (char *)a1 + v123;
        v125 = (char *)a2 + v123;
        v126 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
        v117 = a1;
        v118 = v19;
        v119 = 9;
LABEL_203:
        swift_storeEnumTagMultiPayload(v117, v118, v119);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
LABEL_205:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_100428664(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v6 = sub_10002A750(&qword_10063F268);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10002A750(&qword_10064A080);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v9))
    {
      case 0u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v10))
        {
          case 2u:
            v11 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
            v12 = a1;
            v13 = v10;
            v14 = 2;
            goto LABEL_35;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v12 = a1;
            v13 = v10;
            v14 = 3;
            goto LABEL_35;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v12 = a1;
            v13 = v10;
            v14 = 4;
            goto LABEL_35;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v12 = a1;
            v13 = v10;
            v14 = 5;
            goto LABEL_35;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v12 = a1;
            v13 = v10;
            v14 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v12, v13, v14);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v48 = a1;
        v49 = v9;
        v50 = 0;
        goto LABEL_67;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 2u:
            v16 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
            v17 = a1;
            v18 = v15;
            v19 = 2;
            goto LABEL_42;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v17 = a1;
            v18 = v15;
            v19 = 3;
            goto LABEL_42;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v17 = a1;
            v18 = v15;
            v19 = 4;
            goto LABEL_42;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v17 = a1;
            v18 = v15;
            v19 = 5;
            goto LABEL_42;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v17 = a1;
            v18 = v15;
            v19 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v48 = a1;
        v49 = v9;
        v50 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          v25 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 2u:
              v51 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v21, v22, v51);
              v52 = v21;
              v53 = v23;
              v54 = 2;
              goto LABEL_49;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v21, v22, v93);
              v52 = v21;
              v53 = v23;
              v54 = 3;
              goto LABEL_49;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v21, v22, v94);
              v52 = v21;
              v53 = v23;
              v54 = 4;
              goto LABEL_49;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v21, v22, v95);
              v52 = v21;
              v53 = v23;
              v54 = 5;
              goto LABEL_49;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v21, v22, v96);
              v52 = v21;
              v53 = v23;
              v54 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v52, v53, v54);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v9;
        v50 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10002A750(&qword_100644980);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v28, v29))
          {
            case 2u:
              v55 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v27, v28, v55);
              v56 = v27;
              v57 = v29;
              v58 = 2;
              goto LABEL_57;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v27, v28, v97);
              v56 = v27;
              v57 = v29;
              v58 = 3;
              goto LABEL_57;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v27, v28, v98);
              v56 = v27;
              v57 = v29;
              v58 = 4;
              goto LABEL_57;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v27, v28, v99);
              v56 = v27;
              v57 = v29;
              v58 = 5;
              goto LABEL_57;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v27, v28, v100);
              v56 = v27;
              v57 = v29;
              v58 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              break;
            default:
              memcpy(v27, v28, *(_QWORD *)(v30 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v48 = a1;
        v49 = v9;
        v50 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644980);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v34, v35))
          {
            case 2u:
              v59 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v33, v34, v59);
              swift_storeEnumTagMultiPayload(v33, v35, 2);
              break;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v33, v34, v101);
              swift_storeEnumTagMultiPayload(v33, v35, 3);
              break;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v33, v34, v102);
              swift_storeEnumTagMultiPayload(v33, v35, 4);
              break;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v33, v34, v103);
              swift_storeEnumTagMultiPayload(v33, v35, 5);
              break;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v33, v34, v104);
              swift_storeEnumTagMultiPayload(v33, v35, 6);
              break;
            default:
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v48 = a1;
        v49 = v9;
        v50 = 4;
        goto LABEL_67;
      case 7u:
        v38 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v38 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v48 = a1;
        v49 = v9;
        v50 = 7;
        goto LABEL_67;
      case 8u:
        v41 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v42 = *(_QWORD *)(v41 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(a2, 1, v41))
        {
          v43 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v41 + 20)) = *((_BYTE *)a2 + *(int *)(v41 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v41);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v48 = a1;
        v49 = v9;
        v50 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v44 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        v48 = a1;
        v49 = v9;
        v50 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_100429254(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  _OWORD *v123;
  _OWORD *v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  _OWORD *v135;
  _OWORD *v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int *v166;
  uint64_t v167;
  _OWORD *v168;
  _OWORD *v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  _OWORD *v180;
  _OWORD *v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;

  v6 = sub_10002A750(&qword_10063F268);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v11))
      {
        case 0u:
          v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v12))
          {
            case 2u:
              v13 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
              v14 = a1;
              v15 = v12;
              v16 = 2;
              goto LABEL_56;
            case 3u:
              v117 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(a1, a2, v117);
              v14 = a1;
              v15 = v12;
              v16 = 3;
              goto LABEL_56;
            case 4u:
              v118 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(a1, a2, v118);
              v14 = a1;
              v15 = v12;
              v16 = 4;
              goto LABEL_56;
            case 5u:
              v119 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(a1, a2, v119);
              v14 = a1;
              v15 = v12;
              v16 = 5;
              goto LABEL_56;
            case 6u:
              v120 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(a1, a2, v120);
              v14 = a1;
              v15 = v12;
              v16 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
              break;
          }
          v121 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v122 = v121[5];
          v123 = (_OWORD *)((char *)a1 + v122);
          v124 = (_OWORD *)((char *)a2 + v122);
          v125 = v124[3];
          v123[2] = v124[2];
          v123[3] = v125;
          v126 = v124[1];
          *v123 = *v124;
          v123[1] = v126;
          *(_OWORD *)((char *)v123 + 106) = *(_OWORD *)((char *)v124 + 106);
          v127 = v124[6];
          v128 = v124[4];
          v123[5] = v124[5];
          v123[6] = v127;
          v123[4] = v128;
          *((_BYTE *)a1 + v121[6]) = *((_BYTE *)a2 + v121[6]);
          *((_BYTE *)a1 + v121[7]) = *((_BYTE *)a2 + v121[7]);
          *((_BYTE *)a1 + v121[8]) = *((_BYTE *)a2 + v121[8]);
          *((_BYTE *)a1 + v121[9]) = *((_BYTE *)a2 + v121[9]);
          *((_BYTE *)a1 + v121[10]) = *((_BYTE *)a2 + v121[10]);
          *(_QWORD *)((char *)a1 + v121[11]) = *(_QWORD *)((char *)a2 + v121[11]);
          v57 = a1;
          v58 = v11;
          v59 = 0;
          goto LABEL_113;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 2u:
              v25 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
              v26 = a1;
              v27 = v24;
              v28 = 2;
              goto LABEL_63;
            case 3u:
              v129 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
              v26 = a1;
              v27 = v24;
              v28 = 3;
              goto LABEL_63;
            case 4u:
              v130 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(a1, a2, v130);
              v26 = a1;
              v27 = v24;
              v28 = 4;
              goto LABEL_63;
            case 5u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
              v26 = a1;
              v27 = v24;
              v28 = 5;
              goto LABEL_63;
            case 6u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
              v26 = a1;
              v27 = v24;
              v28 = 6;
LABEL_63:
              swift_storeEnumTagMultiPayload(v26, v27, v28);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v133 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v134 = v133[5];
          v135 = (_OWORD *)((char *)a1 + v134);
          v136 = (_OWORD *)((char *)a2 + v134);
          v137 = v136[3];
          v135[2] = v136[2];
          v135[3] = v137;
          v138 = v136[1];
          *v135 = *v136;
          v135[1] = v138;
          *(_OWORD *)((char *)v135 + 106) = *(_OWORD *)((char *)v136 + 106);
          v139 = v136[6];
          v140 = v136[4];
          v135[5] = v136[5];
          v135[6] = v139;
          v135[4] = v140;
          *((_BYTE *)a1 + v133[6]) = *((_BYTE *)a2 + v133[6]);
          *((_BYTE *)a1 + v133[7]) = *((_BYTE *)a2 + v133[7]);
          *((_BYTE *)a1 + v133[8]) = *((_BYTE *)a2 + v133[8]);
          *((_BYTE *)a1 + v133[9]) = *((_BYTE *)a2 + v133[9]);
          *((_BYTE *)a1 + v133[10]) = *((_BYTE *)a2 + v133[10]);
          *(_QWORD *)((char *)a1 + v133[11]) = *(_QWORD *)((char *)a2 + v133[11]);
          v57 = a1;
          v58 = v11;
          v59 = 1;
          goto LABEL_113;
        case 2u:
          *a1 = *a2;
          v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v33 = *(_QWORD *)(v32 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v31, v32))
            {
              case 2u:
                v96 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v30, v31, v96);
                v97 = v30;
                v98 = v32;
                v99 = 2;
                goto LABEL_94;
              case 3u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v30, v31, v186);
                v97 = v30;
                v98 = v32;
                v99 = 3;
                goto LABEL_94;
              case 4u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v30, v31, v187);
                v97 = v30;
                v98 = v32;
                v99 = 4;
                goto LABEL_94;
              case 5u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v30, v31, v188);
                v97 = v30;
                v98 = v32;
                v99 = 5;
                goto LABEL_94;
              case 6u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v30, v31, v189);
                v97 = v30;
                v98 = v32;
                v99 = 6;
LABEL_94:
                swift_storeEnumTagMultiPayload(v97, v98, v99);
                break;
              default:
                memcpy(v30, v31, *(_QWORD *)(v33 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          }
          v57 = a1;
          v58 = v11;
          v59 = 2;
          goto LABEL_113;
        case 3u:
          *a1 = *a2;
          v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v36 = (char *)a1 + v35;
          v37 = (char *)a2 + v35;
          v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v39 = *(_QWORD *)(v38 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          {
            v40 = sub_10002A750(&qword_100644980);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v37, v38))
            {
              case 2u:
                v100 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v36, v37, v100);
                v101 = v36;
                v102 = v38;
                v103 = 2;
                goto LABEL_102;
              case 3u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v36, v37, v190);
                v101 = v36;
                v102 = v38;
                v103 = 3;
                goto LABEL_102;
              case 4u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v36, v37, v191);
                v101 = v36;
                v102 = v38;
                v103 = 4;
                goto LABEL_102;
              case 5u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v36, v37, v192);
                v101 = v36;
                v102 = v38;
                v103 = 5;
                goto LABEL_102;
              case 6u:
                v193 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v36, v37, v193);
                v101 = v36;
                v102 = v38;
                v103 = 6;
LABEL_102:
                swift_storeEnumTagMultiPayload(v101, v102, v103);
                break;
              default:
                memcpy(v36, v37, *(_QWORD *)(v39 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          }
          v57 = a1;
          v58 = v11;
          v59 = 3;
          goto LABEL_113;
        case 4u:
          *a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (char *)a1 + v41;
          v43 = (char *)a2 + v41;
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
          {
            v46 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 2u:
                v104 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v42, v43, v104);
                v105 = v42;
                v106 = v44;
                v107 = 2;
                goto LABEL_110;
              case 3u:
                v194 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v42, v43, v194);
                v105 = v42;
                v106 = v44;
                v107 = 3;
                goto LABEL_110;
              case 4u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v42, v43, v195);
                v105 = v42;
                v106 = v44;
                v107 = 4;
                goto LABEL_110;
              case 5u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v42, v43, v196);
                v105 = v42;
                v106 = v44;
                v107 = 5;
                goto LABEL_110;
              case 6u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v42, v43, v197);
                v105 = v42;
                v106 = v44;
                v107 = 6;
LABEL_110:
                swift_storeEnumTagMultiPayload(v105, v106, v107);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v57 = a1;
          v58 = v11;
          v59 = 4;
          goto LABEL_113;
        case 7u:
          v47 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v48 = *(_QWORD *)(v47 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v48 + 48))(a2, 1, v47))
          {
            v49 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v108 = *(int *)(v47 + 20);
            v109 = (char *)a1 + v108;
            v110 = (char *)a2 + v108;
            v111 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(a1, 0, 1, v47);
          }
          v112 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v113 = (char *)a1 + v112;
          v114 = (char *)a2 + v112;
          *(_OWORD *)v113 = *(_OWORD *)v114;
          *((_QWORD *)v113 + 2) = *((_QWORD *)v114 + 2);
          v57 = a1;
          v58 = v11;
          v59 = 7;
          goto LABEL_113;
        case 8u:
          v50 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v51 = *(_QWORD *)(v50 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v51 + 48))(a2, 1, v50))
          {
            v52 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            v115 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(a1, a2, v115);
            *((_BYTE *)a1 + *(int *)(v50 + 20)) = *((_BYTE *)a2 + *(int *)(v50 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(a1, 0, 1, v50);
          }
          v116 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v116 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v116 + 20));
          v57 = a1;
          v58 = v11;
          v59 = 8;
          goto LABEL_113;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v53 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v54 = (char *)a1 + v53;
          v55 = (char *)a2 + v53;
          v56 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
          v57 = a1;
          v58 = v11;
          v59 = 9;
LABEL_113:
          swift_storeEnumTagMultiPayload(v57, v58, v59);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_141;
    }
LABEL_8:
    v17 = sub_10002A750(&qword_10064A080);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_141;
  }
  if (v10)
  {
    sub_1000073A0((uint64_t)a1, &qword_10063F268);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v18))
    {
      case 0u:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v19))
        {
          case 2u:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
            v21 = a1;
            v22 = v19;
            v23 = 2;
            goto LABEL_80;
          case 3u:
            v162 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(a1, a2, v162);
            v21 = a1;
            v22 = v19;
            v23 = 3;
            goto LABEL_80;
          case 4u:
            v163 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(a1, a2, v163);
            v21 = a1;
            v22 = v19;
            v23 = 4;
            goto LABEL_80;
          case 5u:
            v164 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(a1, a2, v164);
            v21 = a1;
            v22 = v19;
            v23 = 5;
            goto LABEL_80;
          case 6u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(a1, a2, v165);
            v21 = a1;
            v22 = v19;
            v23 = 6;
LABEL_80:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            break;
        }
        v166 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v167 = v166[5];
        v168 = (_OWORD *)((char *)a1 + v167);
        v169 = (_OWORD *)((char *)a2 + v167);
        v170 = v169[3];
        v168[2] = v169[2];
        v168[3] = v170;
        v171 = v169[1];
        *v168 = *v169;
        v168[1] = v171;
        *(_OWORD *)((char *)v168 + 106) = *(_OWORD *)((char *)v169 + 106);
        v172 = v169[6];
        v173 = v169[4];
        v168[5] = v169[5];
        v168[6] = v172;
        v168[4] = v173;
        *((_BYTE *)a1 + v166[6]) = *((_BYTE *)a2 + v166[6]);
        *((_BYTE *)a1 + v166[7]) = *((_BYTE *)a2 + v166[7]);
        *((_BYTE *)a1 + v166[8]) = *((_BYTE *)a2 + v166[8]);
        *((_BYTE *)a1 + v166[9]) = *((_BYTE *)a2 + v166[9]);
        *((_BYTE *)a1 + v166[10]) = *((_BYTE *)a2 + v166[10]);
        *(_QWORD *)((char *)a1 + v166[11]) = *(_QWORD *)((char *)a2 + v166[11]);
        v93 = a1;
        v94 = v18;
        v95 = 0;
        goto LABEL_139;
      case 1u:
        v60 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v60))
        {
          case 2u:
            v61 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(a1, a2, v61);
            v62 = a1;
            v63 = v60;
            v64 = 2;
            goto LABEL_87;
          case 3u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(a1, a2, v174);
            v62 = a1;
            v63 = v60;
            v64 = 3;
            goto LABEL_87;
          case 4u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(a1, a2, v175);
            v62 = a1;
            v63 = v60;
            v64 = 4;
            goto LABEL_87;
          case 5u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(a1, a2, v176);
            v62 = a1;
            v63 = v60;
            v64 = 5;
            goto LABEL_87;
          case 6u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(a1, a2, v177);
            v62 = a1;
            v63 = v60;
            v64 = 6;
LABEL_87:
            swift_storeEnumTagMultiPayload(v62, v63, v64);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
            break;
        }
        v178 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v179 = v178[5];
        v180 = (_OWORD *)((char *)a1 + v179);
        v181 = (_OWORD *)((char *)a2 + v179);
        v182 = v181[3];
        v180[2] = v181[2];
        v180[3] = v182;
        v183 = v181[1];
        *v180 = *v181;
        v180[1] = v183;
        *(_OWORD *)((char *)v180 + 106) = *(_OWORD *)((char *)v181 + 106);
        v184 = v181[6];
        v185 = v181[4];
        v180[5] = v181[5];
        v180[6] = v184;
        v180[4] = v185;
        *((_BYTE *)a1 + v178[6]) = *((_BYTE *)a2 + v178[6]);
        *((_BYTE *)a1 + v178[7]) = *((_BYTE *)a2 + v178[7]);
        *((_BYTE *)a1 + v178[8]) = *((_BYTE *)a2 + v178[8]);
        *((_BYTE *)a1 + v178[9]) = *((_BYTE *)a2 + v178[9]);
        *((_BYTE *)a1 + v178[10]) = *((_BYTE *)a2 + v178[10]);
        *(_QWORD *)((char *)a1 + v178[11]) = *(_QWORD *)((char *)a2 + v178[11]);
        v93 = a1;
        v94 = v18;
        v95 = 1;
        goto LABEL_139;
      case 2u:
        *a1 = *a2;
        v65 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          v70 = sub_10002A750(&qword_100644980);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v67, v68))
          {
            case 2u:
              v141 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v66, v67, v141);
              v142 = v66;
              v143 = v68;
              v144 = 2;
              goto LABEL_120;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v66, v67, v198);
              v142 = v66;
              v143 = v68;
              v144 = 3;
              goto LABEL_120;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v66, v67, v199);
              v142 = v66;
              v143 = v68;
              v144 = 4;
              goto LABEL_120;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v66, v67, v200);
              v142 = v66;
              v143 = v68;
              v144 = 5;
              goto LABEL_120;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v66, v67, v201);
              v142 = v66;
              v143 = v68;
              v144 = 6;
LABEL_120:
              swift_storeEnumTagMultiPayload(v142, v143, v144);
              break;
            default:
              memcpy(v66, v67, *(_QWORD *)(v69 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        v93 = a1;
        v94 = v18;
        v95 = 2;
        goto LABEL_139;
      case 3u:
        *a1 = *a2;
        v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v75 = *(_QWORD *)(v74 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
        {
          v76 = sub_10002A750(&qword_100644980);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v73, v74))
          {
            case 2u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v72, v73, v145);
              v146 = v72;
              v147 = v74;
              v148 = 2;
              goto LABEL_128;
            case 3u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v72, v73, v202);
              v146 = v72;
              v147 = v74;
              v148 = 3;
              goto LABEL_128;
            case 4u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v72, v73, v203);
              v146 = v72;
              v147 = v74;
              v148 = 4;
              goto LABEL_128;
            case 5u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v72, v73, v204);
              v146 = v72;
              v147 = v74;
              v148 = 5;
              goto LABEL_128;
            case 6u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v72, v73, v205);
              v146 = v72;
              v147 = v74;
              v148 = 6;
LABEL_128:
              swift_storeEnumTagMultiPayload(v146, v147, v148);
              break;
            default:
              memcpy(v72, v73, *(_QWORD *)(v75 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        v93 = a1;
        v94 = v18;
        v95 = 3;
        goto LABEL_139;
      case 4u:
        *a1 = *a2;
        v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v78 = (char *)a1 + v77;
        v79 = (char *)a2 + v77;
        v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v81 = *(_QWORD *)(v80 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
        {
          v82 = sub_10002A750(&qword_100644980);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v79, v80))
          {
            case 2u:
              v149 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v78, v79, v149);
              v150 = v78;
              v151 = v80;
              v152 = 2;
              goto LABEL_136;
            case 3u:
              v206 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v78, v79, v206);
              v150 = v78;
              v151 = v80;
              v152 = 3;
              goto LABEL_136;
            case 4u:
              v207 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v78, v79, v207);
              v150 = v78;
              v151 = v80;
              v152 = 4;
              goto LABEL_136;
            case 5u:
              v208 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v78, v79, v208);
              v150 = v78;
              v151 = v80;
              v152 = 5;
              goto LABEL_136;
            case 6u:
              v209 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v78, v79, v209);
              v150 = v78;
              v151 = v80;
              v152 = 6;
LABEL_136:
              swift_storeEnumTagMultiPayload(v150, v151, v152);
              break;
            default:
              memcpy(v78, v79, *(_QWORD *)(v81 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        }
        v93 = a1;
        v94 = v18;
        v95 = 4;
        goto LABEL_139;
      case 7u:
        v83 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v84 = *(_QWORD *)(v83 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48))(a2, 1, v83))
        {
          v85 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v153 = *(int *)(v83 + 20);
          v154 = (char *)a1 + v153;
          v155 = (char *)a2 + v153;
          v156 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(a1, 0, 1, v83);
        }
        v157 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v158 = (char *)a1 + v157;
        v159 = (char *)a2 + v157;
        *(_OWORD *)v158 = *(_OWORD *)v159;
        *((_QWORD *)v158 + 2) = *((_QWORD *)v159 + 2);
        v93 = a1;
        v94 = v18;
        v95 = 7;
        goto LABEL_139;
      case 8u:
        v86 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v87 = *(_QWORD *)(v86 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v87 + 48))(a2, 1, v86))
        {
          v88 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          v160 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
          *((_BYTE *)a1 + *(int *)(v86 + 20)) = *((_BYTE *)a2 + *(int *)(v86 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(a1, 0, 1, v86);
        }
        v161 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v161 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v161 + 20));
        v93 = a1;
        v94 = v18;
        v95 = 8;
        goto LABEL_139;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v89 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
        v93 = a1;
        v94 = v18;
        v95 = 9;
LABEL_139:
        swift_storeEnumTagMultiPayload(v93, v94, v95);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
LABEL_141:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10042A9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042A9AC);
}

uint64_t sub_10042A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_10002A750(&qword_10064A080);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_10042AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042AA48);
}

uint64_t sub_10042AA48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10002A750(&qword_10064A080);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_10042AAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10042AAD8(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10042AB44, (uint64_t)&unk_100535D08);
}

uint64_t sub_10042AAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t result;
  unint64_t v8;
  _QWORD v9[2];

  result = a4(319);
  if (v8 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    v9[1] = a5;
    swift_initStructMetadata(a1, 256, 2, v9, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10042AB44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10065C408)
  {
    v2 = sub_10002CA5C(&qword_10063F268);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10065C408);
  }
}

uint64_t sub_10042AB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char v62;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;

  v84 = a2;
  v71 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  v3 = __chkstk_darwin(v71);
  v81 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v80 = (char *)&v71 - v6;
  v7 = __chkstk_darwin(v5);
  v77 = (uint64_t)&v71 - v8;
  __chkstk_darwin(v7);
  v78 = (char *)&v71 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v72 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10002A750((uint64_t *)&unk_100651D90);
  __chkstk_darwin(v76);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_10064A080);
  v16 = __chkstk_darwin(v15);
  v74 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v73 = (uint64_t)&v71 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v71 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v71 - v23;
  v25 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v71 - v29;
  v31 = sub_10002A750((uint64_t *)&unk_1006463C0);
  v32 = __chkstk_darwin(v31);
  v75 = (uint64_t)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v71 - v35;
  __chkstk_darwin(v34);
  v38 = (char *)&v71 - v37;
  v79 = a1;
  sub_10000735C(a1, (uint64_t)v24, &qword_10064A080);
  v39 = sub_10002A750(&qword_10063F268);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
  v82 = v39;
  v83 = v40;
  if (((unsigned int (*)(char *, uint64_t))v40)(v24, 1) == 1)
  {
    sub_1000073A0((uint64_t)v24, &qword_10064A080);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v41(v38, 1, 1, v10);
  }
  else
  {
    v42 = sub_10001F580((uint64_t)v24, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v42);
    sub_10001F544((uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v41(v38, 0, 1, v10);
  }
  sub_10000735C(v84, (uint64_t)v22, &qword_10064A080);
  if (v83(v22, 1, v82) == 1)
  {
    sub_1000073A0((uint64_t)v22, &qword_10064A080);
    v43 = 1;
  }
  else
  {
    v44 = sub_10001F580((uint64_t)v22, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v44);
    sub_10001F544((uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v43 = 0;
  }
  v41(v36, v43, 1, v10);
  v45 = (uint64_t)&v14[*(int *)(v76 + 48)];
  sub_10000735C((uint64_t)v38, (uint64_t)v14, (uint64_t *)&unk_1006463C0);
  sub_10000735C((uint64_t)v36, v45, (uint64_t *)&unk_1006463C0);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v46((uint64_t)v14, 1, v10) == 1)
  {
    sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_1006463C0);
    sub_1000073A0((uint64_t)v38, (uint64_t *)&unk_1006463C0);
    v47 = v46(v45, 1, v10);
    v48 = (uint64_t)v80;
    v49 = (uint64_t)v78;
    if (v47 == 1)
    {
      sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_1006463C0);
      v50 = v79;
      sub_10002B1E8(v79, v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      v51 = v77;
      sub_10002B1E8(v84, v77, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      goto LABEL_14;
    }
LABEL_12:
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100651D90);
    v50 = v79;
    sub_10002B1E8(v79, v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v51 = v77;
    sub_10002B1E8(v84, v77, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    goto LABEL_24;
  }
  v52 = v75;
  sub_10000735C((uint64_t)v14, v75, (uint64_t *)&unk_1006463C0);
  v53 = v46(v45, 1, v10);
  v49 = (uint64_t)v78;
  if (v53 == 1)
  {
    sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_1006463C0);
    sub_1000073A0((uint64_t)v38, (uint64_t *)&unk_1006463C0);
    sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v48 = (uint64_t)v80;
    goto LABEL_12;
  }
  v54 = v72;
  sub_10001F580(v45, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v55 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v52, v54);
  sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_1006463C0);
  sub_1000073A0((uint64_t)v38, (uint64_t *)&unk_1006463C0);
  sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_1006463C0);
  v50 = v79;
  sub_10002B1E8(v79, v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v51 = v77;
  sub_10002B1E8(v84, v77, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v48 = (uint64_t)v80;
  if ((v55 & 1) == 0)
    goto LABEL_24;
LABEL_14:
  v56 = v73;
  sub_10000735C(v49, v73, &qword_10064A080);
  v57 = v82;
  if (v83((char *)v56, 1, v82) == 1)
  {
    sub_1000073A0(v56, &qword_10064A080);
    v58 = 3;
  }
  else
  {
    v58 = *(unsigned __int8 *)(v56 + *(int *)(v57 + 48));
    sub_10001F544(v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v59 = v74;
  sub_10000735C(v51, v74, &qword_10064A080);
  if (v83((char *)v59, 1, v57) == 1)
  {
    sub_1000073A0(v59, &qword_10064A080);
    if (v58 == 3)
    {
      v60 = 3;
      goto LABEL_21;
    }
    goto LABEL_24;
  }
  v60 = *(unsigned __int8 *)(v59 + *(int *)(v57 + 48));
  sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (v58 == 3)
  {
LABEL_21:
    v61 = (uint64_t)v81;
    sub_10001F544(v51, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10001F544(v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if (v60 == 3)
      goto LABEL_41;
    goto LABEL_25;
  }
  if (v60 == 3)
  {
LABEL_24:
    sub_10001F544(v51, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10001F544(v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v61 = (uint64_t)v81;
LABEL_25:
    sub_10002B1E8(v50, v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10002B1E8(v84, v61, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    goto LABEL_26;
  }
  v64 = 0x656C746974;
  if (v58)
  {
    if (v58 == 1)
    {
      v65 = 0xE500000000000000;
      v66 = 0x7365746F6ELL;
    }
    else
    {
      v65 = 0xE800000000000000;
      v66 = 0x7367617468736168;
    }
  }
  else
  {
    v65 = 0xE500000000000000;
    v66 = 0x656C746974;
  }
  v61 = (uint64_t)v81;
  if (v60)
  {
    if (v60 == 1)
    {
      v67 = 0xE500000000000000;
      v64 = 0x7365746F6ELL;
    }
    else
    {
      v67 = 0xE800000000000000;
      v64 = 0x7367617468736168;
    }
  }
  else
  {
    v67 = 0xE500000000000000;
  }
  if (v66 == v64 && v65 == v67)
  {
    swift_bridgeObjectRelease_n(v65, 2);
    sub_10001F544(v51, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10001F544(v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
LABEL_41:
    sub_10002B1E8(v50, v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10002B1E8(v84, v61, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
LABEL_42:
    v68 = v71;
    v69 = *(_BYTE *)(v48 + *(int *)(v71 + 20));
    sub_10001F544(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v68) = *(_BYTE *)(v61 + *(int *)(v68 + 20));
    sub_10001F544(v61, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v62 = v69 ^ v68 ^ 1;
    return v62 & 1;
  }
  v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v65, v64, v67, 0);
  swift_bridgeObjectRelease(v65);
  swift_bridgeObjectRelease(v67);
  sub_10001F544(v51, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10001F544(v49, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10002B1E8(v50, v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10002B1E8(v84, v61, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v70 & 1) != 0)
    goto LABEL_42;
LABEL_26:
  sub_10001F544(v61, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10001F544(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v62 = 0;
  return v62 & 1;
}

uint64_t sub_10042B4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042B4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  sub_10002B1E8(v1 + ((v3 + 16) & ~v3), a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  result = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  *(_QWORD *)(a1 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_10042B554()
{
  uint64_t v0;

  swift_release();
  sub_100089930(*(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_100089908(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10042B590(uint64_t a1)
{
  uint64_t v1;

  return sub_10041E5E8(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_10042B5A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10042B5CC(uint64_t (*a1)(uint64_t *))
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = 0;
  return a1(&v3);
}

uint64_t sub_10042B608()
{
  uint64_t v0;

  swift_release();
  sub_100089930(*(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10042B638(uint64_t a1)
{
  uint64_t v1;

  return sub_10041AF00(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

id sub_10042B648(id result, void *a2, char a3)
{
  id v3;
  id v4;

  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return result;
    v4 = result;
    v3 = a2;
    result = v4;
  }
  return result;
}

uint64_t sub_10042B688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 48), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 528))(ObjectType, v3);
}

unint64_t sub_10042B6C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642D90;
  if (!qword_100642D90)
  {
    v1 = objc_opt_self(NSRunLoop);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100642D90);
  }
  return result;
}

double sub_10042B704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_10041F00C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

_QWORD *sub_10042B750(uint64_t a1, uint64_t (*a2)(uint64_t, void *))
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v3 = 0;
  v4 = _swiftEmptyArrayStorage;
  do
  {
    v5 = *(void **)(a1 + 8 * v3 + 32);
    v6 = v5;
    v7 = a2(v3, v5);
    v9 = v8;
    v11 = v10;

    if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
      v4 = sub_10045729C(0, v4[2] + 1, 1, v4);
    v13 = v4[2];
    v12 = v4[3];
    if (v13 >= v12 >> 1)
      v4 = sub_10045729C((_QWORD *)(v12 > 1), v13 + 1, 1, v4);
    ++v3;
    v4[2] = v13 + 1;
    v14 = &v4[3 * v13];
    v14[4] = v7;
    v14[5] = v9;
    v14[6] = v11;
  }
  while (v16 != v3);
  swift_bridgeObjectRelease(a1);
  return v4;
}

void sub_10042B888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  double v55;
  uint64_t (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD aBlock[6];
  char v66[88];

  v61 = a2;
  v62 = a3;
  v63 = (id)type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v63);
  v6 = (void **)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v10);
  v64 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v16 = sub_100012DC4(v12, (uint64_t)qword_10065C128);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v17, v66);
  v60 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v19 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v20 = TTRTreeStorageItem.treeItemDescription.getter(v7, v19);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v20;
  *(_QWORD *)(inited + 56) = v21;
  v22 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List create editable section {item: %@}", 49, 2, v22);
  v23 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v23);
  v24 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 32), v25);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 96))(ObjectType, v24);
  if (v27)
  {
    v28 = (_QWORD *)v27;
    v29 = v3;
    Strong = swift_unknownObjectWeakLoadStrong(v27 + 56);
    if (!Strong)
    {
LABEL_10:
      swift_unknownObjectRelease(v28);
      return;
    }
    v32 = Strong;
    v33 = v28[8];
    v34 = swift_getObjectType(Strong, v31);
    v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(a1, v34, v33);
    v37 = v36;
    LODWORD(v33) = ~v36;
    swift_unknownObjectRelease(v28);
    swift_unknownObjectRelease(v32);
    if (!(_DWORD)v33)
      return;
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
    {
      v38 = (uint64_t)v9;
      v39 = v64;
      sub_10001F580(v38, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10002B1E8(v39, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      if (swift_getEnumCaseMultiPayload(v6, v63) == 9)
      {
        v59 = *v6;
        v40 = static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter();
        v42 = v41;
        v43 = sub_10002A750((uint64_t *)&unk_100640FD0);
        v44 = swift_allocObject(v43, 72, 7);
        *(_OWORD *)(v44 + 16) = v60;
        *(_QWORD *)(v44 + 56) = &type metadata for String;
        *(_QWORD *)(v44 + 64) = sub_1000770A4();
        v45 = v61;
        v46 = v35;
        v47 = v62;
        *(_QWORD *)(v44 + 32) = v61;
        *(_QWORD *)(v44 + 40) = v47;
        swift_bridgeObjectRetain(v47);
        static String.localizedStringWithFormat(_:_:)(v40, v42, v44);
        v49 = v48;
        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(v44);
        v63 = (id)objc_opt_self(TTRUndoManager);
        *(_QWORD *)&v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v49);
        v50 = swift_allocObject(&unk_100607188, 64, 7);
        *(_QWORD *)(v50 + 16) = v29;
        *(_QWORD *)(v50 + 24) = v45;
        *(_QWORD *)(v50 + 32) = v47;
        *(_QWORD *)(v50 + 40) = v46;
        *(_BYTE *)(v50 + 48) = v37;
        v51 = v59;
        *(_QWORD *)(v50 + 56) = v59;
        v52 = swift_allocObject(&unk_1006071B0, 32, 7);
        *(_QWORD *)(v52 + 16) = sub_10042DB3C;
        *(_QWORD *)(v52 + 24) = v50;
        aBlock[4] = sub_1000381EC;
        aBlock[5] = v52;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10001B258;
        aBlock[3] = &unk_1006071C8;
        v53 = _Block_copy(aBlock);
        swift_bridgeObjectRetain(v47);
        swift_retain();
        sub_1000B5EC0(v46, v37);
        v54 = v51;
        swift_retain();
        *(_QWORD *)&v55 = swift_release().n128_u64[0];
        v28 = (_QWORD *)v60;
        objc_msgSend(v63, "withActionName:block:", (_QWORD)v60, v53, v55);
        _Block_release(v53);

        sub_1000760F4(v46, v37);
        sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        LOBYTE(v53) = swift_isEscapingClosureAtFileLocation(v52, "", 102, 171, 51, 1);
        swift_release();
        swift_release();
        if ((v53 & 1) == 0)
          return;
        __break(1u);
        goto LABEL_10;
      }
      sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000760F4(v35, v37);
      v56 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
      v57 = (uint64_t)v6;
    }
    else
    {
      sub_1000760F4(v35, v37);
      v56 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
      v57 = (uint64_t)v9;
    }
    sub_10001F544(v57, v56);
  }
}

uint64_t sub_10042BE04(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;

  v96 = a3;
  v99 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  __chkstk_darwin(v6);
  v101 = (char *)&v94 - v7;
  __chkstk_darwin(v8);
  v12 = (char *)&v94 - v11;
  v13 = (uint64_t)_swiftEmptyArrayStorage;
  v112 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  v100 = a2;
  if (v14)
  {
    v97 = v10;
    v15 = a2[5];
    v107 = a2[4];
    ObjectType = swift_getObjectType(v107, v9);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 464);
    v18 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v105 = *(_QWORD *)(v5 + 72);
    v106 = v17;
    v19 = ObjectType;
    v94 = a1;
    v20 = swift_bridgeObjectRetain(a1);
    v21 = _swiftEmptyArrayStorage;
    v20.n128_u64[0] = 136315138;
    v98 = v20;
    v95 = &type metadata for Any[8];
    v103 = v15;
    v104 = v19;
    while (1)
    {
      sub_10002B1E8(v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v23 = v106(v12, v19, v15);
      v24 = swift_release();
      if (v23)
      {
        v108 = _typeName(_:qualified:)(*a2, 0);
        v109 = v25;
        v26._countAndFlagsBits = 0x746964652DLL;
        v26._object = (void *)0xE500000000000000;
        String.append(_:)(v26);
        v27 = v109;
        v28 = sub_1003003A4((uint64_t)v12, v108, v109);
        v30 = v29;
        swift_bridgeObjectRelease(v27);
        if (!v28)
        {
          v38 = (uint64_t)v101;
          if (qword_10063D7C8 != -1)
            swift_once(&qword_10063D7C8, sub_1004191EC);
          v39 = type metadata accessor for Logger(0);
          sub_100012DC4(v39, (uint64_t)qword_10065C128);
          v40 = sub_10002B1E8((uint64_t)v12, v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v41 = Logger.logObject.getter(v40);
          v42 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc(12, -1);
            v102 = v21;
            v44 = v38;
            v45 = v43;
            v46 = swift_slowAlloc(32, -1);
            v108 = v46;
            *(_DWORD *)v45 = v98.n128_u32[0];
            v47 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
            v48 = TTRTreeStorageItem.treeItemDescription.getter(v99, v47);
            v50 = v49;
            *(_QWORD *)(v45 + 4) = sub_100027E40(v48, v49, &v108);
            swift_bridgeObjectRelease(v50);
            v51 = v44;
            v21 = v102;
            sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Skip edit; failed to create editing session {item: %s}",
              (uint8_t *)v45,
              0xCu);
            swift_arrayDestroy(v46, 1, &type metadata for Any[8]);
            v52 = v46;
            a2 = v100;
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v45, -1, -1);

          }
          else
          {

            sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v15 = v103;
          goto LABEL_5;
        }
        swift_unknownObjectRetain(v28);
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
          v21 = sub_100455CA0(0, v21[2] + 1, 1, v21);
        v32 = v21[2];
        v31 = v21[3];
        if (v32 >= v31 >> 1)
          v21 = sub_100455CA0((_QWORD *)(v31 > 1), v32 + 1, 1, v21);
        v21[2] = v32 + 1;
        v22 = &v21[2 * v32];
        v22[4] = v28;
        v22[5] = v30;
        swift_unknownObjectRelease(v28);
        v15 = v103;
      }
      else
      {
        v33 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 248))(v12, v19, v15, v24);
        if (!v33)
        {
          v102 = v21;
          if (qword_10063D7C8 != -1)
            swift_once(&qword_10063D7C8, sub_1004191EC);
          v53 = type metadata accessor for Logger(0);
          sub_100012DC4(v53, (uint64_t)qword_10065C128);
          v54 = v97;
          v55 = sub_10002B1E8((uint64_t)v12, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v56 = Logger.logObject.getter(v55);
          v57 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = swift_slowAlloc(12, -1);
            v59 = swift_slowAlloc(32, -1);
            v108 = v59;
            *(_DWORD *)v58 = v98.n128_u32[0];
            v60 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
            v61 = TTRTreeStorageItem.treeItemDescription.getter(v99, v60);
            v63 = v62;
            *(_QWORD *)(v58 + 4) = sub_100027E40(v61, v62, &v108);
            swift_bridgeObjectRelease(v63);
            sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v56, v57, "Skip edit; failed to get REMReminder {item: %s}",
              (uint8_t *)v58,
              0xCu);
            swift_arrayDestroy(v59, 1, v95);
            v64 = v59;
            a2 = v100;
            swift_slowDealloc(v64, -1, -1);
            v65 = v58;
            v19 = v104;
            swift_slowDealloc(v65, -1, -1);

          }
          else
          {

            sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v21 = v102;
          v15 = v103;
          goto LABEL_6;
        }
        v34 = v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v36 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        specialized Array._endMutation()(v37);

      }
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      v19 = v104;
LABEL_6:
      v18 += v105;
      if (!--v14)
      {
        swift_bridgeObjectRelease(v94);
        v13 = v112;
        goto LABEL_31;
      }
    }
  }
  v21 = _swiftEmptyArrayStorage;
LABEL_31:
  v66 = v21[2];
  if (!((unint64_t)v13 >> 62))
  {
    v67 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v68 = v66 + v67;
    if (!__OFADD__(v66, v67))
      goto LABEL_33;
LABEL_51:
    __break(1u);
LABEL_52:
    if (v66 < 0)
      v93 = v66;
    else
      v93 = v66 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v66);
    v84 = _CocoaArrayWrapper.endIndex.getter(v93);
    swift_bridgeObjectRelease(v66);
    goto LABEL_41;
  }
  if (v13 < 0)
    v91 = v13;
  else
    v91 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v92 = _CocoaArrayWrapper.endIndex.getter(v91);
  swift_bridgeObjectRelease(v13);
  v68 = v66 + v92;
  if (__OFADD__(v66, v92))
    goto LABEL_51;
LABEL_33:
  if (v68 < 1)
  {
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v13);
    return 0;
  }
  v107 = v68;
  v69 = v21;
  v70 = v21[2];
  v71 = v96;
  if (v70)
  {
    v72 = v21 + 5;
    do
    {
      v74 = *(v72 - 1);
      v73 = *v72;
      v75 = swift_getObjectType(v74, v9);
      v76 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v73 + 72);
      v77 = swift_unknownObjectRetain(v74);
      v76(&v108, v75, v73, v77);
      v78 = v110;
      v79 = v111;
      sub_10001413C(&v108, v110);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 120))(v71, 0, v78, v79);
      v80 = sub_100027F10(&v108);
      v81 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v80);
      v82 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v82 & ~v81) == 0)
        v82 = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v82 | v81, v75, v73);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v73 + 112))(0, v75, v73);
      swift_unknownObjectRelease(v74);
      v72 += 2;
      --v70;
    }
    while (v70);
  }
  swift_bridgeObjectRelease(v69);
  v66 = v112;
  if (v112 >> 62)
    goto LABEL_52;
  v84 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
  v85 = v96;
  if (v84)
  {
    v86 = v100[7];
    v87 = swift_getObjectType(v100[6], v83);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v86 + 48))(&v108, v66, v87, v86);
    swift_bridgeObjectRelease(v66);
    v88 = v110;
    v89 = v111;
    sub_10001413C(&v108, v110);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 120))(v85, 0, v88, v89);
    sub_100027F10(&v108);
  }
  else
  {
    swift_bridgeObjectRelease(v66);
  }
  return v107;
}

uint64_t sub_10042C5F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042C624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 48), a2);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v5 + 232))(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), ObjectType, v5);
}

uint64_t sub_10042C674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042C684(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;

  v96 = a3;
  v99 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v99 - 8);
  v6 = __chkstk_darwin(v99);
  v7 = __chkstk_darwin(v6);
  v101 = (char *)&v94 - v8;
  __chkstk_darwin(v7);
  v12 = (char *)&v94 - v11;
  v13 = (uint64_t)_swiftEmptyArrayStorage;
  v112 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  v100 = a2;
  if (v14)
  {
    v97 = v10;
    v15 = a2[5];
    v107 = a2[4];
    ObjectType = swift_getObjectType(v107, v9);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 464);
    v18 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v105 = *(_QWORD *)(v5 + 72);
    v106 = v17;
    v19 = ObjectType;
    v94 = a1;
    v20 = swift_bridgeObjectRetain(a1);
    v21 = _swiftEmptyArrayStorage;
    v20.n128_u64[0] = 136315138;
    v98 = v20;
    v95 = &type metadata for Any[8];
    v103 = v15;
    v104 = v19;
    while (1)
    {
      sub_10002B1E8(v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v23 = v106(v12, v19, v15);
      v24 = swift_release();
      if (v23)
      {
        v108 = _typeName(_:qualified:)(*a2, 0);
        v109 = v25;
        v26._countAndFlagsBits = 0x746964652DLL;
        v26._object = (void *)0xE500000000000000;
        String.append(_:)(v26);
        v27 = v109;
        v28 = sub_1003003A4((uint64_t)v12, v108, v109);
        v30 = v29;
        swift_bridgeObjectRelease(v27);
        if (!v28)
        {
          v38 = (uint64_t)v101;
          if (qword_10063D7C8 != -1)
            swift_once(&qword_10063D7C8, sub_1004191EC);
          v39 = type metadata accessor for Logger(0);
          sub_100012DC4(v39, (uint64_t)qword_10065C128);
          v40 = sub_10002B1E8((uint64_t)v12, v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v41 = Logger.logObject.getter(v40);
          v42 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc(12, -1);
            v102 = v21;
            v44 = v38;
            v45 = v43;
            v46 = swift_slowAlloc(32, -1);
            v108 = v46;
            *(_DWORD *)v45 = v98.n128_u32[0];
            v47 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
            v48 = TTRTreeStorageItem.treeItemDescription.getter(v99, v47);
            v50 = v49;
            *(_QWORD *)(v45 + 4) = sub_100027E40(v48, v49, &v108);
            swift_bridgeObjectRelease(v50);
            v51 = v44;
            v21 = v102;
            sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Skip edit; failed to create editing session {item: %s}",
              (uint8_t *)v45,
              0xCu);
            swift_arrayDestroy(v46, 1, &type metadata for Any[8]);
            v52 = v46;
            a2 = v100;
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v45, -1, -1);

          }
          else
          {

            sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v15 = v103;
          goto LABEL_5;
        }
        swift_unknownObjectRetain(v28);
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
          v21 = sub_100455CA0(0, v21[2] + 1, 1, v21);
        v32 = v21[2];
        v31 = v21[3];
        if (v32 >= v31 >> 1)
          v21 = sub_100455CA0((_QWORD *)(v31 > 1), v32 + 1, 1, v21);
        v21[2] = v32 + 1;
        v22 = &v21[2 * v32];
        v22[4] = v28;
        v22[5] = v30;
        swift_unknownObjectRelease(v28);
        v15 = v103;
      }
      else
      {
        v33 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 248))(v12, v19, v15, v24);
        if (!v33)
        {
          v102 = v21;
          if (qword_10063D7C8 != -1)
            swift_once(&qword_10063D7C8, sub_1004191EC);
          v53 = type metadata accessor for Logger(0);
          sub_100012DC4(v53, (uint64_t)qword_10065C128);
          v54 = v97;
          v55 = sub_10002B1E8((uint64_t)v12, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v56 = Logger.logObject.getter(v55);
          v57 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = swift_slowAlloc(12, -1);
            v59 = swift_slowAlloc(32, -1);
            v108 = v59;
            *(_DWORD *)v58 = v98.n128_u32[0];
            v60 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
            v61 = TTRTreeStorageItem.treeItemDescription.getter(v99, v60);
            v63 = v62;
            *(_QWORD *)(v58 + 4) = sub_100027E40(v61, v62, &v108);
            swift_bridgeObjectRelease(v63);
            sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v56, v57, "Skip edit; failed to get REMReminder {item: %s}",
              (uint8_t *)v58,
              0xCu);
            swift_arrayDestroy(v59, 1, v95);
            v64 = v59;
            a2 = v100;
            swift_slowDealloc(v64, -1, -1);
            v65 = v58;
            v19 = v104;
            swift_slowDealloc(v65, -1, -1);

          }
          else
          {

            sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v21 = v102;
          v15 = v103;
          goto LABEL_6;
        }
        v34 = v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v36 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        specialized Array._endMutation()(v37);

      }
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      v19 = v104;
LABEL_6:
      v18 += v105;
      if (!--v14)
      {
        swift_bridgeObjectRelease(v94);
        v13 = v112;
        goto LABEL_31;
      }
    }
  }
  v21 = _swiftEmptyArrayStorage;
LABEL_31:
  v66 = v21[2];
  if (!((unint64_t)v13 >> 62))
  {
    v67 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v68 = v66 + v67;
    if (!__OFADD__(v66, v67))
      goto LABEL_33;
LABEL_51:
    __break(1u);
LABEL_52:
    if (v66 < 0)
      v93 = v66;
    else
      v93 = v66 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v66);
    v84 = _CocoaArrayWrapper.endIndex.getter(v93);
    swift_bridgeObjectRelease(v66);
    goto LABEL_41;
  }
  if (v13 < 0)
    v91 = v13;
  else
    v91 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v92 = _CocoaArrayWrapper.endIndex.getter(v91);
  swift_bridgeObjectRelease(v13);
  v68 = v66 + v92;
  if (__OFADD__(v66, v92))
    goto LABEL_51;
LABEL_33:
  if (v68 < 1)
  {
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v13);
    return 0;
  }
  v107 = v68;
  v69 = v21;
  v70 = v21[2];
  v71 = v96;
  if (v70)
  {
    v72 = v21 + 5;
    do
    {
      v74 = *(v72 - 1);
      v73 = *v72;
      v75 = swift_getObjectType(v74, v9);
      v76 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v73 + 72);
      v77 = swift_unknownObjectRetain(v74);
      v76(&v108, v75, v73, v77);
      v78 = v110;
      v79 = v111;
      sub_10001413C(&v108, v110);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 160))(v71, v78, v79);
      v80 = sub_100027F10(&v108);
      v81 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v80);
      v82 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v82 & ~v81) == 0)
        v82 = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v82 | v81, v75, v73);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v73 + 112))(0, v75, v73);
      swift_unknownObjectRelease(v74);
      v72 += 2;
      --v70;
    }
    while (v70);
  }
  swift_bridgeObjectRelease(v69);
  v66 = v112;
  if (v112 >> 62)
    goto LABEL_52;
  v84 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
  v85 = v96;
  if (v84)
  {
    v86 = v100[7];
    v87 = swift_getObjectType(v100[6], v83);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v86 + 48))(&v108, v66, v87, v86);
    swift_bridgeObjectRelease(v66);
    v88 = v110;
    v89 = v111;
    sub_10001413C(&v108, v110);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 160))(v85, v88, v89);
    sub_100027F10(&v108);
  }
  else
  {
    swift_bridgeObjectRelease(v66);
  }
  return v107;
}

_QWORD *sub_10042CE70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _QWORD v27[10];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v6 = v5;
  v39 = a5;
  v38 = a4;
  v42 = *v5;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMAnalyticsEvent(0);
  v30 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v29 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10002A750(&qword_100659458);
  v32 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  __chkstk_darwin(v15);
  v17 = (char *)v27 - v16;
  v37 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v34 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v33 = (char *)v27 - v20;
  v21 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v21);
  v40 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    v27[8] = *(_QWORD *)(a1 + 16);
    v27[6] = v13;
    v41 = v17;
    v36 = v12;
    v23 = v6[5];
    ObjectType = swift_getObjectType(v6[4], v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 352))(a2, a3, ObjectType, v23);
    v27[9] = v6;
    __asm { BR              X10 }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10042D8F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_10042D91C(uint64_t a1)
{
  uint64_t v1;

  return sub_10041E6B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10042D924()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_100089930(*(void **)(v0 + 40), *(void **)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_100089908(*(id *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10042D968(uint64_t a1)
{
  uint64_t v1;

  return sub_10041E8E0(a1, *(_QWORD **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
}

uint64_t sub_10042D9A0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_10041E87C(a1, a2, *(_QWORD *)(v2 + 16));
}

double sub_10042D9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  Swift::OpaquePointer v10;
  void *rawValue;
  double result;
  _BYTE v13[24];

  v1 = v0;
  swift_beginAccess(v0 + 72, v13, 1, 0);
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 72) = _swiftEmptyDictionarySingleton;
  sub_100418DCC(v2, (uint64_t (*)(uint64_t))&TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor);
  v4 = v3;
  if (*(_QWORD *)(v3 + 16) && (Strong = swift_unknownObjectWeakLoadStrong(v0 + 16)) != 0)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v6);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, &off_100606F60, v4, ObjectType, v8);
    swift_bridgeObjectRelease(v4);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  sub_100418DCC(v2, (uint64_t (*)(uint64_t))&TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor);
  rawValue = v10._rawValue;
  if (*((_QWORD *)v10._rawValue + 2))
    TTRInCellEditingPresenterManagingHelper.updateReminderEditingComponentsFor(_:)(v10);
  swift_bridgeObjectRelease(rawValue);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_10042DAAC(uint64_t a1)
{
  uint64_t v1;

  return sub_10042DAB8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10042DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064A080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042DB00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 64, 7);
}

void sub_10042DB3C()
{
  uint64_t v0;

  sub_1004194DC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10042DB50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for TTRReminderListNewReminderInDefaultSectionOption()
{
  return &type metadata for TTRReminderListNewReminderInDefaultSectionOption;
}

unint64_t sub_10042DB74()
{
  unint64_t result;

  result = qword_10065C480;
  if (!qword_10065C480)
  {
    result = swift_getWitnessTable(&unk_100535E34, &type metadata for TTRReminderListNewReminderInDefaultSectionOption);
    atomic_store(result, (unint64_t *)&qword_10065C480);
  }
  return result;
}

unint64_t sub_10042DBBC()
{
  unint64_t result;

  result = qword_10065C488;
  if (!qword_10065C488)
  {
    result = swift_getWitnessTable(&unk_100535E04, &type metadata for TTRReminderListNewReminderInDefaultSectionOption);
    atomic_store(result, (unint64_t *)&qword_10065C488);
  }
  return result;
}

unint64_t sub_10042DC04()
{
  unint64_t result;

  result = qword_10065C490;
  if (!qword_10065C490)
  {
    result = swift_getWitnessTable(&unk_100535E5C, &type metadata for TTRReminderListNewReminderInDefaultSectionOption);
    atomic_store(result, (unint64_t *)&qword_10065C490);
  }
  return result;
}

unint64_t sub_10042DC4C()
{
  unint64_t result;

  result = qword_10065C498;
  if (!qword_10065C498)
  {
    result = swift_getWitnessTable(&unk_100535E94, &type metadata for TTRReminderListNewReminderInDefaultSectionOption);
    atomic_store(result, (unint64_t *)&qword_10065C498);
  }
  return result;
}

id TTRIWelcomeAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIWelcomeAssembly()
{
  return objc_opt_self(_TtC9Reminders19TTRIWelcomeAssembly);
}

id TTRIWelcomeAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10042DD54(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  char *v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  int v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  NSString v22;
  NSString v23;
  id v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  v5 = &a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_upgradeHelpURLString];
  *(_QWORD *)v5 = 0xD000000000000025;
  *((_QWORD *)v5 + 1) = 0x8000000100579260;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_originalBottomConstraints] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_newBottomConstraints] = 0;
  v6 = &a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_presenter];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = &off_1005EFC58;
  *(_OWORD *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel] = xmmword_100522BB0;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 32) - 1;
  v8 = swift_unknownObjectRetain(a1);
  if (v7 > 1
    && (v9 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v8),
        v10 = TTRUserDefaults.lastSeenWelcomeScreenVersion.getter(),
        v9,
        v10))
  {
    v11._countAndFlagsBits = 0xD000000000000018;
    v11._object = (void *)0x8000000100579290;
    v12._countAndFlagsBits = 0x2070552079617453;
    v12._object = (void *)0xEF65746144206F74;
    object = TTRLocalizedString(_:comment:)(v12, v11)._object;
    v14._countAndFlagsBits = 0xD000000000000017;
    v15._countAndFlagsBits = 0xD000000000000020;
    v16._countAndFlagsBits = 0xD000000000000049;
    v14._object = (void *)0x80000001005792B0;
    v16._object = (void *)0x80000001005792D0;
    v15._object = (void *)0x8000000100579320;
    v17 = TTRLocalizedString(_:value:comment:)(v14, v16, v15)._object;
    v18 = (void *)static TTRIAsset.Image.UpgradeWarmingSheet.upgradeHeader.getter();
  }
  else
  {
    v19._countAndFlagsBits = 0xD000000000000016;
    v20._countAndFlagsBits = 0xD00000000000001CLL;
    v19._object = (void *)0x8000000100579350;
    v21._object = (void *)0x8000000100579370;
    v20._object = (void *)0x8000000100579390;
    v21._countAndFlagsBits = 0xD000000000000014;
    object = TTRLocalizedString(_:value:comment:)(v19, v21, v20)._object;
    v18 = 0;
    v17 = 0;
  }
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  if (v17)
  {
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v23 = 0;
  }
  v26.receiver = a2;
  v26.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v26, "initWithTitle:detailText:icon:contentLayout:", v22, v23, v18, 2);

  swift_release(a1);
  return v24;
}

_QWORD *sub_10042DFC0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  id v14;
  char *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  ValueMetadata *v21;
  _UNKNOWN **v22;

  a7[3] = 0;
  swift_unknownObjectWeakInit(a7 + 2, 0);
  a7[4] = a1;
  a7[5] = a2;
  a7[6] = &off_1005EE838;
  a7[7] = a3;
  sub_10042E3E4(a4, (uint64_t)&v18);
  if (v19)
  {
    sub_10042E42C(a4);
    sub_10002E37C(&v18, (uint64_t)&v20);
  }
  else
  {
    sub_100347B98(a1);
    swift_retain(a2);
    v14 = a3;
    sub_10042E42C((uint64_t)&v18);
    v21 = &type metadata for TTRWelcomeInteractor.DefaultDeviceListRequestFactory;
    v22 = &off_1005EED00;
    swift_release(a2);

    sub_10009DDA8(a1);
    sub_10042E42C(a4);
  }
  sub_10002E37C(&v20, (uint64_t)(a7 + 8));
  a7[13] = a5;
  v15 = (char *)a7 + OBJC_IVAR____TtC9Reminders20TTRWelcomeInteractor_getUpgradeInfoTimeout;
  v16 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a6, v16);
  return a7;
}

id sub_10042E0F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;

  v6 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100347B98(a3);
  v10 = *(_QWORD *)TTRCloudKitMigrationManager.shared.unsafeMutableAddressor(v9);
  v11 = (void *)objc_opt_self(REMAppleAccountUtilities);
  swift_retain(v10);
  v12 = objc_msgSend(v11, "sharedInstance");
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  v13 = objc_msgSend(objc_allocWithZone((Class)REMStore), "init");
  OS_dispatch_queue.SchedulerTimeType.Stride.init(integerLiteral:)(10);
  v14 = type metadata accessor for TTRWelcomeInteractor(0);
  v15 = (_QWORD *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = sub_10042DFC0(a3, v10, v12, (uint64_t)&v30, (uint64_t)v13, (uint64_t)v8, v15);
  v17 = type metadata accessor for TTRIWelcomeRouter();
  v18 = swift_allocObject(v17, 40, 7);
  swift_unknownObjectWeakInit(v18 + 16, 0);
  *(_QWORD *)(v18 + 32) = 0;
  swift_unknownObjectWeakInit(v18 + 24, 0);
  *((_QWORD *)&v31 + 1) = v17;
  v32 = &off_1005F6A50;
  *(_QWORD *)&v30 = v18;
  v19 = type metadata accessor for TTRIWelcomePresenter();
  v20 = swift_allocObject(v19, 168, 7);
  v21 = sub_100028D48((uint64_t)&v30, v17);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  v25 = *v23;
  *(_QWORD *)(v20 + 88) = v17;
  *(_QWORD *)(v20 + 96) = &off_1005F6A50;
  *(_QWORD *)(v20 + 64) = v25;
  *(_QWORD *)(v20 + 24) = 0;
  swift_unknownObjectWeakInit(v20 + 16, 0);
  *(_QWORD *)(v20 + 40) = 0;
  swift_unknownObjectWeakInit(v20 + 32, 0);
  *(_QWORD *)(v20 + 104) = 1;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  *(_OWORD *)(v20 + 144) = 0u;
  *(_QWORD *)(v20 + 160) = 0;
  *(_QWORD *)(v20 + 48) = v16;
  *(_QWORD *)(v20 + 56) = &off_1005EE968;
  swift_retain(v16);
  swift_retain(v18);
  sub_100027F10(&v30);
  v26 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIWelcomeViewController());
  v27 = swift_retain(v20);
  v28 = sub_10042DD54(v27, v26);
  v16[3] = &off_1005EFC50;
  swift_unknownObjectWeakAssign(v16 + 2, v20);
  swift_release(v16);
  *(_QWORD *)(v20 + 24) = &off_100602AE0;
  swift_unknownObjectWeakAssign(v20 + 16, v28);
  *(_QWORD *)(v20 + 40) = a2;
  swift_unknownObjectWeakAssign(v20 + 32, a1);
  swift_unknownObjectWeakAssign(v18 + 16, v28);
  *(_QWORD *)(v18 + 32) = a2;
  swift_unknownObjectWeakAssign(v18 + 24, a1);
  swift_release(v18);
  return v28;
}

uint64_t sub_10042E3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10065C4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042E42C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_10065C4C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10042E46C(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void **v35;
  void (*v36)(char *, char *, uint64_t);
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  void *v91;
  void *v92;
  void (*v93)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, _UNKNOWN **);
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v108;
  _QWORD *v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  void **v115;
  uint64_t v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  id v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD v132[3];
  unint64_t v133;
  __int128 v134;
  __int128 v135;
  _QWORD v136[16];
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;

  v124 = a6;
  v125 = a1;
  v126 = a4;
  v115 = (void **)a2;
  v7 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v8 = __chkstk_darwin(v7);
  v117 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v116 = (uint64_t)&v111 - v10;
  v120 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v120);
  v129 = (uint64_t)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v113);
  v114 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v112 = *(_QWORD *)(v128 - 8);
  v13 = __chkstk_darwin(v128);
  v15 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v127 = (char *)&v111 - v16;
  v17 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v17);
  v19 = (void **)((char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v26 = (char *)&v111 - v25;
  v136[0] = _swiftEmptyArrayStorage;
  v27 = sub_100080C90();
  v28 = sub_10002A750(&qword_100641278);
  v29 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v136, v28, v29, v20, v27);
  v30 = objc_msgSend(a3, "customContext");
  if (v30)
  {
    v31 = v30;
    v32 = (void *)REMSmartListCustomContext.filter.getter();

    if (v32)
    {
      REMCustomSmartListFilterDescriptor.excludedSuggestedAttributes.getter();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v24, v20);
    }
  }
  v33 = objc_msgSend(a3, "accountID");
  v34 = a3;
  v35 = v115;
  sub_10002B1E8((uint64_t)v115, (uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v121 = v26;
  v122 = v21;
  v36 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v123 = v20;
  v36(v24, v26, v20);
  v119 = v33;
  sub_100041F70(v19, (uint64_t)v24, v33, (uint64_t)v136);
  v133 = sub_1000D39F0();
  *(_QWORD *)&v134 = &protocol witness table for REMSmartList;
  v132[0] = v34;
  v37 = v34;
  static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter();
  v38 = v127;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(v132, v15);
  v39 = v112;
  v40 = v128;
  v118 = *(void (**)(char *, uint64_t))(v112 + 8);
  v118(v15, v128);
  sub_1004069C0((uint64_t)v132);
  v41 = *v35;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v15, v38, v40);
  v42 = v41;
  v43 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v42);
  v133 = type metadata accessor for TTRUserDefaults(0);
  *(_QWORD *)&v134 = &protocol witness table for TTRUserDefaults;
  v132[0] = v43;
  v44 = type metadata accessor for TTRShowCustomSmartListWithSectionsDataModelSource(0);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v45 = v37;
  v46 = v43;
  v47 = TTRShowCustomSmartListWithSectionsDataModelSource.init(store:smartList:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)(v42, v37, 2, v15, 1, v132);
  v48 = (void *)v136[0];
  v49 = v113;
  v50 = (uint64_t)v114;
  *v114 = 1;
  swift_storeEnumTagMultiPayload(v50, v49, 1);
  v51 = type metadata accessor for TTRShowCustomSmartListViewModelSource(0);
  v52 = swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  swift_retain(v47);
  v53 = sub_10042EE38(v47, (uint64_t)v48, v50, v52);
  sub_10002B1E8((uint64_t)v35, (uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v136, (uint64_t)v132);
  swift_retain(v53);
  v114 = (_BYTE *)v53;
  sub_100042A94((uint64_t)v19, (uint64_t)v132, v53, (uint64_t)&off_100609110, v129);
  v54 = v116;
  sub_100042C0C(v116);
  v55 = type metadata accessor for TTRIShowCustomSmartListPresenter(0);
  v56 = *(unsigned int *)(v55 + 48);
  v57 = *(unsigned __int16 *)(v55 + 52);
  v115 = (void **)v55;
  v58 = swift_allocObject(v55, v56, v57);
  v59 = (uint64_t *)(v58 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
  *v59 = v47;
  v59[1] = (uint64_t)&protocol witness table for TTRShowCustomSmartListWithSectionsDataModelSource;
  v60 = (uint64_t)v117;
  sub_10002B1E8(v54, (uint64_t)v117, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain(v47);
  v61 = v126;
  swift_unknownObjectRetain(v126);
  v62 = (_QWORD *)sub_1002A70CC(v60, v61, v58);
  sub_10001F544(v54, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v63 = v62[18];
  ObjectType = swift_getObjectType(v62[17], v64);
  v66 = *(uint64_t (**)(uint64_t, uint64_t))(v63 + 104);
  swift_retain(v62);
  v67 = v66(ObjectType, v63);
  if (v67)
  {
    v69 = v67;
    v70 = v68;
    v71 = swift_getObjectType(v67, v68);
    LOBYTE(v70) = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 16))(v71, v70);
    swift_release(v62);
    swift_unknownObjectRelease(v69);
    v72 = v70 & 1;
  }
  else
  {
    swift_release(v62);
    v72 = 0;
  }
  v73 = sub_100172EB4(v72, (uint64_t)v62);
  v117 = (char *)v74;
  v76 = v75;
  v78 = v77;
  v116 = swift_getObjectType(v75, v74);
  v62[3] = *(_QWORD *)(v78 + 8);
  v126 = v76;
  swift_unknownObjectWeakAssign(v62 + 2, v76);
  v79 = v62[18];
  v81 = swift_getObjectType(v62[17], v80);
  v82 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 104);
  swift_retain_n(v62, 2);
  v83 = v73;
  v84 = v82(v81, v79);
  v86 = v84;
  if (v84)
  {
    v87 = v85;
    v88 = swift_getObjectType(v84, v85);
    v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 16))(v88, v87);
    swift_release(v62);
    swift_unknownObjectRelease(v86);
    v86 = v89 & 1;
  }
  else
  {
    swift_release(v62);
  }
  v90 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v91 = v83;
  v92 = (void *)sub_1002A8974(v62, v83, v117, v86, 0, 1, 0, v90);
  swift_release(v62);

  v93 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v78 + 32);
  v94 = v92;
  v117 = v94;
  v93(v92, &off_1005FCD60, v116, v78);
  v95 = v136[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v136[0] + direct field offset for TTRRemindersListInteractor.delegate, &v131, 1, 0);
  *(_QWORD *)(v95 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v95, v62);
  v96 = v136[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v136[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v130, 1, 0);
  *(_QWORD *)(v96 + 8) = &protocol witness table for TTRShowCustomSmartListWithSectionsDataModelSource;
  swift_unknownObjectWeakAssign(v96, v47);
  swift_unknownObjectWeakAssign(v136[3] + 16, v94);
  v97 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v47 + 408);
  v98 = v114;
  v99 = swift_retain(v114);
  v97(v99, &off_100608328);
  swift_retain(v98);
  v100 = swift_retain(v62);
  sub_10048D4EC(v100, (uint64_t)&off_1005F30C0);
  swift_release(v98);
  swift_release(v62);
  v101 = v129;
  v102 = *(_QWORD *)(v129 + *(int *)(v120 + 28));
  *(_QWORD *)(v102 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v102 + 16, v62);
  sub_100028CFC((uint64_t)&v137, (uint64_t)v132);
  v134 = v138;
  v135 = v139;
  v103 = v138 + 32;
  *(_QWORD *)(v138 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v103, v62);
  sub_100027F10(v132);
  sub_100028CFC((uint64_t)&v140, (uint64_t)v132);
  v104 = v141;
  v134 = v141;
  v106 = swift_getObjectType(v141, v105);
  v107 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v104 + 1) + 48);
  swift_retain(v62);
  v108 = swift_unknownObjectRetain(v104);
  v107(v62, &off_1005F2FF0, v106, *((_QWORD *)&v104 + 1), v108);
  swift_unknownObjectRelease(v104);
  sub_100027F10(v132);
  (*(void (**)(_QWORD))(*(_QWORD *)v47 + 456))(v124 & 1);
  v109 = v125;
  v125[3] = v115;
  v109[4] = &off_100603B80;
  *v109 = v62;

  swift_release(v47);
  swift_release(v98);

  swift_unknownObjectRelease(v126);
  sub_10001F544(v101, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v118(v127, v128);
  sub_100043844((uint64_t)v136);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
  return (uint64_t)v117;
}

id TTRIShowCustomSmartListAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowCustomSmartListAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowCustomSmartListAssembly()
{
  return objc_opt_self(_TtC9Reminders31TTRIShowCustomSmartListAssembly);
}

id TTRIShowCustomSmartListAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowCustomSmartListAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10042EE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a4
            + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList) = 0;
  v11 = a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = 1;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = 0;
  sub_10002B1E8(a3, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v12 = sub_1002A8704(a1, a2, (uint64_t)v10, a4);
  sub_10001F544(a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  return v12;
}

uint64_t sub_10042F0FC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v3 = a1 & 1;
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  swift_unknownObjectRetain(v4);
  v8 = v7(v3, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_10042F188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7;
}

uint64_t sub_10042F1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10042F25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_unknownObjectRetain(v5);
  v8(a1, a2, ObjectType, v6);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_10042F2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10042F33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_10042F3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_10042F424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 72);
  swift_unknownObjectRetain(v4);
  v8 = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_10042F498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80);
  swift_unknownObjectRetain(v7);
  v10(a1, a2, a3, ObjectType, v8);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_10042F518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = a2;
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88);
  swift_unknownObjectRetain(v5);
  LOBYTE(v3) = v8(a1, v3, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v3 & 1;
}

uint64_t sub_10042F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 96);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042F62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *(_QWORD *)(v6 + 48);
  v13 = *(_QWORD *)(v6 + 64);
  ObjectType = swift_getObjectType(v12, a2);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 104);
  swift_unknownObjectRetain(v12);
  v15(a1, a2, a3, a4, a5, a6, ObjectType, v13);
  return swift_unknownObjectRelease(v12);
}

uint64_t sub_10042F6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 112);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10042F734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 120);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10042F79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 128);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042F82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *(_QWORD *)(v6 + 48);
  v13 = *(_QWORD *)(v6 + 64);
  ObjectType = swift_getObjectType(v12, a2);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 136);
  swift_unknownObjectRetain(v12);
  v15(a1, a2, a3, a4, a5, a6, ObjectType, v13);
  return swift_unknownObjectRelease(v12);
}

uint64_t sub_10042F8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 144);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10042F93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 152);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042F9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 160);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7;
}

uint64_t sub_10042FA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 168);
  swift_unknownObjectRetain(v4);
  v8 = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_10042FAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 176);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10042FB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 192);
  swift_unknownObjectRetain(v7);
  v10(a1, a2, a3, ObjectType, v8);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_10042FB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 200);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042FC24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 208);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10042FC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  char v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 216);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7 & 1;
}

uint64_t sub_10042FCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = a2;
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 224);
  swift_unknownObjectRetain(v5);
  LOBYTE(v3) = v8(a1, v3, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v3 & 1;
}

uint64_t sub_10042FD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 232);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042FE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 240);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042FEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 248);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042FF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 256);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10042FFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 264);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10043003C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 272);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10043009C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 280);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 288);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100430170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 296);
  swift_unknownObjectRetain(v7);
  v10(a1, a2, a3, ObjectType, v8);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_1004301F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 304);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100430258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 312);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_1004302D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 320);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100430330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 328);
  swift_unknownObjectRetain(v5);
  v8(a1, a2, ObjectType, v6);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_1004303B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 336);
  swift_unknownObjectRetain(v4);
  v8 = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_100430430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 344);
  swift_unknownObjectRetain(v5);
  v9 = v8(a1, a2, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v9;
}

uint64_t sub_1004304C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;
  _QWORD v12[11];

  v6 = *(_QWORD *)(v3 + 48);
  v7 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v6, a2);
  v9 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))(v7 + 352);
  v10 = swift_unknownObjectRetain(v6);
  v9(v12, a1, ObjectType, v7, v10);
  swift_unknownObjectRelease(v6);
  return sub_100179CD0((uint64_t)v12, a3);
}

uint64_t sub_100430554(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v10 + 360);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3 & 0x101FF, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_1004305EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 368);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10043064C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 376);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_1004306AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 408);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7;
}

uint64_t sub_100430718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 416);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7;
}

uint64_t sub_10043078C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 424);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100430804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 432);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10043086C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 448);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7;
}

uint64_t sub_1004308D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 456);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_10043094C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 464);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_1004309C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 472);
  swift_unknownObjectRetain(v4);
  v8 = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_100430A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 480);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 488);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 496);
  swift_unknownObjectRetain(v7);
  LOBYTE(a3) = v10(a1, a2, a3, ObjectType, v8);
  swift_unknownObjectRelease(v7);
  return a3 & 1;
}

uint64_t sub_100430BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = a2;
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 512);
  swift_unknownObjectRetain(v5);
  LOBYTE(v3) = v8(a1, v3, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v3 & 1;
}

uint64_t sub_100430C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(_QWORD *)(v5 + 48);
  v12 = *(_QWORD *)(v5 + 64);
  ObjectType = swift_getObjectType(v11, a2);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 520);
  swift_unknownObjectRetain(v11);
  v14(a1, a2, a3, a4, a5, ObjectType, v12);
  return swift_unknownObjectRelease(v11);
}

uint64_t sub_100430CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = a2;
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 528);
  swift_unknownObjectRetain(v5);
  LOBYTE(v3) = v8(a1, v3, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v3 & 1;
}

uint64_t sub_100430D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 536);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100430DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 544);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 552);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 560);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100430F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 568);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100430F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 576);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100430FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 584);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 592);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_1004310CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  char v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 600);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7 & 1;
}

uint64_t sub_100431138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 608);
  swift_unknownObjectRetain(v4);
  v8 = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v8;
}

uint64_t sub_1004311B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 616);
  swift_unknownObjectRetain(v4);
  LODWORD(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 0xFFFFFF01;
}

uint64_t sub_100431228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = a2;
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 624);
  swift_unknownObjectRetain(v5);
  LOBYTE(v3) = v8(a1, v3, ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v3 & 1;
}

uint64_t sub_1004312AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(_QWORD *)(v4 + 48);
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(v9, a2);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 632);
  swift_unknownObjectRetain(v9);
  v12(a1, a2, a3, a4, ObjectType, v10);
  return swift_unknownObjectRelease(v9);
}

uint64_t sub_10043133C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 640);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_1004313B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 648);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100431424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 656);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100431498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 664);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_10043150C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 672);
  swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100431580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 680);
  swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_1004315E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 688);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 696);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_1004316A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 704);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 712);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  char v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 720);
  swift_unknownObjectRetain(v3);
  v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v7 & 1;
}

uint64_t sub_1004317D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 728);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_10043183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double);
  uint64_t v17;

  v13 = *(_QWORD *)(v6 + 48);
  v14 = *(_QWORD *)(v6 + 64);
  ObjectType = swift_getObjectType(v13, a2);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v14 + 736);
  swift_unknownObjectRetain(v13);
  v17 = v16(a1, a2, a3, a4, ObjectType, v14, a5, a6);
  swift_unknownObjectRelease(v13);
  return v17;
}

uint64_t sub_1004318FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 744);
  v9 = swift_unknownObjectRetain(v5);
  v8(a1, a2, ObjectType, v6, v9);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_100431970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 752);
  v8 = swift_unknownObjectRetain(v4);
  v9 = v7(a1, ObjectType, v5, v8);
  swift_unknownObjectRelease(v4);
  return v9;
}

uint64_t sub_1004319E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 760);
  v7 = swift_unknownObjectRetain(v3);
  v6(ObjectType, v4, v7);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 768);
  v7 = swift_unknownObjectRetain(v3);
  v6(ObjectType, v4, v7);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 776);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 784);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 792);
  v7 = swift_unknownObjectRetain(v3);
  v6(ObjectType, v4, v7);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  char v8;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 800);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(ObjectType, v4, v7);
  swift_unknownObjectRelease(v3);
  return v8 & 1;
}

uint64_t sub_100431C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 808);
  v9 = swift_unknownObjectRetain(v5);
  v8(a1, a2, ObjectType, v6, v9);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_100431CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 816);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 824);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 832);
  v7 = swift_unknownObjectRetain(v3);
  v6(ObjectType, v4, v7);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  char v8;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 848);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(ObjectType, v4, v7);
  swift_unknownObjectRelease(v3);
  return v8 & 1;
}

uint64_t sub_100431E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 856);
  v7 = swift_unknownObjectRetain(v3);
  v6(ObjectType, v4, v7);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100431E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 864);
  v11 = swift_unknownObjectRetain(v7);
  v10(a1, a2, a3, ObjectType, v8, v11);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_100431F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 872);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100431F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 880);
  v8 = swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5, v8);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_100431FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 888);
  v11 = swift_unknownObjectRetain(v7);
  v10(a1, a2, a3, ObjectType, v8, v11);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_10043205C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 896);
  v8 = swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5, v8);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_1004320CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 904);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_100432130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 912);
  v8 = swift_unknownObjectRetain(v4);
  v7(a1, ObjectType, v5, v8);
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_1004321A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 920);
  v8 = swift_unknownObjectRetain(v4);
  v9 = v7(a1, ObjectType, v5, v8);
  swift_unknownObjectRelease(v4);
  return v9;
}

uint64_t sub_10043221C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 928);
  v8 = swift_unknownObjectRetain(v4);
  LOBYTE(a1) = v7(a1, ObjectType, v5, v8);
  swift_unknownObjectRelease(v4);
  return a1 & 1;
}

uint64_t sub_10043228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;

  v7 = *(_QWORD *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(v7, a2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 936);
  v11 = swift_unknownObjectRetain(v7);
  LOBYTE(a3) = v10(a1, a2, a3, ObjectType, v8, v11);
  swift_unknownObjectRelease(v7);
  return a3 & 1;
}

uint64_t sub_100432314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065C500);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065C500);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t *sub_1004323A4(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = v5;
  v12 = *v6;
  v6[3] = 0;
  swift_unknownObjectWeakInit(v6 + 2, 0);
  v6[9] = 0;
  v6[4] = (uint64_t)a2;
  v6[5] = (uint64_t)a1;
  v6[6] = (uint64_t)a3;
  v13 = type metadata accessor for TTRAccountEditor(0);
  v14 = sub_1004325D4();
  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a5;
  TTRUndoableEditing.init(changeItem:undoManager:)(&v22, v15, a5, v13, v14);
  v19 = v22;
  v6[7] = a4;
  v6[8] = v19;
  v20 = NSUndoManager.observeChanges<A>(target:handler:)(v6, sub_1004324B8, 0, v12);

  v6[9] = v20;
  swift_release();
  return v6;
}

uint64_t sub_1004324B8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v2 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v4 = Strong;
      sub_10005422C();
      swift_unknownObjectRelease(v2);
      v2 = v4;
    }
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_100432510()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 72))
  {
    sub_100005ED8(0, (unint64_t *)&qword_10065C600, NSUndoManager_ptr);
    v1 = swift_retain();
    static NSUndoManager.removeObserver(with:)(v1);
    swift_release();
    sub_1000381C8(v0 + 16);

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    swift_release();
    swift_release();
    swift_deallocClassInstance(v0, 80, 7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRIGroupMembershipInteractor()
{
  return objc_opt_self(_TtC9Reminders29TTRIGroupMembershipInteractor);
}

unint64_t sub_1004325D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065C5E8;
  if (!qword_10065C5E8)
  {
    v1 = type metadata accessor for TTRAccountEditor(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRAccountEditor, v1);
    atomic_store(result, (unint64_t *)&qword_10065C5E8);
  }
  return result;
}

void sub_10043261C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 56);
  swift_retain(v0);
  swift_bridgeObjectRetain(v1);
  sub_100432DBC(v2, v0);
  v4 = v3;
  swift_bridgeObjectRelease(v1);
  swift_release(v0);
  v5 = *(void **)(v0 + 40);
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v7 = (unsigned __int8 *)(v4 + 40);
    do
    {
      v8 = *((_QWORD *)v7 - 1);
      v9 = *v7;
      v7 += 16;
      v10 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter(v8, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v11 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease(v4);
  v13 = sub_10002A750((uint64_t *)&unk_10065C5F0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v15 = objc_msgSend(v5, "mergeableOrderingNodesByOrderingMergeableOrderingNodes:", isa);

  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v13);
  if (!((unint64_t)v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
    if (v17)
      goto LABEL_6;
LABEL_22:
    swift_bridgeObjectRelease_n(v16, 2);
    return;
  }
  if (v16 < 0)
    v29 = v16;
  else
    v29 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v17 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v17)
    goto LABEL_22;
LABEL_6:
  if (v17 >= 1)
  {
    v18 = 0;
    v19 = _swiftEmptyArrayStorage;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      }
      else
      {
        v22 = *(_QWORD *)(v16 + 8 * v18 + 32);
        swift_unknownObjectRetain(v22);
      }
      swift_getObjectType(v22, v21);
      v23 = sub_1004328CC();
      v25 = v24;
      v26 = ~v24;
      swift_unknownObjectRelease(v22);
      if (v26)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = sub_100455DE8(0, v19[2] + 1, 1, v19);
        v28 = v19[2];
        v27 = v19[3];
        if (v28 >= v27 >> 1)
          v19 = sub_100455DE8((_QWORD *)(v27 > 1), v28 + 1, 1, v19);
        v19[2] = v28 + 1;
        v20 = &v19[2 * v28];
        v20[4] = v23;
        *((_BYTE *)v20 + 40) = v25 & 1;
      }
      ++v18;
    }
    while (v17 != v18);
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t sub_1004328CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_opt_self(REMListChangeItem);
  v2 = swift_dynamicCastObjCClass(v0, v1);
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    v4 = objc_opt_self(REMSmartListChangeItem);
    v3 = swift_dynamicCastObjCClass(v0, v4);
    if (!v3)
      return v3;
  }
  swift_unknownObjectRetain(v0);
  return v3;
}

uint64_t sub_100432950(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter(a1, a2 & 1);
  TTRAccountEditor.move(list:to:positionWithinGroup:)(v3, *(_QWORD *)(v2 + 48), 1, 2);
  swift_unknownObjectRelease(v3);
  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v5 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v7 = Strong;
      sub_10005422C();
      swift_unknownObjectRelease(v5);
      v5 = v7;
    }
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_1004329E0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;

  v4 = v3;
  v7 = a2 & 1;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10043261C();
  v13 = v12;
  v14 = sub_100315B8C(a1, v7, v12);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  if ((v16 & 1) == 0)
  {
    if (v14 == a3)
      return;
    sub_10043261C();
    if (a3 < 0)
    {
      __break(1u);
    }
    else
    {
      v18 = v17;
      if (*(_QWORD *)(v17 + 16) > (unint64_t)a3)
      {
        v19 = v14 < a3;
        v20 = v17 + 16 * a3;
        v21 = *(void **)(v20 + 32);
        v22 = *(unsigned __int8 *)(v20 + 40);
        v11 = v21;
        swift_bridgeObjectRelease(v18);
        v23 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter(a1, v7);
        v24 = *(_QWORD *)(v4 + 48);
        v48 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter(v21, v22);
        v25 = sub_10002A750((uint64_t *)&unk_10065C5F0);
        TTRRelativeInsertionPosition.init(sibling:isAfter:)(&v49, &v48, v19, v25);
        v26 = v49;
        LOBYTE(v19) = v50;
        TTRAccountEditor.move(list:to:positionWithinGroup:)(v23, v24, v49, v50);
        swift_unknownObjectRelease(v23);
        sub_100432FD0(v26, v19);
        if (qword_10063D7D0 == -1)
        {
LABEL_6:
          sub_100012DC4(v8, (uint64_t)qword_10065C500);
          v27 = swift_retain_n(v4, 2);
          v28 = Logger.logObject.getter(v27);
          v29 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v28, v29))
          {
            v30 = (uint8_t *)swift_slowAlloc(12, -1);
            v31 = swift_slowAlloc(32, -1);
            v49 = v31;
            *(_DWORD *)v30 = 136315138;
            v47 = v30 + 4;
            sub_10043261C();
            v33 = v32;
            v34 = Array.description.getter(v32, &type metadata for TTRListOrCustomSmartListChangeItem);
            v35 = v11;
            v37 = v36;
            swift_bridgeObjectRelease(v33);
            v48 = sub_100027E40(v34, v37, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v47, v30 + 12);
            swift_release_n(v4, 2);
            v38 = v37;
            v11 = v35;
            swift_bridgeObjectRelease(v38);
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "Member lists after move {membersList: %s}", v30, 0xCu);
            swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
            swift_slowDealloc(v31, -1, -1);
            swift_slowDealloc(v30, -1, -1);

          }
          else
          {

            swift_release_n(v4, 2);
          }
          Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
          if (Strong)
          {
            v40 = Strong;
            v41 = swift_unknownObjectWeakLoadStrong(Strong + 16);
            if (v41)
            {
              v42 = v41;
              sub_10005422C();

              swift_unknownObjectRelease(v40);
              v43 = v42;
            }
            else
            {

              v43 = v40;
            }
            swift_unknownObjectRelease(v43);
          }
          else
          {

          }
          return;
        }
LABEL_18:
        swift_once(&qword_10063D7D0, sub_100432314);
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  if (qword_10063D7D0 != -1)
    swift_once(&qword_10063D7D0, sub_100432314);
  v44 = sub_100012DC4(v8, (uint64_t)qword_10065C500);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v44, v8);
  v45 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v46 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Tried to move list that is not part of the current group", 56, 2uLL, v45, v46);
  __break(1u);
}

void sub_100432DBC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char **v8;
  unint64_t v9;
  unsigned __int8 *i;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return;
  v4 = 0;
  v5 = a1 + 40;
  v6 = _swiftEmptyArrayStorage;
  v7 = -(uint64_t)v2;
  v8 = &selRef_supportsAttachments;
  v22 = a1 + 40;
  v23 = *(_QWORD *)(a1 + 16);
  v25 = -(uint64_t)v2;
  do
  {
    v24 = v6;
    if (v4 <= v2)
      v9 = v2;
    else
      v9 = v4;
    v27 = -(uint64_t)v9;
    for (i = (unsigned __int8 *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v27 + v4 == 1)
      {
        __break(1u);
        return;
      }
      v12 = (void *)*((_QWORD *)i - 1);
      v13 = *i;
      v11 = v12;
      v26 = v13;
      v14 = (void *)TTRListOrCustomSmartListChangeItem.parentListID.getter(v12, v13);
      v15 = objc_msgSend(*(id *)(a2 + 32), v8[41]);
      v16 = v15;
      if (!v14)
        break;
      if (v15)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v17 = v14;
        v18 = static NSObject.== infix(_:_:)(v17, v16);

        v7 = v25;
        v8 = &selRef_supportsAttachments;

        if ((v18 & 1) != 0)
          goto LABEL_16;
      }
      else
      {

        v11 = v14;
      }
LABEL_8:

      ++v4;
      if (v7 + v4 == 1)
        return;
    }
    if (v15)
    {

      v11 = v16;
      goto LABEL_8;
    }
LABEL_16:
    v6 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
    {
      sub_1003D81E4(0, v24[2] + 1, 1);
      v6 = v24;
    }
    v20 = v6[2];
    v19 = v6[3];
    if (v20 >= v19 >> 1)
    {
      sub_1003D81E4(v19 > 1, v20 + 1, 1);
      v6 = v24;
    }
    v6[2] = v20 + 1;
    v21 = &v6[2 * v20];
    v21[4] = v12;
    *((_BYTE *)v21 + 40) = v26;
    v5 = v22;
    v2 = v23;
  }
  while (v7 + v4);
}

uint64_t sub_100432FD0(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return swift_unknownObjectRelease(result);
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListEditableSectionNameLayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100433030 + 4 * byte_100536185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100433064 + 4 * byte_100536180[v4]))();
}

uint64_t sub_100433064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043306C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100433074);
  return result;
}

uint64_t sub_100433080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100433088);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10043308C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100433094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListEditableSectionNameLayoutStyle()
{
  return &type metadata for TTRIRemindersListEditableSectionNameLayoutStyle;
}

void *sub_1004330B0()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

unint64_t sub_1004330E0()
{
  unint64_t result;

  result = qword_10065C610;
  if (!qword_10065C610)
  {
    result = swift_getWitnessTable(&unk_100536240, &type metadata for TTRIRemindersListEditableSectionNameLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_10065C610);
  }
  return result;
}

void *sub_100433124()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

uint64_t type metadata accessor for TTRIWelcomeNavigationRouter()
{
  return objc_opt_self(_TtC9Reminders27TTRIWelcomeNavigationRouter);
}

void sub_100433170(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];
  _QWORD v8[3];

  v3 = sub_100433610(a1, a2);
  swift_beginAccess(v2 + 48, v8, 33, 0);
  v4 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v2, v4);
  swift_endAccess(v8);
  swift_beginAccess(v2 + 56, v8, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v2, v4);
  swift_endAccess(v8);
  v8[0] = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain(v8[0]);
  sub_10048F480(v3);
  swift_bridgeObjectRelease(v3);
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = v8[0];
  swift_bridgeObjectRelease(v5);
  if (*(_QWORD *)(v2 + 32))
  {
    __chkstk_darwin(v6);
    v7[2] = v2;
    v7[3] = 7;
    swift_retain();
    TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_10036A848, v7);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004332B0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100433610(a1, a2);
  swift_beginAccess(v3 + 48, v19, 33, 0);
  v10 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v3, v10);
  swift_endAccess(v19);
  swift_beginAccess(v3 + 56, v19, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v3, v10);
  swift_endAccess(v19);
  v11 = *(_QWORD *)(v3 + 48);
  v19[0] = v11;
  if (*(_QWORD *)(v11 + 16) && (v12 = *(_QWORD *)(v9 + 16)) != 0)
  {
    v13 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ItemID(0) - 8);
    v14 = v9 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v9);
    do
    {
      sub_1000F4754(v14, (uint64_t)v8);
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006463C0);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(v9);
    v16 = v19[0];
    v11 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    swift_bridgeObjectRetain(v11);
    v16 = v11;
  }
  *(_QWORD *)(v3 + 48) = v16;
  swift_bridgeObjectRelease(v11);
  if (*(_QWORD *)(v3 + 32))
  {
    __chkstk_darwin(v17);
    *(&v18 - 2) = v3;
    *(&v18 - 1) = 7;
    swift_retain();
    TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_100370770, &v18 - 4);
    swift_bridgeObjectRelease(v9);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004334CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(unsigned __int8 *)(result + 16);
    swift_beginAccess(result + 48, v10, 0, 0);
    v7 = *(_QWORD *)(v5 + 48);
    swift_beginAccess(v5 + 56, v9, 0, 0);
    v8 = *(_QWORD *)(v5 + 56);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    result = swift_release(v5);
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_100433590(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 32);
    swift_retain(v6);
    result = swift_release(v5);
    if (v6)
    {
      TTRObservableViewModelCollection.prune(keeping:)(v2);
      return swift_release(v6);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100433610(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100642EB0);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 32) & ~v13;
  v28 = *(_QWORD *)(v9 + 72);
  v15 = swift_allocObject(v12, v14 + v28, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100520250;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v15);
  v30 = v15;
  if ((a2 & 1) != 0)
  {
    v16 = TTRRemindersBoardMainDiffableDataSource.childrenExcludingCollapsed(of:)(a1);
    v17 = v16;
    v18 = *(_QWORD *)(v16 + 16);
    if (v18)
    {
      v29 = _swiftEmptyArrayStorage;
      sub_1003D8424(0, v18, 0);
      v19 = *(unsigned __int8 *)(v5 + 80);
      v27 = v17;
      v20 = v17 + ((v19 + 32) & ~v19);
      v21 = *(_QWORD *)(v5 + 72);
      v22 = v29;
      do
      {
        v23 = sub_1000493D8(v20, (uint64_t)v7);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v23);
        sub_10004941C((uint64_t)v7);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        {
          sub_1003D8424(0, v22[2] + 1, 1);
          v22 = v29;
        }
        v25 = v22[2];
        v24 = v22[3];
        if (v25 >= v24 >> 1)
        {
          sub_1003D8424(v24 > 1, v25 + 1, 1);
          v22 = v29;
        }
        v22[2] = v25 + 1;
        sub_1000CDFA4((uint64_t)v11, (uint64_t)v22 + v14 + v25 * v28);
        v20 += v21;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease(v27);
    }
    else
    {
      swift_bridgeObjectRelease(v16);
      v22 = _swiftEmptyArrayStorage;
    }
    sub_100450BA8((uint64_t)v22);
    return v30;
  }
  return v15;
}

BOOL sub_100433838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 24)
     + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees;
  swift_beginAccess(v7, v18, 0, 0);
  v8 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v10 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_100010634(v7, (uint64_t)v15);
    v11 = v16;
    v12 = v17;
    sub_10001413C(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1, v11, v12);
    sub_100027F10(v15);
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v10 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 1, v13) == 1;
  }
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  return v10;
}

uint64_t sub_1004339A8@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];

  v6 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a1 + 48, v11, 0, 0);
  v7 = *(_QWORD *)(a1 + 48);
  swift_beginAccess(a1 + 56, &v10, 0, 0);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a3 = (v6 & 0xFFFFFFFFFFFFFEFFLL | ((unint64_t)(a2 & 1) << 8)) ^ 0x100;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = ~(a2 >> 1) & 1;
  *(_QWORD *)(a3 + 24) = v8;
  *(_BYTE *)(a3 + 32) = (a2 & 4) == 0;
  swift_bridgeObjectRetain(v7);
  return swift_bridgeObjectRetain(v8);
}

uint64_t sub_100433A54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRIRemindersBoardSelectionController()
{
  return objc_opt_self(_TtC9Reminders37TTRIRemindersBoardSelectionController);
}

uint64_t sub_100433AB8()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource));
}

uint64_t sub_100433AC8()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100433B08()
{
  return type metadata accessor for TTRIShowSearchResultPresenter(0);
}

uint64_t type metadata accessor for TTRIShowSearchResultPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10065C7B8;
  if (!qword_10065C7B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowSearchResultPresenter);
  return result;
}

uint64_t sub_100433B4C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100536390;
  v2[1] = &unk_1005363A8;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 2296);
}

uint64_t sub_100433B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v20;
  _BYTE v22[24];

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 232);
  v7 = *(_QWORD *)(v6 + 96);
  swift_beginAccess(v7 + 40, v22, 0, 0);
  v9 = *(_QWORD *)(v7 + 40);
  if (v9)
  {
    v10 = *(_QWORD *)(v7 + 48);
    ObjectType = swift_getObjectType(v9, v8);
    v12 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 24);
    v13 = swift_unknownObjectRetain(v9);
    v12(ObjectType, v10, v13);
    swift_unknownObjectRelease(v9);
  }
  sub_10041C214(v6);
  v14._object = (void *)0x8000000100566EA0;
  v14._countAndFlagsBits = 0xD000000000000013;
  TTRDeferredAction.drain(reason:)(v14);
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource);
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource + 8);
  v18 = swift_getObjectType(v15, v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v16 + 24);
  v20 = swift_bridgeObjectRetain(a2);
  return v19(a1, a2, v18, v16, v20);
}

uint64_t sub_100433C94(uint64_t a1)
{
  id v1;
  char v2;

  v1 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v2 = TTRUserDefaults.showingLargeAttachments(forType:)(6);

  return v2 & 1;
}

void sub_100433CD0(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 6);

}

uint64_t sub_100433D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  __chkstk_darwin(v1);
  v4 = (_QWORD *)((char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *v4 = v6;
  v4[1] = v7;
  swift_storeEnumTagMultiPayload(v4, v2, 3);
  v11[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v11[4] = &protocol witness table for TTRUserActivityListPayload;
  v8 = sub_100028D70(v11);
  sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityListPayload.State);
  swift_bridgeObjectRetain(v5);
  NSUserActivity.setPayload(_:)(v11);
  return sub_100027F10(v11);
}

uint64_t sub_100433E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD v16[5];

  v1 = v0;
  v2 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  __chkstk_darwin(v2);
  v4 = (_QWORD *)((char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023A73C();
  v8 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  if (v10)
  {
    v11 = *v9;
    v12 = v10;
  }
  else
  {
    v11 = 0;
    v12 = 0xE000000000000000;
  }
  *v4 = v11;
  v4[1] = v12;
  swift_storeEnumTagMultiPayload(v4, v2, 3);
  sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  v16[3] = v5;
  v16[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v13 = sub_100028D70(v16);
  sub_10002B1E8((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  swift_bridgeObjectRetain(v10);
  NSUserActivity.setPayload(_:)(v16);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_100027F10(v16);
  return v8;
}

uint64_t sub_100433F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  BOOL v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[5];

  v2 = v1;
  v50 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v3);
  v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  if (v11)
  {
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  }
  else
  {
    v12 = 0;
    v13 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain(v11);
  v14._object = (void *)0x8000000100579630;
  v15._object = (void *)0x8000000100579650;
  v14._countAndFlagsBits = 0x1000000000000014;
  v15._countAndFlagsBits = 0xD000000000000018;
  v16 = TTRLocalizedString(_:comment:)(v14, v15);
  v17 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100520250;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_1000770A4();
  *(_QWORD *)(v18 + 32) = v12;
  *(_QWORD *)(v18 + 40) = v13;
  swift_bridgeObjectRetain(v13);
  v19 = String.init(format:_:)(v16._countAndFlagsBits, v16._object, v18);
  v47 = v20;
  v48 = v19;
  swift_bridgeObjectRelease(v16._object);
  *v10 = v12;
  v10[1] = v13;
  v21 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v10, v21, 4);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
  type metadata accessor for TTRListColors(0);
  v46 = static TTRListColors.searchResult.getter();
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v23);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
  v26 = v25(ObjectType, v22);
  v27 = v26;
  if (v26)
    swift_unknownObjectRelease(v26);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(ObjectType, v22);
  v29 = v28;
  if (v28)
    swift_unknownObjectRelease(v28);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v22 + 56))(v51, ObjectType, v22);
  v30 = v51[3];
  sub_1000073A0((uint64_t)v51, &qword_100649FC0);
  v31 = v25(ObjectType, v22);
  if (v31)
  {
    v33 = v31;
    v34 = v32;
    v35 = swift_getObjectType(v31, v32);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
    swift_unknownObjectRelease(v33);
  }
  else
  {
    v36 = 0;
  }
  v37 = v29 != 0;
  v38 = v30 != 0;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount + 8))
    v39 = 0;
  else
    v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount);
  v40 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v7, 1, 1, v40);
  v41 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v42 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v49, 1, 1, v41);
  BYTE6(v45) = 0;
  WORD2(v45) = 0;
  LODWORD(v45) = 0;
  HIBYTE(v44) = v36 & 1;
  BYTE6(v44) = v38;
  WORD2(v44) = 0;
  BYTE3(v44) = v37;
  BYTE2(v44) = 0;
  BYTE1(v44) = v27 != 0;
  LOBYTE(v44) = 0;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v10, v48, v47, v46, 0, 1, 0, 3, v44, 0, v39, 0, 0, 0, 0, v7, v42, v45);
}

uint64_t sub_100434320()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm
                                             + 8));
}

uint64_t sub_100434334()
{
  return type metadata accessor for TTRShowSearchResultViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowSearchResultViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10065D148;
  if (!qword_10065D148)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowSearchResultViewModelSource);
  return result;
}

uint64_t sub_100434378(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\t";
  v2[1] = &unk_100536410;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 1336);
}

void sub_1004343C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, unint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  _WORD *v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  _WORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  __int128 v116[2];
  __int16 v117;
  char v118;
  _QWORD v119[2];
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  __int16 v125;
  char v126;
  char v127;
  _BYTE v128[3];
  _WORD v129[28];
  _OWORD v130[2];
  uint64_t v131;
  uint64_t v132;
  char v133;
  _BYTE v134[136];

  v3 = v2;
  v110 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v110);
  v109 = (uint64_t *)((char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v6);
  v108 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v107 = (char *)&v87 - v9;
  v106 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist(0);
  v115 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v105 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v103 = *(_QWORD *)(v11 - 8);
  v104 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v17);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10002A750(&qword_1006436C0);
  __chkstk_darwin(v102);
  v101 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v100 = (unint64_t *)((char *)&v87 - v22);
  __chkstk_darwin(v23);
  v114 = (uint64_t *)((char *)&v87 - v24);
  v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v88 = *(_QWORD *)(v25 - 8);
  v89 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter(v28);
  v30 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount;
  *(_QWORD *)v30 = v29;
  *(_BYTE *)(v30 + 8) = v31 & 1;
  v32 = sub_100433F60((uint64_t)v27);
  v33 = REMRemindersListDataView.ListsModel.groups.getter(v32);
  *(_QWORD *)&v116[0] = _swiftEmptyArrayStorage;
  sub_1003D83CC(0, 0, 0);
  v34 = *(_QWORD *)&v116[0];
  v35 = *(_QWORD *)(v33 + 16);
  v36 = swift_bridgeObjectRetain(v33);
  v99 = v35;
  v93 = a2;
  v94 = v3;
  v91 = v19;
  v92 = v16;
  v90 = v27;
  if (v35)
  {
    v37 = 0;
    v95 = v129;
    v96 = v128;
    v97 = v33;
    v98 = v13;
    while (v37 < *(_QWORD *)(v33 + 16))
    {
      v38 = v33
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
          + *(_QWORD *)(v115 + 72) * v37;
      v39 = v37;
      v41 = v101;
      v40 = v102;
      v42 = &v101[*(int *)(v102 + 48)];
      v43 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v115 + 16);
      v44 = v115;
      v45 = v106;
      v43(v42, v38, v106, v36);
      v46 = v100;
      v47 = (char *)v100 + *(int *)(v40 + 48);
      v113 = v39;
      *v100 = v39;
      v48 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      v48(v47, v42, v45);
      v49 = (uint64_t)v46;
      v50 = v114;
      sub_10000F614(v49, (uint64_t)v114, &qword_1006436C0);
      v51 = *(int *)(v40 + 48);
      v52 = &v41[v51];
      v53 = *v50;
      ((void (*)(char *, char *, uint64_t))v43)(v52, (char *)v50 + v51, v45);
      v54 = v105;
      v55 = ((uint64_t (*)(char *, char *, uint64_t))v48)(v105, v52, v45);
      v56 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter(v55);
      type metadata accessor for TTRListColors(0);
      static TTRListColors.color(for:)(v130, v56);
      v111 = v130[1];
      v112 = v130[0];
      v57 = v131;
      v58 = v132;
      v59 = v133;

      v60 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
      v62 = v61;
      if (v53)
        v63 = 3;
      else
        v63 = 2;
      v64 = sub_1000AD9D0((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
      v65 = REMRemindersListDataView.ListsModel.Sublist.listID.getter(v64);
      v67 = v109;
      v66 = v110;
      *v109 = v65;
      swift_storeEnumTagMultiPayload(v67, v66, 1);
      v119[0] = v60;
      v119[1] = v62;
      v120 = v112;
      v121 = v111;
      v122 = v57;
      v123 = v58;
      v124 = v59;
      v125 = 0;
      v126 = 0;
      v127 = v63;
      v68 = v96;
      *v96 = v117;
      *((_BYTE *)v68 + 2) = v118;
      v69 = v95;
      *v95 = 0u;
      v69[1] = 0u;
      v69[2] = 0u;
      v129[24] = 255;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v119);
      sub_10000F614((uint64_t)v119, (uint64_t)v134, &qword_100649B60);
      v70 = (uint64_t)v107;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v67, v134, 1, 0, 0, 0, 0, 0);
      v71 = v108;
      v72 = sub_10002B1E8(v70, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v73 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter(v72);
      sub_1000AD9D0((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
      sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v74 = v45;
      v75 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v54, v74);
      sub_10001F580(v71, v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v76 = v104;
      *(_QWORD *)(v75 + *(int *)(v104 + 20)) = v73;
      *(_BYTE *)(v75 + *(int *)(v76 + 24)) = 0;
      sub_1000073A0((uint64_t)v114, &qword_1006436C0);
      v34 = *(_QWORD *)&v116[0];
      if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v116[0]) & 1) == 0)
      {
        sub_1003D83CC(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = *(_QWORD *)&v116[0];
      }
      v78 = *(_QWORD *)(v34 + 16);
      v77 = *(_QWORD *)(v34 + 24);
      v33 = v97;
      v79 = v113;
      if (v78 >= v77 >> 1)
      {
        sub_1003D83CC(v77 > 1, v78 + 1, 1);
        v34 = *(_QWORD *)&v116[0];
      }
      v37 = v79 + 1;
      *(_QWORD *)(v34 + 16) = v78 + 1;
      sub_10001F580(v75, v34+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v78, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      if (v99 == v37)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease_n(v33, 2);
    v81 = (uint64_t)v90;
    v80 = (uint64_t)v91;
    sub_10002B1E8((uint64_t)v90, (uint64_t)v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v80, 0, 1, v89);
    v82 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v83 = swift_allocObject(v82, 16, 7);
    v84 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v85 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v92, 1, 1, v84);
    *((_QWORD *)&v120 + 1) = v82;
    *(_QWORD *)&v121 = &off_100604210;
    v119[0] = v83;
    sub_100010634((uint64_t)v119, (uint64_t)v116);
    v86 = swift_allocObject(&unk_1006074F8, 72, 7);
    *(_QWORD *)(v86 + 16) = v34;
    sub_10002E37C(v116, v86 + 24);
    *(_QWORD *)(v86 + 64) = v94;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10047C8F8(1, v80, (uint64_t (*)(uint64_t))sub_10003E360, v86, v93, 0, v85);
    swift_release();
    sub_100027F10(v119);
    swift_release();
    sub_1000073A0(v85, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v80, &qword_100649CA0);
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
  }
}

uint64_t sub_100434B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  v5 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  *v12 = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v13);
  sub_100433F60((uint64_t)v11);
  sub_10002B1E8((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_10046ADD4((uint64_t)v7);
  sub_1000073A0((uint64_t)v7, &qword_100649CA0);
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_100434C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100434CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065D6F0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065D6F0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100434DD4(char *a1, uint64_t a2, unsigned __int8 a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class isa;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  id v58;
  void *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t Strong;
  uint64_t v64;
  char *v65;
  unsigned __int8 v66;
  _BYTE v67[24];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[5];

  v4 = v3;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController])
  {
    if (qword_10063D7D8 != -1)
      swift_once(&qword_10063D7D8, sub_100434CB4);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_10065D6F0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Search result view controller already exists in TTRISearchControllerResultViewController, will update the existing one instead", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    return (id)sub_1004356D4((uint64_t)a1, a2, a3);
  }
  v65 = &v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController];
  if (qword_10063D7D8 != -1)
    swift_once(&qword_10063D7D8, sub_100434CB4);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_10065D6F0);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  v66 = a3;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    *(_DWORD *)v18 = 136315138;
    v70[0] = v19;
    v20 = 1702195828;
    if ((a3 & 1) == 0)
      v20 = 0x65736C6166;
    v21 = 0xE400000000000000;
    if ((a3 & 1) == 0)
      v21 = 0xE500000000000000;
    if (a3 == 2)
      v22 = 7104878;
    else
      v22 = v20;
    if (a3 == 2)
      v23 = 0xE300000000000000;
    else
      v23 = v21;
    v68 = sub_100027E40(v22, v23, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Creating search result view controller in TTRISearchControllerResultViewController {didFinalizeSearchQuery: %s}", v18, 0xCu);
    swift_arrayDestroy(v19, 1, &type metadata for Any[8]);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }

  v24 = &v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter];
  sub_10001413C(&v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter], *(_QWORD *)&v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter + 24]);
  v25 = (char *)sub_10033C824(v70, a1, a2);
  v27 = v26;
  objc_msgSend(v4, "addChildViewController:", v25);
  result = objc_msgSend(v25, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_33;
  }
  v28 = result;
  result = objc_msgSend(v4, "view");
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v29 = result;
  v64 = v27;
  objc_msgSend(result, "addSubview:", v28);

  objc_msgSend(v25, "didMoveToParentViewController:", v4);
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v30 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v31 = swift_allocObject(v30, 64, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100520050;
  result = objc_msgSend(v4, "view");
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v32 = result;
  v33 = objc_msgSend(result, "topAnchor");

  v34 = objc_msgSend(v28, "topAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v31 + 32) = v35;
  result = objc_msgSend(v4, "view");
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v36 = result;
  v37 = objc_msgSend(result, "bottomAnchor");

  v38 = objc_msgSend(v28, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v31 + 40) = v39;
  result = objc_msgSend(v4, "view");
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v40 = result;
  v41 = objc_msgSend(result, "leftAnchor");

  v42 = objc_msgSend(v28, "leftAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v31 + 48) = v43;
  result = objc_msgSend(v4, "view");
  if (!result)
  {
LABEL_37:
    __break(1u);
    return result;
  }
  v44 = result;
  v45 = (void *)objc_opt_self(NSLayoutConstraint);
  v46 = objc_msgSend(v44, "rightAnchor");

  v47 = objc_msgSend(v28, "rightAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v31 + 56) = v48;
  v68 = v31;
  specialized Array._endMutation()(v49);
  v50 = v68;
  sub_1000D5620();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v50);
  objc_msgSend(v45, "activateConstraints:", isa);

  v52 = *(void **)&v25[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v53 = *(_QWORD *)&v25[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  ObjectType = swift_getObjectType(v52, v54);
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 40);
  v57 = v4;
  v58 = v52;
  v56(v4, ObjectType, v53);

  if (v66 != 2)
    *(_BYTE *)(*sub_10001413C(v70, v70[3])
             + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = v66 & 1;
  v59 = *(void **)v65;
  *(_QWORD *)v65 = v25;
  *((_QWORD *)v65 + 1) = v64;
  v60 = v25;

  sub_100010634((uint64_t)v70, (uint64_t)&v68);
  v61 = (uint64_t)&v57[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface];
  swift_beginAccess(&v57[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface], v67, 33, 0);
  sub_100435D0C((uint64_t)&v68, v61);
  swift_endAccess(v67);
  v62 = sub_10001413C(v24, *((_QWORD *)v24 + 3));
  Strong = swift_unknownObjectWeakLoadStrong(*v62 + 32);

  if (Strong)
    swift_unknownObjectRelease(Strong);
  return (id)sub_100027F10(v70);
}

id sub_1004354C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE v15[24];
  _BYTE v16[24];
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController)
    || (v3 = v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface,
        swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface, v16, 0, 0), sub_100435C84(v3, (uint64_t)&v17), v4 = *((_QWORD *)&v18 + 1), result = (id)sub_100435CCC((uint64_t)&v17), v4))
  {
    if (qword_10063D7D8 != -1)
      swift_once(&qword_10063D7D8, sub_100434CB4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100012DC4(v6, (uint64_t)qword_10065D6F0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Disposing search result view controller in TTRISearchControllerResultViewController", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    if (!*(_QWORD *)v2)
      goto LABEL_12;
    objc_msgSend(*(id *)v2, "willMoveToParentViewController:", 0);
    if (!*(_QWORD *)v2)
      goto LABEL_12;
    result = objc_msgSend(*(id *)v2, "view");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v11 = result;
    objc_msgSend(result, "removeFromSuperview");

    if (*(_QWORD *)v2)
    {
      objc_msgSend(*(id *)v2, "removeFromParentViewController");
      v12 = *(id *)v2;
    }
    else
    {
LABEL_12:
      v12 = 0;
    }
    *(_QWORD *)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0;

    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    v13 = v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface, v15, 33, 0);
    sub_100435D0C((uint64_t)&v17, v13);
    swift_endAccess(v15);
    v14 = sub_10001413C((_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter), *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter + 24));
    result = (id)swift_unknownObjectWeakLoadStrong(*v14 + 32);
    if (result)
      return (id)swift_unknownObjectRelease(result);
  }
  return result;
}

uint64_t sub_1004356D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  int v30;
  _QWORD *v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  __int128 v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;

  v4 = v3;
  v8 = v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface;
  swift_beginAccess(v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface, v36, 0, 0);
  sub_100435C84(v8, (uint64_t)&v37);
  if (!v38)
    return sub_100435CCC((uint64_t)&v37);
  sub_10002E37C(&v37, (uint64_t)v39);
  if (qword_10063D7D8 != -1)
    swift_once(&qword_10063D7D8, sub_100434CB4);
  v9 = a3;
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100012DC4(v10, (uint64_t)qword_10065D6F0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = a1;
    v15 = swift_slowAlloc(32, -1);
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)&v37 = v15;
    v16 = 1702195828;
    if ((v9 & 1) == 0)
      v16 = 0x65736C6166;
    v17 = 0xE400000000000000;
    if ((v9 & 1) == 0)
      v17 = 0xE500000000000000;
    if (v9 == 2)
      v18 = 7104878;
    else
      v18 = v16;
    if (v9 == 2)
      v19 = 0xE300000000000000;
    else
      v19 = v17;
    v35 = sub_100027E40(v18, v19, (uint64_t *)&v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Updating search result view controller in TTRISearchControllerResultViewController {didFinalizeSearchQuery: %s}", v14, 0xCu);
    swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
    v20 = v15;
    a1 = v34;
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  v21 = (_QWORD *)(*sub_10001413C(v39, v40) + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource);
  v22 = v21[1];
  ObjectType = swift_getObjectType(*v21, v23);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(ObjectType, v22);
  if (!v26)
  {
    if (!a2)
    {
LABEL_36:
      v30 = 0;
      if (v9 != 2)
        goto LABEL_31;
LABEL_24:
      if (!v30)
        return sub_100027F10(v39);
LABEL_32:
      v32 = sub_10001413C((_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter), *(_QWORD *)(v4+ OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter+ 24));
      Strong = swift_unknownObjectWeakLoadStrong(*v32 + 32);
      if (Strong)
        swift_unknownObjectRelease(Strong);
      return sub_100027F10(v39);
    }
LABEL_30:
    sub_10001413C(v39, v40);
    sub_100433B94(a1, a2);
    v30 = 1;
    if (v9 != 2)
      goto LABEL_31;
    goto LABEL_24;
  }
  v27 = v26;
  if (!a2)
  {
    swift_bridgeObjectRelease(v26);
    goto LABEL_30;
  }
  if (v25 == a1 && v26 == a2)
  {
    swift_bridgeObjectRelease(v26);
    goto LABEL_36;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, a1, a2, 0);
  swift_bridgeObjectRelease(v27);
  v30 = 0;
  if ((v29 & 1) == 0)
    goto LABEL_30;
  if (v9 == 2)
    goto LABEL_24;
LABEL_31:
  *(_BYTE *)(*sub_10001413C(v39, v40) + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = v9 & 1;
  if (v30)
    goto LABEL_32;
  return sub_100027F10(v39);
}

id sub_100435A40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISearchResultContainerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100435B04()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[5];
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v1 = objc_msgSend(v0, "presentingViewController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "navigationItem");

    v8 = objc_msgSend(v3, "searchController");
    if (v8)
    {
      v4 = objc_msgSend(v8, "searchBar");
      v5 = objc_msgSend(v4, "isFirstResponder");

      if (v5)
      {
        v6 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface];
        swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface], v11, 0, 0);
        sub_100435C84(v6, (uint64_t)v12);
        if (v13)
        {
          sub_100010634((uint64_t)v12, (uint64_t)v10);
          sub_100435CCC((uint64_t)v12);
          *(_BYTE *)(*sub_10001413C(v10, v10[3])
                   + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = 1;
          sub_100027F10(v10);
        }
        else
        {
          sub_100435CCC((uint64_t)v12);
        }
        v7 = objc_msgSend(v8, "searchBar", v8);
        objc_msgSend(v7, "resignFirstResponder");

      }
      else
      {

      }
    }
  }
}

uint64_t sub_100435C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10065D748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100435CCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_10065D748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100435D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10065D748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100435D54()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100027F10((_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for TTRIDebugMenuEventHandler()
{
  return objc_opt_self(_TtC9Reminders25TTRIDebugMenuEventHandler);
}

uint64_t initializeWithCopy for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnSelectionRequest()
{
  return &type metadata for TTRIBoardColumnSelectionRequest;
}

uint64_t sub_100435EEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100536590;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

_QWORD *sub_100435F60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain(v10);
  }
  return v4;
}

uint64_t sub_100435FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_100436034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_10043607C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_1004360C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_10043610C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_21;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) > 3)
    goto LABEL_7;
  v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    v11 = *(_DWORD *)(a1 + v9);
    if (v11)
      goto LABEL_14;
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2)
        goto LABEL_21;
LABEL_7:
      v11 = *(unsigned __int8 *)(a1 + v9);
      if (!*(_BYTE *)(a1 + v9))
        goto LABEL_21;
LABEL_14:
      v13 = (v11 - 1) << v10;
      if (v9 > 3)
        v13 = 0;
      if ((_DWORD)v7 == -1)
        return v6 + v13 + 1;
      if (v9 > 3)
        LODWORD(v9) = 4;
      return ((uint64_t (*)(void))((char *)&loc_1004361CC + 4 * byte_100536550[(v9 - 1)]))();
    }
    v11 = *(unsigned __int16 *)(a1 + v9);
    if (*(_WORD *)(a1 + v9))
      goto LABEL_14;
  }
LABEL_21:
  if (v5 >= 0xFE)
    return (*(uint64_t (**)(void))(v4 + 48))();
  v15 = *(unsigned __int8 *)(v7 + a1);
  if (v15 < 2)
    return 0;
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_100436240(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_100000004;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for TTRIBoardColumnSelectionRequest.Skippable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIBoardColumnSelectionRequest.Skippable);
}

uint64_t sub_100436424(_QWORD *a1, uint64_t a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t (*v29)(_QWORD);
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, id, uint64_t);
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  id v94;
  void *v95;
  void *v96;
  void (*v97)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void (*v102)(uint64_t, _UNKNOWN **);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v113;
  _QWORD *v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  id v120;
  void **v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  char *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  char *v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _QWORD v143[16];
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  __int128 v148;

  v131 = a1;
  v132 = a5;
  LODWORD(v127) = a4;
  v120 = a3;
  v6 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v7 = __chkstk_darwin(v6);
  v129 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v128 = (uint64_t)&v116 - v9;
  v118 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v118);
  v136 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRListType.SortingCapability(0);
  v12 = __chkstk_darwin(v11);
  v126 = (uint64_t)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v135 = (uint64_t)&v116 - v14;
  v123 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v117 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v125 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v122 = *(_QWORD *)(v134 - 8);
  v16 = __chkstk_darwin(v134);
  v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v133 = (char *)&v116 - v19;
  v130 = (_QWORD *)type metadata accessor for REMSmartList.NonCustom(0);
  v20 = *(v130 - 1);
  __chkstk_darwin(v130);
  v22 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v26);
  v28 = (void **)((char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a2, (uint64_t)v28, v29);
  v143[0] = _swiftEmptyArrayStorage;
  v30 = sub_100080C90();
  v31 = sub_10002A750(&qword_100641278);
  v32 = sub_100080CD8();
  v33 = v31;
  v34 = v20;
  v35 = v130;
  dispatch thunk of SetAlgebra.init<A>(_:)(v143, v33, v32, v23, v30);
  *(_QWORD *)&v124 = v28;
  sub_100041F70(v28, (uint64_t)v25, (void *)1, (uint64_t)v143);
  v121 = (void **)a2;
  (*(void (**)(char *, _QWORD, _QWORD *))(v34 + 104))(v22, enum case for REMSmartList.NonCustom.tagged(_:), v35);
  v36 = (void *)REMStore.fetchOrCreateNonCustomSmartList(withType:)(v22);
  (*(void (**)(char *, _QWORD *))(v34 + 8))(v22, v35);
  v37 = v120;
  v38 = v117;
  if (v36)
  {
    *((_QWORD *)&v140 + 1) = sub_1000D39F0();
    *(_QWORD *)&v141 = &protocol witness table for REMSmartList;
    *(_QWORD *)&v139 = v36;
    v119 = 1;
  }
  else
  {
    v119 = 0;
    v36 = 0;
    *(_QWORD *)&v141 = 0;
    v139 = 0u;
    v140 = 0u;
  }
  v120 = v36;
  static REMRemindersListDataView.SortingStyle.fallbackForTaggedSmartList.getter();
  v39 = v133;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(&v139, v18);
  v40 = v122;
  v41 = v134;
  v130 = *(_QWORD **)(v122 + 8);
  ((void (*)(char *, uint64_t))v130)(v18, v134);
  sub_1000073A0((uint64_t)&v139, &qword_100649C80);
  v42 = (uint64_t)v121;
  v43 = *v121;
  v44 = *(void (**)(char *, id, uint64_t))(v38 + 16);
  v45 = v125;
  v44(v125, v37, v123);
  v46 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v46(v18, v39, v41);
  v47 = type metadata accessor for TTRShowTaggedDataModelSource(0);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v48 = TTRShowTaggedDataModelSource.init(store:initialHashtagLabels:countCompleted:sortingStyle:canChangeSortingStyle:)(v43, v45, 0, v18, 1);
  v46(v18, v39, v41);
  v49 = v135;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)(1, v119, v18);
  v50 = (void *)v143[0];
  v51 = v126;
  sub_10002B1E8(v49, v126, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v52 = type metadata accessor for TTRShowTaggedViewModelSource(0);
  v53 = (_QWORD *)swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v54 = v120;
  swift_retain(v48);
  v55 = v50;
  v56 = sub_100436EB0(v36, v48, v55, v51, 0, (v127 & 1) == 0, v53);
  v127 = v54;

  swift_release(v48);
  v57 = v124;
  sub_10002B1E8(v42, v124, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v143, (uint64_t)&v139);
  swift_retain(v56);
  sub_100042A94(v57, (uint64_t)&v139, v56, (uint64_t)&off_100609110, v136);
  v58 = v128;
  sub_100042C0C(v128);
  v59 = type metadata accessor for TTRIShowTaggedPresenter(0);
  v60 = swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
  v61 = (uint64_t *)(v60 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource);
  *v61 = v48;
  v61[1] = (uint64_t)&protocol witness table for TTRShowTaggedDataModelSource;
  v124 = *(_OWORD *)(v58 + 64);
  *(_OWORD *)(v60 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule) = v124;
  v62 = (uint64_t)v129;
  sub_10002B1E8(v58, (uint64_t)v129, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain(v48);
  v63 = v132;
  swift_unknownObjectRetain(v132);
  swift_unknownObjectRetain(v124);
  v64 = (_QWORD *)sub_1002A70CC(v62, v63, v60);
  sub_10001F544(v58, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v65 = v64[18];
  ObjectType = swift_getObjectType(v64[17], v66);
  v68 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 104);
  swift_retain(v64);
  v69 = v68(ObjectType, v65);
  v125 = (char *)v48;
  v126 = v59;
  v123 = v56;
  if (v69)
  {
    v71 = v69;
    v72 = v70;
    v73 = swift_getObjectType(v69, v70);
    LOBYTE(v72) = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 16))(v73, v72);
    swift_release(v64);
    swift_unknownObjectRelease(v71);
    v74 = v72 & 1;
  }
  else
  {
    swift_release(v64);
    v74 = 0;
  }
  v75 = sub_100172EB4(v74, (uint64_t)v64);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v128 = swift_getObjectType(v78, v76);
  v64[3] = *(_QWORD *)(v81 + 8);
  v132 = v79;
  swift_unknownObjectWeakAssign(v64 + 2, v79);
  v82 = v64[18];
  v84 = swift_getObjectType(v64[17], v83);
  v85 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 104);
  swift_retain_n(v64, 2);
  v86 = v75;
  v87 = v85(v84, v82);
  v89 = v87;
  if (v87)
  {
    v90 = v88;
    v91 = swift_getObjectType(v87, v88);
    v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 16))(v91, v90);
    swift_release(v64);
    swift_unknownObjectRelease(v89);
    v89 = v92 & 1;
  }
  else
  {
    swift_release(v64);
  }
  v93 = v118;
  v94 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v95 = v86;
  v96 = (void *)sub_1002A8974(v64, v86, v77, v89, 0, 1, 0, v94);
  swift_release(v64);

  v97 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v81 + 32);
  v98 = v96;
  v129 = v98;
  v97(v96, &off_1005FCD60, v128, v81);
  v99 = v143[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v143[0] + direct field offset for TTRRemindersListInteractor.delegate, &v138, 1, 0);
  *(_QWORD *)(v99 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v99, v64);
  v100 = v143[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v143[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v137, 1, 0);
  *(_QWORD *)(v100 + 8) = &protocol witness table for TTRShowTaggedDataModelSource;
  v101 = v125;
  swift_unknownObjectWeakAssign(v100, v125);
  swift_unknownObjectWeakAssign(v143[3] + 16, v98);
  v102 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v101 + 416);
  v103 = v123;
  v104 = swift_retain(v123);
  v102(v104, &off_1005F0760);
  swift_retain(v103);
  v105 = swift_retain(v64);
  sub_10048D4EC(v105, (uint64_t)&off_1005F30C0);
  swift_release(v103);
  swift_release(v64);
  v106 = v136;
  v107 = *(_QWORD *)(v136 + *(int *)(v93 + 28));
  *(_QWORD *)(v107 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v107 + 16, v64);
  sub_100028CFC((uint64_t)&v144, (uint64_t)&v139);
  v141 = v145;
  v142 = v146;
  v108 = v145 + 32;
  *(_QWORD *)(v145 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v108, v64);
  sub_100027F10(&v139);
  sub_100028CFC((uint64_t)&v147, (uint64_t)&v139);
  v109 = v148;
  v141 = v148;
  v111 = swift_getObjectType(v148, v110);
  v112 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v109 + 1) + 48);
  swift_retain(v64);
  v113 = swift_unknownObjectRetain(v109);
  v112(v64, &off_1005F2FF0, v111, *((_QWORD *)&v109 + 1), v113);
  swift_unknownObjectRelease(v109);
  sub_100027F10(&v139);
  v114 = v131;
  v131[3] = v126;
  v114[4] = &off_1005F9780;
  *v114 = v64;

  swift_release(v101);
  swift_release(v103);

  swift_unknownObjectRelease(v132);
  sub_10001F544(v106, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  ((void (*)(char *, uint64_t))v130)(v133, v134);
  sub_100043844((uint64_t)v143);
  return (uint64_t)v129;
}

id TTRIShowTaggedAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTaggedAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowTaggedAssembly()
{
  return objc_opt_self(_TtC9Reminders22TTRIShowTaggedAssembly);
}

id TTRIShowTaggedAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTaggedAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100436EB0(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5, int a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v45[4];
  int v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v46 = a6;
  v47 = a3;
  v48 = a4;
  v49 = *a7;
  v12 = type metadata accessor for REMAnalyticsEvent(0);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  __chkstk_darwin(v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v15);
  v17 = &v45[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v18);
  v20 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)((char *)a7
            + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  v21 = OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList;
  *(_QWORD *)((char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList) = 0;
  v22 = (char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_completedRemindersCount;
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  *((_BYTE *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  v23 = *(void **)((char *)a7 + v21);
  *(_QWORD *)((char *)a7 + v21) = a1;
  swift_retain(a7);
  v24 = a1;

  v25 = (_QWORD *)((char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource);
  *v25 = a2;
  v25[1] = (uint64_t)&protocol witness table for TTRShowTaggedDataModelSource;
  *((_BYTE *)a7
  + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasDefaultNewReminderButtonWhenSelectingAllTags) = a5;
  *((_BYTE *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector) = v46;
  swift_retain(a2);
  swift_release(a7);
  sub_10002B1E8(a4, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain(a2);
  v26 = sub_1002A8704(a2, (uint64_t)v47, (uint64_t)v20, (uint64_t)a7);
  swift_retain(v26);
  sub_1000CE8A8((uint64_t)v17);
  v27 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 0, 1, v27);
  sub_10046ADD4((uint64_t)v17);
  v28 = sub_1000073A0((uint64_t)v17, &qword_100649CA0);
  v29 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v28);
  type metadata accessor for REMAnalyticsManager(0);
  v30 = v29;
  v31 = static REMAnalyticsManager.shared.getter();
  v32 = sub_10002A750(&qword_100645348);
  v33 = &v14[*(int *)(v32 + 48)];
  v34 = &v14[*(int *)(v32 + 80)];
  v35 = enum case for REMRemindersOpenUserOperation.SmartListType.tagged(_:);
  v36 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v14, v35, v36);
  v37 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v38 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v39 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v14, v37, v38);
  *v33 = TTRUserDefaults.activitySessionId.getter(v39);
  v33[1] = v40;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *v34 = _typeName(_:qualified:)(v49, 0);
  v34[1] = v41;
  v43 = v50;
  v42 = v51;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v50 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v51);
  REMAnalyticsManager.post(event:)(v14);

  swift_release(v31);
  swift_release(v26);
  sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v14, v42);
  return v26;
}

ValueMetadata *type metadata accessor for TTRILearnMoreAssembly()
{
  return &type metadata for TTRILearnMoreAssembly;
}

void sub_10043721C(char a1, void *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  void *v20;
  _QWORD v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  v22 = *a3;
  v6 = v22;
  v23 = &off_1005ECAA0;
  v21[0] = a3;
  v7 = type metadata accessor for TTRILearnMorePresenter();
  v8 = (_QWORD *)swift_allocObject(v7, 88, 7);
  v9 = sub_100028D48((uint64_t)v21, v22);
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = *v11;
  v8[9] = v6;
  v8[10] = &off_1005ECAA0;
  v8[6] = v13;
  v8[3] = 0;
  swift_unknownObjectWeakInit(v8 + 2, 0);
  v8[5] = 0;
  swift_unknownObjectWeakInit(v8 + 4, 0);
  swift_retain(a3);
  sub_100027F10(v21);
  if ((a1 & 1) != 0)
    type metadata accessor for TTRILearnMoreTagsViewController();
  else
    type metadata accessor for TTRILearnMoreCSLViewController();
  v21[0] = v8;
  v21[1] = &off_1005F1090;
  static TTRTypedController<>.instantiateFromStoryboard(with:)(&v20, v21);
  v14 = v20;
  v8[5] = 0;
  swift_unknownObjectWeakAssign(v8 + 4, 0);
  v15 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100521140;
  *(_QWORD *)(v16 + 32) = v14;
  v21[0] = v16;
  specialized Array._endMutation()(v16);
  v17 = v21[0];
  sub_100006584();
  v18 = v14;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  objc_msgSend(a2, "setViewControllers:animated:", isa, 1);
  swift_release(v8);

}

void *sub_10043741C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int16 v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSString v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  Class isa;
  _QWORD v63[2];
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  id v72;
  uint64_t v73;

  v63[1] = a7;
  v69 = a5;
  v9 = a3;
  LODWORD(v72) = a3 & 0x10000;
  v12 = type metadata accessor for Calendar(0);
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  __chkstk_darwin(v12);
  v64 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v14);
  v67 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100649D80);
  __chkstk_darwin(v16);
  v18 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DateComponents(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a4 + 16) && (sub_1002AA4A4(a1), (v24 & 1) != 0))
    v68 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v23);
  else
    v68 = 0;
  v71 = a1;
  v70 = a6;
  if (!(_DWORD)v72)
    goto LABEL_6;
  if (a2)
  {
    v27 = a2;
LABEL_9:
    v25 = 0;
    v26 = 0;
    goto LABEL_15;
  }
  TTRRemindersListPostponeType.dateChangeType.getter(a1);
  v28 = type metadata accessor for TTRDateChangeType(0);
  v25 = 0;
  v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v18, 1, v28) != 1)
  {
    if (swift_getEnumCaseMultiPayload(v18, v28) > 1)
    {
LABEL_6:
      v25 = 0;
      v26 = 0;
      a2 = 0;
      goto LABEL_15;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    a2 = (void *)TTRIDateIconGenerator.generateDueDateMenuIcon(for:)(v22);
    v29 = objc_msgSend((id)objc_opt_self(NSCalendar), "currentCalendar");
    v30 = v64;
    static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

    v31 = (uint64_t)v67;
    Calendar.date(from:)(v22);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v66);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v32 = type metadata accessor for Date(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
    {
      sub_10002FBF4(v31);
      goto LABEL_9;
    }
    v34 = Date.rem_localizedAccessibilityDueDateIconString.getter();
    v35 = v31;
    v25 = v34;
    v26 = v36;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
  }
LABEL_15:
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v37 = v71;
  v38 = TTRRemindersListPostponeType.localizedDescription.getter(v71);
  v40 = v39;
  v41 = swift_allocObject(&unk_1006077E0, 49, 7);
  *(_BYTE *)(v41 + 16) = v9 & 1;
  *(_BYTE *)(v41 + 17) = HIBYTE(v9) & 1;
  *(_BYTE *)(v41 + 18) = BYTE2(v72);
  v42 = v69;
  v43 = v70;
  *(_QWORD *)(v41 + 24) = a4;
  *(_QWORD *)(v41 + 32) = v42;
  *(_QWORD *)(v41 + 40) = v43;
  *(_BYTE *)(v41 + 48) = v37;
  v72 = a2;
  swift_bridgeObjectRetain(a4);
  swift_retain();
  v44 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v38, v40, 0, 0, a2, 0, 0, 0, 0, 0, v68, sub_10043A710, v41);
  if (v26)
  {
    v45 = sub_10002A750((uint64_t *)&unk_100654F80);
    v46 = swift_allocObject(v45, 64, 7);
    *(_OWORD *)(v46 + 16) = xmmword_1005201E0;
    v47 = TTRRemindersListPostponeType.localizedDescription.getter(v37);
    *(_QWORD *)(v46 + 32) = v47;
    *(_QWORD *)(v46 + 40) = v48;
    *(_QWORD *)(v46 + 48) = v25;
    *(_QWORD *)(v46 + 56) = v26;
    v73 = v46;
    v49 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v47);
    v50 = *v49;
    v51 = v49[1];
    swift_bridgeObjectRetain(v51);
    v52 = sub_10002A750(&qword_1006466D0);
    v53 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
    BidirectionalCollection<>.joined(separator:)(v50, v51, v52, v53);
    v55 = v54;
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v51);
    v56 = v44;
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v56, "setAccessibilityLabel:", v57, swift_bridgeObjectRelease(v55).n128_f64[0]);

    v58 = swift_allocObject(v45, 48, 7);
    *(_OWORD *)(v58 + 16) = xmmword_100520250;
    v59 = v56;
    *(_QWORD *)(v58 + 32) = TTRRemindersListPostponeType.localizedDescription.getter(v37);
    *(_QWORD *)(v58 + 40) = v60;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v59, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

  }
  return v44;
}

double sub_100437934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v6)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;

  v6 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(a3 + 32);
  v7 = swift_allocObject(&unk_100607790, 128, 7);
  v8 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 64) = v8;
  v9 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 96) = v9;
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 112) = a1;
  *(_QWORD *)(v7 + 120) = a2;
  sub_10043A58C((_QWORD *)a3);
  swift_retain();
  v6(sub_10043A620, v7);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004379C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, __n128);
  uint64_t v27;

  v26 = a3;
  v5 = type metadata accessor for REMHashtagLabelCollection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (void (**)(uint64_t, __n128))((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) != 0)
  {
    v27 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain(v27);
    v16 = sub_1002AC90C(v15);
    sub_1000522B0(&v27);
    v17 = REMHashtagLabelCollection.init(labels:)(v16);
    __chkstk_darwin(v17);
    *(&v26 - 2) = (void (*)(uint64_t, __n128))v8;
    *(&v26 - 1) = (void (*)(uint64_t, __n128))a2;
    v18 = (unint64_t)sub_10046ACD8((void (*)(uint64_t *__return_ptr, _QWORD *))sub_10043A62C, (uint64_t)(&v26 - 4), a1);
    a1 = v18;
    if (!(v18 >> 62))
    {
      swift_bridgeObjectRetain(v18);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
      sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      v20 = a1;
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  if (a1 < 0)
    v24 = a1;
  else
    v24 = a1 & 0xFFFFFFFFFFFFFF8;
  v25 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  v20 = _bridgeCocoaArray<A>(_:)(v24, v25);
LABEL_4:
  v21 = swift_bridgeObjectRelease(a1);
  v26(v20, v21);
  v22 = swift_bridgeObjectRelease(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v22);
}

uint64_t sub_100437BF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  void *v5;
  uint64_t v6;
  Swift::String v7;
  __n128 v8;
  Swift::String_optional v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v6 = *a1;
  v5 = (void *)a1[1];
  v7._countAndFlagsBits = *a1;
  v7._object = v5;
  v9 = REMHashtagLabelCollection.label(matchingHashtagName:)(v7);
  if (v9.value._object)
  {
    v10 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(v10 + 16)
      && (v11 = sub_100005CF4(v9.value._countAndFlagsBits, (uint64_t)v9.value._object), (v12 & 1) != 0))
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    }
    else
    {
      v13 = 0;
    }
    v8 = swift_bridgeObjectRelease(v9.value._object);
  }
  else
  {
    v13 = 0;
  }
  v14 = static String.hashtagTokenDefaultPrefix.getter(v8);
  v16 = v15;
  v23 = v14;
  v24 = v15;
  swift_bridgeObjectRetain(v15);
  v17._countAndFlagsBits = v6;
  v17._object = v5;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  if (v13)
  {
    if (*(_QWORD *)(a2 + 8) == v13)
      v13 = 1;
    else
      v13 = 2;
  }
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v18 = swift_allocObject(&unk_1006077B8, 136, 7);
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v18 + 96) = v20;
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v18 + 32) = v21;
  *(_QWORD *)(v18 + 112) = v6;
  *(_QWORD *)(v18 + 120) = v5;
  *(_QWORD *)(v18 + 128) = v13;
  sub_10043A58C((_QWORD *)a2);
  swift_bridgeObjectRetain(v5);
  result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v23, v24, 0, 0, 0, 0, 0, 0, 0, 0, v13, sub_10043A6BC, v18);
  *a3 = result;
  return result;
}

double sub_100437D74(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(uint64_t, uint64_t, _QWORD, double (*)(uint64_t), uint64_t, double, double);
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  double result;

  v9 = sub_10002A750(&qword_10064FA38);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100520250;
  *(_QWORD *)(v10 + 32) = a3[1];
  v11 = TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)(40.0, 40.0);
  v13 = v12;
  v15 = v14;
  v16 = v11;
  v18 = v17;
  v19 = (void (*)(uint64_t, uint64_t, _QWORD, double (*)(uint64_t), uint64_t, double, double))a3[4];
  v20 = *a3;
  v21 = swift_allocObject(&unk_100607880, 112, 7);
  *(_QWORD *)(v21 + 16) = a4;
  *(_BYTE *)(v21 + 24) = a5;
  v22 = *((_OWORD *)a3 + 1);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v21 + 48) = v22;
  v23 = *((_OWORD *)a3 + 3);
  *(_OWORD *)(v21 + 64) = *((_OWORD *)a3 + 2);
  *(_OWORD *)(v21 + 80) = v23;
  *(_QWORD *)(v21 + 96) = a1;
  *(_QWORD *)(v21 + 104) = a2;
  swift_bridgeObjectRetain(a4);
  sub_10043B94C(a3);
  swift_retain();
  v19(v20, v16, v18 & 1, sub_10043BA68, v21, v13, v15);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100437EA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(_QWORD *, __n128))
{
  void (*v5)(_QWORD *, __n128);
  uint64_t v6;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  id v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __n128 v39;
  double result;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v5 = a5;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(a2);
    sub_10043B94C((_QWORD *)a4);
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v11 = (__int128 *)(a1 + 32);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v12 = 1;
    if ((a3 & 1) != 0)
      v12 = 2;
    v44 = v12;
    while (1)
    {
      v29 = v11[5];
      v49 = v11[4];
      v50 = v29;
      v51 = v11[6];
      v30 = v11[1];
      v45 = *v11;
      v46 = v30;
      v31 = v11[3];
      v47 = v11[2];
      v48 = v31;
      if (*(_QWORD *)(a2 + 16))
      {
        v32 = (void *)v45;
        sub_1001809E4((uint64_t)&v45);
        v33 = v32;
        v34 = sub_1002AA5A4(v32);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v34);

          if (v36 <= 0)
            v14 = 0;
          else
            v14 = v44;
          goto LABEL_7;
        }

      }
      else
      {
        v13 = sub_1001809E4((uint64_t)&v45);
      }
      v14 = 0;
LABEL_7:
      v15 = TTRAssigneeCandidateData.displayDescription.getter(v13);
      v17 = v16;
      v18 = (void *)*((_QWORD *)&v51 + 1);
      v19 = (_OWORD *)swift_allocObject(&unk_1006078A8, 192, 7);
      v20 = *(_OWORD *)(a4 + 16);
      v19[1] = *(_OWORD *)a4;
      v19[2] = v20;
      v21 = *(_OWORD *)(a4 + 48);
      v19[3] = *(_OWORD *)(a4 + 32);
      v19[4] = v21;
      v22 = v50;
      v19[9] = v49;
      v19[10] = v22;
      v19[11] = v51;
      v23 = v46;
      v19[5] = v45;
      v19[6] = v23;
      v24 = v48;
      v19[7] = v47;
      v19[8] = v24;
      sub_10043B94C((_QWORD *)a4);
      v25 = v18;
      v26 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v17, 0, 0, v18, 0, 0, 0, 0, 0, v14, sub_10043BAF8, v19);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v26);
      specialized ContiguousArray._endMutation()(v28);
      v11 += 7;
      if (!--v6)
      {
        sub_10043BB04((uint64_t *)a4);
        swift_bridgeObjectRelease(a2);
        v5 = a5;
        break;
      }
    }
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v41 = _swiftEmptyArrayStorage;
    else
      v41 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v42 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v38 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v41, v42);
  }
  else
  {
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v37);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v38 = _swiftEmptyArrayStorage;
  }
  v39 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v5(v38, v39);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
  return result;
}

uint64_t sub_10043816C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a3[11];
  v4 = a3[13];
  v5 = a3[12] & 1;
  v6 = *(uint64_t (**)(uint64_t *))(a2 + 48);
  v8 = *a3;
  v9 = *(_OWORD *)(a3 + 1);
  v10 = *(_OWORD *)(a3 + 3);
  v11 = *(_OWORD *)(a3 + 5);
  v12 = *(_OWORD *)(a3 + 7);
  v13 = *(_OWORD *)(a3 + 9);
  v14 = v3;
  v15 = v5;
  v16 = v4;
  return v6(&v8);
}

uint64_t sub_1004381E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    v5 = a2;
    v6 = a1;
    v4 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= a2)
        goto LABEL_4;
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
  }
  if (v4 < 0)
    v35 = v4;
  else
    v35 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v10 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v4);
  if (v10 < v5)
    goto LABEL_40;
LABEL_4:
  v10 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v9 = (unint64_t)v8 >> 62;
  if (!((unint64_t)v8 >> 62))
  {
    v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v11 - v10;
    if (!__OFSUB__(v11, v10))
      goto LABEL_7;
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_42:
  if (v8 < 0)
    v36 = v8;
  else
    v36 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v11 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v8);
  v12 = v11 - v10;
  if (__OFSUB__(v11, v10))
    goto LABEL_47;
LABEL_7:
  v7 = *v3;
  v44 = v12;
  if (!((unint64_t)*v3 >> 62))
  {
    v13 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v12;
    if (!__OFADD__(v13, v12))
      goto LABEL_9;
LABEL_53:
    __break(1u);
LABEL_54:
    if (v7 < 0)
      v38 = v7;
    else
      v38 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v17 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v7);
    v7 = *v3;
    goto LABEL_16;
  }
LABEL_48:
  if (v7 < 0)
    v37 = v7;
  else
    v37 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v13 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v7);
  v14 = v13 + v44;
  if (__OFADD__(v13, v44))
    goto LABEL_53;
LABEL_9:
  v7 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v7;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v16 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v13 = 1;
  }
  v43 = v6;
  v6 = v10;
  v10 = v5;
  v5 = v11;
  v11 = v9;
  v9 = v8;
  if ((unint64_t)v7 >> 62)
    goto LABEL_54;
  v17 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v17 <= v14)
    v17 = v14;
  swift_bridgeObjectRetain(v7);
  v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v7);
  v19 = *v3;
  *v3 = v18;
  swift_bridgeObjectRelease(v19);
  v16 = *v3 & 0xFFFFFFFFFFFFFF8;
  v8 = v9;
  v9 = v11;
  v11 = v5;
  v5 = v10;
  v10 = v6;
  v6 = v43;
LABEL_19:
  v20 = v16 + 32;
  v21 = v16 + 32 + 8 * v6;
  v22 = sub_10002A750(&qword_1006463D0);
  swift_arrayDestroy(v21, v10, v22);
  v23 = v44;
  if (!v44)
  {
LABEL_29:
    if (v11 < 1)
    {
LABEL_34:
      swift_bridgeObjectRelease(v8);
      return specialized Array._endMutation()(v33);
    }
    if (v9)
    {
      swift_bridgeObjectRetain(v8);
      v32 = sub_1002ABEB0(v31);
      swift_bridgeObjectRelease(v8);
      sub_100439638((uint64_t)(v32 + 4), v32[2], v11, v21, &qword_1006463D0);
      swift_release();
      goto LABEL_34;
    }
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) == v11)
    {
      swift_arrayInitWithCopy(v21);
      goto LABEL_34;
    }
    goto LABEL_70;
  }
  v24 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    v26 = v25 - v5;
    if (!__OFSUB__(v25, v5))
      goto LABEL_22;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v24 < 0)
    v39 = *v3;
  else
    v39 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v40 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v24);
  v23 = v44;
  v26 = v40 - v5;
  if (__OFSUB__(v40, v5))
    goto LABEL_63;
LABEL_22:
  if ((v26 & 0x8000000000000000) == 0)
  {
    v27 = (char *)(v21 + 8 * v11);
    v28 = (char *)(v20 + 8 * v5);
    if (v27 != v28 || v27 >= &v28[8 * v26])
    {
      memmove(v27, v28, 8 * v26);
      v23 = v44;
    }
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v29 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      v30 = v29 + v23;
      if (!__OFADD__(v29, v23))
      {
LABEL_28:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v30;
        goto LABEL_29;
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
LABEL_64:
    if (v5 < 0)
      v41 = v5;
    else
      v41 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v42 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v5);
    v30 = v42 + v44;
    if (!__OFADD__(v42, v44))
      goto LABEL_28;
    goto LABEL_69;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004385F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100438624(a1, a2, a3, &qword_100640E70, UIBarButtonItem_ptr);
}

uint64_t sub_10043860C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100438E74(a1, a2, a3, &qword_1006463D0);
}

uint64_t sub_100438618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100439164(a1, a2, a3, a4, a5, a6, &qword_1006463D0);
}

uint64_t sub_100438624(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a5;
    v8 = a4;
    v12 = a3;
    v7 = a2;
    v11 = a1;
    v10 = *v6;
    if (!((unint64_t)*v6 >> 62))
    {
      v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v10 < 0)
    v28 = v10;
  else
    v28 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v10);
  if (v13 < v7)
    goto LABEL_34;
LABEL_4:
  v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = *v6;
  v36 = v8;
  if (!((unint64_t)*v6 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v10 < 0)
      v30 = v10;
    else
      v30 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v10);
    goto LABEL_15;
  }
LABEL_37:
  if (v10 < 0)
    v29 = v10;
  else
    v29 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v14 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_42;
LABEL_8:
  v10 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
  *v6 = v10;
  v35 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_43;
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v10);
  swift_bridgeObjectRelease(*v6);
  *v6 = v10;
  v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v11);
  v20 = sub_100005ED8(0, v36, v9);
  v21 = (char *)swift_arrayDestroy(v19, v13, v20);
  if (!v5)
  {
LABEL_28:
    *v19 = v35;
    return specialized Array._endMutation()(v21);
  }
  if (!((unint64_t)v10 >> 62))
  {
    v22 = *(_QWORD *)(v17 + 16);
    v23 = v22 - v7;
    if (!__OFSUB__(v22, v7))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v17;
  swift_bridgeObjectRetain(v10);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v10);
  v23 = v32 - v7;
  if (__OFSUB__(v32, v7))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v19 + 1);
    v24 = (char *)(v17 + 32 + 8 * v7);
    if (v19 + 1 != (_QWORD *)v24 || v21 >= &v24[8 * v23])
      v21 = (char *)memmove(v21, v24, 8 * v23);
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v17 + 16);
      v26 = v25 + v5;
      if (!__OFADD__(v25, v5))
      {
LABEL_27:
        *(_QWORD *)(v17 + 16) = v26;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v17;
    swift_bridgeObjectRetain(v10);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    v21 = (char *)swift_bridgeObjectRelease(v10);
    v26 = v34 + v5;
    if (!__OFADD__(v34, v5))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100438918(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1004561C8(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  v17 = sub_10002A750(&qword_10065D8A8);
  result = (char *)swift_arrayDestroy(v16, v9, v17);
  if (!v10)
    goto LABEL_20;
  v19 = v6[2];
  v20 = __OFSUB__(v19, a2);
  v21 = v19 - a2;
  if (v20)
    goto LABEL_26;
  if ((v21 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v22 = &v6[2 * a2 + 4];
    if (v16 + 2 != v22 || result >= (char *)&v22[2 * v21])
      result = (char *)memmove(result, v22, 16 * v21);
    v23 = v6[2];
    v20 = __OFADD__(v23, v10);
    v24 = v23 + v10;
    if (!v20)
    {
      v6[2] = v24;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v25 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v25, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100438AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a3;
    v5 = a2;
    v6 = a1;
    v4 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= a2)
        goto LABEL_4;
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
  }
  if (v4 < 0)
    v31 = v4;
  else
    v31 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v10 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v4);
  if (v10 < v5)
    goto LABEL_40;
LABEL_4:
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v8 = (unint64_t)v9 >> 62;
  if (!((unint64_t)v9 >> 62))
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v11 - v7;
    if (!__OFSUB__(v11, v7))
      goto LABEL_7;
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_42:
  if (v9 < 0)
    v32 = v9;
  else
    v32 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v11 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v9);
  v12 = v11 - v7;
  if (__OFSUB__(v11, v7))
    goto LABEL_47;
LABEL_7:
  v10 = *v3;
  v41 = v12;
  if (!((unint64_t)*v3 >> 62))
  {
    v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v12;
    if (!__OFADD__(v13, v12))
      goto LABEL_9;
LABEL_53:
    __break(1u);
LABEL_54:
    if (v10 < 0)
      v34 = v10;
    else
      v34 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v17 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v10);
    goto LABEL_16;
  }
LABEL_48:
  if (v10 < 0)
    v33 = v10;
  else
    v33 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v10);
  v14 = v13 + v41;
  if (__OFADD__(v13, v41))
    goto LABEL_53;
LABEL_9:
  v10 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v10;
  v39 = v8;
  v40 = v9;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v16 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v13 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_54;
  v17 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v17 <= v14)
    v17 = v14;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v10);
  swift_bridgeObjectRelease(*v3);
  *v3 = v10;
  v16 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  v18 = v16 + 32 + 8 * v6;
  v19 = sub_10002A750((uint64_t *)&unk_100640E20);
  swift_arrayDestroy(v18, v7, v19);
  v20 = v41;
  if (!v41)
  {
LABEL_29:
    if (v11 < 1)
    {
LABEL_34:
      v29 = swift_bridgeObjectRelease(v40);
      return specialized Array._endMutation()(v29);
    }
    if (v39)
    {
      v27 = swift_bridgeObjectRetain(v40);
      v28 = sub_1002ABEB0(v27);
      swift_bridgeObjectRelease(v40);
      sub_100439638((uint64_t)(v28 + 4), v28[2], v11, v18, (uint64_t *)&unk_100640E20);
      swift_release(v28);
      goto LABEL_34;
    }
    if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) == v11)
    {
      swift_arrayInitWithCopy(v18);
      goto LABEL_34;
    }
    goto LABEL_70;
  }
  if (!((unint64_t)v10 >> 62))
  {
    v21 = *(_QWORD *)(v16 + 16);
    v22 = v21 - v5;
    if (!__OFSUB__(v21, v5))
      goto LABEL_22;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v10 < 0)
    v35 = v10;
  else
    v35 = v16;
  swift_bridgeObjectRetain(v10);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v10);
  v20 = v41;
  v22 = v36 - v5;
  if (__OFSUB__(v36, v5))
    goto LABEL_63;
LABEL_22:
  if ((v22 & 0x8000000000000000) == 0)
  {
    v23 = (char *)(v18 + 8 * v11);
    v24 = (char *)(v16 + 32 + 8 * v5);
    if (v23 != v24 || v23 >= &v24[8 * v22])
    {
      memmove(v23, v24, 8 * v22);
      v20 = v41;
    }
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v16 + 16);
      v26 = v25 + v20;
      if (!__OFADD__(v25, v20))
      {
LABEL_28:
        *(_QWORD *)(v16 + 16) = v26;
        goto LABEL_29;
      }
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
LABEL_64:
    if (v10 < 0)
      v37 = v10;
    else
      v37 = v16;
    swift_bridgeObjectRetain(v10);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v10);
    v26 = v38 + v41;
    if (!__OFADD__(v38, v41))
      goto LABEL_28;
    goto LABEL_69;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100438E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100438E74(a1, a2, a3, (uint64_t *)&unk_100640E20);
}

uint64_t sub_100438E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v9 = a3;
    v5 = a2;
    v7 = a1;
    v8 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v8 < 0)
    v26 = v8;
  else
    v26 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v11 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v8);
  if (v11 < v5)
    goto LABEL_34;
LABEL_4:
  v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = v12 + v10;
    if (!__OFADD__(v12, v10))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v8 < 0)
      v28 = v8;
    else
      v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v16 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v8);
    goto LABEL_15;
  }
LABEL_37:
  if (v8 < 0)
    v27 = v8;
  else
    v27 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v12 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v8);
  v13 = v12 + v10;
  if (__OFADD__(v12, v10))
    goto LABEL_42;
LABEL_8:
  v8 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v8;
  v33 = v9;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v8 >> 62)
    goto LABEL_43;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v16, 1, v8);
  swift_bridgeObjectRelease(*v4);
  *v4 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v7);
  v18 = sub_10002A750(v6);
  v19 = (char *)swift_arrayDestroy(v17, v11, v18);
  if (!v10)
  {
LABEL_28:
    *v17 = v33;
    return specialized Array._endMutation()(v19);
  }
  if (!((unint64_t)v8 >> 62))
  {
    v20 = *(_QWORD *)(v15 + 16);
    v21 = v20 - v5;
    if (!__OFSUB__(v20, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v8 < 0)
    v29 = v8;
  else
    v29 = v15;
  swift_bridgeObjectRetain(v8);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v8);
  v21 = v30 - v5;
  if (__OFSUB__(v30, v5))
    goto LABEL_52;
LABEL_21:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v17 + 1);
    v22 = (char *)(v15 + 32 + 8 * v5);
    if (v17 + 1 != (_QWORD *)v22 || v19 >= &v22[8 * v21])
      v19 = (char *)memmove(v19, v22, 8 * v21);
    if (!((unint64_t)v8 >> 62))
    {
      v23 = *(_QWORD *)(v15 + 16);
      v24 = v23 + v10;
      if (!__OFADD__(v23, v10))
      {
LABEL_27:
        *(_QWORD *)(v15 + 16) = v24;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v8 < 0)
      v31 = v8;
    else
      v31 = v15;
    swift_bridgeObjectRetain(v8);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    v19 = (char *)swift_bridgeObjectRelease(v8);
    v24 = v32 + v10;
    if (!__OFADD__(v32, v10))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100439158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100439164(a1, a2, a3, a4, a5, a6, (uint64_t *)&unk_100640E20);
}

uint64_t sub_100439164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v14 = a7;
    v9 = a6;
    v13 = a5;
    v8 = a3;
    v11 = a2;
    v12 = a1;
    v10 = *v7;
    if (!((unint64_t)*v7 >> 62))
    {
      if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  if (v10 < 0)
    v32 = v10;
  else
    v32 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v33 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v10);
  if (v33 < v11)
    goto LABEL_37;
LABEL_4:
  v42 = v14;
  v14 = (uint64_t *)(v11 - v12);
  if (__OFSUB__(v11, v12))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v10 = ((unint64_t)v9 >> 1) - v13;
  if (__OFSUB__((unint64_t)v9 >> 1, v13))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v15 = v10 - (_QWORD)v14;
  if (__OFSUB__(v10, v14))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v9 = *v7;
  v43 = v10 - (_QWORD)v14;
  if (!((unint64_t)*v7 >> 62))
  {
    v16 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v16 + v15;
    if (!__OFADD__(v16, v15))
      goto LABEL_9;
LABEL_46:
    __break(1u);
LABEL_47:
    if (v13 < 0)
      v36 = v13;
    else
      v36 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v20 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v13);
    goto LABEL_16;
  }
LABEL_41:
  if (v9 < 0)
    v34 = v9;
  else
    v34 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v9);
  v17 = v35 + v43;
  if (__OFADD__(v35, v43))
    goto LABEL_46;
LABEL_9:
  v13 = *v7;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v7);
  *v7 = v13;
  v41 = v8;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v13 & 0x8000000000000000) == 0
    && (v13 & 0x4000000000000000) == 0)
  {
    v19 = v13 & 0xFFFFFFFFFFFFFF8;
    if (v17 <= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v9 = 1;
  }
  if ((unint64_t)v13 >> 62)
    goto LABEL_47;
  v20 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v20 <= v17)
    v20 = v17;
  swift_bridgeObjectRetain(v13);
  v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v9, v20, 1, v13);
  swift_bridgeObjectRelease(*v7);
  *v7 = v13;
  v19 = v13 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  v21 = v19 + 32 + 8 * v12;
  v22 = sub_10002A750(v42);
  swift_arrayDestroy(v21, v14, v22);
  v23 = v43;
  if (v43)
  {
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v37 = v13;
      else
        v37 = v19;
      swift_bridgeObjectRetain(v13);
      v38 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v13);
      v23 = v43;
      v25 = v38 - v11;
      if (!__OFSUB__(v38, v11))
      {
LABEL_22:
        if (v25 < 0)
        {
LABEL_63:
          result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
          __break(1u);
          return result;
        }
        v26 = (char *)(v21 + 8 * v10);
        v27 = (char *)(v19 + 32 + 8 * v11);
        if (v26 != v27 || v26 >= &v27[8 * v25])
        {
          memmove(v26, v27, 8 * v25);
          v23 = v43;
        }
        if (!((unint64_t)v13 >> 62))
        {
          v28 = *(_QWORD *)(v19 + 16);
          v29 = v28 + v23;
          if (!__OFADD__(v28, v23))
          {
LABEL_28:
            *(_QWORD *)(v19 + 16) = v29;
            goto LABEL_29;
          }
          goto LABEL_62;
        }
LABEL_57:
        if (v13 < 0)
          v39 = v13;
        else
          v39 = v19;
        swift_bridgeObjectRetain(v13);
        v40 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(v13);
        v29 = v40 + v43;
        if (!__OFADD__(v40, v43))
          goto LABEL_28;
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
    }
    else
    {
      v24 = *(_QWORD *)(v19 + 16);
      v25 = v24 - v11;
      if (!__OFSUB__(v24, v11))
        goto LABEL_22;
    }
    __break(1u);
    goto LABEL_57;
  }
LABEL_29:
  if (v10 >= 1)
    swift_arrayInitWithCopy(v21);
  v30 = swift_unknownObjectRelease(v41);
  return specialized Array._endMutation()(v30);
}

char *sub_1004394A8(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD **)v6;
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v8);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    v8 = sub_1004567BC(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  v18 = &v8[4 * a1 + 4];
  result = (char *)swift_arrayDestroy(v18, v11, &type metadata for TTRListDetailAppearanceBadge);
  if (!v12)
    goto LABEL_20;
  v20 = v8[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 4);
    v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22])
      result = (char *)memmove(result, v23, 32 * v22);
    v24 = v8[2];
    v21 = __OFADD__(v24, v12);
    v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(_QWORD *)v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v26 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100439638(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (a2 == a3)
  {
    if (result)
    {
      sub_10002A750(a5);
      return swift_arrayInitWithCopy(a4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10043969C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  _QWORD *result;
  unsigned __int8 *v14;
  unsigned int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v7 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v7)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    v14 = (unsigned __int8 *)(a1 + 32);
    v24 = a2 & 0x10101;
    do
    {
      v15 = *v14++;
      v16 = sub_10043741C(v15, 0, v24, a3, a4, a5, a6);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = a3;
      v18 = a4;
      v19 = a5;
      v20 = a6;
      v21 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = v21;
      a6 = v20;
      a5 = v19;
      a4 = v18;
      a3 = v17;
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v16);
      specialized ContiguousArray._endMutation()(v23);
      --v7;
    }
    while (v7);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1004397B4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1004557A8(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  v17 = sub_10002A750(&qword_10065D8B0);
  swift_arrayDestroy(v16, v9, v17);
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v16 + 2);
    v22 = &v6[2 * a2 + 4];
    if (v16 + 2 != v22 || v21 >= (char *)&v22[2 * v20])
      memmove(v21, v22, 16 * v20);
    v23 = v6[2];
    v19 = __OFADD__(v23, v10);
    v24 = v23 + v10;
    if (!v19)
    {
      v6[2] = v24;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      swift_retain();
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_27;
  }
LABEL_28:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v25, 1046, 0);
  __break(1u);
}

Class sub_100439948(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  NSString v12;
  id v13;
  int v14;
  int v15;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  UIMenuElementSize preferredElementSize;
  void *object;
  Swift::String v27;
  UIMenu v28;
  uint64_t countAndFlagsBits;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  objc_class *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  UIMenuElementSize v40;
  Swift::String v41;
  Class isa;
  uint64_t v44;
  uint64_t v45;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  id childrenb;
  objc_class *image;
  uint64_t image_8;
  uint64_t image_8a;
  UIImage_optional v52;
  UIImage_optional v53;

  v8 = type metadata accessor for TTRIDateIconGenerator(0);
  v9 = swift_allocObject(v8, 16, 7);
  v10 = String._bridgeToObjectiveC()();
  v11 = (void *)objc_opt_self(UIImage);
  image = (objc_class *)objc_msgSend(v11, "_systemImageNamed:", v10);

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "_systemImageNamed:", v12);

  v14 = a1 & 0x10001;
  if ((a1 & 0x100) != 0)
  {
    v16 = sub_10043741C(0, 0, v14 | 0x100u, a2, a3, a4, v9);
    v15 = 256;
  }
  else
  {
    v15 = 0;
    v16 = 0;
  }
  v17 = v14 | v15;
  swift_bridgeObjectRetain(a2);
  swift_retain();
  swift_retain();
  v18 = (uint64_t)sub_10043969C((uint64_t)&off_1005EA470, v17, a2, a3, a4, v9);
  swift_release();
  swift_bridgeObjectRelease(a2);
  swift_release();
  v19 = sub_10043741C(5, v13, v17, a2, a3, a4, v9);
  image_8 = v18;
  swift_bridgeObjectRetain(v18);
  v20 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
  specialized Array._endMutation()(v23);
  swift_bridgeObjectRelease(v18);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v44 = v18;
    else
      v44 = v18 & 0xFFFFFFFFFFFFFF8;
    v45 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(image_8);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v44, v45);
    swift_bridgeObjectRelease(image_8);
  }
  else
  {
    swift_bridgeObjectRetain(v18);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    preferredElementSize = v18;
  }
  swift_bridgeObjectRelease(image_8);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v52.value.super.isa = 0;
  v52.is_nil = 0;
  v28.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v27, (Swift::String_optional)0, v52, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  childrena._rawValue = v13;
  if ((a1 & 1) != 0)
  {
    v30._object = (void *)0x8000000100579850;
    v31._countAndFlagsBits = 0x6574614420657544;
    v31._object = (void *)0xE800000000000000;
    v30._countAndFlagsBits = 0xD00000000000002ALL;
    v32 = TTRLocalizedString(_:comment:)(v31, v30);
    countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;
  }
  else
  {
    countAndFlagsBits = 0;
  }
  v33 = sub_10002A750(&qword_100652F50);
  v34 = swift_allocObject(v33, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v34 + 32) = v16;
  *(UIMenu *)(v34 + 40) = v28;
  image_8a = v34;
  specialized Array._endMutation()(v34);
  v35 = v16;
  v36 = v28.super.super.isa;
  v37 = sub_10002A750((uint64_t *)&unk_100652F58);
  v38 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  v39 = sub_100023FEC((unint64_t *)&qword_100652F68, (uint64_t *)&unk_100652F58, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = Sequence.removingNils<A>()(v37, v38, v39);
  swift_bridgeObjectRelease(image_8a);
  v41._countAndFlagsBits = countAndFlagsBits;
  v41._object = object;
  v53.value.super.isa = image;
  v53.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, (Swift::String_optional)0, v53, 0, 0xFFFFFFFFFFFFFFFFLL, v40, childrena).super.super.isa;
  swift_release();

  return isa;
}

void sub_100439D8C(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  UIMenuElementSize preferredElementSize;
  id v12;
  Swift::String v13;
  UIMenu v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  NSString v43;
  id v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  uint64_t v50;
  UIMenuElementSize v51;
  id v52;
  Swift::String v53;
  UIMenu v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  Swift::String v62;
  _OWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  void *v67;
  UIMenuElementSize v68;
  id v69;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  Swift::OpaquePointer v78;
  UIMenu v79;
  Swift::OpaquePointer v80;
  _QWORD aBlock[6];
  UIMenuElementSize v82;
  char v83;
  char v84;
  UIImage_optional v85;
  UIImage_optional v86;
  UIImage_optional v87;

  v82 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v2 = (_OWORD *)swift_allocObject(&unk_1006076C8, 112, 7);
  v3 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v3;
  v4 = *(_OWORD *)(a1 + 80);
  v2[5] = *(_OWORD *)(a1 + 64);
  v2[6] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v5;
  aBlock[4] = sub_10043A584;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100085A2C;
  aBlock[3] = &unk_1006076E0;
  v6 = _Block_copy(aBlock);
  v7 = (void *)objc_opt_self(UIDeferredMenuElement);
  sub_10043A58C((_QWORD *)a1);
  v8 = objc_msgSend(v7, "elementWithProvider:", v6);
  _Block_release(v6);
  swift_release();
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v9 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100521140;
  *(_QWORD *)(v10 + 32) = v8;
  aBlock[0] = v10;
  specialized Array._endMutation()(v10);
  preferredElementSize = aBlock[0];
  v12 = v8;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v85.value.super.isa = 0;
  v85.is_nil = 0;
  v14.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v85, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v78).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14.super.super.isa);
  v16 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
LABEL_48:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14.super.super.isa);
  specialized Array._endMutation()(v17);
  v18 = 0;
  v15 = *(_QWORD *)(a1 + 24);
  v19 = v15 + 64;
  v20 = 1 << *(_BYTE *)(v15 + 32);
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v22 = v21 & *(_QWORD *)(v15 + 64);
  v23 = (unint64_t)(v20 + 63) >> 6;
  do
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v25 = v24 | (v18 << 6);
    }
    else
    {
      v26 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v26 >= v23)
        goto LABEL_30;
      v27 = *(_QWORD *)(v19 + 8 * v26);
      ++v18;
      if (!v27)
      {
        v18 = v26 + 1;
        if (v26 + 1 >= v23)
          goto LABEL_30;
        v27 = *(_QWORD *)(v19 + 8 * v18);
        if (!v27)
        {
          v18 = v26 + 2;
          if (v26 + 2 >= v23)
            goto LABEL_30;
          v27 = *(_QWORD *)(v19 + 8 * v18);
          if (!v27)
          {
            v18 = v26 + 3;
            if (v26 + 3 >= v23)
              goto LABEL_30;
            v27 = *(_QWORD *)(v19 + 8 * v18);
            if (!v27)
            {
              v18 = v26 + 4;
              if (v26 + 4 >= v23)
                goto LABEL_30;
              v27 = *(_QWORD *)(v19 + 8 * v18);
              if (!v27)
              {
                v28 = v26 + 5;
                if (v28 >= v23)
                  goto LABEL_30;
                v27 = *(_QWORD *)(v19 + 8 * v28);
                if (!v27)
                {
                  while (1)
                  {
                    v18 = v28 + 1;
                    if (__OFADD__(v28, 1))
                      goto LABEL_54;
                    if (v18 >= v23)
                      goto LABEL_30;
                    v27 = *(_QWORD *)(v19 + 8 * v18);
                    ++v28;
                    if (v27)
                      goto LABEL_26;
                  }
                }
                v18 = v28;
              }
            }
          }
        }
      }
LABEL_26:
      v22 = (v27 - 1) & v27;
      v25 = __clz(__rbit64(v27)) + (v18 << 6);
    }
  }
  while (*(uint64_t *)(*(_QWORD *)(v15 + 56) + 8 * v25) < 1);
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v29._object = (void *)0x80000001005797F0;
  v30._countAndFlagsBits = 0x6154207261656C43;
  v30._object = (void *)0xEA00000000007367;
  v29._countAndFlagsBits = 0xD000000000000028;
  v31 = TTRLocalizedString(_:comment:)(v30, v29);
  v32 = (_OWORD *)swift_allocObject(&unk_100607718, 112, 7);
  v33 = *(_OWORD *)(a1 + 48);
  v32[3] = *(_OWORD *)(a1 + 32);
  v32[4] = v33;
  v34 = *(_OWORD *)(a1 + 80);
  v32[5] = *(_OWORD *)(a1 + 64);
  v32[6] = v34;
  v35 = *(_OWORD *)(a1 + 16);
  v32[1] = *(_OWORD *)a1;
  v32[2] = v35;
  sub_10043A58C((_QWORD *)a1);
  v36 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v31._countAndFlagsBits, v31._object, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000234D8, v32);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
  v38 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v37 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v38 >= v37 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
  v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
  specialized Array._endMutation()(v39);

LABEL_30:
  sub_10043A5F8((_BYTE *)(a1 + 16), &v83);
  sub_10043A5F8(&v83, &v84);
  if (v84 != 2)
  {
    if (v84 == 3)
    {
      sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
      v40._object = (void *)0x80000001005797F0;
      v41._countAndFlagsBits = 0x6D6F74737543;
      v41._object = (void *)0xE600000000000000;
      v40._countAndFlagsBits = 0xD000000000000028;
      v42 = TTRLocalizedString(_:comment:)(v41, v40);
      v43 = String._bridgeToObjectiveC()();
      v44 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v43);

      v45 = (_OWORD *)swift_allocObject(&unk_100607768, 112, 7);
      v46 = *(_OWORD *)(a1 + 48);
      v45[3] = *(_OWORD *)(a1 + 32);
      v45[4] = v46;
      v47 = *(_OWORD *)(a1 + 80);
      v45[5] = *(_OWORD *)(a1 + 64);
      v45[6] = v47;
      v48 = *(_OWORD *)(a1 + 16);
      v45[1] = *(_OWORD *)a1;
      v45[2] = v48;
      sub_10043A58C((_QWORD *)a1);
      v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v42._countAndFlagsBits, v42._object, 0, 0, v44, 0, 0, 0, 0, 0, 0, sub_10002F994, v45);
      v50 = swift_allocObject(v9, 40, 7);
      *(_OWORD *)(v50 + 16) = xmmword_100521140;
      *(_QWORD *)(v50 + 32) = v49;
      aBlock[0] = v50;
      specialized Array._endMutation()(v50);
      v51 = aBlock[0];
      v52 = v49;
      v53._countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      v86.value.super.isa = 0;
      v86.is_nil = 0;
      v54.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v53, (Swift::String_optional)0, v86, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v51, v80).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54.super.super.isa);
      v56 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v55 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v56 >= v55 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
      v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54.super.super.isa);
      specialized Array._endMutation()(v57);
    }
    else
    {
      if (*(_QWORD *)(a1 + 8) == 1 && (v84 & 1) != 0)
      {
        v58 = 0x80000001005797F0;
        v59 = 0x6761542074696445;
        v60 = 0xAC000000A680E273;
      }
      else
      {
        v58 = 0x80000001005797F0;
        v59 = 0xE267615420646441;
        v60 = 0xAA0000000000A680;
      }
      v61 = 0xD000000000000028;
      v62 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v59, *(Swift::String *)(&v58 - 1));
      sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
      v63 = (_OWORD *)swift_allocObject(&unk_100607740, 112, 7);
      v64 = *(_OWORD *)(a1 + 48);
      v63[3] = *(_OWORD *)(a1 + 32);
      v63[4] = v64;
      v65 = *(_OWORD *)(a1 + 80);
      v63[5] = *(_OWORD *)(a1 + 64);
      v63[6] = v65;
      v66 = *(_OWORD *)(a1 + 16);
      v63[1] = *(_OWORD *)a1;
      v63[2] = v66;
      sub_10043A58C((_QWORD *)a1);
      v67 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v62._countAndFlagsBits, v62._object, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10002F984, v63);
      v52 = v67;
      v68 = v82;
      if ((unint64_t)v82 >> 62)
      {
        if (v82 < UIMenuElementSizeSmall)
          v75 = v82;
        else
          v75 = v82 & 0xFFFFFFFFFFFFFF8;
        v76 = v67;
        swift_bridgeObjectRetain(v68);
        v77 = _CocoaArrayWrapper.endIndex.getter(v75);
        swift_bridgeObjectRelease(v68);
        if (v77 < 0)
        {
          __break(1u);
LABEL_54:
          __break(1u);
          return;
        }
      }
      else
      {
        v69 = v67;
      }
      sub_100438624(0, 0, (uint64_t)v52, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    }

  }
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v72._countAndFlagsBits = 0xD000000000000029;
    v72._object = (void *)0x8000000100579820;
    v73._countAndFlagsBits = 1936154964;
    v73._object = (void *)0xE400000000000000;
    v74 = TTRLocalizedString(_:comment:)(v73, v72);
    object = v74._object;
    countAndFlagsBits = v74._countAndFlagsBits;
  }
  else
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v87.value.super.isa = 0;
  v87.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(*(Swift::String *)&countAndFlagsBits, (Swift::String_optional)0, v87, 0, 0xFFFFFFFFFFFFFFFFLL, v82, (Swift::OpaquePointer)v79.super.super.isa);

}

double sub_10043A584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100437934(a1, a2, v2 + 16);
}

_QWORD *sub_10043A58C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[9];
  v5 = a1[11];
  swift_bridgeObjectRetain(a1[3]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

_BYTE *sub_10043A5F8(_BYTE *a1, _BYTE *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_10043A610()
{
  return sub_10043A658((void (*)(_QWORD))&_swift_release, 128);
}

uint64_t sub_10043A620(uint64_t a1)
{
  uint64_t v1;

  return sub_1004379C4(a1, v1 + 16, *(void (**)(uint64_t, __n128))(v1 + 112));
}

uint64_t sub_10043A62C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_100437BF0(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10043A648()
{
  return sub_10043A658((void (*)(_QWORD))&_swift_bridgeObjectRelease, 136);
}

uint64_t sub_10043A658(void (*a1)(_QWORD), uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease(v2[5]);
  swift_release(v2[7]);
  swift_release(v2[9]);
  swift_release(v2[11]);
  swift_release(v2[13]);
  a1(v2[15]);
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10043A6BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 80))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_10043A6E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10043A710(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 32))(*(unsigned __int8 *)(v1 + 48), a1);
}

Class sub_10043A73C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  UIMenuElementSize preferredElementSize;
  id v27;
  Swift::String v28;
  objc_class *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  NSString v38;
  objc_class *v39;
  Swift::String v40;
  Class isa;
  Swift::OpaquePointer v43;
  Swift::OpaquePointer v44;
  _QWORD aBlock[6];
  UIMenuElementSize v46;
  UIImage_optional v47;
  UIImage_optional v48;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  v46 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  if ((*(_BYTE *)(a1 + 18) & 1) != 0)
  {
    swift_bridgeObjectRetain(v2);
    if (v3)
    {
      v4 = sub_1002AA5A4(0);
      v5 = 0;
      if ((v6 & 1) != 0)
      {
        v7 = 1;
        if (v3 > 1)
          v7 = 2;
        if (*(uint64_t *)(*(_QWORD *)(v2 + 56) + 8 * v4) <= 0)
          v5 = 0;
        else
          v5 = v7;
      }
    }
    else
    {
      v5 = 0;
    }
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v8 = static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter();
    v10 = v9;
    v11 = (_OWORD *)swift_allocObject(&unk_100607858, 80, 7);
    v12 = *(_OWORD *)(a1 + 16);
    v11[1] = *(_OWORD *)a1;
    v11[2] = v12;
    v13 = *(_OWORD *)(a1 + 48);
    v11[3] = *(_OWORD *)(a1 + 32);
    v11[4] = v13;
    sub_10043B94C((_QWORD *)a1);
    v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v10, 0, 0, 0, 0, 0, 0, 0, 0, v5, sub_10043B9DC, v11);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    v16 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v16 >= v15 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
    specialized Array._endMutation()(v17);

  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
  v18 = swift_allocObject(&unk_100607808, 89, 7);
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 64) = v20;
  *(_QWORD *)(v18 + 80) = v2;
  *(_BYTE *)(v18 + 88) = v3 > 1;
  aBlock[4] = sub_10043B93C;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100085A2C;
  aBlock[3] = &unk_100607820;
  v21 = _Block_copy(aBlock);
  v22 = (void *)objc_opt_self(UIDeferredMenuElement);
  sub_10043B94C((_QWORD *)a1);
  v23 = objc_msgSend(v22, "elementWithProvider:", v21);
  _Block_release(v21);
  swift_release();
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100521140;
  *(_QWORD *)(v25 + 32) = v23;
  aBlock[0] = v25;
  specialized Array._endMutation()(v25);
  preferredElementSize = aBlock[0];
  v27 = v23;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  v29 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v47, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v43).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
  specialized Array._endMutation()(v32);
  if ((*(_BYTE *)(a1 + 17) & 1) != 0)
  {
    v35._object = (void *)0x8000000100579880;
    v36._countAndFlagsBits = 0x6E6769737341;
    v36._object = (void *)0xE600000000000000;
    v35._countAndFlagsBits = 0xD000000000000020;
    v37 = TTRLocalizedString(_:comment:)(v36, v35);
    countAndFlagsBits = v37._countAndFlagsBits;
    object = v37._object;
  }
  else
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v38 = String._bridgeToObjectiveC()();
  v39 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v38);

  v40._countAndFlagsBits = countAndFlagsBits;
  v40._object = object;
  v48.value.super.isa = v39;
  v48.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v48, 0, 0xFFFFFFFFFFFFFFFFLL, v46, v44).super.super.isa;

  return isa;
}

uint64_t sub_10043AB24(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100454EEC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy(v17, v7, v12);
  if (!v7)
    goto LABEL_25;
  v19 = *(_QWORD *)(v4 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_31;
  if ((v20 & 0x8000000000000000) == 0)
  {
    v21 = v14 + v15 * a2;
    if (v16 < v15 * a2 || v17 >= v21 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack(v17, v21, v20, v12);
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront(v17, v21);
    }
    v23 = *(_QWORD *)(v4 + 16);
    v24 = __OFADD__(v23, v8);
    v25 = v23 - v7;
    if (!v24)
    {
      *(_QWORD *)(v4 + 16) = v25;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

void *sub_10043ACCC(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  void *result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10045644C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = (void *)swift_arrayDestroy(&v4[14 * a1 + 4], v7, &type metadata for TTRListSharingViewModel.Participant);
  if (!v7)
    goto LABEL_23;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_29;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[14 * a2 + 4];
    v17 = 112 * v15;
    if (112 * a1 < 112 * a2 || (&v4[14 * a1 + 4] < (_QWORD *)&v16[v17] ? (v18 = a1 == a2) : (v18 = 0), !v18))
      result = memmove(&v4[14 * a1 + 4], v16, v17);
    v19 = v4[2];
    v14 = __OFADD__(v19, v8);
    v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  v21 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v21, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10043AE54(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)(a3 + 16);
  v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v5[3] >> 1)
  {
    if (v6 <= v11)
      v13 = v6 + v10;
    else
      v13 = v6;
    v5 = sub_100455CC8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = (uint64_t)&v5[6 * a1 + 4];
  result = (char *)swift_arrayDestroy(v14, v8, &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  if (!v10)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_28;
  if (v18 < 0)
  {
LABEL_30:
    v23 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v23, 1046, 0);
    __break(1u);
    return result;
  }
  result = (char *)(v14 + 48 * v9);
  v19 = (char *)&v5[6 * a2 + 4];
  v20 = 48 * v18;
  if (result != v19 || result >= &v19[v20])
    result = (char *)memmove(result, v19, v20);
  v21 = v5[2];
  v17 = __OFADD__(v21, v10);
  v22 = v21 + v10;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5[2] = v22;
LABEL_20:
  if (v9)
    result = (char *)swift_arrayInitWithCopy(v14);
  *v3 = v5;
  return result;
}

uint64_t sub_10043AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v26 = v5;
  else
    v26 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v5 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v5))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v5;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v28 = v7;
    else
      v28 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v12 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v7);
    v7 = *v3;
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v7);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v7 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v7;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v11 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v7);
  v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v7);
  v14 = *v3;
  *v3 = v13;
  swift_bridgeObjectRelease(v14);
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v11 + 32;
  v16 = (char *)(v11 + 32 + 8 * v4);
  v17 = sub_10002A750(&qword_1006463D0);
  v18 = (void *)swift_arrayDestroy(v16, v5, v17);
  if (!v6)
    return specialized Array._endMutation()(v18);
  v19 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = v20 - v2;
    if (!__OFSUB__(v20, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v19 < 0)
    v29 = *v3;
  else
    v29 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v19);
  v21 = v30 - v2;
  if (__OFSUB__(v30, v2))
    goto LABEL_52;
LABEL_21:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v22 = (char *)(v15 + 8 * v2);
    if (v4 != v2 || v16 >= &v22[8 * v21])
      v18 = memmove(v16, v22, 8 * v21);
    v2 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v23 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v24 = v23 + v6;
      if (!__OFADD__(v23, v6))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v24;
        return specialized Array._endMutation()(v18);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    v24 = v32 + v6;
    if (!__OFADD__(v32, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  v33 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v33, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10043B2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_10002A750((uint64_t *)&unk_100640E20);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  v14 = (void *)swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    v14 = (void *)swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10043B5C0(uint64_t a1, uint64_t a2)
{
  return sub_10043B5E8(a1, a2, &qword_10065D8B8, CNAvatarViewController_ptr);
}

uint64_t sub_10043B5D4(uint64_t a1, uint64_t a2)
{
  return sub_10043B5E8(a1, a2, (unint64_t *)&qword_1006406F0, UIView_ptr);
}

uint64_t sub_10043B5E8(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = a4;
    v8 = a3;
    v4 = a2;
    v7 = a1;
    v9 = *v5;
    if (!((unint64_t)*v5 >> 62))
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v9);
  if (v20 < v4)
    goto LABEL_18;
LABEL_4:
  v6 = v4 - v7;
  if (__OFSUB__(v4, v7))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v7 - v4;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v9);
    v13 = v22 + v39;
    if (!__OFADD__(v22, v39))
      goto LABEL_8;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *v5;
  v39 = v7 - v4;
  v40 = v7;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v6;
  if (__OFADD__(v12, v11))
    goto LABEL_26;
LABEL_8:
  v9 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v9;
  v15 = 0;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
    goto LABEL_28;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v13 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    v17 = v8;
    v18 = v10;
    goto LABEL_33;
  }
LABEL_27:
  v15 = 1;
LABEL_28:
  v17 = v8;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v10;
  if (v23 <= v13)
    v23 = v13;
  swift_bridgeObjectRetain(v9);
  v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15, v23, 1, v9);
  swift_bridgeObjectRelease(*v5);
  *v5 = v9;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_33:
  v24 = (char *)(v16 + 32 + 8 * v40);
  v25 = sub_100005ED8(0, v17, v18);
  v26 = (void *)swift_arrayDestroy(v24, v6, v25);
  v27 = v39;
  if (!v39)
    return specialized Array._endMutation()(v26);
  if (!((unint64_t)v9 >> 62))
  {
    v28 = *(_QWORD *)(v16 + 16);
    v29 = v28 - v4;
    if (!__OFSUB__(v28, v4))
      goto LABEL_36;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 0)
    v35 = v9;
  else
    v35 = v16;
  swift_bridgeObjectRetain(v9);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v9);
  v27 = v39;
  v29 = v36 - v4;
  if (__OFSUB__(v36, v4))
    goto LABEL_53;
LABEL_36:
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = (char *)(v16 + 32 + 8 * v4);
    if (v40 != v4 || v24 >= &v30[8 * v29])
    {
      v26 = memmove(v24, v30, 8 * v29);
      v27 = v39;
    }
    if (!((unint64_t)v9 >> 62))
    {
      v31 = *(_QWORD *)(v16 + 16);
      v32 = v31 + v27;
      if (!__OFADD__(v31, v27))
      {
LABEL_42:
        *(_QWORD *)(v16 + 16) = v32;
        return specialized Array._endMutation()(v26);
      }
      goto LABEL_59;
    }
LABEL_54:
    if (v9 < 0)
      v37 = v9;
    else
      v37 = v16;
    swift_bridgeObjectRetain(v9);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v9);
    v32 = v38 + v39;
    if (!__OFADD__(v38, v39))
      goto LABEL_42;
LABEL_59:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10043B8F8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 89, 7);
}

double sub_10043B93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100437D74(a1, a2, (uint64_t *)(v2 + 16), *(_QWORD *)(v2 + 80), *(_BYTE *)(v2 + 88));
}

_QWORD *sub_10043B94C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  swift_bridgeObjectRetain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_10043B9A0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10043B9DC()
{
  uint64_t v0;
  uint64_t (*v1)(_OWORD *);
  _OWORD v3[7];

  v1 = *(uint64_t (**)(_OWORD *))(v0 + 64);
  memset(v3, 0, sizeof(v3));
  return v1(v3);
}

uint64_t sub_10043BA1C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

double sub_10043BA68(uint64_t a1)
{
  uint64_t v1;

  return sub_100437EA8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + 32, *(void (**)(_QWORD *, __n128))(v1 + 96));
}

uint64_t sub_10043BA7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));

  return swift_deallocObject(v0, 192, 7);
}

uint64_t sub_10043BAF8(uint64_t a1)
{
  uint64_t v1;

  return sub_10043816C(a1, v1 + 16, (uint64_t *)(v1 + 80));
}

uint64_t *sub_10043BB04(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[5];
  swift_release(a1[7]);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_10043BBA8 + 4 * asc_100536680[v4]))();
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10043BC54 + 4 * byte_10053668A[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10043BC88 + 4 * byte_100536685[v5]))();
}

uint64_t sub_10043BC88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043BC90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10043BC98);
  return result;
}

uint64_t sub_10043BCA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10043BCACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10043BCB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043BCB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043BCC4(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_10043BCE0(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly;
}

uint64_t destroy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  return swift_release(a1[11]);
}

uint64_t initializeWithCopy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  v4 = *(_QWORD *)(a2 + 88);
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 88) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_retain(v10);
  swift_release(v11);
  v13 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v12;
  swift_retain(v12);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(*(_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(*(_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(*(_QWORD *)(a1 + 72));
  v4 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v4;
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration;
}

void sub_10043C000(char a1)
{
  _BYTE *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE *v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[5];
  uint64_t v11;

  v1[qword_10065D8F0] = 0;
  if ((a1 & 1) != 0)
  {
    v2 = *(void **)&v1[qword_10065D8D8];
    if (v2)
    {
      objc_msgSend(v2, "performBatchUpdates:completion:", 0, 0);
      return;
    }
  }
  else
  {
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_100607AD0, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v5 = swift_allocObject(&unk_100607AF8, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1002D792C;
    *(_QWORD *)(v5 + 24) = v4;
    v10[4] = sub_10001B278;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10001B258;
    v10[3] = &unk_100607B10;
    v6 = _Block_copy(v10);
    v7 = v11;
    v8 = v1;
    swift_retain(v5);
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 146, 230, 44, 1);
    swift_release(v4);
    swift_release(v5);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

id sub_10043C180()
{
  _BYTE *v0;

  v0[qword_10065D8F0] = 1;
  return objc_msgSend(v0, "setNeedsLayout");
}

void sub_10043C1A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void **)(v2 + qword_10065D8E0);
  if (v4)
  {
    v8 = v4;
    sub_1000E85FC(a1, (uint64_t)v8, v6, v7, a2);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10043C204(uint64_t a1)
{
  return sub_10043C288(a1, (uint64_t (*)(uint64_t))sub_1000E8744);
}

void sub_10043C210(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v5;
  id v8;

  v5 = *(void **)(v3 + qword_10065D8E0);
  if (v5)
  {
    v8 = v5;
    sub_1000E894C(a1, a2, a3);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10043C27C(uint64_t a1)
{
  return sub_10043C288(a1, sub_1000E8E10);
}

uint64_t sub_10043C288(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v3 = *(void **)(v2 + qword_10065D8E0);
  if (v3)
  {
    v5 = result;
    v6 = v3;
    v7 = a2(v5);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10043C2E8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_10065D8E0);
  if (v1)
  {
    v2 = v1;
    sub_1000E9630(0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10043C330(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v6;

  v3 = *(void **)(v2 + qword_10065D8E0);
  if (v3)
  {
    v6 = v3;
    sub_1000E978C(a1, a2 & 1);

  }
  else
  {
    __break(1u);
  }
}

SEL *sub_10043C394()
{
  return sub_10043C3B8((SEL *)&selRef_allowsMultipleSelection);
}

SEL *sub_10043C3A0()
{
  return sub_10043C3B8((SEL *)&selRef_allowsMultipleSelectionDuringEditing);
}

SEL *sub_10043C3AC()
{
  return sub_10043C3B8((SEL *)&selRef_isEditing);
}

SEL *sub_10043C3B8(SEL *result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + qword_10065D8D8))
    return (SEL *)objc_msgSend(*(id *)(v1 + qword_10065D8D8), *result);
  __break(1u);
  return result;
}

void sub_10043C3E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_10065D8D8);
  *(_QWORD *)(v1 + qword_10065D8D8) = a1;

}

void sub_10043C3FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_10065D8E0);
  *(_QWORD *)(v1 + qword_10065D8E0) = a1;

}

uint64_t sub_10043C410()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_10065D8F0);
}

uint64_t sub_10043C420(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_10065D8F0) = result;
  return result;
}

id sub_10043C430()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  v2 = *(void **)((char *)v0 + qword_10065D8D8);
  *(_QWORD *)((char *)v0 + qword_10065D8D8) = v1;
  v3 = v1;

  objc_msgSend(v3, "setAutoresizingMask:", 18);
  objc_msgSend(v3, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v0, "addSubview:", v3);
  return v3;
}

id sub_10043C4C8(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + qword_10065D8D8);
  *(_QWORD *)(v1 + qword_10065D8D8) = a1;
  v3 = a1;

  return objc_msgSend(v3, "setPreservesSuperviewLayoutMargins:", 1);
}

void sub_10043C514(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;

  type metadata accessor for TTRITreeViewTableAdapter(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v6 = v4;
  v7 = a1;
  v8 = sub_1000E3B08(v6, v7);
  v9 = *(void **)((char *)v6 + qword_10065D8E0);
  *(_QWORD *)((char *)v6 + qword_10065D8E0) = v8;

  v10 = type metadata accessor for TTRITreeTableView();
  v11 = swift_dynamicCastClass(v7, v10);
  if (v11)
  {
    v12 = *(_QWORD *)((char *)v6 + qword_10065D8E0);
    v13 = &off_1005F1388;
    if (!v12)
      v13 = 0;
    v14 = v11 + OBJC_IVAR____TtC9Reminders17TTRITreeTableView_contextMenuDelegate;
    *(_QWORD *)(v14 + 8) = v13;
    swift_unknownObjectWeakAssign(v14, v12);
  }
  else
  {
    if (qword_10063D7E0 != -1)
      swift_once(&qword_10063D7E0, sub_10043C710);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_10065D8C0);
    oslog = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "UITableView contained in TTRITreeView is not a subclass of TTRITreeTableView", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
}

id sub_10043C69C(uint64_t a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;

  objc_msgSend(v1, "bounds");
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRITreeTableView()), "initWithFrame:style:", a1, v3, v4, v5, v6);
}

uint64_t sub_10043C710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065D8C0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065D8C0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10043C7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  objc_class *v10;
  objc_super v12;

  v5 = v4;
  v6 = *v4;
  v7 = swift_isaMask;
  v8 = *(void **)((char *)v4 + qword_10065D8E0);
  if (v8)
  {
    v9 = v8;
    sub_1000E3E04();

  }
  v10 = (objc_class *)type metadata accessor for TTRITreeView(0, *(_QWORD *)((v7 & v6) + 0x50), *(_QWORD *)((v7 & v6) + 0x58), a4);
  v12.receiver = v5;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, "dealloc");
}

id sub_10043C820(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  return sub_10043C7A0((uint64_t)v1, v2, v3, v4);
}

uint64_t sub_10043C844(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + qword_10065D8E8));
}

void sub_10043C88C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  objc_class *v7;
  id v8;
  char *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  v6 = swift_isaMask & *v4;
  *(_QWORD *)((char *)v4 + qword_10065D8D8) = 0;
  *(_QWORD *)((char *)v4 + qword_10065D8E0) = 0;
  *(_QWORD *)((char *)v4 + qword_10065D8E8) = 0;
  *((_BYTE *)v4 + qword_10065D8F0) = 0;
  v7 = (objc_class *)type metadata accessor for TTRITreeView(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), a4);
  v24.receiver = v4;
  v24.super_class = v7;
  v8 = objc_msgSendSuper2(&v24, "initWithCoder:", a1);
  if (!v8)
    goto LABEL_17;
  v9 = (char *)v8;
  v10 = objc_msgSend(v9, "subviews");
  v11 = sub_10043CAD4();
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(v12);
    goto LABEL_15;
  }
  if (v12 < 0)
    v22 = v12;
  else
    v22 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v23 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v12);
  if (!v23)
    goto LABEL_14;
LABEL_4:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v12 + 32);
LABEL_7:
    v14 = v13;
    swift_bridgeObjectRelease(v12);
    v15 = objc_opt_self(UITableView);
    v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
    if (v16)
    {
      v17 = *(void **)&v9[qword_10065D8D8];
      *(_QWORD *)&v9[qword_10065D8D8] = v16;
      v18 = v16;

      objc_msgSend(v18, "setPreservesSuperviewLayoutMargins:", 1);
LABEL_16:
      sub_10043C514(v18, v19, v20, v21);

LABEL_17:
      return;
    }

LABEL_15:
    v18 = sub_10043C430();
    goto LABEL_16;
  }
  __break(1u);
}

void sub_10043CA68(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  sub_10043C88C(v3, v4, v5, v6);
}

void sub_10043CA8C()
{
  sub_10043CAA8();
}

void sub_10043CAA8()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRITreeView", 22, "init(frame:)", 12, 0);
  __break(1u);
}

unint64_t sub_10043CAD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006406F0;
  if (!qword_1006406F0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006406F0);
  }
  return result;
}

uint64_t sub_10043CB10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10043CB34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10043CB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065D978);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065D978);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10043CBD4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance));
}

uint64_t sub_10043CC10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter();
  v4 = v3;
  result = static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter();
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

unint64_t sub_10043CC54()
{
  unsigned __int8 *v0;
  const mach_header_64 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (unsigned __int8 *)TTRReminderCellStyle.template.unsafeMutableAddressor();
  v1 = &_mh_execute_header;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_10043CCBC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue);
}

void sub_10043CCCC(char a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  double v5;
  void *v6;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
    if (v2)
    {
      v3 = type metadata accessor for TTRTemplateEditor(0);
      v6 = v2;
      __chkstk_darwin(v3);
      v4 = v2;
      static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)(&v6, 0, sub_100440A0C, v5);

    }
  }
}

_UNKNOWN **sub_10043CD90()
{
  return &off_1005EA968;
}

uint64_t sub_10043CD9C()
{
  uint64_t v0;
  uint64_t result;

  result = 64;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount) <= 0)
      return 64;
    else
      return 65;
  }
  return result;
}

uint64_t sub_10043CDC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  v4 = (uint64_t)v3;
  if (!v3)
    v4 = sub_10046D9C4(a1, a2);
  v5 = v3;
  return v4;
}

void *sub_10043CE08()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  v2 = v1;
  return v1;
}

uint64_t sub_10043CE40(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    sub_10021F89C(a1);
    v4 = v3;
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

void *sub_10043CEE8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  v2 = v1;
  return v1;
}

id sub_10043CF20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  if (v3)
  {
    v4 = swift_allocObject(&unk_100607C40, 24, 7);
    *(_QWORD *)(v4 + 16) = v3;
    v5 = sub_10040D1AC;
    v6 = 1;
    v7 = 2;
  }
  else
  {
    v7 = 0;
    v6 = 0;
    v4 = 0;
    v5 = sub_10047904C;
  }
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return v3;
}

void sub_10043CF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _BYTE v36[40];

  v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v5);
  v7 = (void **)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v14)
  {
    v15 = v14;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(a1);
    swift_release();
    swift_release();
    v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16) == 1)
    {

      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v10, v16) == 1)
      {
        sub_10001F580((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10002B1E8((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
        {
          v17 = *v7;
          v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
          inited = swift_initStackObject(v18, v36);
          *(_OWORD *)(inited + 16) = xmmword_100521140;
          v20 = *(void **)(a2 + 16);
          v21 = objc_msgSend(v20, "objectID");
          *(_QWORD *)(inited + 32) = v21;
          v35 = inited;
          specialized Array._endMutation()(v21);
          v22 = v35;
          v23 = sub_100017684(v35);
          swift_bridgeObjectRelease(v22);
          v24 = type metadata accessor for TTRTemplateEditor(0);
          v34 = v15;
          v25 = v15;
          v26 = objc_msgSend(v20, "saveRequest");
          v35 = a2;
          v27 = type metadata accessor for TTRReminderEditor(0);
          v28 = sub_1000AE644();
          v29 = TTRUndoableEditing.undoManager.getter(v27, v28);
          TTROneshotEditing.init(item:saveRequest:undoManager:)(&v35, &v34, v26, v29, v24, &protocol witness table for TTRTemplateEditor);
          v30 = v17;
          TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v23, v17, 0);

          swift_bridgeObjectRelease(v23);
          swift_release();

          v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          v32 = (uint64_t)v13;
        }
        else
        {
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

          v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
          v32 = (uint64_t)v7;
        }
      }
      else
      {

        v31 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v32 = (uint64_t)v10;
      }
      sub_10001F544(v32, v31);
    }
  }
}

uint64_t sub_10043D2DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  __n128 v15;
  char *v16;
  _BYTE v18[32];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v4);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v18[-v13];
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  swift_release();
  v15 = swift_release();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v15) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10001F580((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation))
    {
      sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v16 = (char *)&loc_10043D498 + 4 * byte_1005367B0[swift_getEnumCaseMultiPayload(v11, v8)];
      __asm { BR              X10 }
    }
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return 0;
}

void sub_10043D514()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = v0;
  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  JUMPOUT(0x10043D4ECLL);
}

void sub_10043D548()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;

  sub_10001F580(v3, (uint64_t)v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v6 = *v0;
  v7 = (uint64_t *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
  swift_beginAccess(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID, v5 - 104, 0, 0);
  v8 = *v7;
  v9 = v1;
  v10 = v6;
  swift_bridgeObjectRetain(v8);
  v11 = sub_1004781F8(v10, v8);

  swift_bridgeObjectRelease(v8);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if (!v11)
  {

    JUMPOUT(0x10043D4E4);
  }
  JUMPOUT(0x10043D4ECLL);
}

double sub_10043D620(uint64_t a1)
{
  return sub_10043DB8C(a1, (void (*)(uint64_t))sub_1003E8E6C);
}

uint64_t sub_10043D62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    v2 = swift_allocObject(v3, 32, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_QWORD *)(v2 + 24) = &off_100607B40;
    swift_unknownObjectWeakAssign(v4, v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10043D6C0(void *a1)
{
  sub_10043D62C();
  LOBYTE(a1) = sub_1003E92E4(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_10043D6FC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE v41[40];
  _QWORD v42[5];
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    v11 = swift_getObjectType(v7, v8);
    LOBYTE(v10) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 56))(a1, v11, v10);
    swift_unknownObjectRelease(v9);
    if ((v10 & 1) == 0)
    {
LABEL_19:
      v22 = 0;
      return v22 & 1;
    }
  }
  v12 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation;
  v13 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  if (!v13)
  {
LABEL_7:
    if (qword_10063D7E8 != -1)
      swift_once(&qword_10063D7E8, sub_10043CB44);
    v23 = type metadata accessor for Logger(0);
    sub_100012DC4(v23, (uint64_t)qword_10065D978);
    sub_100010634((uint64_t)a1, (uint64_t)v48);
    v24 = swift_retain_n(v3, 2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = 7104878;
      v28 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(64, -1);
      v47 = v29;
      *(_DWORD *)v28 = 136315394;
      v30 = *(void **)(v3 + v12);
      if (v30)
      {
        v31 = objc_msgSend(v30, "description");
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v34 = v33;

      }
      else
      {
        v34 = 0xE300000000000000;
        v32 = 7104878;
      }
      *(_QWORD *)&v45 = sub_100027E40(v32, v34, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 8, v28 + 4, v28 + 12);
      swift_release_n(v3, 2);
      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v28 + 12) = 2080;
      v35 = v49;
      v36 = v50;
      sub_10001413C(v48, v49);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 176))(&v45, v35, v36);
      sub_10000735C((uint64_t)&v45, (uint64_t)&v43, &qword_100649C80);
      if (v44)
      {
        sub_10002E37C(&v43, (uint64_t)v42);
        sub_100010634((uint64_t)v42, (uint64_t)v41);
        v37 = sub_10002A750((uint64_t *)&unk_10065B450);
        v27 = String.init<A>(describing:)(v41, v37);
        v39 = v38;
        sub_100027F10(v42);
        sub_1000073A0((uint64_t)&v45, &qword_100649C80);
      }
      else
      {
        sub_1000073A0((uint64_t)&v45, &qword_100649C80);
        v39 = 0xE300000000000000;
      }
      *(_QWORD *)&v45 = sub_100027E40(v27, v39, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 8, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease(v39);
      sub_100027F10(v48);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "matchesListPredicate returns false because one of the lists is nil {viewModelSourceList: %s, reminderList: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy(v29, 2, &type metadata for Any[8]);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release_n(v3, 2);
      sub_100027F10(v48);
    }

    goto LABEL_19;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_10001413C(a1, v14);
  v16 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 176);
  v17 = v13;
  v16(&v45, v14, v15);
  if (!v46)
  {

    sub_1000073A0((uint64_t)&v45, &qword_100649C80);
    goto LABEL_7;
  }
  sub_10002E37C(&v45, (uint64_t)v48);
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v18 = objc_msgSend(v17, "objectID");
  v19 = v49;
  v20 = v50;
  sub_10001413C(v48, v49);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  v22 = static NSObject.== infix(_:_:)(v18, v21);

  sub_100027F10(v48);
  return v22 & 1;
}

double sub_10043DB38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_10043D62C();
  sub_1003E94EC(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10043DB80(uint64_t a1)
{
  return sub_10043DB8C(a1, (void (*)(uint64_t))sub_1003E9680);
}

double sub_10043DB8C(uint64_t a1, void (*a2)(uint64_t))
{
  double result;

  sub_10043D62C();
  a2(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10043DBD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;

  v2 = v1;
  v65 = (_QWORD *)a1;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v58 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (id *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = sub_10002A750(&qword_10064A838);
  v10 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v66 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10043D62C();
  Strong = swift_unknownObjectWeakLoadStrong(v12 + 16);
  if (Strong)
  {
    v15 = Strong;
    v63 = v10;
    v16 = *(_QWORD *)(v12 + 24);
    ObjectType = swift_getObjectType(Strong, v14);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v12, ObjectType, v16);
    swift_unknownObjectRelease(v15);
    swift_retain();
    v19 = sub_100395390((uint64_t)v65, 0, v18, v12);
    v21 = v20;
    v23 = v22;
    swift_release();
    swift_release_n(v12, 2);
    if (v19)
    {
      v56 = v19;
      v57 = v21;
      v55 = v23;
      v24 = _swiftEmptyArrayStorage;
      v67 = (unint64_t)_swiftEmptyArrayStorage;
      v25 = v65[2];
      if (v25)
      {
        v26 = (uint64_t)v65 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        v27 = *(_QWORD *)(v4 + 72);
        swift_bridgeObjectRetain(v65);
        do
        {
          v29 = sub_10002B1E8(v26, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v30 = TTRRemindersListViewModel.Item.reminderObjectID.getter(v29);
          v31 = sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v30)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
            v33 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v32 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v33 >= v32 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
            v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
            specialized Array._endMutation()(v28);
          }
          v26 += v27;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease(v65);
        v24 = (_QWORD *)v67;
      }
      v40 = sub_100017684((uint64_t)v24);
      swift_bridgeObjectRelease(v24);
      v62 = *(_QWORD *)(v57 + 16);
      if (v62)
      {
        v61 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        v60 = v57 + v61;
        v41 = *(_QWORD *)(v63 + 72);
        swift_bridgeObjectRetain(v57);
        v42 = 0;
        v43 = _swiftEmptyArrayStorage;
        v59 = v41;
        do
        {
          v65 = v43;
          v44 = v60 + v41 * v42;
          v45 = *(int *)(v64 + 48);
          v46 = *(_QWORD *)(v44 + v45);
          v67 = v46;
          v47 = *(_QWORD *)(v46 + 16);
          if (v47)
          {
            v63 = v44;
            v48 = v58;
            v49 = v46 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
            swift_bridgeObjectRetain_n(v46, 2);
            v50 = *(_QWORD *)(v48 + 72);
            do
            {
              sub_10002B1E8(v49, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10043E10C(v9, v40, v2, &v67);
              sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v49 += v50;
              --v47;
            }
            while (v47);
            swift_bridgeObjectRelease(v46);
            v46 = v67;
            v44 = v63;
            v45 = *(int *)(v64 + 48);
          }
          else
          {
            swift_bridgeObjectRetain(v46);
          }
          v51 = v44;
          v52 = v66;
          sub_10002B1E8(v51, v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(_QWORD *)(v52 + v45) = v46;
          swift_bridgeObjectRetain(v46);
          v43 = v65;
          if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
            v43 = (_QWORD *)sub_100456164(0, v43[2] + 1, 1, (unint64_t)v43);
          v54 = v43[2];
          v53 = v43[3];
          if (v54 >= v53 >> 1)
            v43 = (_QWORD *)sub_100456164(v53 > 1, v54 + 1, 1, (unint64_t)v43);
          ++v42;
          v43[2] = v54 + 1;
          v41 = v59;
          sub_10000F614(v66, (uint64_t)v43 + v61 + v54 * v59, &qword_10064A838);
          swift_bridgeObjectRelease(v46);
        }
        while (v42 != v62);
        swift_bridgeObjectRelease(v40);
        v40 = v57;
        swift_bridgeObjectRelease(v57);
      }
      else
      {
        swift_bridgeObjectRelease(v57);
      }
      swift_bridgeObjectRelease(v40);
      return v56;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100012DC4(v34, (uint64_t)qword_100659C50);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.fault.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }
    swift_release();

    return 0;
  }
}

void sub_10043E10C(id *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  unint64_t *v23;
  void *v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  unint64_t *v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  id v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  _QWORD v58[3];
  char v59[8];
  uint64_t v60;
  unint64_t *v61;
  char v62[24];

  v57 = a4;
  v7 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  LOBYTE(a2) = sub_10037B2EC(v14, a2);

  if ((a2 & 1) != 0)
  {
    v15 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
    swift_beginAccess(v15, v62, 0, 0);
    v16 = *v15;
    v17 = v14;
    swift_bridgeObjectRetain(v16);
    v18 = (uint64_t)sub_1004781F8(v17, v16);

    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v16).n128_u64[0];
    if (v18)
    {
      v20 = objc_msgSend((id)v18, "subtaskContext", v19);
      if (!v20)
      {

        return;
      }
      v21 = v20;
      v61 = 0;
      v22 = objc_msgSend(v20, "fetchObjectIDsOfUnsupportedSubtasksWithError:", &v61);
      v23 = v61;
      v54 = v21;
      if (!v22)
      {
        v38 = v61;
        v21 = (void *)_convertNSErrorToError(_:)(v23);

        swift_willThrow(v39);
        if (qword_10063D7E8 == -1)
          goto LABEL_20;
        goto LABEL_30;
      }
      v24 = v22;
      v53 = (id)v18;
      v25 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);
      v26 = v23;

      v27 = v18;
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v52 = v18;
        else
          v52 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v28 = _CocoaArrayWrapper.endIndex.getter(v52);
        if (v28)
          goto LABEL_7;
      }
      else
      {
        v28 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v18);
        if (v28)
        {
LABEL_7:
          if (v28 >= 1)
          {
            v29 = 0;
            v56 = (uint64_t)a1 + *(int *)(v10 + 20);
            v55 = v27 & 0xC000000000000001;
            v30 = v27;
            do
            {
              if (v55)
                v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
              else
                v31 = *(id *)(v27 + 8 * v29 + 32);
              v32 = v31;
              sub_10000735C(v56, (uint64_t)v9, &qword_100644980);
              TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v32, v9);
              v33 = v57;
              v34 = *v57;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
              *v33 = v34;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v34 = sub_100456178(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
                *v57 = v34;
              }
              v37 = *(_QWORD *)(v34 + 16);
              v36 = *(_QWORD *)(v34 + 24);
              if (v37 >= v36 >> 1)
              {
                v34 = sub_100456178(v36 > 1, v37 + 1, 1, v34);
                *v57 = v34;
              }
              ++v29;
              *(_QWORD *)(v34 + 16) = v37 + 1;
              sub_10001F580((uint64_t)v13, v34+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v27 = v30;
            }
            while (v28 != v29);
            goto LABEL_27;
          }
          __break(1u);
LABEL_30:
          swift_once(&qword_10063D7E8, sub_10043CB44);
LABEL_20:
          v40 = type metadata accessor for Logger(0);
          sub_100012DC4(v40, (uint64_t)qword_10065D978);
          swift_errorRetain(v21);
          swift_errorRetain(v21);
          v41 = (id)v18;
          v42 = Logger.logObject.getter(v41);
          v43 = static os_log_type_t.error.getter(v42);
          if (os_log_type_enabled(v42, v43))
          {
            v44 = swift_slowAlloc(22, -1);
            v45 = (_QWORD *)swift_slowAlloc(8, -1);
            v57 = (unint64_t *)swift_slowAlloc(32, -1);
            v61 = v57;
            *(_DWORD *)v44 = 138412546;
            v46 = objc_msgSend(v41, "objectID");
            v60 = (uint64_t)v46;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v44 + 4, v44 + 12);
            *v45 = v46;

            *(_WORD *)(v44 + 12) = 2080;
            swift_getErrorValue(v21, v59, v58);
            v47 = Error.rem_errorDescription.getter(v58[1], v58[2]);
            v49 = v48;
            v60 = sub_100027E40(v47, v48, (uint64_t *)&v61);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v44 + 14, v44 + 22);
            swift_bridgeObjectRelease(v49);
            swift_errorRelease(v21);
            swift_errorRelease(v21);
            _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to fetch objectIDs of completed subtasks of reminder {reminder.objectID: %@, error: %s}", (uint8_t *)v44, 0x16u);
            v50 = sub_10002A750(&qword_100642D60);
            swift_arrayDestroy(v45, 1, v50);
            swift_slowDealloc(v45, -1, -1);
            v51 = v57;
            swift_arrayDestroy(v57, 1, &type metadata for Any[8]);
            swift_slowDealloc(v51, -1, -1);
            swift_slowDealloc(v44, -1, -1);

            swift_errorRelease(v21);
          }
          else
          {

            swift_errorRelease(v21);
            swift_errorRelease(v21);
            swift_errorRelease(v21);

          }
          return;
        }
      }
LABEL_27:

      swift_bridgeObjectRelease_n(v27, 2);
    }
  }
}

_QWORD *sub_10043E6EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v2 = sub_10043D62C();
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    swift_retain();
    v9 = sub_100397FDC(a1, 0, v8, v2);
    swift_release();
    swift_release_n(v2, 2);
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_100659C50);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.fault.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
    swift_release();

    return 0;
  }
  return v9;
}

uint64_t sub_10043E864()
{
  return 0;
}

uint64_t sub_10043E870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[5];
  _QWORD v64[8];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v52 - v14);
  v16 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v19);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v24)
  {
    v58 = v21;
    v59 = v20;
    v61 = v6;
    v25 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
    v26 = v24;
    TTRTemplatePublicLinkData.init(template:now:)(v26, v18);
    type metadata accessor for TTRListColors(0);
    v63[3] = sub_100005ED8(0, (unint64_t *)&qword_1006454A8, REMTemplate_ptr);
    v63[4] = &protocol witness table for REMTemplate;
    v63[0] = v26;
    v27 = v26;
    static TTRListColors.color(for:)(v64, v63);
    sub_1000073A0((uint64_t)v63, &qword_100649C80);
    v28 = objc_msgSend(v27, "accountCapabilities");
    LODWORD(v26) = objc_msgSend(v28, "supportsSections");

    v29 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
    v57 = (int)v26;
    if (v29 && (v30 = objc_msgSend(v29, "objectID")) != 0)
    {
      *v15 = v30;
      v31 = type metadata accessor for TTRListType(0);
      swift_storeEnumTagMultiPayload(v15, v31, 0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
    }
    else
    {
      v34 = type metadata accessor for TTRListType(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    }
    v62 = a1;
    sub_10000735C((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100665590);
    v35 = objc_msgSend(v27, "name");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v55 = v37;
    v56 = v36;

    v54 = TTRListColors.Color.nativeColor.getter(v38);
    v39 = v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
    v40 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount + 16);
    v60 = v12;
    if ((v40 & 1) != 0)
      v53 = 0;
    else
      v53 = *(_QWORD *)(v39 + 8);
    v41 = objc_msgSend(v27, "objectID");
    v42 = objc_msgSend(v41, "stringRepresentation");

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v9, 1, 1, v46);
    v47 = (uint64_t)v61;
    sub_10002B1E8((uint64_t)v23, (uint64_t)v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v47, 0, 1, v59);
    BYTE6(v51) = 1;
    WORD2(v51) = 257;
    LODWORD(v51) = 0;
    HIWORD(v50) = 0;
    BYTE5(v50) = v57;
    BYTE4(v50) = 0;
    LODWORD(v50) = 65537;
    v48 = v62;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v60, v56, v55, v54, v53, v40, 0, 3, v50, 1, 0, 1, v43, v45, 0, v9, v47, v51);
    sub_1000AD9D0((uint64_t)v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);

    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100665590);
    sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    v49 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  else
  {
    v32 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a1, 1, 1, v32);
  }
}

uint64_t sub_10043ED7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability));
}

uint64_t sub_10043EDC8()
{
  uint64_t v0;

  v0 = sub_10046B320();

  swift_release();
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10043EE38()
{
  return type metadata accessor for TTRShowTemplateViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowTemplateViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10065D9E8;
  if (!qword_10065D9E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowTemplateViewModelSource);
  return result;
}

uint64_t sub_10043EE7C(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = &unk_1005367F8;
  v2[3] = &unk_100536810;
  v2[4] = "\b";
  v2[5] = "\b";
  return swift_updateClassMetadata2(a1, 256, 6, v2, a1 + 1336);
}

uint64_t sub_10043EED4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  char v14;
  unsigned __int8 v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v25;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "objectID", v5);
  v9 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (!v10)
  {
    if (v8)
      goto LABEL_6;
LABEL_11:
    v14 = 1;
    goto LABEL_12;
  }
  v11 = objc_msgSend(v10, "objectID");
  v12 = v11;
  if (!v8)
  {
    if (v11)
    {
      v14 = 0;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v11)
  {
    sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v13 = v8;
    v14 = static NSObject.== infix(_:_:)(v13, v12);

LABEL_9:
    v8 = v12;
    goto LABEL_10;
  }
LABEL_6:
  v14 = 0;
LABEL_10:

LABEL_12:
  v15 = objc_msgSend(a1, "showingLargeAttachments");
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = v15;
  v16 = *(void **)(v2 + v9);
  *(_QWORD *)(v2 + v9) = a1;

  v17 = a1;
  sub_10043E870((uint64_t)v7);
  sub_10046ADD4((uint64_t)v7);
  if ((v14 & 1) == 0)
  {
    v18 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v18);
    if (Strong)
    {
      v21 = Strong;
      v22 = *(_QWORD *)(v18 + 8);
      ObjectType = swift_getObjectType(Strong, v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 88))(1, ObjectType, v22);
      swift_unknownObjectRelease(v21);
    }
  }
  return sub_1000073A0((uint64_t)v7, &qword_100649CA0);
}

void sub_10043F08C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  char **v32;
  void *v33;
  int v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  __int128 v103[2];
  _QWORD v104[5];
  _OWORD v105[8];
  _BYTE v106[136];

  v5 = v4;
  v95 = a4;
  v102 = a3;
  v98 = a2;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v94 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v88);
  v89 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v14);
  v93 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v16);
  v92 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v86 = *(_QWORD *)(v18 - 8);
  v87 = v18;
  __chkstk_darwin(v18);
  v85 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v99 = *(_QWORD *)(v20 - 8);
  v100 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v23);
  v25 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v84 - v28;
  v30 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  v31 = *(id *)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  v32 = &selRef_supportsAttachments;
  v96 = v9;
  v90 = v10;
  v91 = v11;
  v101 = a1;
  if (!v31)
  {
    if (!a1)
    {
      v34 = 1;
      v97 = 1;
      v35 = v98;
      goto LABEL_23;
    }
    v33 = 0;
LABEL_7:
    v36 = objc_msgSend(a1, v32[326]);
    v37 = v36;
    if (v33)
    {
      if (v36)
      {
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v40 = v39;
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        if (v38 == v42 && v40 == v41)
        {
          v97 = 1;
          v43 = v41;
        }
        else
        {
          v44 = v38;
          v43 = v41;
          v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v40, v42, v41, 0);
        }

        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v43);
        goto LABEL_21;
      }

    }
    else
    {
      if (!v36)
      {
        v97 = 1;
        goto LABEL_21;
      }

    }
    v97 = 0;
LABEL_21:
    v33 = *(void **)(v5 + v30);
    v45 = v101;
    *(_QWORD *)(v5 + v30) = v101;
    v46 = v45;
    v34 = 0;
    v35 = v98;
    goto LABEL_22;
  }
  v31 = objc_msgSend(v31, "sortingStyle", v27);
  v32 = &selRef_supportsAttachments;
  v33 = v31;
  if (a1)
    goto LABEL_7;
  v34 = 1;
  v35 = v98;
  if (!v31)
  {
    v97 = 1;
    goto LABEL_23;
  }
  v97 = 0;
LABEL_22:

LABEL_23:
  if (v35)
  {
    v47 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = v35;
    v48 = v35;

    v49 = v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v52 = Strong;
      v53 = *(_QWORD *)(v49 + 8);
      ObjectType = swift_getObjectType(Strong, v51);
      (*(void (**)(uint64_t, uint64_t))(v53 + 120))(ObjectType, v53);
      swift_unknownObjectRelease(v52);
    }

  }
  REMRemindersListDataView.FlatModel.remindersCount.getter(v31);
  sub_10000735C((uint64_t)v29, (uint64_t)v25, &qword_10063F008);
  v55 = v99;
  v56 = v100;
  v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v25, 1, v100);
  if (v57 == 1)
  {
    v58 = 0;
    v59 = 0;
  }
  else
  {
    v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v22, v25, v56);
    v61 = v55;
    v58 = REMRemindersListDataView.CountByCompleted.completed.getter(v60);
    v59 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v56);
  }
  v62 = v97;
  sub_1000073A0((uint64_t)v29, &qword_10063F008);
  v63 = v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(_QWORD *)v63 = v58;
  *(_QWORD *)(v63 + 8) = v59;
  *(_BYTE *)(v63 + 16) = v57 == 1;
  if (((v34 | v62) & 1) != 0)
  {
    v64 = v92;
    sub_10043E870(v92);
    v65 = v88;
    v66 = v89;
    *v89 = 2;
    swift_storeEnumTagMultiPayload(v66, v65, 0);
    sub_1000D2B94(v105);
    sub_10000F614((uint64_t)v105, (uint64_t)v106, &qword_100649B60);
    v67 = (uint64_t)v93;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v66, v106, 0, 0, 0, 0, 0, 0);
    v68 = v94;
    v69 = sub_10002B1E8(v67, v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v70 = REMRemindersListDataView.FlatModel.reminders.getter(v69);
    v71 = v90;
    *(_QWORD *)(v68 + *(int *)(v90 + 20)) = v70;
    *(_BYTE *)(v68 + *(int *)(v71 + 24)) = 0;
    v72 = sub_10002A750(&qword_1006452D8);
    v73 = *(unsigned __int8 *)(v91 + 80);
    v74 = (v73 + 32) & ~v73;
    v75 = swift_allocObject(v72, v74 + *(_QWORD *)(v91 + 72), v73 | 7);
    *(_OWORD *)(v75 + 16) = xmmword_100520250;
    sub_10002B1E8(v68, v75 + v74, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v76 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v77 = swift_allocObject(v76, 16, 7);
    v78 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v79 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v96, 1, 1, v78);
    v104[3] = v76;
    v104[4] = &off_100604210;
    v104[0] = v77;
    sub_100010634((uint64_t)v104, (uint64_t)v103);
    v80 = swift_allocObject(&unk_100607BF0, 72, 7);
    *(_QWORD *)(v80 + 16) = v75;
    sub_10002E37C(v103, v80 + 24);
    *(_QWORD *)(v80 + 64) = v5;
    swift_retain();
    swift_bridgeObjectRetain(v75);
    swift_retain();
    sub_10047C8F8(1, v64, (uint64_t (*)(uint64_t))sub_10003E360, v80, v95, 0, v79);
    swift_release();
    sub_100027F10(v104);
    swift_bridgeObjectRelease(v75);
    sub_1000073A0(v79, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v68, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000073A0(v64, &qword_100649CA0);
    swift_release();
  }
  else
  {
    v81 = v101;
    v82 = objc_msgSend(v81, "sortingStyle");
    v83 = (uint64_t)v85;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_100474118(v83, 1);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v83, v87);
  }
}

double sub_10043F7C8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t Strong;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  __n128 v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72;
  double result;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  char *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  int v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  int v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  __int128 v121[2];
  _QWORD v122[5];

  v116 = a2;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v11);
  v107 = (uint64_t)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v111 = (uint64_t)&v102 - v14;
  v105 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v118 = *(_QWORD *)(v16 - 8);
  v119 = v16;
  __chkstk_darwin(v16);
  v112 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v18);
  v20 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v102 - v22;
  v117 = type metadata accessor for REMRemindersListDataView.SectionsModel(0);
  v115 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v25.n128_f64[0] = __chkstk_darwin(v24);
  v27 = (char *)&v102 - v26;
  v28 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  v29 = v4;
  v30 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  v120 = a1;
  v109 = v10;
  v108 = a4;
  v106 = v31;
  if (!v30)
  {
    if (!a1)
    {
      v114 = 1;
      v110 = 1;
      v36 = v4;
      v34 = v116;
      v45 = v117;
      v35 = v115;
      goto LABEL_23;
    }
    v113 = a3;
    v33 = 0;
LABEL_7:
    v37 = objc_msgSend(a1, "sortingStyle");
    v38 = v37;
    if (v33)
    {
      if (v37)
      {
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v41 = v40;
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v44 = v42;
        if (v39 == v43 && v41 == v42)
          v110 = 1;
        else
          v110 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);

        swift_bridgeObjectRelease(v41);
        swift_bridgeObjectRelease(v44);
        goto LABEL_21;
      }

    }
    else
    {
      if (!v37)
      {
        v110 = 1;
        goto LABEL_21;
      }

    }
    v110 = 0;
LABEL_21:
    v46 = v120;
    v35 = v115;
    v34 = v116;
    v33 = *(void **)(v29 + v28);
    *(_QWORD *)(v29 + v28) = v120;
    v36 = v29;
    v47 = v46;
    v114 = 0;
    goto LABEL_22;
  }
  v113 = a3;
  v32 = objc_msgSend(v30, "sortingStyle", v25.n128_f64[0]);
  v33 = v32;
  if (a1)
    goto LABEL_7;
  v114 = 1;
  v35 = v115;
  v34 = v116;
  if (!v32)
  {
    v110 = 1;
    v36 = v29;
    a3 = v113;
    v45 = v117;
    goto LABEL_23;
  }
  v110 = 0;
  v36 = v29;
LABEL_22:
  v45 = v117;

  a3 = v113;
LABEL_23:
  if (v34)
  {
    v48 = *(void **)(v36 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
    *(_QWORD *)(v36 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = v34;
    v49 = v34;

    v50 = v36 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v36 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v53 = Strong;
      v54 = *(_QWORD *)(v50 + 8);
      ObjectType = swift_getObjectType(Strong, v52);
      (*(void (**)(uint64_t, uint64_t))(v54 + 120))(ObjectType, v54);
      swift_unknownObjectRelease(v53);
    }

  }
  v56.n128_f64[0] = REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter(v25);
  REMRemindersListDataView.SectionsModel.remindersCount.getter(v56);
  v57 = *(void (**)(char *, uint64_t))(v35 + 8);
  v57(v27, v45);
  sub_10000735C((uint64_t)v23, (uint64_t)v20, &qword_10063F008);
  v59 = v118;
  v58 = v119;
  v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48))(v20, 1, v119);
  if (v60 == 1)
  {
    v61 = 0;
    v62 = 0;
  }
  else
  {
    v63 = *(uint64_t (**)(char *, char *, uint64_t))(v59 + 32);
    v117 = (uint64_t)v23;
    v64 = v36;
    v65 = v57;
    v66 = a3;
    v67 = v45;
    v68 = v112;
    v69 = v63(v112, v20, v58);
    v70 = v59;
    v61 = REMRemindersListDataView.CountByCompleted.completed.getter(v69);
    v62 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    v71 = v68;
    v45 = v67;
    a3 = v66;
    v57 = v65;
    v36 = v64;
    v23 = (char *)v117;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v58);
  }
  v72 = v114;
  sub_1000073A0((uint64_t)v23, &qword_10063F008);
  v74 = v36 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(_QWORD *)v74 = v61;
  *(_QWORD *)(v74 + 8) = v62;
  *(_BYTE *)(v74 + 16) = v60 == 1;
  if ((v72 & 1) == 0)
  {
    v75 = v120;
    v76 = v75;
    if ((v110 & 1) == 0)
    {
      v86 = objc_msgSend(v75, "sortingStyle");
      v87 = (uint64_t)v103;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_100474118(v87, 1);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v87, v105);
      return result;
    }
    v77 = v111;
    sub_10043E870(v111);
    v78 = v106;
    REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter(v79);
    v81 = REMRemindersListDataView.SectionsModel.sections.getter(v80);
    v82 = ((uint64_t (*)(char *, uint64_t))v57)(v78, v45);
    __chkstk_darwin(v82);
    *(&v102 - 2) = (uint64_t)v76;
    *(&v102 - 1) = a3;
    v83 = sub_1000ADFE4(v81, (void (*)(_QWORD, char *))sub_1004407C0, (uint64_t)(&v102 - 4));
    swift_bridgeObjectRelease(v81);
    v84 = v107;
    sub_10000735C(v77, v107, &qword_100649CA0);
    v85 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v84, 1, v85) == 1)
    {
      sub_1000073A0(v84, &qword_100649CA0);
    }
    else
    {
      v88 = *(unsigned __int8 *)(v84 + *(int *)(v85 + 64));
      sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v88 == 1)
      {
        REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter(v89);
        v91 = REMRemindersListDataView.SectionsModel.sections.getter(v90);
        v57(v78, v45);
        v92 = sub_100005ED8(0, &qword_1006436E8, REMTemplateSection_ptr);
        v93 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        v94 = swift_allocObject(v93, 160, 7);
        v95 = swift_retain();
        *(_QWORD *)(v36 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = sub_1000ADA0C(v95, v91, v92, 0, 1, &_swiftEmptySetSingleton, v94);
LABEL_38:
        swift_release();
        v96 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
        v97 = swift_allocObject(v96, 16, 7);
        v98 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        v99 = (uint64_t)v109;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v109, 1, 1, v98);
        v122[3] = v96;
        v122[4] = &off_100604210;
        v122[0] = v97;
        sub_100010634((uint64_t)v122, (uint64_t)v121);
        v100 = swift_allocObject(&unk_100607C18, 72, 7);
        *(_QWORD *)(v100 + 16) = v83;
        sub_10002E37C(v121, v100 + 24);
        *(_QWORD *)(v100 + 64) = v36;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain(v83);
        v101 = v111;
        sub_10047C8F8(1, v111, (uint64_t (*)(uint64_t))sub_1001D5A68, v100, v108, 0, v99);
        swift_release();
        sub_100027F10(v122);
        swift_bridgeObjectRelease(v83);

        sub_1000073A0(v99, (uint64_t *)&unk_100640EB0);
        sub_1000073A0(v101, &qword_100649CA0);
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
    }
    *(_QWORD *)(v36 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = 0;
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_100440040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  int v66;
  char v67;
  __int16 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int16 v76;
  _QWORD v77[6];
  unsigned __int8 v78;
  _QWORD v79[17];

  v47 = a4;
  v48 = a1;
  v57 = a5;
  v58 = a2;
  v6 = type metadata accessor for REMRemindersListDataView.SectionsModel(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v49);
  v55 = (uint64_t *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v14);
  v56 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v54 = (char *)&v44 - v17;
  type metadata accessor for TTRListColors(0);
  v79[3] = sub_100005ED8(0, (unint64_t *)&qword_1006454A8, REMTemplate_ptr);
  v79[4] = &protocol witness table for REMTemplate;
  v79[0] = a3;
  v18 = a3;
  static TTRListColors.color(for:)(v77, v79);
  v19 = v77[0];
  v20 = v77[1];
  v51 = v77[2];
  v52 = v77[3];
  v50 = v77[4];
  v53 = v77[5];
  v21 = v78;
  v22 = sub_1000073A0((uint64_t)v79, &qword_100649C80);
  REMRemindersListDataView.SectionLite.type.getter(v22);
  v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10);
  if (v23 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
    v24 = v21;
    v25 = *v13;
    v26 = v13[1];
    v27 = v13[2];
    swift_bridgeObjectRelease(v13[4]);
    v28 = v49;
    if (v48)
      v29 = 3;
    else
      v29 = 2;
    v30 = v55;
    *v55 = v25;
    swift_storeEnumTagMultiPayload(v30, v28, 1);
    v61 = v26;
    v62 = v27;
    v63 = 0u;
    v64 = 0u;
    v65 = 0u;
    v66 = 192;
    v67 = v29;
    v68 = v59;
    v69 = v60;
    v70 = v19;
    v71 = v20;
    v72 = v51;
    v73 = v52;
    v74 = v50;
    v75 = v53;
    v76 = v24;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v61);
    sub_10000F614((uint64_t)&v61, (uint64_t)v79, &qword_100649B60);
    v31 = (uint64_t)v54;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v30, v79, 1, 0, 1, 1, 0, 0);
    sub_1000AD9D0((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    goto LABEL_8;
  }
  v32 = v19;
  LODWORD(v48) = v21;
  v33 = v49;
  v34 = v55;
  if (v23 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    v35 = REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
    v36 = REMRemindersListDataView.SectionsModel.sections.getter(v35);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v46);
    v37 = *(_QWORD *)(v36 + 16);
    swift_bridgeObjectRelease(v36);
    sub_1000AD9D0((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    *v34 = objc_msgSend(v18, "objectID");
    swift_storeEnumTagMultiPayload(v34, v33, 8);
    v61 = 0;
    v62 = 0xE000000000000000;
    v63 = 0u;
    v64 = 0u;
    v65 = 0u;
    v66 = 192;
    v67 = 3;
    v68 = v59;
    v69 = v60;
    v70 = v32;
    v71 = v20;
    v72 = v51;
    v73 = v52;
    v74 = v50;
    v75 = v53;
    v76 = v48;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v61);
    sub_10000F614((uint64_t)&v61, (uint64_t)v79, &qword_100649B60);
    v31 = (uint64_t)v54;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v34, v79, v37 > 1, 0, v37 > 1, v37 > 1, 0, 0);
LABEL_8:
    v38 = v56;
    v39 = sub_10002B1E8(v31, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v40 = REMRemindersListDataView.SectionLite.reminders.getter(v39);
    sub_1000AD9D0((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v41 = v38;
    v42 = v57;
    sub_10001F580(v41, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(_QWORD *)(v42 + *(int *)(result + 20)) = v40;
    *(_BYTE *)(v42 + *(int *)(result + 24)) = 0;
    return result;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
  return result;
}

double sub_100440500@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double result;
  id v7;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v2
    && (v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation)) != 0)
  {
    *(_QWORD *)(a1 + 24) = &type metadata for DragAndDropREMTemplateTarget;
    *(_QWORD *)(a1 + 32) = &off_100607CD8;
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v3;
    v7 = v3;
    v4 = v2;
    v5 = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_100440574()
{
  sub_100440878();
}

uint64_t sub_100440580(uint64_t a1, void *a2)
{
  return sub_1004407C8(a2);
}

uint64_t sub_100440588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance);
  if (!v3)
    return 0;
  swift_retain();
  v5 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  v6 = sub_1001BB050(v5, a2);
  swift_release_n(v3, 2);
  return v6;
}

void *sub_100440614()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = v1;
  v4 = v2;
  return v1;
}

void *sub_100440648(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v4 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v5 = a1;
  v6 = v4;
  v7 = v3;
  return a1;
}

BOOL sub_10044068C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  type metadata accessor for TTRListEditor(0);
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)(a1, v3) & 0xFE) == 4;
}

BOOL sub_1004406D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;

  v5 = *(void **)(v2 + 8);
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v6 = objc_msgSend(a2, "list");
  v7 = objc_msgSend(v6, "objectID");

  v8 = objc_msgSend(v5, "objectID");
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) == 0)
    return 0;
  type metadata accessor for TTRListEditor(0);
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)(a1, v5) & 0xFE) == 4;
}

uint64_t sub_1004407C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100440040(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1004407C8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance);
  if (!v2)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(Strong, v5);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain(v2);
    v10 = v9(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v6 = TTRSection.init(with:store:)(a1, v10);
    swift_release(v2);
  }
  return v6;
}

void sub_100440878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_100440938 + 4 * byte_1005367BC[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100440938()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_1004409E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100440A0C()
{
  uint64_t v0;

  TTRTemplateEditor.edit(showingLargeAttachments:)(*(_BYTE *)(v0 + 16));
}

uint64_t assignWithCopy for DragAndDropREMTemplateTarget(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for DragAndDropREMTemplateTarget()
{
  return &type metadata for DragAndDropREMTemplateTarget;
}

uint64_t type metadata accessor for TTRStoreReviewController()
{
  return objc_opt_self(_TtC9Reminders24TTRStoreReviewController);
}

_QWORD *sub_100440ABC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for REMHashtagLabelSpecifier(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v7 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[8];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v15[16] = v16[16];
  }
  return v7;
}

uint64_t sub_100440B94(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_100440BDC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[8];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  return a1;
}

_QWORD *sub_100440C8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v12 = a3[8];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = v14[16];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v15;
  return a1;
}

_QWORD *sub_100440D3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  return a1;
}

_QWORD *sub_100440DD8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[8];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  return a1;
}

uint64_t sub_100440E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100440E88);
}

uint64_t sub_100440E88(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100440F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100440F10);
}

char *sub_100440F10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for REMHashtagLabelSpecifier(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10065E068;
  if (!qword_10065E068)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRISmartListFilterEditorHashtagsViewModel);
  return result;
}

uint64_t sub_100440FC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for REMHashtagLabelSpecifier(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100536910;
    v4[3] = &unk_100536928;
    v4[4] = &unk_100536940;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100441054(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  objc_class *v4;
  uint64_t v8;
  id v9;

  v8 = a3 & 1;
  v9 = objc_allocWithZone(v4);
  return TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)(a1, a2, v8, a4);
}

id sub_1004410FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNameTextView()
{
  return objc_opt_self(_TtC9Reminders44TTRIRemindersListEditableSectionNameTextView);
}

uint64_t type metadata accessor for TTRIRemindersBoardRootViewDragInteractionHandler()
{
  return objc_opt_self(_TtC9Reminders48TTRIRemindersBoardRootViewDragInteractionHandler);
}

_QWORD *sub_1004412F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  unint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  __int128 v75;
  __int128 v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  char v80[16];
  unint64_t v81;

  v5 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v5);
  v62 = (uint64_t)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v65 = (uint64_t)v57 - v8;
  v9 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v61 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v64 = (uint64_t)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v68 = (uint64_t)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = _swiftEmptyArrayStorage;
  v81 = (unint64_t)_swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v60 = (int *)v9;
  v57[1] = v2;
  v71 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v19 = *(_QWORD *)(v71 - 8);
  v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v73 = a2 + 16;
  v59 = a2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID;
  v72 = *(_QWORD *)(v19 + 72);
  v57[0] = a1;
  swift_bridgeObjectRetain(a1);
  v58 = 0x800000010055F610;
  v67 = v14;
  v66 = v15;
  while (1)
  {
    result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v73);
    if (!result)
      goto LABEL_6;
    v21 = result;
    v22 = *(char **)((char *)result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
    if (!v22)
      goto LABEL_30;
    v23 = *(int *)(v71 + 24);
    v24 = (uint64_t)&v22[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v22[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v80, 0, 0);
    v25 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
      break;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_4:
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
LABEL_5:
    swift_unknownObjectRelease(v21);
LABEL_6:
    v20 += v72;
    if (!--v18)
    {
      swift_bridgeObjectRelease(v57[0]);
      return (_QWORD *)v81;
    }
  }
  v70 = v18;
  v26 = v20 + v23;
  sub_100010634(v24, (uint64_t)v77);
  v27 = v78;
  v28 = v79;
  sub_10001413C(v77, v78);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40);
  v30 = v22;
  v69 = v26;
  v31 = v26;
  v18 = v70;
  v32 = v27;
  v14 = v67;
  v33 = v28;
  v15 = v66;
  v29(v31, v32, v33);
  sub_100027F10(v77);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_4;
  v34 = v68;
  sub_10001F580((uint64_t)v13, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v35 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)((char *)v21 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v36);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 + 8) + 472))(v34, ObjectType);
  v39 = v38;
  if (!((unint64_t)v38 >> 62))
  {
    result = *(_QWORD **)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_13;
    goto LABEL_25;
  }
  if (v38 >= 0)
    v38 &= 0xFFFFFFFFFFFFFF8uLL;
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v38);
  if (!result)
  {
LABEL_25:
    swift_bridgeObjectRelease(v39);
    sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_5;
  }
LABEL_13:
  if ((v39 & 0xC000000000000001) != 0)
  {
    v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
    goto LABEL_16;
  }
  if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v40 = *(id *)(v39 + 32);
LABEL_16:
    v63 = v40;
    swift_bridgeObjectRelease(v39);
    sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_unknownObjectRelease(v21);
    v41 = type metadata accessor for UUID(0);
    v42 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v64, v59, v41);
    v43 = v60;
    sub_10002B1E8(v20, v42 + v60[5], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v44 = v20 + *(int *)(v71 + 20);
    v45 = v42 + v43[6];
    v46 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v45, v44, v46);
    sub_10002B1E8(v69, v42 + v43[7], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_BYTE *)(v42 + v43[8]) = 0;
    v47 = v65;
    sub_10002B1E8(v42, v65, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    v48 = v61;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v61 + 56))(v47, 0, 1, v43);
    v49 = v47;
    v50 = v62;
    sub_100441A40(v49, v62);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v48 + 48))(v50, 1, v43) == 1)
    {
      sub_1000073A0(v50, (uint64_t *)&unk_100654F20);
      v75 = 0u;
      v76 = 0u;
    }
    else
    {
      *((_QWORD *)&v76 + 1) = v43;
      v51 = sub_100028D70(&v75);
      sub_10001F580(v50, (uint64_t)v51, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    }
    v74[0] = 0xD000000000000022;
    v74[1] = v58;
    AnyHashable.init<A>(_:)(v77, v74, &type metadata for String, &protocol witness table for String);
    v52 = v63;
    UIDragItem.setLocalObject(_:forKey:)(&v75, v77);
    sub_100041DDC((uint64_t)v77);
    sub_1000073A0((uint64_t)&v75, &qword_100640E50);
    sub_1000073A0(v65, (uint64_t *)&unk_100654F20);
    v53 = sub_10001F544(v64, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
    v55 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v54 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v55 >= v54 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
    v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v52);
    specialized Array._endMutation()(v56);
    goto LABEL_6;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

_QWORD *sub_100441964(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders48TTRIRemindersBoardRootViewDragInteractionHandler_delegate);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v4 = Strong;
  if (*(_BYTE *)(Strong
                + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) != 1
    || (*(_BYTE *)(Strong
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) = 0,
        (v5 = swift_unknownObjectWeakLoadStrong(Strong + 16)) == 0))
  {
    swift_unknownObjectRelease(v4);
    return _swiftEmptyArrayStorage;
  }
  v6 = v5;
  sub_10036E870();
  v8 = v7;
  swift_unknownObjectRelease(v6);
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRetain(a1);
  v9 = sub_1004412F8(v8, v4);
  swift_bridgeObjectRelease(v8);
  swift_unknownObjectRelease_n(v4, 2);
  swift_unknownObjectRelease(a1);
  return v9;
}

uint64_t sub_100441A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100654F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100441A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065E110);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065E110);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100441B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  _BYTE v18[80];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  _BYTE v30[48];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int16 v34;
  _BYTE v35[80];
  uint64_t v36;

  if (qword_10063D898 != -1)
    swift_once(&qword_10063D898, sub_1004FEB88);
  v0 = qword_100673A50;
  v36 = qword_100673A50;
  v1 = sub_10002A750(&qword_1006487F0);
  inited = swift_initStackObject(v1, v35);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  LOBYTE(v31) = 0;
  v3 = sub_100445A84();
  swift_bridgeObjectRetain(v0);
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v31, &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem, v3);
  *(_BYTE *)(inited + 72) = 1;
  LOBYTE(v31) = 0;
  v34 = 256;
  v4 = sub_100254D48();
  v5 = Array<A>.index<A>(forInsertingAt:where:)(&v31, sub_1004FEB84, 0, v0, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v7 = v6;
  sub_10000735C((uint64_t)&v31, (uint64_t)v30, &qword_100651C40);
  if ((v7 & 1) != 0)
  {
    sub_10000735C((uint64_t)v30, (uint64_t)&v19, &qword_100651C40);
    if (v25)
    {
      if (v25 == 1)
      {
        sub_100254DD4((uint64_t)&v19, (uint64_t)&v26);
LABEL_13:
        sub_1000073A0((uint64_t)&v26, &qword_100651C48);
        v5 = *(_QWORD *)(v0 + 16);
        goto LABEL_14;
      }
      if (v24 || v22 | v23 | v19 | v21 | v20)
      {
        v28 = 0;
        v26 = 0u;
        v27 = 0u;
        v29 = -1;
        goto LABEL_13;
      }
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v29 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v19, (uint64_t)&v26);
    }
    sub_1000073A0((uint64_t)&v26, &qword_100651C48);
    v5 = 0;
  }
LABEL_14:
  sub_1000073A0((uint64_t)v30, &qword_100651C40);
  sub_10043AE54(v5, v5, inited);
  swift_bridgeObjectRelease(inited);
  sub_1000073A0((uint64_t)&v31, &qword_100651C40);
  LOBYTE(v31) = 1;
  AnyHashable.init<A>(_:)(&v26, &v31, &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem, v3);
  v29 = 1;
  v31 = 1;
  v32 = 0u;
  v33 = 0u;
  v34 = 512;
  v8 = swift_initStackObject(v1, v18);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  sub_10017C4F0((uint64_t)&v26, v8 + 32);
  v9 = v36;
  v10 = Array<A>.index<A>(forInsertingAt:where:)(&v31, sub_1004FEB84, 0, v36, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v12 = v11;
  sub_10000735C((uint64_t)&v31, (uint64_t)v30, &qword_100651C40);
  if ((v12 & 1) != 0)
  {
    sub_10000735C((uint64_t)v30, (uint64_t)&v19, &qword_100651C40);
    if (v25)
    {
      if (v25 == 1)
      {
        sub_100254DD4((uint64_t)&v19, (uint64_t)&v14);
LABEL_24:
        sub_1000073A0((uint64_t)&v14, &qword_100651C48);
        v10 = *(_QWORD *)(v9 + 16);
        goto LABEL_25;
      }
      if (v24 || v22 | v23 | v19 | v21 | v20)
      {
        v16 = 0;
        v14 = 0u;
        v15 = 0u;
        v17 = -1;
        goto LABEL_24;
      }
      v16 = 0;
      v14 = 0u;
      v15 = 0u;
      v17 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v19, (uint64_t)&v14);
    }
    sub_1000073A0((uint64_t)&v14, &qword_100651C48);
    v10 = 0;
  }
LABEL_25:
  sub_1000073A0((uint64_t)v30, &qword_100651C40);
  sub_10043AE54(v10, v10, v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v8 + 32, *(_QWORD *)(v8 + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  sub_1000073A0((uint64_t)&v31, &qword_100651C40);
  sub_100254E10(&v26);
  return v36;
}

uint64_t sub_100441F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[15];
  char v31;
  _QWORD v32[4];

  v1 = v0;
  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v30[-v6];
  AnyHashable.base.getter(v32, v8);
  if (!swift_dynamicCast(&v31, v32, &type metadata for Any[8], &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem, 6))return 0;
  if ((v31 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 136), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 136))(ObjectType, v10);
    sub_10000735C((uint64_t)v7, (uint64_t)v4, &qword_100649CA0);
    v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v4, 1, v12) == 1)
    {
      sub_1000073A0((uint64_t)v4, &qword_100649CA0);
LABEL_8:
      sub_1000073A0((uint64_t)v7, &qword_100649CA0);
      return 0;
    }
    v21 = v4[*(int *)(v12 + 84)];
    sub_10025ABEC((uint64_t)v4);
    if (v21 != 1)
      goto LABEL_8;
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v22);

    v24 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v25 = static TTRLocalizableStrings.RemindersList.deleteListActionText.getter(v24);
    v27 = v26;
    v28 = swift_allocObject(&unk_100607FE0, 24, 7);
    swift_weakInit(v28 + 16, v1);
    swift_retain();
    v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v25, v27, 0, 0, v23, 0, 0, 0, 0, 2, 0, sub_100445A74, v28);
    sub_1000073A0((uint64_t)v7, &qword_100649CA0);
    swift_release();
  }
  else
  {
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v13);

    v15 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v16 = static TTRLocalizableStrings.AccountsList.showListInfoText.getter(v15);
    v18 = v17;
    v19 = swift_allocObject(&unk_100607FE0, 24, 7);
    swift_weakInit(v19 + 16, v1);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v16, v18, 0, 0, v14, 0, 0, 0, 0, 0, 0, sub_100445A7C, v19);
  }
  return v20;
}

double sub_100442258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  double result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  Swift::String_optional v23;
  _BYTE v24[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v6 = (_QWORD *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v4);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    if (v9)
    {
      v11 = (void *)v9;
      v12 = v6[9];
      v13 = v6[10];
      v14 = swift_getObjectType(v12, v10);
      v15 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v13 + 248);
      v16 = swift_unknownObjectRetain(v12);
      v17 = (void *)v15(v11, v14, v13, v16);
      swift_unknownObjectRelease(v12);
      v18 = v6[11];
      swift_unknownObjectRetain(v18);
      swift_retain();
      sub_100445484(v17, (uint64_t)v6, v18);
      swift_unknownObjectRelease(v18);
      v19 = swift_release();
      v20 = (uint64_t *)TTRITipKitSignalContext.RemindersList.MoreMenu.list.unsafeMutableAddressor(v19);
      v21 = *v20;
      v22 = (void *)v20[1];
      swift_bridgeObjectRetain(v22);
      v23.value._countAndFlagsBits = v21;
      v23.value._object = v22;
      TTRITipKitSignal.donate(signalContext:)(v23);
      swift_release();

      *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

double sub_100442398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_1004435B0();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1004423EC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  void *v7;
  void *v8;
  id v9;
  double result;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), a1);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "groceryContext");

    if (v9)
    {
      if (objc_msgSend(v9, "shouldCategorizeGroceryItems"))
      {
        *(_QWORD *)(a2 + 24) = type metadata accessor for TTRIShowRemindersInListPresenter(0);
        *(_QWORD *)(a2 + 32) = &off_100607E38;
        swift_retain();

        *(_QWORD *)a2 = v3;
        return result;
      }

    }
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_1004424AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  id v50;
  char v51[80];

  v45 = *v0;
  v1 = type metadata accessor for REMAnalyticsEvent(0);
  v47 = *(_QWORD *)(v1 - 8);
  v48 = v1;
  __chkstk_darwin(v1);
  v46 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D7F0 != -1)
    swift_once(&qword_10063D7F0, sub_100441A88);
  v7 = sub_100012DC4(v3, (uint64_t)qword_10065E110);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v8, v51);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497473696CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v49 = v0;
  v10 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v11);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
  v14 = (void *)v13(ObjectType, v10);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "objectID", v45);

  }
  else
  {
    v16 = 0;
  }
  v50 = v16;
  v17 = sub_10002A750(&qword_100642AC0);
  v18 = String.init<A>(describing:)(&v50, v17);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = v19;
  v20 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List presented to user {listID: %@}", 35, 2, v20);
  v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v21);
  v22 = (void *)v13(ObjectType, v10);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "groceryContext");
    v26 = v49;
    if (v24)
    {
      v27 = v24;
      v28 = objc_msgSend(v24, "shouldCategorizeGroceryItems");
      if ((_DWORD)v28)
      {
        v29 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v28);
        type metadata accessor for REMAnalyticsManager(0);
        v30 = v29;
        static REMAnalyticsManager.shared.getter();
        v31 = sub_10002A750(&qword_100649F98);
        v32 = v46;
        v33 = &v46[*(int *)(v31 + 48)];
        v34 = &v46[*(int *)(v31 + 80)];
        v35 = enum case for REMUserOperation.openGroceryList(_:);
        v36 = type metadata accessor for REMUserOperation(0);
        v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v32, v35, v36);
        *(_QWORD *)v33 = TTRUserDefaults.activitySessionId.getter(v37);
        *((_QWORD *)v33 + 1) = v38;
        TTRUserDefaults.activitySessionBeginTime.getter();
        *(_QWORD *)v34 = _typeName(_:qualified:)(v45, 0);
        *((_QWORD *)v34 + 1) = v39;
        v41 = v47;
        v40 = v48;
        (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v32, enum case for REMAnalyticsEvent.userOperation(_:), v48);
        REMAnalyticsManager.post(event:)(v32);

        v42 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v32, v40, v42);
      }
      else
      {

      }
    }
    v43 = v26[10];
    v44 = swift_getObjectType(v26[9], v25);
    (*(void (**)(void *, uint64_t, uint64_t))(v43 + 496))(v23, v44, v43);

  }
}

void sub_100442810(char a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  id v27;
  unint64_t v28;
  __n128 v29;
  void (*v30)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v31;
  id v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  double v55;
  unsigned int v56;
  BOOL v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  objc_class *v65;
  char *v66;
  char *v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  char *v72;
  char *v73;
  id v74;
  void *v75;
  void *Strong;
  void *v77;
  id v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t *v93;
  char *v94;
  uint64_t v95;
  id *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id aBlock;
  unint64_t v120[5];
  objc_super v121;
  id v122;
  uint64_t v123;
  char v124;

  v3 = (uint64_t)v2;
  v110 = *v2;
  v6 = type metadata accessor for REMAnalyticsEvent(0);
  v113 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v112 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for REMUserOperation(0);
  v116 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v111 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100656228);
  __chkstk_darwin(v9);
  v114 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v106 - v12;
  __chkstk_darwin(v14);
  v117 = (uint64_t)&v106 - v15;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v21);
  v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(ObjectType, v20);
  if (!v23)
    return;
  v118 = v23;
  if (!objc_msgSend(v23, "canBeShared"))
  {

    return;
  }
  v109 = v6;
  if (qword_10063D7F0 != -1)
    swift_once(&qword_10063D7F0, sub_100441A88);
  v24 = sub_100012DC4(v16, (uint64_t)qword_10065E110);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v24, v16);
  v25 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v25, &v124);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v27 = objc_msgSend(v118, "objectID");
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v27;
  v28 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List share list {objectID: %@}", 40, 2, v28);
  v29 = swift_bridgeObjectRelease(v28);
  (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v29);
  v30 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v116 + 56);
  v31 = v115;
  v30(v117, 1, 1, v115);
  v32 = objc_msgSend(v118, "account");
  v33 = REMAccount.listSharingUIType.getter();

  if (v33)
  {
    if (v33 == 1)
    {
      sub_100445240(v118, v3, *(_QWORD *)(v3 + 88));
      v34 = objc_msgSend(v118, "isShared");
      v35 = v117;
      sub_1000073A0(v117, &qword_100656228);
      v36 = enum case for REMSharedListUserOperationDetail.calDAVShare(_:);
      v37 = type metadata accessor for REMSharedListUserOperationDetail(0);
      v38 = *(_QWORD *)(v37 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 104))(v13, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v13, 0, 1, v37);
      v39 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
      v40 = v116;
      if (!v34)
        v39 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
      (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v13, *v39, v31);
      v30(v13, 0, 1, v31);
      sub_1004459DC((uint64_t)v13, v35);
      goto LABEL_32;
    }
    v45 = v118;
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.fault.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc(32, -1);
      v49 = (_QWORD *)swift_slowAlloc(8, -1);
      v107 = v49;
      v108 = swift_slowAlloc(64, -1);
      v123 = v108;
      *(_DWORD *)v48 = 138412802;
      v50 = objc_msgSend(v45, "objectID");
      aBlock = (uint64_t)v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v120, v48 + 4, v48 + 12);
      *v49 = v50;
      *(_WORD *)(v48 + 12) = 2080;
      aBlock = 0;
      v120[0] = 0xE000000000000000;
      v51 = objc_msgSend(v45, "account");
      v52 = objc_msgSend(v51, "type");

      v122 = v52;
      type metadata accessor for REMAccountType(0);
      _print_unlocked<A, B>(_:_:)(&v122, (id *)&aBlock, v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v54 = v120[0];
      aBlock = sub_100027E40(aBlock, v120[0], &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v120, v48 + 14, v48 + 22);

      *(_QWORD *)&v55 = swift_bridgeObjectRelease(v54).n128_u64[0];
      *(_WORD *)(v48 + 22) = 2080;
      v31 = v115;
      aBlock = 0;
      v120[0] = 0xE000000000000000;
      v56 = objc_msgSend(v45, "canBeShared", v55);
      v57 = v56 == 0;
      if (v56)
        v58 = 1702195828;
      else
        v58 = 0x65736C6166;
      if (v57)
        v59 = 0xE500000000000000;
      else
        v59 = 0xE400000000000000;
      v60 = v59;
      String.append(_:)(*(Swift::String *)&v58);
      swift_bridgeObjectRelease(v59);
      v61 = v120[0];
      aBlock = sub_100027E40(aBlock, v120[0], &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v120, v48 + 24, v48 + 32);

      swift_bridgeObjectRelease(v61);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Trying to share a list that doesn't support sharing. Probably list.canBeShared is wrong. {listID: %@, accountType: %s, canBeShared: %s}", (uint8_t *)v48, 0x20u);
      v62 = sub_10002A750(&qword_100642D60);
      v63 = v107;
      swift_arrayDestroy(v107, 1, v62);
      swift_slowDealloc(v63, -1, -1);
      v64 = v108;
      swift_arrayDestroy(v108, 2, &type metadata for Any[8]);
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {

    }
    goto LABEL_27;
  }
  if ((a1 & 1) != 0)
  {
    sub_10009FA38(v118, a2);
    v35 = v117;
    sub_1000073A0(v117, &qword_100656228);
    v41 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    v42 = type metadata accessor for REMSharedListUserOperationDetail(0);
    v43 = *(_QWORD *)(v42 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104))(v35, v41, v42);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v35, 0, 1, v42);
    v44 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
LABEL_31:
    v40 = v116;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v116 + 104))(v35, *v44, v31);
    v30(v35, 0, 1, v31);
    goto LABEL_32;
  }
  v65 = (objc_class *)type metadata accessor for TTRIListSharingController();
  v66 = (char *)objc_allocWithZone(v65);
  v67 = &v66[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate];
  *((_QWORD *)v67 + 1) = 0;
  swift_unknownObjectWeakInit(v67, 0);
  v68 = v118;
  *(_QWORD *)&v66[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list] = v118;
  v121.receiver = v66;
  v121.super_class = v65;
  v69 = v68;
  v70 = objc_msgSendSuper2(&v121, "init");
  v71 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController) = v70;
  v72 = (char *)v70;

  v73 = &v72[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate];
  *((_QWORD *)v73 + 1) = &off_100607E50;
  swift_unknownObjectWeakAssign(v73, v3);
  v74 = sub_1004B1360();
  if (v74)
  {
    v75 = v74;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v3 + 88) + 16);
    if (Strong)
    {
      v77 = Strong;
      v78 = objc_msgSend(Strong, "presentedViewController");
      v35 = v117;
      if (v78)
      {
        v79 = v78;
        v80 = swift_allocObject(&unk_100607F40, 33, 7);
        *(_QWORD *)(v80 + 16) = v77;
        *(_QWORD *)(v80 + 24) = v75;
        *(_BYTE *)(v80 + 32) = 1;
        v120[3] = (unint64_t)sub_10017C1E8;
        v120[4] = v80;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v120[0] = 1107296256;
        v120[1] = (unint64_t)sub_100006378;
        v120[2] = (unint64_t)&unk_100607F58;
        v81 = _Block_copy(&aBlock);
        v82 = v77;
        v83 = v75;
        objc_msgSend(v79, "dismissViewControllerAnimated:completion:", 1, v81, swift_release().n128_f64[0]);

        _Block_release(v81);
      }
      else
      {
        objc_msgSend(v77, "presentViewController:animated:completion:", v75, 1, 0);

      }
    }
    else
    {

      v35 = v117;
    }
    sub_1000073A0(v35, &qword_100656228);
    v84 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    v85 = type metadata accessor for REMSharedListUserOperationDetail(0);
    v86 = *(_QWORD *)(v85 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 104))(v35, v84, v85);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v85);
    v44 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
    goto LABEL_31;
  }

LABEL_27:
  v40 = v116;
  v35 = v117;
LABEL_32:
  v87 = v114;
  sub_10000735C(v35, v114, &qword_100656228);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v87, 1, v31) == 1)
  {
    sub_1000073A0(v35, &qword_100656228);

    v88 = v87;
  }
  else
  {
    v89 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v111, v87, v31);
    type metadata accessor for REMAnalyticsManager(0);
    static REMAnalyticsManager.shared.getter();
    v90 = sub_10002A750(&qword_100649F98);
    v91 = v31;
    v92 = v112;
    v93 = (uint64_t *)&v112[*(int *)(v90 + 48)];
    v94 = &v112[*(int *)(v90 + 80)];
    v95 = (*(uint64_t (**)(char *, char *, uint64_t))(v40 + 16))(v112, v89, v91);
    v96 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v95);
    v97 = *v96;
    v98 = TTRUserDefaults.activitySessionId.getter(v97);
    v100 = v99;

    *v93 = v98;
    v93[1] = v100;
    v101 = *v96;
    TTRUserDefaults.activitySessionBeginTime.getter();

    *(_QWORD *)v94 = _typeName(_:qualified:)(v110, 0);
    *((_QWORD *)v94 + 1) = v102;
    v103 = v113;
    v104 = v109;
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v92, enum case for REMAnalyticsEvent.userOperation(_:), v109);
    REMAnalyticsManager.post(event:)(v92);

    v105 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v103 + 8))(v92, v104, v105);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v89, v115);
    v88 = v117;
  }
  sub_1000073A0(v88, &qword_100656228);
}

id sub_1004433D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), a2);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend(v5, "account");

  return v7;
}

uint64_t sub_10044343C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD v9[5];

  v1 = v0;
  result = swift_unknownObjectWeakLoadStrong(v0 + 152);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v1 + 160);
    ObjectType = swift_getObjectType(result, v3);
    v9[3] = type metadata accessor for TTRIShowRemindersInListPresenter(0);
    v9[4] = &off_1005F31C8;
    v9[0] = v1;
    v7 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded);
    v8 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v8(v9, v7, ObjectType, v5);
    swift_unknownObjectRelease(v4);
    result = sub_100027F10(v9);
  }
  *(_BYTE *)(v1
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = 0;
  return result;
}

uint64_t sub_1004434FC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v9;
  _UNKNOWN **v10;
  _BYTE v11[16];

  if ((a1 & 1) != 0)
  {
    v6 = (_BYTE *)sub_100445918();
    v5 = &type metadata for TTRTipGroceryRenameSection;
    v4 = (unint64_t)v6;
  }
  else
  {
    v10 = 0;
    swift_unknownObjectWeakInit(&v9, 0);
    v10 = &off_100607E28;
    swift_unknownObjectWeakAssign(&v9, v2);
    sub_10044595C((uint64_t)&v9, (uint64_t)v11);
    v4 = sub_100445998();
    v5 = &type metadata for TTRTipCategorizeYourGroceries;
    v6 = v11;
  }
  AnyTip.init<A>(_:)(v6, v5, v4);
  v7 = type metadata accessor for AnyTip(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 0, 1, v7);
}

void sub_1004435B0()
{
  uint64_t v0;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  unint64_t v15;
  __n128 v16;
  id v17;
  void **v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _QWORD *v26;
  id v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  NSString v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  NSString v64;
  void *v65;
  id v66;
  _QWORD *Strong;
  _QWORD *v68;
  uint64_t v69;
  __int128 v70;
  void **aBlock;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  char v77[80];

  isEscapingClosureAtFileLocation = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  if (!v9)
    return;
  v10 = (id)v9;
  if (qword_10063D7F0 != -1)
    swift_once(&qword_10063D7F0, sub_100441A88);
  v11 = sub_100012DC4(v2, (uint64_t)qword_10065E110);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v77);
  v70 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v14 = objc_msgSend(v10, "objectID");
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v14;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List delete list {objectID: %@}", 41, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  aBlock = 0;
  v17 = objc_msgSend(v10, "fetchRemindersWithError:", &aBlock);
  v18 = aBlock;
  if (!v17)
  {
    v35 = aBlock;
    v36 = _convertNSErrorToError(_:)(v18);

    swift_willThrow(v37);
    v24 = swift_errorRelease(v36);
LABEL_11:
    static TTRLocalizableStrings.RemindersList.deleteList.getter(v24, v25);
    v39 = v38;
    v40 = (void *)objc_opt_self(TTRUndoManager);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    v26 = (_QWORD *)swift_allocObject(&unk_100608008, 32, 7);
    v26[2] = isEscapingClosureAtFileLocation;
    v26[3] = v10;
    v30 = swift_allocObject(&unk_100608030, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_100445ACC;
    *(_QWORD *)(v30 + 24) = v26;
    v75 = sub_1000381EC;
    v76 = v30;
    aBlock = _NSConcreteStackBlock;
    v72 = 1107296256;
    v73 = sub_10001B258;
    v74 = &unk_100608048;
    v41 = _Block_copy(&aBlock);
    v10 = v10;
    swift_retain();
    swift_retain();
    objc_msgSend(v40, "withActionName:block:", v28, v41, swift_release().n128_f64[0]);

    _Block_release(v41);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 150, 206, 55, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
    goto LABEL_13;
  }
  v19 = v17;
  v20 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);
  v22 = v18;

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v69 = v21;
    else
      v69 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v23 = _CocoaArrayWrapper.endIndex.getter(v69);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v25 = swift_bridgeObjectRelease(v21);
  if (!v23)
    goto LABEL_11;
  v26 = v10;
  v27 = objc_msgSend(v26, "displayName");
  v28 = (NSString)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  if ((char *)objc_msgSend(v26, "sharingStatus") - 1 >= (char *)3)
  {
LABEL_13:
    v34 = 0xD000000000000036;
    v32 = 0x800000010056DA20;
    v33 = 0x800000010056DA40;
    v31 = 0x1000000000000015;
    goto LABEL_14;
  }
  v31 = 0x100000000000001CLL;
  v32 = 0x800000010056DA80;
  v33 = 0x800000010056DAA0;
  v34 = 0xD000000000000032;
LABEL_14:
  v42 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v31, *(Swift::String *)&v34);
  v43 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v44 = swift_allocObject(v43, 72, 7);
  *(_OWORD *)(v44 + 16) = v70;
  *(_QWORD *)(v44 + 56) = &type metadata for String;
  *(_QWORD *)(v44 + 64) = sub_1000770A4();
  *(_QWORD *)(v44 + 32) = v28;
  *(_QWORD *)(v44 + 40) = v30;
  String.init(format:_:)(v42._countAndFlagsBits, v42._object, v44);
  v46 = v45;
  swift_bridgeObjectRelease(v42._object);

  v47 = v26;
  sub_10022B660(v10, 0);
  v49 = v48;

  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  v52 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v50, v51, 1);

  static TTRLocalizableStrings.Common.alertCancelButton.getter(v53);
  v55 = v54;
  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  v57 = (void *)objc_opt_self(UIAlertAction);
  v58 = objc_msgSend(v57, "actionWithTitle:style:handler:", v56, 1, 0);

  static TTRLocalizableStrings.Common.deleteButton.getter();
  v60 = v59;
  v61 = swift_allocObject(&unk_100607FE0, 24, 7);
  swift_weakInit(v61 + 16, isEscapingClosureAtFileLocation);
  v62 = swift_allocObject(&unk_100608080, 32, 7);
  *(_QWORD *)(v62 + 16) = v61;
  *(_QWORD *)(v62 + 24) = v47;
  v63 = v47;
  swift_retain();
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v60);
  v75 = sub_100445B24;
  v76 = v62;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1000D4884;
  v74 = &unk_100608098;
  v65 = _Block_copy(&aBlock);
  v66 = objc_msgSend(v57, "actionWithTitle:style:handler:", v64, 2, v65, swift_release().n128_f64[0]);
  _Block_release(v65);
  swift_release();

  objc_msgSend(v52, "addAction:", v58);
  objc_msgSend(v52, "addAction:", v66);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(isEscapingClosureAtFileLocation + 88) + 16);
  if (Strong)
  {
    v68 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v52, 1, 0);

    v52 = v58;
    v58 = v66;
    v66 = v63;
    v63 = v68;
  }

}

void sub_100443D0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];
  _BYTE v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    static TTRLocalizableStrings.RemindersList.deleteList.getter();
    v8 = v7;
    v9 = (void *)objc_opt_self(TTRUndoManager);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v11 = swift_allocObject(&unk_1006080D0, 32, 7);
    *(_QWORD *)(v11 + 16) = v6;
    *(_QWORD *)(v11 + 24) = a3;
    v12 = swift_allocObject(&unk_1006080F8, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100445B30;
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100608110;
    v13 = _Block_copy(aBlock);
    swift_retain();
    v14 = a3;
    swift_retain();
    objc_msgSend(v9, "withActionName:block:", v10, v13, swift_release().n128_f64[0]);

    swift_release();
    _Block_release(v13);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v12, "", 150, 193, 59, 1);
    swift_release();
    swift_release();
    if ((v6 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_100443EB0(uint64_t a1, uint64_t a2)
{
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v4 = (void *)REMList.accountCapabilities.getter();
  v5 = objc_msgSend(v4, "supportsDeletionByTTL");

  *(_BYTE *)(a1
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = v5;
  v7 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  ObjectType = swift_getObjectType(v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 560))(a2, ObjectType, v6);
}

void sub_100443F24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource));

}

uint64_t sub_100443F50()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100443FA0()
{
  return type metadata accessor for TTRIShowRemindersInListPresenter(0);
}

uint64_t type metadata accessor for TTRIShowRemindersInListPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10065E168;
  if (!qword_10065E168)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowRemindersInListPresenter);
  return result;
}

uint64_t sub_100443FE4(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100536A28;
  v2[1] = &unk_100536A40;
  v2[2] = &unk_100536A58;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 2296);
}

uint64_t sub_100444038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 104);
  v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle, v30, 1, 0);
  v4 = *v3;
  *v3 = 0;
  swift_bridgeObjectRelease(v4);
  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID, v29, 1, 0);
  v6 = *v5;
  *v5 = 0;
  swift_bridgeObjectRelease(v6);
  v7 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection, v28, 1, 0);
  v8 = *v7;
  *v7 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(ObjectType, v9);
  if (v12)
  {
    v14 = v12;
    v15 = v13;
    v16 = swift_getObjectType(v12, v13);
    (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(&_swiftEmptySetSingleton, v16, v15);
    swift_unknownObjectRelease(v14);
  }
  v17 = *(_QWORD *)(v2 + 64);
  v18 = swift_getObjectType(*(_QWORD *)(v2 + 56), v13);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96))(v18, v17);
  if (v19)
  {
    v20 = v19;
    swift_beginAccess(v19 + 40, &v27, 1, 0);
    v21 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v20 + 40) = &_swiftEmptySetSingleton;
    swift_unknownObjectRelease(v20);
    swift_bridgeObjectRelease(v21);
  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v24 = result;
    v25 = *(_QWORD *)(v1 + 24);
    v26 = swift_getObjectType(result, v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 288))(v26, v25);
    return swift_unknownObjectRelease(v24);
  }
  return result;
}

uint64_t sub_1004441C8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  v5 = swift_retain(a1);
  a3(v5);
  return swift_release(a1);
}

uint64_t sub_1004441F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;

  result = swift_unknownObjectWeakLoadStrong(v4 + 152);
  if (result)
  {
    v9 = result;
    ObjectType = swift_getObjectType(result, v8);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersInListModuleDelegate))
      v11 = v9;
    else
      v11 = 0;
    if (v11)
    {
      sub_10001413C((_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 72));
      swift_retain();
      sub_10029E4B4(a3, a4);
      swift_release();
    }
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

id sub_1004442A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), a2);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend(v5, "groceryContext");
  if (v7)
  {
    v8 = v7;
    if (objc_msgSend(v7, "shouldCategorizeGroceryItems"))
      v9 = objc_msgSend((id)objc_opt_self(REMSystemUtilities), "isInternalInstall");
    else
      v9 = 0;

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

void sub_100444358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v6);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  if (v8)
  {
    v15 = v8;
    v9 = objc_msgSend(v8, "groceryContext");
    if (v9)
    {
      v14 = v9;
      v10 = objc_msgSend(v9, "shouldCategorizeGroceryItems");
      if ((v10 & 1) != 0)
      {
        static TaskPriority.userInitiated.getter(v10);
        v11 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
        v12 = (_QWORD *)swift_allocObject(&unk_100608148, 48, 7);
        v12[2] = 0;
        v12[3] = 0;
        v12[4] = v1;
        v12[5] = v15;
        swift_retain();
        v13 = v15;
        sub_100445000((uint64_t)v4, (uint64_t)&unk_10065EB08, (uint64_t)v12);

        swift_release();
        sub_1000073A0((uint64_t)v4, &qword_100649BA0);
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

uint64_t sub_1004444E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[12] = a4;
  v5[13] = a5;
  v6 = sub_10002A750(&qword_100649BA0);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[18] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v11);
  v5[20] = swift_task_alloc(v11);
  v12 = type metadata accessor for CharacterSet(0);
  v5[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[22] = v13;
  v5[23] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004445C4, 0, 0);
}

uint64_t sub_1004445C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[12];
  v4 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  v6 = *(int **)(v4 + 640);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[24] = v7;
  *v7 = v2;
  v7[1] = sub_100444644;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v9)(v2[13], ObjectType, v4);
}

uint64_t sub_100444644(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 192);
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100444D00;
  else
    v5 = sub_1004446B0;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004446B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v71)(uint64_t, uint64_t);
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  *(_QWORD *)(v0 + 40) = 0xD000000000000030;
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 48) = 0x8000000100579B10;
  ((void (*)(void))static CharacterSet.alphanumerics.getter)();
  sub_10001D7FC();
  v5 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v3, &type metadata for String);
  v7 = v6;
  v71 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v71(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  if (v7)
    v8 = v5;
  else
    v8 = 0;
  v9 = 0xE000000000000000;
  if (v7)
    v9 = v7;
  v72._countAndFlagsBits = v8;
  v72._object = (void *)v9;
  v10 = v1 + 64;
  v11 = -1;
  v12 = -1 << *(_BYTE *)(v1 + 32);
  if (-v12 < 64)
    v11 = ~(-1 << -(char)v12);
  v13 = v11 & *(_QWORD *)(v1 + 64);
  v14 = (unint64_t)(63 - v12) >> 6;
  swift_bridgeObjectRetain(v1);
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_10;
    }
    v28 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v28 >= v14)
      goto LABEL_30;
    v29 = *(_QWORD *)(v10 + 8 * v28);
    ++v15;
    if (!v29)
    {
      v15 = v28 + 1;
      if (v28 + 1 >= v14)
        goto LABEL_30;
      v29 = *(_QWORD *)(v10 + 8 * v15);
      if (!v29)
      {
        v15 = v28 + 2;
        if (v28 + 2 >= v14)
          goto LABEL_30;
        v29 = *(_QWORD *)(v10 + 8 * v15);
        if (!v29)
        {
          v15 = v28 + 3;
          if (v28 + 3 >= v14)
            goto LABEL_30;
          v29 = *(_QWORD *)(v10 + 8 * v15);
          if (!v29)
          {
            v15 = v28 + 4;
            if (v28 + 4 >= v14)
              goto LABEL_30;
            v29 = *(_QWORD *)(v10 + 8 * v15);
            if (!v29)
              break;
          }
        }
      }
    }
LABEL_29:
    v13 = (v29 - 1) & v29;
    v17 = __clz(__rbit64(v29)) + (v15 << 6);
LABEL_10:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v1 + 48) + v18);
    v20 = (void *)v19[1];
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v18);
    v23 = *v21;
    v22 = (void *)v21[1];
    v74 = *v19;
    v75 = (unint64_t)v20;
    swift_bridgeObjectRetain_n(v20, 2);
    swift_bridgeObjectRetain(v22);
    v24._countAndFlagsBits = 15917;
    v24._object = (void *)0xE200000000000000;
    String.append(_:)(v24);
    v25._countAndFlagsBits = v23;
    v25._object = v22;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 10;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    v27._countAndFlagsBits = v74;
    v27._object = v20;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v22);
  }
  v30 = v28 + 5;
  if (v30 < v14)
  {
    v29 = *(_QWORD *)(v10 + 8 * v30);
    if (!v29)
    {
      while (1)
      {
        v15 = v30 + 1;
        if (__OFADD__(v30, 1))
          break;
        if (v15 >= v14)
          goto LABEL_30;
        v29 = *(_QWORD *)(v10 + 8 * v15);
        ++v30;
        if (v29)
          goto LABEL_29;
      }
LABEL_44:
      __break(1u);
LABEL_45:
      swift_once(&qword_10063D7F0, sub_100441A88);
      goto LABEL_37;
    }
    v15 = v30;
    goto LABEL_29;
  }
LABEL_30:
  v31 = *(_QWORD *)(v0 + 200);
  v32 = *(_QWORD *)(v0 + 184);
  v33 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 136);
  v36 = *(_QWORD *)(v0 + 120);
  swift_release();
  v37 = swift_bridgeObjectRelease(v31);
  *(_QWORD *)(v0 + 56) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 64) = 0x8000000100579B50;
  static CharacterSet.alphanumerics.getter(v37);
  v38 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v32, &type metadata for String);
  v40 = v39;
  v71(v32, v33);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  if (v40)
    v41 = v38;
  else
    v41 = 0;
  if (!v40)
    v40 = (void *)0xE000000000000000;
  v74 = 0;
  v75 = 0xE000000000000000;
  _StringGuts.grow(_:)(179);
  v42._countAndFlagsBits = 0xD0000000000000A8;
  v42._object = (void *)0x8000000100579B70;
  String.append(_:)(v42);
  v43._countAndFlagsBits = v41;
  v43._object = v40;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v40);
  v44._countAndFlagsBits = 0x3D656C74695426;
  v44._object = (void *)0xE700000000000000;
  String.append(_:)(v44);
  String.append(_:)(v72);
  swift_bridgeObjectRelease(v72._object);
  v10 = 0;
  v15 = 0xE000000000000000;
  URL.init(string:)(0, 0xE000000000000000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v36, 1, v35) != 1)
  {
    v52 = *(_QWORD *)(v0 + 152);
    v51 = *(_QWORD *)(v0 + 160);
    v53 = *(_QWORD *)(v0 + 136);
    v73 = *(_QWORD *)(v0 + 144);
    v54 = *(_QWORD *)(v0 + 120);
    v55 = *(_QWORD *)(v0 + 128);
    v56 = *(_QWORD *)(v0 + 112);
    v57 = swift_bridgeObjectRelease(0xE000000000000000);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v53 + 32);
    v58(v51, v54, v55, v57);
    v59 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v56, 1, 1, v59);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v51, v55);
    v60 = type metadata accessor for MainActor(0);
    v61 = static MainActor.shared.getter(v60);
    v62 = *(unsigned __int8 *)(v53 + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = swift_allocObject(&unk_100608198, v63 + v73, v62 | 7);
    *(_QWORD *)(v64 + 16) = v61;
    *(_QWORD *)(v64 + 24) = &protocol witness table for MainActor;
    ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v64 + v63, v52, v55);
    sub_1001484F4(v56, (uint64_t)&unk_10065EB18, v64);
    v65 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v53 + 8))(v51, v55, v65);
    goto LABEL_42;
  }
  sub_1000073A0(*(_QWORD *)(v0 + 120), (uint64_t *)&unk_100640EE0);
  if (qword_10063D7F0 != -1)
    goto LABEL_45;
LABEL_37:
  v45 = type metadata accessor for Logger(0);
  sub_100012DC4(v45, (uint64_t)qword_10065E110);
  swift_bridgeObjectRetain(v15);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.error.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = swift_slowAlloc(32, -1);
    v74 = v50;
    *(_DWORD *)v49 = 136315138;
    swift_bridgeObjectRetain(v15);
    *(_QWORD *)(v0 + 88) = sub_100027E40(v10, v15, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v49 + 4, v49 + 12);
    swift_bridgeObjectRelease_n(v15, 3);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to file radar with grocery local corrections due to invalid radar URL {radarURL: %s}", v49, 0xCu);
    swift_arrayDestroy(v50, 1, &type metadata for Any[8]);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }

LABEL_42:
  v66 = *(_QWORD *)(v0 + 152);
  v67 = *(_QWORD *)(v0 + 160);
  v69 = *(_QWORD *)(v0 + 112);
  v68 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v67);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100444D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (qword_10063D7F0 != -1)
    swift_once(&qword_10063D7F0, sub_100441A88);
  v1 = *(_QWORD *)(v0 + 208);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10065E110);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 208);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 72, v0 + 16);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 80) = sub_100027E40(v10, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to file radar with grocery local corrections due to error upon fetching grocery local corrections {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 208));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100444F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  return swift_task_switch(sub_100444F8C, v7, v8);
}

uint64_t sub_100444F8C()
{
  uint64_t v0;
  id v1;

  swift_release(*(_QWORD *)(v0 + 32));
  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    LSApplicationWorkspace.open(universalLink:)(*(_QWORD *)(v0 + 24));

  }
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100445000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[4];

  v6 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v8, &qword_100649BA0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, &qword_100649BA0);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13, v11);
      v16 = swift_unknownObjectRetain(v13);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14, v16);
      v19 = v18;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v20 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v17 = 0;
  v19 = 0;
LABEL_6:
  v21 = swift_allocObject(&unk_100608170, 32, 7);
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  if (v19 | v17)
  {
    v24[0] = 0;
    v24[1] = 0;
    v22 = v24;
    v24[2] = v17;
    v24[3] = v19;
  }
  else
  {
    v22 = 0;
  }
  return swift_task_create(v12, v22, (char *)&type metadata for () + 8, &unk_100649BC0, v21);
}

void sub_100445198(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), a2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  if (v5)
  {
    v7 = v2[10];
    v12 = (id)v5;
    v8 = swift_getObjectType(v2[9], v6);
    (*(void (**)(id, uint64_t, uint64_t))(v7 + 648))(v12, v8, v7);
    v9 = v2[18];
    v11 = swift_getObjectType(v2[17], v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 696))(v11, v9);

  }
}

void sub_100445240(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24[7];

  v6 = objc_msgSend(a1, "store");
  v7 = objc_msgSend(a1, "objectID");
  v24[0] = 0;
  v8 = objc_msgSend(v6, "fetchListWithObjectID:error:", v7, v24);

  v9 = v24[0];
  if (v8)
  {
    v10 = v24[0];
    v11 = sub_10034433C(v8, a2, objc_msgSend(v8, "isOwnedByMe") ^ 1u);
    swift_unknownObjectRelease(v12);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
    if (Strong)
    {
      v14 = Strong;
      v15 = objc_msgSend(Strong, "presentedViewController");
      if (v15)
      {
        v16 = v15;
        v17 = swift_allocObject(&unk_100607F90, 33, 7);
        *(_QWORD *)(v17 + 16) = v14;
        *(_QWORD *)(v17 + 24) = v11;
        *(_BYTE *)(v17 + 32) = 1;
        v24[4] = sub_10019C898;
        v24[5] = (id)v17;
        v24[0] = _NSConcreteStackBlock;
        v24[1] = (id)1107296256;
        v24[2] = sub_100006378;
        v24[3] = &unk_100607FA8;
        v18 = _Block_copy(v24);
        v19 = v14;
        v20 = v11;
        objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, v18, swift_release().n128_f64[0]);

        _Block_release(v18);
      }
      else
      {
        objc_msgSend(v14, "presentViewController:animated:completion:", v11, 1, 0);

      }
    }
    else
    {

    }
  }
  else
  {
    v21 = v24[0];
    v22 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v23);
    swift_errorRelease(v22);
  }
}

void sub_100445484(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *Strong;
  void *v13;
  id v14;

  v6 = objc_msgSend(a1, "saveRequest");
  v7 = objc_msgSend(v6, "store");

  v8 = sub_1003492B4(v7, a1, 1, a2, (uint64_t)&off_100607E78);
  v10 = v9;

  v11 = v8;
  swift_retain();
  v14 = sub_100342EF0(v11, v10, 0, 0, 0);

  swift_release_n(v10, 2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
}

void sub_10044558C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v5 = v4;
  static TTRLocalizableStrings.UndoAction.changeList.getter();
  v11 = v10;
  v12 = (void *)objc_opt_self(TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = swift_allocObject(&unk_100607EC8, 56, 7);
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = a3;
  *(_BYTE *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a1;
  *(_QWORD *)(v14 + 48) = a2;
  v15 = swift_allocObject(&unk_100607EF0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100134348;
  *(_QWORD *)(v15 + 24) = v14;
  v18[4] = sub_10001B278;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10001B258;
  v18[3] = &unk_100607F08;
  v16 = _Block_copy(v18);
  swift_retain();
  v17 = a3;
  swift_unknownObjectRetain(a1);
  swift_retain();
  objc_msgSend(v12, "withActionName:block:", v13, v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 150, 247, 51, 1);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

uint64_t sub_100445728()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10044575C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10044576C()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  NSString v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  void *Strong;
  void *v14;
  void *v15;
  id v16;

  v1._countAndFlagsBits = 0x1000000000000034;
  v2._object = (void *)0x8000000100574CE0;
  v1._object = (void *)0x8000000100579A70;
  v2._countAndFlagsBits = 0x1000000000000015;
  object = TTRLocalizedString(_:comment:)(v2, v1)._object;
  v4._object = (void *)0x8000000100574D00;
  v4._countAndFlagsBits = 0xD000000000000037;
  v5._countAndFlagsBits = 0xD000000000000037;
  v5._object = (void *)0x8000000100574D00;
  v6 = TTRLocalizedString(_:comment:)(v4, v5)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v7, v8, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v11, 0, 0);

  objc_msgSend(v16, "addAction:", v12);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 88) + 16);
  if (Strong)
  {
    v14 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v16, 1, 0);

    v15 = v14;
  }
  else
  {
    v15 = v16;
  }

}

unint64_t sub_100445918()
{
  unint64_t result;

  result = qword_10065EAE8;
  if (!qword_10065EAE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRTipGroceryRenameSection, &type metadata for TTRTipGroceryRenameSection);
    atomic_store(result, (unint64_t *)&qword_10065EAE8);
  }
  return result;
}

uint64_t sub_10044595C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRTipCategorizeYourGroceries - 1) + 32))(a2, a1);
  return a2;
}

unint64_t sub_100445998()
{
  unint64_t result;

  result = qword_10065EAF0;
  if (!qword_10065EAF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRTipCategorizeYourGroceries, &type metadata for TTRTipCategorizeYourGroceries);
    atomic_store(result, (unint64_t *)&qword_10065EAF0);
  }
  return result;
}

uint64_t sub_1004459DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100656228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100445A24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100445A50()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100445A74(uint64_t a1)
{
  uint64_t v1;

  return sub_100442398(a1, v1);
}

double sub_100445A7C(uint64_t a1)
{
  uint64_t v1;

  return sub_100442258(a1, v1);
}

unint64_t sub_100445A84()
{
  unint64_t result;

  result = qword_10065EAF8;
  if (!qword_10065EAF8)
  {
    result = swift_getWitnessTable(&unk_100536B10, &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem);
    atomic_store(result, &qword_10065EAF8);
  }
  return result;
}

uint64_t sub_100445ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 560))(v4, ObjectType, v5);
}

uint64_t sub_100445B10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100445B24(uint64_t a1)
{
  uint64_t v1;

  sub_100443D0C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100445B30()
{
  uint64_t v0;

  return sub_100443EB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100445B38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100445B48()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100445B7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10065EB04);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10004A08C;
  return sub_1004444E0(a1, v4, v5, v7, v6);
}

uint64_t sub_100445BF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100445C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100445C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10065EB14);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_100444F20(a1, v5, v6, v7);
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersInListPresenter.ActionMenuCustomItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100445D5C + 4 * byte_1005369E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100445D90 + 4 * asc_1005369E0[v4]))();
}

uint64_t sub_100445D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100445D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100445DA0);
  return result;
}

uint64_t sub_100445DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100445DB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100445DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100445DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersInListPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem;
}

unint64_t sub_100445DE0()
{
  unint64_t result;

  result = qword_10065EB20;
  if (!qword_10065EB20)
  {
    result = swift_getWitnessTable(&unk_100536AE8, &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_10065EB20);
  }
  return result;
}

uint64_t sub_100445E48()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance));
}

uint64_t sub_100445E84()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue);
}

void sub_100445E94(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  id v5;
  id v6;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
    if (v2)
    {
      v5 = v2;
      v3 = objc_msgSend(v5, "customContext");

      if (v3)
      {
        type metadata accessor for TTRSmartListEditor(0);
        v6 = v5;
        v4 = __chkstk_darwin(v5);
        static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)(&v6, 0, sub_100449698, v4);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_100445F8C()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders);
  if (v1 != 2)
    return v1 & 1 | 0x40u;
  result = 64;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount) <= 0)
      return 64;
    else
      return 65;
  }
  return result;
}

uint64_t sub_100445FD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v3 && (v4 = objc_msgSend(v3, "customContext")) != 0)
  {
    v5 = v4;
    v6 = (char *)a1 + *(int *)(sub_10002A750(&qword_1006436F8) + 48);
    v7 = objc_msgSend(v5, "account");
    v8 = objc_msgSend(v7, "objectID");

    *a1 = v8;
    v9 = REMSmartListCustomContext.filter.getter();
    if (v9)
    {
      v10 = (void *)v9;
      REMCustomSmartListFilterDescriptor.lists.getter(v9);

    }
    else
    {

      v15 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    v16 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
    swift_storeEnumTagMultiPayload(a1, v16, 1);
    v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v13 = a1;
    v14 = 0;
    v11 = v16;
  }
  else
  {
    v11 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
    v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a1;
    v14 = 1;
  }
  return v12(v13, v14, 1, v11);
}

void *sub_100446120()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  v2 = v1;
  return v1;
}

uint64_t sub_100446158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  void *v11;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1004461F4();
    v7 = v6;
    v9 = v8;
    result = swift_allocObject(&unk_1006083E8, 24, 7);
    *(_QWORD *)(result + 16) = v4;
    v11 = sub_10040D1AC;
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v9 = 0;
    result = 0;
    v11 = sub_10047904C;
  }
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

id sub_1004461F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v14;
  id v15;
  _BYTE v16[16];

  v1 = sub_10002A750(&qword_100642078);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = objc_msgSend(v9, "customContext");
  if (v10)
  {
    v11 = (void *)REMSmartListCustomContext.filter.getter();

    if (v11)
    {
      REMCustomSmartListFilterDescriptor.lists.getter(v12);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
        v14 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
        v15 = objc_msgSend(v14, "preferredDefaultListID");

        v10 = (id)REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)(v9, v15);
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);

        return v10;
      }

      sub_1000073A0((uint64_t)v3, &qword_100642078);
    }
    else
    {

    }
    return 0;
  }

  return v10;
}

uint64_t sub_100446418(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    sub_10021F89C(a1);
    v4 = v3;
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

double sub_1004464C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004465D0();
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  LODWORD(v4) = swift_getEnumCaseMultiPayload(v6, v4);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((_DWORD)v4 == 2)
  {
    v8 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(_QWORD *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = &off_1005F2998;
    v9 = sub_100028D70((_QWORD *)a2);
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)((char *)v9 + *(int *)(v8 + 20)) = v7;
    *((_BYTE *)v9 + *(int *)(v8 + 24)) = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1004465D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = (void *)REMSmartListTypeCustom;
    v4 = type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability();
    v2 = swift_allocObject(v4, 41, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_BYTE *)(v2 + 40) = 1;
    *(_QWORD *)(v2 + 24) = &off_1006082F0;
    *(_QWORD *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign(v5, v0);
    *(_QWORD *)(v0 + v1) = v2;
    v6 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100446684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t Predicate;
  _QWORD v27[3];
  _QWORD v28[5];

  v2 = v1;
  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  if (v11)
  {
    v13 = v11;
    v14 = v12;
    v15 = swift_getObjectType(v11, v12);
    LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 56))(a1, v15, v14);
    swift_unknownObjectRelease(v13);
    if ((v14 & 1) == 0)
      goto LABEL_7;
  }
  v16 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (!v16)
    goto LABEL_7;
  v17 = (uint64_t)objc_msgSend(v16, "customContext");
  if (v17)
  {
    v18 = (void *)REMSmartListCustomContext.filter.getter();

    if (v18)
    {
      v19 = sub_10002A750(&qword_100643708);
      v17 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v17 + 16) = xmmword_100520250;
      v20 = sub_100010634(a1, v17 + 32);
      v21 = static Set<>.typesSupportedByCustomSmartList.getter(v20);
      v28[3] = &type metadata for TTRReminderIDsWithMatchingHashtagsProvider;
      v28[4] = sub_1000AE5B4();
      v28[0] = v17;
      v22 = REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)(v21, v28);
      swift_bridgeObjectRelease(v21);
      sub_100027F10(v28);
      v27[2] = v22;
      sub_100010634(a1, (uint64_t)v28);
      v27[1] = v22;
      v23 = sub_10002A750(&qword_100643718);
      v24 = sub_1000AE5F8();
      Predicate = Sequence<>.postFetchPredicateTypes.getter(v23, v24);
      REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(reminder:forEvaluatingAgainst:)(v28, Predicate);
      LOBYTE(v17) = Sequence<>.evaluate(with:)(v7, v23, v24);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease(v22);
      return v17 & 1;
    }
LABEL_7:
    LOBYTE(v17) = 0;
  }
  return v17 & 1;
}

double sub_100446894@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_1004465D0();
  sub_100125824(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1004468DC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double result;

  sub_1004465D0();
  sub_100125984(a1, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10044691C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  char v48[40];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v19)
  {
    v44 = a2;
    v45 = v19;
    v20 = objc_msgSend(v45, "customContext");
    if (v20 && (v21 = v20, v43 = v14, v22 = (void *)REMSmartListCustomContext.filter.getter(), v21, v22))
    {
      Date.init()(v23);
      TTRReminderEditor.edit(toMatch:now:)(v22, v18);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      swift_retain();
      swift_retain();
      TTRMutableTreeStorage.parent(of:)(a1);
      swift_release();
      swift_release();
      v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v11, 1, v24) == 1)
      {

        sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v11, v24) == 1)
        {
          v25 = (uint64_t)v43;
          sub_10001F580((uint64_t)v11, (uint64_t)v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10002B1E8(v25, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
          {
            v26 = *v8;
            v27 = sub_10002A750((uint64_t *)&unk_1006415A0);
            inited = swift_initStackObject(v27, v48);
            *(_OWORD *)(inited + 16) = xmmword_100521140;
            v29 = v44;
            v30 = *(void **)(v44 + 16);
            v31 = objc_msgSend(v30, "objectID");
            *(_QWORD *)(inited + 32) = v31;
            v47 = inited;
            specialized Array._endMutation()(v31);
            v32 = v47;
            v33 = sub_100017684(v47);
            swift_bridgeObjectRelease(v32);
            v34 = type metadata accessor for TTRSmartListEditor(0);
            v46 = v45;
            v35 = v45;
            v36 = objc_msgSend(v30, "saveRequest");
            v47 = v29;
            v37 = type metadata accessor for TTRReminderEditor(0);
            v38 = sub_1000AE644();
            v39 = TTRUndoableEditing.undoManager.getter(v37, v38);
            TTROneshotEditing.init(item:saveRequest:undoManager:)(&v47, &v46, v36, v39, v34, &protocol witness table for TTRSmartListEditor);
            v40 = v26;
            TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v33, v26, 0);

            swift_bridgeObjectRelease(v33);
            swift_release();

            v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
            v42 = v25;
          }
          else
          {
            sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

            v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
            v42 = (uint64_t)v8;
          }
        }
        else
        {

          v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
          v42 = (uint64_t)v11;
        }
        sub_10001F544(v42, v41);
      }
    }
    else
    {

    }
  }
}

void sub_100446D40(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v8)
  {
    v9 = objc_msgSend(v8, "customContext", v5);
    if (v9)
    {
      v10 = v9;
      v11 = (void *)REMSmartListCustomContext.filter.getter();

      if (v11)
      {
        v12 = type metadata accessor for TTRReminderEditor(0);
        v13 = sub_1000AE644();
        v14 = TTRUndoableEditing.init(changeItem:undoManager:)(&v17, a1, 0, v12, v13);
        Date.init()(v14);
        TTRReminderEditor.edit(toMatch:now:)(v11, v7);

        v15 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v15);
      }
    }
  }
}

void *sub_100446E50()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
    v2 = v1;
    v1 = (void *)static NSUserActivity.forStoringCustomSmartListPayload(for:)();

  }
  return v1;
}

uint64_t sub_100446EB4()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  uint64_t result;
  _QWORD v6[5];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    v6[3] = type metadata accessor for TTRUserActivityListPayload(0);
    v6[4] = &protocol witness table for TTRUserActivityListPayload;
    v2 = sub_100028D70(v6);
    *v2 = v1;
    v3 = type metadata accessor for TTRUserActivityListPayload.State(0);
    swift_storeEnumTagMultiPayload(v2, v3, 1);
    v4 = v1;
    NSUserActivity.setPayload(_:)(v6);

    return sub_100027F10(v6);
  }
  return result;
}

void *sub_100446F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v27[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v10)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
    v11 = v10;
    v10 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
    v12 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v15 = Strong;
      v16 = *(_QWORD *)(v12 + 8);
      ObjectType = swift_getObjectType(Strong, v14);
      sub_10046B304(ObjectType, v16);
      swift_unknownObjectRelease(v15);
      v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v6, 1, v18);
      if ((_DWORD)v19 != 1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
        sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v21 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 0, 1, v21);
        goto LABEL_7;
      }
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    }
    v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
LABEL_7:
    v22 = (uint64_t)v3 + *(int *)(sub_10002A750(&qword_100643700) + 48);
    *v3 = objc_msgSend(v11, "objectID");
    sub_10000735C((uint64_t)v9, v22, (uint64_t *)&unk_1006463C0);
    v23 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
    swift_storeEnumTagMultiPayload(v3, v23, 0);
    v27[3] = v1;
    v27[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
    v24 = sub_100028D70(v27);
    sub_10002B1E8((uint64_t)v3, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    NSUserActivity.setPayload(_:)(v27);

    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
    sub_100027F10(v27);
  }
  return v10;
}

void *sub_100447204()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    v2 = objc_msgSend(v1, "accountCapabilities");
    objc_msgSend(v2, "supportsSections");

  }
  return v1;
}

uint64_t sub_100447288()
{
  uint64_t v0;
  _BYTE *v1;

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  sub_100012DDC(v0, qword_10065EB28);
  v1 = (_BYTE *)sub_100012DC4(v0, (uint64_t)qword_10065EB28);
  *v1 = 0;
  return swift_storeEnumTagMultiPayload(v1, v0, 0);
}

uint64_t sub_1004472D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  BOOL v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  void *v77;
  _QWORD v78[8];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v14)
  {
    v71 = v9;
    v73 = v6;
    v74 = a1;
    type metadata accessor for TTRListColors(0);
    v15 = sub_100005ED8(0, (unint64_t *)&qword_100645340, REMSmartList_ptr);
    v76 = v15;
    v77 = &protocol witness table for REMSmartList;
    v75[0] = v14;
    v16 = v14;
    static TTRListColors.color(for:)(v78, v75);
    sub_1000073A0((uint64_t)v75, &qword_100649C80);
    v17 = objc_msgSend(v16, "accountCapabilities");
    v70 = objc_msgSend(v17, "supportsSections");

    *v12 = objc_msgSend(v16, "objectID");
    v18 = type metadata accessor for TTRListType(0);
    swift_storeEnumTagMultiPayload(v12, v18, 1);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 0, 1, v18);
    v75[0] = v16;
    v19 = protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartList(v15, &protocol witness table for REMSmartList);
    v68 = v20;
    v69 = v19;
    v67 = TTRListColors.Color.nativeColor.getter(v19);
    v22 = 0;
    v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount);
    v65 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount + 16);
    if ((v65 & 1) == 0)
      v22 = v23[1];
    v66 = v22;
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v21);
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
    v27 = v26(ObjectType, v24);
    v28 = v27;
    if (v27)
      swift_unknownObjectRelease(v27);
    v29 = *(void **)(v2 + v13);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v30, "accountCapabilities");
      v64 = objc_msgSend(v31, "supportsSections");

    }
    else
    {
      v64 = 0;
    }
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(ObjectType, v24);
    v35 = v34;
    if (v34)
      swift_unknownObjectRelease(v34);
    v72 = v12;
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(ObjectType, v24);
    v37 = v36;
    if (v36)
      swift_unknownObjectRelease(v36);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 56))(v75, ObjectType, v24);
    v38 = v76;
    sub_1000073A0((uint64_t)v75, &qword_100649FC0);
    v39 = v26(ObjectType, v24);
    if (v39)
    {
      v41 = v39;
      v42 = v40;
      v43 = swift_getObjectType(v39, v40);
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v43, v42);
      swift_unknownObjectRelease(v41);
    }
    else
    {
      v44 = 0;
    }
    v45 = *((_BYTE *)v23 + 16);
    v63 = v44;
    if ((v45 & 1) != 0)
      v62 = 0;
    else
      v62 = *v23;
    v46 = v37 != 0;
    v47 = objc_msgSend(v16, "objectID");
    v48 = objc_msgSend(v47, "stringRepresentation");

    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    v52 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
    v53 = v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v71, 1, 1, v52);
    v54 = type metadata accessor for TTRTemplatePublicLinkData(0);
    v55 = v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v73, 1, 1, v54);
    BYTE6(v60) = 1;
    WORD2(v60) = 257;
    BYTE3(v60) = 0;
    BYTE2(v60) = 0;
    LOWORD(v60) = objc_msgSend(v16, "isOriginOfExistingTemplate");
    v59 = v49;
    HIBYTE(v58) = v63 & 1;
    BYTE6(v58) = v38 != 0;
    BYTE5(v58) = v70;
    BYTE4(v58) = v46;
    BYTE3(v58) = v35 != 0;
    BYTE2(v58) = v64;
    BYTE1(v58) = v28 != 0;
    LOBYTE(v58) = 1;
    v56 = v74;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v72, v69, v68, v67, v66, v65, 0, 3, v58, 1, v62, 1, v59, v51, 0, v53, v55, v60);

    sub_1000AD9D0((uint64_t)v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    v57 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
  }
  else
  {
    v32 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a1, 1, 1, v32);
  }
}

uint64_t sub_100447850()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability));

  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance));
}

uint64_t sub_10044788C()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_release();

  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004478EC()
{
  return type metadata accessor for TTRShowCustomSmartListViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowCustomSmartListViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10065EB98;
  if (!qword_10065EB98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowCustomSmartListViewModelSource);
  return result;
}

uint64_t sub_100447930(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = &unk_100536BA0;
  v2[3] = &unk_100536BB8;
  v2[4] = &unk_100536BD0;
  v2[5] = "\b";
  return swift_updateClassMetadata2(a1, 256, 6, v2, a1 + 1336);
}

uint64_t sub_100447990(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char v21;
  unsigned __int8 v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for REMAnalyticsEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649CA0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "objectID", v10);
  v14 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v15)
  {
    v57 = v12;
    v16 = v5;
    v17 = objc_msgSend(v15, "objectID");
    v18 = v17;
    if (v13)
    {
      if (v17)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v19 = v13;
        v58 = v4;
        v59 = v6;
        v20 = v19;
        v21 = static NSObject.== infix(_:_:)(v19, v18);

        v4 = v58;
        v6 = v59;
        v13 = v18;
      }
      else
      {
        v21 = 0;
      }
      goto LABEL_10;
    }
    if (v17)
    {
      v21 = 0;
      v13 = v17;
LABEL_10:
      v5 = v16;
      v12 = v57;

      goto LABEL_13;
    }
    v21 = 1;
    v5 = v16;
    v12 = v57;
  }
  else if (v13)
  {
    v21 = 0;

  }
  else
  {
    v21 = 1;
  }
LABEL_13:
  v22 = objc_msgSend(a1, "showingLargeAttachments");
  *((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = v22;
  v23 = *(void **)((char *)v2 + v14);
  *(_QWORD *)((char *)v2 + v14) = a1;

  v24 = a1;
  sub_1004472D4((uint64_t)v12);
  sub_10046ADD4((uint64_t)v12);
  if ((v21 & 1) == 0)
  {
    v58 = v4;
    v59 = v6;
    v57 = (char *)v5;
    v25 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v28 = Strong;
      v29 = *((_QWORD *)v25 + 1);
      ObjectType = swift_getObjectType(Strong, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 88))(1, ObjectType, v29);
      Strong = swift_unknownObjectRelease(v28);
    }
    v31 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(Strong);
    type metadata accessor for REMAnalyticsManager(0);
    v32 = v31;
    static REMAnalyticsManager.shared.getter();
    v33 = sub_10002A750(&qword_100645348);
    v34 = &v8[*(int *)(v33 + 48)];
    v35 = &v8[*(int *)(v33 + 80)];
    v36 = enum case for REMRemindersOpenUserOperation.customSmartList(_:);
    v37 = type metadata accessor for REMRemindersOpenUserOperation(0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v8, v36, v37);
    *(_QWORD *)v34 = TTRUserDefaults.activitySessionId.getter(v38);
    *((_QWORD *)v34 + 1) = v39;
    TTRUserDefaults.activitySessionBeginTime.getter();
    *(_QWORD *)v35 = _typeName(_:qualified:)(v58, 0);
    *((_QWORD *)v35 + 1) = v40;
    v41 = v59;
    v42 = v57;
    (*(void (**)(char *, _QWORD, char *))(v59 + 104))(v8, enum case for REMAnalyticsEvent.openListUserOperation(_:), v57);
    REMAnalyticsManager.post(event:)(v8);

    v43 = swift_release();
    (*(void (**)(char *, char *, __n128))(v41 + 8))(v8, v42, v43);
  }
  v44 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  v45 = swift_unknownObjectWeakLoadStrong(v44);
  if (v45)
  {
    v47 = v45;
    v48 = *((_QWORD *)v44 + 1);
    v49 = swift_getObjectType(v45, v46);
    (*(void (**)(uint64_t, uint64_t))(v48 + 120))(v49, v48);
    swift_unknownObjectRelease(v47);
  }
  v50 = swift_unknownObjectWeakLoadStrong(v44);
  if (v50)
  {
    v52 = v50;
    v53 = *((_QWORD *)v44 + 1);
    v54 = swift_getObjectType(v50, v51);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v53 + 96))(a1, 1, v54, v53);
    swift_unknownObjectRelease(v52);
  }
  return sub_1000073A0((uint64_t)v12, &qword_100649CA0);
}

void sub_100447D28(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char **v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t Strong;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  __int128 v109[2];
  _QWORD v110[5];
  _OWORD v111[8];
  _BYTE v112[136];

  v4 = v3;
  v100 = a3;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v10 = *(_QWORD *)(v9 - 8);
  v96 = v9;
  v97 = v10;
  __chkstk_darwin(v9);
  v99 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v94);
  v95 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v13);
  v98 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v92 = *(_QWORD *)(v18 - 8);
  v93 = v18;
  __chkstk_darwin(v18);
  v91 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v105 = *(_QWORD *)(v20 - 8);
  v106 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v23);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v107 = a1;
  v108 = (uint64_t)&v91 - v28;
  v29 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  v30 = *(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  v31 = &selRef_supportsAttachments;
  v101 = v8;
  if (!v30)
  {
    if (!a1)
    {
      v103 = 1;
      v104 = 1;
      goto LABEL_26;
    }
    v102 = v17;
    v32 = 0;
LABEL_7:
    v33 = objc_msgSend(a1, v31[326]);
    v34 = v33;
    if (v32)
    {
      if (v33)
      {
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v37 = v36;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        if (v35 == v39 && v37 == v38)
        {
          v103 = 1;
          v40 = v38;
        }
        else
        {
          v41 = v35;
          v40 = v38;
          v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v37, v39, v38, 0);
        }

        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v40);
        a1 = v107;
        goto LABEL_21;
      }

    }
    else
    {
      if (!v33)
      {
        v103 = 1;
        goto LABEL_21;
      }

    }
    v103 = 0;
LABEL_21:
    v42 = *(void **)(v4 + v29);
    *(_QWORD *)(v4 + v29) = a1;
    v32 = a1;

    v43 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v46 = Strong;
      v47 = *(_QWORD *)(v43 + 8);
      ObjectType = swift_getObjectType(Strong, v45);
      (*(void (**)(uint64_t, uint64_t))(v47 + 120))(ObjectType, v47);
      swift_unknownObjectRelease(v46);
    }
    v104 = 0;
    goto LABEL_24;
  }
  v102 = v17;
  v30 = objc_msgSend(v30, "sortingStyle", v27);
  v31 = &selRef_supportsAttachments;
  v32 = v30;
  if (a1)
    goto LABEL_7;
  if (v30)
  {
    v103 = 0;
    v104 = 1;
LABEL_24:

    goto LABEL_25;
  }
  v103 = 1;
  v104 = 1;
LABEL_25:
  v17 = v102;
LABEL_26:
  v49 = v4;
  v50 = v108;
  REMRemindersListDataView.FlatModel.remindersCount.getter(v30);
  sub_10000735C(v50, (uint64_t)v25, &qword_10063F008);
  v52 = v105;
  v51 = v106;
  v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48))(v25, 1, v106);
  if (v53 == 1)
  {
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 32))(v22, v25, v51);
    v57 = v51;
    v58 = v22;
    v59 = v52;
    v54 = REMRemindersListDataView.CountByCompleted.completed.getter(v56);
    v55 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v57);
  }
  v60 = sub_1000073A0(v108, &qword_10063F008);
  v61 = v49 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(_QWORD *)v61 = v54;
  *(_QWORD *)(v61 + 8) = v55;
  v62 = v49;
  *(_BYTE *)(v61 + 16) = v53 == 1;
  *(_BYTE *)(v49 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v60);
  v63 = *(_QWORD *)(v49 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  v65 = swift_getObjectType(*(_QWORD *)(v49 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v64);
  v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 32))(v65, v63);
  if (v66)
  {
    v68 = v66;
    v69 = v67;
    v70 = swift_getObjectType(v66, v67);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v69 + 16))(0, v70, v69);
    swift_unknownObjectRelease(v68);
  }
  if (((v104 | v103) & 1) != 0)
  {
    sub_1004472D4((uint64_t)v17);
    v71 = (uint64_t)v17;
    if (qword_10063D7F8 != -1)
      swift_once(&qword_10063D7F8, sub_100447288);
    v72 = sub_100012DC4(v94, (uint64_t)qword_10065EB28);
    v73 = v95;
    sub_10002B1E8(v72, v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000D2B94(v111);
    sub_10003E0EC((uint64_t)v111, (uint64_t)v112);
    v74 = (uint64_t)v98;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v73, v112, 0, 0, 0, 0, 0, 0);
    v75 = v99;
    v76 = sub_10002B1E8(v74, v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v77 = REMRemindersListDataView.FlatModel.reminders.getter(v76);
    v78 = v96;
    *(_QWORD *)(v75 + *(int *)(v96 + 20)) = v77;
    *(_BYTE *)(v75 + *(int *)(v78 + 24)) = 0;
    v79 = sub_10002A750(&qword_1006452D8);
    v80 = *(unsigned __int8 *)(v97 + 80);
    v81 = (v80 + 32) & ~v80;
    v82 = swift_allocObject(v79, v81 + *(_QWORD *)(v97 + 72), v80 | 7);
    *(_OWORD *)(v82 + 16) = xmmword_100520250;
    sub_10002B1E8(v75, v82 + v81, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v83 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v84 = swift_allocObject(v83, 16, 7);
    v85 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v86 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v101, 1, 1, v85);
    v110[3] = v83;
    v110[4] = &off_100604210;
    v110[0] = v84;
    sub_100010634((uint64_t)v110, (uint64_t)v109);
    v87 = swift_allocObject(&unk_100608398, 72, 7);
    *(_QWORD *)(v87 + 16) = v82;
    sub_10002E37C(v109, v87 + 24);
    *(_QWORD *)(v87 + 64) = v62;
    swift_retain();
    swift_bridgeObjectRetain(v82);
    swift_retain();
    sub_10047C8F8(1, v71, (uint64_t (*)(uint64_t))sub_10003E360, v87, v100, 0, v86);
    swift_release();
    sub_100027F10(v110);
    swift_bridgeObjectRelease(v82);
    sub_1000073A0(v86, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v75, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_10001F544(v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000073A0(v71, &qword_100649CA0);
    swift_release();
  }
  else
  {
    v88 = v107;
    v89 = objc_msgSend(v88, "sortingStyle");
    v90 = (uint64_t)v91;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_100474118(v90, 1);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v93);
  }
}

double sub_1004484E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char **v26;
  id v27;
  id v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t Strong;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  __int128 v106[2];
  _QWORD v107[5];

  v105 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v9);
  v97 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (uint64_t)&v93 - v12;
  v96 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v14 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v17);
  v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.n128_f64[0] = __chkstk_darwin(v20);
  v23 = (char *)&v93 - v22;
  v24 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  v25 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  v26 = &selRef_supportsAttachments;
  v98 = a3;
  v99 = v8;
  v104 = a1;
  if (!v25)
  {
    if (!a1)
    {
      v29 = v3;
      v30 = 1;
      v100 = 1;
      v31 = v103;
      goto LABEL_27;
    }
    v102 = v14;
    v28 = 0;
LABEL_7:
    v32 = objc_msgSend(a1, v26[326]);
    v33 = v32;
    if (v28)
    {
      if (v32)
      {
        v34 = v3;
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v37 = v36;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v40 = v38;
        if (v35 == v39 && v37 == v38)
          v100 = 1;
        else
          v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);

        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v40);
        v3 = v34;
        goto LABEL_21;
      }

    }
    else
    {
      if (!v32)
      {
        v100 = 1;
        goto LABEL_21;
      }

    }
    v100 = 0;
LABEL_21:
    v41 = v104;
    v42 = *(void **)(v3 + v24);
    *(_QWORD *)(v3 + v24) = v104;
    v28 = v41;

    v43 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v46 = Strong;
      v29 = v3;
      v47 = *(_QWORD *)(v43 + 8);
      ObjectType = swift_getObjectType(Strong, v45);
      (*(void (**)(uint64_t, uint64_t))(v47 + 120))(ObjectType, v47);
      swift_unknownObjectRelease(v46);
    }
    else
    {
      v29 = v3;
    }
    v30 = 0;
    v31 = v103;
    goto LABEL_25;
  }
  v102 = v14;
  v27 = objc_msgSend(v25, "sortingStyle", v21.n128_f64[0]);
  v26 = &selRef_supportsAttachments;
  v28 = v27;
  if (a1)
    goto LABEL_7;
  v29 = v3;
  v30 = 1;
  v31 = v103;
  if (v27)
  {
    v100 = 0;
LABEL_25:

    goto LABEL_26;
  }
  v100 = 1;
LABEL_26:
  v14 = v102;
LABEL_27:
  REMRemindersListDataView.SectionsModel.remindersCount.getter(v21);
  sub_10000735C((uint64_t)v23, (uint64_t)v19, &qword_10063F008);
  v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v31);
  if (v49 == 1)
  {
    v50 = 0;
    v51 = 0;
  }
  else
  {
    v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v31);
    v53 = v14;
    v50 = REMRemindersListDataView.CountByCompleted.completed.getter(v52);
    v51 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v31);
  }
  v54 = v49 == 1;
  v55 = sub_1000073A0((uint64_t)v23, &qword_10063F008);
  v56 = v29;
  v57 = v29 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(_QWORD *)v57 = v50;
  *(_QWORD *)(v57 + 8) = v51;
  *(_BYTE *)(v57 + 16) = v54;
  *(_BYTE *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter(v55);
  v58 = *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  v60 = swift_getObjectType(*(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v59);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 32))(v60, v58);
  if (v61)
  {
    v64 = v61;
    v65 = v62;
    v66 = swift_getObjectType(v61, v62);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v65 + 16))(0, v66, v65);
    swift_unknownObjectRelease(v64);
  }
  if ((v30 & 1) == 0)
  {
    v67 = v104;
    v68 = v67;
    if ((v100 & 1) == 0)
    {
      v78 = objc_msgSend(v67, "sortingStyle");
      v79 = (uint64_t)v94;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_100474118(v79, 1);
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v79, v96);
      return result;
    }
    v69 = v101;
    v70 = sub_1004472D4(v101);
    v71 = v105;
    v72 = REMRemindersListDataView.SectionsModel.sections.getter(v70);
    __chkstk_darwin(v72);
    *(&v93 - 2) = (uint64_t)v68;
    *(&v93 - 1) = v71;
    v74 = sub_1000ADFE4(v73, (void (*)(_QWORD, char *))sub_10044944C, (uint64_t)(&v93 - 4));
    swift_bridgeObjectRelease(v72);
    v75 = v69;
    v76 = v97;
    sub_10000735C(v75, v97, &qword_100649CA0);
    v77 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77) == 1)
    {
      sub_1000073A0(v76, &qword_100649CA0);
    }
    else
    {
      v80 = *(unsigned __int8 *)(v76 + *(int *)(v77 + 64));
      v81 = sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v80 == 1)
      {
        v82 = REMRemindersListDataView.SectionsModel.sections.getter(v81);
        v83 = sub_100005ED8(0, &qword_1006436E0, REMSmartListSection_ptr);
        v84 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        v85 = swift_allocObject(v84, 160, 7);
        v86 = swift_retain();
        *(_QWORD *)(v56 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = sub_1000ADA0C(v86, v82, v83, 0, 1, &_swiftEmptySetSingleton, v85);
LABEL_40:
        swift_release();
        v87 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
        v88 = swift_allocObject(v87, 16, 7);
        v89 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        v90 = (uint64_t)v99;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v99, 1, 1, v89);
        v107[3] = v87;
        v107[4] = &off_100604210;
        v107[0] = v88;
        sub_100010634((uint64_t)v107, (uint64_t)v106);
        v91 = swift_allocObject(&unk_1006083C0, 72, 7);
        *(_QWORD *)(v91 + 16) = v74;
        sub_10002E37C(v106, v91 + 24);
        *(_QWORD *)(v91 + 64) = v56;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain(v74);
        v92 = v101;
        sub_10047C8F8(1, v101, (uint64_t (*)(uint64_t))sub_1001D5A68, v91, v98, 0, v90);
        swift_release();
        sub_100027F10(v107);
        swift_bridgeObjectRelease(v74);

        sub_1000073A0(v90, (uint64_t *)&unk_100640EB0);
        sub_1000073A0(v92, &qword_100649CA0);
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
    }
    *(_QWORD *)(v56 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = 0;
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_100448C78@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  _BOOL8 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  id v40;
  _QWORD *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  _BYTE *v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int v71;
  char v72;
  __int16 v73;
  char v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;
  _QWORD v80[6];
  unsigned __int8 v81;
  _OWORD v82[2];
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  _QWORD v86[3];
  uint64_t v87;
  void *v88;

  *(_QWORD *)&v56 = a4;
  v57 = a1;
  v63 = a5;
  v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v59);
  v60 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)&v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v12);
  v61 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v48[-v15];
  type metadata accessor for TTRListColors(0);
  v17 = sub_100005ED8(0, (unint64_t *)&qword_100645340, REMSmartList_ptr);
  v87 = v17;
  v88 = &protocol witness table for REMSmartList;
  v86[0] = a3;
  *(_QWORD *)&v58 = a3;
  static TTRListColors.color(for:)(v80, v86);
  v54 = v80[1];
  v55 = v80[0];
  v52 = v80[3];
  v53 = v80[2];
  v50 = v80[5];
  v51 = v80[4];
  v49 = v81;
  v18 = sub_1000073A0((uint64_t)v86, &qword_100649C80);
  v62 = a2;
  REMRemindersListDataView.SectionLite.type.getter(v18);
  v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if ((_DWORD)v19 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v20 = *v11;
    v21 = v11[1];
    v22 = v11[2];
    swift_bridgeObjectRelease(v11[4]);
    if (v57)
      v23 = 3;
    else
      v23 = 2;
    v24 = v59;
    v25 = v60;
    *v60 = v20;
    swift_storeEnumTagMultiPayload(v25, v24, 1);
    v66 = v21;
    v67 = v22;
    v68 = 0u;
    v69 = 0u;
    v70 = 0u;
    v71 = 192;
    v72 = v23;
    v73 = v82[0];
    v74 = BYTE2(v82[0]);
    *(_QWORD *)&v75 = v55;
    *((_QWORD *)&v75 + 1) = v54;
    *(_QWORD *)&v76 = v53;
    *((_QWORD *)&v76 + 1) = v52;
    v77 = v51;
    v78 = v50;
    v79 = v49;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v66);
    sub_10003E0EC((uint64_t)&v66, (uint64_t)v86);
    sub_1000AD9D0((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    v26 = objc_msgSend((id)v58, "objectID");
    v27 = v25;
    v28 = 1;
    v29 = 1;
    goto LABEL_8;
  }
  v30 = (void *)v58;
  v57 = v16;
  v31 = v59;
  v32 = v60;
  if ((_DWORD)v19 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    v33 = REMRemindersListDataView.SectionsModel.sections.getter(v19);
    v34 = *(_QWORD *)(v33 + 16);
    swift_bridgeObjectRelease(v33);
    v35 = v34 > 1;
    v87 = v17;
    v88 = &protocol witness table for REMSmartList;
    v86[0] = v30;
    v36 = v30;
    static TTRListColors.color(for:)(v82, v86);
    v58 = v82[0];
    v56 = v82[1];
    v37 = v83;
    v38 = v84;
    v39 = v85;
    sub_1000073A0((uint64_t)v86, &qword_100649C80);
    v40 = objc_msgSend(v36, "objectID");
    v41 = v32;
    *v32 = v40;
    swift_storeEnumTagMultiPayload(v32, v31, 8);
    v66 = 0;
    v67 = 0xE000000000000000;
    v68 = 0u;
    v69 = 0u;
    v70 = 0u;
    v71 = 192;
    v72 = 3;
    v73 = v64;
    v74 = v65;
    v75 = v58;
    v76 = v56;
    v77 = v37;
    v78 = v38;
    v79 = v39;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v66);
    sub_10003E0EC((uint64_t)&v66, (uint64_t)v86);
    v16 = v57;
    v27 = v41;
    v28 = v35;
    v29 = v35;
    v26 = 0;
LABEL_8:
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v27, v86, v28, 0, 1, v29, 0, v26);
    v42 = v61;
    v43 = sub_10002B1E8((uint64_t)v16, (uint64_t)v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v44 = REMRemindersListDataView.SectionLite.reminders.getter(v43);
    sub_1000AD9D0((uint64_t)v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v45 = (uint64_t)v42;
    v46 = v63;
    sub_10001F580(v45, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(_QWORD *)(v46 + *(int *)(result + 20)) = v44;
    *(_BYTE *)(v46 + *(int *)(result + 24)) = 0;
    return result;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
  __break(1u);
  return result;
}

void sub_10044913C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v5, v6);
  v7 = (char *)&loc_1004491C0 + *((int *)qword_100449380 + swift_getEnumCaseMultiPayload(v5, v3));
  __asm { BR              X10 }
}

uint64_t sub_1004491D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v2 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

void sub_100449220()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v3)
  {
    v4 = objc_msgSend(v3, "customContext");
    if (v4)
    {
      v5 = v4;
      v6 = REMSmartListCustomContext.filter.getter();

      if (v6)
      {
        *v0 = v6;
        v7 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
        swift_storeEnumTagMultiPayload(v0, v7, 2);
        JUMPOUT(0x100449200);
      }
    }
  }
  JUMPOUT(0x1004491E0);
}

void sub_1004493AC()
{
  sub_100449454();
}

uint64_t sub_1004493B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance);
  if (!v3)
    return 0;
  swift_retain();
  v5 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  v6 = sub_1001BB050(v5, a2);
  swift_release_n(v3, 2);
  return v6;
}

uint64_t sub_100449440(uint64_t a1, void *a2)
{
  return sub_1004495C0(a2);
}

uint64_t sub_10044944C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100448C78(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

void sub_100449454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_100449514 + 4 * byte_100536B50[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100449514()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_1004495C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance);
  if (!v2)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(Strong, v5);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain(v2);
    v10 = v9(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v6 = TTRSection.init(with:store:)(a1, v10);
    swift_release(v2);
  }
  return v6;
}

uint64_t sub_100449674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100449698()
{
  uint64_t v0;

  TTRSmartListEditor.edit(showingLargeAttachments:)(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1004496C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065F128);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065F128);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100449754(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  Swift::String v8;
  id v9;

  v2 = v1;
  v4 = *(void **)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  v9 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    v8._object = (void *)0x8000000100579D70;
    v8._countAndFlagsBits = 0xD000000000000025;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v8);
    goto LABEL_7;
  }
  if (!v4)
    goto LABEL_6;
  sub_100005ED8(0, (unint64_t *)&qword_10065C600, NSUndoManager_ptr);
  v5 = v4;
  v6 = v9;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

uint64_t sub_100449820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  v1 = v0;
  v7[0] = 0;
  v2 = sub_10002A750(&qword_10065F218);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_QWORD *)(v0 + 16) = CurrentValueSubject.init(_:)(v7);
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit(v0 + 32, 0);
  sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v3 = static OS_dispatch_queue.main.getter();
  v4 = type metadata accessor for TTRDeferredAction(0);
  swift_allocObject(v4, 56, 7);
  v5 = TTRDeferredAction.init(queue:)(v3);
  *(_QWORD *)(v1 + 40) = v5;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_WORD *)(v1 + 80) = 2;
  swift_beginAccess(v5 + 16, v7, 1, 0);
  *(_QWORD *)(v5 + 24) = &off_100608580;
  swift_unknownObjectWeakAssign(v5 + 16, v1);
  return v1;
}

BOOL sub_100449918(uint64_t a1, uint64_t a2)
{
  return ((*(_QWORD *)a1 != *(_QWORD *)a2) | ((*(_BYTE *)(a1 + 8) ^ *(_BYTE *)(a2 + 8)) | (*(_BYTE *)(a2 + 9) ^ *(_BYTE *)(a1 + 9))) & 1) == 0;
}

void sub_100449954()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong
    && (v3 = Strong, v4 = objc_msgSend(Strong, "viewIfLoaded"), v3, v4)
    && (v9 = (id)UIView.firstResponderDescendant.getter(), v4, v9))
  {
    v5 = objc_msgSend(v9, "undoManager");
    if (v5)
    {
      v6 = v5;
LABEL_8:
      v7 = *(id *)(v1 + 64);
      if (v7 && v5 == v7)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  else
  {
    v9 = 0;
  }
  v6 = *(void **)(v1 + 24);
  v5 = v6;
  if (v6)
    goto LABEL_8;
  v7 = *(id *)(v1 + 64);
  if (v7)
  {
    v6 = 0;
LABEL_13:
    *(_QWORD *)(v1 + 64) = v6;
    v8 = v6;

    sub_100449A3C();
    v7 = v8;
LABEL_14:

  }
}

void sub_100449A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  NSString *v18;
  NSString *v19;
  NSString *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26[64];

  v1 = v0;
  if (qword_10063D800 != -1)
    swift_once(&qword_10063D800, sub_1004496C4);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10065F128);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v25 = v7;
    v8 = sub_10002A750(&qword_10065F228);
    v9 = Optional.descriptionOrNil.getter(v8);
    v11 = v10;
    v24 = sub_100027E40(v9, v10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v6 + 4, v6 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIShowRemindersUndoManagerObserver: start observing undo manager: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    v12 = *(_QWORD **)(v1 + 64);
    if (!v12)
      goto LABEL_8;
    goto LABEL_7;
  }

  swift_release_n(v0, 2);
  v12 = *(_QWORD **)(v0 + 64);
  if (v12)
  {
LABEL_7:
    v13 = sub_10002A750(&qword_10065F220);
    inited = swift_initStackObject(v13, v26);
    *(_OWORD *)(inited + 16) = xmmword_1005275D0;
    *(_QWORD *)(inited + 32) = NSUndoManagerDidCloseUndoGroupNotification;
    *(_QWORD *)(inited + 40) = NSUndoManagerDidUndoChangeNotification;
    *(_QWORD *)(inited + 48) = NSUndoManagerDidRedoChangeNotification;
    v15 = (void *)TTRUndoManagerDidRemoveAllActionsNotification;
    *(_QWORD *)(inited + 56) = TTRUndoManagerDidRemoveAllActionsNotification;
    v16 = v12;
    swift_retain();
    v17 = v16;
    v18 = NSUndoManagerDidCloseUndoGroupNotification;
    v19 = NSUndoManagerDidUndoChangeNotification;
    v20 = NSUndoManagerDidRedoChangeNotification;
    v21 = v15;
    v12 = sub_10044A494(inited, v17, v1);

    swift_release();
    swift_setDeallocating(inited);
    type metadata accessor for Name(0);
    swift_arrayDestroy(inited + 32, 4, v22);
  }
LABEL_8:
  v23 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v12;
  swift_bridgeObjectRelease(v23);
  sub_100449F10();
}

double sub_100449CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  _BYTE v14[24];

  v3 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = swift_allocObject(&unk_1006085D8, 24, 7);
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  swift_weakInit(v7 + 16, Strong);
  swift_release();
  type metadata accessor for MainActor(0);
  v9 = swift_retain();
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_100608600, 40, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v7;
  swift_release();
  sub_1001484F4((uint64_t)v5, (uint64_t)&unk_10065F238, (uint64_t)v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100449E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  return swift_task_switch(sub_100449E98, v7, v8);
}

uint64_t sub_100449E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    sub_100449F10();
    v3 = swift_release();
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

void sub_100449F10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  unsigned int v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  int v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v16;

  v1 = v0;
  v2 = *(void **)(v0 + 64);
  if (v2)
  {
    v3 = objc_msgSend(*(id *)(v0 + 64), "canUndo");
    v4 = objc_msgSend(v2, "canRedo");
    if (v4)
      v5 = 256;
    else
      v5 = 0;
    v6 = v5 | v3;
    v7 = *(_WORD *)(v1 + 80);
    if (v7 != 2)
    {
      v8 = (v7 & 1) == 0;
      v9 = (v7 & 0x100) == 0;
      if (v2 == *(void **)(v1 + 72) && v3 != v8 && ((v4 ^ v9) & 1) != 0)
        return;
    }
  }
  else
  {
    if (*(_BYTE *)(v0 + 80) == 2)
      return;
    v6 = 2;
  }
  if (qword_10063D800 != -1)
    swift_once(&qword_10063D800, sub_1004496C4);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100012DC4(v10, (uint64_t)qword_10065F128);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "TTRIShowRemindersUndoManagerObserver: undo manager state changed", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  *(_QWORD *)(v1 + 72) = v2;
  *(_WORD *)(v1 + 80) = v6;
  v16 = *(id *)(v1 + 64);
  v15 = v16;
  CurrentValueSubject.send(_:)(&v16);

}

uint64_t sub_10044A0A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocClassInstance(v0, 82, 7);
}

uint64_t type metadata accessor for TTRIShowRemindersUndoManagerObserver()
{
  return objc_opt_self(_TtC9Reminders36TTRIShowRemindersUndoManagerObserver);
}

uint64_t getEnumTagSinglePayload for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState()
{
  return &type metadata for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState;
}

double sub_10044A1C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  double result;
  _QWORD v20[4];

  v2 = v1;
  swift_unknownObjectWeakAssign(v2 + 32, a1);
  *(_QWORD *)(v2 + 48) = 0;
  v4 = objc_msgSend(a1, "viewIfLoaded", swift_release().n128_f64[0]);
  if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "window"), v5, v6))
  {
    v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v8 = _UIWindowFirstResponderDidChangeNotification;
    v20[3] = sub_100005ED8(0, &qword_10065F240, UIWindow_ptr);
    v20[0] = v6;
    v9 = (void *)objc_opt_self(NSOperationQueue);
    v10 = v6;
    v11 = objc_msgSend(v9, "mainQueue", v20[0]);
    v12 = swift_allocObject(&unk_1006085D8, 24, 7);
    swift_weakInit(v12 + 16, v2);
    swift_retain();
    v13 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v8, v20, v11, sub_10044A6D4, v12);

    swift_release_n(v12, 2);
    sub_10002CAA0((uint64_t)v20);
  }
  else
  {
    if (qword_10063D800 != -1)
      swift_once(&qword_10063D800, sub_1004496C4);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_10065F128);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRIShowRemindersUndoManagerObserver#startObserving: missing window", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    v13 = 0;
  }
  *(_QWORD *)(v2 + 48) = v13;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10044A400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  Swift::String v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5._object = (void *)0x8000000100579D70;
    v5._countAndFlagsBits = 0xD000000000000025;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v5);
    return swift_release(v4);
  }
  return result;
}

void sub_10044A470(void *a1)
{
  sub_100449754(a1);
}

_QWORD *sub_10044A494(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *result;
  void **v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  _QWORD *v20;

  v4 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v4)
  {
    v20 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v8 = (void **)(a1 + 32);
    v9 = (void *)objc_opt_self(NSNotificationCenter);
    do
    {
      v10 = *v8++;
      v11 = v10;
      v12 = objc_msgSend(v9, "defaultCenter");
      v19[3] = sub_100005ED8(0, (unint64_t *)&qword_10065C600, NSUndoManager_ptr);
      v19[0] = a2;
      v13 = swift_allocObject(&unk_1006085D8, 24, 7);
      swift_weakInit(v13 + 16, a3);
      v14 = a2;
      swift_retain();
      v15 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v11, v19, 0, sub_10044A634, v13);
      swift_release_n(v13, 2);

      sub_10002CAA0((uint64_t)v19);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v20[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
      --v4;
    }
    while (v4);
    return v20;
  }
  return result;
}

uint64_t sub_10044A610()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10044A634(uint64_t a1)
{
  uint64_t v1;

  return sub_100449CEC(a1, v1);
}

uint64_t sub_10044A63C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10044A668(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065F234);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_100449E2C(a1, v4, v5, v6);
}

uint64_t sub_10044A6D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10044A400(a1, v1);
}

char *sub_10044A6DC(char *a1, char **a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  unsigned __int8 v200;
  char v201;
  unsigned __int8 v202;
  char v203;
  int *v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v204 = v6;
        v206 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *(_QWORD *)a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *a2;
            *(_QWORD *)a1 = *a2;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *a2;
            *(_QWORD *)a1 = *a2;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = &a1[v105];
        v107 = (char *)a2 + v105;
        v108 = *(uint64_t *)((char *)a2 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v195 = *((_QWORD *)v107 + 7);
          v200 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v195, v200);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v195;
          v106[64] = v200;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v201 = v114 & 1;
            v121 = (void *)*((_QWORD *)v107 + 9);
            v120 = *((_QWORD *)v107 + 10);
            v122 = *((_QWORD *)v107 + 11);
            v123 = *((_QWORD *)v107 + 12);
            v124 = *((_QWORD *)v107 + 13);
            v196 = *((_QWORD *)v107 + 14);
            sub_10002B764(v121, v120, v122, v123, v124, v196, v114 & 1);
            *((_QWORD *)v106 + 9) = v121;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v122;
            *((_QWORD *)v106 + 12) = v123;
            *((_QWORD *)v106 + 13) = v124;
            *((_QWORD *)v106 + 14) = v196;
            v106[120] = v201;
          }
          v6 = v204;
          v119 = v206;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        a1[v104[6]] = *((_BYTE *)a2 + v104[6]);
        a1[v104[7]] = *((_BYTE *)a2 + v104[7]);
        a1[v104[8]] = *((_BYTE *)a2 + v104[8]);
        a1[v104[9]] = *((_BYTE *)a2 + v104[9]);
        a1[v104[10]] = *((_BYTE *)a2 + v104[10]);
        v125 = v104[11];
        v126 = *(char **)((char *)a2 + v125);
        *(_QWORD *)&a1[v125] = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v205 = v6;
        v207 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *(_QWORD *)a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *a2;
            *(_QWORD *)a1 = *a2;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *a2;
            *(_QWORD *)a1 = *a2;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = &a1[v138];
        v140 = (char *)a2 + v138;
        v141 = *(uint64_t *)((char *)a2 + v138 + 8);
        if (v141)
        {
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v146 = *((_QWORD *)v140 + 6);
          v197 = *((_QWORD *)v140 + 7);
          v202 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v146, v197, v202);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v146;
          *((_QWORD *)v139 + 7) = v197;
          v139[64] = v202;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v147 = v140[120];
          if (v147 == 255)
          {
            v148 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v148;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v203 = v147 & 1;
            v154 = (void *)*((_QWORD *)v140 + 9);
            v153 = *((_QWORD *)v140 + 10);
            v155 = *((_QWORD *)v140 + 11);
            v156 = *((_QWORD *)v140 + 12);
            v157 = *((_QWORD *)v140 + 13);
            v198 = *((_QWORD *)v140 + 14);
            sub_10002B764(v154, v153, v155, v156, v157, v198, v147 & 1);
            *((_QWORD *)v139 + 9) = v154;
            *((_QWORD *)v139 + 10) = v153;
            *((_QWORD *)v139 + 11) = v155;
            *((_QWORD *)v139 + 12) = v156;
            *((_QWORD *)v139 + 13) = v157;
            *((_QWORD *)v139 + 14) = v198;
            v139[120] = v203;
          }
          v6 = v205;
          v152 = v207;
          v139[121] = v140[121];
        }
        else
        {
          v149 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v149;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v150 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v150;
          v151 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v151;
          v152 = v7;
        }
        a1[v137[6]] = *((_BYTE *)a2 + v137[6]);
        a1[v137[7]] = *((_BYTE *)a2 + v137[7]);
        a1[v137[8]] = *((_BYTE *)a2 + v137[8]);
        a1[v137[9]] = *((_BYTE *)a2 + v137[9]);
        a1[v137[10]] = *((_BYTE *)a2 + v137[10]);
        v158 = v137[11];
        v159 = *(char **)((char *)a2 + v158);
        *(_QWORD *)&a1[v158] = v159;
        v160 = v159;
        v50 = a1;
        v51 = v152;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)&a1[v22];
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v23, v24, v161);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v23, v24, v162);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v24;
              *v23 = *v24;
              v167 = v166;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *a2;
        *(_QWORD *)a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)&a1[v31];
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v32, v33, v170);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v32, v33, v171);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v32, v33, v187);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v33;
              *v32 = *v33;
              v175 = v174;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *a2;
        *(_QWORD *)a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)&a1[v40];
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v41, v42, v178);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v41, v42, v179);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v42;
              *v41 = *v42;
              v184 = v183;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        *((_QWORD *)a1 + 2) = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *a2;
        *(_QWORD *)a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v199 = &a1[v81];
          v82 = (char *)a2 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v199, v82, v83, v86);
          v7 = v84;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = &a1[v87];
        v89 = (char **)((char *)a2 + v87);
        v90 = v89[1];
        if (v90)
        {
          *(_QWORD *)v88 = *v89;
          *((_QWORD *)v88 + 1) = v90;
          v91 = (void *)v89[2];
          *((_QWORD *)v88 + 2) = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          *((_QWORD *)v88 + 2) = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          a1[*(int *)(v62 + 20)] = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&a1[*(int *)(v94 + 20)] = *(char **)((char *)a2 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = &a1[v56];
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v188 = v6[6];
    a1[v6[5]] = *((_BYTE *)a2 + v6[5]);
    v189 = &a1[v188];
    v190 = (char **)((char *)a2 + v188);
    v191 = v190[1];
    *(_QWORD *)v189 = *v190;
    *((_QWORD *)v189 + 1) = v191;
    v192 = v6[7];
    v193 = *(uint64_t *)((char *)a2 + v192);
    *(_QWORD *)&a1[v192] = v193;
    swift_bridgeObjectRetain(v191);
    swift_bridgeObjectRetain(v193);
  }
  return a1;
}

double sub_10044B6F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  double result;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
      v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v5))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v7 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          break;
      }
LABEL_24:
      v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v22 = (char *)a1 + *(int *)(v21 + 20);
      v23 = *((_QWORD *)v22 + 1);
      if (v23)
      {
        swift_bridgeObjectRelease(v23);
        sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
        v24 = v22[120];
        if (v24 != 255)
          sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
      }
      v13 = *(id *)((char *)a1 + *(int *)(v21 + 44));
      goto LABEL_28;
    case 2u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v11))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v13 = *v8;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v12 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v13 = (id)a1[2];
      goto LABEL_28;
    case 6u:
      v13 = (id)*a1;
      goto LABEL_28;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
      {
        swift_bridgeObjectRelease(*a1);
        v15 = (char *)a1 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v17 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v18 = *((_QWORD *)v17 + 1);
      if (!v18)
        goto LABEL_29;
      swift_bridgeObjectRelease(v18);
      v13 = (id)*((_QWORD *)v17 + 2);
LABEL_28:

LABEL_29:
      swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8));
      *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 28))).n128_u64[0];
      return result;
    case 8u:
      v19 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a1, 1, v19))
      {
        v20 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
      }
      goto LABEL_29;
    case 9u:
      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v12 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_10044BABC(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void *v133;
  id v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  unsigned __int8 v195;
  void *v196;
  unsigned __int8 v197;
  char v198;
  char *v199;
  uint64_t v200;
  char v201;
  void **v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  int *v206;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v203 = v6;
      v205 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v200 = *((_QWORD *)v105 + 7);
        v195 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v200, v195);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v200;
        v104[64] = v195;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v112 = v105[120];
        if (v112 == 255)
        {
          v113 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v113;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v201 = v112 & 1;
          v118 = *((_QWORD *)v105 + 10);
          v196 = (void *)*((_QWORD *)v105 + 9);
          v119 = *((_QWORD *)v105 + 11);
          v120 = *((_QWORD *)v105 + 12);
          v121 = *((_QWORD *)v105 + 13);
          v122 = *((_QWORD *)v105 + 14);
          sub_10002B764(v196, v118, v119, v120, v121, v122, v112 & 1);
          *((_QWORD *)v104 + 9) = v196;
          *((_QWORD *)v104 + 10) = v118;
          *((_QWORD *)v104 + 11) = v119;
          *((_QWORD *)v104 + 12) = v120;
          *((_QWORD *)v104 + 13) = v121;
          *((_QWORD *)v104 + 14) = v122;
          v104[120] = v201;
        }
        v117 = v203;
        a3 = v205;
        v104[121] = v105[121];
      }
      else
      {
        v114 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v114;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v115 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v115;
        v116 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v116;
        v117 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v123 = v102[11];
      v124 = *(void **)((char *)a2 + v123);
      *(void **)((char *)a1 + v123) = v124;
      v125 = v124;
      v48 = a1;
      v49 = v117;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v204 = v6;
      v206 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v126 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v127 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v128 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v129 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v131 = *a2;
          *a1 = *a2;
          v132 = v131;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v133 = *a2;
          *a1 = *a2;
          v134 = v133;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v136 = v135[5];
      v137 = (char *)a1 + v136;
      v138 = (char *)a2 + v136;
      v139 = *(uint64_t *)((char *)a2 + v136 + 8);
      if (v139)
      {
        v202 = a2;
        *(_QWORD *)v137 = *(_QWORD *)v138;
        *((_QWORD *)v137 + 1) = v139;
        v140 = (void *)*((_QWORD *)v138 + 2);
        v141 = *((_QWORD *)v138 + 3);
        v142 = *((_QWORD *)v138 + 4);
        v143 = *((_QWORD *)v138 + 5);
        v145 = *((_QWORD *)v138 + 6);
        v144 = *((_QWORD *)v138 + 7);
        v197 = v138[64];
        swift_bridgeObjectRetain(v139);
        sub_10003E1F0(v140, v141, v142, v143, v145, v144, v197);
        *((_QWORD *)v137 + 2) = v140;
        *((_QWORD *)v137 + 3) = v141;
        *((_QWORD *)v137 + 4) = v142;
        *((_QWORD *)v137 + 5) = v143;
        *((_QWORD *)v137 + 6) = v145;
        *((_QWORD *)v137 + 7) = v144;
        v137[64] = v197;
        *(_DWORD *)(v137 + 65) = *(_DWORD *)(v138 + 65);
        v146 = v138[120];
        if (v146 == 255)
        {
          v147 = *(_OWORD *)(v138 + 88);
          *(_OWORD *)(v137 + 72) = *(_OWORD *)(v138 + 72);
          *(_OWORD *)(v137 + 88) = v147;
          *(_OWORD *)(v137 + 104) = *(_OWORD *)(v138 + 104);
          v137[120] = v138[120];
        }
        else
        {
          v198 = v146 & 1;
          v153 = (void *)*((_QWORD *)v138 + 9);
          v152 = *((_QWORD *)v138 + 10);
          v154 = *((_QWORD *)v138 + 11);
          v155 = *((_QWORD *)v138 + 12);
          v156 = *((_QWORD *)v138 + 13);
          v157 = *((_QWORD *)v138 + 14);
          sub_10002B764(v153, v152, v154, v155, v156, v157, v146 & 1);
          *((_QWORD *)v137 + 9) = v153;
          *((_QWORD *)v137 + 10) = v152;
          *((_QWORD *)v137 + 11) = v154;
          *((_QWORD *)v137 + 12) = v155;
          *((_QWORD *)v137 + 13) = v156;
          *((_QWORD *)v137 + 14) = v157;
          v137[120] = v198;
        }
        v151 = v204;
        a3 = v206;
        v137[121] = v138[121];
        a2 = v202;
      }
      else
      {
        v148 = *((_OWORD *)v138 + 5);
        *((_OWORD *)v137 + 4) = *((_OWORD *)v138 + 4);
        *((_OWORD *)v137 + 5) = v148;
        *((_OWORD *)v137 + 6) = *((_OWORD *)v138 + 6);
        *(_OWORD *)(v137 + 106) = *(_OWORD *)(v138 + 106);
        v149 = *((_OWORD *)v138 + 1);
        *(_OWORD *)v137 = *(_OWORD *)v138;
        *((_OWORD *)v137 + 1) = v149;
        v150 = *((_OWORD *)v138 + 3);
        *((_OWORD *)v137 + 2) = *((_OWORD *)v138 + 2);
        *((_OWORD *)v137 + 3) = v150;
        v151 = v6;
      }
      *((_BYTE *)a1 + v135[6]) = *((_BYTE *)a2 + v135[6]);
      *((_BYTE *)a1 + v135[7]) = *((_BYTE *)a2 + v135[7]);
      *((_BYTE *)a1 + v135[8]) = *((_BYTE *)a2 + v135[8]);
      *((_BYTE *)a1 + v135[9]) = *((_BYTE *)a2 + v135[9]);
      *((_BYTE *)a1 + v135[10]) = *((_BYTE *)a2 + v135[10]);
      v158 = v135[11];
      v159 = *(void **)((char *)a2 + v158);
      *(void **)((char *)a1 + v158) = v159;
      v160 = v159;
      v48 = a1;
      v49 = v151;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v161 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v21, v22, v161);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v162 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v21, v22, v162);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v163 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v21, v22, v163);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v164 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v21, v22, v164);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v21, v22, v165);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v166 = *v22;
            *v21 = *v22;
            v167 = v166;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v168 = *v22;
            *v21 = *v22;
            v169 = v168;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v30, v31, v170);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v30, v31, v171);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v30, v31, v172);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v30, v31, v187);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v30, v31, v173);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v174 = *v31;
            *v30 = *v31;
            v175 = v174;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v176 = *v31;
            *v30 = *v31;
            v177 = v176;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v39, v40, v178);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v39, v40, v179);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v39, v40, v180);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v39, v40, v181);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v39, v40, v182);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v183 = *v40;
            *v39 = *v40;
            v184 = v183;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v185 = *v40;
            *v39 = *v40;
            v186 = v185;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v199 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v199, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v188 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v189 = (void **)((char *)a1 + v188);
  v190 = (void **)((char *)a2 + v188);
  v191 = v190[1];
  *v189 = *v190;
  v189[1] = v191;
  v192 = a3[7];
  v193 = *(void **)((char *)a2 + v192);
  *(void **)((char *)a1 + v192) = v193;
  swift_bridgeObjectRetain(v191);
  swift_bridgeObjectRetain(v193);
  return a1;
}

void **sub_10044CAA8(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  _QWORD *v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  unsigned __int8 v208;
  void *v209;
  uint64_t v210;
  char v211;
  char *v212;
  uint64_t v213;
  char v214;
  int *v215;
  uint64_t v216;
  uint64_t v217;
  int *v218;
  int *v219;

  if (a1 != a2)
  {
    sub_10004941C((uint64_t)a1);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v216 = v6;
        v218 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v213 = *((_QWORD *)v106 + 7);
          v208 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v213, v208);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v213;
          v105[64] = v208;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v214 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v209 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v209, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v209;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v214;
          }
          v123 = v216;
          a3 = v218;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v217 = v6;
        v219 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v215 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v210 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v210, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v210;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v211 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v211;
          }
          v162 = v217;
          a3 = v219;
          v143[121] = v144[121];
          v141 = v215;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v212 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v212, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v199 = a3[6];
  v200 = (void **)((char *)a1 + v199);
  v201 = (void **)((char *)a2 + v199);
  *v200 = *v201;
  v202 = v201[1];
  v203 = v200[1];
  v200[1] = v202;
  swift_bridgeObjectRetain(v202);
  swift_bridgeObjectRelease(v203);
  v204 = a3[7];
  v205 = *(void **)((char *)a2 + v204);
  v206 = *(uint64_t *)((char *)a1 + v204);
  *(void **)((char *)a1 + v204) = v205;
  swift_bridgeObjectRetain(v205);
  swift_bridgeObjectRelease(v206);
  return a1;
}

_QWORD *sub_10044DB0C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v105) = *(_OWORD *)((char *)a2 + v105);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_10044E684(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  if (a1 != a2)
  {
    sub_10004941C((uint64_t)a1);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v105 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v106 = (_QWORD *)((char *)a1 + v105);
  v107 = (_QWORD *)((char *)a2 + v105);
  v109 = *v107;
  v108 = v107[1];
  v110 = v106[1];
  *v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease(v110);
  v111 = a3[7];
  v112 = *(_QWORD *)((char *)a1 + v111);
  *(_QWORD *)((char *)a1 + v111) = *(_QWORD *)((char *)a2 + v111);
  swift_bridgeObjectRelease(v112);
  return a1;
}

uint64_t sub_10044F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044F230);
}

uint64_t sub_10044F230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10044F2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044F2B8);
}

uint64_t sub_10044F2B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TTRIReminderCellAutoCompleteViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10065F2A0;
  if (!qword_10065F2A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIReminderCellAutoCompleteViewModel);
  return result;
}

uint64_t sub_10044F36C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100536F28;
    v4[2] = &unk_100536F40;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_10044F3F4(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;
  __int128 v16;
  char v17;
  void *v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_doneBarButtonItem], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_includeCell], 0);
  v6 = v3;
  static TTRTypedController.currentArgument.getter(&v16, ObjectType, &off_10065F338);
  v7 = v17;
  v8 = v18;
  v9 = v16;
  *(_OWORD *)&v6[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_presenter] = v16;
  v6[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_style] = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_localUndoManager] = v8;
  v10 = v9;
  swift_unknownObjectRetain(v9);
  v11 = v8;

  v15.receiver = v6;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  v13 = v12;
  swift_unknownObjectRelease(v10);
  if (v13)

  return v13;
}

void sub_10044F554(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  id v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  id v16;
  NSString v17;
  uint64_t Strong;
  void *v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  objc_super v41;

  v3 = v2;
  v41.receiver = v2;
  v41.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v4 = objc_msgSend(v2, "tableView");
  if (!v4)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = v4;
  UITableView.fixUpBackgroundColorLoadedFromNibIfNeeded_workaroundRdar108920406()();

  if ((v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_style] & 1) != 0)
  {
    v6._countAndFlagsBits = 0xD000000000000036;
    v6._object = (void *)0x8000000100579ED0;
    v7._countAndFlagsBits = 0x6E492070756F7247;
    v7._object = (void *)0xEA00000000006F66;
    object = TTRLocalizedString(_:comment:)(v7, v6)._object;
    v9 = 0xD000000000000041;
    v10 = 0x8000000100579F10;
    v11 = 1701736260;
    v12 = 0xE400000000000000;
  }
  else
  {
    v13._countAndFlagsBits = 0xD000000000000035;
    v13._object = (void *)0x8000000100579F80;
    v14._countAndFlagsBits = 0x756F72472077654ELL;
    v14._object = (void *)0xE900000000000070;
    object = TTRLocalizedString(_:comment:)(v14, v13)._object;
    v9 = 0xD00000000000003ALL;
    v10 = 0x8000000100579FC0;
    v11 = 0x657461657243;
    v12 = 0xE600000000000000;
  }
  v15 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v11, *(Swift::String *)&v9)._object;
  v16 = objc_msgSend(v3, "navigationItem");
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v16, "setTitle:", v17);

  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_doneBarButtonItem]);
  if (!Strong)
    goto LABEL_18;
  v19 = (void *)Strong;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v19, "setTitle:", v20);

  v21 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField]);
  if (!v21)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v22 = (void *)v21;
  v23 = (void *)objc_opt_self(UIColor);
  v24 = objc_msgSend(v23, "labelColor");
  objc_msgSend(v22, "setTextColor:", v24);

  v25 = &v3[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_includeCell];
  v26 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (!v26)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "textLabel");

  if (v28)
  {
    v29 = objc_msgSend(v23, "labelColor");
    objc_msgSend(v28, "setTextColor:", v29);

  }
  v30 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (!v30)
    goto LABEL_21;
  v31 = v30;
  v32 = objc_msgSend(v30, "textLabel");

  if (v32)
  {
    v33._object = (void *)0x8000000100579F60;
    v34._countAndFlagsBits = 0x6564756C636E49;
    v34._object = (void *)0xE700000000000000;
    v33._countAndFlagsBits = 0xD00000000000001FLL;
    v35 = TTRLocalizedString(_:comment:)(v34, v33)._object;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    objc_msgSend(v32, "setText:", v36);

  }
  v37 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (!v37)
    goto LABEL_22;
  v38 = v37;
  v39 = objc_msgSend(v37, "detailTextLabel");

  if (v39)
  {
    v40 = objc_msgSend(v23, "tableCellGrayTextColor");
    objc_msgSend(v39, "setTextColor:", v40);

  }
}

void sub_10044F94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  NSString v9;
  void *v10;
  void *v11;
  id v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *object;
  Swift::Bool isValid;
  void *v21;
  id v22;
  Swift::tuple_name_String_isValid_Bool v23;

  v1 = v0;
  sub_1000B0AB4();
  v3 = v2;
  v5 = v4;
  v6 = v0 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField;
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = (void *)Strong;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v9);

  v10 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_includeCell);
  if (!v10)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "detailTextLabel");

  if (v12)
  {
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v12, "setText:", v13);

  }
  else
  {
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v3);
  }
  v14 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (!v14)
    goto LABEL_14;
  v15 = v14;
  v16 = objc_msgSend(v14, "text");

  if (v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v18 = v17;

    v23 = String.validatedListName()();
    object = v23.name._object;
    isValid = v23.isValid;
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(object);
  }
  else
  {
    isValid = 0;
  }
  v21 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_doneBarButtonItem);
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "setEnabled:", isValid);

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10044FB80(char a1, uint64_t a2)
{
  char *v2;
  char *v4;
  void *Strong;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  objc_super v15;

  v15.receiver = v2;
  v15.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1);
  objc_msgSend(v2, "becomeFirstResponder");
  v4 = &v2[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField]);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = Strong;
  v7 = objc_msgSend(Strong, "text");

  if (!v7)
    goto LABEL_6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  swift_bridgeObjectRelease(v10);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
LABEL_6:
    v12 = swift_unknownObjectWeakLoadStrong(v4);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = sub_10010745C();
      UITextInput<>.ttrBeginEditing()(v14);

      return;
    }
LABEL_10:
    __break(1u);
  }
}

void sub_10044FFE4()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "text");

    if (v3)
    {
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

    }
    else
    {
      v4 = 0;
      v6 = 0xE000000000000000;
    }
    sub_1000B0B84(v4, v6);
    swift_bridgeObjectRelease(v6);
    sub_1000B0E98();
  }
  else
  {
    __break(1u);
  }
}

void sub_100450094()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *object;
  Swift::Bool isValid;
  void *v8;
  id v9;
  Swift::tuple_name_String_isValid_Bool v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "text");

    if (v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v5 = v4;

      v10 = String.validatedListName()();
      object = v10.name._object;
      isValid = v10.isValid;
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(object);
    }
    else
    {
      isValid = 0;
    }
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_doneBarButtonItem);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setEnabled:", isValid);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100450174(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;
  uint64_t v8;
  _QWORD v10[4];

  swift_unknownObjectRetain(a3);
  v7 = a1;
  _bridgeAnyObjectToAny(_:)(v10);
  v8 = swift_unknownObjectRelease(a3);
  a4(v8);

  return sub_100027F10(v10);
}

uint64_t type metadata accessor for TTRIGroupDetailViewController()
{
  return objc_opt_self(_TtC9Reminders29TTRIGroupDetailViewController);
}

void sub_1004502C4()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_nameTextField);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "text");

    if (v3)
    {
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

    }
    else
    {
      v4 = 0;
      v6 = 0xE000000000000000;
    }
    sub_1000B0B84(v4, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for TTRIGroupDetailViewController.Argument()
{
  return &type metadata for TTRIGroupDetailViewController.Argument;
}

uint64_t sub_100450370(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045E64C);
}

uint64_t sub_10045037C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100454F00(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + 2 * v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 2 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 2 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004504C0(uint64_t a1)
{
  return sub_100450BBC(a1, &qword_1006452D8, type metadata accessor for TTRRemindersListTreeViewModel.Section);
}

uint64_t sub_1004504D4(uint64_t a1)
{
  return sub_100450BBC(a1, &qword_10065F640, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
}

uint64_t sub_1004504E8(uint64_t a1)
{
  return sub_100450960(a1, &qword_1006463D0, &qword_10065F4D0, &qword_10065F4C8, (uint64_t *)sub_10048B07C);
}

uint64_t sub_10045050C(uint64_t a1)
{
  return sub_100450F20(a1, &qword_10065F568, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
}

uint64_t sub_100450520(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100455F14(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

void sub_10045067C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100456EEC(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_10064A890);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_1004507E0(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045E884);
}

uint64_t sub_1004507EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10001D840(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045093C(uint64_t a1)
{
  return sub_100450960(a1, (uint64_t *)&unk_100640E20, &qword_10065F450, &qword_10065F448, (uint64_t *)sub_10048B07C);
}

uint64_t sub_100450960(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_10045EABC(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_100450B70(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045ECC4);
}

uint64_t sub_100450B7C(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045EED8);
}

uint64_t sub_100450B88(uint64_t a1)
{
  return sub_100450F20(a1, &qword_100659338, (uint64_t (*)(_QWORD))&type metadata accessor for REMRemindersListDataView.SectionLite);
}

uint64_t sub_100450B9C(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045F0EC);
}

uint64_t sub_100450BA8(uint64_t a1)
{
  return sub_100450BBC(a1, &qword_100642EB0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100450BBC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t result;
  char v30;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  if (isUniquelyReferenced_nonNull_native && v7 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v28 = v6 + v4;
  else
    v28 = v6;
  v5 = sub_100455128(isUniquelyReferenced_nonNull_native, v28, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = *(_QWORD *)(v5 + 16);
  v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
  v15 = a3(0);
  if (v14 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 72);
  v19 = v5 + v17 + v18 * v13;
  v20 = a1 + v17;
  v21 = v18 * v12;
  v22 = v19 + v21;
  v23 = v20 + v21;
  if (v20 < v22 && v19 < v23)
    goto LABEL_24;
  swift_arrayInitWithCopy(v19);
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = *(_QWORD *)(v5 + 16);
  v26 = __OFADD__(v25, v12);
  v27 = v25 + v12;
  if (!v26)
  {
    *(_QWORD *)(v5 + 16) = v27;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v30 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v30, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100450D40(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045F300);
}

uint64_t sub_100450D4C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_100450F08(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045F514);
}

uint64_t sub_100450F14(uint64_t a1)
{
  return sub_100450D4C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10045F718);
}

uint64_t sub_100450F20(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t result;
  char v29;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  if (isUniquelyReferenced_nonNull_native && v7 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v27 = v6 + v4;
  else
    v27 = v6;
  v5 = sub_100455128(isUniquelyReferenced_nonNull_native, v27, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = *(_QWORD *)(v5 + 16);
  v13 = (*(_QWORD *)(v5 + 24) >> 1) - v12;
  v14 = a3(0);
  if (v13 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v5 + v16 + v17 * v12;
  v19 = a1 + v16;
  v20 = v17 * v4;
  v21 = v18 + v20;
  v22 = v19 + v20;
  if (v19 < v21 && v18 < v22)
    goto LABEL_24;
  swift_arrayInitWithCopy(v18);
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v4);
  v26 = v24 + v4;
  if (!v25)
  {
    *(_QWORD *)(v5 + 16) = v26;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v29 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v29, 1092, 0);
  __break(1u);
  return result;
}

uint64_t AnyListEntityQuery.init(queryType:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[5];

  v2 = type metadata accessor for AppIntentsDependencyKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14[-1] - v7;
  sub_10002A750(&qword_10063D900);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for AppIntentsDependencyKey.remStore(_:), v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v9 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(v14, v5, v2, v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v10 = type metadata accessor for AppDependencyManager(0);
  v11 = static AppDependencyManager.shared.getter(v10);
  AppDependency.__allocating_init(key:manager:)(v14, v11);
  return a1;
}

uint64_t AnyListEntityQuery.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v12[5];

  v0 = type metadata accessor for AppIntentsDependencyKey(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - v5;
  sub_10002A750(&qword_10063D900);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, enum case for AppIntentsDependencyKey.remStore(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(v12, v3, v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  v8 = type metadata accessor for AppDependencyManager(0);
  v9 = static AppDependencyManager.shared.getter(v8);
  AppDependency.__allocating_init(key:manager:)(v12, v9);
  return 0;
}

uint64_t AnyListEntityQuery.entities(for:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Style;
  uint64_t v24;
  unint64_t v25;
  uint64_t Options;
  uint64_t v27;

  *(_BYTE *)(v3 + 480) = a2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = a3;
  v4 = sub_10002A750(&qword_10065F368);
  *(_QWORD *)(v3 + 104) = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 120) = swift_task_alloc(v5);
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v3 + 128) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 136) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 144) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 152) = swift_task_alloc(v8);
  v9 = sub_10002A750(&qword_100656DE8);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100656DE0);
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(type metadata accessor for AnyListEntity(0) - 8);
  *(_QWORD *)(v3 + 176) = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 216) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 224) = swift_task_alloc(v12);
  *(_QWORD *)(v3 + 232) = swift_task_alloc(v12);
  v13 = type metadata accessor for SmartListType(0);
  *(_QWORD *)(v3 + 240) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v3 + 248) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 256) = swift_task_alloc(v15);
  *(_QWORD *)(v3 + 264) = swift_task_alloc(v15);
  *(_QWORD *)(v3 + 272) = swift_task_alloc(v15);
  v16 = type metadata accessor for AnyListEntityID(0);
  *(_QWORD *)(v3 + 280) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v3 + 288) = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 296) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 304) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 312) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 320) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 328) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 336) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 344) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 352) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 360) = swift_task_alloc(v18);
  *(_QWORD *)(v3 + 368) = swift_task_alloc(v18);
  v19 = type metadata accessor for REMAccountsListDataView.Model(0);
  *(_QWORD *)(v3 + 376) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v3 + 384) = v20;
  *(_QWORD *)(v3 + 392) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMAccountsListDataView.Result(0);
  *(_QWORD *)(v3 + 400) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v3 + 408) = v22;
  *(_QWORD *)(v3 + 416) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Style = type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle(0);
  *(_QWORD *)(v3 + 424) = Style;
  v24 = *(_QWORD *)(Style - 8);
  *(_QWORD *)(v3 + 432) = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 440) = swift_task_alloc(v25);
  *(_QWORD *)(v3 + 448) = swift_task_alloc(v25);
  Options = type metadata accessor for REMAccountsListDataView.FetchOptions(0);
  *(_QWORD *)(v3 + 456) = Options;
  v27 = *(_QWORD *)(Options - 8);
  *(_QWORD *)(v3 + 464) = v27;
  *(_QWORD *)(v3 + 472) = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100451628, 0, 0);
}

uint64_t sub_100451628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  NSString v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  Class v67;
  NSString v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t isUniquelyReferenced_nonNull_native;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  void *v105;
  uint64_t v106;
  Class v107;
  double v108;
  id v109;
  void *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  id v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  id v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t);
  __n128 v146;
  void *v147;
  id v148;
  void *v149;
  id v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  Swift::Int v154;
  uint64_t v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  unint64_t v162;
  uint64_t v163;
  _BOOL8 v164;
  uint64_t v165;
  char v166;
  unint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  id v201;
  unint64_t v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t (*v217)(uint64_t);
  uint64_t v218;
  unint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  __n128 v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  id *v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  uint64_t v269;
  id *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t (*v299)(uint64_t);
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t (*v304)(uint64_t);
  uint64_t v305;
  uint64_t (*v306)(uint64_t);
  uint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD v325[3];
  uint64_t v326;
  void *v327;

  v1 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 424);
  v5 = enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 432) + 104);
  v6(v2, enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:), v4);
  v6(v3, v5, v4);
  REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)(0, v2, 0, v3, 1, 0);
  type metadata accessor for REMAccountsListDataView(0);
  ((void (*)(void))AppDependency.wrappedValue.getter)();
  v7 = *(void **)(v0 + 16);
  static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)(v7, 0, v1);
  v9 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 376);
  v11 = *(_QWORD *)(v0 + 88);

  v12 = REMAccountsListDataView.Result.model.getter();
  v13 = REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter(v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v14 = *(_QWORD *)(v11 + 16);
  v255 = v14;
  if (v14)
  {
    v15 = *(_QWORD *)(v0 + 288);
    v262 = v13;
    v267 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 136);
    v275 = *(unsigned __int8 *)(v0 + 480);
    v17 = *(_QWORD *)(v0 + 88);
    v295 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v298 = *(_QWORD *)(v0 + 248);
    v18 = v17 + v295;
    v311 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain(v17);
    v19 = _swiftEmptyArrayStorage;
    v304 = (uint64_t (*)(uint64_t))_swiftEmptyDictionarySingleton;
    v20 = v14;
    v309 = _swiftEmptyArrayStorage;
    v272 = v16;
    while (1)
    {
      v25 = *(_QWORD *)(v0 + 360);
      v26 = *(_QWORD *)(v0 + 368);
      v27 = *(_QWORD *)(v0 + 280);
      sub_10002B1E8(v18, v26, type metadata accessor for AnyListEntityID);
      sub_10002B1E8(v26, v25, type metadata accessor for AnyListEntityID);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v27);
      v319 = v20;
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v29 = *(_QWORD *)(v0 + 368);
          v30 = *(_QWORD *)(v0 + 336);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 128));
          sub_10002B1E8(v29, v30, type metadata accessor for AnyListEntityID);
          if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
            v19 = (_QWORD *)sub_100455128(0, v19[2] + 1, 1, (unint64_t)v19, &qword_10065F668, type metadata accessor for AnyListEntityID);
          v32 = v19[2];
          v31 = v19[3];
          v33 = v18;
          if (v32 >= v31 >> 1)
            v19 = (_QWORD *)sub_100455128(v31 > 1, v32 + 1, 1, (unint64_t)v19, &qword_10065F668, type metadata accessor for AnyListEntityID);
          v34 = *(_QWORD *)(v0 + 336);
          v19[2] = v32 + 1;
          sub_10001F580(v34, (uint64_t)v19 + v295 + v32 * v311, type metadata accessor for AnyListEntityID);
          v35 = objc_msgSend((id)objc_opt_self(REMList), "cdEntityName");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
          v37 = v36;

          v38 = objc_allocWithZone((Class)REMObjectID);
          isa = UUID._bridgeToObjectiveC()().super.isa;
          v40 = String._bridgeToObjectiveC()();
          v41 = objc_msgSend(v38, "initWithUUID:entityName:", isa, v40, swift_bridgeObjectRelease(v37).n128_f64[0]);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v43 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v43 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
          v21 = *(_QWORD *)(v0 + 152);
        }
        else
        {
          v58 = *(_QWORD *)(v0 + 368);
          v59 = *(_QWORD *)(v0 + 328);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 128));
          sub_10002B1E8(v58, v59, type metadata accessor for AnyListEntityID);
          if ((swift_isUniquelyReferenced_nonNull_native(v309) & 1) == 0)
            v309 = (_QWORD *)sub_100455128(0, v309[2] + 1, 1, (unint64_t)v309, &qword_10065F668, type metadata accessor for AnyListEntityID);
          v61 = v309[2];
          v60 = v309[3];
          v33 = v18;
          if (v61 >= v60 >> 1)
            v309 = (_QWORD *)sub_100455128(v60 > 1, v61 + 1, 1, (unint64_t)v309, &qword_10065F668, type metadata accessor for AnyListEntityID);
          v62 = *(_QWORD *)(v0 + 328);
          v309[2] = v61 + 1;
          sub_10001F580(v62, (uint64_t)v309 + v295 + v61 * v311, type metadata accessor for AnyListEntityID);
          v63 = objc_msgSend((id)objc_opt_self(REMSmartList), "cdEntityName");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
          v65 = v64;

          v66 = objc_allocWithZone((Class)REMObjectID);
          v67 = UUID._bridgeToObjectiveC()().super.isa;
          v68 = String._bridgeToObjectiveC()();
          v41 = objc_msgSend(v66, "initWithUUID:entityName:", v67, v68, swift_bridgeObjectRelease(v65).n128_f64[0]);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
          v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v70 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v44 + 1, 1);
          v21 = *(_QWORD *)(v0 + 144);
        }
        v22 = *(_QWORD *)(v0 + 128);
        v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v41);
        specialized Array._endMutation()(v23);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v22);
        v24 = v33;
        v20 = v319;
        goto LABEL_5;
      }
      v290 = v18;
      v45 = *(_QWORD *)(v0 + 264);
      v46 = *(_QWORD *)(v0 + 272);
      v47 = *(_QWORD *)(v0 + 240);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v298 + 32))(v46, *(_QWORD *)(v0 + 360), v47);
      v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v298 + 16);
      v49 = v48(v45, v46, v47);
      v302 = v19;
      if (!v275)
        goto LABEL_27;
      v50 = SmartListType.remSmartListType.getter(v49);
      v51 = (void *)v50;
      if (!*(_QWORD *)(v262 + 16))
        break;
      v52 = sub_1002AA394(v50);
      if ((v53 & 1) == 0)
        break;
      v54 = *(_QWORD *)(v0 + 264);
      v55 = *(_QWORD *)(v0 + 240);
      v56 = *(_QWORD *)(*(_QWORD *)(v262 + 56) + 8 * v52);

      v57 = *(void (**)(uint64_t, uint64_t))(v298 + 8);
      v57(v54, v55);
      if (v56 != 2)
      {
        v71 = v57;
        goto LABEL_28;
      }
      v57(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
      v16 = v272;
      v24 = v290;
LABEL_5:
      sub_10001F544(*(_QWORD *)(v0 + 368), type metadata accessor for AnyListEntityID);
      v18 = v24 + v311;
      if (!--v20)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
        v104 = swift_bridgeObjectRelease(v262);
        goto LABEL_43;
      }
    }

LABEL_27:
    v71 = *(void (**)(uint64_t, uint64_t))(v298 + 8);
    v71(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
LABEL_28:
    v72 = *(_QWORD *)(v0 + 344);
    v73 = *(_QWORD *)(v0 + 272);
    v74 = *(_QWORD *)(v0 + 280);
    v75 = *(_QWORD *)(v0 + 256);
    v76 = *(uint64_t (**)(uint64_t))(v0 + 240);
    v280 = *(_QWORD *)(v0 + 232);
    v283 = *(_QWORD *)(v0 + 224);
    v287 = *(_QWORD *)(v0 + 352);
    v78 = *(_QWORD *)(v0 + 160);
    v77 = *(_QWORD *)(v0 + 168);
    sub_10002B1E8(*(_QWORD *)(v0 + 368), v287, type metadata accessor for AnyListEntityID);
    v48(v75, v73, (uint64_t)v76);
    v48(v72, v75, (uint64_t)v76);
    v79 = swift_storeEnumTagMultiPayload(v72, v74, 0);
    v80 = SmartListType.title.getter(v79);
    v82 = v81;
    v83 = type metadata accessor for ListBadgeEntity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v77, 1, 1, v83);
    v84 = type metadata accessor for ColorEntity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v78, 1, 1, v84);
    v16 = v280;
    AnyListEntity.init(id:name:listBadge:color:supportsListAppearance:)(v72, v80, v82, v77, v78, 2, v280);
    v85 = v71;
    v71(v75, (uint64_t)v76);
    sub_10001F580(v280, v283, type metadata accessor for AnyListEntity);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v304);
    v325[0] = v304;
    v88 = sub_1002AA8A0(v287);
    v89 = *((_QWORD *)v304 + 2);
    v90 = (v87 & 1) == 0;
    v91 = v89 + v90;
    if (__OFADD__(v89, v90))
      goto LABEL_153;
    v92 = v87;
    if (*((_QWORD *)v304 + 3) < v91)
    {
      v93 = *(_QWORD *)(v0 + 352);
      sub_10045CBFC(v91, isUniquelyReferenced_nonNull_native);
      v304 = (uint64_t (*)(uint64_t))v325[0];
      v94 = sub_1002AA8A0(v93);
      v19 = v302;
      v16 = v272;
      v76 = type metadata accessor for AnyListEntityID;
      v20 = v319;
      if ((v92 & 1) != (v95 & 1))
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v0 + 280));
      v88 = v94;
      v24 = v290;
      if ((v92 & 1) == 0)
        goto LABEL_38;
LABEL_35:
      sub_10045E608(*(_QWORD *)(v0 + 224), *((_QWORD *)v304 + 7) + *(_QWORD *)(v267 + 72) * v88);
LABEL_40:
      v101 = *(_QWORD *)(v0 + 352);
      v102 = *(_QWORD *)(v0 + 272);
      v103 = *(_QWORD *)(v0 + 240);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_10001F544(v101, type metadata accessor for AnyListEntityID);
      v85(v102, v103);
      goto LABEL_5;
    }
    v19 = v302;
    v16 = v272;
    v76 = type metadata accessor for AnyListEntityID;
    v20 = v319;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v24 = v290;
      if ((v87 & 1) != 0)
        goto LABEL_35;
    }
    else
    {
      sub_1002B1890();
      v304 = (uint64_t (*)(uint64_t))v325[0];
      v24 = v290;
      if ((v92 & 1) != 0)
        goto LABEL_35;
    }
LABEL_38:
    v96 = *(_QWORD *)(v0 + 352);
    v97 = *(_QWORD *)(v0 + 224);
    *((_QWORD *)v304 + (v88 >> 6) + 8) |= 1 << v88;
    sub_10002B1E8(v96, *((_QWORD *)v304 + 6) + v88 * v311, type metadata accessor for AnyListEntityID);
    sub_10001F580(v97, *((_QWORD *)v304 + 7) + *(_QWORD *)(v267 + 72) * v88, type metadata accessor for AnyListEntity);
    v98 = *((_QWORD *)v304 + 2);
    v99 = __OFADD__(v98, 1);
    v100 = v98 + 1;
    if (v99)
      goto LABEL_159;
    *((_QWORD *)v304 + 2) = v100;
    goto LABEL_40;
  }
  v104 = swift_bridgeObjectRelease(v13);
  v304 = (uint64_t (*)(uint64_t))_swiftEmptyDictionarySingleton;
  v19 = _swiftEmptyArrayStorage;
  v309 = _swiftEmptyArrayStorage;
LABEL_43:
  AppDependency.wrappedValue.getter(v104);
  v105 = *(void **)(v0 + 24);
  v106 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v107 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v108 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  *(_QWORD *)(v0 + 32) = 0;
  v109 = objc_msgSend(v105, "fetchListsWithObjectIDs:error:", v107, v0 + 32, v108);

  v110 = *(void **)(v0 + 32);
  if (!v109)
  {
    v138 = *(_QWORD *)(v0 + 464);
    v139 = *(_QWORD *)(v0 + 472);
    v313 = *(_QWORD *)(v0 + 456);
    v140 = *(_QWORD *)(v0 + 408);
    v141 = *(_QWORD *)(v0 + 416);
    v142 = *(_QWORD *)(v0 + 400);
    v143 = v110;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v309);
    _convertNSErrorToError(_:)(v110);

    swift_willThrow(v144);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v141, v142);
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v139, v313);
    v145 = v304;
LABEL_103:
    swift_bridgeObjectRelease(v145);
    v180 = *(_QWORD *)(v0 + 440);
    v179 = *(_QWORD *)(v0 + 448);
    v181 = *(_QWORD *)(v0 + 416);
    v182 = *(_QWORD *)(v0 + 392);
    v184 = *(_QWORD *)(v0 + 360);
    v183 = *(_QWORD *)(v0 + 368);
    v186 = *(_QWORD *)(v0 + 344);
    v185 = *(_QWORD *)(v0 + 352);
    v187 = *(_QWORD *)(v0 + 336);
    v247 = *(_QWORD *)(v0 + 328);
    v250 = *(_QWORD *)(v0 + 320);
    v253 = *(_QWORD *)(v0 + 312);
    v256 = *(_QWORD *)(v0 + 304);
    v258 = *(_QWORD *)(v0 + 296);
    v260 = *(_QWORD *)(v0 + 272);
    v264 = *(_QWORD *)(v0 + 264);
    v269 = *(_QWORD *)(v0 + 256);
    v273 = *(_QWORD *)(v0 + 232);
    v277 = *(_QWORD *)(v0 + 224);
    v281 = *(_QWORD *)(v0 + 216);
    v285 = *(_QWORD *)(v0 + 208);
    v288 = *(_QWORD *)(v0 + 200);
    v292 = *(_QWORD *)(v0 + 192);
    v296 = *(_QWORD *)(v0 + 184);
    v300 = *(_QWORD *)(v0 + 168);
    v303 = *(_QWORD *)(v0 + 160);
    v308 = *(_QWORD *)(v0 + 152);
    v310 = *(_QWORD *)(v0 + 144);
    v316 = *(_QWORD *)(v0 + 120);
    v321 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v179);
    swift_task_dealloc(v180);
    swift_task_dealloc(v181);
    swift_task_dealloc(v182);
    swift_task_dealloc(v183);
    swift_task_dealloc(v184);
    swift_task_dealloc(v185);
    swift_task_dealloc(v186);
    swift_task_dealloc(v187);
    swift_task_dealloc(v247);
    swift_task_dealloc(v250);
    swift_task_dealloc(v253);
    swift_task_dealloc(v256);
    swift_task_dealloc(v258);
    swift_task_dealloc(v260);
    swift_task_dealloc(v264);
    swift_task_dealloc(v269);
    swift_task_dealloc(v273);
    swift_task_dealloc(v277);
    swift_task_dealloc(v281);
    swift_task_dealloc(v285);
    swift_task_dealloc(v288);
    swift_task_dealloc(v292);
    swift_task_dealloc(v296);
    swift_task_dealloc(v300);
    swift_task_dealloc(v303);
    swift_task_dealloc(v308);
    swift_task_dealloc(v310);
    swift_task_dealloc(v316);
    swift_task_dealloc(v321);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  LODWORD(v272) = *(unsigned __int8 *)(v0 + 480);
  v111 = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
  v112 = sub_10003E3B8();
  v252 = (_QWORD *)v106;
  v280 = v111;
  v113 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v109, v106, v111, v112);
  v114 = v110;

  v16 = v19[2];
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v302 = v19;
  v76 = v304;
  if (!v16)
    goto LABEL_76;
  v115 = 0;
  v259 = (uint64_t *)(v0 + 48);
  v263 = (id *)(v0 + 40);
  v312 = *(_QWORD *)(v0 + 288);
  v291 = *(_QWORD *)(v0 + 104);
  v116 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v117 = _swiftEmptyArrayStorage;
  else
    v117 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  v249 = v117;
  v284 = v113 & 0xC000000000000001;
  v118 = v113 & 0xFFFFFFFFFFFFFF8;
  if (v113 < 0)
    v118 = v113;
  v276 = v118;
  while (1)
  {
    if (v115 >= v19[2])
    {
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
      goto LABEL_161;
    }
    sub_10002B1E8((uint64_t)v19+ ((*(unsigned __int8 *)(v312 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v312 + 80))+ *(_QWORD *)(v312 + 72) * v115, *(_QWORD *)(v0 + 320), type metadata accessor for AnyListEntityID);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      break;
    if (v115 == *(_QWORD *)(v116 + 16))
      goto LABEL_75;
LABEL_57:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
    {
      v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v115, _swiftEmptyArrayStorage);
    }
    else
    {
      if (v115 >= *(_QWORD *)(v116 + 16))
        goto LABEL_152;
      v119 = (id)_swiftEmptyArrayStorage[v115 + 4];
    }
    v120 = v119;
    v121 = *(_QWORD *)(v0 + 312);
    v122 = *(_QWORD *)(v0 + 120);
    v123 = *(int *)(v291 + 48);
    sub_10001F580(*(_QWORD *)(v0 + 320), v122, type metadata accessor for AnyListEntityID);
    *(_QWORD *)(v122 + v123) = v120;
    sub_10001F580(v122, v121, type metadata accessor for AnyListEntityID);
    if (v284)
    {
      v124 = __CocoaDictionary.lookup(_:)(v120, v276);
      if (v124)
      {
        v125 = v124;
        *v259 = v124;
        swift_unknownObjectRetain(v124);
        swift_dynamicCast(v263, v259, (char *)&type metadata for Swift.AnyObject + 8, v280, 7);
        v126 = *v263;
        swift_unknownObjectRelease(v125);
        if (v126)
        {
LABEL_67:
          if ((_DWORD)v272 == 1 && !objc_msgSend(v126, "isPinned"))
          {
            sub_10001F544(*(_QWORD *)(v0 + 312), type metadata accessor for AnyListEntityID);

          }
          else
          {
            v130 = *(_QWORD *)(v0 + 344);
            v305 = *(_QWORD *)(v0 + 312);
            v131 = v16;
            v132 = v113;
            v134 = *(_QWORD *)(v0 + 208);
            v133 = *(_QWORD *)(v0 + 216);
            sub_10002B1E8(v305, v130, type metadata accessor for AnyListEntityID);
            v326 = v280;
            v327 = &protocol witness table for REMList;
            v325[0] = v126;
            v268 = v126;
            sub_10035D87C(v325, v133);
            v135 = v133;
            v113 = v132;
            v16 = v131;
            sub_10001F580(v135, v134, type metadata accessor for AnyListEntity);
            v136 = swift_isUniquelyReferenced_nonNull_native(v76);
            v325[0] = v76;
            sub_1000985F8(v134, v130, v136);
            v76 = (uint64_t (*)(uint64_t))v325[0];
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_10001F544(v130, type metadata accessor for AnyListEntityID);

            sub_10001F544(v305, type metadata accessor for AnyListEntityID);
          }
          goto LABEL_53;
        }
      }
    }
    else if (*(_QWORD *)(v113 + 16))
    {
      v127 = v120;
      v128 = sub_1002AA364((uint64_t)v127);
      if ((v129 & 1) != 0)
      {
        v126 = *(id *)(*(_QWORD *)(v113 + 56) + 8 * v128);

        if (v126)
          goto LABEL_67;
      }
      else
      {

      }
    }
    sub_10001F544(*(_QWORD *)(v0 + 312), type metadata accessor for AnyListEntityID);

LABEL_53:
    ++v115;
    v19 = v302;
    v116 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
    if (v16 == v115)
      goto LABEL_76;
  }
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v137 = _CocoaArrayWrapper.endIndex.getter(v249);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v115 != v137)
    goto LABEL_57;
LABEL_75:
  sub_10001F544(*(_QWORD *)(v0 + 320), type metadata accessor for AnyListEntityID);
LABEL_76:
  swift_bridgeObjectRelease(v113);
  swift_bridgeObjectRelease(v19);
  v146 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  AppDependency.wrappedValue.getter(v146);
  v147 = *(void **)(v0 + 56);
  *(_QWORD *)(v0 + 64) = 0;
  v148 = objc_msgSend(v147, "fetchCustomSmartListsWithError:", v0 + 64);

  v149 = *(void **)(v0 + 64);
  if (!v148)
  {
    v172 = *(_QWORD *)(v0 + 464);
    v315 = *(_QWORD *)(v0 + 472);
    v173 = v76;
    v307 = *(_QWORD *)(v0 + 456);
    v175 = *(_QWORD *)(v0 + 408);
    v174 = *(_QWORD *)(v0 + 416);
    v176 = *(_QWORD *)(v0 + 400);
    v177 = v149;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v309);
    _convertNSErrorToError(_:)(v149);

    swift_willThrow(v178);
    (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v174, v176);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v315, v307);
    v145 = v173;
    goto LABEL_103;
  }
  v280 = sub_100005ED8(0, (unint64_t *)&qword_100645340, REMSmartList_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v148, v280);
  v150 = v149;

  if (!((unint64_t)v16 >> 62))
  {
    v151 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
    goto LABEL_79;
  }
LABEL_161:
  if (v16 < 0)
    v236 = v16;
  else
    v236 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v16, 2);
  v151 = _CocoaArrayWrapper.endIndex.getter(v236);
  swift_bridgeObjectRelease(v16);
LABEL_79:
  v152 = v309;
  v306 = v76;
  if (v151)
  {
    v153 = 0;
    v320 = v16 & 0xC000000000000001;
    v154 = (Swift::Int)_swiftEmptyDictionarySingleton;
    v314 = v16;
    v299 = (uint64_t (*)(uint64_t))v151;
    while (1)
    {
      if (v320)
        v156 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v153, v16);
      else
        v156 = *(id *)(v16 + 8 * v153 + 32);
      v157 = v156;
      v76 = (uint64_t (*)(uint64_t))(v153 + 1);
      if (__OFADD__(v153, 1))
        goto LABEL_154;
      v158 = objc_msgSend(v156, "objectID");
      if ((v154 & 0xC000000000000001) != 0)
      {
        if (v154 < 0)
          v159 = v154;
        else
          v159 = v154 & 0xFFFFFFFFFFFFFF8;
        v160 = __CocoaDictionary.count.getter(v159);
        if (__OFADD__(v160, 1))
          goto LABEL_156;
        v154 = sub_1004573DC(v159, v160 + 1, &qword_100654330, (unint64_t *)&qword_100645340, REMSmartList_ptr);
      }
      v16 = swift_isUniquelyReferenced_nonNull_native(v154);
      v325[0] = v154;
      v162 = sub_1002AA364((uint64_t)v158);
      v163 = *(_QWORD *)(v154 + 16);
      v164 = (v161 & 1) == 0;
      v165 = v163 + v164;
      if (__OFADD__(v163, v164))
        goto LABEL_155;
      v166 = v161;
      if (*(_QWORD *)(v154 + 24) >= v165)
      {
        if ((v16 & 1) == 0)
        {
          sub_1002B18AC();
          v154 = v325[0];
        }
      }
      else
      {
        sub_10045D208(v165, v16, &qword_100654330);
        v154 = v325[0];
        v167 = sub_1002AA364((uint64_t)v158);
        if ((v166 & 1) != (v168 & 1))
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v252);
        v162 = v167;
      }
      v16 = v314;
      if ((v166 & 1) != 0)
      {
        v155 = *(_QWORD *)(v154 + 56);

        *(_QWORD *)(v155 + 8 * v162) = v157;
      }
      else
      {
        *(_QWORD *)(v154 + 8 * (v162 >> 6) + 64) |= 1 << v162;
        *(_QWORD *)(*(_QWORD *)(v154 + 48) + 8 * v162) = v158;
        *(_QWORD *)(*(_QWORD *)(v154 + 56) + 8 * v162) = v157;
        v169 = *(_QWORD *)(v154 + 16);
        v99 = __OFADD__(v169, 1);
        v170 = v169 + 1;
        if (v99)
          goto LABEL_160;
        *(_QWORD *)(v154 + 16) = v170;
        v171 = v158;
      }
      swift_bridgeObjectRelease(0x8000000000000000);

      ++v153;
      v152 = v309;
      if (v76 == v299)
        goto LABEL_105;
    }
  }
  v154 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_105:
  swift_bridgeObjectRelease_n(v16, 2);
  v76 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
  v189 = v152[2];
  swift_bridgeObjectRetain(v152);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v322 = v189;
  if (v189)
  {
    v190 = 0;
    v265 = (uint64_t *)(v0 + 80);
    v270 = (id *)(v0 + 72);
    v317 = *(_QWORD *)(v0 + 288);
    v191 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v192 = _swiftEmptyArrayStorage;
    else
      v192 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v252 = v192;
    v293 = *(_QWORD *)(v0 + 104);
    v193 = v154 & 0xFFFFFFFFFFFFFF8;
    if (v154 < 0)
      v193 = v154;
    v278 = v193;
    do
    {
      if (v190 >= v152[2])
        goto LABEL_157;
      sub_10002B1E8((uint64_t)v152+ ((*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80))+ *(_QWORD *)(v317 + 72) * v190, *(_QWORD *)(v0 + 304), type metadata accessor for AnyListEntityID);
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v210 = _CocoaArrayWrapper.endIndex.getter(v252);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if (v190 == v210)
        {
LABEL_135:
          sub_10001F544(*(_QWORD *)(v0 + 304), type metadata accessor for AnyListEntityID);
          break;
        }
      }
      else if (v190 == *(_QWORD *)(v191 + 16))
      {
        goto LABEL_135;
      }
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v194 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v190, _swiftEmptyArrayStorage);
      }
      else
      {
        if (v190 >= *(_QWORD *)(v191 + 16))
          goto LABEL_158;
        v194 = (id)_swiftEmptyArrayStorage[v190 + 4];
      }
      v16 = (uint64_t)v194;
      v195 = *(_QWORD *)(v0 + 296);
      v196 = *(_QWORD *)(v0 + 112);
      v197 = *(int *)(v293 + 48);
      sub_10001F580(*(_QWORD *)(v0 + 304), v196, type metadata accessor for AnyListEntityID);
      *(_QWORD *)(v196 + v197) = v16;
      sub_10001F580(v196, v195, type metadata accessor for AnyListEntityID);
      if ((v154 & 0xC000000000000001) != 0)
      {
        v198 = __CocoaDictionary.lookup(_:)(v16, v278);
        if (v198)
        {
          v199 = v198;
          *v265 = v198;
          swift_unknownObjectRetain(v198);
          swift_dynamicCast(v270, v265, (char *)&type metadata for Swift.AnyObject + 8, v280, 7);
          v200 = *v270;
          swift_unknownObjectRelease(v199);
          if (v200)
          {
LABEL_128:
            if ((_DWORD)v272 == 1 && !objc_msgSend(v200, "isPinned"))
            {
              sub_10001F544(*(_QWORD *)(v0 + 296), type metadata accessor for AnyListEntityID);

            }
            else
            {
              v204 = *(_QWORD *)(v0 + 344);
              v205 = *(_QWORD *)(v0 + 296);
              v207 = *(_QWORD *)(v0 + 208);
              v206 = *(_QWORD *)(v0 + 216);
              sub_10002B1E8(v205, v204, type metadata accessor for AnyListEntityID);
              v326 = v280;
              v327 = &protocol witness table for REMSmartList;
              v325[0] = v200;
              v208 = v200;
              sub_10035D87C(v325, v206);
              sub_10001F580(v206, v207, type metadata accessor for AnyListEntity);
              v209 = swift_isUniquelyReferenced_nonNull_native(v306);
              v325[0] = v306;
              sub_1000985F8(v207, v204, v209);
              v306 = (uint64_t (*)(uint64_t))v325[0];
              swift_bridgeObjectRelease(0x8000000000000000);
              sub_10001F544(v204, type metadata accessor for AnyListEntityID);

              v76 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
              v152 = v309;

              sub_10001F544(v205, type metadata accessor for AnyListEntityID);
            }
            goto LABEL_114;
          }
        }
      }
      else if (*(_QWORD *)(v154 + 16))
      {
        v201 = (id)v16;
        v202 = sub_1002AA364((uint64_t)v201);
        if ((v203 & 1) != 0)
        {
          v200 = *(id *)(*(_QWORD *)(v154 + 56) + 8 * v202);

          if (v200)
            goto LABEL_128;
        }
        else
        {

        }
      }
      sub_10001F544(*(_QWORD *)(v0 + 296), type metadata accessor for AnyListEntityID);

LABEL_114:
      ++v190;
      v191 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
    }
    while (v322 != v190);
  }
  swift_bridgeObjectRelease(v154);
  swift_bridgeObjectRelease(v152);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v211 = v255;
  if (v255)
  {
    v212 = *(_QWORD *)(v0 + 288);
    v323 = *(_QWORD *)(v0 + 176);
    v213 = *(_QWORD *)(v0 + 88);
    v214 = v213 + ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80));
    v215 = *(_QWORD *)(v212 + 72);
    swift_bridgeObjectRetain(v213);
    v216 = _swiftEmptyArrayStorage;
    v217 = v306;
    do
    {
      if (*((_QWORD *)v217 + 2))
      {
        v219 = sub_1002AA8A0(v214);
        if ((v220 & 1) != 0)
        {
          v221 = *(_QWORD *)(v0 + 192);
          v222 = *(_QWORD *)(v0 + 200);
          v223 = *(_QWORD *)(v0 + 184);
          v224 = *(_QWORD *)(v323 + 72);
          sub_10002B1E8(*((_QWORD *)v217 + 7) + v224 * v219, v221, type metadata accessor for AnyListEntity);
          sub_10001F580(v221, v222, type metadata accessor for AnyListEntity);
          sub_10001F580(v222, v223, type metadata accessor for AnyListEntity);
          if ((swift_isUniquelyReferenced_nonNull_native(v216) & 1) == 0)
            v216 = (_QWORD *)sub_100455128(0, v216[2] + 1, 1, (unint64_t)v216, &qword_10065F660, type metadata accessor for AnyListEntity);
          v226 = v216[2];
          v225 = v216[3];
          if (v226 >= v225 >> 1)
            v216 = (_QWORD *)sub_100455128(v225 > 1, v226 + 1, 1, (unint64_t)v216, &qword_10065F660, type metadata accessor for AnyListEntity);
          v218 = *(_QWORD *)(v0 + 184);
          v216[2] = v226 + 1;
          sub_10001F580(v218, (uint64_t)v216+ ((*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80))+ v226 * v224, type metadata accessor for AnyListEntity);
          v217 = v306;
        }
      }
      v214 += v215;
      --v211;
    }
    while (v211);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  }
  else
  {
    v216 = _swiftEmptyArrayStorage;
  }
  v227 = *(_QWORD *)(v0 + 464);
  v228 = *(_QWORD *)(v0 + 472);
  v230 = *(_QWORD *)(v0 + 448);
  v229 = *(_QWORD *)(v0 + 456);
  v231 = *(_QWORD *)(v0 + 440);
  v233 = *(_QWORD *)(v0 + 408);
  v232 = *(_QWORD *)(v0 + 416);
  v234 = *(_QWORD *)(v0 + 400);
  v237 = *(_QWORD *)(v0 + 392);
  v238 = *(_QWORD *)(v0 + 368);
  v239 = *(_QWORD *)(v0 + 360);
  v240 = *(_QWORD *)(v0 + 352);
  v241 = *(_QWORD *)(v0 + 344);
  v242 = *(_QWORD *)(v0 + 336);
  v243 = *(_QWORD *)(v0 + 328);
  v244 = *(_QWORD *)(v0 + 320);
  v245 = *(_QWORD *)(v0 + 312);
  v246 = *(_QWORD *)(v0 + 304);
  v248 = *(_QWORD *)(v0 + 296);
  v251 = *(_QWORD *)(v0 + 272);
  v254 = *(_QWORD *)(v0 + 264);
  v257 = *(_QWORD *)(v0 + 256);
  v261 = *(_QWORD *)(v0 + 232);
  v266 = *(_QWORD *)(v0 + 224);
  v271 = *(_QWORD *)(v0 + 216);
  v274 = *(_QWORD *)(v0 + 208);
  v279 = *(_QWORD *)(v0 + 200);
  v282 = *(_QWORD *)(v0 + 192);
  v286 = *(_QWORD *)(v0 + 184);
  v289 = *(_QWORD *)(v0 + 168);
  v294 = *(_QWORD *)(v0 + 160);
  v297 = *(_QWORD *)(v0 + 152);
  v301 = *(_QWORD *)(v0 + 144);
  v318 = *(_QWORD *)(v0 + 120);
  v324 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v309);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v235 = swift_bridgeObjectRelease(v302);
  (*(void (**)(uint64_t, uint64_t, __n128))(v233 + 8))(v232, v234, v235);
  (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v228, v229);
  swift_bridgeObjectRelease(v306);
  swift_task_dealloc(v228);
  swift_task_dealloc(v230);
  swift_task_dealloc(v231);
  swift_task_dealloc(v232);
  swift_task_dealloc(v237);
  swift_task_dealloc(v238);
  swift_task_dealloc(v239);
  swift_task_dealloc(v240);
  swift_task_dealloc(v241);
  swift_task_dealloc(v242);
  swift_task_dealloc(v243);
  swift_task_dealloc(v244);
  swift_task_dealloc(v245);
  swift_task_dealloc(v246);
  swift_task_dealloc(v248);
  swift_task_dealloc(v251);
  swift_task_dealloc(v254);
  swift_task_dealloc(v257);
  swift_task_dealloc(v261);
  swift_task_dealloc(v266);
  swift_task_dealloc(v271);
  swift_task_dealloc(v274);
  swift_task_dealloc(v279);
  swift_task_dealloc(v282);
  swift_task_dealloc(v286);
  swift_task_dealloc(v289);
  swift_task_dealloc(v294);
  swift_task_dealloc(v297);
  swift_task_dealloc(v301);
  swift_task_dealloc(v318);
  swift_task_dealloc(v324);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v216);
}

uint64_t AnyListEntityQuery.suggestedEntities()(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Style;
  uint64_t v33;
  unint64_t v34;
  uint64_t Options;
  uint64_t v36;

  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 488) = a1;
  v3 = type metadata accessor for REMAccountsListDataView.Model.GroupChild(0);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMAccountsListDataView.Model.Group(0);
  *(_QWORD *)(v2 + 56) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMAccountsListDataView.Model.AccountChild(0);
  *(_QWORD *)(v2 + 80) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v2 + 88) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 96) = swift_task_alloc(v9);
  *(_QWORD *)(v2 + 104) = swift_task_alloc(v9);
  v10 = type metadata accessor for AnyListEntityLazyImage.Parameters(0);
  *(_QWORD *)(v2 + 112) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v2 + 120) = v11;
  *(_QWORD *)(v2 + 128) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100656DE8);
  *(_QWORD *)(v2 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100656DE0);
  *(_QWORD *)(v2 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AnyListEntityID(0);
  *(_QWORD *)(v2 + 152) = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 160) = swift_task_alloc(v15);
  *(_QWORD *)(v2 + 168) = swift_task_alloc(v15);
  v16 = sub_10002A750(&qword_10065F378);
  *(_QWORD *)(v2 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SmartListType(0);
  *(_QWORD *)(v2 + 184) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v2 + 192) = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 200) = swift_task_alloc(v19);
  *(_QWORD *)(v2 + 208) = swift_task_alloc(v19);
  *(_QWORD *)(v2 + 216) = swift_task_alloc(v19);
  v20 = sub_10002A750(&qword_10063D8E0);
  *(_QWORD *)(v2 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AnyListEntity(0);
  *(_QWORD *)(v2 + 232) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v2 + 240) = v22;
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 248) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 256) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 264) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 272) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 280) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 288) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 296) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 304) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 312) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 320) = swift_task_alloc(v23);
  *(_QWORD *)(v2 + 328) = swift_task_alloc(v23);
  v24 = type metadata accessor for REMAccountsListDataView.Model.PinnedList(0);
  *(_QWORD *)(v2 + 336) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v2 + 344) = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 352) = swift_task_alloc(v26);
  *(_QWORD *)(v2 + 360) = swift_task_alloc(v26);
  *(_QWORD *)(v2 + 368) = swift_task_alloc(v26);
  v27 = type metadata accessor for REMAccountsListDataView.Model(0);
  *(_QWORD *)(v2 + 376) = v27;
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v2 + 384) = v28;
  v29 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 392) = swift_task_alloc(v29);
  *(_QWORD *)(v2 + 400) = swift_task_alloc(v29);
  v30 = type metadata accessor for REMAccountsListDataView.Result(0);
  *(_QWORD *)(v2 + 408) = v30;
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v2 + 416) = v31;
  *(_QWORD *)(v2 + 424) = swift_task_alloc((*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Style = type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle(0);
  *(_QWORD *)(v2 + 432) = Style;
  v33 = *(_QWORD *)(Style - 8);
  *(_QWORD *)(v2 + 440) = v33;
  v34 = (*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 448) = swift_task_alloc(v34);
  *(_QWORD *)(v2 + 456) = swift_task_alloc(v34);
  Options = type metadata accessor for REMAccountsListDataView.FetchOptions(0);
  *(_QWORD *)(v2 + 464) = Options;
  v36 = *(_QWORD *)(Options - 8);
  *(_QWORD *)(v2 + 472) = v36;
  *(_QWORD *)(v2 + 480) = swift_task_alloc((*(_QWORD *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004533D4, 0, 0);
}

uint64_t sub_1004533D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __n128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  id *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  int EnumCaseMultiPayload;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  int64_t v133;
  uint64_t v134;
  int isUniquelyReferenced_nonNull_native;
  int64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, char *, uint64_t);
  int v155;
  void **v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  id *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  id *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  __n128 v195;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  void (*v214)(uint64_t, uint64_t);
  uint64_t v215;
  int v216;
  uint64_t v217;
  unsigned int v218;
  uint64_t v219;
  unsigned int v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(uint64_t, uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  void (*v250)(uint64_t, char *, uint64_t, __n128);
  int v251;
  uint64_t v252;
  int v253;
  int v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  void (*v270)(uint64_t, unint64_t, uint64_t);
  uint64_t v271;
  _QWORD *v272;
  _QWORD v273[3];
  uint64_t v274;
  void *v275;

  v1 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 432);
  v5 = *(unsigned __int8 *)(v0 + 488);
  v6 = enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 440) + 104);
  v7(v2, enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:), v4);
  v7(v3, v6, v4);
  REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)(v5 != 1, v2, 0, v3, 1, 1);
  type metadata accessor for REMAccountsListDataView(0);
  AppDependency.wrappedValue.getter(v8);
  v9 = *(void **)(v0 + 16);
  static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)(v9, 0, v1);
  v216 = v5;
  v10 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 384);
  LOBYTE(v5) = *(_BYTE *)(v0 + 488);

  v13 = ((uint64_t (*)(void))REMAccountsListDataView.Result.model.getter)();
  v14 = REMAccountsListDataView.Model.orderedPinnedLists.getter(v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v16 = v15(v10, v11);
  v17 = REMAccountsListDataView.Result.model.getter(v16);
  v18 = REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter(v17);
  v214 = (void (*)(uint64_t, uint64_t))v15;
  v15(v10, v11);
  swift_retain();
  v19 = sub_1004605C4(v14, v5, v18);
  swift_bridgeObjectRelease(v18);
  swift_release();
  swift_bridgeObjectRelease(v14);
  v20 = *((_QWORD *)v19 + 2);
  if (v20)
  {
    v21 = *(_QWORD *)(v0 + 344);
    v259 = *(_QWORD *)(v0 + 240);
    v247 = *(int **)(v0 + 232);
    v22 = *(_QWORD *)(v0 + 192);
    v226 = *(_QWORD *)(v0 + 120);
    v23 = &v19[(*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)];
    v253 = enum case for REMAccountsListDataView.Model.PinnedList.predefinedSmartList(_:);
    v228 = enum case for REMAccountsListDataView.Model.PinnedList.list(_:);
    v222 = enum case for REMAccountsListDataView.Model.PinnedList.customSmartList(_:);
    v220 = enum case for SmartListType.today(_:);
    v224 = enum case for AnyListEntityLazyImage.Parameters.list(_:);
    v218 = enum case for AnyListEntityLazyImage.Parameters.smartList(_:);
    v244 = *(_QWORD *)(v21 + 72);
    v250 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v21 + 16);
    v212 = v19;
    v24 = swift_bridgeObjectRetain(v19);
    v25 = _swiftEmptyArrayStorage;
    v262 = v22;
    v265 = v21;
    do
    {
      v27 = *(_QWORD *)(v0 + 360);
      v28 = *(_QWORD *)(v0 + 368);
      v29 = *(_QWORD *)(v0 + 352);
      v30 = *(_QWORD *)(v0 + 336);
      v250(v28, v23, v30, v24);
      ((void (*)(uint64_t, uint64_t, uint64_t))v250)(v27, v28, v30);
      ((void (*)(uint64_t, uint64_t, uint64_t))v250)(v29, v27, v30);
      v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v265 + 88))(v29, v30);
      v268 = v23;
      if (v31 == v253)
      {
        v32 = *(id **)(v0 + 352);
        v34 = *(_QWORD *)(v0 + 176);
        v33 = *(_QWORD *)(v0 + 184);
        (*(void (**)(id *, _QWORD))(v265 + 96))(v32, *(_QWORD *)(v0 + 336));
        v35 = *v32;
        SmartListType.init(remSmartListType:)();
        v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v34, 1, v33);
        v37 = *(_QWORD *)(v0 + 216);
        v39 = *(_QWORD *)(v0 + 176);
        v38 = *(_QWORD *)(v0 + 184);
        v256 = v25;
        v238 = v35;
        v241 = v20;
        if (v36 == 1)
        {
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v37, v220, v38);
          sub_1000073A0(v39, &qword_10065F378);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v37, v39, v38);
        }
        v46 = *(_QWORD *)(v0 + 320);
        v47 = *(_QWORD *)(v0 + 208);
        v48 = *(_QWORD *)(v0 + 184);
        v49 = *(_QWORD *)(v0 + 168);
        v234 = *(_QWORD *)(v0 + 160);
        v50 = *(_QWORD *)(v0 + 144);
        v51 = *(_QWORD *)(v0 + 152);
        v52 = *(_QWORD *)(v0 + 136);
        v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
        v53(v47, *(_QWORD *)(v0 + 216), v48);
        v231 = v53;
        v53(v49, v47, v48);
        v54 = swift_storeEnumTagMultiPayload(v49, v51, 0);
        v55 = SmartListType.title.getter(v54);
        v57 = v56;
        v58 = type metadata accessor for ListBadgeEntity(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v50, 1, 1, v58);
        v59 = type metadata accessor for ColorEntity(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v52, 1, 1, v59);
        sub_10002B1E8(v49, v46, type metadata accessor for AnyListEntityID);
        v60 = (uint64_t *)(v46 + v247[5]);
        *v60 = v55;
        v60[1] = v57;
        sub_10000735C(v50, v46 + v247[6], &qword_100656DE0);
        sub_10000735C(v52, v46 + v247[7], &qword_100656DE8);
        *(_BYTE *)(v46 + v247[8]) = 2;
        sub_10002B1E8(v49, v234, type metadata accessor for AnyListEntityID);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v234, v51);
        if (EnumCaseMultiPayload)
        {
          v235 = *(_QWORD *)(v0 + 320);
          if (EnumCaseMultiPayload == 1)
          {
            v62 = *(_QWORD *)(v0 + 160);
            v63 = *(_QWORD *)(v0 + 168);
            v65 = *(_QWORD *)(v0 + 136);
            v64 = *(_QWORD *)(v0 + 144);
            v66 = *(_BYTE **)(v0 + 128);
            v67 = *(_QWORD *)(v0 + 112);
            v68 = (int *)sub_10002A750(&qword_100656DF0);
            v69 = (uint64_t)&v66[v68[12]];
            v70 = (uint64_t)&v66[v68[16]];
            v71 = v68[20];
            *v66 = 1;
            sub_10000735C(v64, v69, &qword_100656DE0);
            sub_10000735C(v65, v70, &qword_100656DE8);
            v66[v71] = 2;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v226 + 104))(v66, v224, v67);
            v72 = type metadata accessor for AnyListEntityLazyImage(0);
            swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
            v73 = AnyListEntityLazyImage.init(for:)(v66);
            sub_1000073A0(v65, &qword_100656DE8);
            sub_1000073A0(v64, &qword_100656DE0);
            sub_10001F544(v63, type metadata accessor for AnyListEntityID);
            *(_QWORD *)(v235 + v247[9]) = v73;
            v74 = v62;
          }
          else
          {
            v92 = *(_QWORD *)(v0 + 160);
            v91 = *(_QWORD *)(v0 + 168);
            v94 = *(_QWORD *)(v0 + 136);
            v93 = *(_QWORD *)(v0 + 144);
            v95 = *(_BYTE **)(v0 + 128);
            v96 = *(_QWORD *)(v0 + 112);
            v97 = (int *)sub_10002A750(&qword_100656DF0);
            v98 = (uint64_t)&v95[v97[12]];
            v99 = (uint64_t)&v95[v97[16]];
            v100 = v97[20];
            *v95 = 0;
            sub_10000735C(v93, v98, &qword_100656DE0);
            sub_10000735C(v94, v99, &qword_100656DE8);
            v95[v100] = 2;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v226 + 104))(v95, v224, v96);
            v101 = type metadata accessor for AnyListEntityLazyImage(0);
            swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
            v102 = AnyListEntityLazyImage.init(for:)(v95);
            sub_1000073A0(v94, &qword_100656DE8);
            sub_1000073A0(v93, &qword_100656DE0);
            sub_10001F544(v91, type metadata accessor for AnyListEntityID);
            *(_QWORD *)(v235 + v247[9]) = v102;
            v74 = v92;
          }
          sub_10001F544(v74, type metadata accessor for AnyListEntityID);
          v88 = v262;
        }
        else
        {
          v80 = *(_QWORD *)(v0 + 320);
          v81 = *(_QWORD *)(v0 + 200);
          v82 = *(_QWORD *)(v0 + 184);
          v83 = *(_QWORD *)(v0 + 168);
          v85 = *(_QWORD *)(v0 + 136);
          v84 = *(_QWORD *)(v0 + 144);
          v86 = *(_QWORD *)(v0 + 128);
          v87 = *(_QWORD *)(v0 + 112);
          v88 = v262;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v262 + 32))(v81, *(_QWORD *)(v0 + 160), v82);
          v231(v86, v81, v82);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v226 + 104))(v86, v218, v87);
          v89 = type metadata accessor for AnyListEntityLazyImage(0);
          swift_allocObject(v89, *(unsigned int *)(v89 + 48), *(unsigned __int16 *)(v89 + 52));
          v90 = AnyListEntityLazyImage.init(for:)(v86);
          sub_1000073A0(v85, &qword_100656DE8);
          sub_1000073A0(v84, &qword_100656DE0);
          sub_10001F544(v83, type metadata accessor for AnyListEntityID);
          (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v81, v82);
          *(_QWORD *)(v80 + v247[9]) = v90;
        }
        v103 = *(_QWORD *)(v0 + 360);
        v104 = *(_QWORD *)(v0 + 336);
        v105 = *(_QWORD *)(v0 + 216);
        v106 = *(_QWORD *)(v0 + 184);
        v107 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
        v107(*(_QWORD *)(v0 + 208), v106);

        v45 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
        v45(v103, v104);
        v107(v105, v106);
        v25 = v256;
        v20 = v241;
      }
      else if (v31 == v228)
      {
        v40 = *(uint64_t **)(v0 + 352);
        v41 = *(_QWORD *)(v0 + 360);
        v42 = *(_QWORD *)(v0 + 336);
        v43 = *(_QWORD *)(v0 + 320);
        (*(void (**)(uint64_t *, uint64_t))(v265 + 96))(v40, v42);
        v44 = *v40;
        v274 = type metadata accessor for REMList_Codable(0);
        v275 = &protocol witness table for REMList;
        v273[0] = v44;
        sub_10035D87C(v273, v43);
        v45 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
        v45(v41, v42);
      }
      else
      {
        if (v31 != v222)
          return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 336));
        v75 = *(uint64_t **)(v0 + 352);
        v76 = *(_QWORD *)(v0 + 360);
        v77 = *(_QWORD *)(v0 + 336);
        v78 = *(_QWORD *)(v0 + 320);
        (*(void (**)(uint64_t *, uint64_t))(v265 + 96))(v75, v77);
        v79 = *v75;
        v274 = type metadata accessor for REMSmartList_Codable(0);
        v275 = &protocol witness table for REMSmartList;
        v273[0] = v79;
        sub_10035D87C(v273, v78);
        v45 = *(void (**)(uint64_t, uint64_t))(v265 + 8);
        v45(v76, v77);
      }
      v108 = *(_QWORD *)(v0 + 368);
      v109 = *(_QWORD *)(v0 + 336);
      v111 = *(_QWORD *)(v0 + 224);
      v110 = *(_QWORD *)(v0 + 232);
      sub_10001F580(*(_QWORD *)(v0 + 320), v111, type metadata accessor for AnyListEntity);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v259 + 56))(v111, 0, 1, v110);
      v45(v108, v109);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v259 + 48))(v111, 1, v110) == 1)
      {
        sub_1000073A0(*(_QWORD *)(v0 + 224), &qword_10063D8E0);
        v22 = v262;
        v26 = v268;
      }
      else
      {
        v112 = *(_QWORD *)(v0 + 328);
        v113 = *(_QWORD *)(v0 + 312);
        sub_10001F580(*(_QWORD *)(v0 + 224), v112, type metadata accessor for AnyListEntity);
        sub_10001F580(v112, v113, type metadata accessor for AnyListEntity);
        v22 = v262;
        v26 = v268;
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
          v25 = (_QWORD *)sub_100455128(0, v25[2] + 1, 1, (unint64_t)v25, &qword_10065F660, type metadata accessor for AnyListEntity);
        v115 = v25[2];
        v114 = v25[3];
        if (v115 >= v114 >> 1)
          v25 = (_QWORD *)sub_100455128(v114 > 1, v115 + 1, 1, (unint64_t)v25, &qword_10065F660, type metadata accessor for AnyListEntity);
        v116 = *(_QWORD *)(v0 + 312);
        v25[2] = v115 + 1;
        sub_10001F580(v116, (uint64_t)v25+ ((*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80))+ *(_QWORD *)(v259 + 72) * v115, type metadata accessor for AnyListEntity);
      }
      v23 = &v26[v244];
      --v20;
    }
    while (v20);
    v117 = swift_bridgeObjectRelease_n(v212, 2);
  }
  else
  {
    v118 = swift_bridgeObjectRelease(v19);
    v25 = _swiftEmptyArrayStorage;
  }
  v272 = v25;
  v257 = v25;
  if (v216 == 1)
    goto LABEL_96;
  v119 = *(_QWORD *)(v0 + 392);
  v120 = *(_QWORD *)(v0 + 376);
  v121 = REMAccountsListDataView.Result.model.getter(v117);
  v122 = REMAccountsListDataView.Model.accounts.getter(v121);
  v214(v119, v120);
  v123 = *(_QWORD *)(v122 + 16);
  if (!v123)
  {
    swift_bridgeObjectRelease(v122);
    v129 = _swiftEmptyArrayStorage;
LABEL_53:
    v248 = v129[2];
    if (!v248)
    {
      v118 = swift_bridgeObjectRelease(v129);
LABEL_96:
      v197 = *(_QWORD *)(v0 + 472);
      v198 = *(_QWORD *)(v0 + 480);
      v200 = *(_QWORD *)(v0 + 456);
      v199 = *(_QWORD *)(v0 + 464);
      v201 = *(_QWORD *)(v0 + 448);
      v202 = *(_QWORD *)(v0 + 424);
      v203 = *(_QWORD *)(v0 + 400);
      v204 = *(_QWORD *)(v0 + 392);
      v205 = *(_QWORD *)(v0 + 368);
      v206 = *(_QWORD *)(v0 + 360);
      v207 = *(_QWORD *)(v0 + 352);
      v208 = *(_QWORD *)(v0 + 328);
      v209 = *(_QWORD *)(v0 + 320);
      v210 = *(_QWORD *)(v0 + 312);
      v211 = *(_QWORD *)(v0 + 304);
      v213 = *(_QWORD *)(v0 + 296);
      v215 = *(_QWORD *)(v0 + 288);
      v217 = *(_QWORD *)(v0 + 280);
      v219 = *(_QWORD *)(v0 + 272);
      v221 = *(_QWORD *)(v0 + 264);
      v223 = *(_QWORD *)(v0 + 256);
      v225 = *(_QWORD *)(v0 + 248);
      v227 = *(_QWORD *)(v0 + 224);
      v230 = *(_QWORD *)(v0 + 216);
      v233 = *(_QWORD *)(v0 + 208);
      v237 = *(_QWORD *)(v0 + 200);
      v240 = *(_QWORD *)(v0 + 176);
      v243 = *(_QWORD *)(v0 + 144);
      v246 = *(_QWORD *)(v0 + 168);
      v249 = *(_QWORD *)(v0 + 136);
      v252 = *(_QWORD *)(v0 + 160);
      v255 = *(_QWORD *)(v0 + 128);
      v261 = *(_QWORD *)(v0 + 104);
      v264 = *(_QWORD *)(v0 + 96);
      v267 = *(_QWORD *)(v0 + 72);
      v271 = *(_QWORD *)(v0 + 48);
      (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 416) + 8))(v202, *(_QWORD *)(v0 + 408), v118);
      (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v198, v199);
      swift_task_dealloc(v198);
      swift_task_dealloc(v200);
      swift_task_dealloc(v201);
      swift_task_dealloc(v202);
      swift_task_dealloc(v203);
      swift_task_dealloc(v204);
      swift_task_dealloc(v205);
      swift_task_dealloc(v206);
      swift_task_dealloc(v207);
      swift_task_dealloc(v208);
      swift_task_dealloc(v209);
      swift_task_dealloc(v210);
      swift_task_dealloc(v211);
      swift_task_dealloc(v213);
      swift_task_dealloc(v215);
      swift_task_dealloc(v217);
      swift_task_dealloc(v219);
      swift_task_dealloc(v221);
      swift_task_dealloc(v223);
      swift_task_dealloc(v225);
      swift_task_dealloc(v227);
      swift_task_dealloc(v230);
      swift_task_dealloc(v233);
      swift_task_dealloc(v237);
      swift_task_dealloc(v240);
      swift_task_dealloc(v246);
      swift_task_dealloc(v252);
      swift_task_dealloc(v243);
      swift_task_dealloc(v249);
      swift_task_dealloc(v255);
      swift_task_dealloc(v261);
      swift_task_dealloc(v264);
      swift_task_dealloc(v267);
      swift_task_dealloc(v271);
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v257);
    }
    v145 = 0;
    v260 = *(_QWORD *)(v0 + 240);
    v146 = *(_QWORD *)(v0 + 88);
    v239 = *(_QWORD *)(v0 + 64);
    v258 = *(_QWORD *)(v0 + 40);
    v147 = (char *)v129
         + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    v251 = enum case for REMAccountsListDataView.Model.AccountChild.list(_:);
    v245 = enum case for REMAccountsListDataView.Model.AccountChild.customSmartList(_:);
    v236 = enum case for REMAccountsListDataView.Model.AccountChild.group(_:);
    v263 = enum case for REMAccountsListDataView.Model.GroupChild.list(_:);
    v254 = enum case for REMAccountsListDataView.Model.GroupChild.customSmartList(_:);
    v242 = v147;
    v229 = v146;
    while (1)
    {
      if (v145 >= v129[2])
        goto LABEL_102;
      v152 = *(_QWORD *)(v0 + 96);
      v151 = *(char **)(v0 + 104);
      v153 = *(_QWORD *)(v0 + 80);
      v154 = *(void (**)(uint64_t, char *, uint64_t))(v146 + 16);
      v154((uint64_t)v151, &v147[*(_QWORD *)(v146 + 72) * v145], v153);
      v154(v152, v151, v153);
      v155 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 88))(v152, v153);
      if (v155 == v251)
      {
        v156 = *(void ***)(v0 + 96);
        (*(void (**)(void **, _QWORD))(v146 + 96))(v156, *(_QWORD *)(v0 + 80));
        v157 = *v156;
        if ((objc_msgSend(v157, "isPinned") & 1) == 0)
        {
          v159 = *(_QWORD *)(v0 + 296);
          v158 = *(_QWORD *)(v0 + 304);
          v274 = type metadata accessor for REMList_Codable(0);
          v275 = &protocol witness table for REMList;
          v273[0] = v157;
          v160 = v157;
          sub_10035D87C(v273, v158);
          sub_10002B1E8(v158, v159, type metadata accessor for AnyListEntity);
          v148 = (_QWORD *)sub_100455128(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, &qword_10065F660, type metadata accessor for AnyListEntity);
          v162 = v148[2];
          v161 = v148[3];
          v163 = v162 + 1;
          if (v162 >= v161 >> 1)
            v148 = (_QWORD *)sub_100455128(v161 > 1, v162 + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
          v164 = *(_QWORD *)(v0 + 296);
          v165 = *(_QWORD *)(v0 + 304);
LABEL_68:
          v148[2] = v163;
          sub_10001F580(v164, (uint64_t)v148+ ((*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80))+ *(_QWORD *)(v260 + 72) * v162, type metadata accessor for AnyListEntity);

          sub_10001F544(v165, type metadata accessor for AnyListEntity);
          v147 = v242;
          goto LABEL_56;
        }
      }
      else
      {
        if (v155 != v245)
        {
          if (v155 != v236)
            return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 80));
          v170 = *(_QWORD *)(v0 + 96);
          v171 = *(_QWORD *)(v0 + 72);
          v172 = *(_QWORD *)(v0 + 56);
          (*(void (**)(uint64_t, _QWORD))(v146 + 96))(v170, *(_QWORD *)(v0 + 80));
          v173 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v239 + 32))(v171, v170, v172);
          v174 = REMAccountsListDataView.Model.Group.lists.getter(v173);
          v175 = *(_QWORD *)(v174 + 16);
          if (!v175)
          {
            v195 = swift_bridgeObjectRelease(v174);
            v148 = _swiftEmptyArrayStorage;
LABEL_91:
            (*(void (**)(_QWORD, _QWORD, __n128))(v239 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56), v195);
            goto LABEL_56;
          }
          v176 = v258;
          v232 = v174;
          v177 = v174 + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
          v266 = *(_QWORD *)(v258 + 72);
          v270 = *(void (**)(uint64_t, unint64_t, uint64_t))(v258 + 16);
          v148 = _swiftEmptyArrayStorage;
          while (2)
          {
            v178 = *(_QWORD *)(v0 + 48);
            v179 = *(_QWORD *)(v0 + 32);
            v270(v178, v177, v179);
            v180 = (*(uint64_t (**)(uint64_t, uint64_t))(v176 + 88))(v178, v179);
            if (v180 == v263)
            {
              v181 = *(id **)(v0 + 48);
              (*(void (**)(id *, _QWORD))(v176 + 96))(v181, *(_QWORD *)(v0 + 32));
              v182 = *v181;
              if ((objc_msgSend(v182, "isPinned") & 1) == 0)
              {
                v183 = *(_QWORD *)(v0 + 264);
                v184 = *(_QWORD *)(v0 + 272);
                v274 = type metadata accessor for REMList_Codable(0);
                v275 = &protocol witness table for REMList;
                v273[0] = v182;
                v185 = v182;
                sub_10035D87C(v273, v184);
                sub_10002B1E8(v184, v183, type metadata accessor for AnyListEntity);
                if ((swift_isUniquelyReferenced_nonNull_native(v148) & 1) == 0)
                  v148 = (_QWORD *)sub_100455128(0, v148[2] + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
                v187 = v148[2];
                v186 = v148[3];
                v188 = v187 + 1;
                if (v187 >= v186 >> 1)
                  v148 = (_QWORD *)sub_100455128(v186 > 1, v187 + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
                v189 = *(_QWORD *)(v0 + 264);
                v190 = *(_QWORD *)(v0 + 272);
                goto LABEL_88;
              }
LABEL_72:

            }
            else
            {
              if (v180 != v254)
                return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 32));
              v191 = *(id **)(v0 + 48);
              (*(void (**)(id *, _QWORD))(v176 + 96))(v191, *(_QWORD *)(v0 + 32));
              v182 = *v191;
              if ((objc_msgSend(*v191, "isPinned") & 1) != 0)
                goto LABEL_72;
              v193 = *(_QWORD *)(v0 + 248);
              v192 = *(_QWORD *)(v0 + 256);
              v274 = type metadata accessor for REMSmartList_Codable(0);
              v275 = &protocol witness table for REMSmartList;
              v273[0] = v182;
              v185 = v182;
              sub_10035D87C(v273, v192);
              sub_10002B1E8(v192, v193, type metadata accessor for AnyListEntity);
              if ((swift_isUniquelyReferenced_nonNull_native(v148) & 1) == 0)
                v148 = (_QWORD *)sub_100455128(0, v148[2] + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
              v187 = v148[2];
              v194 = v148[3];
              v188 = v187 + 1;
              if (v187 >= v194 >> 1)
                v148 = (_QWORD *)sub_100455128(v194 > 1, v187 + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
              v189 = *(_QWORD *)(v0 + 248);
              v190 = *(_QWORD *)(v0 + 256);
LABEL_88:
              v148[2] = v188;
              sub_10001F580(v189, (uint64_t)v148+ ((*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80))+ *(_QWORD *)(v260 + 72) * v187, type metadata accessor for AnyListEntity);

              sub_10001F544(v190, type metadata accessor for AnyListEntity);
              v176 = v258;
            }
            v177 += v266;
            if (!--v175)
            {
              v195 = swift_bridgeObjectRelease(v232);
              v146 = v229;
              v147 = v242;
              goto LABEL_91;
            }
            continue;
          }
        }
        v166 = *(void ***)(v0 + 96);
        (*(void (**)(void **, _QWORD))(v146 + 96))(v166, *(_QWORD *)(v0 + 80));
        v157 = *v166;
        if ((objc_msgSend(v157, "isPinned") & 1) == 0)
        {
          v168 = *(_QWORD *)(v0 + 280);
          v167 = *(_QWORD *)(v0 + 288);
          v274 = type metadata accessor for REMSmartList_Codable(0);
          v275 = &protocol witness table for REMSmartList;
          v273[0] = v157;
          v160 = v157;
          sub_10035D87C(v273, v167);
          sub_10002B1E8(v167, v168, type metadata accessor for AnyListEntity);
          v148 = (_QWORD *)sub_100455128(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, &qword_10065F660, type metadata accessor for AnyListEntity);
          v162 = v148[2];
          v169 = v148[3];
          v163 = v162 + 1;
          if (v162 >= v169 >> 1)
            v148 = (_QWORD *)sub_100455128(v169 > 1, v162 + 1, 1, (unint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
          v164 = *(_QWORD *)(v0 + 280);
          v165 = *(_QWORD *)(v0 + 288);
          goto LABEL_68;
        }
      }

      v148 = _swiftEmptyArrayStorage;
LABEL_56:
      ++v145;
      v149 = *(_QWORD *)(v0 + 104);
      v150 = *(_QWORD *)(v0 + 80);
      sub_100450F20((uint64_t)v148, &qword_10065F660, type metadata accessor for AnyListEntity);
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v149, v150);
      if (v145 == v248)
      {
        v118 = swift_bridgeObjectRelease(v129);
        v257 = v272;
        goto LABEL_96;
      }
    }
  }
  v124 = *(_QWORD *)(v0 + 88);
  v125 = *(_QWORD *)(type metadata accessor for REMAccountsListDataView.Model.Account(0) - 8);
  v126 = v122 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  v127 = *(_QWORD *)(v125 + 72);
  v269 = v122;
  swift_bridgeObjectRetain(v122);
  v129 = _swiftEmptyArrayStorage;
  while (1)
  {
    v130 = REMAccountsListDataView.Model.Account.children.getter(v128);
    v131 = *(_QWORD *)(v130 + 16);
    v132 = v129[2];
    v133 = v132 + v131;
    if (__OFADD__(v132, v131))
      goto LABEL_99;
    v134 = v130;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v129);
    if (isUniquelyReferenced_nonNull_native && v133 <= v129[3] >> 1)
    {
      if (*(_QWORD *)(v134 + 16))
        goto LABEL_42;
    }
    else
    {
      if (v132 <= v133)
        v136 = v132 + v131;
      else
        v136 = v132;
      v129 = (_QWORD *)sub_100455128(isUniquelyReferenced_nonNull_native, v136, 1, (unint64_t)v129, &qword_10065F658, (uint64_t (*)(_QWORD))&type metadata accessor for REMAccountsListDataView.Model.AccountChild);
      if (*(_QWORD *)(v134 + 16))
      {
LABEL_42:
        v137 = v129[2];
        if ((v129[3] >> 1) - v137 < v131)
          goto LABEL_100;
        v138 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        v139 = *(_QWORD *)(v124 + 72);
        v140 = (char *)v129 + v138 + v139 * v137;
        if (v134 + v138 < (unint64_t)&v140[v139 * v131] && (unint64_t)v140 < v134 + v138 + v139 * v131)
          return _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
        swift_arrayInitWithCopy(v140);
        if (v131)
        {
          v142 = v129[2];
          v143 = __OFADD__(v142, v131);
          v144 = v142 + v131;
          if (v143)
            goto LABEL_101;
          v129[2] = v144;
        }
        goto LABEL_32;
      }
    }
    if (v131)
      break;
LABEL_32:
    swift_bridgeObjectRelease(v134);
    v126 += v127;
    if (!--v123)
    {
      swift_bridgeObjectRelease_n(v269, 2);
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
  return _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
}

uint64_t sub_100454AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v14[5];

  v2 = type metadata accessor for AppIntentsDependencyKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14[-1] - v7;
  sub_10002A750(&qword_10063D900);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, enum case for AppIntentsDependencyKey.remStore(_:), v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v9 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(v14, v5, v2, v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v10 = type metadata accessor for AppDependencyManager(0);
  v11 = static AppDependencyManager.shared.getter(v10);
  result = AppDependency.__allocating_init(key:manager:)(v14, v11);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100454BE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_BYTE *)v1;
  v6 = (_QWORD *)swift_task_alloc(dword_10065F364);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10041E35C;
  return AnyListEntityQuery.entities(for:)(a1, v5, v4);
}

uint64_t sub_100454C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10065F374);
  *(_QWORD *)(v2 + 24) = v5;
  *v5 = v2;
  v5[1] = sub_100454CA0;
  return AnyListEntityQuery.suggestedEntities()(v4, v3);
}

uint64_t sub_100454CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100454CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10035C808();
  *v5 = v2;
  v5[1] = sub_10004A08C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100454D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10004A08C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

_QWORD *sub_100454DDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F418);
      v11 = (_QWORD *)swift_allocObject(v10, 3 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 3);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + 3 * v8 + 32))
          memmove(v13, a4 + 4, 3 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10045F92C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100454EEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, (uint64_t *)&unk_1006469C0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

_QWORD *sub_100454F00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  int64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10063F5A8);
      v11 = (_QWORD *)swift_allocObject(v10, 2 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 31;
      v11[2] = v8;
      v11[3] = v13 & 0xFFFFFFFFFFFFFFFELL;
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= (_QWORD *)((char *)a4 + 2 * v8 + 32))
          memmove(v14, a4 + 4, 2 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10045FB04(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100455008(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F420);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10045FA14(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100455114(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F428, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
}

uint64_t sub_100455128(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10002A750(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23, v25);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100461AE4(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_100455334(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_1006592F0, &qword_100658908);
}

uint64_t sub_100455348(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_1006452D8, type metadata accessor for TTRRemindersListTreeViewModel.Section);
}

uint64_t sub_10045535C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F460, &qword_10063F658);
}

uint64_t sub_100455370(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10002A750(a5);
  v14 = *(_QWORD *)(sub_10002A750(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10002A750(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23, v25);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004617D4(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_10045557C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F468);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10045FCE0(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100455688(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F470, qword_100642230);
}

_QWORD *sub_10045569C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F478);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10045FCE0(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1004557A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F4C0, &qword_10065D8B0);
}

_QWORD *sub_1004557BC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F458, &qword_10065F3E0);
}

uint64_t sub_1004557D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, (uint64_t *)&unk_100650540, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

_QWORD *sub_1004557E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F4B8, &qword_10065F3E0);
}

_QWORD *sub_1004557F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10002A750(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v11 + 4])
          memmove(v17, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004602CC(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100455910(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F4B0, &qword_10065F3E0);
}

uint64_t sub_100455924(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F4F0, &qword_1006476A0);
}

uint64_t sub_100455938(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F640, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
}

_QWORD *sub_10045594C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065A388);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10045FDC8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100455A70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_100659440, type metadata accessor for TTRRemindersListUncommittedReminder);
}

uint64_t sub_100455A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F638, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
}

uint64_t sub_100455A98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F630, &qword_100654860);
}

uint64_t sub_100455AAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_1006592E8, &qword_1006588F0);
}

uint64_t sub_100455AC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F510, type metadata accessor for TTRIRemindersBoardDragItemInfo);
}

uint64_t sub_100455AD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F568, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
}

_QWORD *sub_100455AE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100455B24(a1, a2, a3, a4, &qword_100659368, &qword_100647B38);
}

_QWORD *sub_100455AFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_100647B08, &qword_10065F3E0);
}

_QWORD *sub_100455B10(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100455B24(a1, a2, a3, a4, &qword_10065F3E8, &qword_1006445D8);
}

_QWORD *sub_100455B24(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10002A750(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10045FED4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100455C50(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F3D8, &qword_10065F3E0);
}

_QWORD *sub_100455C64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F618, &qword_10065F620);
}

uint64_t sub_100455C78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F560, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
}

_QWORD *sub_100455C8C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100455DFC(a1, a2, a3, a4, &qword_10065F588);
}

_QWORD *sub_100455CA0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F3C8, &qword_10065F3D0);
}

uint64_t sub_100455CB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F4E8, (uint64_t *)&unk_100654930);
}

_QWORD *sub_100455CC8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_1006487F0);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100461038(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100455DE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100455DFC(a1, a2, a3, a4, &qword_100659310);
}

_QWORD *sub_100455DFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10002A750(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 17;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 4);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v9 + 4])
          memmove(v15, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004619F8(0, v9, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100455F14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_1006593B8);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100460C68(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100456030(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F628, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
}

_QWORD *sub_100456044(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F610);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10045FFDC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100456150(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F528, &qword_100654870);
}

uint64_t sub_100456164(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F530, &qword_10064A838);
}

uint64_t sub_100456178(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_1006592F8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
}

uint64_t sub_10045618C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_100642EB0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_1004561A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F520, &qword_10064A828);
}

uint64_t sub_1004561B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F518, &qword_100658970);
}

_QWORD *sub_1004561C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F440, &qword_10065D8A8);
}

uint64_t sub_1004561DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_100646A70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

_QWORD *sub_1004561F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_1006531E8);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100460D5C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456310(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F480);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004600CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100456438(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_100659418, &qword_100641008);
}

_QWORD *sub_10045644C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_100659398);
      v11 = (_QWORD *)swift_allocObject(v10, 112 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 112);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[14 * v8 + 4])
          memmove(v13, a4 + 4, 112 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100460E50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456570(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F5A8);
      v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v8 + 4])
          memmove(v13, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100460F44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456694(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F5A0);
      v11 = (_QWORD *)swift_allocObject(v10, 112 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 112);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[14 * v8 + 4])
          memmove(v13, a4 + 4, 112 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004601D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1004567BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_100659478);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10046112C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1004568C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100456DE4(a1, a2, a3, a4, &qword_10065F580);
}

_QWORD *sub_1004568D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100457160(a1, a2, a3, a4, &qword_10065F558, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_10046121C);
}

_QWORD *sub_1004568E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F538, &qword_10065F540);
}

_QWORD *sub_1004568FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10064DD10);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10045FBEC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456A1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F3F0, &qword_10065F3F8);
}

_QWORD *sub_100456A30(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F5F8);
      v11 = (_QWORD *)swift_allocObject(v10, 112 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 112);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[14 * v8 + 4])
          memmove(v13, a4 + 4, 112 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100461310(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456B58(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F600, &qword_10065F608);
}

uint64_t sub_100456B6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_10065F400, &qword_10064A058);
}

_QWORD *sub_100456B80(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1004557F8(a1, a2, a3, a4, &qword_10065F408, &qword_10065F410);
}

uint64_t sub_100456B94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_10065F5C8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
}

_QWORD *sub_100456BA8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750((uint64_t *)&unk_10064B8C0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100461404(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456CB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F490);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004614F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456DD8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100456DE4(a1, a2, a3, a4, &qword_10065F5B0);
}

_QWORD *sub_100456DE4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10002A750(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100461604(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100456ED8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100456EEC(a1, a2, a3, a4, &qword_10065F590);
}

_QWORD *sub_100456EEC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10002A750(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 32 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 1;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 5);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[4 * v9 + 4])
          memmove(v15, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004616E8(0, v9, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100457004(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455128(a1, a2, a3, a4, &qword_100656AC8, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

_QWORD *sub_100457018(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F4D8);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004603D0(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100457124(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_1006593D0, (uint64_t *)&unk_100654920);
}

uint64_t sub_100457138(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100455370(a1, a2, a3, a4, &qword_100654340, &qword_100654148);
}

_QWORD *sub_10045714C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100457160(a1, a2, a3, a4, &qword_10065F4E0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1004618EC);
}

_QWORD *sub_100457160(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10002A750(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 24 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 24);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[3 * v11 + 4])
          memmove(v16, a4 + 4, 24 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    a6(0, v11, v16, a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100457288(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100455DFC(a1, a2, a3, a4, &qword_100656278);
}

_QWORD *sub_10045729C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10002A750(&qword_10065F500);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1004604B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1004573C0(uint64_t a1, uint64_t a2)
{
  return sub_1004573DC(a1, a2, &qword_100654320, &qword_100649C20, REMReminder_ptr);
}

Swift::Int sub_1004573DC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a2)
  {
    sub_10002A750(a3);
    v10 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v35 = v10;
    __CocoaDictionary.makeIterator()(a1);
    v11 = __CocoaDictionary.Iterator.next()();
    if (v11)
    {
      v13 = v11;
      v14 = v12;
      v15 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      do
      {
        v33 = v13;
        swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        v32 = v14;
        v26 = sub_100005ED8(0, a4, a5);
        swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
        v10 = v35;
        v27 = *(_QWORD *)(v35 + 16);
        if (*(_QWORD *)(v35 + 24) <= v27)
        {
          sub_10045D208(v27 + 1, 1, a3);
          v10 = v35;
        }
        v17 = v33;
        v16 = v34;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v10 + 40));
        v19 = v10 + 64;
        v20 = -1 << *(_BYTE *)(v10 + 32);
        v21 = result & ~v20;
        v22 = v21 >> 6;
        if (((-1 << v21) & ~*(_QWORD *)(v10 + 64 + 8 * (v21 >> 6))) != 0)
        {
          v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 64 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v28 = 0;
          v29 = (unint64_t)(63 - v20) >> 6;
          do
          {
            if (++v22 == v29 && (v28 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v30 = v22 == v29;
            if (v22 == v29)
              v22 = 0;
            v28 |= v30;
            v31 = *(_QWORD *)(v19 + 8 * v22);
          }
          while (v31 == -1);
          v23 = __clz(__rbit64(~v31)) + (v22 << 6);
        }
        *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        v24 = 8 * v23;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + v24) = v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 56) + v24) = v17;
        ++*(_QWORD *)(v10 + 16);
        v13 = __CocoaDictionary.Iterator.next()();
        v14 = v25;
      }
      while (v13);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v10;
}

void sub_10045762C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  uint64_t v37[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542A8);
  v36 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 0;
    v10 = (_QWORD *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v22 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v23 = v22 | (v9 << 6);
      }
      else
      {
        if (__OFADD__(v9++, 1))
          goto LABEL_43;
        if (v9 >= v14)
        {
LABEL_34:
          if ((v36 & 1) == 0)
          {
            swift_release();
            v3 = v35;
            goto LABEL_41;
          }
          v34 = 1 << *(_BYTE *)(v5 + 32);
          if (v34 >= 64)
            bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v10 = -1 << v34;
          v3 = v35;
          *(_QWORD *)(v5 + 16) = 0;
          break;
        }
        v25 = v10[v9];
        if (!v25)
        {
          v26 = v9 + 1;
          if (v9 + 1 >= v14)
            goto LABEL_34;
          v25 = v10[v26];
          if (!v25)
          {
            while (1)
            {
              v9 = v26 + 1;
              if (__OFADD__(v26, 1))
                break;
              if (v9 >= v14)
                goto LABEL_34;
              v25 = v10[v9];
              ++v26;
              if (v25)
                goto LABEL_23;
            }
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            return;
          }
          ++v9;
        }
LABEL_23:
        v13 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v9 << 6);
      }
      v27 = 8 * v23;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((v36 & 1) == 0)
        swift_retain();
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v28 + 16));
      v16 = Hasher._finalize()();
      v17 = -1 << *(_BYTE *)(v8 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v19 == v31;
          if (v19 == v31)
            v19 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v33 == -1);
        v20 = __clz(__rbit64(~v33)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v21) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v21) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_41:
  *v3 = v8;
}

void sub_1004578F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  _QWORD v44[9];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_1006542B0);
  v43 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = v3;
  v41 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v16 = (unint64_t)(v12 + 63) >> 6;
  v17 = v10 + 64;
  swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_43;
    if (v18 >= v16)
      break;
    v23 = v41;
    v24 = v41[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v16)
      {
LABEL_34:
        swift_release();
        v3 = v40;
        if ((v43 & 1) == 0)
          goto LABEL_41;
        goto LABEL_37;
      }
      v24 = v41[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v16)
            goto LABEL_34;
          v24 = v41[v18];
          ++v25;
          if (v24)
            goto LABEL_21;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      ++v18;
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v42 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v43 & 1) != 0)
    {
      sub_10001F580(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      sub_10002B1E8(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v11 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v44, v29);
    v30 = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v11 + 32);
    v32 = v30 & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v17 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    sub_10001F580((uint64_t)v8, *(_QWORD *)(v11 + 48) + v26 * v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v9 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  swift_release();
  *v3 = v11;
}

void sub_100457C50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  char v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542B8);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v21 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        if (__OFADD__(v9++, 1))
          goto LABEL_43;
        if (v9 >= v13)
        {
LABEL_34:
          if ((v37 & 1) == 0)
          {
            swift_release();
            v3 = v35;
            goto LABEL_41;
          }
          v34 = 1 << *(_BYTE *)(v5 + 32);
          if (v34 >= 64)
            bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v36 = -1 << v34;
          v3 = v35;
          *(_QWORD *)(v5 + 16) = 0;
          break;
        }
        v24 = v36[v9];
        if (!v24)
        {
          v25 = v9 + 1;
          if (v9 + 1 >= v13)
            goto LABEL_34;
          v24 = v36[v25];
          if (!v24)
          {
            while (1)
            {
              v9 = v25 + 1;
              if (__OFADD__(v25, 1))
                break;
              if (v9 >= v13)
                goto LABEL_34;
              v24 = v36[v9];
              ++v25;
              if (v24)
                goto LABEL_23;
            }
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            return;
          }
          ++v9;
        }
LABEL_23:
        v12 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v22);
      v27 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v22);
      v29 = *v27;
      v28 = v27[1];
      if ((v37 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain(v29);
      }
      Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v26 + 16));
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v18 == v31;
          if (v18 == v31)
            v18 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v26;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19);
      *v20 = v29;
      v20[1] = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_41:
  *v3 = v8;
}

Swift::Int sub_100457F24(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  Swift::UInt v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int *v32;
  char v33;
  uint64_t v34[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100640EC0);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v10 = (_QWORD *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        if (__OFADD__(v9++, 1))
          goto LABEL_41;
        if (v9 >= v14)
        {
LABEL_32:
          if ((v33 & 1) == 0)
          {
            result = swift_release(v5);
            v3 = v32;
            goto LABEL_39;
          }
          v31 = 1 << *(_BYTE *)(v5 + 32);
          if (v31 >= 64)
            bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v10 = -1 << v31;
          v3 = v32;
          *(_QWORD *)(v5 + 16) = 0;
          break;
        }
        v20 = v10[v9];
        if (!v20)
        {
          v21 = v9 + 1;
          if (v9 + 1 >= v14)
            goto LABEL_32;
          v20 = v10[v21];
          if (!v20)
          {
            while (1)
            {
              v9 = v21 + 1;
              if (__OFADD__(v21, 1))
                break;
              if (v9 >= v14)
                goto LABEL_32;
              v20 = v10[v9];
              ++v21;
              if (v20)
                goto LABEL_22;
            }
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            return result;
          }
          ++v9;
        }
LABEL_22:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      Hasher.init(_seed:)(v34, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v22);
      result = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16) = v23;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_39:
  *v3 = v8;
  return result;
}

void sub_1004581D0(uint64_t a1, uint64_t a2)
{
  sub_10045D208(a1, a2, &qword_100654320);
}

Swift::Int sub_1004581DC(uint64_t a1, uint64_t a2)
{
  return sub_10045A748(a1, a2, &qword_1006463E0);
}

Swift::Int sub_1004581E8(uint64_t a1, uint64_t a2)
{
  return sub_100459FFC(a1, a2, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_100654258, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:));
}

Swift::Int sub_10045820C(uint64_t a1, uint64_t a2)
{
  return sub_10045C92C(a1, a2, &qword_100654318);
}

void sub_100458218(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_10064A548);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release();
          v3 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v22);
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v22);
    v33 = *v32;
    v34 = v32[1];
    if ((v39 & 1) == 0)
    {
      v35 = v31;
      swift_bridgeObjectRetain(v34);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v31;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19);
    *v20 = v33;
    v20[1] = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v24 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_1004584FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654300);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_100458810(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  int64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;

  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542D8);
  v47 = a2;
  v6 = static _DictionaryStorage.resize(original:capacity:move:)(v4, v5, a2);
  v48 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
    v40 = v48;
    v41 = v43;
LABEL_45:
    *v41 = v40;
    return;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v45 = (_QWORD *)(v4 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v4 + 64);
  v44 = (unint64_t)(v7 + 63) >> 6;
  v10 = v6 + 64;
  swift_retain(v4);
  v11 = v48;
  v12 = 0;
  v46 = v4;
  while (1)
  {
    if (v9)
    {
      v19 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v49 = v12;
      v20 = v19 | (v12 << 6);
      goto LABEL_34;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v21 >= v44)
    {
      swift_release(v4);
      v41 = v43;
      v22 = v45;
      if ((v47 & 1) != 0)
      {
LABEL_40:
        v42 = 1 << *(_BYTE *)(v4 + 32);
        if (v42 >= 64)
          bzero(v22, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v42;
        *(_QWORD *)(v4 + 16) = 0;
      }
LABEL_44:
      swift_release(v4);
      v40 = v48;
      goto LABEL_45;
    }
    v22 = v45;
    v23 = v45[v21];
    v24 = v12 + 1;
    if (!v23)
    {
      v24 = v12 + 2;
      if (v12 + 2 >= v44)
        goto LABEL_37;
      v23 = v45[v24];
      if (!v23)
        break;
    }
LABEL_33:
    v9 = (v23 - 1) & v23;
    v49 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_34:
    v30 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v20);
    v31 = *(_QWORD *)(v4 + 56) + 112 * v20;
    v32 = *(_QWORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    v34 = *(_QWORD *)(v31 + 16);
    v35 = *(void **)(v31 + 24);
    v56 = *(_BYTE *)(v31 + 32);
    v37 = *(_QWORD *)(v31 + 40);
    v36 = *(_QWORD *)(v31 + 48);
    v38 = *(void **)(v31 + 64);
    v55 = *(_QWORD *)(v31 + 56);
    v54 = *(_BYTE *)(v31 + 72);
    v53 = *(_QWORD *)(v31 + 80);
    v52 = *(_BYTE *)(v31 + 88);
    v51 = *(_QWORD *)(v31 + 96);
    v50 = *(_BYTE *)(v31 + 104);
    if ((v47 & 1) == 0)
    {
      v39 = v30;
      sub_1001EDEDC(v32, v33, v34, v35);
      sub_1001EDEDC(v37, v36, v55, v38);
      v11 = v48;
    }
    v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v11 + 40));
    v11 = v48;
    v14 = -1 << *(_BYTE *)(v48 + 32);
    v15 = v13 & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v10 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v10 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v10 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v10 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_QWORD *)(*(_QWORD *)(v48 + 48) + 8 * v17) = v30;
    v18 = *(_QWORD *)(v48 + 56) + 112 * v17;
    *(_QWORD *)v18 = v32;
    *(_QWORD *)(v18 + 8) = v33;
    *(_QWORD *)(v18 + 16) = v34;
    *(_QWORD *)(v18 + 24) = v35;
    *(_BYTE *)(v18 + 32) = v56;
    *(_QWORD *)(v18 + 40) = v37;
    *(_QWORD *)(v18 + 48) = v36;
    *(_QWORD *)(v18 + 56) = v55;
    *(_QWORD *)(v18 + 64) = v38;
    *(_BYTE *)(v18 + 72) = v54;
    *(_QWORD *)(v18 + 80) = v53;
    *(_BYTE *)(v18 + 88) = v52;
    *(_QWORD *)(v18 + 96) = v51;
    *(_BYTE *)(v18 + 104) = v50;
    ++*(_QWORD *)(v48 + 16);
    v4 = v46;
    v12 = v49;
  }
  v25 = v12 + 3;
  if (v12 + 3 >= v44)
  {
LABEL_37:
    swift_release(v4);
    v41 = v43;
    if ((v47 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v23 = v45[v25];
  if (v23)
  {
    v24 = v12 + 3;
    goto LABEL_33;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v44)
      goto LABEL_37;
    v23 = v45[v24];
    ++v25;
    if (v23)
      goto LABEL_33;
  }
LABEL_47:
  __break(1u);
}

void sub_100458BE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[9];

  v3 = v2;
  v46 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v6 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_100654260);
  v44 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v41 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  swift_retain();
  v16 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v21 >= v42)
      goto LABEL_36;
    v22 = v43[v21];
    ++v16;
    if (!v22)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v42)
        goto LABEL_36;
      v22 = v43[v16];
      if (!v22)
        break;
    }
LABEL_23:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_24:
    v24 = *(_QWORD *)(v8 + 56);
    v25 = v8;
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v20);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v6 + 72);
    v30 = v24 + v29 * v20;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v30, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v45, v30, v46);
      swift_bridgeObjectRetain(v27);
    }
    Hasher.init(_seed:)(v47, *(_QWORD *)(v10 + 40));
    String.hash(into:)(v47, v28, v27);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v17 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17);
    *v18 = v28;
    v18[1] = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v29 * v17, v45, v46);
    ++*(_QWORD *)(v10 + 16);
    v8 = v25;
  }
  v23 = v21 + 2;
  if (v23 < v42)
  {
    v22 = v43[v23];
    if (!v22)
    {
      while (1)
      {
        v16 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_43;
        if (v16 >= v42)
          goto LABEL_36;
        v22 = v43[v16];
        ++v23;
        if (v22)
          goto LABEL_23;
      }
    }
    v16 = v23;
    goto LABEL_23;
  }
LABEL_36:
  swift_release();
  v3 = v41;
  if ((v44 & 1) != 0)
  {
    v39 = 1 << *(_BYTE *)(v8 + 32);
    if (v39 >= 64)
      bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v43 = -1 << v39;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *v3 = v10;
}

void sub_100458F50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  int v42;
  uint64_t v43;
  _QWORD v44[9];

  v3 = v2;
  v43 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v6 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_100654250);
  v42 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v39 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v41 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v21 >= v40)
      goto LABEL_36;
    v22 = v41[v21];
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_36;
      v22 = v41[v17];
      if (!v22)
        break;
    }
LABEL_23:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(_QWORD *)(v9 + 56);
    v25 = v9;
    v26 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v20);
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v24 + v27 * v20;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v28, v43);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v43);
      v29 = v26;
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v11 + 40));
    TTRSectionID.hash(into:)(v44, v26);
    v30 = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v11 + 32);
    v32 = v30 & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v18) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v27 * v18, v8, v43);
    ++*(_QWORD *)(v11 + 16);
    v9 = v25;
  }
  v23 = v21 + 2;
  if (v23 < v40)
  {
    v22 = v41[v23];
    if (!v22)
    {
      while (1)
      {
        v17 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_43;
        if (v17 >= v40)
          goto LABEL_36;
        v22 = v41[v17];
        ++v23;
        if (v22)
          goto LABEL_23;
      }
    }
    v17 = v23;
    goto LABEL_23;
  }
LABEL_36:
  swift_release();
  v3 = v39;
  if ((v42 & 1) != 0)
  {
    v38 = 1 << *(_BYTE *)(v9 + 32);
    if (v38 >= 64)
      bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v41 = -1 << v38;
    *(_QWORD *)(v9 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *v3 = v11;
}

Swift::Int sub_1004592B0(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654280);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = v3;
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v34)
          goto LABEL_36;
        v22 = v35[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_36;
          v22 = v35[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v33;
                goto LABEL_43;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v34)
                  goto LABEL_36;
                v22 = v35[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(v5 + 48);
      v30 = *(_QWORD *)(v29 + v28);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v29 + v28));
      Hasher.init(_seed:)(v36, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v30 + 16));
      result = Hasher._finalize()();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v18) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_43:
  *v3 = v8;
  return result;
}

Swift::Int sub_100459584(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[9];

  v3 = v2;
  v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_100654288);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v3;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain(v9);
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_36;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_36:
          swift_release(v9);
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v18 >= v38)
              goto LABEL_36;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v18 = v25;
      }
    }
LABEL_23:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v40 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v41 & 1) != 0)
    {
      sub_10001F580(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      sub_10002B1E8(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v42);
    result = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_10001F580((uint64_t)v8, *(_QWORD *)(v11 + 48) + v26 * v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v37;
  v23 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  result = swift_release(v9);
  *v3 = v11;
  return result;
}

Swift::Int sub_100459900(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int *v33;
  int64_t v34;
  _QWORD *v35;
  char v36;
  uint64_t v37[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654290);
  v36 = a2;
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v9 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v34)
          goto LABEL_36;
        v22 = v35[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_36;
          v22 = v35[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_36:
              if ((v36 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v33;
                goto LABEL_43;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v34)
                  goto LABEL_36;
                v22 = v35[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      v31 = *v29;
      v30 = v29[1];
      if ((v36 & 1) == 0)
      {
        swift_retain(v28);
        swift_bridgeObjectRetain(v31);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v28 + 16));
      result = Hasher._finalize()();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v17) = v28;
      v18 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_43:
  *v3 = v8;
  return result;
}

void sub_100459BEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  void (**v44)(char *, unint64_t, uint64_t);
  uint64_t v45;
  int v46;
  void (**v47)(unint64_t, char *, uint64_t);
  char *v48;
  uint64_t v49;
  _QWORD v50[9];

  v3 = v2;
  v49 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_100654278);
  v46 = a2;
  v12 = static _DictionaryStorage.resize(original:capacity:move:)(v11, a1, a2);
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_43;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v43 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v41 = v3;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  v47 = (void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v18 = v12 + 64;
  swift_retain(v11);
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_36;
      v25 = v43[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_36:
          swift_release(v11);
          v3 = v41;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v42)
              goto LABEL_36;
            v25 = v43[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v45 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      sub_10001F580(v28, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v29 = (void (**)(char *, unint64_t, uint64_t))v47;
    }
    else
    {
      sub_10002B1E8(v28, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v29 = v44;
    }
    v30 = v6;
    v31 = *(_QWORD *)(v6 + 72);
    (*v29)(v48, *(_QWORD *)(v11 + 56) + v31 * v22, v49);
    Hasher.init(_seed:)(v50, *(_QWORD *)(v13 + 40));
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v50);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    sub_10001F580((uint64_t)v10, *(_QWORD *)(v13 + 48) + v27 * v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    (*v47)(*(_QWORD *)(v13 + 56) + v31 * v20, v48, v49);
    ++*(_QWORD *)(v13 + 16);
    v6 = v30;
  }
  swift_release(v11);
  v3 = v41;
  v24 = v43;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v11 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_43:
  swift_release(v11);
  *v3 = v13;
}

Swift::Int sub_100459FD8(uint64_t a1, uint64_t a2)
{
  return sub_100459FFC(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_100654270, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:));
}

Swift::Int sub_100459FFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(_QWORD *))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  Swift::Int result;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD *);
  int v51;
  uint64_t (*v52)(_QWORD);
  uint64_t (*v53)(_QWORD);
  _QWORD v54[9];

  v50 = a6;
  v9 = v6;
  v52 = a3;
  v12 = a3(0);
  v48 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v53 = a4;
  v15 = a4(0);
  v49 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - v16;
  v18 = *v9;
  if (*(_QWORD *)(*v9 + 24) > a1)
    a1 = *(_QWORD *)(*v9 + 24);
  sub_10002A750(a5);
  v51 = a2;
  v19 = static _DictionaryStorage.resize(original:capacity:move:)(v18, a1, a2);
  v20 = v19;
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_41;
  v45 = v9;
  v21 = 1 << *(_BYTE *)(v18 + 32);
  v22 = *(_QWORD *)(v18 + 64);
  v47 = (_QWORD *)(v18 + 64);
  if (v21 < 64)
    v23 = ~(-1 << v21);
  else
    v23 = -1;
  v24 = v23 & v22;
  v46 = (unint64_t)(v21 + 63) >> 6;
  v25 = v19 + 64;
  result = swift_retain(v18);
  v27 = 0;
  while (1)
  {
    if (v24)
    {
      v29 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v30 = v29 | (v27 << 6);
      goto LABEL_24;
    }
    v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v31 >= v46)
      goto LABEL_36;
    v32 = v47[v31];
    ++v27;
    if (!v32)
    {
      v27 = v31 + 1;
      if (v31 + 1 >= v46)
        goto LABEL_36;
      v32 = v47[v27];
      if (!v32)
        break;
    }
LABEL_23:
    v24 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v27 << 6);
LABEL_24:
    v34 = *(_QWORD *)(v49 + 72);
    v35 = *(_QWORD *)(v18 + 48) + v34 * v30;
    if ((v51 & 1) != 0)
    {
      sub_10001F580(v35, (uint64_t)v17, v53);
      v36 = *(_QWORD *)(v48 + 72);
      sub_10001F580(*(_QWORD *)(v18 + 56) + v36 * v30, (uint64_t)v14, v52);
    }
    else
    {
      sub_10002B1E8(v35, (uint64_t)v17, v53);
      v36 = *(_QWORD *)(v48 + 72);
      sub_10002B1E8(*(_QWORD *)(v18 + 56) + v36 * v30, (uint64_t)v14, v52);
    }
    Hasher.init(_seed:)(v54, *(_QWORD *)(v20 + 40));
    v50(v54);
    result = Hasher._finalize()();
    v37 = -1 << *(_BYTE *)(v20 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v25 + 8 * (v38 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v25 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v25 + 8 * v39);
      }
      while (v43 == -1);
      v28 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v25 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    sub_10001F580((uint64_t)v17, *(_QWORD *)(v20 + 48) + v34 * v28, v53);
    result = sub_10001F580((uint64_t)v14, *(_QWORD *)(v20 + 56) + v36 * v28, v52);
    ++*(_QWORD *)(v20 + 16);
  }
  v33 = v31 + 2;
  if (v33 < v46)
  {
    v32 = v47[v33];
    if (!v32)
    {
      while (1)
      {
        v27 = v33 + 1;
        if (__OFADD__(v33, 1))
          goto LABEL_43;
        if (v27 >= v46)
          goto LABEL_36;
        v32 = v47[v27];
        ++v33;
        if (v32)
          goto LABEL_23;
      }
    }
    v27 = v33;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v18);
  v9 = v45;
  if ((v51 & 1) != 0)
  {
    v44 = 1 << *(_BYTE *)(v18 + 32);
    if (v44 >= 64)
      bzero(v47, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v47 = -1 << v44;
    *(_QWORD *)(v18 + 16) = 0;
  }
LABEL_41:
  result = swift_release(v18);
  *v9 = v20;
  return result;
}

Swift::Int sub_10045A3CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  char v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654298);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_36;
      v25 = v42[v14];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v41)
              goto LABEL_36;
            v25 = v42[v14];
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v5 + 56) + 56 * v22;
    v36 = *(_QWORD *)(v34 + 16);
    v35 = *(_QWORD *)(v34 + 24);
    v45 = *(_OWORD *)v34;
    v46 = *(_OWORD *)(v34 + 32);
    v37 = *(_QWORD *)(v34 + 48);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v46);
      v38 = *((id *)&v46 + 1);
    }
    Hasher.init(_seed:)(v47, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v47, v33, v32);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v8 + 56) + 56 * v18;
    *(_OWORD *)v20 = v45;
    *(_QWORD *)(v20 + 16) = v36;
    *(_QWORD *)(v20 + 24) = v35;
    *(_OWORD *)(v20 + 32) = v46;
    *(_QWORD *)(v20 + 48) = v37;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

Swift::Int sub_10045A73C(uint64_t a1, uint64_t a2)
{
  return sub_10045A748(a1, a2, &qword_100646330);
}

Swift::Int sub_10045A748(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  Swift::Int *v3;
  Swift::Int *v4;
  Swift::Int v6;
  uint64_t v7;
  Swift::Int result;
  Swift::Int v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  Swift::Int *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(a3);
  v37 = a2;
  result = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v36 = (_QWORD *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = v4;
    v35 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v10 << 6);
      }
      else
      {
        v22 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v22 >= v35)
          goto LABEL_36;
        v23 = v36[v22];
        ++v10;
        if (!v23)
        {
          v10 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_36;
          v23 = v36[v10];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_36:
              if ((v37 & 1) == 0)
              {
                result = swift_release(v6);
                v4 = v34;
                goto LABEL_43;
              }
              v33 = 1 << *(_BYTE *)(v6 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v4 = v34;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v10 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v10 >= v35)
                  goto LABEL_36;
                v23 = v36[v10];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v10 = v24;
          }
        }
LABEL_33:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v10 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v21);
      v30 = *(_QWORD *)(v6 + 56) + 16 * v21;
      v31 = *(_QWORD *)v30;
      v32 = *(_BYTE *)(v30 + 8);
      if ((v37 & 1) == 0)
        swift_retain(v29);
      Hasher.init(_seed:)(v38, *(_QWORD *)(v9 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v29 + 16));
      result = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v9 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v29;
      v19 = *(_QWORD *)(v9 + 56) + 16 * v18;
      *(_QWORD *)v19 = v31;
      *(_BYTE *)(v19 + 8) = v32;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release(v6);
LABEL_43:
  *v4 = v9;
  return result;
}

Swift::Int sub_10045AA2C(uint64_t a1, uint64_t a2)
{
  return sub_10045B16C(a1, a2, &qword_1006542F8);
}

void sub_10045AA38(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t i;
  int v52;
  uint64_t v53;

  v4 = v3;
  v7 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, a3);
  v50 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v53 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_100654338);
  v52 = a2;
  v14 = static _DictionaryStorage.resize(original:capacity:move:)(v13, a1, a2);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_44;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v49 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v47 = v3;
  v48 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  swift_retain();
  v21 = 0;
  v22 = v13;
  for (i = v13; ; v22 = i)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_24;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_37;
      v28 = v49[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_37:
          swift_release();
          v4 = v47;
          if ((v52 & 1) == 0)
            goto LABEL_44;
          goto LABEL_38;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_46;
            if (v21 >= v48)
              goto LABEL_37;
            v28 = v49[v21];
            ++v29;
            if (v28)
              goto LABEL_23;
          }
        }
        v21 = v29;
      }
    }
LABEL_23:
    v19 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_24:
    v30 = *(_QWORD *)(v10 + 72);
    v31 = *(_QWORD *)(v22 + 48) + v30 * v25;
    if ((v52 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v12, v31, v9);
      v32 = *(_QWORD *)(v22 + 56);
      v33 = *(_QWORD *)(v50 + 72);
      sub_10001F580(v32 + v33 * v25, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v31, v9);
      v34 = *(_QWORD *)(v22 + 56);
      v33 = *(_QWORD *)(v50 + 72);
      sub_10002B1E8(v34 + v33 * v25, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    }
    v35 = *(_QWORD *)(v15 + 40);
    v36 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v9, v36);
    v38 = -1 << *(_BYTE *)(v15 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v20 + 8 * (v39 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v20 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v20 + 8 * v40);
      }
      while (v44 == -1);
      v23 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v30 * v23, v12, v9);
    sub_10001F580(v53, *(_QWORD *)(v15 + 56) + v33 * v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    ++*(_QWORD *)(v15 + 16);
  }
  swift_release();
  v4 = v47;
  v27 = v49;
  if ((v52 & 1) == 0)
    goto LABEL_44;
LABEL_38:
  v45 = 1 << *(_BYTE *)(i + 32);
  if (v45 >= 64)
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v45;
  *(_QWORD *)(i + 16) = 0;
LABEL_44:
  swift_release();
  *v4 = v15;
}

void sub_10045AE54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654348);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      v34 = v33;
    }
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v40, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

Swift::Int sub_10045B160(uint64_t a1, uint64_t a2)
{
  return sub_10045B16C(a1, a2, &qword_100652B48);
}

Swift::Int sub_10045B16C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::Int result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v35 = v4;
  v36 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain(v6);
  v16 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_34;
    }
    v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v13)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v36 + 8 * v23);
    ++v16;
    if (!v25)
    {
      v16 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_36;
      v25 = *(_QWORD *)(v36 + 8 * v16);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v13)
        {
LABEL_36:
          swift_release(v6);
          v4 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v16 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v16 >= v13)
              goto LABEL_36;
            v25 = *(_QWORD *)(v36 + 8 * v16);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v16 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_34:
    v31 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v22);
    v32 = *(_BYTE *)(*(_QWORD *)(v6 + 56) + v22);
    if ((a2 & 1) == 0)
      v33 = v31;
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v19 == v28;
        if (v19 == v28)
          v19 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v30 == -1);
      v20 = __clz(__rbit64(~v30)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v20) = v31;
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v20) = v32;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v35;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

void sub_10045B42C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  _QWORD v43[9];
  _BYTE v44[32];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v41 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_1006542E0);
  v42 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v38 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v39)
      break;
    v22 = v40;
    v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_36;
      v23 = v40[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_36:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v39)
              goto LABEL_36;
            v23 = v40[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    v27 = 32 * v20;
    if ((v42 & 1) != 0)
    {
      sub_10001F580(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_100076BAC(*(_QWORD *)(v9 + 56) + v27, (uint64_t)v44);
    }
    else
    {
      sub_10002B1E8(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000CE130(*(_QWORD *)(v9 + 56) + v27, (uint64_t)v44);
    }
    Hasher.init(_seed:)(v43, *(_QWORD *)(v11 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v43, v28);
    v29 = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_10001F580((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_100076BAC((uint64_t)v44, *(_QWORD *)(v11 + 56) + 32 * v18);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v22 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v11;
}

void sub_10045B7BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  __int128 v43;
  _QWORD v44[9];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v41 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(&qword_1006542E8);
  v42 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v38 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain();
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v39)
      break;
    v22 = v40;
    v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_36;
      v23 = v40[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_36:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v39)
              goto LABEL_36;
            v23 = v40[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v42 & 1) != 0)
    {
      sub_10001F580(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v43 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
    }
    else
    {
      sub_10002B1E8(v26, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v43 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v20);
      swift_unknownObjectRetain(v43);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v11 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v44, v27);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_10001F580((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v18) = v43;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v22 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v11;
}

void sub_10045BB44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654310);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v12)
          goto LABEL_23;
        v17 = v9[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_23;
          v17 = v9[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v12)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v9[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_30;
                if (v13 >= v12)
                  goto LABEL_23;
                v17 = v9[v13];
                ++v18;
                if (v17)
                  goto LABEL_22;
              }
            }
            v13 = v18;
          }
        }
LABEL_22:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      sub_10045DCD0(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v15), *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15), v7);
    }
  }
  swift_release();
  *v3 = v7;
}

void sub_10045BD04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654308);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_46;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_25;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    if (v18 >= v37)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v38 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_39;
      v20 = *(_QWORD *)(v38 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_39:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_46;
          goto LABEL_42;
        }
        v20 = *(_QWORD *)(v38 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_48;
            if (v13 >= v37)
              goto LABEL_39;
            v20 = *(_QWORD *)(v38 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v13 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = 8 * v17;
    v23 = *(void **)(*(_QWORD *)(v5 + 48) + v22);
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    if ((a2 & 1) == 0)
      v25 = v23;
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    if (v23)
    {
      Hasher._combine(_:)(1u);
      v26 = v23;
      NSObject.hash(into:)(v39);

    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v27 = Hasher._finalize()();
    v28 = -1 << *(_BYTE *)(v8 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 8 * v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v15) = v23;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v15) = v24;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_46;
LABEL_42:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v19, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_46:
  swift_release();
  *v3 = v8;
}

void sub_10045C014(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654248);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v3;
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release();
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v33;
      v35 = v32;
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v37;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_10045C2E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654268);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v13 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_10045C608(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::UInt v22;
  int v23;
  void *v24;
  id v25;
  Swift::UInt v26;
  Swift::UInt v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542A0);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = v3;
    v9 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          return;
        }
        if (v18 >= v38)
          goto LABEL_42;
        v19 = v39[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v38)
            goto LABEL_42;
          v19 = v39[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_42:
              if ((v40 & 1) == 0)
              {
                swift_release();
                v3 = v37;
                goto LABEL_49;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v37;
              *(_QWORD *)(v5 + 16) = 0;
              goto LABEL_48;
            }
            v19 = v39[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_51;
                if (v9 >= v38)
                  goto LABEL_42;
                v19 = v39[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48) + 16 * v17;
      v22 = *(_QWORD *)v21;
      v23 = *(unsigned __int8 *)(v21 + 8);
      v24 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v17);
      if ((v40 & 1) == 0)
        v25 = v24;
      Hasher.init(_seed:)(v41, *(_QWORD *)(v8 + 40));
      if (!v23)
        break;
      if (v23 == 1)
      {
        v26 = 4;
LABEL_31:
        Hasher._combine(_:)(v26);
        v27 = v22;
        goto LABEL_33;
      }
      v27 = qword_100537150[v22];
LABEL_33:
      Hasher._combine(_:)(v27);
      v28 = Hasher._finalize()();
      v29 = -1 << *(_BYTE *)(v8 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_50;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v13 + 8 * v31);
        }
        while (v35 == -1);
        v14 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 16 * v14;
      *(_QWORD *)v15 = v22;
      *(_BYTE *)(v15 + 8) = v23;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
    v26 = 2;
    goto LABEL_31;
  }
LABEL_48:
  swift_release();
LABEL_49:
  *v3 = v8;
}

Swift::Int sub_10045C920(uint64_t a1, uint64_t a2)
{
  return sub_10045C92C(a1, a2, &qword_100654240);
}

Swift::Int sub_10045C92C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::Int result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v4;
  v38 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain(v6);
  v16 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_34;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v24 >= v13)
      break;
    v25 = (_QWORD *)(v6 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_36;
      v26 = *(_QWORD *)(v38 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v13)
        {
LABEL_36:
          swift_release(v6);
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v16 >= v13)
              goto LABEL_36;
            v26 = *(_QWORD *)(v38 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v16 = v27;
      }
    }
LABEL_33:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_34:
    v32 = 8 * v23;
    v33 = *(void **)(*(_QWORD *)(v6 + 48) + v32);
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v32);
    if ((a2 & 1) == 0)
    {
      v35 = v33;
      swift_bridgeObjectRetain(v34);
    }
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = 8 * v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v37;
  v25 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

void sub_10045CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  Swift::UInt v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int64_t v74;
  _QWORD v75[10];

  v5 = type metadata accessor for UUID(0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin(v5);
  v64 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for SmartListType(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyListEntity(0);
  v70 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AnyListEntityID(0);
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  __chkstk_darwin(v11);
  v69 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v58 = v2;
  v16 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100654328);
  v73 = a2;
  v17 = static _DictionaryStorage.resize(original:capacity:move:)(v16, a1, a2);
  v18 = v17;
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_release();
    v55 = v58;
LABEL_51:
    *v55 = v18;
    return;
  }
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = *(_QWORD *)(v16 + 64);
  v63 = (_QWORD *)(v16 + 64);
  if (v19 < 64)
    v21 = ~(-1 << v19);
  else
    v21 = -1;
  v22 = v21 & v20;
  v62 = (unint64_t)(v19 + 63) >> 6;
  v23 = v17 + 64;
  swift_retain();
  v24 = 0;
  v67 = v15;
  v68 = v10;
  while (1)
  {
    if (v22)
    {
      v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_24;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v28 >= v62)
    {
      swift_release();
      v55 = v58;
      v29 = v63;
      if ((v73 & 1) != 0)
      {
LABEL_46:
        v56 = 1 << *(_BYTE *)(v16 + 32);
        if (v56 >= 64)
          bzero(v29, ((unint64_t)(v56 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v29 = -1 << v56;
        *(_QWORD *)(v16 + 16) = 0;
      }
LABEL_50:
      swift_release();
      goto LABEL_51;
    }
    v29 = v63;
    v30 = v63[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v62)
        goto LABEL_43;
      v30 = v63[v24];
      if (!v30)
        break;
    }
LABEL_23:
    v22 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_24:
    v32 = *(_QWORD *)(v71 + 72);
    v33 = *(_QWORD *)(v16 + 48) + v32 * v27;
    v74 = v24;
    if ((v73 & 1) != 0)
    {
      sub_10001F580(v33, (uint64_t)v15, type metadata accessor for AnyListEntityID);
      v34 = *(_QWORD *)(v70 + 72);
      sub_10001F580(*(_QWORD *)(v16 + 56) + v34 * v27, (uint64_t)v10, type metadata accessor for AnyListEntity);
    }
    else
    {
      sub_10002B1E8(v33, (uint64_t)v15, type metadata accessor for AnyListEntityID);
      v34 = *(_QWORD *)(v70 + 72);
      sub_10002B1E8(*(_QWORD *)(v16 + 56) + v34 * v27, (uint64_t)v10, type metadata accessor for AnyListEntity);
    }
    v35 = (uint64_t)v69;
    Hasher.init(_seed:)(v75, *(_QWORD *)(v18 + 40));
    sub_10002B1E8((uint64_t)v15, v35, type metadata accessor for AnyListEntityID);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v35, v72);
    if (EnumCaseMultiPayload)
    {
      v37 = v16;
      v39 = v64;
      v38 = v65;
      v40 = v66;
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v64, v35, v66);
        v41 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v64, v35, v66);
        v41 = 2;
      }
      Hasher._combine(_:)(v41);
      v46 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v75, v40, v46);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      v16 = v37;
    }
    else
    {
      v42 = v60;
      v43 = v59;
      v44 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v59, v35, v61);
      Hasher._combine(_:)(0);
      v45 = sub_1000175C8(&qword_10064BB98, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListType, (uint64_t)&protocol conformance descriptor for SmartListType);
      dispatch thunk of Hashable.hash(into:)(v75, v44, v45);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    }
    v47 = Hasher._finalize()();
    v48 = -1 << *(_BYTE *)(v18 + 32);
    v49 = v47 & ~v48;
    v50 = v49 >> 6;
    v10 = v68;
    if (((-1 << v49) & ~*(_QWORD *)(v23 + 8 * (v49 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v49) & ~*(_QWORD *)(v23 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
      v15 = v67;
    }
    else
    {
      v51 = 0;
      v52 = (unint64_t)(63 - v48) >> 6;
      v15 = v67;
      do
      {
        if (++v50 == v52 && (v51 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        v53 = v50 == v52;
        if (v50 == v52)
          v50 = 0;
        v51 |= v53;
        v54 = *(_QWORD *)(v23 + 8 * v50);
      }
      while (v54 == -1);
      v25 = __clz(__rbit64(~v54)) + (v50 << 6);
    }
    *(_QWORD *)(v23 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    sub_10001F580((uint64_t)v15, *(_QWORD *)(v18 + 48) + v32 * v25, type metadata accessor for AnyListEntityID);
    sub_10001F580((uint64_t)v10, *(_QWORD *)(v18 + 56) + v34 * v25, type metadata accessor for AnyListEntity);
    ++*(_QWORD *)(v18 + 16);
    v24 = v74;
  }
  v31 = v28 + 2;
  if (v31 >= v62)
  {
LABEL_43:
    swift_release();
    v55 = v58;
    if ((v73 & 1) != 0)
      goto LABEL_46;
    goto LABEL_50;
  }
  v30 = v63[v31];
  if (v30)
  {
    v24 = v31;
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v24 >= v62)
      goto LABEL_43;
    v30 = v63[v24];
    ++v31;
    if (v30)
      goto LABEL_23;
  }
LABEL_53:
  __break(1u);
}

void sub_10045D208(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v4;
  v39 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v15 << 6);
      goto LABEL_34;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v13)
      break;
    v25 = (_QWORD *)(v6 + 64);
    v26 = *(_QWORD *)(v39 + 8 * v24);
    ++v15;
    if (!v26)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_36;
      v26 = *(_QWORD *)(v39 + 8 * v15);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v13)
        {
LABEL_36:
          swift_release();
          v4 = v38;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v39 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v15 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v15 >= v13)
              goto LABEL_36;
            v26 = *(_QWORD *)(v39 + 8 * v15);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v15 = v27;
      }
    }
LABEL_33:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_34:
    v32 = 8 * v23;
    v33 = *(void **)(*(_QWORD *)(v6 + 48) + v32);
    v34 = *(void **)(*(_QWORD *)(v6 + 56) + v32);
    if ((a2 & 1) == 0)
    {
      v35 = v33;
      v36 = v34;
    }
    v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = 8 * v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release();
  v4 = v38;
  v25 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v6 + 32);
  if (v37 >= 64)
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v37;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release();
  *v4 = v9;
}

void sub_10045D4D4(uint64_t a1, uint64_t a2)
{
  sub_10045D4EC(a1, a2, &qword_10065F648);
}

void sub_10045D4E0(uint64_t a1, uint64_t a2)
{
  sub_10045D4EC(a1, a2, &qword_10065F650);
}

void sub_10045D4EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::UInt v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10002A750(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v35 = v4;
    v10 = 0;
    v37 = (_QWORD *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v8 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v10 << 6);
      }
      else
      {
        v23 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v37[v23];
        ++v10;
        if (!v24)
        {
          v10 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v37[v10];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release();
                v4 = v35;
                goto LABEL_43;
              }
              v34 = 1 << *(_BYTE *)(v6 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v4 = v35;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v10 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v10 >= v36)
                  goto LABEL_36;
                v24 = v37[v10];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v10 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v10 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v6 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v31 + v30));
      Hasher.init(_seed:)(v38, *(_QWORD *)(v9 + 40));
      Hasher._combine(_:)(v32);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v9 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v33;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release();
LABEL_43:
  *v4 = v9;
}

void sub_10045D7C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542D0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_23;
        v18 = v9[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_23;
          v18 = v9[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v20 = 1 << *(_BYTE *)(v5 + 32);
                if (v20 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v20;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v9[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_30;
                if (v13 >= v12)
                  goto LABEL_23;
                v18 = v9[v13];
                ++v19;
                if (v18)
                  goto LABEL_22;
              }
            }
            v13 = v19;
          }
        }
LABEL_22:
        v11 = (v18 - 1) & v18;
        v15 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v16 = *(_QWORD *)(v5 + 48) + 32 * v15;
      sub_10045DE24(*(_QWORD *)v16, *(_BYTE *)(v16 + 8), v7, *(double *)(v16 + 16), *(double *)(v16 + 24), *(double *)(*(_QWORD *)(v5 + 56) + 16 * v15), *(double *)(*(_QWORD *)(v5 + 56) + 16 * v15 + 8));
    }
  }
  swift_release();
  *v3 = v7;
}

_OWORD *sub_10045D998(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];
  _OWORD v42[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_1006542C8);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = (_OWORD *)swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_25;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v18 >= v38)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v39 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v38)
        goto LABEL_37;
      v20 = *(_QWORD *)(v39 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v38)
        {
LABEL_37:
          swift_release(v5);
          if ((v40 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v20 = *(_QWORD *)(v39 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_46;
            if (v14 >= v38)
              goto LABEL_37;
            v20 = *(_QWORD *)(v39 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v14 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_25:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((v40 & 1) != 0)
    {
      sub_100028D38(v23, v42);
    }
    else
    {
      sub_100028CFC((uint64_t)v23, (uint64_t)v42);
      v24 = v22;
    }
    v25 = *(_QWORD *)(v8 + 40);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v28 = v27;
    Hasher.init(_seed:)(v41, v25);
    String.hash(into:)(v41, v26, v28);
    v29 = Hasher._finalize()();
    result = (_OWORD *)swift_bridgeObjectRelease(v28);
    v30 = -1 << *(_BYTE *)(v8 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v12 + 8 * v32);
      }
      while (v36 == -1);
      v15 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
    result = sub_100028D38(v42, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v19 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v19, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = (_OWORD *)swift_release(v5);
  *v3 = v8;
  return result;
}

void sub_10045DCD0(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(a3 + 40));
  __asm { BR              X10 }
}

unint64_t sub_10045DD24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  Swift::Int v3;
  unint64_t result;
  uint64_t v5;

  String.hash(into:)(&v5, 0x7961646F74, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  v3 = Hasher._finalize()();
  result = ((uint64_t (*)(Swift::Int, uint64_t, uint64_t))_HashTable.nextHole(atOrAfter:))(v3 & ~(-1 << *(_BYTE *)(v0 + 32)), v0 + 64, ~(-1 << *(_BYTE *)(v0 + 32)));
  *(_QWORD *)(v0 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + result) = v2;
  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * result) = v1;
  ++*(_QWORD *)(v0 + 16);
  return result;
}

unint64_t sub_10045DE24(Swift::UInt64 a1, char a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  Swift::UInt64 v14;
  Swift::Int v15;
  unint64_t result;
  uint64_t v17;
  double *v18;
  _QWORD v19[9];

  Hasher.init(_seed:)(v19, *(_QWORD *)(a3 + 40));
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v14 = a1;
    else
      v14 = 0;
    Hasher._combine(_:)(v14);
  }
  sub_1005058F0(a4, a5);
  v15 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v15 & ~(-1 << *(_BYTE *)(a3 + 32)), a3 + 64, ~(-1 << *(_BYTE *)(a3 + 32)));
  *(_QWORD *)(a3 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v17 = *(_QWORD *)(a3 + 48) + 32 * result;
  *(_QWORD *)v17 = a1;
  *(_BYTE *)(v17 + 8) = a2 & 1;
  *(double *)(v17 + 16) = a4;
  *(double *)(v17 + 24) = a5;
  v18 = (double *)(*(_QWORD *)(a3 + 56) + 16 * result);
  *v18 = a6;
  v18[1] = a7;
  ++*(_QWORD *)(a3 + 16);
  return result;
}

uint64_t sub_10045DF34(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10045E074(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

unint64_t sub_10045DF44(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_10045DF88(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_10045DFD8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_10045E020(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_10045E068(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10045E074(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
}

uint64_t sub_10045E074(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = a5(0);
  result = sub_10001F580(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_10045E10C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10045E48C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
}

uint64_t sub_10045E120(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  sub_10001F580(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v10 = a4[7];
  v11 = type metadata accessor for REMHashtagLabelSpecifier(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_10045E1D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 56 * result;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v6 + 48) = *(_QWORD *)(a4 + 48);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_10045E23C(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_10045E28C(unint64_t result, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_10045E2D0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  v10 = (*(double (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7];
  v12 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v10);
  result = sub_10001F580(a3, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

uint64_t sub_10045E388(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  sub_10001F580(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  result = sub_100076BAC(a3, a4[7] + 32 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_10045E428(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_10045E478(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_10045E48C(a1, a2, a3, a4, type metadata accessor for AnyListEntityID, type metadata accessor for AnyListEntity);
}

uint64_t sub_10045E48C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a4[6];
  v13 = a5(0);
  sub_10001F580(a2, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v14 = a4[7];
  v15 = a6(0);
  result = sub_10001F580(a3, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a6);
  v17 = a4[2];
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    a4[2] = v19;
  return result;
}

unint64_t sub_10045E54C(unint64_t result, uint64_t a2, char a3, _QWORD *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  double *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(result >> 6) + 8] |= 1 << result;
  v8 = a4[6] + 32 * result;
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3 & 1;
  *(double *)(v8 + 16) = a5;
  *(double *)(v8 + 24) = a6;
  v9 = (double *)(a4[7] + 16 * result);
  *v9 = a7;
  v9[1] = a8;
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_10045E5A4(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_100028D38(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_10045E608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnyListEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045E64C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F438, &qword_10065F430);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F430);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045E860(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10045EABC(a1, a2, a3, &qword_1006463D0, &qword_10065F4D0, &qword_10065F4C8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10048B07C);
}

uint64_t sub_10045E884(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F4A8, &qword_10065F4A0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F4A0);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045EA98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10045EABC(a1, a2, a3, (uint64_t *)&unk_100640E20, &qword_10065F450, &qword_10065F448, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10048B07C);
}

uint64_t sub_10045EABC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1003DC8E4(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10002A750(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_retain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_10002A750(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045ECC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F578, &qword_10065F570);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F570);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045EED8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F550, &qword_10065F548);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F548);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, &qword_100642220, REMSharee_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045F0EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F5E8, &qword_10065F5E0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F5E0);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045F300(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F5F0, &qword_100647B40);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_100647B40);
          v13 = sub_10048B0D0(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045F514(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F5D8, &qword_10065F5D0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F5D0);
          v13 = sub_10048B124(v18, i, a3);
          v15 = *v14;
          swift_retain();
          ((void (*)(uint64_t **, _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for TTRITableSection(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045F718(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003DC8E4(&qword_10065F5C0, &qword_10065F5B8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10002A750(&qword_10065F5B8);
          v13 = sub_10002AD10(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100005ED8(0, &qword_10064CB20, UIAccessibilityLinkSubelement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

char *sub_10045F92C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 3 * a1 + 32);
  v6 = 3 * v4;
  v7 = &__dst[v6];
  if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
  {
    memcpy(__dst, v5, v6);
    return v7;
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10045FA14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10045FB04(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = 2 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10045FBEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_10045FCE0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10045FDC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10002A750(&qword_10065F4F8);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10045FED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    sub_10002A750(a5);
    swift_arrayInitWithCopy(a3);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10045FFDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004600CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 56 * a1 + 32;
  v7 = a3 + 56 * v4;
  if (v6 >= v7 || v6 + 56 * v4 <= a3)
  {
    sub_10002A750(&qword_10065F488);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004601D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 112 * a1 + 32;
  v6 = a3 + 112 * v4;
  if (v5 >= v6 || v5 + 112 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004602CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      sub_10002A750(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1004603D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004604B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10002A750(&qword_10065F508);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1004605C4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(id *, char *, uint64_t);
  int v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  unint64_t v37;
  id *v38;
  int v39;
  void (*v40)(id *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;

  v6 = type metadata accessor for REMAccountsListDataView.Model.PinnedList(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v42 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v33 - v10);
  v13.n128_f64[0] = __chkstk_darwin(v12);
  v43 = (char *)&v33 - v14;
  result = (char *)_swiftEmptyArrayStorage;
  v44 = (char *)_swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v17 = *(_QWORD *)(v7 + 72);
    v37 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v18 = a1 + v37;
    v40 = *(void (**)(id *, char *, uint64_t))(v7 + 16);
    v41 = v17;
    v39 = enum case for REMAccountsListDataView.Model.PinnedList.predefinedSmartList(_:);
    v36 = enum case for REMAccountsListDataView.Model.PinnedList.list(_:);
    v34 = enum case for REMAccountsListDataView.Model.PinnedList.customSmartList(_:);
    v35 = a2;
    v38 = v11;
    while (1)
    {
      v19 = v43;
      v20 = v40;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v40)(v43, v18, v6, v13);
      v20(v11, v19, v6);
      v21 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v11, v6);
      if (v21 != v39)
        break;
      (*(void (**)(id *, uint64_t))(v7 + 96))(v11, v6);
      v22 = *v11;
      if (!v35 || !*(_QWORD *)(a3 + 16))
        goto LABEL_12;
      v22 = v22;
      v23 = sub_1002AA394(v22);
      if ((v24 & 1) == 0)
      {

LABEL_12:
LABEL_13:
        v27 = a3;
        v28 = v7;
        v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v29(v42, v43, v6);
        v30 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0)
        {
          sub_1003D863C(0, *((_QWORD *)v30 + 2) + 1, 1);
          v30 = v44;
        }
        v32 = *((_QWORD *)v30 + 2);
        v31 = *((_QWORD *)v30 + 3);
        if (v32 >= v31 >> 1)
        {
          sub_1003D863C(v31 > 1, v32 + 1, 1);
          v30 = v44;
        }
        *((_QWORD *)v30 + 2) = v32 + 1;
        v26 = v41;
        v29(&v30[v37 + v32 * v41], v42, v6);
        v44 = v30;
        a3 = v27;
        v7 = v28;
        v11 = v38;
        goto LABEL_18;
      }
      v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v23);

      if (v25 != 2)
        goto LABEL_13;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
      v26 = v41;
LABEL_18:
      v18 += v26;
      if (!--v16)
        return v44;
    }
    if (v21 != v36 && v21 != v34)
    {
      result = (char *)_diagnoseUnexpectedEnumCase<A>(type:)(v6, v6);
      __break(1u);
      return result;
    }
    (*(void (**)(id *, uint64_t))(v7 + 96))(v11, v6);
    v22 = *v11;
    goto LABEL_12;
  }
  return result;
}

unint64_t sub_1004608A4()
{
  unint64_t result;

  result = qword_10065F380;
  if (!qword_10065F380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyListEntityQuery.QueryType, &type metadata for AnyListEntityQuery.QueryType);
    atomic_store(result, (unint64_t *)&qword_10065F380);
  }
  return result;
}

unint64_t sub_1004608F0()
{
  unint64_t result;

  result = qword_10065F388[0];
  if (!qword_10065F388[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyListEntityQuery, &type metadata for AnyListEntityQuery);
    atomic_store(result, qword_10065F388);
  }
  return result;
}

uint64_t sub_100460934()
{
  return sub_1000175C8(&qword_10063D8F8, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

unint64_t sub_100460964()
{
  unint64_t result;

  result = qword_10065F3A0;
  if (!qword_10065F3A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyListEntityQuery, &type metadata for AnyListEntityQuery);
    atomic_store(result, (unint64_t *)&qword_10065F3A0);
  }
  return result;
}

uint64_t sub_1004609A8()
{
  return sub_1000175C8(&qword_10064CA48, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

unint64_t sub_1004609D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065F3A8;
  if (!qword_10065F3A8)
  {
    v1 = sub_10002CA5C(qword_10065F3B0);
    sub_1000175C8(&qword_10064CA48, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_10065F3A8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for AnyListEntityQuery(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardDragItemSources(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardDragItemSources(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyListEntityQuery()
{
  return &type metadata for AnyListEntityQuery;
}

uint64_t storeEnumTagSinglePayload for AnyListEntityQuery.QueryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100460BE8 + 4 * byte_100536FBB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100460C1C + 4 * byte_100536FB6[v4]))();
}

uint64_t sub_100460C1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100460C24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100460C2CLL);
  return result;
}

uint64_t sub_100460C38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100460C40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100460C44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100460C4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyListEntityQuery.QueryType()
{
  return &type metadata for AnyListEntityQuery.QueryType;
}

uint64_t sub_100460C68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100460D5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100460E50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 112 * a1 + 32;
  v6 = a3 + 112 * v4;
  if (v5 >= v6 || v5 + 112 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100460F44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  v6 = a3 + 56 * v4;
  if (v5 >= v6 || v5 + 56 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100461038(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10046112C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10046121C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100461310(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 112 * a1 + 32;
  v6 = a3 + 112 * v4;
  if (v5 >= v6 || v5 + 112 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100461404(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004614F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 48 * a1 + 32;
  v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_10002A750(&qword_10065F498);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100461604(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004616E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1004617D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_10002A750(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004618EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_10002A750(&qword_100654C78);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004619F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100461AE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100461C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static IndexPath.== infix(_:_:)(a1, a2) & 1) != 0
    && (static IndexPath.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    return static IndexPath.== infix(_:_:)(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100461C68(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double *v20;
  double *v21;

  *(_BYTE *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted) = 0;
  *(_BYTE *)(v7
           + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_dropInterceptingView) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) = 0;
  v15 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_BYTE *)(v15 + 32) = 1;
  v16 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
  v17 = sub_10002A750(&qword_100650538);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_BYTE *)(v18 + 56) = 1;
  *(_QWORD *)(v18 + 64) = 0;
  sub_1000CDFA4(a1, v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnID);
  v19 = (_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column);
  *v19 = a2;
  v19[1] = a3;
  v20 = (double *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
  *v20 = a4;
  v20[1] = a5;
  v21 = (double *)(v7
                 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell);
  *v21 = a6;
  v21[1] = a7;
  return v7;
}

uint64_t sub_100461DC4()
{
  uint64_t v0;

  sub_1000CDF68(v0 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnID);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column));

  sub_10046278C(v0 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100461E38()
{
  return type metadata accessor for TTRIRemindersBoardColumnReorderingContext(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingContext(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10065F698, (uint64_t)&nominal type descriptor for TTRIRemindersBoardColumnReorderingContext);
}

void sub_100461E54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1005371E0;
    v6[2] = &unk_1005371F8;
    v6[3] = &unk_1005371F8;
    v6[4] = &unk_100537210;
    v6[5] = &unk_100537228;
    v6[6] = &unk_100537228;
    v6[7] = &unk_100537228;
    v6[8] = &unk_100537240;
    v6[9] = &unk_100537228;
    v6[10] = &unk_100537258;
    sub_100461F24(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      v6[12] = &unk_100537270;
      swift_updateClassMetadata2(a1, 256, 13, v6, a1 + 80);
    }
  }
}

void sub_100461F24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10065F6A8)
  {
    v2 = sub_10002CA5C(&qword_100650538);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10065F6A8);
  }
}

void destroy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1)
{

}

uint64_t initializeWithCopy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v3;
  v4 = *(__int128 *)((char *)a2 + 24);
  v5 = *(__int128 *)((char *)a2 + 40);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 24) = v4;
  v6 = *(void **)(a1 + 64);
  v7 = (void *)*((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = v7;

  return a1;
}

uint64_t assignWithTake for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardColumnReorderingContext.DebugInfo()
{
  return &type metadata for TTRIRemindersBoardColumnReorderingContext.DebugInfo;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.ReorderingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004621A8 + 4 * byte_100537195[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1004621DC + 4 * byte_100537190[v4]))();
}

uint64_t sub_1004621DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004621E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004621ECLL);
  return result;
}

uint64_t sub_1004621F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100462200);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100462204(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10046220C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardColumnReorderingContext.ReorderingState()
{
  return &type metadata for TTRIRemindersBoardColumnReorderingContext.ReorderingState;
}

uint64_t *sub_100462228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t sub_1004622D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for IndexPath(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 20), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_100462354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1004623D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10046245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1004624E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100462564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100462570);
}

uint64_t sub_100462570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1004625AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004625B8);
}

uint64_t sub_1004625B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput(uint64_t a1)
{
  return sub_100007328(a1, qword_10065F7E0, (uint64_t)&nominal type descriptor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
}

uint64_t sub_10046260C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_10046267C()
{
  unint64_t result;

  result = qword_10065F820;
  if (!qword_10065F820)
  {
    result = swift_getWitnessTable(&unk_10053733C, &type metadata for TTRIRemindersBoardColumnReorderingContext.ReorderingState);
    atomic_store(result, (unint64_t *)&qword_10065F820);
  }
  return result;
}

uint64_t sub_1004626C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004626F8 + 4 * byte_10053719A[*v0]))(0x7472617453746F6ELL, 0xEA00000000006465);
}

uint64_t sub_1004626F8()
{
  return 0x676E697466696CLL;
}

uint64_t sub_100462710()
{
  return 0x696C6C65636E6163;
}

uint64_t sub_100462734()
{
  return 0x69726564726F6572;
}

uint64_t sub_100462778()
{
  return 0x6465646E65;
}

uint64_t sub_10046278C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100650530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004627CC(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 9;
  v3 = &byte_1005EAC60;
  while (1)
  {
    v5 = *v3++;
    v4 = v5;
    v6 = qword_1005373D8[v5];
    if (qword_100537390[v5] == a1 && v6 == a2)
      break;
    if (!--v2)
      return 9;
  }
  return v4;
}

uint64_t sub_10046282C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  char v64[32];

  v59 = a1;
  v60 = a2;
  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v54 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for IndexPath(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v52 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10065F828);
  __chkstk_darwin(v6);
  v56 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v8);
  v58 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v10 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2 + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees;
  swift_beginAccess(v2 + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees, v64, 0, 0);
  v21 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v22(v20, 1, v21))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_4:
    v27 = (uint64_t *)&unk_100640EB0;
    v28 = (uint64_t)v15;
LABEL_5:
    sub_1000073A0(v28, v27);
LABEL_6:
    v29 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v60, 1, 1, v29);
  }
  v47 = v22;
  v49 = v10;
  v50 = v2;
  v23 = (uint64_t)v58;
  v51 = v19;
  v48 = v12;
  sub_100010634(v20, (uint64_t)v61);
  v25 = v62;
  v24 = v63;
  v26 = v59;
  sub_10001413C(v61, v62);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40))(v26, v25, v24);
  sub_100027F10(v61);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    goto LABEL_4;
  v31 = (uint64_t)v51;
  sub_10001F580((uint64_t)v15, (uint64_t)v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)(v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v23, 1, v57) == 1)
  {
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27 = (uint64_t *)&unk_1006463C0;
    v28 = v23;
    goto LABEL_5;
  }
  v32 = (uint64_t)v48;
  sub_10001F580(v23, (uint64_t)v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v33 = v20;
  v34 = v56;
  sub_100462D48(v33, v56);
  if (v47(v34, 1, v21) == 1)
  {
    sub_1000073A0(v34, &qword_10065F828);
    sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_6;
  }
  v35 = *(_QWORD *)(v34 + 40);
  v36 = *(_QWORD *)(v34 + 48);
  swift_unknownObjectRetain(v35);
  sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  ObjectType = swift_getObjectType(v35, v37);
  v61[0] = v35;
  v39 = v54;
  TTRTreeContentsQueryable.indexPath(for:)(v31, ObjectType, *(_QWORD *)(*(_QWORD *)(v36 + 8) + 8));
  v40 = v53;
  v41 = v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v39, 1, v55) == 1)
  {
    swift_unknownObjectRelease(v35);
    sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27 = &qword_100646950;
    v28 = (uint64_t)v39;
    goto LABEL_5;
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v43 = v52;
  v42(v52, v39, v41);
  sub_100462D90();
  swift_unknownObjectRelease(v35);
  sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v44 = v60;
  sub_10001F580(v32, v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v45 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v42((char *)(v44 + *(int *)(v45 + 20)), v43, v41);
  sub_1000CDF24(v26, v44 + *(int *)(v45 + 24));
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
}

uint64_t sub_100462D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10065F828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100462D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t result;
  void (*v7)(_QWORD *, _QWORD);
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v14[4];
  uint64_t v15;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100462F18();
  result = dispatch thunk of Collection.isEmpty.getter(v1, v5);
  if ((result & 1) != 0)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  dispatch thunk of Collection.startIndex.getter(v1, v5);
  result = dispatch thunk of Collection.endIndex.getter(v1);
  if (v15 != v14[0])
  {
    v7 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v14, &v15, v1, v5);
    v9 = *v8;
    v7(v14, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    dispatch thunk of Collection.startIndex.getter(v1, v5);
    dispatch thunk of Collection.index(after:)(&v15, v14, v1, v5);
    dispatch thunk of Collection.endIndex.getter(v1);
    v10 = v15;
    v11 = v13;
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    result = v12(v0, v1);
    if (v11 >= v10)
    {
      v14[0] = v15;
      v14[1] = v13;
      dispatch thunk of Collection.subscript.getter(v14, v1, v5);
      v12((uint64_t)v4, v1);
      return v9;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_100462F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065F830;
  if (!qword_10065F830)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_10065F830);
  }
  return result;
}

double sub_100462F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  double result;

  v4 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(a3 + 72);
  if (v4)
  {
    v9 = swift_allocObject(&unk_100608AF8, 128, 7);
    v10 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v9 + 64) = v10;
    *(_OWORD *)(v9 + 80) = *(_OWORD *)(a3 + 64);
    v11 = *(_QWORD *)(a3 + 80);
    v12 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v9 + 32) = v12;
    *(_QWORD *)(v9 + 96) = v11;
    *(_QWORD *)(v9 + 104) = a4;
    *(_QWORD *)(v9 + 112) = a1;
    *(_QWORD *)(v9 + 120) = a2;
    sub_100371700(a3);
    swift_bridgeObjectRetain(a4);
    swift_retain();
    v4(sub_1004657BC, v9);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10046302C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[2];
  void (*v32)(uint64_t);
  uint64_t v33;

  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    if (a3 < 0)
      v29 = a3;
    else
      v29 = a3 & 0xFFFFFFFFFFFFFF8;
    v30 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(a3);
    v27 = _bridgeCocoaArray<A>(_:)(v29, v30);
    swift_bridgeObjectRelease(a3);
    goto LABEL_5;
  }
  if (!*(_QWORD *)(a1 + 16))
    return result;
  v31[1] = a5;
  v32 = a4;
  v17 = a2[1];
  swift_bridgeObjectRetain(a1);
  v31[0] = sub_1003E7D94(v18);
  swift_bridgeObjectRelease(a1);
  v33 = a3;
  v19 = sub_10002A750(&qword_10065F838);
  v20 = sub_1004657CC();
  v21 = Sequence.compactMapToSet<A>(_:)(sub_100465928, 0, v19, &type metadata for String, v20, &protocol witness table for String);
  v33 = v17;
  v22 = Sequence.compactMapToSet<A>(_:)(sub_1004632F4, 0, v19, &type metadata for String, v20, &protocol witness table for String);
  v23 = sub_1004640A8(v21, v31[0]);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRetain(a1);
  v25 = sub_100464A80(v24, v23);
  swift_bridgeObjectRelease(a1);
  swift_release();
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v17);
  sub_100371700((uint64_t)a2);
  a3 = (uint64_t)sub_100464764(v25, v22, v17, (uint64_t)a2);
  sub_1001808C4(a2);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease_n(v22, 2);
  swift_bridgeObjectRelease(v17);
  if ((unint64_t)a3 >> 62)
    goto LABEL_8;
  swift_bridgeObjectRetain(a3);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
  sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  v27 = a3;
LABEL_5:
  v28 = v32;
  swift_bridgeObjectRelease(a3);
  v28(v27);
  return swift_bridgeObjectRelease(v27);
}

uint64_t sub_1004632F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_100463310(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  Swift::Int result;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[9];

  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v34 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_10002A750(&qword_10065F858);
  result = static _SetStorage.allocate(capacity:)(a3);
  v11 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 56;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_38;
      if (v18 >= v33)
      {
LABEL_35:
        swift_release();
        return v11;
      }
      v19 = v32[v18];
      ++v14;
      if (!v19)
      {
        v14 = v18 + 1;
        if (v18 + 1 >= v33)
          goto LABEL_35;
        v19 = v32[v14];
        if (!v19)
        {
          v20 = v18 + 2;
          if (v20 >= v33)
            goto LABEL_35;
          v19 = v32[v20];
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_39;
              if (v14 >= v33)
                goto LABEL_35;
              v19 = v32[v14];
              ++v20;
              if (v19)
                goto LABEL_22;
            }
          }
          v14 = v20;
        }
      }
LABEL_22:
      v13 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (v14 << 6);
    }
    v21 = *(_QWORD *)(v34 + 72);
    sub_10002B1E8(*(_QWORD *)(a4 + 48) + v21 * v17, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)(v35, *(_QWORD *)(v11 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v35, v22);
    result = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v11 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v15 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v15 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v15 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v15 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    result = sub_10001F580((uint64_t)v10, *(_QWORD *)(v11 + 48) + v26 * v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    ++*(_QWORD *)(v11 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      goto LABEL_35;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

Swift::Int sub_1004635E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  Swift::Int result;
  unint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[9];

  v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release(a4);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_10002A750(&qword_10065F868);
  result = static _SetStorage.allocate(capacity:)(a3);
  v11 = result;
  v31 = a1;
  v32 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 56;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v32)
      {
LABEL_37:
        swift_release(a4);
        return v11;
      }
      v19 = v31[v18];
      ++v14;
      if (!v19)
      {
        v14 = v18 + 1;
        if (v18 + 1 >= v32)
          goto LABEL_37;
        v19 = v31[v14];
        if (!v19)
        {
          v14 = v18 + 2;
          if (v18 + 2 >= v32)
            goto LABEL_37;
          v19 = v31[v14];
          if (!v19)
          {
            v20 = v18 + 3;
            if (v20 >= v32)
              goto LABEL_37;
            v19 = v31[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v14 >= v32)
                  goto LABEL_37;
                v19 = v31[v14];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v14 = v20;
          }
        }
      }
LABEL_24:
      v13 = (v19 - 1) & v19;
      v17 = __clz(__rbit64(v19)) + (v14 << 6);
    }
    v21 = *(_QWORD *)(v33 + 72);
    sub_10002B1E8(*(_QWORD *)(a4 + 48) + v21 * v17, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)(v34, *(_QWORD *)(v11 + 40));
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v34);
    result = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v11 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v15 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v15 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v15 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v15 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = sub_10001F580((uint64_t)v10, *(_QWORD *)(v11 + 48) + v25 * v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    ++*(_QWORD *)(v11 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004638C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v40 = v9;
  sub_10002A750(&qword_10065F850);
  result = static _SetStorage.allocate(capacity:)(a3);
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v39)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v39)
          goto LABEL_37;
        v21 = v38[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v39)
            goto LABEL_37;
          v21 = v38[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v39)
              goto LABEL_37;
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v39)
                  goto LABEL_37;
                v21 = v38[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    v26 = *(_QWORD *)(v12 + 40);
    v27 = sub_1004137DC();
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v17 = v40;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v31 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100463BAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;
  uint64_t v29[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10002A750(&qword_10065F860);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v14);
    Hasher.init(_seed:)(v29, v9[5]);
    Hasher._combine(_:)(v18);
    result = Hasher._finalize()();
    v19 = -1 << *((_BYTE *)v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(v9[6] + v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_100463E14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10002A750(&qword_10065F848);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1004640A8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  Swift::Int v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_100464228((Swift::Int)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v3);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_100464228((Swift::Int)v10, v7, a2, v3);
    swift_release();
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

Swift::Int sub_100464228(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  BOOL v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  BOOL v61;
  unint64_t *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  _QWORD v71[9];
  uint64_t v72;

  v4 = a4;
  v5 = a3;
  v63 = (unint64_t *)result;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a4 + 16);
  v72 = a4;
  if (v7 < v6)
  {
    v8 = 0;
    v64 = a4 + 56;
    v9 = 1 << *(_BYTE *)(a4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(a4 + 56);
    v65 = (unint64_t)(v9 + 63) >> 6;
    v67 = 0;
    v12 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v11)
        {
          v13 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
          v68 = v8;
          v14 = v13 | (v8 << 6);
        }
        else
        {
          v15 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v15 >= v65)
            goto LABEL_79;
          v16 = *(_QWORD *)(v64 + 8 * v15);
          v17 = v8 + 1;
          if (!v16)
          {
            v17 = v8 + 2;
            if (v8 + 2 >= v65)
              goto LABEL_79;
            v16 = *(_QWORD *)(v64 + 8 * v17);
            if (!v16)
            {
              v17 = v8 + 3;
              if (v8 + 3 >= v65)
                goto LABEL_79;
              v16 = *(_QWORD *)(v64 + 8 * v17);
              if (!v16)
              {
                v18 = v8 + 4;
                if (v8 + 4 >= v65)
                  goto LABEL_79;
                v16 = *(_QWORD *)(v64 + 8 * v18);
                if (!v16)
                {
                  while (1)
                  {
                    v17 = v18 + 1;
                    if (__OFADD__(v18, 1))
                      goto LABEL_83;
                    if (v17 >= v65)
                      goto LABEL_79;
                    v16 = *(_QWORD *)(v64 + 8 * v17);
                    ++v18;
                    if (v16)
                      goto LABEL_22;
                  }
                }
                v17 = v8 + 4;
              }
            }
          }
LABEL_22:
          v11 = (v16 - 1) & v16;
          v68 = v17;
          v14 = __clz(__rbit64(v16)) + (v17 << 6);
        }
        v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
        v21 = *v19;
        v20 = v19[1];
        Hasher.init(_seed:)(v71, *(_QWORD *)(v5 + 40));
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v71, v21, v20);
        v22 = Hasher._finalize()();
        v23 = -1 << *(_BYTE *)(v5 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease(v20);
        v8 = v68;
        v5 = a3;
        v4 = v72;
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = v28[1];
      v30 = *v28 == v21 && v29 == v20;
      if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0) & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v12 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = v34[1];
          v36 = *v34 == v21 && v35 == v20;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v34, v35, v21, v20, 0) & 1) != 0)
          {
            result = swift_bridgeObjectRelease(v20);
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease(v20);
LABEL_38:
      v8 = v68;
      v5 = a3;
      v63[v25] |= v26;
      v37 = __OFADD__(v67++, 1);
      v4 = v72;
      if (v37)
        goto LABEL_82;
    }
  }
  v38 = 0;
  v66 = a3 + 56;
  v67 = 0;
  v39 = 1 << *(_BYTE *)(a3 + 32);
  if (v39 < 64)
    v40 = ~(-1 << v39);
  else
    v40 = -1;
  v41 = v40 & *(_QWORD *)(a3 + 56);
  v69 = (unint64_t)(v39 + 63) >> 6;
  v42 = a4 + 56;
  while (1)
  {
    if (v41)
    {
      v43 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      v44 = v43 | (v38 << 6);
      goto LABEL_63;
    }
    v45 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v45 >= v69)
      goto LABEL_79;
    v46 = *(_QWORD *)(v66 + 8 * v45);
    ++v38;
    if (!v46)
    {
      v38 = v45 + 1;
      if (v45 + 1 >= v69)
        goto LABEL_79;
      v46 = *(_QWORD *)(v66 + 8 * v38);
      if (!v46)
      {
        v38 = v45 + 2;
        if (v45 + 2 >= v69)
          goto LABEL_79;
        v46 = *(_QWORD *)(v66 + 8 * v38);
        if (!v46)
          break;
      }
    }
LABEL_62:
    v41 = (v46 - 1) & v46;
    v44 = __clz(__rbit64(v46)) + (v38 << 6);
LABEL_63:
    v48 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v44);
    v50 = *v48;
    v49 = v48[1];
    Hasher.init(_seed:)(v71, *(_QWORD *)(v4 + 40));
    swift_bridgeObjectRetain(v49);
    String.hash(into:)(v71, v50, v49);
    v51 = Hasher._finalize()();
    v52 = -1 << *(_BYTE *)(v4 + 32);
    v53 = v51 & ~v52;
    if (((*(_QWORD *)(v42 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
      goto LABEL_46;
    v54 = *(_QWORD *)(v72 + 48);
    v55 = (_QWORD *)(v54 + 16 * v53);
    v56 = v55[1];
    v57 = *v55 == v50 && v56 == v49;
    if (v57 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v55, v56, v50, v49, 0) & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease(v49);
      *(unint64_t *)((char *)v63 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
      v37 = __OFADD__(v67++, 1);
      v5 = a3;
      v4 = v72;
      if (v37)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_100463E14(v63, a2, v67, v5);
      }
    }
    else
    {
      v58 = ~v52;
      while (1)
      {
        v53 = (v53 + 1) & v58;
        if (((*(_QWORD *)(v42 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
          break;
        v59 = (_QWORD *)(v54 + 16 * v53);
        v60 = v59[1];
        v61 = *v59 == v50 && v60 == v49;
        if (v61 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v59, v60, v50, v49, 0) & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease(v49);
      v5 = a3;
      v4 = v72;
    }
  }
  v47 = v45 + 3;
  if (v47 >= v69)
    goto LABEL_79;
  v46 = *(_QWORD *)(v66 + 8 * v47);
  if (v46)
  {
    v38 = v47;
    goto LABEL_62;
  }
  while (1)
  {
    v38 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v38 >= v69)
      goto LABEL_79;
    v46 = *(_QWORD *)(v66 + 8 * v38);
    ++v47;
    if (v46)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

_QWORD *sub_100464764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  id v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v5)
  {
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v5);
    v8 = 0;
    v39 = v5;
    v40 = a1 + 32;
    v34 = (uint64_t *)(a3 + 64);
    v9 = v5;
    v38 = a3;
    while (v8 != v5)
    {
      v44 = v8;
      v43 = v9 - 1;
      v18 = (uint64_t *)(v40 + 16 * (v9 - 1));
      v19 = *v18;
      v20 = v18[1];
      swift_bridgeObjectRetain(v20);
      if ((sub_10037B9D4(v19, v20, a2) & 1) != 0 && (v21 = *(_QWORD *)(v38 + 16)) != 0)
      {
        v22 = v34;
        while (1)
        {
          v23 = *v22;
          if (*v22)
          {
            v24 = (void *)*(v22 - 4);
            v25 = *(v22 - 3);
            v27 = *(v22 - 2);
            v26 = *(v22 - 1);
            if (v26 == v19 && v23 == v20)
            {
              v26 = v19;
              v36 = v20;
              if (v27)
                goto LABEL_19;
LABEL_17:
              swift_bridgeObjectRetain(v20);
              v35 = 0;
              v37 = v20;
              goto LABEL_20;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(v22 - 1), *v22, v19, v20, 0) & 1) != 0)
              break;
          }
          v22 += 5;
          if (!--v21)
            goto LABEL_3;
        }
        v36 = v23;
        if (!v27)
          goto LABEL_17;
LABEL_19:
        v35 = v27;
        v19 = v25;
        v37 = v27;
LABEL_20:
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        v29 = swift_allocObject(&unk_100608B48, 144, 7);
        v30 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v29 + 48) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v29 + 64) = v30;
        *(_OWORD *)(v29 + 80) = *(_OWORD *)(a4 + 64);
        v31 = *(_QWORD *)(a4 + 80);
        v32 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(v29 + 16) = *(_OWORD *)a4;
        *(_OWORD *)(v29 + 32) = v32;
        *(_QWORD *)(v29 + 96) = v31;
        *(_QWORD *)(v29 + 104) = v24;
        *(_QWORD *)(v29 + 112) = v25;
        *(_QWORD *)(v29 + 120) = v27;
        *(_QWORD *)(v29 + 128) = v26;
        *(_QWORD *)(v29 + 136) = v36;
        v33 = v24;
        swift_bridgeObjectRetain_n(v35, 2);
        swift_bridgeObjectRetain(v23);
        sub_100371700(a4);
        v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v19, v37, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100465748, v29);
        v14 = swift_bridgeObjectRelease(v20);
      }
      else
      {
LABEL_3:
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        v10 = swift_allocObject(&unk_100608B20, 120, 7);
        v11 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v10 + 48) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v10 + 64) = v11;
        *(_OWORD *)(v10 + 80) = *(_OWORD *)(a4 + 64);
        v12 = *(_QWORD *)(a4 + 80);
        v13 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(v10 + 16) = *(_OWORD *)a4;
        *(_OWORD *)(v10 + 32) = v13;
        *(_QWORD *)(v10 + 96) = v12;
        *(_QWORD *)(v10 + 104) = v19;
        *(_QWORD *)(v10 + 112) = v20;
        swift_bridgeObjectRetain(v20);
        sub_100371700(a4);
        v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v19, v20, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100465880, v10);
        v15 = v14;
      }
      v5 = v39;
      v9 = v43;
      v8 = v44 + 1;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v17);
      if (v44 + 1 == v39)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100464A80(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[9];
  _QWORD *v29;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return (uint64_t)_swiftEmptyArrayStorage;
  v4 = 0;
  v26 = result + 32;
  v5 = a2 + 56;
  v25 = _swiftEmptyArrayStorage;
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v27 = v6;
    while (1)
    {
      if (v4 == v27)
      {
        __break(1u);
        return result;
      }
      v7 = (uint64_t *)(v26 + 16 * v4);
      v9 = *v7;
      v8 = v7[1];
      ++v4;
      if (!*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRetain(v8);
        goto LABEL_25;
      }
      Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
      swift_bridgeObjectRetain(v8);
      String.hash(into:)(v28, v9, v8);
      v10 = Hasher._finalize()();
      v11 = -1 << *(_BYTE *)(a2 + 32);
      v12 = v10 & ~v11;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_25;
      v13 = *(_QWORD *)(a2 + 48);
      v14 = (_QWORD *)(v13 + 16 * v12);
      v15 = v14[1];
      v16 = *v14 == v9 && v15 == v8;
      if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, v9, v8, 0) & 1) == 0)
        break;
LABEL_7:
      result = swift_bridgeObjectRelease(v8);
      if (v4 == v2)
        return (uint64_t)v25;
    }
    v17 = ~v11;
    while (1)
    {
      v12 = (v12 + 1) & v17;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        break;
      v18 = (_QWORD *)(v13 + 16 * v12);
      v19 = v18[1];
      v20 = *v18 == v9 && v19 == v8;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, v9, v8, 0) & 1) != 0)
        goto LABEL_7;
    }
LABEL_25:
    v21 = v25;
    result = swift_isUniquelyReferenced_nonNull_native(v25);
    v29 = v25;
    if ((result & 1) == 0)
    {
      result = sub_1003D7FFC(0, v25[2] + 1, 1);
      v21 = v29;
    }
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
    {
      result = sub_1003D7FFC(v22 > 1, v23 + 1, 1);
      v21 = v29;
    }
    v21[2] = v23 + 1;
    v25 = v21;
    v24 = &v21[2 * v23];
    v24[4] = v9;
    v24[5] = v8;
  }
  while (v4 != v2);
  return (uint64_t)v25;
}

Class sub_100464C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  void *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  void *v61;
  void *v62;
  id v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  Swift::String v68;
  UIMenu v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  Swift::String v78;
  UIMenu v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  Swift::String v92;
  Class isa;
  uint64_t v94;
  objc_class *v95;
  Swift::String v96;
  UIMenu v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  unint64_t v102;
  id v103;
  Swift::String v104;
  Class v105;
  uint64_t v107;
  uint64_t v108;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v110;
  Swift::OpaquePointer v111;
  _QWORD *v112;
  unint64_t v114;
  uint64_t v115;
  UIMenuElementSize v116;
  UIMenuElementSize v117;
  UIMenuElementSize v118;
  UIMenuElementSize v119;
  _QWORD aBlock[6];
  uint64_t v121[2];
  uint64_t v122[2];
  uint64_t v123;
  uint64_t v124;
  char v125;
  _BYTE v126[24];
  UIImage_optional v127;
  UIImage_optional v128;
  UIImage_optional v129;
  UIImage_optional v130;
  UIImage_optional v131;

  v1 = *(_QWORD *)a1;
  v123 = v1;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v4 = (_QWORD *)(v3 + 64);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v6 = (void *)*(v4 - 4);
      v7 = *(v4 - 3);
      v8 = *(v4 - 2);
      v9 = *(v4 - 1);
      v10 = *v4;
      swift_bridgeObjectRetain(*v4);
      v11 = v6;
      swift_bridgeObjectRetain(v8);
      if ((static TTRSectionID.__derived_enum_equals(_:_:)(v6, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease(v8);

      }
      else
      {
        aBlock[0] = v5;
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        {
          sub_1003D7E74(0, v5[2] + 1, 1);
          v5 = (_QWORD *)aBlock[0];
        }
        v13 = v5[2];
        v12 = v5[3];
        v14 = v5;
        if (v13 >= v12 >> 1)
        {
          sub_1003D7E74(v12 > 1, v13 + 1, 1);
          v14 = (_QWORD *)aBlock[0];
        }
        v14[2] = v13 + 1;
        v15 = &v14[5 * v13];
        v15[4] = v6;
        v15[5] = v7;
        v15[6] = v8;
        v15[7] = v9;
        v15[8] = v10;
        v5 = v14;
      }
      v4 += 5;
      --v2;
    }
    while (v2);
    sub_1000522B0(&v123);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = v5[2];
  v17 = a1;
  if (v16)
  {
    sub_100371700(a1);
    swift_retain();
    v18 = v5 + 8;
    v112 = v5;
    do
    {
      v32 = (void *)*(v18 - 4);
      if (v32)
      {
        v33 = *(v18 - 3);
        v34 = *(v18 - 2);
        v36 = *(v18 - 1);
        v35 = *v18;
        if (v34)
          v37 = *(v18 - 3);
        else
          v37 = 0;
        v38 = 0xE000000000000000;
        if (v34)
          v38 = *(v18 - 2);
        v114 = v38;
        v115 = v37;
        sub_1003717EC((uint64_t *)(a1 + 16), (uint64_t)v122);
        sub_1003717EC(v122, (uint64_t)&v124);
        if (v125)
        {
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain_n(v34, 2);
          v39 = v32;
          v22 = 0;
        }
        else
        {
          v19 = v124;
          sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain_n(v34, 2);
          v20 = v32;
          sub_1003718C8((uint64_t)v122);
          v21 = static NSObject.== infix(_:_:)(v19, v20);
          sub_1003718F4((uint64_t)v122);
          v22 = v21 & 1;
        }
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        v23 = swift_allocObject(&unk_100608AD0, 144, 7);
        v24 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v23 + 64) = v24;
        *(_OWORD *)(v23 + 80) = *(_OWORD *)(a1 + 64);
        v25 = *(_QWORD *)(a1 + 80);
        v26 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
        *(_OWORD *)(v23 + 32) = v26;
        *(_QWORD *)(v23 + 96) = v25;
        *(_QWORD *)(v23 + 104) = v32;
        *(_QWORD *)(v23 + 112) = v33;
        *(_QWORD *)(v23 + 120) = v34;
        *(_QWORD *)(v23 + 128) = v36;
        *(_QWORD *)(v23 + 136) = v35;
        sub_100371700(a1);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        v27 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v115, v114, 0, 0, 0, 0, 0, 0, 0, 0, v22, sub_100465748, v23);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v34);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
        specialized Array._endMutation()(v31);
        v5 = v112;
      }
      v18 += 5;
      --v16;
    }
    while (v16);
    swift_release();
    v40 = v5;
    v41 = aBlock[0];
    v17 = a1;
  }
  else
  {
    sub_100371700(a1);
    v40 = v5;
    v41 = (uint64_t)_swiftEmptyArrayStorage;
  }
  sub_1001808C4((uint64_t *)v17);
  v42 = *(unsigned __int8 *)(v17 + 27);
  v43 = static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)(v42);
  v45 = v44;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v46 = swift_allocObject(&unk_100608A30, 104, 7);
  v47 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v46 + 48) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v46 + 64) = v47;
  *(_OWORD *)(v46 + 80) = *(_OWORD *)(v17 + 64);
  *(_QWORD *)(v46 + 96) = *(_QWORD *)(v17 + 80);
  v48 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v46 + 16) = *(_OWORD *)v17;
  *(_OWORD *)(v46 + 32) = v48;
  sub_100371700(v17);
  v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v43, v45, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100371794, v46);
  v50._object = (void *)0x8000000100576E00;
  v51._countAndFlagsBits = 1701736270;
  v51._object = (void *)0xE400000000000000;
  v50._countAndFlagsBits = 0xD000000000000045;
  v52 = TTRLocalizedString(_:comment:)(v51, v50);
  v53 = swift_allocObject(&unk_100608A58, 104, 7);
  v54 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v53 + 48) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v53 + 64) = v54;
  *(_OWORD *)(v53 + 80) = *(_OWORD *)(v17 + 64);
  *(_QWORD *)(v53 + 96) = *(_QWORD *)(v17 + 80);
  v55 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v53 + 16) = *(_OWORD *)v17;
  *(_OWORD *)(v53 + 32) = v55;
  sub_100371700(v17);
  v56 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v52._countAndFlagsBits, v52._object, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003717C8, v53);
  sub_1003717EC((uint64_t *)(v17 + 16), (uint64_t)v121);
  sub_1003717EC(v121, (uint64_t)v126);
  objc_msgSend(v56, "setState:", v126[8] > 1u);
  v57 = swift_allocObject(&unk_100608A80, 112, 7);
  v58 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v57 + 48) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v57 + 64) = v58;
  *(_OWORD *)(v57 + 80) = *(_OWORD *)(v17 + 64);
  v59 = *(_QWORD *)(v17 + 80);
  v60 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v57 + 16) = *(_OWORD *)v17;
  *(_OWORD *)(v57 + 32) = v60;
  *(_QWORD *)(v57 + 96) = v59;
  *(_QWORD *)(v57 + 104) = v40;
  aBlock[4] = sub_100465738;
  aBlock[5] = v57;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100085A2C;
  aBlock[3] = &unk_100608A98;
  v61 = _Block_copy(aBlock);
  v62 = (void *)objc_opt_self(UIDeferredMenuElement);
  sub_100371700(v17);
  v63 = objc_msgSend(v62, "elementWithProvider:", v61);
  _Block_release(v61);
  swift_release();
  aBlock[0] = _swiftEmptyArrayStorage;
  v64 = *(_BYTE *)(v17 + 26);
  if ((v64 & 1) != 0)
  {
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v65 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v66 = swift_allocObject(v65, 40, 7);
    *(_OWORD *)(v66 + 16) = xmmword_100521140;
    *(_QWORD *)(v66 + 32) = v56;
    v116 = v66;
    specialized Array._endMutation()(v66);
    v67 = v56;
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v127.value.super.isa = 0;
    v127.is_nil = 0;
    v69.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v68, (Swift::String_optional)0, v127, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v116, v110).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69.super.super.isa);
    v71 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69.super.super.isa);
    specialized Array._endMutation()(v72);
  }
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v107 = v41;
    else
      v107 = v41 & 0xFFFFFFFFFFFFFF8;
    v108 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v41);
    v74 = _bridgeCocoaArray<A>(_:)(v107, v108);
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    swift_bridgeObjectRetain(v41);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v73);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v74 = v41;
  }
  swift_bridgeObjectRelease(v41);
  sub_1004507E0(v74);
  if ((v64 & 1) != 0)
  {
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v75 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v76 = swift_allocObject(v75, 40, 7);
    *(_OWORD *)(v76 + 16) = xmmword_100521140;
    *(_QWORD *)(v76 + 32) = v49;
    v117 = v76;
    specialized Array._endMutation()(v76);
    v77 = v49;
    v78._countAndFlagsBits = 0;
    v78._object = (void *)0xE000000000000000;
    v128.value.super.isa = 0;
    v128.is_nil = 0;
    v79.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v78, (Swift::String_optional)0, v128, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v117, v110).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79.super.super.isa);
    v81 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v80 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v81 >= v80 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
    v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79.super.super.isa);
    specialized Array._endMutation()(v82);
  }
  if ((*(_BYTE *)(a1 + 25) & 1) != 0)
  {
    v83 = static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)(v42);
    v85 = v84;
    v86 = static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)(v42);
    v88 = v87;
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v89 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v90 = swift_allocObject(v89, 40, 7);
    *(_OWORD *)(v90 + 16) = xmmword_100521140;
    *(_QWORD *)(v90 + 32) = v63;
    v118 = v90;
    specialized Array._endMutation()(v90);
    v91 = v63;
    v92._countAndFlagsBits = v86;
    v92._object = v88;
    v129.value.super.isa = 0;
    v129.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v92, (Swift::String_optional)0, v129, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v118, v110).super.super.isa;
    v94 = swift_allocObject(v89, 40, 7);
    *(_OWORD *)(v94 + 16) = xmmword_100521140;
    *(_QWORD *)(v94 + 32) = isa;
    v119 = v94;
    specialized Array._endMutation()(v94);
    v95 = isa;
    v96._countAndFlagsBits = v83;
    v96._object = v85;
    v130.value.super.isa = 0;
    v130.is_nil = 0;
    v97.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v96, (Swift::String_optional)0, v130, 0, 0xFFFFFFFFFFFFFFFFLL, v119, v111).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97.super.super.isa);
    v99 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v98 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v99 >= v98 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
    v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97.super.super.isa);
    specialized Array._endMutation()(v100);

  }
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v101 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
  v102 = aBlock[0];
  v103 = v101;
  preferredElementSize = sub_100071ED4(v102);
  v104._countAndFlagsBits = 0;
  v104._object = (void *)0xE000000000000000;
  v131.value.super.isa = (Class)v101;
  v131.is_nil = 0;
  v105 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v104, (Swift::String_optional)0, v131, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v110).super.super.isa;

  return v105;
}

uint64_t sub_1004656D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

double sub_100465738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100462F60(a1, a2, v2 + 16, *(_QWORD *)(v2 + 104));
}

uint64_t sub_10046574C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_release();
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1004657BC(uint64_t a1)
{
  uint64_t v1;

  return sub_10046302C(a1, (uint64_t *)(v1 + 16), *(_QWORD *)(v1 + 104), *(void (**)(uint64_t))(v1 + 112), *(_QWORD *)(v1 + 120));
}

unint64_t sub_1004657CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065F840;
  if (!qword_10065F840)
  {
    v1 = sub_10002CA5C(&qword_10065F838);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10065F840);
  }
  return result;
}

uint64_t sub_100465818()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100465880()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = (uint64_t (*)(_QWORD, _QWORD))v0[9];
  if (v1)
    return v1(v0[13], v0[14]);
  return result;
}

uint64_t sub_1004658B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100465928@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004632F4(a1, a2);
}

void sub_10046593C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  char v12;
  uint64_t v14;
  _QWORD v16[2];
  char v17;
  double v18[2];
  char v19;
  _BYTE v20[24];

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v20, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_10002A750(&qword_10065F9F8);
    NSKeyValueObservedChange.oldValue.getter(v16);
    v10 = *(double *)v16;
    v11 = *(double *)&v16[1];
    v12 = v17;
    NSKeyValueObservedChange.newValue.getter(v18, v9);
    if ((v12 & 1) != 0)
    {
      if ((v19 & 1) != 0)
      {
LABEL_12:
        swift_release();
        return;
      }
    }
    else if ((v19 & 1) == 0 && v10 == v18[0] && v11 == v18[1])
    {
      goto LABEL_12;
    }
    if (*(_BYTE *)(v8 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_isActive) == 1)
    {
      v14 = v8 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
      swift_beginAccess(v8 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID, v16, 0, 0);
      sub_1000CDF24(v14, (uint64_t)v6);
      PassthroughSubject.send(_:)(v6);
      sub_1000CDF68((uint64_t)v6);
    }
    goto LABEL_12;
  }
}

double sub_100465A8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v9, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_isActive) == 1)
    {
      v7 = Strong + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
      swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID, v8, 0, 0);
      sub_1000CDF24(v7, (uint64_t)v4);
      PassthroughSubject.send(_:)(v4);
      sub_1000CDF68((uint64_t)v4);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100465B78()
{
  uint64_t v0;

  sub_1000CDF68(v0 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration));
  swift_release();
  sub_10002CAA0(v0 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_contentSizeObservation);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100465BE8()
{
  return type metadata accessor for TTRIBoardColumnChromelessBarsStateContributor(0);
}

uint64_t type metadata accessor for TTRIBoardColumnChromelessBarsStateContributor(uint64_t a1)
{
  uint64_t result;

  result = qword_10065F8B0;
  if (!qword_10065F8B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIBoardColumnChromelessBarsStateContributor);
  return result;
}

uint64_t sub_100465C2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100537480;
    v4[2] = &unk_100537498;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_1005374B0;
    v4[5] = &unk_1005374C8;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ScrollOffsetObserver()
{
  return objc_opt_self(_TtC9RemindersP33_F0C3DF1C7E2DDC19EDE9BABCDF547B2B20ScrollOffsetObserver);
}

uint64_t sub_100465D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10065FA00);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10065FA00);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_100465E14()
{
  return _swiftEmptyArrayStorage;
}

void sub_100465E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D808 != -1)
    swift_once(&qword_10063D808, sub_100465D84);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_10065FA00);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Public Template Viewer Add List", 31, 2, v6);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource), v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
    type metadata accessor for MainActor(0);
    swift_retain();
    v13 = v11;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_100608BD0, 48, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v1;
    v15[5] = v13;
    sub_100148368((uint64_t)v4, (uint64_t)&unk_100660390, (uint64_t)v15);

    swift_release();
  }
  else
  {
    v19 = Logger.logObject.getter(0);
    v16 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v16, "TTRIShowPublicTemplatePresenter: failed to create list; missing listRepresentation",
        v17,
        2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

uint64_t sub_10046604C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[14] = v6;
  v5[15] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[16] = v8;
  v5[17] = v9;
  return swift_task_switch(sub_1004660BC, v8, v9);
}

uint64_t sub_1004660BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[14];
  v1[18] = *(_QWORD *)(v1[12] + 88);
  v1[19] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[20] = v4;
  v1[21] = v5;
  return swift_task_switch(sub_100466128, v4, v5);
}

uint64_t sub_100466128()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[18] + 16);
  v0[22] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[23] = v2;
    *v2 = v0;
    v2[1] = sub_1004661B0;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_100466238, v0[16], v0[17]);
  }
}

uint64_t sub_1004661B0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));

  return swift_task_switch(sub_100466200, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168));
}

uint64_t sub_100466200()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100466238, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_100466238()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  int *v24;

  Strong = swift_unknownObjectWeakLoadStrong(v0[12] + 152);
  if (Strong)
  {
    v3 = Strong;
    ObjectType = swift_getObjectType(Strong, v2);
    v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRemindersListModalPresentationModuleDelegate);
    if (v5)
      v7 = v5;
    else
      v7 = 0;
    if (v5)
      v8 = v3;
    else
      v8 = 0;
    if (v8)
    {
      v9 = v0[12];
      v10 = swift_getObjectType(v8, v6);
      v0[5] = type metadata accessor for TTRIShowPublicTemplatePresenter(0);
      v0[6] = &off_1005F31C8;
      v0[2] = v9;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16))(v0 + 2, v10, v7);
      swift_retain();
      swift_unknownObjectRelease(v3);
      sub_100027F10(v0 + 2);
    }
    else
    {
      swift_unknownObjectRelease(v3);
    }
  }
  v11 = v0[12];
  v12 = objc_allocWithZone((Class)TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithDebugIdentifier:", v13);
  v0[24] = v14;

  v15 = *(_QWORD *)(v11 + 72);
  v16 = *(_QWORD *)(v11 + 80);
  v18 = swift_getObjectType(v15, v17);
  v19 = *(int **)(v16 + 624);
  v20 = v19[1];
  v24 = (int *)((char *)v19 + *v19);
  v21 = v14;
  v22 = (_QWORD *)swift_task_alloc(v20);
  v0[25] = v22;
  *v22 = v0;
  v22[1] = sub_1004663BC;
  return ((uint64_t (*)(_QWORD, id, uint64_t, uint64_t))v24)(v0[13], v14, v18, v16);
}

uint64_t sub_1004663BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 200);
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 128);
    v6 = *(_QWORD *)(v3 + 136);
    v7 = sub_10046651C;
  }
  else
  {

    v5 = *(_QWORD *)(v3 + 128);
    v6 = *(_QWORD *)(v3 + 136);
    v7 = sub_100466430;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_100466430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  __n128 v10;
  void *v11;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 152);
  if (Strong)
  {
    v4 = Strong;
    ObjectType = swift_getObjectType(Strong, v3);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowPublicTemplateModuleDelegate))
      v6 = v4;
    else
      v6 = 0;
    v7 = *(void **)(v0 + 208);
    v8 = *(void **)(v0 + 192);
    if (v6)
    {
      sub_10001413C((_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 72));
      swift_retain();
      v9 = v7;
      sub_10029DDA4(v9, v8, 1);

      swift_unknownObjectRelease(v4);
      v10 = swift_release();
    }
    else
    {
      swift_unknownObjectRelease(v4);

    }
  }
  else
  {
    v11 = *(void **)(v0 + 208);

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_10046651C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 192);
  swift_release();

  if (qword_10063D808 != -1)
    swift_once(&qword_10063D808, sub_100465D84);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_10065FA00);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 216);
  if (v7)
  {
    v15 = *(void **)(v0 + 192);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue(v8, v0 + 80, v0 + 56);
    v11 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    v13 = v12;
    *(_QWORD *)(v0 + 88) = sub_100027E40(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRMShowPublicTemplatePresenter: failed to create list from template {error: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {

    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10046672C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double result;
  uint64_t v12;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D808 != -1)
    swift_once(&qword_10063D808, sub_100465D84);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_10065FA00);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Public Template Viewer Cancel", 29, 2, v6);
  swift_bridgeObjectRelease(v6);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = swift_retain();
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_100608BA8, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v1;
  sub_100148368((uint64_t)v4, (uint64_t)&unk_100660380, (uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100466878(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a4;
  v4[8] = *a4;
  v5 = type metadata accessor for MainActor(0);
  v4[9] = v5;
  v4[10] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[11] = v7;
  v4[12] = v8;
  return swift_task_switch(sub_1004668F0, v7, v8);
}

uint64_t sub_1004668F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[9];
  v1[13] = *(_QWORD *)(v1[7] + 88);
  v1[14] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[15] = v4;
  v1[16] = v5;
  return swift_task_switch(sub_10046695C, v4, v5);
}

uint64_t sub_10046695C()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[13] + 16);
  v0[17] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[18] = v2;
    *v2 = v0;
    v2[1] = sub_1004669E4;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_100466A6C, v0[11], v0[12]);
  }
}

uint64_t sub_1004669E4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));

  return swift_task_switch(sub_100466A34, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100466A34()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100466A6C, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_100466A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 152);
  if (Strong)
  {
    v4 = Strong;
    ObjectType = swift_getObjectType(Strong, v3);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRemindersListModalPresentationModuleDelegate);
    if (v6)
      v8 = v6;
    else
      v8 = 0;
    if (v6)
      v9 = v4;
    else
      v9 = 0;
    if (v9)
    {
      v10 = *(_QWORD *)(v0 + 56);
      v11 = *(_QWORD *)(v0 + 64);
      v12 = swift_getObjectType(v9, v7);
      *(_QWORD *)(v0 + 40) = v11;
      *(_QWORD *)(v0 + 48) = &off_1005F31C8;
      *(_QWORD *)(v0 + 16) = v10;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v0 + 16, v12, v8);
      swift_retain();
      swift_unknownObjectRelease(v4);
      sub_100027F10((_QWORD *)(v0 + 16));
    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100466B38()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource));
}

uint64_t sub_100466B48()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100466B88()
{
  return type metadata accessor for TTRIShowPublicTemplatePresenter(0);
}

uint64_t type metadata accessor for TTRIShowPublicTemplatePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10065FA48;
  if (!qword_10065FA48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowPublicTemplatePresenter);
  return result;
}

uint64_t sub_100466BCC(uint64_t a1)
{
  void *v2;

  v2 = &unk_100537530;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

uint64_t sub_100466C0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100466C38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (_QWORD *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10066037C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_100466878(a1, v4, v5, v6);
}

uint64_t sub_100466CA4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100466CD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10066038C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10046604C(a1, v4, v5, v7, v6);
}

void sub_100466D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id v12;

  v5 = v2 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_detailLabel;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_detailLabel);
  if (!Strong)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v7 = (void *)Strong;
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v7, "setText:", v8);

  v9 = swift_unknownObjectWeakLoadStrong(v5);
  if (!v9)
    goto LABEL_11;
  v12 = (id)v9;
  if (a2)
  {
    v10 = String.count.getter(a1, a2);
    swift_bridgeObjectRelease(a2);
    v11 = v10 < 1;
  }
  else
  {
    v11 = 1;
  }
  objc_msgSend(v12, "setHidden:", v11);

}

void sub_100466E44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Class isa;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  Class v13;
  id v14;
  uint64_t v15;

  v2 = v1;
  if (a1)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController);
    if (v3)
    {
      v5 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v6 = swift_allocObject(v5, 40, 7);
      *(_OWORD *)(v6 + 16) = xmmword_100521140;
      *(_QWORD *)(v6 + 32) = a1;
      v15 = v6;
      specialized Array._endMutation()(v6);
      sub_10035A730();
      v14 = a1;
      v7 = v3;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v15);
      objc_msgSend(v7, "setContacts:", isa);

      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView);
      if (Strong)
      {
        v10 = Strong;
        objc_msgSend(Strong, "setHidden:", 0);

LABEL_8:
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController);
  if (!v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_10035A730();
  v12 = v11;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setContacts:", v13);

  v14 = (id)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView);
  if (v14)
  {
    objc_msgSend(v14, "setHidden:", 1);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
}

void sub_100466FE4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  char *v9;
  void *Strong;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  objc_super v29;

  v29.receiver = v2;
  v29.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v29, "awakeFromNib");
  v3 = OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController])
    goto LABEL_7;
  v4 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
  v5 = *(void **)&v2[v3];
  *(_QWORD *)&v2[v3] = v4;

  v6 = *(void **)&v2[v3];
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v6, "setThreeDTouchEnabled:", 0);
  v7 = *(void **)&v2[v3];
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = objc_msgSend(v7, "view");
  objc_msgSend(v8, "setAutoresizingMask:", 18);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v9 = &v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView]);
  if (!Strong)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = Strong;
  objc_msgSend(Strong, "addSubview:", v8);

  v12 = (void *)swift_unknownObjectWeakLoadStrong(v9);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "bounds");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

    objc_msgSend(v8, "setFrame:", v15, v17, v19, v21);
LABEL_7:
    v22 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_mainLabel]);
    if (v22)
    {
      v23 = (void *)v22;
      v24 = (void *)objc_opt_self(UIColor);
      v25 = objc_msgSend(v24, "labelColor");
      objc_msgSend(v23, "setTextColor:", v25);

      v26 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_detailLabel]);
      if (v26)
      {
        v27 = (void *)v26;
        v28 = objc_msgSend(v24, "secondaryLabelColor");
        objc_msgSend(v27, "setTextColor:", v28);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

id sub_1004672E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  NSString v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_mainLabel], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_detailLabel], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController] = 0;
  if (a3)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, "initWithStyle:reuseIdentifier:", a1, v7);

  return v8;
}

id sub_100467408(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  double v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarContainerView], 0);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_mainLabel], 0);
  *(_QWORD *)&v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_detailLabel], 0).n128_u64[0];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController] = 0;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1, v5);

  return v6;
}

uint64_t type metadata accessor for TTRIListSharingParticipantCell()
{
  return objc_opt_self(_TtC9Reminders30TTRIListSharingParticipantCell);
}

id TTRIRootAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRootAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

id TTRIRootAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRootAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004675E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100467608(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
  return TTRTreeStorageItem.treeItemDescription.getter(a1, v2);
}

uint64_t initializeWithCopy for TTRIAccountsListsViewUpdates(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for TTRIAccountsListsViewUpdates(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  *((_BYTE *)a1 + 49) = *((_BYTE *)a2 + 49);
  return a1;
}

uint64_t *assignWithTake for TTRIAccountsListsViewUpdates(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  *((_BYTE *)a1 + 49) = *((_BYTE *)a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAccountsListsViewUpdates(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 50))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAccountsListsViewUpdates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 50) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewUpdates()
{
  return &type metadata for TTRIAccountsListsViewUpdates;
}

uint64_t storeEnumTagSinglePayload for TTRIAccountsListsViewUpdates.EditModeTransition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100467888 + 4 * byte_1005375F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004678BC + 4 * asc_1005375F0[v4]))();
}

uint64_t sub_1004678BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004678C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004678CCLL);
  return result;
}

uint64_t sub_1004678D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004678E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004678E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004678EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1004678FC()
{
  unint64_t result;

  result = qword_100660430;
  if (!qword_100660430)
  {
    result = swift_getWitnessTable(&unk_100537694, &type metadata for TTRIAccountsListsViewUpdates.EditModeTransition);
    atomic_store(result, (unint64_t *)&qword_100660430);
  }
  return result;
}

void *OpenNewReminderAppIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenNewReminderAppIntent.openAppWhenRun;
}

uint64_t sub_10046794C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100012DDC(v10, static OpenNewReminderAppIntent.title);
  sub_100012DC4(v10, (uint64_t)static OpenNewReminderAppIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000010057A5C0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Name of Open New Reminder AppIntent", 35, 2);
}

uint64_t OpenNewReminderAppIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_10063D810 != -1)
    swift_once(&qword_10063D810, sub_10046794C);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_100012DC4(v0, (uint64_t)static OpenNewReminderAppIntent.title);
}

uint64_t static OpenNewReminderAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10063D810 != -1)
    swift_once(&qword_10063D810, sub_10046794C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100012DC4(v2, (uint64_t)static OpenNewReminderAppIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static OpenNewReminderAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x800000010057A550);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "TTROpenNewReminderAppIntent Reminders App Intent title description", 66, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t OpenNewReminderAppIntent.perform()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v1[2] = a1;
  v2 = type metadata accessor for REMNavigationSpecifier(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RemindersAppIntentCategory(0);
  v1[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[10] = v7;
  v1[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v1[12] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  return swift_task_switch(sub_100467E74, v10, v11);
}

uint64_t sub_100467E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v3 + 104))(v1, enum case for RemindersAppIntentCategory.publicAppIntent(_:), v2, v9);
  v10 = sub_1001F02FC();
  AppIntent.postAnalytics(category:)(v1, &type metadata for OpenNewReminderAppIntent, v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, enum case for REMNavigationSpecifier.newReminder(_:), v8);
  REMNavigationSpecifier.url.getter(v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  URL.open()();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v14);
  static IntentResult.result<>()(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100467F98()
{
  unint64_t result;

  result = qword_100660440;
  if (!qword_100660440)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNewReminderAppIntent, &type metadata for OpenNewReminderAppIntent);
    atomic_store(result, (unint64_t *)&qword_100660440);
  }
  return result;
}

unint64_t sub_100467FE0()
{
  unint64_t result;

  result = qword_100660448;
  if (!qword_100660448)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNewReminderAppIntent, &type metadata for OpenNewReminderAppIntent);
    atomic_store(result, (unint64_t *)&qword_100660448);
  }
  return result;
}

uint64_t sub_100468024(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenNewReminderAppIntent.perform()>>, 1);
}

uint64_t sub_100468034(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001F02FC();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_100468084(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10066043C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10004A08C;
  return OpenNewReminderAppIntent.perform()(a1);
}

uint64_t sub_1004680D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F02FC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNewReminderAppIntent()
{
  return &type metadata for OpenNewReminderAppIntent;
}

uint64_t sub_10046810C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  int v8;
  void *v10;
  _QWORD v11[4];

  sub_100028CFC(a1, (uint64_t)v11);
  v6 = swift_dynamicCast(&v10, v11, &type metadata for Any[8], v3, 6);
  if (!(_DWORD)v6)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  v7 = v10;
  AnyHashable.base.getter(v11, v6);

  v8 = swift_dynamicCast(a3, v11, &type metadata for Any[8], a2, 6);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v8 ^ 1u, 1, a2);
}

uint64_t sub_1004681DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  void *v5;
  char v6;
  char *v8;
  _BYTE v9[24];
  uint64_t v10;

  ObjectType = swift_getObjectType(v2, a2);
  sub_100107414(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_10002CAA0((uint64_t)v9);
    goto LABEL_5;
  }
  if ((swift_dynamicCast(&v8, v9, &type metadata for Any[8], ObjectType, 6) & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    return v6 & 1;
  }
  v5 = v8;
  v6 = static AnyHashable.== infix(_:_:)(v2 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_itemID, &v8[OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_itemID]);

  return v6 & 1;
}

uint64_t type metadata accessor for TTRITreeViewContextMenuItemIdentifier()
{
  return objc_opt_self(_TtC9Reminders37TTRITreeViewContextMenuItemIdentifier);
}

id sub_1004683B8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = 0;
  v13 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier;
  v14 = objc_allocWithZone((Class)NSUUID);
  v15 = v6;
  *(_QWORD *)&v6[v13] = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_ovalLayer] = 0;

  v18.receiver = v15;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  sub_1004684B4();

  return v16;
}

void sub_1004684B4()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "tapGestureAction:");
  objc_msgSend(v6, "setDelegate:", v0);
  objc_msgSend(v0, "addGestureRecognizer:", v6);
  v1 = objc_msgSend(objc_allocWithZone((Class)PKScribbleInteraction), "init");
  v2 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction;
  v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = v1;

  v4 = *(void **)&v0[v2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v4, "setDelegate:", v0);
  v5 = *(void **)&v0[v2];
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v5, "setElementSource:", v0);
  if (*(_QWORD *)&v0[v2])
  {
    objc_msgSend(v0, "addInteraction:");

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1004685CC(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = 0;
  v6 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier;
  v7 = objc_allocWithZone((Class)NSUUID);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_ovalLayer] = 0;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_1004684B4();

  }
  return v10;
}

uint64_t type metadata accessor for TTRIRemindersListBackgroundView()
{
  return objc_opt_self(_TtC9Reminders31TTRIRemindersListBackgroundView);
}

uint64_t sub_100468A84(char *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  uint64_t result;
  uint64_t v10;
  id v11;
  char *v12;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate]);
  if (result)
  {
    v10 = result;
    v11 = a3;
    swift_unknownObjectRetain(a4);
    v12 = a1;
    a5(0x756F72676B636162, 0xEE0077656956646ELL);

    swift_unknownObjectRelease(a4);
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

double sub_100468B4C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  double v12;

  v2 = v1;
  v4 = objc_opt_self(NSUUID);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  v6 = 0.0;
  if (v5)
  {
    v7 = (void *)v5;
    v8 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier];
    sub_100468E6C();
    v9 = v8;
    v10 = v7;
    swift_unknownObjectRetain(a1);
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) != 0)
    {
      objc_msgSend(v2, "bounds");
      return v12;
    }
  }
  return v6;
}

double sub_100468C30(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  id v22;

  v6 = swift_allocObject(&unk_100608E70, 24, 7);
  *(_QWORD *)(v6 + 16) = a3;
  v7 = objc_opt_self(NSUUID);
  v8 = swift_dynamicCastObjCClass(a1, v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier);
    sub_100468E6C();
    swift_unknownObjectRetain(a1);
    _Block_copy(a3);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate);
      if (Strong)
      {
        v15 = Strong;
        sub_1002D9934();
        swift_unknownObjectRelease(v15);
        v16 = swift_allocObject(&unk_100608E98, 32, 7);
        *(_QWORD *)(v16 + 16) = sub_100468E5C;
        *(_QWORD *)(v16 + 24) = v6;
        v17 = swift_retain();
        v18 = (void *)zalgo.getter(v17);
        dispatch thunk of Promise.then<A>(on:closure:)(v18, sub_100468ECC, v16, (char *)&type metadata for () + 8);
        swift_release();

        v19 = swift_allocObject(&unk_100608EC0, 32, 7);
        *(_QWORD *)(v19 + 16) = sub_100468E5C;
        *(_QWORD *)(v19 + 24) = v6;
        v20 = swift_retain();
        v22 = (id)zalgo.getter(v20);
        dispatch thunk of Promise.error(on:closure:)(v22, sub_100468EF8, v19);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        return result;
      }
    }
  }
  else
  {
    _Block_copy(a3);
  }
  a3[2](a3, 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100468E38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100468E5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

unint64_t sub_100468E6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006605F8;
  if (!qword_1006605F8)
  {
    v1 = objc_opt_self(NSUUID);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006605F8);
  }
  return result;
}

uint64_t sub_100468EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100468ECC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_100468EF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_100468F20(_QWORD *a1, void **a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  void *v72;
  void (*v73)(void *, _UNKNOWN **, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, _UNKNOWN **);
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[4];
  __int128 v106;
  __int128 v107;
  _QWORD v108[16];
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;

  v97 = a4;
  v99 = a3;
  v101 = a1;
  v5 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v6 = __chkstk_darwin(v5);
  v95 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v94 = (uint64_t)&v94 - v8;
  v100 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v100);
  v102 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v17);
  v19 = (void **)((char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8((uint64_t)a2, (uint64_t)v19, v20);
  v108[0] = _swiftEmptyArrayStorage;
  v21 = sub_100080C90();
  v22 = sub_10002A750(&qword_100641278);
  v23 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v108, v22, v23, v14, v21);
  v24 = v99;
  sub_100041F70(v19, (uint64_t)v16, objc_msgSend(v99, "remObjectID"), (uint64_t)v108);
  v25 = *a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for REMRemindersListDataView.SortingStyle.default(_:), v10);
  v26 = type metadata accessor for TTRShowRecentlyDeletedDataModelSource(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = TTRShowRecentlyDeletedDataModelSource.init(store:account:sortingStyle:)(v25, v24, v13);
  v28 = (void *)v108[0];
  v29 = type metadata accessor for TTRShowRecentlyDeletedViewModelSource(0);
  v30 = (uint64_t *)swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v31 = v25;
  v32 = v24;
  v33 = v28;
  v34 = (void *)sub_100469650(v27, v33, v30);

  sub_10002B1E8((uint64_t)a2, (uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v108, (uint64_t)v105);
  swift_retain(v34);
  v99 = v34;
  sub_100042A94((uint64_t)v19, (uint64_t)v105, (uint64_t)v34, (uint64_t)&off_100609110, v102);
  v35 = v94;
  sub_100042C0C(v94);
  v36 = type metadata accessor for TTRIShowRecentlyDeletedPresenter(0);
  v37 = *(unsigned int *)(v36 + 48);
  v38 = *(unsigned __int16 *)(v36 + 52);
  v98 = v36;
  v39 = swift_allocObject(v36, v37, v38);
  v40 = (uint64_t *)(v39 + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource);
  *v40 = v27;
  v40[1] = (uint64_t)&protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  v41 = v95;
  sub_10002B1E8(v35, v95, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v96 = v27;
  swift_retain(v27);
  v42 = v97;
  swift_unknownObjectRetain(v97);
  v43 = (_QWORD *)sub_1002A70CC(v41, v42, v39);
  sub_10001F544(v35, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v44 = v43[18];
  ObjectType = swift_getObjectType(v43[17], v45);
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 104);
  swift_retain(v43);
  v48 = v47(ObjectType, v44);
  if (v48)
  {
    v50 = v48;
    v51 = v49;
    v52 = swift_getObjectType(v48, v49);
    LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v52, v51);
    swift_release(v43);
    swift_unknownObjectRelease(v50);
    v53 = v51 & 1;
  }
  else
  {
    swift_release(v43);
    v53 = 0;
  }
  v54 = sub_100172EB4(v53, (uint64_t)v43);
  v97 = v55;
  v57 = v56;
  v59 = v58;
  v95 = swift_getObjectType(v56, v55);
  v43[3] = *(_QWORD *)(v59 + 8);
  swift_unknownObjectWeakAssign(v43 + 2, v57);
  v60 = v43[18];
  v62 = swift_getObjectType(v43[17], v61);
  v63 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 104);
  swift_retain_n(v43, 2);
  v64 = v54;
  v65 = v63(v62, v60);
  v67 = v65;
  if (v65)
  {
    v68 = v66;
    v69 = swift_getObjectType(v65, v66);
    LOBYTE(v68) = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    swift_release(v43);
    swift_unknownObjectRelease(v67);
    v67 = v68 & 1;
  }
  else
  {
    swift_release(v43);
  }
  v70 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v71 = v64;
  v72 = (void *)sub_1002A8974(v43, v64, v97, v67, 0, 1, 0, v70);
  swift_release(v43);

  v73 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v59 + 32);
  v74 = v72;
  v97 = (uint64_t)v74;
  v73(v72, &off_1005FCD60, v95, v59);
  v75 = v108[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v108[0] + direct field offset for TTRRemindersListInteractor.delegate, &v104, 1, 0);
  *(_QWORD *)(v75 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v75, v43);
  v76 = v108[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v108[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v103, 1, 0);
  *(_QWORD *)(v76 + 8) = &protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  v77 = v96;
  swift_unknownObjectWeakAssign(v76, v96);
  swift_unknownObjectWeakAssign(v108[3] + 16, v74);
  v78 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v77 + 368);
  v79 = v99;
  v80 = swift_retain(v99);
  v78(v80, &off_100609738);
  swift_retain(v79);
  v81 = swift_retain(v43);
  sub_10048D4EC(v81, (uint64_t)&off_1005F30C0);
  swift_release(v79);
  swift_release(v43);
  v82 = *(int *)(v100 + 28);
  v100 = v57;
  v83 = v102;
  v84 = *(_QWORD *)(v102 + v82);
  *(_QWORD *)(v84 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v84 + 16, v43);
  sub_100028CFC((uint64_t)&v109, (uint64_t)v105);
  v106 = v110;
  v107 = v111;
  v85 = v110 + 32;
  *(_QWORD *)(v110 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v85, v43);
  sub_100027F10(v105);
  sub_100028CFC((uint64_t)&v112, (uint64_t)v105);
  v86 = v113;
  v106 = v113;
  v88 = swift_getObjectType(v113, v87);
  v89 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v86 + 1) + 48);
  swift_retain(v43);
  v90 = swift_unknownObjectRetain(v86);
  v89(v43, &off_1005F2FF0, v88, *((_QWORD *)&v86 + 1), v90);
  swift_unknownObjectRelease(v86);
  v91 = sub_100027F10(v105);
  (*(void (**)(uint64_t))(*(_QWORD *)v77 + 400))(v91);
  v92 = v101;
  v101[3] = v98;
  v92[4] = &off_100608ED8;
  *v92 = v43;
  swift_release(v77);
  swift_release(v79);

  swift_unknownObjectRelease(v100);
  sub_10001F544(v83, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100043844((uint64_t)v108);
  return v97;
}

uint64_t sub_100469650(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v35;
  uint64_t v36;

  v36 = *a3;
  v6 = type metadata accessor for REMAnalyticsEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)a3 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_listRepresentation) = 0;
  v16 = (char *)a3 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount;
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  *(uint64_t *)((char *)a3
             + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  v17 = (uint64_t *)((char *)a3
                  + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource);
  *v17 = a1;
  v17[1] = (uint64_t)&protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  v18 = enum case for REMRemindersListDataView.SortingStyle.default(_:);
  v19 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v15, v18, v19);
  swift_storeEnumTagMultiPayload(v15, v13, 0);
  swift_retain_n(a1, 2);
  v20 = sub_1002A8704(a1, (uint64_t)a2, (uint64_t)v15, (uint64_t)a3);
  swift_retain(v20);
  sub_100492D94((uint64_t)v12);
  sub_10046ADD4((uint64_t)v12);
  v21 = sub_100080EAC((uint64_t)v12);
  v22 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v21);
  type metadata accessor for REMAnalyticsManager(0);
  v23 = v22;
  v24 = static REMAnalyticsManager.shared.getter();
  v25 = sub_10002A750(&qword_100645348);
  v26 = &v9[*(int *)(v25 + 48)];
  v27 = &v9[*(int *)(v25 + 80)];
  v28 = enum case for REMRemindersOpenUserOperation.recentlyDeleted(_:);
  v29 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v9, v28, v29);
  *(_QWORD *)v26 = TTRUserDefaults.activitySessionId.getter(v30);
  *((_QWORD *)v26 + 1) = v31;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v27 = _typeName(_:qualified:)(v36, 0);
  *((_QWORD *)v27 + 1) = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMAnalyticsEvent.openListUserOperation(_:), v6);
  REMAnalyticsManager.post(event:)(v9);

  swift_release(v24);
  v33 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v33);
  return v20;
}

uint64_t sub_100469904(void *a1, char a2, _QWORD *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  uint64_t v25;
  id v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[24];
  _QWORD v35[5];

  v13 = a2 & 1;
  v14 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v14);
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35[3] = type metadata accessor for TTRIEditSectionsRouter();
  v35[4] = &off_10060BAB0;
  v35[0] = a4;
  *(_QWORD *)(a7 + 24) = 0;
  swift_unknownObjectWeakInit(a7 + 16, 0);
  *(_QWORD *)(a7 + 40) = 0;
  swift_unknownObjectWeakInit(a7 + 32, 0);
  type metadata accessor for TTREditSectionsViewModel(0);
  *(_QWORD *)(a7 + 168) = TTREditSectionsViewModel.__allocating_init(shouldHideEmptySections:sections:shouldCategorizeGroceryItems:)(1, _swiftEmptyArrayStorage, 0);
  *(_QWORD *)(a7 + 192) = 0;
  *(_QWORD *)(a7 + 200) = 0;
  *(_QWORD *)(a7 + 184) = 0;
  *(_BYTE *)(a7 + 208) = 0;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 232) = 0u;
  *(_QWORD *)(a7 + 248) = 0;
  v17 = sub_10002A750(&qword_10064A540);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = sub_10019F918((uint64_t)_swiftEmptyArrayStorage);
  TTREditSectionsViewModel.OptimisticApply.init(sectionOrdering:renamedSections:)(v16, v18);
  *(_QWORD *)(a7 + 128) = a1;
  *(_BYTE *)(a7 + 136) = v13;
  sub_100010634((uint64_t)a3, a7 + 88);
  sub_100010634((uint64_t)v35, a7 + 48);
  *(_QWORD *)(a7 + 144) = a5;
  *(_QWORD *)(a7 + 152) = a6;
  v19 = a1;
  v20 = a5;
  v21 = a6;
  v22 = (void *)TTRListOrCustomSmartList.groceryContext.getter(a1, v13);
  if (!v22)
  {
    *(_BYTE *)(a7 + 177) = 0;
    goto LABEL_5;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "shouldCategorizeGroceryItems");

  *(_BYTE *)(a7 + 177) = v24;
  if ((v24 & 1) == 0)
  {
LABEL_5:
    *(_BYTE *)(a7 + 176) = 0;
    goto LABEL_6;
  }
  v26 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v25);
  v27 = (void *)TTRListOrCustomSmartList.objectID.getter(a1, v13);
  v28 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

  *(_BYTE *)(a7 + 176) = v28 & 1;
LABEL_6:
  v29 = type metadata accessor for TTRMainActorDeferredAction(0);
  v30 = swift_allocObject(v29, 48, 7);
  v31 = TTRMainActorDeferredAction.init()(v30);
  *(_QWORD *)(a7 + 160) = v31;
  swift_beginAccess(v31 + 16, v34, 1, 0);
  *(_QWORD *)(v31 + 24) = &off_1005F5138;
  swift_unknownObjectWeakAssign(v31 + 16, a7);
  v32 = sub_10019E258();

  sub_100027F10(v35);
  sub_100027F10(a3);
  *(_QWORD *)(a7 + 168) = v32;
  swift_release();
  return a7;
}

id sub_100469B9C(uint64_t a1, void *a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;
  objc_class *ObjectType;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType(a3, a2);
  v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___doneButton] = 0;
  v14 = &a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = &off_1005F5158;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_localUndoManager] = a2;
  sub_10046A194();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v6);
  swift_retain();
  v15 = a2;
  UICollectionLayoutListConfiguration.init(appearance:)(v9);
  v16 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21.receiver = a3;
  v21.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v21, "initWithCollectionViewLayout:", v16);

  swift_release();
  return v17;
}

id sub_100469D50(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, _UNKNOWN **, uint64_t, _QWORD *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (**v56)(uint64_t, void *);
  uint64_t v58;
  uint64_t v59;
  char v60[16];
  _QWORD v61[5];
  char v62[16];
  _QWORD v63[3];
  uint64_t v64;
  void *v65;
  _QWORD v66[3];
  uint64_t v67;
  _QWORD *v68;

  v58 = a6;
  v59 = a5;
  v9 = a2 & 1;
  if ((a2 & 1) != 0)
  {
    v22 = a1;
    v23 = a4;
    v24 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v23);
    v67 = type metadata accessor for TTRUserDefaults(0);
    v68 = &protocol witness table for TTRUserDefaults;
    v66[0] = v24;
    v25 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
    inited = swift_initStackObject(v25, v62);
    v64 = v25;
    v65 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v63[0] = inited;
    v27 = type metadata accessor for TTREditSectionsSmartListEditor(0);
    swift_allocObject(v27, 80, 7);
    v28 = v24;
    v29 = TTREditSectionsSmartListEditor.init(list:undoManager:committer:userDefaults:)(v22, v23, v63, v66);
    v30 = swift_allocObject(v25, 16, 7);
    v67 = v25;
    v68 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v66[0] = v30;
    v63[0] = v29;
    v19 = sub_10002A750(&qword_100660608);
    swift_allocObject(v19, 136, 7);
    v20 = v23;
    v31 = a3;
    swift_retain();
    v21 = v31;
  }
  else
  {
    v10 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
    v11 = swift_initStackObject(v10, v60);
    v67 = v10;
    v68 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v66[0] = v11;
    v12 = a1;
    v13 = a4;
    v14 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v13);
    v64 = type metadata accessor for TTRUserDefaults(0);
    v65 = &protocol witness table for TTRUserDefaults;
    v63[0] = v14;
    v15 = type metadata accessor for TTREditSectionsListEditor(0);
    swift_allocObject(v15, 80, 7);
    v16 = v14;
    v17 = TTREditSectionsListEditor.init(list:undoManager:committer:userDefaults:)(v12, v13, v66, v63);
    v18 = swift_allocObject(v10, 16, 7);
    v67 = v10;
    v68 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v66[0] = v18;
    v63[0] = v17;
    v19 = sub_10002A750(&qword_100660610);
    swift_allocObject(v19, 136, 7);
    v20 = v13;
    swift_retain();
    v21 = a3;
  }
  v32 = TTREditSectionsInteractor.init(editSectionsEditor:store:undoManager:committer:)(v63, v21, v20, v66);
  v67 = v19;
  v68 = &protocol witness table for TTREditSectionsInteractor<A>;
  swift_release();

  v66[0] = v32;
  v33 = type metadata accessor for TTRIEditSectionsRouter();
  v34 = swift_allocObject(v33, 32, 7);
  swift_unknownObjectWeakInit(v34 + 16, 0);
  swift_unknownObjectWeakInit(v34 + 24, 0);
  sub_100010634((uint64_t)v66, (uint64_t)v63);
  v61[3] = v33;
  v61[4] = &off_10060BAB0;
  v61[0] = v34;
  v35 = type metadata accessor for TTRIEditSectionsPresenter(0);
  v36 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v37 = sub_100028D48((uint64_t)v61, v33);
  __chkstk_darwin(v37);
  v39 = (uint64_t *)((char *)&v58 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v40 + 16))(v39);
  v41 = *v39;
  v42 = a1;
  v43 = a4;
  v44 = a3;
  swift_retain();
  v45 = sub_100469904(a1, v9, v63, v41, v44, v43, v36);
  sub_100027F10(v61);
  v46 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIEditSectionsViewController());
  v47 = v43;
  v48 = swift_retain();
  v49 = sub_100469B9C(v48, v47, v46);
  v50 = v67;
  v51 = v68;
  sub_100028D48((uint64_t)v66, v67);
  v52 = (void (*)(uint64_t, _UNKNOWN **, uint64_t, _QWORD *))v51[2];
  v53 = swift_retain();
  v52(v53, &off_1005F5148, v50, v51);
  *(_QWORD *)(v45 + 24) = &off_1005F86D8;
  swift_unknownObjectWeakAssign(v45 + 16, v49);
  v54 = v59;
  *(_QWORD *)(v45 + 40) = v58;
  swift_unknownObjectWeakAssign(v45 + 32, v54);
  swift_unknownObjectWeakAssign(v34 + 16, v49);
  v55 = v67;
  v56 = (void (**)(uint64_t, void *))v68;
  sub_10001413C(v66, v67);
  v56[11](v55, v56);
  swift_release();
  sub_100027F10(v66);
  return v49;
}

unint64_t sub_10046A194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064F390;
  if (!qword_10064F390)
  {
    v1 = objc_opt_self(UICollectionViewCompositionalLayout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10064F390);
  }
  return result;
}

_QWORD *sub_10046A1D0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = sub_10002A750(&qword_100658908);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_1003D7E2C(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = v11[2];
      v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1003D7E2C(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_10000F614((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, &qword_100658908);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release(v11);
  }
  return v11;
}

_QWORD *sub_10046A348(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *(*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
    goto LABEL_19;
  v6 = v4;
  v7 = (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))result;
  result = _swiftEmptyArrayStorage;
  if (v5)
  {
    v18 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(a4 - a3);
    if (v5 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    if (a4 <= a3)
      v10 = a3;
    else
      v10 = a4;
    v11 = a3;
    while (a4 != v11)
    {
      v16 = v11;
      v12 = v7(&v17, &v16);
      if (v6)
        return (_QWORD *)swift_release(v18);
      v6 = 0;
      v13 = v17;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = v18[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v15);
      if (a4 < a3)
        goto LABEL_17;
      if (v10 == v11)
        goto LABEL_18;
      if (a4 == ++v11)
        return v18;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

_QWORD *sub_10046A478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  id v19[2];
  _QWORD *v20;

  v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  v6 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v20 = _swiftEmptyArrayStorage;
    sub_1003D7FD0(0, v10, 0);
    v11 = v20;
    v12 = (void **)(a3 + 40);
    while (1)
    {
      v13 = *v12;
      v19[0] = *(v12 - 1);
      v19[1] = v13;
      v14 = v19[0];
      ((void (*)(id *))v18[0])(v19);
      if (v4)
        break;
      v4 = 0;

      v20 = v11;
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_1003D7FD0(v15 > 1, v16 + 1, 1);
        v11 = v20;
      }
      v12 += 2;
      v11[2] = v16 + 1;
      sub_10001F580((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, type metadata accessor for TTRRemindersListUncommittedReminder);
      if (!--v10)
        return v11;
    }
    swift_release();

  }
  return v11;
}

_QWORD *sub_10046A5E0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v7)
      break;
    v19 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v9 = 0;
    while (v7 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      else
        v10 = *(id *)(a3 + 8 * v9 + 32);
      v11 = v10;
      v17 = v10;
      a1(&v18, &v17);

      if (v4)
        return (_QWORD *)swift_release(v19);
      ++v9;
      v13 = v18;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      specialized ContiguousArray._endMutation()(v15);
      if (v7 == v9)
        return v19;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_10046A748(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(id *);
  uint64_t v22;
  id v23;
  _QWORD *v24;

  v4 = v3;
  v21 = a1;
  v22 = a2;
  v6 = type metadata accessor for TTRRemindersListViewModel.LinkAttachment(0);
  v20 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a3 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = _swiftEmptyArrayStorage;
    if (!v9)
      return (uint64_t)v10;
    v24 = _swiftEmptyArrayStorage;
    result = sub_1003D82A0(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v24;
    v19 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v19)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a3);
      else
        v13 = *(id *)(a3 + 8 * v12 + 32);
      v14 = v13;
      v23 = v13;
      v21(&v23);
      if (v4)
      {
        swift_release();

        return (uint64_t)v10;
      }
      v4 = 0;

      v24 = v10;
      v16 = v10[2];
      v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_1003D82A0(v15 > 1, v16 + 1, 1);
        v10 = v24;
      }
      ++v12;
      v10[2] = v16 + 1;
      sub_10001F580((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
      if (v9 == v12)
        return (uint64_t)v10;
    }
    __break(1u);
LABEL_18:
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10046A928(void (*a1)(__int128 *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *i;
  __int128 v9;
  uint64_t v10;
  __int16 v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v16;
  char v18;
  __int128 v19;
  uint64_t v20;
  __int16 v21;
  _QWORD *v22;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v22 = _swiftEmptyArrayStorage;
    sub_1003D82E8(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    for (i = (char *)(a3 + 32); ; ++i)
    {
      v18 = *i;
      a1(&v19, &v18);
      if (v4)
        break;
      v4 = 0;
      v9 = v19;
      v10 = v20;
      v11 = v21;
      v22 = v6;
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        v16 = v19;
        sub_1003D82E8(v12 > 1, v13 + 1, 1);
        v9 = v16;
        v6 = v22;
      }
      v6[2] = v13 + 1;
      v14 = &v6[4 * v13];
      *((_OWORD *)v14 + 2) = v9;
      v14[6] = v10;
      *((_WORD *)v14 + 28) = v11;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

_QWORD *sub_10046AA48(_QWORD *(*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *result;
  char *v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    v17 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v9 = (char *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v15 = v10;
      v11 = a1(&v16, &v15);
      if (v4)
        break;
      v4 = 0;
      v12 = v16;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v17[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      if (!--v6)
        return v17;
    }
    return (_QWORD *)swift_release(v17);
  }
  return result;
}

void sub_10046AB30(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v5 = v4;
  v19 = a1;
  v20 = a2;
  v18 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v11 = a4 - a3;
  if (__OFSUB__(a4, a3))
    goto LABEL_21;
  if (v11)
  {
    v23 = _swiftEmptyArrayStorage;
    sub_1003D80C8(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
    {
LABEL_22:
      __break(1u);
      return;
    }
    v12 = v23;
    v13 = v21;
    if (a4 <= v21)
      v14 = v21;
    else
      v14 = a4;
    v17 = v14;
    while (a4 != v13)
    {
      v22 = v13;
      v19(&v22);
      if (v5)
      {
        swift_release();
        return;
      }
      v5 = 0;
      v23 = v12;
      v16 = v12[2];
      v15 = v12[3];
      if (v16 >= v15 >> 1)
      {
        sub_1003D80C8(v15 > 1, v16 + 1, 1);
        v12 = v23;
      }
      v12[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v16, v10, v18);
      if (a4 < v21)
        goto LABEL_19;
      if (v17 == v13)
        goto LABEL_20;
      if (a4 == ++v13)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

_QWORD *sub_10046ACD8(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  result = _swiftEmptyArrayStorage;
  if (v5)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v9 = *v8;
      v14[0] = *(v8 - 1);
      v14[1] = v9;
      swift_bridgeObjectRetain(v9);
      a1(&v15, v14);
      v10 = swift_bridgeObjectRelease(v9);
      if (v3)
        break;
      v8 += 2;
      v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (!--v5)
        return v16;
    }
    return (_QWORD *)swift_release(v16);
  }
  return result;
}

uint64_t sub_10046ADD4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[24];
  _BYTE v62[24];

  v59 = sub_10002A750(&qword_100660C10);
  __chkstk_darwin(v59);
  v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100657360);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100649CA0);
  v8 = __chkstk_darwin(v7);
  v58 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v57 = (uint64_t)&v55 - v11;
  v12 = __chkstk_darwin(v10);
  v56 = (uint64_t)&v55 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v55 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v55 - v17;
  v19 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v55 = (uint64_t)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v55 - v23;
  sub_10000735C(a1, (uint64_t)v18, &qword_100649CA0);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v25(v18, 1, v19) == 1)
    return sub_1000073A0((uint64_t)v18, &qword_100649CA0);
  sub_10001F580((uint64_t)v18, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v27 = v60;
  v28 = *(_QWORD *)(v60 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v60 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v29);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(ObjectType, v28);
  if (v31)
  {
    v33 = v31;
    v34 = v32;
    v35 = swift_getObjectType(v31, v32);
    LOBYTE(v34) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
    swift_unknownObjectRelease(v33);
    v36 = v34 & 1;
  }
  else
  {
    v36 = 0;
  }
  v24[*(int *)(v19 + 32)] = v36;
  v37 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability);
  v38 = swift_retain(v37);
  TTRRemindersListCurrentTipCapability.visibleTip.getter(v38);
  swift_release(v37);
  sub_100041F2C((uint64_t)v6, (uint64_t)&v24[*(int *)(v19 + 40)], (uint64_t *)&unk_100657360);
  sub_10002B1E8((uint64_t)v24, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v39 = v27;
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v40(v16, 0, 1, v19);
  v41 = v39 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v41, v62, 0, 0);
  v42 = (uint64_t)&v3[*(int *)(v59 + 48)];
  sub_10000735C((uint64_t)v16, (uint64_t)v3, &qword_100649CA0);
  sub_10000735C(v41, v42, &qword_100649CA0);
  if (v25(v3, 1, v19) != 1)
  {
    v43 = v56;
    sub_10000735C((uint64_t)v3, v56, &qword_100649CA0);
    if (v25((char *)v42, 1, v19) != 1)
    {
      v44 = v55;
      sub_10001F580(v42, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v45 = static TTRRemindersListViewModel.ListInfo.__derived_struct_equals(_:_:)(v43, v44);
      sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_1000073A0((uint64_t)v16, &qword_100649CA0);
      sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_1000073A0((uint64_t)v3, &qword_100649CA0);
      if ((v45 & 1) != 0)
        return sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_13:
      v46 = v57;
      sub_10002B1E8((uint64_t)v24, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v40((char *)v46, 0, 1, v19);
      v47 = v46;
      v48 = v58;
      sub_10000F614(v47, v58, &qword_100649CA0);
      swift_beginAccess(v41, v61, 33, 0);
      sub_100041F2C(v48, v41, &qword_100649CA0);
      swift_endAccess(v61);
      v49 = v60 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v60 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
      if (Strong)
      {
        v52 = Strong;
        v53 = *(_QWORD *)(v49 + 8);
        v54 = swift_getObjectType(Strong, v51);
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 56))(v24, v54, v53);
        swift_unknownObjectRelease(v52);
      }
      return sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    sub_1000073A0((uint64_t)v16, &qword_100649CA0);
    sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_11:
    sub_1000073A0((uint64_t)v3, &qword_100660C10);
    goto LABEL_13;
  }
  sub_1000073A0((uint64_t)v16, &qword_100649CA0);
  if (v25((char *)v42, 1, v19) != 1)
    goto LABEL_11;
  sub_1000073A0((uint64_t)v3, &qword_100649CA0);
  return sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_10046B304(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void (*)(uint64_t), _QWORD, uint64_t, uint64_t))(a2 + 112))(sub_10047908C, 0, a1, a2);
}

uint64_t sub_10046B320()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10001F544(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  sub_1000381C8(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID));
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, &qword_100649CA0);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements));
  return v0;
}

unint64_t sub_10046B3EC()
{
  unsigned __int8 *v0;
  const mach_header_64 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (unsigned __int8 *)TTRReminderCellStyle.normal.unsafeMutableAddressor();
  v1 = &_mh_execute_header;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_10046B454()
{
  return *(_QWORD *)TTRRemindersListViewModel.AssignmentData.VisibleElements.avatar.unsafeMutableAddressor();
}

BOOL sub_10046B46C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  v6 = v5;
  if (v5)
    swift_unknownObjectRelease(v5);
  return v6 != 0;
}

uint64_t sub_10046B4C0()
{
  return 0;
}

double sub_10046B4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t EnumCaseMultiPayload;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  unint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v8 = __chkstk_darwin(v7);
  v10 = (id *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = sub_1000720EC(v11, 0, v8);
  specialized Array._endMutation()(v12);
  if (v11)
  {
    v30 = v1;
    v14 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(_QWORD *)(v14 + 72);
    v29 = a1;
    swift_bridgeObjectRetain(a1);
    do
    {
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter(EnumCaseMultiPayload);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
      if (EnumCaseMultiPayload <= 2)
      {
        sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        v19 = *v10;
        v20 = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v22 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v22 >= v21 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
        EnumCaseMultiPayload = specialized Array._endMutation()(v18);
      }
      v15 += v16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(v29);
    v2 = v30;
  }
  v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource);
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(v24, v13);
  v26 = v31;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 152))(v31, ObjectType, v23);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  return result;
}

uint64_t sub_10046B6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  int v38;
  uint64_t v39;
  _BYTE *v40;
  char v41;
  char v42;
  char v43;
  char v44;
  int *v45;
  _BYTE *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  __int128 v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[2];
  char v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _QWORD v99[3];
  __int128 v100;

  v89 = a2;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (id *)((char *)&v81 - v20);
  v88 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v84 = (uint64_t)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v86 = (uint64_t)&v81 - v24;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  v85 = a1;
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_10001F580((uint64_t)v15, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v27 = v90;
    sub_100479358(a1, (uint64_t)&v93);
    v28 = a1;
    if (*((_QWORD *)&v94 + 1))
    {
      sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v96 = v93;
      v97 = v94;
      v98 = v95;
      v93 = 0u;
      v94 = 0u;
      *(_QWORD *)&v95 = 0;
      v29 = v84;
      sub_100479460((uint64_t)&v96, (uint64_t)&v93, v27, v28, v84);
      sub_1003079C4((uint64_t)&v96);
      v30 = v86;
      sub_10001F580(v29, v86, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    }
    else
    {
      sub_1000073A0((uint64_t)&v93, &qword_100660CE0);
      v36 = v9;
      sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      v37 = *v21;
      sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v30 = v86;
      TTRRemindersListViewModel.Reminder.init(item:objectID:)(v36, v37);
    }
    sub_10002B1E8(v28, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v38 = swift_getEnumCaseMultiPayload(v6, v3);
    v39 = sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v38 == 4)
    {
      v40 = (_BYTE *)TTRReminderCellStyle.placeholder.unsafeMutableAddressor(v39);
      v41 = v40[1];
      v42 = v40[2];
      v43 = v40[3];
      v44 = v40[4];
      v45 = (int *)v88;
      v46 = (_BYTE *)(v30 + *(int *)(v88 + 24));
      *v46 = *v40;
      v46[1] = v41;
      v46[2] = v42;
      v46[3] = v43;
      v46[4] = v44;
      v39 = (*(uint64_t (**)(void))(*(_QWORD *)v27 + 568))();
      v47 = 0;
      *(_BYTE *)(v30 + v45[39]) = v39;
      v48 = 1;
      v49 = v89;
    }
    else
    {
      v47 = 0;
      v48 = 1;
      v49 = v89;
      v45 = (int *)v88;
    }
    v50 = v87;
    goto LABEL_22;
  }
  v31 = v90;
  v83 = v18;
  if (EnumCaseMultiPayload)
  {
LABEL_37:
    v79 = 1;
    v49 = v89;
    v45 = (int *)v88;
    v50 = v87;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v50 + 56))(v49, v79, 1, v45);
  }
  v32 = v83;
  sub_10001F580((uint64_t)v15, (uint64_t)v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v33 = v85;
  v27 = v31;
  sub_100479358(v85, (uint64_t)&v93);
  if (*((_QWORD *)&v94 + 1))
  {
    v96 = v93;
    v97 = v94;
    v98 = v95;
    v93 = 0u;
    v94 = 0u;
    *(_QWORD *)&v95 = 0;
    v34 = v84;
    sub_100479460((uint64_t)&v96, (uint64_t)&v93, v31, v33, v84);
    sub_1003079C4((uint64_t)&v96);
    v35 = v34;
    v30 = v86;
    goto LABEL_14;
  }
  sub_1000073A0((uint64_t)&v93, &qword_100660CE0);
  v51 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v31 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v52);
  v54 = (void *)*v32;
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t))(v51 + 128))(&v93, *v32, ObjectType, v51);
  sub_10000F614((uint64_t)&v93, (uint64_t)&v96, &qword_100660CE8);
  v55 = (void *)v96;
  v30 = v86;
  if (!(_QWORD)v96)
  {
    sub_10001F544((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_37;
  }
  v57 = (void *)*((_QWORD *)&v96 + 1);
  v56 = (void *)v97;
  v82 = BYTE8(v97);
  v58 = v98;
  swift_beginAccess(v27 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID, v91, 33, 0);
  v59 = v54;
  v60 = v55;
  sub_100480900((uint64_t)v60, v59);
  swift_endAccess(v91);

  *(_QWORD *)&v100 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  *((_QWORD *)&v100 + 1) = &protocol witness table for REMReminder;
  v99[0] = v60;
  TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)(v91, v99, 0);
  v99[0] = v57;
  v99[1] = v56;
  v99[2] = v82 & 1;
  v100 = v58;
  v61 = v60;
  v62 = v84;
  v33 = v85;
  sub_100479460((uint64_t)v91, (uint64_t)v99, v27, v85, v84);
  swift_bridgeObjectRelease(*((_QWORD *)&v58 + 1));

  swift_bridgeObjectRelease(v58);
  sub_1003079C4((uint64_t)v91);
  v35 = v62;
LABEL_14:
  sub_10001F580(v35, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(v91, v33);
  swift_release();
  if (v91[0] == 1)
  {
    v47 = 0;
    v48 = 1;
  }
  else
  {
    v47 = v91[1];
    v48 = v92 & 1;
    sub_100390124(v91[0]);
  }
  v49 = v89;
  v45 = (int *)v88;
  v50 = v87;
  swift_release();
  v63 = v27 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v27 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v91, 0, 0);
  sub_10000735C(v63, (uint64_t)v12, &qword_100649CA0);
  v64 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v12, 1, v64) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_100649CA0);
LABEL_21:
    v39 = sub_10001F544((uint64_t)v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_22;
  }
  v65 = v12[*(int *)(v64 + 64)];
  v66 = sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (!v65)
    goto LABEL_21;
  v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 568))(v66);
  v39 = sub_10001F544((uint64_t)v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  *(_BYTE *)(v30 + v45[39]) = v67;
LABEL_22:
  v68 = v30 + v45[22];
  if (*(_BYTE *)(v68 + 8) == 1)
  {
    v69 = v47 & ~(v47 >> 63);
    if (v48)
      v69 = v47;
    if (v47 < 1)
      v70 = 1;
    else
      v70 = v48;
    *(_QWORD *)v68 = v69;
    *(_BYTE *)(v68 + 8) = v70;
  }
  v71 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 480))(v39);
  v73 = v71;
  if ((v74 & 1) != 0)
  {
    v76 = v72;
    v75 = ((uint64_t (*)(uint64_t))v71)(v85) & 1;
    v71 = sub_10017B4B4(v73, v76, 1);
  }
  else
  {
    v75 = v71 & 1;
  }
  *(_BYTE *)(v30 + v45[23]) = v75;
  *(_BYTE *)(v30 + v45[17]) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 456))(v71) & 1;
  v77 = (*(uint64_t (**)(void))(*(_QWORD *)v27 + 424))();
  if (v77)
  {
    v78 = *(_QWORD *)(v77 + 48);
    swift_unknownObjectRelease(v77);
  }
  else
  {
    v78 = 0;
  }
  *(_QWORD *)(v30 + v45[42]) = v78;
  sub_10001F580(v30, v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  v79 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v50 + 56))(v49, v79, 1, v45);
}

uint64_t sub_10046BF68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v27[24];

  v5 = sub_10002A750(&qword_100660CD8);
  __chkstk_darwin(v5);
  v7 = v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v8 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v12 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_beginAccess(v12 + 12, v27, 32, 0);
  v13 = v12[12];
  v14 = *(_QWORD *)(v13 + 16);
  swift_retain();
  if (!v14)
  {
LABEL_6:
    swift_endAccess(v27);
    swift_release();
    v20 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
      goto LABEL_4;
    goto LABEL_7;
  }
  v15 = a1;
  v16 = sub_1002AA364((uint64_t)v15);
  if ((v17 & 1) == 0)
  {

    goto LABEL_6;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v16);
  swift_endAccess(v27);
  swift_bridgeObjectRetain(v18);

  swift_retain();
  v19 = v15;
  v20 = (_QWORD *)sub_10003D6CC(v18, v12, (uint64_t)v19);
  swift_bridgeObjectRelease(v18);
  swift_release_n(v12, 2);

  if (!v20[2])
  {
LABEL_4:
    v21 = 1;
    goto LABEL_8;
  }
LABEL_7:
  sub_10002B1E8((uint64_t)v20 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v21 = 0;
LABEL_8:
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
  v22 = swift_bridgeObjectRelease(v20);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v22) == 1)
  {
    sub_1000073A0((uint64_t)v7, &qword_100660CD8);
    v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
  else
  {
    sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_10001F580((uint64_t)v11, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v25 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    swift_storeEnumTagMultiPayload(a2, v25, 2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 0, 1, v25);
  }
}

void sub_10046C1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_10046C2A8 + 4 * byte_100537930[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10046C2A8()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_10046C354(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int i;
  uint64_t v38;
  __n128 v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t ObjectType;
  Swift::OpaquePointer v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[3];
  unint64_t v82;

  v70 = a2;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - v8;
  __chkstk_darwin(v10);
  v78 = (uint64_t)&v62 - v11;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v12);
  v80 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - v15;
  __chkstk_darwin(v17);
  v79 = (uint64_t)&v62 - v19;
  v82 = (unint64_t)_swiftEmptyArrayStorage;
  v65 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v66 = v2;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v21 = *(_QWORD *)(v20 + 24);
  v69 = *(_QWORD *)(a1 + 16);
  if (!v69)
  {
    swift_unknownObjectRetain(v21);
    v57 = _swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  v63 = *(_QWORD *)(v20 + 32);
  v68 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v64 = v18;
  v67 = *(_QWORD *)(v18 + 72);
  swift_unknownObjectRetain(v21);
  v62 = a1;
  swift_bridgeObjectRetain(a1);
  v22 = 0;
  v23 = v79;
  v71 = v21;
  while (1)
  {
    v76 = v22;
    v24 = sub_10002B1E8(v68 + v67 * v22, v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v25 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v24);
    if (v25)
    {
      v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v28 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      specialized Array._endMutation()(v29);

    }
    if ((v70 & 1) != 0)
      break;
LABEL_4:
    v22 = v76 + 1;
    v23 = v79;
    sub_10001F544(v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v22 == v69)
    {
      swift_bridgeObjectRelease(v62);
      v57 = (_QWORD *)v82;
LABEL_26:
      v58 = v66;
      v59 = *(_QWORD *)(v66 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v66 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v56);
      v61._rawValue = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 144))(v57, ObjectType, v59);
      swift_bridgeObjectRelease(v57);
      swift_beginAccess(v58 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID, v81, 33, 0);
      sub_10002A750(&qword_100660CD0);
      Dictionary.merge(takingValuesIn:)(v61);
      swift_endAccess(v81);
      swift_unknownObjectRelease(v21);
      return (uint64_t)v61._rawValue;
    }
  }
  v30 = *(_QWORD *)(v66 + v65);
  v31 = v64;
  v32 = v78;
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
  v77(v78, 1, 1, v12);
  swift_retain();
  swift_retain();
  v33 = TTRMutableTreeStorage.descendants(of:)(v32);
  swift_release();
  sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
  swift_retain();
  v34 = swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()(v34);
  v75 = v33;
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()(v35);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  for (i = v36(v9, 1, v12); ; i = v36(v9, 1, v12))
  {
    if (i == 1)
    {
      swift_release_n(v30, 2);
      swift_release();
      swift_release();
      v21 = v71;
      goto LABEL_4;
    }
    sub_10001F580((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v16);
    v39 = swift_release();
    if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v36)(v6, 1, v12, v39) == 1)
    {
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
      goto LABEL_12;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v12);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (EnumCaseMultiPayload == 2)
      break;
LABEL_12:
    v38 = sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    dispatch thunk of _AnyIteratorBoxBase.next()(v38);
  }
  sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_release_n(v30, 2);
  swift_release();
  swift_release();
  v21 = v71;
  v42 = swift_getObjectType(v71, v41);
  v81[0] = v21;
  v43 = v78;
  sub_10002B1E8(v79, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v77(v43, 0, 1, v12);
  v44 = *(_QWORD *)(v63 + 8);
  v45 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 24);
  v74 = v42;
  v75 = v44;
  v46 = v45(v43, v42);
  result = sub_1000073A0(v43, (uint64_t *)&unk_100640EB0);
  if ((v46 & 0x8000000000000000) == 0)
  {
    if (v46)
    {
      v48 = 0;
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 32);
      v73 = v46;
      do
      {
        v81[0] = v21;
        v50 = v78;
        sub_10002B1E8(v79, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v77(v50, 0, 1, v12);
        v72(v48, v50, v74, v75);
        v51 = sub_1000073A0(v50, (uint64_t *)&unk_100640EB0);
        v52 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v51);
        if (v52)
        {
          v53 = v52;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v55 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v54 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v55 >= v54 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
          v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
          specialized Array._endMutation()(v49);

          v21 = v71;
        }
        ++v48;
        sub_10001F544(v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      while (v73 != v48);
    }
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10046C968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10046C978(a1, 1, a2);
}

uint64_t sub_10046C970@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10046C978(a1, 8, a2);
}

uint64_t sub_10046C978@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v64 = (char *)a3;
  v71 = sub_10002A750(&qword_10064B6A0);
  __chkstk_darwin(v71);
  v77 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v68 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v9);
  v67 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  __chkstk_darwin(v14);
  v78 = (uint64_t)&v62 - v15;
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v69 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v76 = (uint64_t)&v62 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v62 - v22;
  v24 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v24);
  v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v72 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v66 = (uint64_t)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  *(_QWORD **)((char *)&v62 - v30) = a1;
  v74 = (uint64_t)&v62 - v30;
  v75 = v32;
  swift_storeEnumTagMultiPayload((char *)&v62 - v30, v32, a2);
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v63(v26, 1, 1, v16);
  v65 = v31;
  swift_retain();
  v33 = a1;
  swift_retain();
  v34 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v26);
  swift_release();
  sub_1000073A0((uint64_t)v26, (uint64_t *)&unk_100640EB0);
  if (v34[2])
  {
    sub_10002B1E8((uint64_t)v34 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v16);
    sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v36 = (uint64_t)v34;
      v37 = v65;
      swift_retain();
      v38 = sub_100393344(v36, v37);
      swift_bridgeObjectRelease(v36);
      swift_release();
      v34 = v38;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v34);
    v34 = _swiftEmptyArrayStorage;
  }
  v39 = v72;
  v40 = v34[2];
  v73 = v16;
  if (!v40)
  {
    v63(v64, 1, 1, v73);
    goto LABEL_23;
  }
  v41 = *(unsigned __int8 *)(v17 + 80);
  v62 = v34;
  v42 = (uint64_t)v34 + ((v41 + 32) & ~v41);
  v70 = *(_QWORD *)(v17 + 72);
  v43 = (uint64_t)v69;
  while (1)
  {
    v44 = v76;
    sub_10002B1E8(v42, v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(v44, v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v43, v16) == 1)
    {
      v45 = v68;
      sub_10001F580(v43, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v46 = v78;
      sub_10002B1E8(v45, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      v48 = v75;
      v47(v46, 0, 1, v75);
    }
    else
    {
      sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      v48 = v75;
      v47(v78, 1, 1, v75);
    }
    v49 = v39;
    sub_10002B1E8(v74, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v47((uint64_t)v13, 0, 1, v48);
    v50 = v77;
    v51 = v77 + *(int *)(v71 + 48);
    sub_10000735C(v78, v77, &qword_100644980);
    sub_10000735C((uint64_t)v13, v51, &qword_100644980);
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v52(v50, 1, v48) == 1)
      break;
    v53 = (uint64_t)v13;
    v54 = v77;
    v55 = v78;
    v56 = v67;
    sub_10000735C(v77, v67, &qword_100644980);
    if (v52(v51, 1, v75) == 1)
    {
      sub_1000073A0(v53, &qword_100644980);
      sub_1000073A0(v55, &qword_100644980);
      sub_10001F544(v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v13 = (char *)v53;
      v43 = (uint64_t)v69;
      goto LABEL_8;
    }
    v57 = v66;
    sub_10001F580(v51, v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v58 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v56, v57);
    sub_10001F544(v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v53, &qword_100644980);
    sub_1000073A0(v55, &qword_100644980);
    sub_10001F544(v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v54, &qword_100644980);
    v16 = v73;
    v13 = (char *)v53;
    v43 = (uint64_t)v69;
    if ((v58 & 1) != 0)
      goto LABEL_21;
LABEL_9:
    sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v42 += v70;
    --v40;
    v39 = v72;
    if (!v40)
    {
      v59 = 1;
      v60 = (uint64_t)v64;
      goto LABEL_22;
    }
  }
  sub_1000073A0((uint64_t)v13, &qword_100644980);
  sub_1000073A0(v78, &qword_100644980);
  if (v52(v51, 1, v75) != 1)
  {
LABEL_8:
    sub_1000073A0(v77, &qword_10064B6A0);
    v16 = v73;
    goto LABEL_9;
  }
  sub_1000073A0(v77, &qword_100644980);
LABEL_21:
  v60 = (uint64_t)v64;
  sub_10001F580(v76, (uint64_t)v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v59 = 0;
LABEL_22:
  v34 = v62;
  v63((char *)v60, v59, 1, v73);
LABEL_23:
  swift_release();
  swift_bridgeObjectRelease(v34);
  return sub_10001F544(v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
}

uint64_t sub_10046D030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  char v4;
  void *v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)(uint64_t, void *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t, void *);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  char v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t *v43;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _BYTE v65[7];
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[10];
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  _QWORD v107[10];
  _OWORD v108[5];
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t (**v115)(uint64_t, void *);

  v3 = sub_10046DC0C(a1);
  if (v4 == -1)
    goto LABEL_23;
  v5 = v3;
  v6 = v4;
  if ((v4 & 1) == 0)
  {
    v74 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    v75 = &protocol witness table for REMReminder;
    *(_QWORD *)&v72 = v5;
    sub_10002E37C(&v72, (uint64_t)&v113);
    v7 = v114;
    v8 = v5;
    if (v7)
      goto LABEL_4;
LABEL_14:
    sub_1000760F4(v5, v6);
    sub_1000073A0((uint64_t)&v113, &qword_10063F5A0);
LABEL_23:
    sub_100491634(&v72);
    goto LABEL_24;
  }
  v114 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
  v115 = (uint64_t (**)(uint64_t, void *))&protocol witness table for REMReminderChangeItem;
  *(_QWORD *)&v113 = v5;
  v42 = v5;
  if (!v114)
    goto LABEL_14;
LABEL_4:
  sub_10002E37C(&v113, (uint64_t)v69);
  v9 = v70;
  v10 = v71;
  sub_10001413C(v69, v70);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v10 + 176))(&v113, v9, v10);
  if (!v114)
  {
    sub_1000760F4(v5, v6);
    sub_1000073A0((uint64_t)&v113, &qword_100649C80);
LABEL_22:
    sub_100027F10(v69);
    goto LABEL_23;
  }
  sub_10002E37C(&v113, (uint64_t)v66);
  v11 = v67;
  v12 = v68;
  sub_10001413C(v66, v67);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 88))(&v113, v11, v12);
  v13 = v114;
  if (!v114)
  {
    sub_1000760F4(v5, v6);
    v43 = &qword_10063F580;
LABEL_18:
    sub_1000073A0((uint64_t)&v113, v43);
LABEL_21:
    sub_100027F10(v66);
    goto LABEL_22;
  }
  v14 = v115;
  sub_10001413C(&v113, v114);
  v15 = v14[1](v13, v14);
  sub_100027F10(&v113);
  v16 = v70;
  v17 = v71;
  sub_10001413C(v69, v70);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 200))(&v113, v16, v17);
  v18 = v114;
  if (!v114)
  {
    swift_bridgeObjectRelease(v15);
    sub_1000760F4(v5, v6);
    v43 = (uint64_t *)&unk_100649E00;
    goto LABEL_18;
  }
  v19 = v115;
  sub_10001413C(&v113, v114);
  v20 = (void *)v19[1](v18, v19);
  sub_100027F10(&v113);
  if (!v20)
  {
LABEL_20:
    swift_bridgeObjectRelease(v15);
    sub_1000760F4(v5, v6);
    goto LABEL_21;
  }
  v21 = v67;
  v22 = v68;
  sub_10001413C(v66, v67);
  v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 72))(v21, v22);
  if (!v23
    || (v24 = v23, v25 = objc_msgSend(v23, "objectID"), v24, !v25))
  {

    goto LABEL_20;
  }
  v26 = v20;
  v27 = sub_10048D69C(v15, v26, (SEL *)&selRef_assigneeID);

  v28 = v26;
  v29 = sub_10048D69C(v15, v28, (SEL *)&selRef_originatorID);
  swift_bridgeObjectRelease(v15);

  if (v27)
  {
    v64 = v28;
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v30 = v27;
    v31 = objc_msgSend(v30, "objectID");
    v32 = static NSObject.== infix(_:_:)(v25, v31);

    v33 = v30;
    TTRParticipantModel.init(sharee:)(v93);
    TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)(&v94, objc_msgSend(v33, "objectID"), 0, v93, v32 & 1, 0);
    v53 = v94;
    v54 = v95;
    v55 = v96;
    v56 = v97;
    v57 = v98;
    v58 = v99;
    v59 = v100;
    v60 = v101;
    v61 = v102;
    v62 = v103;
    v63 = v104;
    v52 = v105;
    v34 = v106;
    if (v29)
    {
      v51 = v106;
      v35 = v29;
      v36 = objc_msgSend(v35, "objectID");
      v37 = static NSObject.== infix(_:_:)(v25, v36);

      v38 = v35;
      TTRParticipantModel.init(sharee:)(v107);
      TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)(v108, objc_msgSend(v38, "objectID"), 0, v107, v37 & 1, 0);
      v49 = v108[1];
      v50 = v108[0];
      v47 = v108[3];
      v48 = v108[2];
      v46 = v108[4];
      v39 = v109;
      v40 = v110;
      v45 = v111;
      v41 = v112;

      sub_1000760F4(v5, v6);
      v72 = v53;
      v73 = v54;
      v74 = v55;
      v75 = v56;
      v76 = v57;
      v77 = v58;
      v78 = v59;
      v79 = v60;
      v80 = v61;
      v81 = v62;
      v82 = v63;
      v83 = v52;
      *(_DWORD *)v84 = *(_DWORD *)v65;
      *(_DWORD *)&v84[3] = *(_DWORD *)&v65[3];
      v85 = v51;
      v86 = v50;
      v87 = v49;
      v88 = v48;
      v89 = v47;
      v90 = v46;
      *(_QWORD *)&v91 = v39;
      *((_QWORD *)&v91 + 1) = v40;
      *(_QWORD *)&v92 = v45;
      *((_QWORD *)&v92 + 1) = v41;
    }
    else
    {
      sub_1000760F4(v5, v6);

      v72 = v53;
      v73 = v54;
      v74 = v55;
      v75 = v56;
      v76 = v57;
      v77 = v58;
      v78 = v59;
      v79 = v60;
      v80 = v61;
      v81 = v62;
      v82 = v63;
      v83 = v52;
      v85 = v34;
      v86 = 0u;
      v87 = 0u;
      v88 = 0u;
      v89 = 0u;
      v90 = 0u;
      v91 = 0u;
      v92 = 0u;
    }
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v72);
  }
  else
  {
    sub_1000760F4(v5, v6);

    sub_100491634(&v72);
  }
  sub_100027F10(v66);
  sub_100027F10(v69);
LABEL_24:
  sub_10000F614((uint64_t)&v72, (uint64_t)&v113, (uint64_t *)&unk_100649F30);
  return sub_10000F614((uint64_t)&v113, a2, (uint64_t *)&unk_100649F30);
}

uint64_t sub_10046D6CC(uint64_t a1)
{
  id v1;
  char v2;
  void *v3;
  char v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(__int128 *__return_ptr, uint64_t, void *);
  uint64_t v11;
  uint64_t (**v12)(uint64_t, void *);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)(uint64_t, void *);
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t *v23;
  __int128 *v24;
  __int128 v26;
  uint64_t v27;
  void (**v28)(__int128 *__return_ptr, uint64_t, void *);
  __int128 v29;
  uint64_t v30;
  uint64_t (**v31)(uint64_t, void *);
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v1 = sub_10046DC0C(a1);
  if (v2 == -1)
    return 0;
  v3 = v1;
  v4 = v2;
  if ((v2 & 1) == 0)
  {
    v27 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    v28 = (void (**)(__int128 *__return_ptr, uint64_t, void *))&protocol witness table for REMReminder;
    *(_QWORD *)&v26 = v3;
    sub_10002E37C(&v26, (uint64_t)&v29);
    v5 = v30;
    v6 = v3;
    if (v5)
      goto LABEL_4;
LABEL_11:
    sub_1000760F4(v3, v4);
    sub_1000073A0((uint64_t)&v29, &qword_10063F5A0);
    return v5;
  }
  v5 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
  v30 = v5;
  v31 = (uint64_t (**)(uint64_t, void *))&protocol witness table for REMReminderChangeItem;
  *(_QWORD *)&v29 = v3;
  v22 = v3;
  if (!v5)
    goto LABEL_11;
LABEL_4:
  sub_10002E37C(&v29, (uint64_t)v32);
  v7 = v33;
  v8 = v34;
  sub_10001413C(v32, v33);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 176))(&v26, v7, v8);
  v9 = v27;
  if (!v27)
  {
    sub_1000760F4(v3, v4);
    v23 = &qword_100649C80;
    v24 = &v26;
LABEL_16:
    sub_1000073A0((uint64_t)v24, v23);
LABEL_17:
    sub_100027F10(v32);
    return 0;
  }
  v10 = v28;
  sub_10001413C(&v26, v27);
  v10[11](&v29, v9, v10);
  v11 = v30;
  if (!v30)
  {
    sub_1000760F4(v3, v4);
    sub_100027F10(&v26);
    v23 = &qword_10063F580;
LABEL_15:
    v24 = &v29;
    goto LABEL_16;
  }
  v12 = v31;
  sub_10001413C(&v29, v30);
  v13 = v12[4](v11, v12);
  sub_100027F10(&v29);
  sub_100027F10(&v26);
  v14 = v33;
  v15 = v34;
  sub_10001413C(v32, v33);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 176))(&v29, v14, v15);
  v16 = v30;
  if (!v30)
  {
    swift_bridgeObjectRelease(v13);
    sub_1000760F4(v3, v4);
    v23 = &qword_100649C80;
    goto LABEL_15;
  }
  v17 = v31;
  sub_10001413C(&v29, v30);
  v18 = (void *)v17[9](v16, v17);
  if (!v18)
  {
    swift_bridgeObjectRelease(v13);
    sub_1000760F4(v3, v4);
    sub_100027F10(&v29);
    goto LABEL_17;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "objectID");

  sub_100027F10(&v29);
  if (!v20)
  {
    swift_bridgeObjectRelease(v13);
    sub_1000760F4(v3, v4);
    goto LABEL_17;
  }
  v21 = v20;
  v5 = (uint64_t)sub_10048CF40(v13, (uint64_t)v21);

  sub_1000760F4(v3, v4);
  swift_bridgeObjectRelease(v13);

  sub_100027F10(v32);
  return v5;
}

uint64_t sub_10046D9C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  _BYTE v34[24];
  unint64_t v35;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return a2();
  v5 = v2;
  v7 = v4 - 1;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = *(_QWORD *)(v9 + 72);
  v13 = a1 + v11 + v12 * v7;
  v14 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v15 = swift_allocObject(v14, v11 + v12, v10 | 7);
  v16 = v15 + v11;
  sub_10002B1E8(v13, v15 + v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = _swiftEmptyArrayStorage;
  v35 = (unint64_t)_swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree) + 24);
  swift_unknownObjectRetain(v18);
  v20 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v19);
  if (v20)
  {
    v22 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
    specialized Array._endMutation()(v25);

    v17 = (_QWORD *)v35;
  }
  v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v21);
  v28 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v26 + 144))(v17, ObjectType, v26);
  swift_bridgeObjectRelease(v17);
  swift_beginAccess(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID, v34, 33, 0);
  sub_10002A750(&qword_100660CD0);
  Dictionary.merge(takingValuesIn:)((Swift::OpaquePointer)v28);
  swift_endAccess(v34);
  swift_unknownObjectRelease(v18);
  swift_setDeallocating(v15);
  swift_arrayDestroy(v16, 1, v8);
  swift_deallocClassInstance(v15, 32, 7);
  v29 = (void *)sub_1000CE65C(v28);
  v31 = v30;
  swift_bridgeObjectRelease(v28);
  if (!v29)
    return a2();

  v32 = objc_msgSend(v31, "list");
  return (uint64_t)v32;
}

id sub_10046DC0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;
  unint64_t v12;

  v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(&v12, a1);
  swift_release();
  v6 = v12;
  swift_release();
  if (v6 < 2)
  {
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v7);
    v8 = (char *)&loc_10046DD28 + 4 * byte_100537934[swift_getEnumCaseMultiPayload(v5, v3)];
    __asm { BR              X10 }
  }
  v9 = *(id *)(v6 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  sub_100390124(v6);
  return v9;
}

void sub_10046DE18(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = sub_10047904C;
  *(_QWORD *)(a1 + 32) = 0;
}

uint64_t sub_10046DE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t ObjectType;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t, double);

  v66 = a1;
  v65 = sub_10002A750(&qword_100654860);
  ObjectType = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v61 = (uint64_t)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10002A750(&qword_100647B00);
  __chkstk_darwin(v59);
  v58 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (char *)&v57 - v5;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - v10;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v57 - v20;
  __chkstk_darwin(v22);
  v68 = (uint64_t)&v57 - v23;
  v24 = sub_10002A750(&qword_100658938);
  __chkstk_darwin(v24);
  v63 = (uint64_t)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v64 = (char *)&v57 - v28;
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v13 + 56);
  v69(v11, 1, 1, v12, v27);
  v67 = v29;
  swift_retain();
  swift_retain();
  v30 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v11);
  swift_release();
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
  if (v30[2])
  {
    sub_10002B1E8((uint64_t)v30 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v12);
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v32 = v67;
      swift_retain();
      v33 = sub_100393344((uint64_t)v30, v32);
      swift_bridgeObjectRelease(v30);
      swift_release();
      v30 = v33;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v30);
    v30 = _swiftEmptyArrayStorage;
  }
  v34 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v69;
  v35 = v30[2];
  if (v35)
  {
    sub_10002B1E8((uint64_t)v30+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * (v35 - 1), (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  v34(v8, v36, 1, v12);
  v37 = swift_bridgeObjectRelease(v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v8, 1, v12, v37) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    v38 = ObjectType;
    v39 = (uint64_t)v64;
    v40 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(ObjectType + 56))(v64, 1, 1, v65);
    v41 = v66;
  }
  else
  {
    v42 = v68;
    sub_10001F580((uint64_t)v8, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(v42, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v34(v11, 0, 1, v12);
    swift_retain();
    v43 = TTRMutableTreeStorage.numberOfChildren(of:)(v11);
    swift_release();
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
    if (v43 < 0)
    {
      __break(1u);
      JUMPOUT(0x10046E62CLL);
    }
    if (v43)
    {
      sub_10002B1E8(v68, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v11, 0, 1, v12);
      swift_retain();
      TTRMutableTreeStorage.child(_:of:)(v43 - 1, v11);
      swift_release();
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
      sub_10002B1E8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v45 = (char *)&loc_10046E324 + dword_10046E62C[swift_getEnumCaseMultiPayload(v15, v12)];
      __asm { BR              X9 }
    }
    v38 = ObjectType;
    v46 = *(_QWORD *)(v67 + 32);
    ObjectType = swift_getObjectType(*(_QWORD *)(v67 + 24), v44);
    v47 = v68;
    sub_10002B1E8(v68, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v48 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v69;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v11, 0, 1, v12);
    v49 = (uint64_t)v58;
    v48(v58, 1, 1, v12);
    sub_100041F2C((uint64_t)v11, v49, (uint64_t *)&unk_100640EB0);
    v50 = (uint64_t)v60;
    *(_QWORD *)(v49 + *(int *)(v59 + 36)) = 0;
    sub_10000F614(v49, v50, &qword_100647B00);
    v39 = (uint64_t)v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v50, ObjectType, v46);
    sub_1000073A0(v50, &qword_100647B00);
    sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v40 = v65;
    v41 = v66;
  }
  swift_release();
  v51 = v63;
  sub_10000735C(v39, v63, &qword_100658938);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v51, 1, v40) == 1)
  {
    v52 = sub_10002A750(&qword_100655500);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v41, 1, 1, v52);
  }
  else
  {
    v53 = v61;
    sub_10000F614(v51, v61, &qword_100654860);
    v54 = sub_10002A750(&qword_100655500);
    v55 = *(int *)(v54 + 48);
    sub_10000735C(v53, v41, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)(v41 + v55) = *(_QWORD *)(v53 + *(int *)(v40 + 36));
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v41, 0, 1, v54);
    sub_1000073A0(v53, &qword_100654860);
  }
  return sub_1000073A0(v39, &qword_100658938);
}

uint64_t sub_10046E65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t (**v45)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  int EnumCaseMultiPayload;
  _QWORD *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (**v93)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v98 = a2;
  v92 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v92);
  v91 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v95 = (char **)((char *)&v85 - v5);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v86 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v99 = (char *)&v85 - v9;
  v97 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v10 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v85 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v89);
  v90 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v96 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v93 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, __n128))(v15 - 8);
  v94 = v15;
  __chkstk_darwin(v15);
  v88 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v100 = (uint64_t)&v85 - v18;
  v19 = sub_10002A750(&qword_1006589A0);
  __chkstk_darwin(v19);
  v87 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v85 - v22;
  v24 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v24);
  v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10002A750(&qword_10064B6B0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1003816A0(a1, (uint64_t)v26);
  v31 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48))(v26, 1, v27, v31) == 1)
  {
    v32 = v10;
    sub_1000073A0((uint64_t)v26, &qword_100660C50);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v33 = type metadata accessor for Logger(0);
    sub_100012DC4(v33, (uint64_t)qword_100660618);
    v34 = (uint64_t)v95;
    v35 = sub_10002B1E8(a1, (uint64_t)v95, type metadata accessor for TTRRemindersListReminderCreationLocation);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.fault.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v102 = v39;
      *(_DWORD *)v38 = 136315138;
      v40 = v91;
      sub_10002B1E8(v34, v91, type metadata accessor for TTRRemindersListReminderCreationLocation);
      v41 = String.init<A>(describing:)(v40, v92);
      v42 = v34;
      v44 = v43;
      v101 = sub_100027E40(v41, v43, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v44);
      sub_10001F544(v42, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Cannot resolve ReminderCreationLocation {location: %s}", v38, 0xCu);
      swift_arrayDestroy(v39, 1, &type metadata for Any[8]);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      sub_10001F544(v34, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v98, 1, 1, v97);
  }
  else
  {
    sub_10000F614((uint64_t)v26, (uint64_t)v30, &qword_10064B6B0);
    v95 = (_QWORD *)v10;
    v45 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
    v46 = v97;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v45)(v23, 1, 1, v97);
    swift_retain();
    v47 = v96;
    sub_100383D24((uint64_t)v30, v96);
    v48 = swift_release();
    v49 = v94;
    v50 = v93[6](v47, 1, v94, v48);
    v51 = (uint64_t)v23;
    v52 = (uint64_t)v30;
    if (v50 == 1)
    {
      sub_1000073A0((uint64_t)v30, &qword_10064B6B0);
      sub_1000073A0(v96, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v93 = v45;
      v54 = sub_10001F580(v96, v100, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v55 = (uint64_t)v90;
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v54);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v55, v89);
      if ((EnumCaseMultiPayload - 1) >= 2)
      {
        if (!EnumCaseMultiPayload)
          sub_10001F544(v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        v70 = (uint64_t)v88;
        if (qword_10063D818 != -1)
          swift_once(&qword_10063D818, sub_100478F7C);
        v71 = type metadata accessor for Logger(0);
        sub_100012DC4(v71, (uint64_t)qword_100660618);
        v72 = sub_10002B1E8(v100, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v73 = Logger.logObject.getter(v72);
        v74 = static os_log_type_t.fault.getter(v73);
        if (os_log_type_enabled(v73, v74))
        {
          v75 = (uint8_t *)swift_slowAlloc(12, -1);
          v76 = swift_slowAlloc(32, -1);
          v96 = v51;
          v77 = v76;
          v102 = v76;
          v92 = (uint64_t)v30;
          *(_DWORD *)v75 = 136315138;
          v78 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
          v79 = TTRTreeStorageItem.treeItemDescription.getter(v49, v78);
          v81 = v80;
          v101 = sub_100027E40(v79, v80, &v102);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v75 + 4, v75 + 12);
          swift_bridgeObjectRelease(v81);
          sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unexpected item type {item: %s}", v75, 0xCu);
          swift_arrayDestroy(v77, 1, &type metadata for Any[8]);
          v82 = v77;
          v51 = v96;
          swift_slowDealloc(v82, -1, -1);
          swift_slowDealloc(v75, -1, -1);

          v83 = v92;
        }
        else
        {

          sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v83 = (uint64_t)v30;
        }
        sub_1000073A0(v83, &qword_10064B6B0);
        sub_10001F544(v100, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        sub_10001F544(v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        swift_retain();
        v57 = sub_100383144();
        v58 = swift_release();
        v59 = v57[2];
        if (v59)
        {
          v92 = (uint64_t)v30;
          v60 = v46;
          v61 = (uint64_t)v57
              + ((*((unsigned __int8 *)v95 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v95 + 80));
          v62 = v95[9];
          v95 = v57;
          v96 = v51;
          swift_bridgeObjectRetain(v57);
          v63 = (uint64_t)v85;
          v64 = (uint64_t)v86;
          v65 = (uint64_t)v99;
          while (1)
          {
            v66 = sub_10002B1E8(v61, v63, type metadata accessor for TTRRemindersListUncommittedReminder);
            v67 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v66);
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v67);
            v68 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v65, v64);
            sub_10001F544(v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            if ((v68 & 1) != 0)
              break;
            sub_10001F544(v63, type metadata accessor for TTRRemindersListUncommittedReminder);
            v61 += v62;
            if (!--v59)
            {
              v57 = v95;
              v58 = swift_bridgeObjectRelease(v95);
              v69 = 1;
              v46 = v60;
              v51 = v96;
              v52 = v92;
              goto LABEL_25;
            }
          }
          v57 = v95;
          swift_bridgeObjectRelease(v95);
          v84 = v87;
          sub_10001F580(v63, v87, type metadata accessor for TTRRemindersListUncommittedReminder);
          v69 = 0;
          v46 = v60;
          v51 = v96;
          v52 = v92;
        }
        else
        {
          v69 = 1;
LABEL_25:
          v84 = v87;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v93)(v84, v69, 1, v46, v58);
        swift_bridgeObjectRelease(v57);
        sub_1000073A0(v51, &qword_1006589A0);
        sub_1000073A0(v52, &qword_10064B6B0);
        sub_10001F544(v100, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000F614(v84, v51, &qword_1006589A0);
      }
    }
    return sub_10000F614(v51, v98, &qword_1006589A0);
  }
}

uint64_t sub_10046EFC4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t (*a4)(id)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t, __n128);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, _UNKNOWN **, uint64_t);
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char **v126;
  _QWORD *v127;
  uint64_t v128;
  int v129;
  id *v130;
  id v131;
  uint64_t v132;
  id v133;
  id v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint8_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t (*v171)(id);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176[3];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;

  v165 = a6;
  v166 = a7;
  v170 = a5;
  v171 = a4;
  v163 = a3;
  v164 = a2;
  v175 = a8;
  v174 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v172 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v157 = (uint64_t)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v159 = (uint64_t)&v149 - v12;
  __chkstk_darwin(v13);
  v152 = (uint64_t)&v149 - v14;
  v15 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v15);
  v149 = (uint64_t)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v17);
  v150 = (uint64_t)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v19);
  v156 = (uint64_t)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v153 = (id *)((char *)&v149 - v22);
  v167 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v167);
  v173 = (uint64_t)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v168 = (uint64_t)&v149 - v25;
  v26 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v26);
  v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v29);
  v155 = (uint64_t)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v161 = *(_QWORD *)(v31 - 8);
  v162 = v31;
  __chkstk_darwin(v31);
  v160 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v169 = (uint64_t)&v149 - v34;
  v35 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v35);
  v154 = (uint64_t)&v149 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v39 = (char *)&v149 - v38;
  v40 = sub_10002A750(&qword_10064B6B0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v158 = (uint64_t)&v149 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v151 = (uint64_t)&v149 - v44;
  __chkstk_darwin(v45);
  v47 = (char *)&v149 - v46;
  v48 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  swift_retain();
  sub_1003816A0(a1, (uint64_t)v39);
  v49 = swift_release();
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v41 + 48);
  if (v50(v39, 1, v40, v49) == 1)
  {
    sub_1000073A0((uint64_t)v39, &qword_100660C50);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v51 = type metadata accessor for Logger(0);
    sub_100012DC4(v51, (uint64_t)qword_100660618);
    v52 = v173;
    v53 = sub_10002B1E8(a1, v173, type metadata accessor for TTRRemindersListReminderCreationLocation);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.fault.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = swift_slowAlloc(32, -1);
      v176[0] = v57;
      *(_DWORD *)v56 = 136315138;
      v58 = v168;
      sub_10002B1E8(v52, v168, type metadata accessor for TTRRemindersListReminderCreationLocation);
      v59 = String.init<A>(describing:)(v58, v167);
      v61 = v60;
      v178 = sub_100027E40(v59, v60, v176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, &v179, v56 + 4, v56 + 12);
      swift_bridgeObjectRelease(v61);
      sub_10001F544(v52, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Cannot resolve ReminderCreationLocation {location: %s}", v56, 0xCu);
      swift_arrayDestroy(v57, 1, &type metadata for Any[8]);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v56, -1, -1);
    }
    else
    {
      sub_10001F544(v52, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    goto LABEL_32;
  }
  sub_10000F614((uint64_t)v39, (uint64_t)v47, &qword_10064B6B0);
  v62 = v8;
  swift_retain();
  sub_100384054((uint64_t)v47, (uint64_t)v28);
  v63 = swift_release();
  v64 = v174;
  v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v172 + 48))(v28, 1, v174, v63);
  v66 = (uint64_t)v47;
  v173 = v62;
  if (v65 == 1)
  {
    sub_1000073A0((uint64_t)v28, (uint64_t *)&unk_100640EB0);
  }
  else if (swift_getEnumCaseMultiPayload(v28, v64) == 1)
  {
    v67 = v47;
    v68 = v155;
    sub_10001F580((uint64_t)v28, v155, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v69 = *(_QWORD *)(v173 + v48);
    v70 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)v173 + 920);
    swift_retain();
    v71 = v70(v68, v69, &off_100604220, 1);
    swift_release();
    if ((v71 & 1) != 0)
    {
      v72 = v168;
      sub_10002B1E8(v68, v168, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      swift_storeEnumTagMultiPayload(v72, v167, 1);
      swift_retain();
      v73 = v154;
      sub_1003816A0(v72, v154);
      swift_release();
      sub_10001F544(v72, type metadata accessor for TTRRemindersListReminderCreationLocation);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v73, 1, v40) == 1)
      {
        sub_1000073A0(v73, &qword_100660C50);
        if (qword_10063D818 != -1)
          swift_once(&qword_10063D818, sub_100478F7C);
        v74 = type metadata accessor for Logger(0);
        v75 = sub_100012DC4(v74, (uint64_t)qword_100660618);
        v76 = Logger.logObject.getter(v75);
        v77 = static os_log_type_t.fault.getter(v76);
        if (os_log_type_enabled(v76, v77))
        {
          v78 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v78 = 0;
          _os_log_impl((void *)&_mh_execute_header, v76, v77, "Cannot obtain tree location for placeholderReminder", v78, 2u);
          swift_slowDealloc(v78, -1, -1);
        }

        sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v79 = (uint64_t)v67;
      }
      else
      {
        v120 = v151;
        sub_10000F614(v73, v151, &qword_10064B6B0);
        v121 = v173 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
        swift_beginAccess(v173 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v176, 0, 0);
        v122 = v149;
        sub_10000735C(v121, v149, &qword_100649CA0);
        v123 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 48))(v122, 1, v123) == 1)
        {
          sub_1000073A0(v122, &qword_100649CA0);
          v124 = type metadata accessor for TTRTemplatePublicLinkData(0);
          v125 = v150;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v150, 1, 1, v124);
          v126 = &selRef_newObjectID;
          v127 = REMReminder_ptr;
        }
        else
        {
          v125 = v150;
          sub_10000735C(v122 + *(int *)(v123 + 100), v150, (uint64_t *)&unk_100653A00);
          sub_10001F544(v122, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
          v128 = type metadata accessor for TTRTemplatePublicLinkData(0);
          v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 48))(v125, 1, v128);
          if (v129 == 1)
            v127 = REMReminder_ptr;
          else
            v127 = REMTemplate_ptr;
          if (v129 == 1)
            v126 = &selRef_newObjectID;
          else
            v126 = &selRef_newObjectIDForSavedReminder;
        }
        v66 = (uint64_t)v67;
        v130 = v153;
        sub_1000073A0(v125, (uint64_t *)&unk_100653A00);
        v131 = objc_msgSend((id)objc_opt_self(*v127), *v126);
        sub_100475D50(v131, v120, (uint64_t)v130);

        v132 = v152;
        sub_10002B1E8((uint64_t)v130, v152, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        swift_storeEnumTagMultiPayload(v132, v174, 4);
        v133 = *v130;
        v134 = *v130;
        v135 = (void *)v171(v133);

        if (v135)
        {
          v136 = v159;
          sub_10002B1E8(v132, v159, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v137 = type metadata accessor for TTRRemindersListEditingSessionState(0);
          swift_allocObject(v137, *(unsigned int *)(v137 + 48), *(unsigned __int16 *)(v137 + 52));
          v138 = sub_1002FE870(v136, (uint64_t)v135);
          v139 = v158;
          sub_10000735C(v120, v158, &qword_10064B6B0);
          sub_10002B1E8(v132, v136, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v140 = v120;
          v141 = v135;
          swift_retain();
          v90 = v169;
          sub_10037CD24(v139, v136, v138, v169);
          v142 = objc_msgSend(v141, "remObjectID");

          swift_release();
          v143 = v132;
          v91 = v142;
          sub_10001F544(v143, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10001F544((uint64_t)v153, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_1000073A0(v140, &qword_10064B6B0);
          v93 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          v92 = v68;
          goto LABEL_22;
        }
        if (qword_10063D818 != -1)
          swift_once(&qword_10063D818, sub_100478F7C);
        v144 = type metadata accessor for Logger(0);
        v145 = sub_100012DC4(v144, (uint64_t)qword_100660618);
        v146 = Logger.logObject.getter(v145);
        v147 = static os_log_type_t.error.getter(v146);
        if (os_log_type_enabled(v146, v147))
        {
          v148 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v148 = 0;
          _os_log_impl((void *)&_mh_execute_header, v146, v147, "cannot create placeholderReminder, createReminderChangeItem returns nil.", v148, 2u);
          swift_slowDealloc(v148, -1, -1);
        }

        sub_10001F544(v132, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544((uint64_t)v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        sub_1000073A0(v120, &qword_10064B6B0);
        sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v79 = v66;
      }
LABEL_31:
      sub_1000073A0(v79, &qword_10064B6B0);
LABEL_32:
      v111 = sub_10002A750(&qword_100659458);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v175, 1, 1, v111);
    }
    sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v66 = (uint64_t)v67;
  }
  else
  {
    sub_10001F544((uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v80 = (void *)v171(0);
  if (!v80)
  {
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v106 = type metadata accessor for Logger(0);
    v107 = sub_100012DC4(v106, (uint64_t)qword_100660618);
    v108 = Logger.logObject.getter(v107);
    v109 = static os_log_type_t.error.getter(v108);
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v110 = 0;
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "cannot create uncommittedReminder, createReminderChangeItem returns nil.", v110, 2u);
      swift_slowDealloc(v110, -1, -1);
    }

    v79 = v66;
    goto LABEL_31;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "objectID");
  v83 = v156;
  sub_100475D50(v82, v66, v156);

  v84 = v159;
  sub_10002B1E8(v83, v159, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload(v84, v174, 3);
  v85 = v157;
  sub_10002B1E8(v84, v157, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v86 = type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
  v87 = sub_1002FE870(v85, (uint64_t)v81);
  v88 = v158;
  sub_10000735C(v66, v158, &qword_10064B6B0);
  sub_10002B1E8(v84, v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v89 = v81;
  swift_retain();
  v90 = v169;
  sub_10037CD24(v88, v85, v87, v169);
  v91 = objc_msgSend(v89, "remObjectID");

  swift_release();
  sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v92 = v83;
  v93 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID;
LABEL_22:
  sub_10001F544(v92, v93);
  v94 = (uint64_t)v160;
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v95 = type metadata accessor for Logger(0);
  sub_100012DC4(v95, (uint64_t)qword_100660618);
  v96 = sub_10002B1E8(v90, v94, type metadata accessor for TTRRemindersListUncommittedReminder);
  v97 = Logger.logObject.getter(v96);
  v98 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v97, v98))
  {
    v99 = (uint8_t *)swift_slowAlloc(12, -1);
    v100 = swift_slowAlloc(32, -1);
    v178 = v100;
    v172 = v66;
    *(_DWORD *)v99 = 136315138;
    v101 = v162;
    v102 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v103 = TTRTreeStorageItem.treeItemDescription.getter(v174, v102);
    v105 = v104;
    v177 = sub_100027E40(v103, v104, &v178);
    v66 = v172;
    v90 = v169;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, &v178, v99 + 4, v99 + 12);
    swift_bridgeObjectRelease(v105);
    sub_10001F544(v94, type metadata accessor for TTRRemindersListUncommittedReminder);
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "Inserting UncommittedReminder {item: %s}", v99, 0xCu);
    swift_arrayDestroy(v100, 1, &type metadata for Any[8]);
    swift_slowDealloc(v100, -1, -1);
    swift_slowDealloc(v99, -1, -1);

  }
  else
  {
    sub_10001F544(v94, type metadata accessor for TTRRemindersListUncommittedReminder);

    v101 = v162;
  }
  v113 = sub_10002A750(&qword_100659440);
  v114 = *(unsigned __int8 *)(v161 + 80);
  v115 = (v114 + 32) & ~v114;
  v116 = swift_allocObject(v113, v115 + *(_QWORD *)(v161 + 72), v114 | 7);
  *(_OWORD *)(v116 + 16) = xmmword_100520250;
  sub_10002B1E8(v90, v116 + v115, type metadata accessor for TTRRemindersListUncommittedReminder);
  sub_100479D60(v116, v165, v166, v164, v163 & 1);
  swift_setDeallocating(v116);
  swift_arrayDestroy(v116 + v115, *(_QWORD *)(v116 + 16), v101);
  swift_deallocClassInstance(v116, 32, 7);
  sub_1000073A0(v66, &qword_10064B6B0);
  v117 = sub_10002A750(&qword_100659458);
  v118 = *(int *)(v117 + 48);
  v119 = v175;
  sub_10002B1E8(v90 + *(int *)(v101 + 20), v175, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v90, type metadata accessor for TTRRemindersListUncommittedReminder);
  *(_QWORD *)(v119 + v118) = v91;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v119, 0, 1, v117);
}

_QWORD *sub_1004700C0(uint64_t a1, uint64_t a2, int a3, int a4, void (*a5)(__int128 *__return_ptr), uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  int EnumCaseMultiPayload;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  int64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  int v80;
  uint8_t *v81;
  int64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  NSObject *v120;
  int v121;
  int v122;
  _QWORD *v123;
  void (*v124)(__int128 *__return_ptr);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  __int128 v135[2];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v123 = (_QWORD *)a6;
  v124 = a5;
  v122 = a4;
  v121 = a3;
  v125 = a2;
  v116 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v116);
  v115 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v126 = (char *)&v112 - v10;
  v131 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v114 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v12 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v130 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v128 = (uint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v132 = (uint64_t)&v112 - v15;
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v16);
  v120 = ((char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v127 = (uint64_t)&v112 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v112 - v21;
  v23 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v23);
  v113 = (uint64_t)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v25);
  v27 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10002A750(&qword_10064B6B0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v119 = (uint8_t *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v117 = (uint64_t)&v112 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v112 - v34;
  swift_retain();
  sub_1003816A0(a1, (uint64_t)v27);
  v36 = swift_release();
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48);
  v118 = v28;
  if (v37(v27, 1, v28, v36) == 1)
  {
    sub_1000073A0((uint64_t)v27, &qword_100660C50);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v38 = type metadata accessor for Logger(0);
    sub_100012DC4(v38, (uint64_t)qword_100660618);
    v39 = (uint64_t)v126;
    v40 = sub_10002B1E8(a1, (uint64_t)v126, type metadata accessor for TTRRemindersListReminderCreationLocation);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.fault.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v136 = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = v115;
      sub_10002B1E8(v39, v115, type metadata accessor for TTRRemindersListReminderCreationLocation);
      v46 = String.init<A>(describing:)(v45, v116);
      v48 = v47;
      *(_QWORD *)&v135[0] = sub_100027E40(v46, v47, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v135, (char *)v135 + 8, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease(v48);
      sub_10001F544(v39, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Cannot resolve ReminderCreationLocation {location: %s}", v43, 0xCu);
      swift_arrayDestroy(v44, 1, &type metadata for Any[8]);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      sub_10001F544(v39, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    return _swiftEmptyArrayStorage;
  }
  sub_10000F614((uint64_t)v27, (uint64_t)v35, &qword_10064B6B0);
  swift_retain();
  sub_100384054((uint64_t)v35, (uint64_t)v22);
  v49 = swift_release();
  v50 = v129;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v130 + 48))(v22, 1, v129, v49) == 1)
  {
    sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100640EB0);
    v51 = v125;
LABEL_15:
    v56 = sub_10047A05C(0, v51);
    v124(&v133);
    swift_bridgeObjectRelease(v56);
    if (v134)
    {
      sub_10002E37C(&v133, (uint64_t)v135);
      sub_10002E37C(v135, (uint64_t)&v136);
      goto LABEL_17;
    }
    sub_1000073A0((uint64_t)&v133, &qword_100641758);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v93 = type metadata accessor for Logger(0);
    v94 = sub_100012DC4(v93, (uint64_t)qword_100660618);
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.error.getter(v95);
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v97 = 0;
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "cannot create changeItemGroup, createRemindersListChangeItemGroup returns nil.", v97, 2u);
      swift_slowDealloc(v97, -1, -1);
    }

LABEL_53:
    sub_1000073A0((uint64_t)v35, &qword_10064B6B0);
    return _swiftEmptyArrayStorage;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v50);
  v51 = v125;
  if (EnumCaseMultiPayload != 1)
  {
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_15;
  }
  v53 = v113;
  v54 = sub_10001F580((uint64_t)v22, v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v51 < 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  __chkstk_darwin(v54);
  *(&v112 - 2) = v6;
  *(&v112 - 1) = v53;
  v55 = sub_10046A348(sub_100491618, (uint64_t)(&v112 - 4), 0, v51);
  v124(&v133);
  swift_bridgeObjectRelease(v55);
  if (!v134)
  {
    sub_1000073A0((uint64_t)&v133, &qword_100641758);
    if (qword_10063D818 == -1)
    {
LABEL_50:
      v106 = type metadata accessor for Logger(0);
      v107 = sub_100012DC4(v106, (uint64_t)qword_100660618);
      v108 = Logger.logObject.getter(v107);
      v109 = static os_log_type_t.error.getter(v108);
      if (os_log_type_enabled(v108, v109))
      {
        v110 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v110 = 0;
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "cannot create changeItemGroup, createRemindersListChangeItemGroup returns nil.", v110, 2u);
        swift_slowDealloc(v110, -1, -1);
      }

      sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      goto LABEL_53;
    }
LABEL_57:
    swift_once(&qword_10063D818, sub_100478F7C);
    goto LABEL_50;
  }
  sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10002E37C(&v133, (uint64_t)v135);
  sub_10002E37C(v135, (uint64_t)&v136);
LABEL_17:
  v57 = v117;
  sub_10000735C((uint64_t)v35, v117, &qword_10064B6B0);
  v58 = v57;
  v59 = (uint64_t)v120;
  sub_10000F614(v58, (uint64_t)v120, (uint64_t *)&unk_100640EB0);
  sub_10000F614(v59, v127, (uint64_t *)&unk_100640EB0);
  v126 = v35;
  v60 = (uint64_t)v119;
  sub_10000735C((uint64_t)v35, (uint64_t)v119, &qword_10064B6B0);
  if (swift_getEnumCaseMultiPayload(v60, v118) == 1)
    v61 = *(_QWORD *)(v60 + *(int *)(sub_10002A750(&qword_1006588F8) + 48));
  else
    v61 = 0;
  v62 = v132;
  sub_1000073A0(v60, (uint64_t *)&unk_100640EB0);
  v63 = v137;
  v64 = v138;
  sub_10001413C(&v136, v137);
  v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
  __chkstk_darwin(v65);
  v125 = v6;
  v66 = (uint64_t)v126;
  *(&v112 - 4) = v6;
  *(&v112 - 3) = v66;
  *(&v112 - 2) = v127;
  *(&v112 - 1) = v61;
  v68 = sub_10048DFE4(v67, (void (*)(unint64_t, id))sub_100491604, (uint64_t)(&v112 - 6));
  v124 = 0;
  swift_bridgeObjectRelease(v65);
  v69 = v68[2];
  v70 = _swiftEmptyArrayStorage;
  v123 = v68;
  if (v69)
  {
    *(_QWORD *)&v135[0] = _swiftEmptyArrayStorage;
    sub_1003D7F78(0, v69, 0);
    v71 = (uint64_t)v68 + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80));
    v72 = *(_QWORD *)(v114 + 72);
    v70 = *(_QWORD **)&v135[0];
    v73 = v130;
    do
    {
      sub_10002B1E8(v71, (uint64_t)v12, type metadata accessor for TTRRemindersListUncommittedReminder);
      sub_10002B1E8((uint64_t)&v12[*(int *)(v131 + 20)], v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v12, type metadata accessor for TTRRemindersListUncommittedReminder);
      if ((swift_isUniquelyReferenced_nonNull_native(v70) & 1) == 0)
      {
        sub_1003D7F78(0, v70[2] + 1, 1);
        v73 = v130;
        v70 = *(_QWORD **)&v135[0];
      }
      v75 = v70[2];
      v74 = v70[3];
      if (v75 >= v74 >> 1)
      {
        sub_1003D7F78(v74 > 1, v75 + 1, 1);
        v73 = v130;
        v70 = *(_QWORD **)&v135[0];
      }
      v70[2] = v75 + 1;
      v76 = (uint64_t)v70
          + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))
          + *(_QWORD *)(v73 + 72) * v75;
      v62 = v132;
      sub_10001F580(v132, v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v71 += v72;
      --v69;
    }
    while (v69);
  }
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v77 = type metadata accessor for Logger(0);
  sub_100012DC4(v77, (uint64_t)qword_100660618);
  v78 = swift_bridgeObjectRetain_n(v70, 2);
  v79 = Logger.logObject.getter(v78);
  v80 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v79, (os_log_type_t)v80))
  {
    v81 = (uint8_t *)swift_slowAlloc(12, -1);
    v131 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v135[0] = v131;
    *(_DWORD *)v81 = 136315138;
    v82 = v70[2];
    v83 = _swiftEmptyArrayStorage;
    if (v82)
    {
      LODWORD(v118) = v80;
      v119 = v81;
      v120 = v79;
      *(_QWORD *)&v133 = _swiftEmptyArrayStorage;
      sub_1003D7FFC(0, v82, 0);
      v84 = (uint64_t)v70
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      v132 = *(_QWORD *)(v130 + 72);
      do
      {
        v85 = v128;
        sub_10002B1E8(v84, v128, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v86 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
        v87 = TTRTreeStorageItem.treeItemDescription.getter(v129, v86);
        v89 = v88;
        sub_10001F544(v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v83 = (_QWORD *)v133;
        if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0)
        {
          sub_1003D7FFC(0, v83[2] + 1, 1);
          v83 = (_QWORD *)v133;
        }
        v91 = v83[2];
        v90 = v83[3];
        if (v91 >= v90 >> 1)
        {
          sub_1003D7FFC(v90 > 1, v91 + 1, 1);
          v83 = (_QWORD *)v133;
        }
        v83[2] = v91 + 1;
        v92 = &v83[2 * v91];
        v92[4] = v87;
        v92[5] = v89;
        v84 += v132;
        --v82;
      }
      while (v82);
      v79 = v120;
      v81 = v119;
      LOBYTE(v80) = v118;
    }
    v98 = Array.description.getter(v83, &type metadata for String);
    v100 = v99;
    swift_bridgeObjectRelease(v83);
    *(_QWORD *)&v133 = sub_100027E40(v98, v100, (uint64_t *)v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, (char *)&v133 + 8, v81 + 4, v81 + 12);
    swift_bridgeObjectRelease_n(v70, 2);
    swift_bridgeObjectRelease(v100);
    _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v80, "Inserting UncommittedReminders {items: %s}", v81, 0xCu);
    v101 = v131;
    swift_arrayDestroy(v131, 1, &type metadata for Any[8]);
    swift_slowDealloc(v101, -1, -1);
    swift_slowDealloc(v81, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v70, 2);
  }
  v102 = (uint64_t)v123;
  if ((v121 & 1) != 0)
    v103 = 0;
  else
    v103 = 2;
  sub_100479D60((uint64_t)v123, 0, 0, v103, v122 & 1);
  swift_bridgeObjectRelease(v102);
  __chkstk_darwin(v104);
  *(&v112 - 2) = (uint64_t)&v136;
  v105 = sub_10048E1C0((uint64_t)v70, (uint64_t (*)(char *, _QWORD, char *))sub_100491610, (uint64_t)(&v112 - 4));
  swift_bridgeObjectRelease(v70);
  sub_1000073A0(v127, (uint64_t *)&unk_100640EB0);
  sub_1000073A0((uint64_t)v126, &qword_10064B6B0);
  sub_100027F10(&v136);
  return v105;
}

_QWORD *sub_100470F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v30 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v5 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v37 = a1;
  v38 = v2;
  v18 = sub_10046A478((uint64_t)sub_1004915DC, (uint64_t)v36, a2);
  v19 = sub_10002A750((uint64_t *)&unk_100649CF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_10000735C((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100649CE0);
  v32 = v18;
  v33 = v2;
  v34 = 0;
  v35 = 0;
  sub_10047AAE0((uint64_t)v14, 1, (uint64_t (*)(_QWORD *, __n128))sub_1004915F8, (uint64_t)v31, (uint64_t (*)(uint64_t))static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0);
  sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100649CE0);
  sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100649CE0);
  v20 = v18[2];
  if (v20)
  {
    v39 = _swiftEmptyArrayStorage;
    sub_1003D7F78(0, v20, 0);
    v21 = (uint64_t)v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v22 = *(_QWORD *)(v5 + 72);
    v28 = v18;
    v29 = v22;
    v23 = v39;
    do
    {
      sub_10002B1E8(v21, (uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      sub_10002B1E8((uint64_t)&v7[*(int *)(v30 + 20)], (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      {
        sub_1003D7F78(0, v23[2] + 1, 1);
        v23 = v39;
      }
      v25 = v23[2];
      v24 = v23[3];
      if (v25 >= v24 >> 1)
      {
        sub_1003D7F78(v24 > 1, v25 + 1, 1);
        v23 = v39;
      }
      v23[2] = v25 + 1;
      sub_10001F580((uint64_t)v11, (uint64_t)v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v21 += v29;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    return _swiftEmptyArrayStorage;
  }
  return v23;
}

void sub_100471230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  _QWORD v31[18];

  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v2);
  v31[4] = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v31[5] = (char *)v31 - v5;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v31[8] = (char *)v31 - v10;
  v11 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v11);
  v31[10] = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  v31[11] = v13;
  v31[12] = v14;
  __chkstk_darwin(v13);
  v31[9] = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v31[2] = (char *)v31 - v17;
  __chkstk_darwin(v18);
  v31[6] = (char *)v31 - v19;
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  v31[7] = (char *)v31 - v23;
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  v26 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v26);
  v28 = (char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[15] = a1;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v29);
  v31[13] = v28;
  v30 = (char *)sub_1004714F8 + 4 * byte_100537938[swift_getEnumCaseMultiPayload(v28, v26)];
  __asm { BR              X10 }
}

void sub_1004714F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_10001F544(*(_QWORD *)(v1 - 120), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100660618);
  v3 = sub_10002B1E8(*(_QWORD *)(v1 - 104), v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.fault.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v1 - 88) = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v9 = TTRTreeStorageItem.treeItemDescription.getter(*(_QWORD *)(v1 - 136), v8);
    v11 = v10;
    *(_QWORD *)(v1 - 96) = sub_100027E40(v9, v10, (uint64_t *)(v1 - 88));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 96, v1 - 88, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v11);
    sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Invalid item type {item: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

}

_QWORD *sub_100472224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v1 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - v6;
  v34 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  swift_retain();
  v8 = sub_100383144();
  swift_release();
  v36 = (unint64_t)&_swiftEmptySetSingleton;
  v9 = v8[2];
  v33 = v2;
  if (v9)
  {
    v31 = v8;
    v32 = v0;
    v10 = (uint64_t)v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v11 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain(v8);
    do
    {
      sub_10002B1E8(v10, (uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      v12 = *(_QWORD *)&v7[*(int *)(v1 + 24)];
      if (v12 && *(_BYTE *)(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
      {
        v13 = *(void **)(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        swift_retain();
        v14 = objc_msgSend(v13, "saveRequest");
        sub_100481004(&v35, (uint64_t)v14);
        swift_release();

      }
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n(v31, 2);
    v15 = (void *)v36;
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    v15 = &_swiftEmptySetSingleton;
  }
  swift_retain();
  v16 = sub_100383144();
  swift_release();
  v17 = sub_10048E46C((uint64_t)v16, (uint64_t)v15);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v15);
  swift_retain();
  v18 = sub_100383A18((uint64_t)v17);
  swift_release();
  swift_bridgeObjectRelease(v17);
  v19 = _swiftEmptyArrayStorage;
  v36 = (unint64_t)_swiftEmptyArrayStorage;
  v20 = v18[2];
  if (v20)
  {
    v21 = (uint64_t)v18 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    v22 = *(_QWORD *)(v33 + 72);
    swift_bridgeObjectRetain(v18);
    do
    {
      sub_10002B1E8(v21, (uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
      v23 = *(_QWORD *)&v4[*(int *)(v1 + 24)];
      if (v23)
      {
        v24 = objc_retain(*(id *)(v23
                                + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem));
        v25 = sub_10001F544((uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
        v27 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v26 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v27 >= v26 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
        v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v24);
        specialized Array._endMutation()(v28);
      }
      else
      {
        sub_10001F544((uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
      }
      v21 += v22;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease(v18);
    v19 = (_QWORD *)v36;
  }
  swift_bridgeObjectRelease(v18);
  return v19;
}

_QWORD *sub_100472550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  unint64_t v17;

  v0 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v4 = sub_100383144();
  swift_release();
  v5 = _swiftEmptyArrayStorage;
  v17 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = v4[2];
  if (v6)
  {
    v7 = (uint64_t)v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v8 = *(_QWORD *)(v1 + 72);
    v16 = v4;
    swift_bridgeObjectRetain(v4);
    do
    {
      sub_10002B1E8(v7, (uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
      v9 = *(_QWORD *)&v3[*(int *)(v0 + 24)];
      if (!v9 || *(_BYTE *)(v9 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
      {
        sub_10001F544((uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
      }
      else
      {
        v10 = *(id *)(v9 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        v11 = sub_10001F544((uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v14);
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    v4 = v16;
    swift_bridgeObjectRelease(v16);
    v5 = (_QWORD *)v17;
  }
  swift_bridgeObjectRelease(v4);
  return v5;
}

id sub_1004726FC(uint64_t a1)
{
  unint64_t v2;
  id v3;
  unint64_t v5;

  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(&v5, a1);
  swift_release();
  v2 = v5;
  swift_release();
  if (v2 < 2)
    return 0;
  v3 = *(id *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  sub_100390124(v2);
  return v3;
}

double sub_1004727A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_100660618);
  v8 = sub_10002B1E8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v21 = a1;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc(32, -1);
    v23 = v13;
    *(_DWORD *)v12 = 136315138;
    v20 = a2;
    v14 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v15 = TTRTreeStorageItem.treeItemDescription.getter(v4, v14);
    v17 = v16;
    v22 = sub_100027E40(v15, v16, &v23);
    a2 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v17);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Setting editingSessionState for editing item {item: %s}", v12, 0xCu);
    swift_arrayDestroy(v13, 1, &type metadata for Any[8]);
    swift_slowDealloc(v13, -1, -1);
    v18 = v12;
    a1 = v21;
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  swift_retain();
  sub_10037FD64(a1, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1004729FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v4 = *(_QWORD *)(v3 + 80);
  swift_retain(v3);
  swift_retain(v4);
  TTRMutableTreeStorage.auxiliaryData(for:)(v7, a1);
  swift_release(v4);
  v5 = v7[0];
  swift_release(v3);
  if (v5 == 1)
    return 0;
  else
    return v5;
}

double sub_100472A70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100660618);
  v6 = sub_10002B1E8(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v19 = v10;
    *(_DWORD *)v9 = 136315138;
    v17 = a1;
    v11 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v12 = TTRTreeStorageItem.treeItemDescription.getter(v2, v11);
    v14 = v13;
    v18 = sub_100027E40(v12, v13, &v19);
    a1 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removing editingSessionState {item: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.editAuxiliaryData(for:using:)(a1, sub_100380564, 0);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100472CD4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  unsigned __int8 v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD *);
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  _QWORD *v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD v89[5];
  _QWORD v90[3];
  uint64_t v91;
  void *v92;

  v86 = a1;
  v4 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v4);
  v80 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10064A7B8);
  __chkstk_darwin(v6);
  v82 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  v85 = *(_QWORD *)(v83 - 8);
  v8 = __chkstk_darwin(v83);
  v88 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for TTRRemindersListViewModel.Reminder.Override(0, v8);
  v84 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v79 = (uint64_t *)((char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v81 = (uint64_t)&v78 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - v14;
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v78 - v17);
  v19 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v2;
  v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(ObjectType, v27);
  if (!v30
    || (v32 = v30,
        v33 = v31,
        v34 = swift_getObjectType(v30, v31),
        LOBYTE(v33) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v34, v33),
        swift_unknownObjectRelease(v32),
        (v33 & 1) == 0))
  {
    v35 = a2;
    v36 = (void *)REMReminder.accountCapabilities.getter();
    v37 = objc_msgSend(v36, "insertsCompletedRecurrentCloneAtTail");

    if ((v37 & 1) == 0)
    {
      v38 = v26;
      sub_10046B6C4(v86, (uint64_t)v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100646F40);
        v39 = _swiftEmptyArrayStorage;
        v40 = (uint64_t)v88;
        v41 = v85;
      }
      else
      {
        sub_10001F580((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        v42 = &v25[*(int *)(v22 + 88)];
        v40 = (uint64_t)v88;
        v41 = v85;
        if (v42[8] == 1)
        {
          sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
          v39 = _swiftEmptyArrayStorage;
        }
        else
        {
          *v18 = *(_QWORD *)v42;
          swift_storeEnumTagMultiPayload(v18, v87, 9);
          v39 = (_QWORD *)sub_100455938(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
          v44 = v39[2];
          v43 = v39[3];
          if (v44 >= v43 >> 1)
            v39 = (_QWORD *)sub_100455938(v43 > 1, v44 + 1, 1, (unint64_t)v39);
          v39[2] = v44 + 1;
          sub_10001F580((uint64_t)v18, (uint64_t)v39+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        }
      }
      if (objc_msgSend(v35, "isRecurrent"))
      {
        *v15 = 1;
        swift_storeEnumTagMultiPayload(v15, v87, 0);
        if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
          v39 = (_QWORD *)sub_100455938(0, v39[2] + 1, 1, (unint64_t)v39);
        v46 = v39[2];
        v45 = v39[3];
        if (v46 >= v45 >> 1)
          v39 = (_QWORD *)sub_100455938(v45 > 1, v46 + 1, 1, (unint64_t)v39);
        v39[2] = v46 + 1;
        v47 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        v48 = *(_QWORD *)(v84 + 72);
        sub_10001F580((uint64_t)v15, (uint64_t)v39 + v47 + v48 * v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        v91 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
        v92 = &protocol witness table for REMReminder;
        v89[4] = &protocol witness table for REMReminder;
        v90[0] = v35;
        v89[3] = v91;
        v89[0] = v35;
        v49 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v38 + 248);
        v50 = v35;
        LOBYTE(v49) = v49(v89);
        sub_100027F10(v89);
        v51 = v49 & 1;
        v52 = (uint64_t)v82;
        static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)(v90, v51);
        sub_100027F10(v90);
        v53 = v83;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v52, 1, v83) == 1)
        {
          sub_1000073A0(v52, &qword_10064A7B8);
        }
        else
        {
          sub_10001F580(v52, v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
          v54 = v40;
          v55 = v81;
          sub_10002B1E8(v54, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v55, 0, 1, v53);
          swift_storeEnumTagMultiPayload(v55, v87, 1);
          v57 = v39[2];
          v56 = v39[3];
          if (v57 >= v56 >> 1)
            v39 = (_QWORD *)sub_100455938(v56 > 1, v57 + 1, 1, (unint64_t)v39);
          v39[2] = v57 + 1;
          v86 = v47;
          sub_10001F580(v81, (uint64_t)v39 + v47 + v57 * v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          v58 = objc_msgSend(v50, "recurrenceRules");
          v59 = (uint64_t)v88;
          if (v58)
          {
            v60 = v58;
            v61 = sub_100005ED8(0, &qword_100649DF8, REMRecurrenceRule_ptr);
            v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

          }
          else
          {
            v62 = 0;
          }
          v63 = v59 + *(int *)(v83 + 20);
          v64 = type metadata accessor for Date(0);
          v65 = *(_QWORD *)(v64 - 8);
          v66 = (uint64_t)v80;
          (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v80, v63, v64);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
          v67 = static TTRRemindersListViewModel.Reminder.recurrenceDescription(from:displayDate:)(v62, v66);
          v69 = v68;
          swift_bridgeObjectRelease(v62);
          sub_1000073A0(v66, (uint64_t *)&unk_100653A90);
          if (v69)
          {
            v70 = v79;
            *v79 = v67;
            v70[1] = v69;
            v71 = (uint64_t)v70;
            swift_storeEnumTagMultiPayload(v70, v87, 3);
            v73 = v39[2];
            v72 = v39[3];
            if (v73 >= v72 >> 1)
              v39 = (_QWORD *)sub_100455938(v72 > 1, v73 + 1, 1, (unint64_t)v39);
            v59 = (uint64_t)v88;
            v39[2] = v73 + 1;
            sub_10001F580(v71, (uint64_t)v39 + v86 + v73 * v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          }
          sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
        }
      }
      v74 = objc_msgSend(v35, "objectID");
      v75 = (_QWORD *)(v38
                     + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
      swift_beginAccess(v38 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides, v90, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v75);
      v89[0] = *v75;
      *v75 = 0x8000000000000000;
      sub_10009738C((uint64_t)v39, v74, isUniquelyReferenced_nonNull_native);
      v77 = *v75;
      *v75 = v89[0];

      swift_bridgeObjectRelease(v77);
      swift_endAccess(v90);
    }
  }
}

void sub_100473480(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  unsigned __int8 v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _BYTE v63[24];
  _BYTE v64[24];
  char v65[24];

  v5 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  v57 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v58 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (uint64_t)&v56 - v8;
  v9 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v12);
  v60 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v17 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v17);
  v61 = (uint64_t *)((char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v2;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
  if (!v23
    || (v25 = v23,
        v26 = v24,
        v27 = swift_getObjectType(v23, v24),
        LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26),
        swift_unknownObjectRelease(v25),
        (v26 & 1) == 0))
  {
    v28 = a2;
    v29 = objc_msgSend(v28, "accountCapabilities");
    v30 = objc_msgSend(v29, "insertsCompletedRecurrentCloneAtTail");

    if ((v30 & 1) == 0)
    {
      sub_10002B1E8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v16, v12) != 2)
      {
        v54 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v55 = v16;
LABEL_20:
        sub_10001F544((uint64_t)v55, v54);
        return;
      }
      v31 = v61;
      sub_10001F580((uint64_t)v16, (uint64_t)v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v32 = objc_msgSend(v28, "objectID");
      sub_10000735C((uint64_t)v31 + *(int *)(v17 + 20), (uint64_t)v11, &qword_100644980);
      v33 = v60;
      TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v32, v11);
      swift_storeEnumTagMultiPayload(v33, v12, 2);
      v34 = v59;
      sub_10002B1E8(v33, v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8(a1, v34 + *(int *)(v5 + 20), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v35 = (uint64_t *)(v19 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
      swift_beginAccess(v19 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, v65, 0, 0);
      v36 = *v35;
      swift_bridgeObjectRetain(*v35);
      LOBYTE(v33) = sub_100081E20(v34, v36);
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v36).n128_u64[0];
      if ((v33 & 1) == 0)
      {
        v38 = v58;
        sub_10002B1E8(v34, v58, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        swift_beginAccess(v35, v64, 33, 0);
        v39 = *v35;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
        *v35 = v39;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v39 = sub_100455A84(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
          *v35 = v39;
        }
        v41 = v57;
        v43 = *(_QWORD *)(v39 + 16);
        v42 = *(_QWORD *)(v39 + 24);
        if (v43 >= v42 >> 1)
        {
          v39 = sub_100455A84(v42 > 1, v43 + 1, 1, v39);
          *v35 = v39;
        }
        *(_QWORD *)(v39 + 16) = v43 + 1;
        sub_10001F580(v38, v39+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v43, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        swift_endAccess(v64);
      }
      v44 = objc_msgSend(v28, "objectID", v37);
      v45 = (void *)*v61;
      v46 = (uint64_t *)(v19
                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
      swift_beginAccess(v19 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides, v64, 0, 0);
      v47 = *v46;
      if (*(_QWORD *)(*v46 + 16))
      {
        v48 = v45;
        swift_bridgeObjectRetain(v47);
        v49 = sub_1002AA364((uint64_t)v48);
        if ((v50 & 1) != 0)
        {
          v51 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v49);
          swift_bridgeObjectRetain(v51);

          swift_bridgeObjectRelease(v47);
          swift_beginAccess(v46, v63, 33, 0);
          if (v51)
          {
            v52 = swift_isUniquelyReferenced_nonNull_native(*v46);
            v62 = *v46;
            *v46 = 0x8000000000000000;
            sub_10009738C(v51, v44, v52);
            v53 = *v46;
            *v46 = v62;
LABEL_19:

            swift_bridgeObjectRelease(v53);
            swift_endAccess(v63);
            sub_10001F544(v34, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
            sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v54 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID;
            v55 = v61;
            goto LABEL_20;
          }
LABEL_18:
          v53 = sub_1002ACA14((uint64_t)v44);
          goto LABEL_19;
        }

        swift_bridgeObjectRelease(v47);
      }
      swift_beginAccess(v46, v63, 33, 0);
      goto LABEL_18;
    }
  }
}

double sub_1004739C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32[2];
  uint64_t v33;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  v9 = v8(ObjectType, v6);
  if (!v9
    || (v11 = v9,
        v12 = v10,
        v13 = swift_getObjectType(v9, v10),
        LOBYTE(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12),
        swift_unknownObjectRelease(v11),
        (v12 & 1) == 0))
  {
    v33 = a1;
    swift_bridgeObjectRetain(a1);
    v15 = sub_10002A750(&qword_100660CC0);
    Set.removeAll(where:)(sub_1004915B8, v3, v15);
    v16 = *(_QWORD *)(a2 + 16);
    if (v16)
    {
      v31 = ObjectType;
      swift_bridgeObjectRetain(a2);
      v17 = (void **)(a2 + 40);
      do
      {
        v18 = *v17;
        v19 = *(v17 - 1);
        v20 = v18;
        v21 = (void *)REMReminder.accountCapabilities.getter();
        v22 = objc_msgSend(v21, "insertsCompletedRecurrentCloneAtTail");

        if ((v22 & 1) != 0)
        {
          v23 = objc_msgSend(v19, "objectID");
          v24 = (void *)sub_1000F478C(v23);

        }
        else
        {
          sub_1000176A0((Swift::Int *)v32, objc_msgSend(v19, "objectID"));

          sub_1000176A0((Swift::Int *)v32, objc_msgSend(v20, "objectID"));
        }
        v17 += 2;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease(a2);
      ObjectType = v31;
    }
    v25 = v8(ObjectType, v6);
    if (v25)
    {
      v27 = v25;
      v28 = v26;
      v29 = swift_getObjectType(v25, v26);
      v30 = v33;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40))(v33, v29, v28);
      swift_bridgeObjectRelease(v30);
      swift_unknownObjectRelease(v27);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100473C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v7 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v22[-v11];
  __chkstk_darwin(v13);
  v15 = &v22[-v14];
  v16 = *(_QWORD **)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  swift_retain();
  sub_1000B5F7C(a2, (uint64_t)v9);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = a1;
  sub_10000F614((uint64_t)v9, (uint64_t)v12, &qword_100654860);
  swift_retain();
  v18 = sub_10048E6E0(a3, v16);
  swift_release();
  sub_10002A750(&qword_1006445E8);
  v19 = sub_100023FEC(&qword_1006445F0, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
  static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)(v12, v18, v7, v19);
  swift_release();
  swift_bridgeObjectRelease(v18);
  sub_1000073A0((uint64_t)v12, &qword_100654860);
  v20 = *(_QWORD *)&v15[*(int *)(v7 + 36)];
  sub_1000073A0((uint64_t)v15, &qword_100654860);
  return v20;
}

void sub_100473DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, __n128);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;

  v3 = &qword_100654860;
  v4 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - v8;
  v10 = &qword_100654868;
  v11 = sub_10002A750(&qword_100654868);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v33 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v34 = v1;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v18 = *(uint64_t (**)(uint64_t, __n128))(v17 + 104);
  v19 = *(_QWORD *)(v17 + 112);
  swift_retain();
  v37 = sub_10037D980(v18, v19);
  swift_release();
  v20 = *(_QWORD *)(a1 + 16);
  v36 = a1;
  swift_bridgeObjectRetain(a1);
  v38 = 0;
  v35 = v9;
  while (1)
  {
    if (v38 == v20)
    {
      v21 = sub_10002A750(&qword_100654870);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 1, 1, v21);
      v38 = v20;
      goto LABEL_6;
    }
    if (v38 >= v20)
      break;
    v22 = sub_10002A750(&qword_100654870);
    v23 = v6;
    v24 = v20;
    v25 = v3;
    v26 = v10;
    v27 = *(_QWORD *)(v22 - 8);
    v28 = v38;
    sub_10000735C(v36+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v38, (uint64_t)v13, &qword_100654870);
    v38 = v28 + 1;
    v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    v10 = v26;
    v3 = v25;
    v20 = v24;
    v6 = v23;
    v9 = v35;
    v29(v13, 0, 1, v22);
LABEL_6:
    sub_10000F614((uint64_t)v13, (uint64_t)v16, v10);
    v30 = sub_10002A750(&qword_100654870);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30) == 1)
    {
      swift_bridgeObjectRelease(v36);
      *(_QWORD *)(v34 + v33) = v37;
      swift_release();
      return;
    }
    v31 = (uint64_t)&v16[*(int *)(v30 + 48)];
    v32 = (uint64_t)&v16[*(int *)(v30 + 64)];
    sub_10000F614(v31, (uint64_t)v9, v3);
    sub_10000F614(v32, (uint64_t)v6, v3);
    sub_100380D9C((uint64_t)v9, (uint64_t)v6);
    sub_1000073A0((uint64_t)v6, v3);
    sub_1000073A0((uint64_t)v9, v3);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  __break(1u);
}

uint64_t sub_100474084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  if (!v6)
    return 1;
  v8 = v6;
  v9 = v7;
  v10 = swift_getObjectType(v6, v7);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v10, v9);
  swift_unknownObjectRelease(v8);
  return v11 & 1;
}

uint64_t sub_100474108()
{
  return 0;
}

void sub_100474118(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v19[24];

  v5 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, v19, 0, 0);
  sub_10002B1E8(v8, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
  {
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 104))(a1, a2 & 1, ObjectType, v10);
  }
  else
  {
    v12 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100012DC4(v13, (uint64_t)qword_100660618);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Illegal attempt to change sorting style.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
}

uint64_t sub_1004742D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  int EnumCaseMultiPayload;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  char **v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(id, uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  __n128 v197;
  uint64_t v198;
  char *v199;
  char *v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void (*v250)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257[8];

  v225 = 0;
  v2 = sub_10002A750(&qword_1006554F0);
  __chkstk_darwin(v2);
  v200 = (char *)&v191 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v236);
  v238 = (char *)&v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v5);
  v210 = (char *)&v191 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_10002A750(&qword_100647B00);
  v226 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v208 = (char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006588E8);
  __chkstk_darwin(v8);
  v223 = (char *)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_10002A750(&qword_1006554F8);
  v10 = __chkstk_darwin(v207);
  v194 = (char *)&v191 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v206 = (uint64_t)&v191 - v12;
  v222 = sub_10002A750(&qword_1006588F0);
  __chkstk_darwin(v222);
  v235 = (uint64_t)&v191 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100647AF8);
  v15 = __chkstk_darwin(v14);
  v199 = (char *)&v191 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v221 = (uint64_t)&v191 - v17;
  v220 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  __chkstk_darwin(v220);
  v234 = (uint64_t)&v191 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v19);
  v219 = (uint64_t)&v191 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v21);
  v218 = (uint64_t)&v191 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v24 = __chkstk_darwin(v23);
  v212 = (char *)&v191 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v233 = (uint64_t)&v191 - v26;
  v232 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v232);
  v231 = (uint64_t)&v191 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v28);
  v230 = (uint64_t)&v191 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = sub_10002A750(&qword_10064B6B0);
  v229 = *(_QWORD *)(v251 - 8);
  v30 = __chkstk_darwin(v251);
  v217 = (uint64_t)&v191 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v242 = (uint64_t)&v191 - v33;
  __chkstk_darwin(v32);
  v237 = (char *)&v191 - v34;
  v35 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v36 = __chkstk_darwin(v35);
  v216 = (char *)&v191 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v192 = (uint64_t)&v191 - v39;
  v40 = __chkstk_darwin(v38);
  v247 = (uint64_t)&v191 - v41;
  __chkstk_darwin(v40);
  v249 = (uint64_t)&v191 - v42;
  v43 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = __chkstk_darwin(v43);
  v244 = (uint64_t)&v191 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v45);
  v228 = (uint64_t)&v191 - v48;
  v49 = __chkstk_darwin(v47);
  v215 = (char *)&v191 - v50;
  v51 = __chkstk_darwin(v49);
  v205 = (char *)&v191 - v52;
  v53 = __chkstk_darwin(v51);
  v211 = (uint64_t)&v191 - v54;
  v55 = __chkstk_darwin(v53);
  v57 = (char *)&v191 - v56;
  v58 = __chkstk_darwin(v55);
  v60 = (char *)&v191 - v59;
  __chkstk_darwin(v58);
  v62 = (char *)&v191 - v61;
  v63 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v64 = __chkstk_darwin(v63);
  v193 = (char *)&v191 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __chkstk_darwin(v64);
  v241 = (uint64_t)&v191 - v67;
  v68 = __chkstk_darwin(v66);
  v204 = (uint64_t)&v191 - v69;
  v70 = __chkstk_darwin(v68);
  v203 = (uint64_t)&v191 - v71;
  v72 = __chkstk_darwin(v70);
  v245 = (uint64_t)&v191 - v73;
  v74 = __chkstk_darwin(v72);
  v202 = (uint64_t)&v191 - v75;
  v76 = __chkstk_darwin(v74);
  v214 = (uint64_t)&v191 - v77;
  v78 = __chkstk_darwin(v76);
  v213 = (uint64_t)&v191 - v79;
  v80 = __chkstk_darwin(v78);
  v240 = (uint64_t)&v191 - v81;
  __chkstk_darwin(v80);
  v83 = (char *)&v191 - v82;
  v84 = *(_QWORD *)(a1 + 80);
  v250 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  v250((char *)&v191 - v82, 1, 1, v43);
  swift_retain(v84);
  v85 = TTRMutableTreeStorage.children(of:)(v83);
  swift_release(v84);
  v239 = v83;
  v86 = (uint64_t)v83;
  v87 = (_QWORD *)v85;
  sub_1000073A0(v86, (uint64_t *)&unk_100640EB0);
  v88 = *(_QWORD *)(v85 + 16);
  v252 = v43;
  if (v88)
  {
    sub_10002B1E8(v85 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80)), (uint64_t)v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v62, v43);
    sub_10001F544((uint64_t)v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      swift_retain(a1);
      v90 = v225;
      v91 = sub_100393344(v85, a1);
      swift_bridgeObjectRelease(v85);
      swift_release(a1);
      v87 = v91;
      v92 = (uint64_t)v237;
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v85);
    v87 = _swiftEmptyArrayStorage;
  }
  v92 = (uint64_t)v237;
  v90 = v225;
LABEL_6:
  v93 = v252;
  v255 = v87[2];
  if (v255)
  {
    v225 = v90;
    v198 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
    v253 = (char *)v87 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v209 = v248 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    v94 = swift_beginAccess(v248 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v257, 0, 0);
    v95 = 0;
    v94.n128_u64[0] = 136315138;
    v197 = v94;
    v196 = &type metadata for Any[8];
    v96 = v249;
    v224 = a1;
    v254 = v44;
    v246 = v87;
    do
    {
      if (v95 >= v87[2])
      {
        __break(1u);
        JUMPOUT(0x100475C04);
      }
      sub_10002B1E8((uint64_t)&v253[*(_QWORD *)(v44 + 72) * v95], (uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v60, (uint64_t)v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v57, v93) == 1)
      {
        v97 = v247;
        sub_10001F580((uint64_t)v57, v247, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10001F580(v97, v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v98 = v93;
        v99 = (*(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, _QWORD))(*(_QWORD *)v248 + 920))(v96, a1, &off_100604220, 0);
        sub_10002B1E8((uint64_t)v60, v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v250((char *)v92, 0, 1, v98);
        swift_storeEnumTagMultiPayload(v92, v251, 0);
        if ((v99 & 1) != 0)
        {
          v100 = v240;
          sub_100383D24(v92, v240);
          sub_1000073A0(v92, &qword_10064B6B0);
          v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v254 + 48);
          v102 = v101(v100, 1, v98);
          sub_1000073A0(v100, (uint64_t *)&unk_100640EB0);
          if (v102 == 1)
          {
            v103 = v231;
            sub_10002B1E8(v249, v231, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
            swift_storeEnumTagMultiPayload(v103, v232, 1);
            v104 = v230;
            sub_1003816A0(v103, v230);
            sub_10001F544(v103, type metadata accessor for TTRRemindersListReminderCreationLocation);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v104, 1, v251) != 1)
            {
              sub_10000F614(v104, v242, &qword_10064B6B0);
              v122 = v219;
              sub_10000735C(v209, v219, &qword_100649CA0);
              v123 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
              v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 48))(v122, 1, v123);
              v125 = v218;
              if (v124 == 1)
              {
                sub_1000073A0(v122, &qword_100649CA0);
                v126 = type metadata accessor for TTRTemplatePublicLinkData(0);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v125, 1, 1, v126);
                v127 = REMReminder_ptr;
                v128 = &selRef_newObjectID;
              }
              else
              {
                sub_10000735C(v122 + *(int *)(v123 + 100), v218, (uint64_t *)&unk_100653A00);
                sub_10001F544(v122, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
                v129 = type metadata accessor for TTRTemplatePublicLinkData(0);
                v130 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 48))(v125, 1, v129);
                if (v130 == 1)
                  v127 = REMReminder_ptr;
                else
                  v127 = REMTemplate_ptr;
                if (v130 == 1)
                  v128 = &selRef_newObjectID;
                else
                  v128 = &selRef_newObjectIDForSavedReminder;
              }
              v131 = (uint64_t)v215;
              sub_1000073A0(v125, (uint64_t *)&unk_100653A00);
              v132 = objc_msgSend((id)objc_opt_self(*v127), *v128);
              v133 = v217;
              sub_10000735C(v242, v217, &qword_10064B6B0);
              v134 = v133;
              v135 = v214;
              sub_10000F614(v134, v214, (uint64_t *)&unk_100640EB0);
              v136 = v213;
              sub_10000F614(v135, v213, (uint64_t *)&unk_100640EB0);
              v137 = v252;
              if (v101(v136, 1, v252) == 1)
              {
                sub_1000073A0(v136, (uint64_t *)&unk_100640EB0);
                a1 = v224;
                goto LABEL_47;
              }
              v201 = v132;
              v195 = v57;
              v138 = v136;
              v139 = v211;
              sub_10001F580(v138, v211, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v140 = *(_QWORD *)(v248 + v198);
              v141 = v139;
              v142 = v245;
              sub_10002B1E8(v141, v245, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v250((char *)v142, 0, 1, v137);
              v243 = v140;
              swift_retain(v140);
              v143 = v142;
              v144 = v203;
              sub_10000735C(v143, v203, (uint64_t *)&unk_100640EB0);
              v145 = v101(v144, 1, v137);
              v146 = (uint64_t)v205;
              if (v145 == 1)
              {
LABEL_40:
                sub_1000073A0(v245, (uint64_t *)&unk_100640EB0);
                sub_1000073A0(v144, (uint64_t *)&unk_100640EB0);
                v151 = 1;
                v152 = v202;
              }
              else
              {
                while (1)
                {
                  sub_10001F580(v144, v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_10002B1E8(v146, v131, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  if (swift_getEnumCaseMultiPayload(v131, v137) == 1)
                    break;
                  sub_10001F544(v131, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  v147 = *(_QWORD *)(v243 + 80);
                  swift_retain(v147);
                  v148 = (uint64_t)v239;
                  TTRMutableTreeStorage.parent(of:)(v146);
                  v149 = v147;
                  v137 = v252;
                  swift_release(v149);
                  sub_10001F544(v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  v150 = v245;
                  sub_1000073A0(v245, (uint64_t *)&unk_100640EB0);
                  sub_10000F614(v148, v150, (uint64_t *)&unk_100640EB0);
                  sub_10000735C(v150, v144, (uint64_t *)&unk_100640EB0);
                  if (v101(v144, 1, v137) == 1)
                    goto LABEL_40;
                }
                sub_1000073A0(v245, (uint64_t *)&unk_100640EB0);
                sub_10001F544(v131, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v152 = v202;
                sub_10001F580(v146, v202, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v151 = 0;
              }
              v57 = v195;
              v250((char *)v152, v151, 1, v137);
              swift_release(v243);
              v153 = v101(v152, 1, v137);
              a1 = v224;
              v132 = v201;
              if (v153 == 1)
              {
                sub_10001F544(v211, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1000073A0(v152, (uint64_t *)&unk_100640EB0);
                goto LABEL_47;
              }
              if (swift_getEnumCaseMultiPayload(v152, v137) == 1)
              {
                v154 = v152;
                v155 = v192;
                sub_10001F580(v154, v192, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
                v156 = *(_QWORD **)(v248 + v198);
                v157 = v156[8];
                v158 = v156[9];
                sub_10001413C(v156 + 5, v157);
                v159 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v158 + 8);
                v160 = v157;
                v161 = (uint64_t)v212;
                v162 = v158;
                v132 = v201;
                v159(v201, v155, v160, v162);
                sub_10001F544(v155, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
                sub_10001F544(v211, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              }
              else
              {
                sub_10001F544(v211, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_10001F544(v152, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_47:
                v161 = (uint64_t)v212;
                v163 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
                v164 = v210;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v210, 1, 1, v163);
                TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v132, v164);
                v165 = v132;
              }
              v166 = v233;
              sub_10001F580(v161, v233, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

              v167 = v228;
              sub_10002B1E8(v166, v228, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v168 = v252;
              swift_storeEnumTagMultiPayload(v167, v252, 4);
              v169 = v220;
              v170 = v234;
              v171 = v234 + *(int *)(v220 + 20);
              sub_10002B1E8(v167, v171, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10000735C(v242, v170, &qword_10064B6B0);
              *(_QWORD *)(v170 + *(int *)(v169 + 24)) = 0;
              v172 = v235;
              sub_10002B1E8(v171, v235, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v173 = v222;
              sub_10000735C(v170, v172 + *(int *)(v222 + 56), &qword_10064B6B0);
              v174 = v172 + *(int *)(v173 + 52);
              *(_QWORD *)v174 = 0;
              *(_QWORD *)(v174 + 8) = 0;
              *(_BYTE *)(v174 + 16) = 1;
              v175 = *(_QWORD *)(a1 + 80);
              swift_retain(v175);
              v176 = (uint64_t)v223;
              TTRMutableTreeStorage.insertTemporaryItem(with:)(v172);
              swift_release(v175);
              v177 = sub_10002A750(&qword_100658930);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 48))(v176, 1, v177) == 1)
              {
                sub_1000073A0(v176, &qword_1006588E8);
                v178 = 1;
                v179 = v227;
                v92 = (uint64_t)v237;
                v44 = v254;
                v87 = v246;
                v180 = v221;
              }
              else
              {
                v181 = *(_QWORD *)(v176 + *(int *)(v177 + 48));
                v182 = v207;
                v183 = *(int *)(v207 + 48);
                v184 = v176;
                v185 = v206;
                sub_10000F614(v184, v206, (uint64_t *)&unk_100640EB0);
                *(_QWORD *)(v185 + v183) = v181;
                v186 = *(_QWORD *)(v185 + *(int *)(v182 + 48));
                v187 = v185;
                v188 = v204;
                sub_10000F614(v187, v204, (uint64_t *)&unk_100640EB0);
                v189 = (uint64_t)v208;
                v250(v208, 1, 1, v168);
                sub_1000B5F7C(v188, v189);
                v179 = v227;
                *(_QWORD *)(v189 + *(int *)(v227 + 36)) = v186;
                v180 = v221;
                sub_10000F614(v189, v221, &qword_100647B00);
                sub_1000073A0(v188, (uint64_t *)&unk_100640EB0);
                v178 = 0;
                v92 = (uint64_t)v237;
                v44 = v254;
                v87 = v246;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v226 + 56))(v180, v178, 1, v179);
              sub_1000073A0(v235, &qword_1006588F0);
              sub_1000073A0(v180, &qword_100647AF8);
              sub_10001F544(v234, type metadata accessor for TTRRemindersListUncommittedReminder);
              sub_10001F544(v228, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10001F544(v233, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_1000073A0(v242, &qword_10064B6B0);
              v96 = v249;
              sub_10001F544(v249, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              sub_10001F544((uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v93 = v252;
              goto LABEL_9;
            }
            sub_1000073A0(v104, &qword_100660C50);
            v105 = (uint64_t)v216;
            if (qword_10063D818 != -1)
              swift_once(&qword_10063D818, sub_100478F7C);
            v106 = type metadata accessor for Logger(0);
            sub_100012DC4(v106, (uint64_t)qword_100660618);
            v107 = sub_10002B1E8(v249, v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            v108 = Logger.logObject.getter(v107);
            v109 = static os_log_type_t.fault.getter(v108);
            if (os_log_type_enabled(v108, v109))
            {
              v110 = swift_slowAlloc(12, -1);
              v111 = swift_slowAlloc(32, -1);
              v256 = v111;
              *(_DWORD *)v110 = v197.n128_u32[0];
              v112 = TTRRemindersListViewModel.SectionID.description.getter();
              v114 = v113;
              *(_QWORD *)(v110 + 4) = sub_100027E40(v112, v113, &v256);
              swift_bridgeObjectRelease(v114);
              sub_10001F544(v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              _os_log_impl((void *)&_mh_execute_header, v108, v109, "Unable to resolve ReminderCreationLocation endOfSection for id %s", (uint8_t *)v110, 0xCu);
              swift_arrayDestroy(v111, 1, v196);
              swift_slowDealloc(v111, -1, -1);
              v115 = v110;
              a1 = v224;
              swift_slowDealloc(v115, -1, -1);

            }
            else
            {

              sub_10001F544(v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            }
            v96 = v249;
            sub_10001F544(v249, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            sub_10001F544((uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v92 = (uint64_t)v237;
          }
          else
          {
            v96 = v249;
            sub_10001F544(v249, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            sub_10001F544((uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          v93 = v252;
          v44 = v254;
        }
        else
        {
          v116 = a1;
          v117 = v241;
          v118 = v116;
          sub_100383D24(v92, v241);
          sub_1000073A0(v92, &qword_10064B6B0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v254 + 48))(v117, 1, v98) != 1)
          {
            v119 = sub_10001F580(v117, v244, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v120 = v238;
            TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v119);
            v121 = (char *)&loc_1004750B0 + dword_100475C04[swift_getEnumCaseMultiPayload(v120, v236)];
            __asm { BR              X9 }
          }
          v93 = v98;
          sub_10001F544(v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10001F544((uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000073A0(v117, (uint64_t *)&unk_100640EB0);
          v44 = v254;
          a1 = v118;
        }
        v87 = v246;
      }
      else
      {
        sub_10001F544((uint64_t)v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544((uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
LABEL_9:
      ++v95;
    }
    while (v95 != v255);
  }
  return swift_bridgeObjectRelease(v87);
}

void sub_100475C14(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  __n128 v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;

  v2 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) == 1
    && (v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree),
        swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree)),
        v5 = sub_10037C994(),
        v6 = swift_release(v4),
        (v5 & 1) != 0))
  {
    v7 = (*(uint64_t (**)(__n128))(*(_QWORD *)v2 + 552))(v6);
  }
  else
  {
    v7 = 128;
  }
  v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging);
  if (!(v8 >> 6))
  {
    v9 = (v8 & 1) == 0;
    if (v7 > 0x3Fu || ((v7 ^ v9) & 1) == 0)
      goto LABEL_15;
    goto LABEL_12;
  }
  if (v8 >> 6 == 1)
  {
    if ((v7 & 0xC0) != 0x40 || ((v8 ^ v7) & 0x3F) != 0)
      goto LABEL_15;
LABEL_12:
    if ((a1 & 1) == 0)
      return;
    goto LABEL_16;
  }
  if (v7 == 128)
    goto LABEL_12;
LABEL_15:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging) = v7;
LABEL_16:
  v10 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType(Strong, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 64))(v7, ObjectType, v14);
    swift_unknownObjectRelease(v13);
  }
}

id sub_100475D50@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;

  v61 = a3;
  v62 = a1;
  v63 = a2;
  v3 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v3);
  v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v5);
  v56 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  __chkstk_darwin(v18);
  v57 = (uint64_t)&v52 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v52 - v24;
  v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v52 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v52 - v34;
  sub_10000735C(v63, (uint64_t)v9, &qword_10064B6B0);
  sub_10000F614((uint64_t)v9, (uint64_t)v22, (uint64_t *)&unk_100640EB0);
  sub_10000F614((uint64_t)v22, (uint64_t)v25, (uint64_t *)&unk_100640EB0);
  v63 = v27;
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v36(v25, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v25, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10001F580((uint64_t)v25, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v53 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
    v37 = *(_QWORD *)(v60 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
    v55 = v35;
    sub_10002B1E8((uint64_t)v35, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
    v54(v17, 0, 1, v26);
    v63 = v37;
    swift_retain();
    sub_10000735C((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100640EB0);
    v38 = v36(v14, 1, v26);
    v39 = (uint64_t)v58;
    if (v38 == 1)
    {
LABEL_6:
      sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
      sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100640EB0);
      v40 = 1;
      v41 = v60;
      v42 = v57;
    }
    else
    {
      while (1)
      {
        sub_10001F580((uint64_t)v14, (uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10002B1E8((uint64_t)v32, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v29, v26) == 1)
          break;
        sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRMutableTreeStorage.parent(of:)(v32);
        swift_release();
        sub_10001F544((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
        sub_10000F614(v39, (uint64_t)v17, (uint64_t *)&unk_100640EB0);
        sub_10000735C((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100640EB0);
        if (v36(v14, 1, v26) == 1)
          goto LABEL_6;
      }
      sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
      sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v42 = v57;
      sub_10001F580((uint64_t)v32, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v40 = 0;
      v41 = v60;
    }
    v43 = (uint64_t)v55;
    v54((char *)v42, v40, 1, v26);
    v44 = swift_release();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v36)(v42, 1, v26, v44) == 1)
    {
      sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v42, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v42, v26) == 1)
      {
        v45 = v56;
        sub_10001F580(v42, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v46 = *(_QWORD **)(v41 + v53);
        v47 = v46[8];
        v48 = v46[9];
        sub_10001413C(v46 + 5, v47);
        (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v48 + 8))(v62, v45, v47, v48);
        sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        return (id)sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v51 = v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v59, 1, 1, v50);
  TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v62, v51);
  return v62;
}

_QWORD *sub_100476320(void (*a1)(_QWORD *__return_ptr, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  _BYTE *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  void (*v14)(_QWORD *__return_ptr, _QWORD);
  uint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a3);
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  v14 = a1;
  do
  {
    BYTE3(v15) = *(_BYTE *)(a3 + v7 + 32);
    a1(&v15, (char *)&v15 + 3);
    if (v3)
    {
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(a3);
      return v8;
    }
    v10 = (unsigned __int16)v15 | (BYTE2(v15) << 16);
    if ((v15 & 0xFF00) != 0x200)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_100454DDC(0, v8[2] + 1, 1, v8);
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
        v8 = sub_100454DDC((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
      v8[2] = v12 + 1;
      v9 = (char *)v8 + 3 * v12;
      v9[32] = v10;
      v9[33] = BYTE1(v10) & 1;
      v9[34] = BYTE2(v10) & 1;
      a1 = v14;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease(a3);
  return v8;
}

_QWORD *sub_10047648C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_10002A750(&qword_100658910);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10002A750(&qword_100658908);
  v9 = *(_QWORD *)(v27 - 8);
  v10 = __chkstk_darwin(v27);
  v26 = (uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v24 = (uint64_t)&v21 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return _swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(type metadata accessor for TTRRemindersListTreeViewModel.Section(0) - 8);
  v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v25 = *(_QWORD *)(v14 + 72);
  v22 = a3;
  swift_bridgeObjectRetain(a3);
  v16 = _swiftEmptyArrayStorage;
  v23 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v22);
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v27) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_100658910);
    }
    else
    {
      v17 = v24;
      sub_10000F614((uint64_t)v8, v24, &qword_100658908);
      sub_10000F614(v17, v26, &qword_100658908);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (_QWORD *)sub_100455334(0, v16[2] + 1, 1, (unint64_t)v16);
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
        v16 = (_QWORD *)sub_100455334(v18 > 1, v19 + 1, 1, (unint64_t)v16);
      v16[2] = v19 + 1;
      sub_10000F614(v26, (uint64_t)v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v19, &qword_100658908);
      a1 = v23;
    }
    v15 += v25;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease(v22);
  return v16;
}

_QWORD *sub_1004766FC(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[2];
  unint64_t v21;

  v4 = v3;
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    for (i = 4; ; ++i)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a3)
         : *(id *)(a3 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v20[0] = i - 4;
      v20[1] = v9;
      a1(&v19, v20);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return (_QWORD *)swift_bridgeObjectRelease(v21);
      }

      v13 = v19;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v8);
      }
      if (v11 == v6)
      {
        swift_bridgeObjectRelease(a3);
        return (_QWORD *)v21;
      }
    }
    __break(1u);
LABEL_17:
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
  swift_bridgeObjectRelease(a3);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100476894(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(id *);
  uint64_t v30;
  id v31;

  v4 = v3;
  v29 = a1;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v30 = *(_QWORD *)(v28 - 8);
  v9 = __chkstk_darwin(v28);
  v27 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v25 = (uint64_t)&v23 - v11;
  if ((unint64_t)a3 >> 62)
    goto LABEL_20;
  v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v12; v12 = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    v13 = _swiftEmptyArrayStorage;
    v26 = a3 & 0xC000000000000001;
    v14 = 4;
    v24 = a3;
    while (1)
    {
      v15 = v26 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, a3) : *(id *)(a3 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v31 = v15;
      v29(&v31);
      if (v4)
      {
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(a3);

        return v13;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v8, 1, v28) == 1)
      {
        sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
      }
      else
      {
        v18 = v25;
        sub_10001F580((uint64_t)v8, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F580(v18, v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (_QWORD *)sub_100454EEC(0, v13[2] + 1, 1, (unint64_t)v13);
        v20 = v13[2];
        v19 = v13[3];
        if (v20 >= v19 >> 1)
          v13 = (_QWORD *)sub_100454EEC(v19 > 1, v20 + 1, 1, (unint64_t)v13);
        v13[2] = v20 + 1;
        sub_10001F580(v27, (uint64_t)v13+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        a3 = v24;
      }
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease(a3);
        return v13;
      }
    }
    __break(1u);
LABEL_20:
    if (a3 < 0)
      v21 = a3;
    else
      v21 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
  swift_bridgeObjectRelease(a3);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100476B68(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = _swiftEmptyArrayStorage;
  v17 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.SortingStyle(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v12 = a1(&v16, v9);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (_QWORD *)swift_bridgeObjectRelease(v17);
      }
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v11);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (_QWORD *)v17;
  }
  return result;
}

_QWORD *sub_100476CA0(void (*a1)(_QWORD *__return_ptr, _QWORD, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  void (*v14)(_QWORD *__return_ptr, _QWORD, __n128);
  uint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v7 = swift_bridgeObjectRetain(a3);
  v8 = 0;
  v9 = _swiftEmptyArrayStorage;
  v14 = a1;
  do
  {
    BYTE1(v15) = *(_BYTE *)(a3 + v8 + 32);
    a1(&v15, (char *)&v15 + 1, v7);
    if (v3)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(a3);
      return v9;
    }
    v10 = v15;
    if (v15 != 12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_1004568C8(0, v9[2] + 1, 1, v9);
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
        v9 = sub_1004568C8((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      v9[2] = v12 + 1;
      *((_BYTE *)v9 + v12 + 32) = v10;
      a1 = v14;
    }
    ++v8;
  }
  while (v4 != v8);
  swift_bridgeObjectRelease(a3);
  return v9;
}

_QWORD *sub_100476DEC(void (*a1)(_OWORD *__return_ptr, char *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v14;
  __int128 v15;
  _OWORD v16[2];
  char v17;
  char v18;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v7 = swift_bridgeObjectRetain(a3);
  v8 = 0;
  v9 = _swiftEmptyArrayStorage;
  do
  {
    v18 = *(_BYTE *)(a3 + v8 + 32);
    a1(v16, &v18, v7);
    if (v3)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(a3);
      return v9;
    }
    if ((v17 & 1) == 0)
    {
      v14 = (__n128)v16[1];
      v15 = v16[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_100457018(0, v9[2] + 1, 1, v9);
      v12 = v9[2];
      v11 = v9[3];
      if (v12 >= v11 >> 1)
        v9 = sub_100457018((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      v9[2] = v12 + 1;
      v10 = &v9[4 * v12];
      v7 = v14;
      *((_OWORD *)v10 + 2) = v15;
      *((__n128 *)v10 + 3) = v14;
    }
    ++v8;
  }
  while (v4 != v8);
  swift_bridgeObjectRelease(a3);
  return v9;
}

uint64_t sub_100476F40(uint64_t a1, uint64_t a2)
{
  return sub_100476F78(a1, a2, &qword_1006463D0, &qword_1006463D8, (void (*)(uint64_t *, uint64_t))sub_100480BE8);
}

uint64_t sub_100476F5C(uint64_t a1, uint64_t a2)
{
  return sub_100476F78(a1, a2, (uint64_t *)&unk_100640E20, &qword_100646308, (void (*)(uint64_t *, uint64_t))sub_100481988);
}

uint64_t sub_100476F78(uint64_t result, uint64_t a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t *, uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];

  v6 = result;
  v33 = a2;
  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = __CocoaSet.makeIterator()(result);
    v10 = sub_10002A750(a3);
    v11 = sub_100023FEC(a4, a3, (uint64_t)&unk_1005276C0);
    result = (uint64_t)Set.Iterator.init(_cocoa:)(v34, v9, v10, v11);
    v6 = v34[0];
    v30 = v34[1];
    v12 = v34[2];
    v13 = v34[3];
    v14 = v34[4];
  }
  else
  {
    v13 = 0;
    v15 = -1 << *(_BYTE *)(result + 32);
    v30 = result + 56;
    v12 = ~v15;
    v16 = -v15;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v14 = v17 & *(_QWORD *)(result + 56);
  }
  v18 = (unint64_t)(v12 + 64) >> 6;
  if (v6 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v14)
    {
      v19 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v13 << 6);
      v21 = v13;
      goto LABEL_31;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v26 >= v18)
      goto LABEL_34;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    v21 = v13 + 1;
    if (!v27)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v18)
        goto LABEL_34;
      v27 = *(_QWORD *)(v30 + 8 * v21);
      if (!v27)
      {
        v21 = v13 + 3;
        if (v13 + 3 >= v18)
          goto LABEL_34;
        v27 = *(_QWORD *)(v30 + 8 * v21);
        if (!v27)
        {
          v21 = v13 + 4;
          if (v13 + 4 >= v18)
            goto LABEL_34;
          v27 = *(_QWORD *)(v30 + 8 * v21);
          if (!v27)
          {
            v21 = v13 + 5;
            if (v13 + 5 >= v18)
              goto LABEL_34;
            v27 = *(_QWORD *)(v30 + 8 * v21);
            if (!v27)
            {
              v28 = v13 + 6;
              while (v18 != v28)
              {
                v27 = *(_QWORD *)(v30 + 8 * v28++);
                if (v27)
                {
                  v21 = v28 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10003E410(v6);
              return v33;
            }
          }
        }
      }
    }
LABEL_30:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_31:
    v25 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v20);
    swift_retain(v25);
    if (!v25)
      goto LABEL_34;
    while (1)
    {
      a5(&v32, v25);
      result = swift_release(v32);
      v13 = v21;
      v14 = v19;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v22 = __CocoaSet.Iterator.next()(result);
      if (v22)
      {
        v23 = v22;
        v31 = v22;
        swift_unknownObjectRetain(v22);
        v24 = sub_10002A750(a3);
        swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
        v25 = v32;
        swift_unknownObjectRelease(v23);
        v21 = v13;
        v19 = v14;
        if (v25)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100477214(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_100481C18(v17, v12, v13);
    result = swift_bridgeObjectRelease(v17[1]);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100477390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD v25[2];

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 64);
  v25[0] = a1 + 64;
  v25[1] = a2;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_5;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25[0] + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_23;
      v23 = *(_QWORD *)(v25[0] + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_23;
        v23 = *(_QWORD *)(v25[0] + 8 * v14);
        if (!v23)
        {
          v14 = v22 + 3;
          if (v22 + 3 >= v19)
            goto LABEL_23;
          v23 = *(_QWORD *)(v25[0] + 8 * v14);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_5:
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * v21, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1004809E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), &qword_10065F858, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_23:
    swift_release();
    return;
  }
  v23 = *(_QWORD *)(v25[0] + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25[0] + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1004775D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v26 - v10;
  result = __chkstk_darwin(v9);
  v14 = (char *)&v26 - v13;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v27 = a2;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v15);
        if (!v24)
        {
          v15 = v23 + 3;
          if (v23 + 3 >= v20)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v15);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * v22, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1004815A4((uint64_t)v11, (uint64_t)v8);
    result = sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1004777FC(uint64_t a1)
{
  return sub_100477AF0(a1, &qword_1006463D0, &qword_1006463D8, (void (*)(uint64_t *, uint64_t))sub_100480BE8);
}

void sub_100477818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[5];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = __CocoaSet.makeIterator()(a1);
    v3 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v4 = sub_100017608((unint64_t *)&qword_10063F030, qword_100646430, REMObjectID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v25, v2, v3, v4);
    v1 = v25[0];
    v22 = v25[1];
    v5 = v25[2];
    v6 = v25[3];
    v7 = v25[4];
  }
  else
  {
    v6 = 0;
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v6 << 6);
      v14 = v6;
      goto LABEL_31;
    }
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v19 >= v11)
      goto LABEL_34;
    v20 = *(_QWORD *)(v22 + 8 * v19);
    v14 = v6 + 1;
    if (!v20)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v22 + 8 * v14);
      if (!v20)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_34;
        v20 = *(_QWORD *)(v22 + 8 * v14);
        if (!v20)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_34;
          v20 = *(_QWORD *)(v22 + 8 * v14);
          if (!v20)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v22 + 8 * v14);
            if (!v20)
            {
              v21 = v6 + 6;
              while (v11 != v21)
              {
                v20 = *(_QWORD *)(v22 + 8 * v21++);
                if (v20)
                {
                  v14 = v21 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10003E410(v1);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v12 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_31:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v13);
    if (!v18)
      goto LABEL_34;
    while (1)
    {
      sub_1000176A0((Swift::Int *)&v24, v18);

      v6 = v14;
      v7 = v12;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v15 = __CocoaSet.Iterator.next()(a1);
      if (v15)
      {
        v16 = v15;
        v23 = v15;
        v17 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        swift_unknownObjectRetain(v16);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
        v18 = v24;
        swift_unknownObjectRelease(v16);
        v14 = v6;
        v12 = v7;
        if (v18)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

uint64_t sub_100477AD4(uint64_t a1)
{
  return sub_100477AF0(a1, (uint64_t *)&unk_100640E20, &qword_100646308, (void (*)(uint64_t *, uint64_t))sub_100481988);
}

uint64_t sub_100477AF0(uint64_t result, uint64_t *a2, unint64_t *a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = __CocoaSet.makeIterator()(result);
    v9 = sub_10002A750(a2);
    v10 = sub_100023FEC(a3, a2, (uint64_t)&unk_1005276C0);
    result = (uint64_t)Set.Iterator.init(_cocoa:)(v32, v8, v9, v10);
    v5 = v32[0];
    v29 = v32[1];
    v11 = v32[2];
    v12 = v32[3];
    v13 = v32[4];
  }
  else
  {
    v12 = 0;
    v14 = -1 << *(_BYTE *)(result + 32);
    v29 = result + 56;
    v11 = ~v14;
    v15 = -v14;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v13 = v16 & *(_QWORD *)(result + 56);
  }
  v17 = (unint64_t)(v11 + 64) >> 6;
  if (v5 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v13)
    {
      v18 = (v13 - 1) & v13;
      v19 = __clz(__rbit64(v13)) | (v12 << 6);
      v20 = v12;
      goto LABEL_31;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v25 >= v17)
      return sub_10003E410(v5);
    v26 = *(_QWORD *)(v29 + 8 * v25);
    v20 = v12 + 1;
    if (!v26)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v17)
        return sub_10003E410(v5);
      v26 = *(_QWORD *)(v29 + 8 * v20);
      if (!v26)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v17)
          return sub_10003E410(v5);
        v26 = *(_QWORD *)(v29 + 8 * v20);
        if (!v26)
        {
          v20 = v12 + 4;
          if (v12 + 4 >= v17)
            return sub_10003E410(v5);
          v26 = *(_QWORD *)(v29 + 8 * v20);
          if (!v26)
          {
            v20 = v12 + 5;
            if (v12 + 5 >= v17)
              return sub_10003E410(v5);
            v26 = *(_QWORD *)(v29 + 8 * v20);
            if (!v26)
            {
              v27 = v12 + 6;
              while (v17 != v27)
              {
                v26 = *(_QWORD *)(v29 + 8 * v27++);
                if (v26)
                {
                  v20 = v27 - 1;
                  goto LABEL_30;
                }
              }
              return sub_10003E410(v5);
            }
          }
        }
      }
    }
LABEL_30:
    v18 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_31:
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
    swift_retain(v24);
    if (!v24)
      return sub_10003E410(v5);
    while (1)
    {
      a4(&v31, v24);
      result = swift_release(v31);
      v12 = v20;
      v13 = v18;
      if ((v5 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v21 = __CocoaSet.Iterator.next()(result);
      if (v21)
      {
        v22 = v21;
        v30 = v21;
        swift_unknownObjectRetain(v21);
        v23 = sub_10002A750(a2);
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
        v24 = v31;
        swift_unknownObjectRelease(v22);
        v20 = v12;
        v18 = v13;
        if (v24)
          continue;
      }
      return sub_10003E410(v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100477D88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v24 - v8;
  result = __chkstk_darwin(v7);
  v12 = (char *)&v24 - v11;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      return swift_release(a1);
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        return swift_release(a1);
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          return swift_release(a1);
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            return swift_release(a1);
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v20, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10001F580((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_100481120((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), &qword_10065F868, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
    result = sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
    return swift_release(a1);
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      return swift_release(a1);
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100477FC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  v12 = 0;
  v13 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v12 << 6);
      goto LABEL_5;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v17)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v17)
        goto LABEL_23;
      v21 = *(_QWORD *)(v24 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v17)
          goto LABEL_23;
        v21 = *(_QWORD *)(v24 + 8 * v12);
        if (!v21)
        {
          v12 = v20 + 3;
          if (v20 + 3 >= v17)
            goto LABEL_23;
          v21 = *(_QWORD *)(v24 + 8 * v12);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1004809E8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), &qword_10065F858, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v22 = v20 + 4;
  if (v22 >= v17)
  {
LABEL_23:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v17)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void *sub_1004781F8(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v11;
  void *v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_1002AA364((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v7);
        v9 = v6;
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v11 = v4;
  v5 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  swift_unknownObjectRetain(v4);
  swift_dynamicCast(&v12, &v11, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v12;
  swift_unknownObjectRelease(v4);
  return v6;
}

double sub_1004782CC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1005205B0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_1004782EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  _BYTE v12[24];

  v1 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v8, v12, 0, 0);
  sub_10000735C(v8, (uint64_t)v3, &qword_100649CA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, &qword_100649CA0);
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    v9 = v7[*(int *)(v4 + 64)];
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v9)
      return 1;
  }
  return 2;
}

uint64_t sub_10047842C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRAutoCompleteReminderListScope(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_100478468(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1004786E8(a1, a2, a3, a4, &qword_1006463D0);
}

void sub_100478474(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15, v4);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18, v4);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

uint64_t sub_1004786DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1004786E8(a1, a2, a3, a4, (uint64_t *)&unk_100640E20);
}

uint64_t sub_1004786E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD v22[9];
  uint64_t v23;

  v7 = a2;
  v8 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if (a4 < 0)
        v9 = a4;
      else
        v9 = a4 & 0xFFFFFFFFFFFFFF8;
      v10 = __CocoaSet.element(at:)(a1, a2, v9);
      v23 = v10;
      swift_unknownObjectRetain(v10);
      v11 = sub_10002A750(a5);
      swift_dynamicCast(v22, &v23, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      v12 = v22[0];
      swift_unknownObjectRelease(v10);
      return v12;
    }
    goto LABEL_26;
  }
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
    {
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
    {
LABEL_17:
      v12 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v8);
      swift_retain(v12);
      return v12;
    }
    __break(1u);
  }
  if (__CocoaSet.Index.age.getter(a1, a2) != *(_DWORD *)(a4 + 36))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v13 = __CocoaSet.Index.element.getter(v8, v7);
  v23 = v13;
  swift_unknownObjectRetain(v13);
  v14 = sub_10002A750(a5);
  swift_dynamicCast(v22, &v23, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
  v7 = v22[0];
  swift_unknownObjectRelease(v13);
  Hasher.init(_seed:)(v22, *(_QWORD *)(a4 + 40));
  v15 = *(_QWORD *)(v7 + 16);
  Hasher._combine(_:)(v15);
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(a4 + 32);
  v8 = v16 & ~v17;
  v18 = a4 + 56;
  if (((*(_QWORD *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_27:
    swift_release(v7);
    __break(1u);
    goto LABEL_28;
  }
  v19 = *(_QWORD *)(a4 + 48);
  if (*(_QWORD *)(*(_QWORD *)(v19 + 8 * v8) + 16) == v15)
    goto LABEL_16;
  v21 = ~v17;
  v8 = (v8 + 1) & v21;
  if (((*(_QWORD *)(v18 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    while (*(_QWORD *)(*(_QWORD *)(v19 + 8 * v8) + 16) != v15)
    {
      v8 = (v8 + 1) & v21;
      if (((*(_QWORD *)(v18 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        swift_release(v7);
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_16:
    swift_release(v7);
    goto LABEL_17;
  }
LABEL_28:
  result = swift_release(v7);
  __break(1u);
  return result;
}

uint64_t sub_10047892C@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if ((a3 & 1) != 0)
    goto LABEL_10;
  v5 = result;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      v7 = *(_QWORD *)(a4 + 48);
      v8 = type metadata accessor for IndexPath(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v5, v8);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_1004789C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1004789F0(a1, a2, a3, a4, (unint64_t *)&qword_10065B488, UIPress_ptr);
}

void sub_1004789DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1004789F0(a1, a2, a3, a4, &qword_100660C90, UIOpenURLContext_ptr);
}

void sub_1004789F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_100005ED8(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_100005ED8(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

void sub_100478C50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1004789F0(a1, a2, a3, a4, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
}

uint64_t sub_100478C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  _QWORD v7[8];

  v7[7] = a1;
  v7[2] = a2;
  v7[3] = a3;
  v3 = sub_10002A750(&qword_100649DF0);
  v4 = sub_10002A750(&qword_100647B38);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  return Sequence.completeCompactMap<A>(_:)(sub_100491588, v7, v3, v4, WitnessTable);
}

void *sub_100478CEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      v6 = (uint64_t *)TTRAccesibility.RemindersList.AutoCategorization.MultipleItemSingleSectionCategorizationFormat.unsafeMutableAddressor(a2);
      v7 = *v6;
      v8 = v6[1];
      v9 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v10 = swift_allocObject(v9, 112, 7);
      *(_OWORD *)(v10 + 16) = xmmword_1005201E0;
      *(_QWORD *)(v10 + 56) = &type metadata for Int;
      *(_QWORD *)(v10 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v10 + 32) = a1;
      swift_bridgeObjectRetain(v8);
      v11 = TTRSection.displayName.getter(a2, a3 & 0x3F);
      v13 = v12;
      *(_QWORD *)(v10 + 96) = &type metadata for String;
      *(_QWORD *)(v10 + 104) = sub_1000770A4();
      *(_QWORD *)(v10 + 72) = v11;
      *(_QWORD *)(v10 + 80) = v13;
      v14 = (void *)static String.localizedStringWithFormat(_:_:)(v7, v8, v10);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v10);
      sub_1000D54E4(a1, a2, a3);
    }
    else
    {
      v28 = (uint64_t *)TTRAccesibility.RemindersList.AutoCategorization.MultipleItemsMultipleSectionsCategorizationFormat.unsafeMutableAddressor();
      v29 = *v28;
      v30 = v28[1];
      v31 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v32 = swift_allocObject(v31, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100520250;
      *(_QWORD *)(v32 + 56) = &type metadata for Int;
      *(_QWORD *)(v32 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v32 + 32) = a1;
      swift_bridgeObjectRetain(v30);
      v14 = (void *)static String.localizedStringWithFormat(_:_:)(v29, v30, v32);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v32);
    }
  }
  else
  {
    v15 = a2;
    v16 = a1;
    v17 = objc_msgSend(v16, "titleAsString");
    v14 = v17;
    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v34 = v19;

      v20 = (uint64_t *)TTRAccesibility.RemindersList.AutoCategorization.SingleItemCategorizationFormat.unsafeMutableAddressor();
      v21 = *v20;
      v22 = v20[1];
      v23 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v24 = swift_allocObject(v23, 112, 7);
      *(_OWORD *)(v24 + 16) = xmmword_1005201E0;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      v25 = sub_1000770A4();
      *(_QWORD *)(v24 + 64) = v25;
      *(_QWORD *)(v24 + 32) = v18;
      *(_QWORD *)(v24 + 40) = v34;
      swift_bridgeObjectRetain(v22);
      v26 = TTRSection.displayName.getter(a2, a3);
      *(_QWORD *)(v24 + 96) = &type metadata for String;
      *(_QWORD *)(v24 + 104) = v25;
      *(_QWORD *)(v24 + 72) = v26;
      *(_QWORD *)(v24 + 80) = v27;
      v14 = (void *)static String.localizedStringWithFormat(_:_:)(v21, v22, v24);

      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v24);
    }
    else
    {

    }
  }
  return v14;
}

uint64_t sub_100478F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100660618);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100660618);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10047900C(uint64_t a1)
{
  sub_10048C550(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_100479030(uint64_t a1)
{
  sub_10048C970(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_10047904C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_10047908C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_100479118 + 4 * byte_10053793C[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100479118()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return 0;
}

uint64_t sub_100479144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _BYTE v21[24];
  char v22[24];

  v2 = sub_10002A750(&qword_100649CA0);
  v3 = __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v21[-v6];
  v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v13 = result;
    v14 = result + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess(result + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v21, 0, 0);
    sub_10000735C(v14, (uint64_t)v7, &qword_100649CA0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1000073A0((uint64_t)v7, &qword_100649CA0);
    }
    else
    {
      sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_10002B1E8((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      sub_10046ADD4((uint64_t)v5);
      sub_1000073A0((uint64_t)v5, &qword_100649CA0);
      v15 = v13 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v13 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v15 + 8);
        ObjectType = swift_getObjectType(Strong, v17);
        LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(ObjectType, v19);
        swift_unknownObjectRelease(v18);
        if ((v19 & 1) != 0)
          sub_10047AFE4(1);
      }
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    return swift_release(v13);
  }
  return result;
}

void sub_100479358(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[5];

  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(v9, a1);
  swift_release();
  v4 = v9[0];
  swift_release();
  if (v4 >= 2)
  {
    v5 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
    v9[3] = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v9[4] = &protocol witness table for REMReminderChangeItem;
    v9[0] = v5;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
    v7 = v6;
    v8 = v5;
    sub_100390124(v4);
    TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)((_QWORD *)a2, v9, v6);
  }
  else
  {
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
}

uint64_t sub_100479460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  unint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64x2_t v99;
  int16x8_t v100;
  uint64_t v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE v112[48];
  char v113[24];
  _QWORD *v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;

  v109 = a2;
  v110 = a5;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v9 = __chkstk_darwin(v8);
  v107 = (uint64_t)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for TTRRemindersListViewModel.Reminder.Override(0, v9);
  v11 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v103 = (uint64_t *)((char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v104 = (uint64_t *)((char *)&v102 - v14);
  __chkstk_darwin(v15);
  v106 = (uint64_t *)((char *)&v102 - v16);
  __chkstk_darwin(v17);
  v105 = (uint64_t *)((char *)&v102 - v18);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v102 - v20);
  __chkstk_darwin(v22);
  v24 = (char *)&v102 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v102 - v26;
  v28 = sub_10002A750(&qword_10064A7B8);
  __chkstk_darwin(v28);
  v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = a1;
  sub_100010634(a1, (uint64_t)v115);
  v114 = _swiftEmptyArrayStorage;
  if (((*(uint64_t (**)(_QWORD *))(*(_QWORD *)a3 + 248))(v115) & 1) != 0)
  {
    static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)(v115, 1);
    sub_10000735C((uint64_t)v30, (uint64_t)v27, &qword_10064A7B8);
    swift_storeEnumTagMultiPayload(v27, v111, 1);
    v31 = sub_100455938(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    if (v33 >= v32 >> 1)
      v31 = sub_100455938(v32 > 1, v33 + 1, 1, v31);
    *(_QWORD *)(v31 + 16) = v33 + 1;
    sub_10001F580((uint64_t)v27, v31+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
    v114 = (_QWORD *)v31;
    sub_1000073A0((uint64_t)v30, &qword_10064A7B8);
  }
  v34 = a4;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 256))(a4) & 1) == 0)
  {
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v24[16] = 0;
    swift_storeEnumTagMultiPayload(v24, v111, 2);
    v35 = (unint64_t)v114;
    if ((swift_isUniquelyReferenced_nonNull_native(v114) & 1) == 0)
      v35 = sub_100455938(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
    v37 = *(_QWORD *)(v35 + 16);
    v36 = *(_QWORD *)(v35 + 24);
    if (v37 >= v36 >> 1)
      v35 = sub_100455938(v36 > 1, v37 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v37 + 1;
    sub_10001F580((uint64_t)v24, v35+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
    v114 = (_QWORD *)v35;
  }
  v38 = v116;
  v39 = v117;
  sub_10001413C(v115, v116);
  v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
  v41 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides, v113, 0, 0);
  v42 = *v41;
  if (*(_QWORD *)(v42 + 16))
  {
    swift_bridgeObjectRetain(v42);
    v43 = sub_1002AA364((uint64_t)v40);
    if ((v44 & 1) != 0)
    {
      v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
      swift_bridgeObjectRetain(v45);

      swift_bridgeObjectRelease(v42);
      v46 = sub_1004504D4(v45);
    }
    else
    {

      v47 = swift_bridgeObjectRelease(v42);
    }
  }
  else
  {

  }
  v48 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)a3 + 272))(v46, v47);
  if (v48)
  {
    v49 = (void *)v48;
    *v21 = v48;
    swift_storeEnumTagMultiPayload(v21, v111, 4);
    v50 = (unint64_t)v114;
    v51 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
      v50 = sub_100455938(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
    v53 = *(_QWORD *)(v50 + 16);
    v52 = *(_QWORD *)(v50 + 24);
    if (v53 >= v52 >> 1)
      v50 = sub_100455938(v52 > 1, v53 + 1, 1, v50);
    *(_QWORD *)(v50 + 16) = v53 + 1;
    sub_10001F580((uint64_t)v21, v50+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    v114 = (_QWORD *)v50;
  }
  v54 = (*(uint64_t (**)(void))(*(_QWORD *)a3 + 280))();
  if (v54)
  {
    v55 = (void *)v54;
    v56 = (uint64_t)v105;
    *v105 = v54;
    swift_storeEnumTagMultiPayload(v56, v111, 5);
    v57 = (unint64_t)v114;
    v58 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
      v57 = sub_100455938(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
    v60 = *(_QWORD *)(v57 + 16);
    v59 = *(_QWORD *)(v57 + 24);
    if (v60 >= v59 >> 1)
      v57 = sub_100455938(v59 > 1, v60 + 1, 1, v57);
    *(_QWORD *)(v57 + 16) = v60 + 1;
    sub_10001F580(v56, v57+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    v114 = (_QWORD *)v57;
  }
  v61 = (*(uint64_t (**)(void))(*(_QWORD *)a3 + 296))();
  v62 = (uint64_t)v106;
  if (v61)
  {
    v63 = (void *)v61;
    *v106 = v61;
    swift_storeEnumTagMultiPayload(v62, v111, 6);
    v64 = (unint64_t)v114;
    v65 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
      v64 = sub_100455938(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
    v67 = *(_QWORD *)(v64 + 16);
    v66 = *(_QWORD *)(v64 + 24);
    if (v67 >= v66 >> 1)
      v64 = sub_100455938(v66 > 1, v67 + 1, 1, v64);
    *(_QWORD *)(v64 + 16) = v67 + 1;
    sub_10001F580(v62, v64+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    v114 = (_QWORD *)v64;
  }
  if (((*(uint64_t (**)(void))(*(_QWORD *)a3 + 504))() & 1) != 0)
  {
    v68 = static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)(v115, 0, 0);
    if (v69)
    {
      v70 = v68;
      v71 = v69;
      v72 = static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)(v115, 0, 1);
      if (v73)
      {
        v74 = v72;
        v75 = v73;
        v76 = static TTRLocalizableStrings.CompletedList.completed(dateString:)(v70, v71);
        v78 = v77;
        swift_bridgeObjectRelease(v71);
        v79 = v104;
        *v104 = v76;
        v79[1] = v78;
        swift_storeEnumTagMultiPayload(v79, v111, 7);
        v80 = (unint64_t)v114;
        if ((swift_isUniquelyReferenced_nonNull_native(v114) & 1) == 0)
          v80 = sub_100455938(0, *(_QWORD *)(v80 + 16) + 1, 1, v80);
        v82 = *(_QWORD *)(v80 + 16);
        v81 = *(_QWORD *)(v80 + 24);
        if (v82 >= v81 >> 1)
          v80 = sub_100455938(v81 > 1, v82 + 1, 1, v80);
        *(_QWORD *)(v80 + 16) = v82 + 1;
        v83 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        v84 = *(_QWORD *)(v11 + 72);
        sub_10001F580((uint64_t)v104, v80 + v83 + v84 * v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        v85 = static TTRLocalizableStrings.CompletedList.completed(dateString:)(v74, v75);
        v87 = v86;
        swift_bridgeObjectRelease(v75);
        v88 = (uint64_t)v103;
        *v103 = v85;
        *(_QWORD *)(v88 + 8) = v87;
        swift_storeEnumTagMultiPayload(v88, v111, 8);
        v90 = *(_QWORD *)(v80 + 16);
        v89 = *(_QWORD *)(v80 + 24);
        if (v90 >= v89 >> 1)
          v80 = sub_100455938(v89 > 1, v90 + 1, 1, v80);
        *(_QWORD *)(v80 + 16) = v90 + 1;
        sub_10001F580(v88, v80 + v83 + v90 * v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        v114 = (_QWORD *)v80;
      }
      else
      {
        swift_bridgeObjectRelease(v71);
      }
    }
  }
  v91 = v107;
  sub_10002B1E8(v34, v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v92 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v91, 0, 1, v92);
  sub_100491658(v108, (uint64_t)v112);
  v93 = v114;
  v94 = v109;
  sub_100491694(v109);
  v95 = v110;
  v96 = TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)(v91, v112, v94, v93);
  v97 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 264))(v96);
  v98 = v95 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 24);
  *(_BYTE *)v98 = v97;
  v99 = (uint64x2_t)vdupq_n_s64(v97);
  v100 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v99, (uint64x2_t)xmmword_100537E80), (int32x4_t)vshlq_u64(v99, (uint64x2_t)xmmword_100537E70));
  *(int8x8_t *)v100.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v100), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v98 + 1) = vmovn_s16(v100).u32[0];
  return sub_100027F10(v115);
}

uint64_t sub_100479D60(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, int a5)
{
  uint64_t v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  int v33;

  v33 = a5;
  v10 = a4;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - v15;
  v17 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v31 - v21;
  if (v10 == 2 || (v23 = *(_QWORD *)(a1 + 16)) == 0)
  {
    v28 = sub_10002A750((uint64_t *)&unk_100649CF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 1, v28);
  }
  else
  {
    v32 = a4 & 1;
    v24 = v23 - 1;
    v25 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
    sub_10002B1E8(a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v24+ *(int *)(v25 + 20), (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = sub_10002A750((uint64_t *)&unk_100649CF0);
    v27 = *(int *)(v26 + 48);
    sub_10001F580((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22[v27] = v32;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 0, 1, v26);
  }
  v29 = sub_10000735C((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v29);
  *(&v31 - 4) = a1;
  *(&v31 - 3) = v5;
  *(&v31 - 2) = a2;
  *(&v31 - 1) = a3;
  sub_10047AAE0((uint64_t)v19, v33 & 1, (uint64_t (*)(_QWORD *, __n128))sub_100492BD0, (uint64_t)(&v31 - 6), (uint64_t (*)(uint64_t))static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0);
  sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_100649CE0);
  return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100649CE0);
}

id sub_100479FB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, _UNKNOWN **, uint64_t);
  char v7;
  id result;

  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(_QWORD *)a1 + 920);
  swift_retain(v5);
  v7 = v6(a2, v5, &off_100604220, 1);
  swift_release(v5);
  if ((v7 & 1) != 0)
    result = objc_msgSend((id)objc_opt_self(REMReminder), "newObjectID");
  else
    result = 0;
  *a3 = result;
  return result;
}

uint64_t sub_10047A05C(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t result;
  _QWORD *v10;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_10002A750(&qword_100642AC0);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v5[2] = a2;
      v10 = v5;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v5 + 6;
          do
          {
            *v7++ = a1;
            v8 = a1;
            --v6;
          }
          while (v6);
        }
        v5 = a1;
      }
    }
    else
    {
      v10 = _swiftEmptyArrayStorage;

    }
    specialized Array._endMutation()(v5);
    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_10047A14C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a1;
  v30 = a5;
  v27 = a6;
  v28 = a4;
  v8 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - v15;
  v17 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a2, "objectID", v18);
  sub_100475D50(v21, a3, (uint64_t)v20);

  sub_10002B1E8((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload(v16, v11, 3);
  sub_10002B1E8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v22 = type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = sub_1002FE870((uint64_t)v13, (uint64_t)a2);
  v24 = *(int *)(sub_10002A750(&qword_1006588F8) + 48);
  result = sub_10000735C(v28, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
  if (__OFADD__(v30, v29))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v10[v24] = v30 + v29;
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    sub_10002B1E8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = a2;
    sub_10037CD24((uint64_t)v10, (uint64_t)v13, v23, v27);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  }
  return result;
}

uint64_t sub_10047A384(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  sub_10002B1E8(a3, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v6 = a4[3];
  v7 = a4[4];
  sub_10001413C(a4, v6);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  v9 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, result);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v10 = *(id *)(result + 8 * a2 + 32);
LABEL_5:
    v11 = v10;
    v12 = objc_msgSend(v10, "remObjectID", swift_bridgeObjectRelease(v9).n128_f64[0]);

    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10047A45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27[2];
  uint64_t v28;
  uint64_t v29;

  v27[0] = a2;
  v27[1] = a3;
  v29 = a4;
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v28);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v27 - v8;
  v10 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v27 - v17;
  v19 = *(void **)a1;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(int *)(sub_10002A750(&qword_1006588F8) + 48);
  sub_10000735C(v27[0], (uint64_t)v18, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&v18[v21] = v20;
  swift_storeEnumTagMultiPayload(v18, v13, 1);
  v22 = v19;
  v23 = objc_msgSend(v22, "objectID");
  sub_100475D50(v23, (uint64_t)v18, (uint64_t)v12);

  sub_10002B1E8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload(v9, v28, 3);
  sub_10002B1E8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v24 = type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = sub_1002FE870((uint64_t)v6, (uint64_t)v22);
  sub_10000735C((uint64_t)v18, (uint64_t)v15, &qword_10064B6B0);
  sub_10002B1E8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10037CD24((uint64_t)v15, (uint64_t)v6, v25, v29);
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  return sub_1000073A0((uint64_t)v18, &qword_10064B6B0);
}

uint64_t sub_10047A6C8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  TTRMutableTreeStorage.editAuxiliaryData(for:using:)(a2, sub_100380564, 0);
  swift_release();
  return 1;
}

double sub_10047A710(uint64_t a1, int a2, uint64_t (*a3)(_QWORD *, __n128), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, __n128);
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  double result;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  void *v40;
  void *v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;

  v47 = a2;
  v8 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v44 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v17 = *(_QWORD *)(a5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v18 = *(uint64_t (**)(uint64_t, __n128))(v17 + 104);
  v19 = *(_QWORD *)(v17 + 112);
  swift_retain_n(v17, 2);
  v20 = sub_10037D980(v18, v19);
  swift_release();
  *(_QWORD *)(a5 + v16) = v20;
  swift_retain();
  v21 = swift_release();
  if ((a3(v20, v21) & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(a5 + v16) = v17;
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  sub_10000735C(a1, (uint64_t)v15, (uint64_t *)&unk_100649CE0);
  swift_retain();
  swift_retain();
  v43 = v15;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v42 = &_swiftEmptySetSingleton;
    goto LABEL_4;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v42 = v40;
  }
  else
  {
    v42 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_4;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v22 = v41;
    goto LABEL_5;
  }
LABEL_4:
  v22 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_8;
LABEL_5:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_8:
    v24 = &_swiftEmptySetSingleton;
    v27 = &_swiftEmptySetSingleton;
    v25 = v44;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v24 = v23;
  v25 = v44;
LABEL_9:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v27 = v28;
  }
  else
  {
    v27 = &_swiftEmptySetSingleton;
  }
LABEL_12:
  v29 = sub_10002A750(&qword_100642EA8);
  v30 = *(int *)(v29 + 48);
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v42, v22, v24, v27, &_swiftEmptySetSingleton);
  *(_QWORD *)v12 = v17;
  v31 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v12[*(int *)(v31 + 20)], v25, v46);
  v12[*(int *)(v31 + 24)] = 0;
  v12[v30] = v47 & 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
  v32 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = sub_100372FD8((uint64_t)v20, (uint64_t)v43, (uint64_t)v12);
  swift_release();
  v34 = a5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v37 = Strong;
    v38 = *(_QWORD *)(v34 + 8);
    ObjectType = swift_getObjectType(Strong, v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 72))(v33, ObjectType, v38);
    swift_unknownObjectRelease(v37);
  }
  sub_100475C14(0);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10047AAE0(uint64_t a1, int a2, uint64_t (*a3)(_QWORD *, __n128), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t updated;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, __n128);
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  char *v24;
  void *v25;
  void *v26;
  void *v27;
  double result;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  void *v42;
  void *v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);

  v7 = v6;
  v50 = a6;
  v51 = a5;
  v49 = a2;
  v10 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  __chkstk_darwin(v10);
  v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v19 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v20 = *(uint64_t (**)(uint64_t, __n128))(v19 + 104);
  v21 = *(_QWORD *)(v19 + 112);
  swift_retain_n(v19, 2);
  v22 = sub_10037D980(v20, v21);
  swift_release();
  *(_QWORD *)(v7 + v18) = v22;
  swift_retain();
  v23 = swift_release();
  if ((a3(v22, v23) & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(v7 + v18) = v19;
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  sub_10000735C(a1, (uint64_t)v17, (uint64_t *)&unk_100649CE0);
  swift_retain();
  swift_retain();
  v45 = v17;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v44 = &_swiftEmptySetSingleton;
    v24 = v46;
    goto LABEL_4;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v44 = v42;
    v24 = v46;
  }
  else
  {
    v44 = &_swiftEmptySetSingleton;
    v24 = v46;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_4;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_4:
    v25 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_8;
    goto LABEL_5;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v25 = v43;
LABEL_5:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v27 = v26;
    goto LABEL_9;
  }
LABEL_8:
  v27 = &_swiftEmptySetSingleton;
  v29 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
LABEL_9:
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
      v29 = v30;
    }
    else
    {
      v29 = &_swiftEmptySetSingleton;
    }
  }
  v31 = sub_10002A750(&qword_100642EA8);
  v32 = *(int *)(v31 + 48);
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v44, v25, v27, v29, &_swiftEmptySetSingleton);
  *(_QWORD *)v14 = v19;
  v33 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v14[*(int *)(v33 + 20)], v24, v48);
  v14[*(int *)(v33 + 24)] = 0;
  v14[v32] = v49 & 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 0, 1, v31);
  v34 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = sub_100372FD8((uint64_t)v22, (uint64_t)v45, (uint64_t)v14);
  swift_release();
  v36 = v7 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v39 = Strong;
    v40 = *(_QWORD *)(v36 + 8);
    ObjectType = swift_getObjectType(Strong, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 72))(v35, ObjectType, v40);
    Strong = swift_unknownObjectRelease(v39);
  }
  if ((v51(Strong) & 1) != 0)
    sub_100475C14(0);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

BOOL sub_10047AEC4(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v2 = *a1;
  v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_beginAccess(v3 + 96, v11, 32, 0);
  v4 = *(_QWORD *)(v3 + 96);
  if (*(_QWORD *)(v4 + 16))
  {
    swift_retain();
    v5 = v2;
    v6 = sub_1002AA364((uint64_t)v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_endAccess(v11);
      swift_bridgeObjectRetain(v8);

      v9 = *(_QWORD *)(v8 + 16);
      swift_release();
      swift_bridgeObjectRelease(v8);
      return v9 == 0;
    }
    swift_endAccess(v11);
    swift_release();

  }
  else
  {
    swift_endAccess(v11);
  }
  return 1;
}

uint64_t sub_10047AF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  result = TTRRemindersListViewModel.Item.reminderObjectID.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10047AFE4(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t Strong;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = v1;
  LODWORD(v59) = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  v9 = __chkstk_darwin(updated);
  v60 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v53 - v11;
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v13 = type metadata accessor for Logger(0);
  sub_100012DC4(v13, (uint64_t)qword_100660618);
  v14 = swift_retain_n(v1, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v62 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = _typeName(_:qualified:)(*v2, 0);
    v21 = v20;
    v61 = sub_100027E40(v19, v20, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v17 + 4, v17 + 12);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: recreating presentationTree", v17, 0xCu);
    swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  v22 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v23 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_retain(v23);
  v24 = sub_10047C564();
  v26 = v25;
  v27 = sub_10037D73C((uint64_t)v24, v25);
  sub_1000381B8((uint64_t)v24, v26);
  swift_release(v23);
  sub_1004742D8(v27);
  if ((v59 & 1) == 0)
  {
    v31 = sub_10002A750(&qword_100642EA8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
    goto LABEL_18;
  }
  v59 = *(_QWORD *)((char *)v2 + v22);
  swift_retain(v59);
  v55 = v5;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v54 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v54 = v51;
  }
  else
  {
    v54 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_9;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_9:
    v28 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_13;
    goto LABEL_10;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v28 = v52;
LABEL_10:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v30 = v29;
    goto LABEL_14;
  }
LABEL_13:
  v30 = &_swiftEmptySetSingleton;
  v32 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
LABEL_14:
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
      v32 = v33;
    }
    else
    {
      v32 = &_swiftEmptySetSingleton;
    }
  }
  v34 = sub_10002A750(&qword_100642EA8);
  v35 = *(int *)(v34 + 48);
  v36 = v56;
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v54, v28, v30, v32, &_swiftEmptySetSingleton);
  *(_QWORD *)v12 = v59;
  v37 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v12[*(int *)(v37 + 20)], v36, v58);
  v12[*(int *)(v37 + 24)] = 0;
  v12[v35] = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 0, 1, v34);
  v5 = v55;
LABEL_18:
  v38 = sub_10002A750((uint64_t *)&unk_100649CF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v5, 1, 1, v38);
  v39 = v60;
  sub_10002B1E8((uint64_t)v12, v60, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  v40 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v41 = swift_retain(v27);
  v42 = sub_100372FD8(v41, (uint64_t)v5, v39);
  swift_release(v27);
  v43 = *(_QWORD *)((char *)v2 + v22);
  *(_QWORD *)((char *)v2 + v22) = v27;
  swift_retain(v27);
  swift_release(v43);
  v44 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v44);
  if (Strong)
  {
    v47 = Strong;
    v48 = *((_QWORD *)v44 + 1);
    ObjectType = swift_getObjectType(Strong, v46);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 72))(v42, ObjectType, v48);
    swift_release(v27);
    swift_release(v42);
    swift_unknownObjectRelease(v47);
    return sub_10001F544((uint64_t)v12, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  }
  else
  {
    sub_10001F544((uint64_t)v12, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    swift_release(v27);
    return swift_release(v42);
  }
}

uint64_t sub_10047B58C()
{
  uint64_t v0;

  sub_10046B320();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10047B5B0()
{
  return type metadata accessor for TTRRemindersListViewModelSource(0);
}

uint64_t type metadata accessor for TTRRemindersListViewModelSource(uint64_t a1)
{
  return sub_100007328(a1, qword_1006606A8, (uint64_t)&nominal type descriptor for TTRRemindersListViewModelSource);
}

void sub_10047B5CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[15];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2 = type metadata accessor for TTRListType.SortingCapability(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100537B50;
    v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[4] = &unk_100537B68;
    v6[5] = &unk_100537B80;
    v6[6] = &unk_100537B80;
    v6[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_100365954(319);
    if (v5 <= 0x3F)
    {
      v6[8] = *(_QWORD *)(v4 - 8) + 64;
      v6[9] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[10] = &unk_100537B68;
      v6[11] = &unk_100537B98;
      v6[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[14] = &unk_100537BB0;
      swift_updateClassMetadata2(a1, 256, 15, v6, a1 + 80);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListViewModelSource.NextDataModelUpdateOptions()
{
  return &type metadata for TTRRemindersListViewModelSource.NextDataModelUpdateOptions;
}

void destroy for TTRRemindersListReminderActionTarget(uint64_t a1)
{
  sub_1000893FC(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100089894(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100089894(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1000893FC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000893FC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListReminderActionTarget(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListReminderActionTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_10047B9A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_10047B9A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTarget()
{
  return &type metadata for TTRRemindersListReminderActionTarget;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1004929CC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1000D54AC);
}

void destroy for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1)
{
  sub_1000D54E4(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t *assignWithCopy for TTRRemindersListViewModelMembershipChangeSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100492A28(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1000D54AC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1000D54E4);
}

uint64_t *assignWithTake for TTRRemindersListViewModelMembershipChangeSummary(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100492A94(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1000D54E4);
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModelMembershipChangeSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 62;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_10047BAA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_10047BAAC(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_10047BABC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListViewModelMembershipChangeSummary()
{
  return &type metadata for TTRRemindersListViewModelMembershipChangeSummary;
}

double sub_10047BAE0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;

  (*(void (**)(_OWORD *__return_ptr))(*(_QWORD *)v1 + 336))(v5);
  v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

uint64_t sub_10047BB24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t sub_10047BB30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t sub_10047BB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
}

uint64_t sub_10047BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
}

uint64_t sub_10047BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
}

uint64_t sub_10047BBF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t sub_10047BBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(ObjectType, v3);
}

uint64_t sub_10047BC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(ObjectType, v3);
}

uint64_t sub_10047BC84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t sub_10047BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(ObjectType, v3);
}

uint64_t sub_10047BCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(ObjectType, v3);
}

uint64_t TTRListDetailCreationEditor.changeItem.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10047BD10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))() & 1;
}

uint64_t sub_10047BD34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t sub_10047BD40()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t sub_10047BD4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t sub_10047BD6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t sub_10047BD8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t sub_10047BD98()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree));
}

uint64_t sub_10047BDCC()
{
  uint64_t updated;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100649CF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_10002A750(&qword_100642EA8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain();
  v10 = sub_100372FD8(v9, (uint64_t)v5, (uint64_t)v2);
  swift_release();
  return v10;
}

void *sub_10047BF00(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  void *v6;
  _BYTE v8[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
  swift_beginAccess(v3, v8, 0, 0);
  v4 = *v3;
  v5 = a1;
  swift_bridgeObjectRetain(v4);
  v6 = sub_1004781F8(v5, v4);

  swift_bridgeObjectRelease(v4);
  return v6;
}

uint64_t sub_10047BF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[232];

  sub_10046D030(a1, (uint64_t)v4);
  return sub_10000F614((uint64_t)v4, a2, (uint64_t *)&unk_100649F30);
}

uint64_t sub_10047BFD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t sub_10047BFE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

double sub_10047BFF8@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  (*(void (**)(_OWORD *__return_ptr, _QWORD))(*(_QWORD *)v2 + 680))(v6, a1 & 1);
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 32) = v7;
  return result;
}

uint64_t sub_10047C044()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t sub_10047C050()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t sub_10047C060(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;

  v4 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10002A750((uint64_t *)&unk_100649CF0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v12 = a1;
  v10 = a1;
  sub_10047AAE0((uint64_t)v6, a2, (uint64_t (*)(_QWORD *, __n128))sub_10048055C, (uint64_t)v11, (uint64_t (*)(uint64_t))sub_100480564, (uint64_t)v9);
  return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100649CE0);
}

uint64_t sub_10047C138()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t sub_10047C154()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t sub_10047C168()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t sub_10047C18C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t sub_10047C198()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t sub_10047C1A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t sub_10047C1B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t sub_10047C1BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t sub_10047C1CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t sub_10047C1D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t sub_10047C1E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t sub_10047C1F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t sub_10047C1FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t sub_10047C208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(ObjectType, v3);
}

uint64_t sub_10047C254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002B1E8(v3, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
}

uint64_t sub_10047C2B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t sub_10047C2BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD v7[8];

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a1);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 160))(v7, ObjectType, v4);
  return sub_10000F614((uint64_t)v7, a2, &qword_10064A808);
}

uint64_t sub_10047C324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD v9[8];

  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 168))(v9, a1, ObjectType, v6);
  return sub_10000F614((uint64_t)v9, a3, &qword_10064A808);
}

uint64_t sub_10047C398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 176))(a1, a2, ObjectType, v5);
}

uint64_t sub_10047C3F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t sub_10047C3FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t sub_10047C408()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t sub_10047C414(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability);
  swift_retain(v3);
  TTRRemindersListCurrentTipCapability.requestSetCurrentTipHidden(_:)(a1);
  return swift_release(v3);
}

uint64_t sub_10047C450()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability);
  swift_retain(v1);
  TTRRemindersListCurrentTipCapability.requestDismissTip()();
  return swift_release(v1);
}

uint64_t sub_10047C484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for TTRRemindersListTreeViewModel();
  sub_100010634(a2, (uint64_t)v18);
  v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, &v17, 0, 0);
  v8 = *v7;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  v9 = sub_10047C564();
  v11 = v10;
  v12 = v19;
  v13 = v20;
  v14 = sub_100028D48((uint64_t)v18, v19);
  v15 = sub_10039B604(a1, v14, v8, (uint64_t)v9, v11, v6, v12, v13);
  sub_100027F10(v18);
  return v15;
}

uint64_t (*sub_10047C564())(uint64_t a1)
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  __int128 v37[2];
  __int128 v38[2];
  _BYTE v39[24];

  v1 = v0;
  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - v10;
  v12 = (char *)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *((_QWORD *)v12 + 1);
    v16 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess((char *)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v39, 0, 0);
    sub_10000735C(v16, (uint64_t)v4, &qword_100649CA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v27 = sub_10001F580((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v28 = (*(uint64_t (**)(uint64_t))(*v1 + 1064))(v27);
      ObjectType = swift_getObjectType(v14, v29);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v38, ObjectType, v15);
      swift_unknownObjectRelease(v14);
      sub_10002E37C(v38, (uint64_t)v37);
      sub_10001F580((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v31 = *(unsigned __int8 *)(v6 + 80);
      v32 = (v31 + 56) & ~v31;
      v33 = v32 + v7;
      v34 = swift_allocObject(&unk_1006093E8, v33 + 2, v31 | 7);
      sub_10002E37C(v37, v34 + 16);
      sub_10001F580((uint64_t)v9, v34 + v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v35 = (_BYTE *)(v34 + v33);
      *v35 = v28;
      v35[1] = HIBYTE(v28) & 1;
      return sub_10048DF48;
    }
    swift_unknownObjectRelease(v14);
    sub_1000073A0((uint64_t)v4, &qword_100649CA0);
  }
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v17 = type metadata accessor for Logger(0);
  sub_100012DC4(v17, (uint64_t)qword_100660618);
  v18 = swift_retain_n(v1, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v38[0] = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = _typeName(_:qualified:)(*v1, 0);
    v25 = v24;
    *(_QWORD *)&v37[0] = sub_100027E40(v23, v24, (uint64_t *)v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, (char *)v37 + 8, v21 + 4, v21 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: failed to provide presentationTreeCreator", v21, 0xCu);
    swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  return 0;
}

uint64_t sub_10047C8F8(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t Strong;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  int64_t v92;
  uint64_t v93;
  char v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v104;
  void (*v105)(id *, _QWORD);
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  void *v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t (*v191)(uint64_t);
  uint64_t v192;
  char *v193;
  _BYTE *v194;
  _QWORD *v195;
  _BYTE v196[24];
  _BYTE v197[24];
  id v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  _QWORD *v202;
  void *v203;
  _BYTE v204[12];

  v8 = v7;
  v179 = a7;
  v180 = a6;
  v184 = a4;
  v191 = a3;
  v12 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v12);
  v182 = (uint64_t)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  v15 = __chkstk_darwin(updated);
  v181 = (uint64_t)&v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v195 = (uint64_t *)((char *)&v169 - v17);
  v174 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v174);
  v175 = (uint64_t)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v20 = __chkstk_darwin(v19);
  v189 = (char *)&v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v173 = (uint64_t)&v169 - v23;
  v24 = __chkstk_darwin(v22);
  v178 = (char *)&v169 - v25;
  __chkstk_darwin(v24);
  v183 = (char *)&v169 - v26;
  v187 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v193 = (char *)&v169 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v177 = *(_QWORD *)(v188 - 8);
  v28 = __chkstk_darwin(v188);
  v176 = (uint64_t)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v172 = (uint64_t)&v169 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v169 - v32;
  v34 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v169 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v38);
  v40 = (char *)&v169 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    *(_BYTE *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 1;
  sub_10046ADD4(a2);
  v41 = v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v204, 0, 0);
  sub_10000735C(v41, (uint64_t)v40, &qword_100649CA0);
  v42 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  LODWORD(v41) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v40, 1, v42);
  sub_1000073A0((uint64_t)v40, &qword_100649CA0);
  if ((_DWORD)v41 == 1)
  {
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100012DC4(v44, (uint64_t)qword_100660618);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unexpected: a non-nil ListInfo should be set by the time the tree is updated.", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

  }
  v49 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v43);
  v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72))(ObjectType, v49);
  v53 = v51;
  if (v51)
  {
    v54 = v52;
    v55 = swift_getObjectType(v51, v52);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(v55, v54);
    swift_unknownObjectRelease(v53);
    v53 = v56 & 1;
  }
  v57 = v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v60 = Strong;
    v61 = *(_QWORD *)(v57 + 8);
    v62 = swift_getObjectType(Strong, v59);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 40))(v53, 0, v62, v61);
    Strong = swift_unknownObjectRelease(v60);
  }
  v63 = (uint64_t)&_swiftEmptySetSingleton;
  v203 = &_swiftEmptySetSingleton;
  v194 = (_BYTE *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
  v64 = *(_BYTE *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) == 1;
  v190 = v57;
  v192 = v8;
  v185 = a5;
  if (v64)
  {
    v65 = (_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
    swift_beginAccess(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, v197, 1, 0);
    v66 = *v65;
    v67 = *(_QWORD *)(*v65 + 16);
    if (v67)
    {
      v171 = v65;
      v68 = (uint64_t)&v37[*(int *)(v34 + 20)];
      v69 = v66 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v70 = *(_QWORD *)(v35 + 72);
      v170 = v66;
      swift_bridgeObjectRetain(v66);
      do
      {
        sub_10002B1E8(v69, (uint64_t)v37, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        sub_10002B1E8(v68, (uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v71 = sub_10001F544((uint64_t)v37, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        v72 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v71);
        sub_10001F544((uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (v72)
        {
          sub_1000176A0((Swift::Int *)&v198, v72);

        }
        v69 += v70;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease(v170);
      v65 = v171;
      v66 = *v171;
      v63 = (uint64_t)v203;
      v8 = v192;
    }
    *v65 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v66);
    v73 = (uint64_t *)(v8
                    + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
    swift_beginAccess(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides, v196, 1, 0);
    v74 = *v73;
    *v73 = (uint64_t)&_swiftEmptyDictionarySingleton;
    Strong = swift_bridgeObjectRelease(v74);
  }
  if ((v63 & 0xC000000000000001) != 0)
  {
    if (v63 < 0)
      v75 = v63;
    else
      v75 = v63 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v63);
    v171 = (_QWORD *)__CocoaSet.count.getter(v75);
    Strong = swift_bridgeObjectRelease(v63);
  }
  else
  {
    v171 = *(_QWORD **)(v63 + 16);
  }
  v76 = v191(Strong);
  if (v194[1] == 1)
  {
    v77 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
    swift_retain(v77);
    v78 = sub_100384390(v76);
    swift_release(v77);
    sub_100477818((uint64_t)v78);
    v63 = (uint64_t)v203;
  }
  v191 = (uint64_t (*)(uint64_t))v76;
  v79 = sub_1004742D8(v76);
  v184 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter(v79);
  if ((v63 & 0xC000000000000001) == 0)
  {
LABEL_37:
    v82 = *(_QWORD *)(v63 + 16);
    swift_bridgeObjectRetain(v63);
    if (v82)
    {
      v202 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v82);
      v199 = sub_10048AFF4(v63);
      v200 = v84;
      v201 = v85 & 1;
      goto LABEL_39;
    }
LABEL_50:
    swift_bridgeObjectRelease(v63);
    v107 = _swiftEmptyArrayStorage;
LABEL_51:
    v108 = sub_10048EF0C((uint64_t)v107, v184);
    swift_bridgeObjectRelease(v107);
    v109 = (uint64_t)v183;
    v110 = (uint64_t)v178;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {
      v111 = &_swiftEmptySetSingleton;
      goto LABEL_53;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
      v111 = v167;
    }
    else
    {
      v111 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_53;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
      v112 = v168;
LABEL_54:
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
        v113 = v114;
      }
      else
      {
        v113 = &_swiftEmptySetSingleton;
      }
LABEL_57:
      REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v108, v111, v112, v113, &_swiftEmptySetSingleton);
      v115 = v177;
      v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56);
      v117 = v188;
      v116(v109, 1, 1, v188);
      sub_10000735C(v179, v110, (uint64_t *)&unk_100640EB0);
      v118 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
      if (v118(v110, 1, v117) == 1)
      {
        v119 = v109;
        sub_1000073A0(v110, (uint64_t *)&unk_100640EB0);
      }
      else
      {
        v120 = v172;
        sub_10001F580(v110, v172, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v121 = v175;
        sub_10002B1E8(v120, v175, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v116(v121, 0, 1, v117);
        swift_storeEnumTagMultiPayload(v121, v174, 0);
        v122 = v173;
        sub_100383D24(v121, v173);
        sub_1000073A0(v121, &qword_10064B6B0);
        sub_10001F544(v120, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0(v109, (uint64_t *)&unk_100640EB0);
        v119 = v109;
        sub_10000F614(v122, v109, (uint64_t *)&unk_100640EB0);
      }
      v123 = (uint64_t)v189;
      if ((v180 & 1) != 0 || *v194 != 1)
      {
        v132 = sub_10002A750(&qword_100642EA8);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v195, 1, 1, v132);
      }
      else
      {
        v124 = v171 != 0;
        v125 = sub_10002A750(&qword_100642EA8);
        v126 = *(int *)(v125 + 48);
        v127 = *(_QWORD *)(v192 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
        v128 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
        v129 = v195;
        (*(void (**)(uint64_t, char *, uint64_t))(v186 + 16))((uint64_t)v195 + *(int *)(v128 + 20), v193, v187);
        *v129 = v127;
        v130 = *(int *)(v128 + 24);
        v117 = v188;
        *((_BYTE *)v129 + v130) = v124;
        *((_BYTE *)v129 + v126) = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v129, 0, 1, v125);
        v131 = v127;
        v123 = (uint64_t)v189;
        swift_retain(v131);
      }
      v133 = v191;
      sub_10000735C(v119, v123, (uint64_t *)&unk_100640EB0);
      if (v118(v123, 1, v117) == 1)
      {
        v134 = sub_10002A750((uint64_t *)&unk_100649CF0);
        v135 = v182;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v182, 1, 1, v134);
      }
      else
      {
        v136 = v176;
        sub_10001F580(v123, v176, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v137 = sub_10002A750((uint64_t *)&unk_100649CF0);
        v138 = *(int *)(v137 + 48);
        v135 = v182;
        sub_10002B1E8(v136, v182, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_BYTE *)(v135 + v138) = 0;
        sub_10001F544(v136, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v135, 0, 1, v137);
      }
      swift_bridgeObjectRelease(v203);
      v139 = v181;
      sub_10002B1E8((uint64_t)v195, v181, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
      v140 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
      swift_allocObject(v140, *(unsigned int *)(v140 + 48), *(unsigned __int16 *)(v140 + 52));
      v141 = swift_retain(v133);
      v142 = sub_100372FD8(v141, v135, v139);
      swift_release(v133);
      v143 = *(_QWORD *)(v192 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
      *(_QWORD *)(v192 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree) = v133;
      swift_retain(v133);
      swift_release(v143);
      v144 = v190;
      v145 = swift_unknownObjectWeakLoadStrong(v190);
      if (v145)
      {
        v147 = v145;
        v148 = *(_QWORD *)(v144 + 8);
        v149 = swift_getObjectType(v145, v146);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 72))(v142, v149, v148);
        v145 = swift_unknownObjectRelease(v147);
      }
      v150 = REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter(v145);
      v151 = *(_QWORD *)(v150 + 16);
      v152 = swift_bridgeObjectRelease(v150);
      if (v151)
      {
        v153 = REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter(v152);
        v154 = (void *)sub_10047DAD8(v153);
        v156 = v155;
        v158 = v157;
        v159 = v157;
        swift_bridgeObjectRelease(v153);
        if (v159 <= 0xFB)
        {
          v160 = v190;
          v161 = swift_unknownObjectWeakLoadStrong(v190);
          if (v161)
          {
            v163 = v161;
            v164 = *(_QWORD *)(v160 + 8);
            v165 = swift_getObjectType(v161, v162);
            (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v164 + 152))(v154, v156, v158, v165, v164);
            swift_unknownObjectRelease(v163);
          }
          sub_1000D5670(v154, v156, v158);
        }
      }
      sub_100475C14(0);
      swift_release(v133);
      swift_release(v142);
      sub_10001F544((uint64_t)v195, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
      sub_1000073A0(v119, (uint64_t *)&unk_100640EB0);
      result = (*(uint64_t (**)(char *, uint64_t))(v186 + 8))(v193, v187);
      v166 = v194;
      *(_WORD *)v194 = 257;
      v166[2] = 0;
      return result;
    }
LABEL_53:
    v112 = &_swiftEmptySetSingleton;
    v113 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_57;
    goto LABEL_54;
  }
  if (v63 < 0)
    v80 = v63;
  else
    v80 = v63 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v63);
  v81 = __CocoaSet.count.getter(v80);
  if (!v81)
    goto LABEL_50;
  v82 = v81;
  v202 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v81);
  v199 = __CocoaSet.startIndex.getter(v80);
  v200 = v83;
  v201 = 1;
  if (v82 < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
LABEL_39:
  if (v63 < 0)
    v86 = v63;
  else
    v86 = v63 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    while (1)
    {
      v92 = v199;
      v93 = v200;
      v94 = v201;
      sub_100478474(v199, v200, v201, v63);
      v96 = v95;
      v97 = REMObjectID.codable.getter();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v98);
      v99 = v202[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v99);
      v100 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
      result = specialized ContiguousArray._endMutation()(v100);
      if ((v63 & 0xC000000000000001) != 0)
        break;
      v87 = sub_10048B2C0(v92, v93, v94, v63);
      v89 = v88;
      v91 = v90;
      sub_10003E0E0(v92, v93, v94);
      v199 = v87;
      v200 = v89;
      v201 = v91 & 1;
      if (!--v82)
        goto LABEL_49;
    }
    if ((v94 & 1) == 0)
      break;
    v102 = __CocoaSet.Index.handleBitPattern.getter(v92, v93);
    if (v102)
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v102);
    else
      isUniquelyReferenced_nonNull_native = 1;
    v104 = sub_10002A750(&qword_100660C18);
    v105 = (void (*)(id *, _QWORD))Set.Index._asCocoa.modify(&v198, v104);
    __CocoaSet.formIndex(after:isUnique:)(v106, isUniquelyReferenced_nonNull_native, v86);
    v105(&v198, 0);
    if (!--v82)
    {
LABEL_49:
      sub_10003E0E0(v199, v200, v201);
      v107 = v202;
      swift_bridgeObjectRelease(v63);
      goto LABEL_51;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10047D844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  _QWORD v25[5];

  v6 = type metadata accessor for TTRRemindersListTreeViewModel();
  sub_100010634(a2, (uint64_t)v25);
  v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, v24, 0, 0);
  v8 = *v7;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  v9 = sub_10047C564();
  v11 = v10;
  sub_100010634((uint64_t)v25, (uint64_t)v21);
  v12 = v22;
  v13 = v23;
  v14 = sub_100028D48((uint64_t)v21, v22);
  __chkstk_darwin(v14);
  v16 = (char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v18 = sub_100392EF8(a1, 1, (uint64_t)v16, v8, (uint64_t)v9, v11, v6, v12, v13);
  sub_100027F10(v21);
  sub_100027F10(v25);
  return v18;
}

BOOL sub_10047D980(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v3 = sub_10002A750(&qword_1006588F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListUncommittedSection(0);
  sub_10002B1E8(a2 + *(int *)(v9 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10000735C(a2, (uint64_t)&v5[*(int *)(v3 + 56)], &qword_10064B6B0);
  v10 = &v5[*(int *)(v3 + 52)];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  sub_100381454((uint64_t)v5, (uint64_t)v8);
  sub_1000073A0((uint64_t)v5, &qword_1006588F0);
  v11 = sub_10002A750(&qword_100647B00);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11) != 1;
  sub_1000073A0((uint64_t)v8, &qword_100647AF8);
  return v12;
}

uint64_t sub_10047DAD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  int v27;
  void (*v28)(void **, uint64_t);
  uint64_t v29;
  void **v30;
  void (*v31)(char *, void **, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  Class isa;
  NSString v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Class v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t Strong;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char v61;
  int v62;
  void (*v63)(NSObject *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void **, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  Class v74;
  NSString v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char v86;
  int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  id v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  _QWORD *v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(NSObject *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  id v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t result;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  NSObject *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  char *v128;
  id v129;
  uint64_t v130;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v127 = ((char *)&v120 - v10);
  __chkstk_darwin(v9);
  v128 = (char *)&v120 - v11;
  v12 = sub_10002A750(&qword_100660C28);
  __chkstk_darwin(v12);
  v14 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (void **)((char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v21 = (char *)&v120 - v20;
  static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000073A0((uint64_t)v14, &qword_100660C28);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100012DC4(v22, (uint64_t)qword_100660618);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "summarizeAutoCategorizationMessages: error coalescing encoded AutoCategorization message strings", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  (*(void (**)(void **, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  v27 = (*(uint64_t (**)(void **, uint64_t))(v16 + 88))(v19, v15);
  if (v27 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.oneReminderToOneSection(_:))
  {
    v124 = v21;
    v28 = *(void (**)(void **, uint64_t))(v16 + 96);
    v126 = v15;
    v28(v19, v15);
    v29 = sub_10002A750(&qword_100660C40);
    v30 = (void **)((char *)v19 + *(int *)(v29 + 48));
    v121 = (char *)v19 + *(int *)(v29 + 64);
    v125 = v5;
    v31 = *(void (**)(char *, void **, uint64_t))(v5 + 32);
    v31(v128, v19, v4);
    v122 = v4;
    v31((char *)v127, v30, v4);
    v32 = objc_msgSend((id)objc_opt_self(REMReminder), "cdEntityName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v34 = v33;

    v35 = objc_allocWithZone((Class)REMObjectID);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    v38 = objc_msgSend(v35, "initWithUUID:entityName:", isa, v37);

    v39 = sub_100005ED8(0, &qword_1006436D8, REMListSection_ptr);
    v40 = objc_msgSend((id)swift_getObjCClassFromMetadata(v39), "cdEntityName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v41;

    v43 = objc_allocWithZone((Class)REMObjectID);
    v44 = UUID._bridgeToObjectiveC()().super.isa;
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
    v46 = objc_msgSend(v43, "initWithUUID:entityName:", v44, v45);

    v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v48);
    v50 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v47 + 120))(v38, ObjectType, v47);
    if (v50)
    {
      v51 = (void *)v50;
      v52 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 424))();
      if (v52)
      {
        v53 = v52;
        Strong = swift_unknownObjectWeakLoadStrong(v52 + 56);
        if (!Strong)
        {

          swift_unknownObjectRelease(v53);
          goto LABEL_22;
        }
        v56 = Strong;
        v57 = *(_QWORD *)(v53 + 64);
        v58 = swift_getObjectType(Strong, v55);
        v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(v58, v57);
        swift_unknownObjectRelease(v56);
        v60 = v46;
        TTRSection.init(with:store:)(v60, v59);
        v62 = ~v61;
        swift_unknownObjectRelease(v53);
        if (v62)
        {

          v63 = *(void (**)(NSObject *, uint64_t))(v125 + 8);
          v64 = v122;
          v63(v127, v122);
          v63(v128, v64);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v124, v126);
          v65 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v121, v65);
          return (uint64_t)v51;
        }
      }

    }
LABEL_22:
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v91 = type metadata accessor for Logger(0);
    sub_100012DC4(v91, (uint64_t)qword_100660618);
    v92 = v46;
    v93 = v38;
    v94 = v92;
    v95 = v93;
    v96 = Logger.logObject.getter(v95);
    v97 = static os_log_type_t.error.getter();
    v123 = v96;
    if (os_log_type_enabled(v96, v97))
    {
      v98 = swift_slowAlloc(22, -1);
      v99 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v98 = 138412546;
      v129 = v95;
      v100 = v95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v98 + 4, v98 + 12);
      *v99 = v95;

      *(_WORD *)(v98 + 12) = 2112;
      v129 = v94;
      v101 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v98 + 14, v98 + 22);
      v99[1] = v94;

      _os_log_impl((void *)&_mh_execute_header, v123, v97, "summarizeAutoCategorizationMessages: could not get reminder or section {reminderObjectID: %@, sectionObjectID: %@}", (uint8_t *)v98, 0x16u);
      v102 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v99, 2, v102);
      swift_slowDealloc(v99, -1, -1);
      swift_slowDealloc(v98, -1, -1);
    }
    else
    {

      v100 = v94;
    }
    v103 = v125;
    v104 = v126;

    v105 = *(void (**)(NSObject *, uint64_t))(v103 + 8);
    v106 = v122;
    v105(v127, v122);
    v105(v128, v106);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v124, v104);
    v107 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v107 - 8) + 8))(v121, v107);
    return 0;
  }
  if (v27 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.manyRemindersToOneSection(_:))
  {
    v124 = v21;
    v66 = *(void (**)(void **, uint64_t))(v16 + 96);
    v126 = v15;
    v66(v19, v15);
    v51 = *v19;
    v67 = sub_10002A750(&qword_100660C38);
    v68 = (char *)v19 + *(int *)(v67 + 48);
    v128 = (char *)v19 + *(int *)(v67 + 64);
    v125 = v5;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v68, v4);
    v69 = sub_100005ED8(0, &qword_1006436D8, REMListSection_ptr);
    v70 = objc_msgSend((id)swift_getObjCClassFromMetadata(v69), "cdEntityName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v72 = v71;

    v73 = objc_allocWithZone((Class)REMObjectID);
    v74 = UUID._bridgeToObjectiveC()().super.isa;
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v72);
    v76 = objc_msgSend(v73, "initWithUUID:entityName:", v74, v75);

    v77 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 424))();
    if (v77)
    {
      v78 = v77;
      v79 = swift_unknownObjectWeakLoadStrong(v77 + 56);
      if (v79)
      {
        v81 = v79;
        v82 = *(_QWORD *)(v78 + 64);
        v83 = swift_getObjectType(v79, v80);
        v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 16))(v83, v82);
        swift_unknownObjectRelease(v81);
        v85 = v76;
        TTRSection.init(with:store:)(v85, v84);
        v87 = ~v86;
        swift_unknownObjectRelease(v78);
        if (v87)
        {

          (*(void (**)(char *, uint64_t))(v125 + 8))(v8, v4);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v124, v126);
          v88 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(v128, v88);
          return (uint64_t)v51;
        }
      }
      else
      {
        swift_unknownObjectRelease(v78);
      }
    }
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v108 = type metadata accessor for Logger(0);
    sub_100012DC4(v108, (uint64_t)qword_100660618);
    v109 = v76;
    v110 = Logger.logObject.getter(v109);
    v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      v127 = v110;
      v112 = (uint8_t *)swift_slowAlloc(12, -1);
      v123 = swift_slowAlloc(8, -1);
      *(_DWORD *)v112 = 138412290;
      v129 = v109;
      v113 = v109;
      v110 = v127;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130, v112 + 4, v112 + 12);
      v114 = v123;
      v123->isa = (Class)v109;

      _os_log_impl((void *)&_mh_execute_header, v110, v111, "summarizeAutoCategorizationMessages: could not get section {sectionObjectID: %@}", v112, 0xCu);
      v115 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v114, 1, v115);
      swift_slowDealloc(v114, -1, -1);
      swift_slowDealloc(v112, -1, -1);
    }
    else
    {

    }
    v116 = v126;
    v117 = v124;

    (*(void (**)(char *, uint64_t))(v125 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v117, v116);
    v118 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v118 - 8) + 8))(v128, v118);
    return 0;
  }
  if (v27 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.manyRemindersToManySections(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    (*(void (**)(void **, uint64_t))(v16 + 96))(v19, v15);
    v51 = *v19;
    v89 = (char *)v19 + *(int *)(sub_10002A750(&qword_100660C30) + 48);
    v90 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v89, v90);
    return (uint64_t)v51;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
  __break(1u);
  return result;
}

uint64_t sub_10047E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  void *v21;
  uint64_t v22;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  swift_retain_n(v0, 2);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v12 = &_swiftEmptySetSingleton;
    goto LABEL_3;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
    v12 = v20;
  }
  else
  {
    v12 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_3;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
    v13 = v21;
    goto LABEL_4;
  }
LABEL_3:
  v13 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_6;
LABEL_4:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_6:
    v15 = &_swiftEmptySetSingleton;
    v16 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_10;
    goto LABEL_7;
  }
  sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
  v15 = v14;
LABEL_7:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
    v16 = v17;
  }
  else
  {
    v16 = &_swiftEmptySetSingleton;
  }
LABEL_10:
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v12, v13, v15, v16, &_swiftEmptySetSingleton);
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
  swift_retain();
  sub_100490538(0, (uint64_t)v10, (uint64_t)v7, 0, (uint64_t)v3, v0, v0);
  swift_release();
  sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000073A0((uint64_t)v10, &qword_100649CA0);
  return swift_release_n(v0, 2);
}

void sub_10047E8B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  unint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v66 = a3;
  v67 = a4;
  v81 = a1;
  v83 = sub_10002A750(&qword_100647B00);
  v80 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v75 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006588E8);
  __chkstk_darwin(v8);
  v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v74);
  v73 = (uint64_t)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v12);
  v72 = (uint64_t)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_1006588F0);
  __chkstk_darwin(v14);
  v16 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v17);
  v19 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v84 = (uint64_t)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a2 + 16);
  if (v23)
  {
    v64[1] = a5;
    v69 = v23;
    v79 = a2 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v65 = a2;
    swift_bridgeObjectRetain(a2);
    v24 = v69;
    v68 = 0;
    v25 = 0;
    v77 = -(uint64_t)v69;
    v78 = v21;
    v70 = v14;
    v71 = v20;
LABEL_3:
    if (v25 > v24)
      v24 = v25;
    v82 = -(uint64_t)v24;
    ++v25;
    while (v82 + v25 != 1)
    {
      v26 = v84;
      sub_10002B1E8(v79 + *(_QWORD *)(v21 + 72) * (v25 - 1), v84, type metadata accessor for TTRRemindersListUncommittedReminder);
      v27 = *(int *)(v20 + 24);
      v28 = *(_QWORD *)(v26 + v27);
      v76 = v26 + *(int *)(v20 + 20);
      sub_10002B1E8(v76, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10000735C(v26, (uint64_t)&v16[*(int *)(v14 + 56)], &qword_10064B6B0);
      v29 = &v16[*(int *)(v14 + 52)];
      *(_QWORD *)v29 = v28;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = 1;
      swift_retain();
      swift_retain();
      TTRMutableTreeStorage.insertTemporaryItem(with:)(v16);
      swift_release();
      v30 = sub_10002A750(&qword_100658930);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v10, 1, v30) == 1)
      {
        sub_1000073A0((uint64_t)v10, &qword_1006588E8);
        v31 = 1;
      }
      else
      {
        v32 = *(_QWORD *)&v10[*(int *)(v30 + 48)];
        v33 = v74;
        v34 = *(int *)(v74 + 48);
        v35 = v27;
        v36 = v73;
        sub_10000F614((uint64_t)v10, v73, (uint64_t *)&unk_100640EB0);
        *(_QWORD *)(v36 + v34) = v32;
        v37 = *(int *)(v33 + 48);
        v38 = v83;
        v39 = *(_QWORD *)(v36 + v37);
        v40 = v36;
        v27 = v35;
        v41 = v72;
        sub_10000F614(v40, v72, (uint64_t *)&unk_100640EB0);
        v42 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        v43 = (uint64_t)v75;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v75, 1, 1, v42);
        sub_1000B5F7C(v41, v43);
        *(_QWORD *)(v43 + *(int *)(v38 + 36)) = v39;
        sub_10000F614(v43, (uint64_t)v19, &qword_100647B00);
        v44 = v41;
        v14 = v70;
        v20 = v71;
        sub_1000073A0(v44, (uint64_t *)&unk_100640EB0);
        v31 = 0;
      }
      v45 = v80;
      v46 = v83;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v19, v31, 1, v83);
      sub_1000073A0((uint64_t)v16, &qword_1006588F0);
      LODWORD(v45) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v19, 1, v46);
      sub_1000073A0((uint64_t)v19, &qword_100647AF8);
      if ((_DWORD)v45 != 1)
      {
        v52 = *(_QWORD *)(v84 + v27);
        if (v52)
        {
          v53 = *(void **)(v52 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
          v54 = type metadata accessor for TTRReminderEditor(0);
          v55 = sub_1000175C8((unint64_t *)&qword_100643728, (uint64_t (*)(uint64_t))&type metadata accessor for TTRReminderEditor, (uint64_t)&protocol conformance descriptor for TTRReminderEditor);
          v56 = v53;
          TTRUndoableEditing.init(changeItem:undoManager:)(&v85, v56, 0, v54, v55);
          v57 = v85;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 768))(v76, v85);
          if (v67)
          {
            v67(v57);

            swift_release();
          }
          else
          {
            swift_release();

          }
        }
        else
        {
          if (qword_10063D818 != -1)
            swift_once(&qword_10063D818, sub_100478F7C);
          v58 = type metadata accessor for Logger(0);
          v59 = sub_100012DC4(v58, (uint64_t)qword_100660618);
          v60 = Logger.logObject.getter(v59);
          v61 = static os_log_type_t.fault.getter(v60);
          if (os_log_type_enabled(v60, v61))
          {
            v62 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v62 = 0;
            _os_log_impl((void *)&_mh_execute_header, v60, v61, "Missing reminderChangeItem for presetUncommittedReminder", v62, 2u);
            swift_slowDealloc(v62, -1, -1);
          }

        }
        v63 = v77 + v25;
        sub_10001F544(v84, type metadata accessor for TTRRemindersListUncommittedReminder);
        v68 = 1;
        v21 = v78;
        v24 = v69;
        if (!v63)
        {
LABEL_26:
          swift_bridgeObjectRelease(v65);
          return;
        }
        goto LABEL_3;
      }
      if (qword_10063D818 != -1)
        swift_once(&qword_10063D818, sub_100478F7C);
      v47 = type metadata accessor for Logger(0);
      v48 = sub_100012DC4(v47, (uint64_t)qword_100660618);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.fault.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Failed to insert uncommittedReminder", v51, 2u);
        swift_slowDealloc(v51, -1, -1);
      }

      sub_10001F544(v84, type metadata accessor for TTRRemindersListUncommittedReminder);
      ++v25;
      v21 = v78;
      if (v77 + v25 == 1)
        goto LABEL_26;
    }
    __break(1u);
  }
}

BOOL sub_10047EF98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 80);
  swift_retain(v3);
  v4 = TTRMutableTreeStorage.delete(_:)(a2);
  swift_release(v3);
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease(v4);
  return v5 != 0;
}

uint64_t sub_10047EFE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v16;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return 0;
  v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v11 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain(a1);
  while (1)
  {
    v12 = sub_10002B1E8(v10, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v12);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
    if (EnumCaseMultiPayload)
      break;
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v10 += v11;
    if (!--v9)
    {
      v14 = 0;
      goto LABEL_9;
    }
  }
  if ((EnumCaseMultiPayload - 1) < 2)
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = 1;
LABEL_9:
  swift_bridgeObjectRelease(a1);
  return v14;
}

void sub_10047F160(char a1)
{
  __asm { BR              X11 }
}

void sub_10047F198()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
  *v1 = 1;
  v1[1] = 1;
  v1[2] = 0;
  TTRModuleState.modelWillUnload()();
}

void sub_10047F24C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - v6;
  v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 72))(ObjectType, v12);
  if (v15)
  {
    v17 = v15;
    v18 = v16;
    v42 = v4;
    v19 = (char *)v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v22 = Strong;
      v41 = v1;
      v23 = *((_QWORD *)v19 + 1);
      v24 = swift_getObjectType(Strong, v21);
      v26 = swift_getObjectType(v17, v25);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v26, v18);
      v28 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v23 + 40);
      v29 = v23;
      v1 = v41;
      v28(v27 & 1, 1, v24, v29);
      swift_unknownObjectRelease(v22);
    }
    v30 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess((char *)v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v43, 0, 0);
    sub_10000735C(v30, (uint64_t)v7, &qword_100649CA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1000073A0((uint64_t)v7, &qword_100649CA0);
    }
    else
    {
      sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v40 = (uint64_t)v42;
      sub_10002B1E8((uint64_t)v11, (uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
      sub_10046ADD4(v40);
      sub_1000073A0(v40, &qword_100649CA0);
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    sub_10047AFE4(0);
    sub_100475C14(1);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v31 = type metadata accessor for Logger(0);
    sub_100012DC4(v31, (uint64_t)qword_100660618);
    v32 = swift_retain_n(v0, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v43[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = _typeName(_:qualified:)(*v1, 0);
      v39 = v38;
      v44 = sub_100027E40(v37, v38, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v35 + 4, v35 + 12);
      swift_release_n(v1, 2);
      swift_bridgeObjectRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s: missing layoutContext", v35, 0xCu);
      swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
  }
}

uint64_t sub_10047F610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (!Strong)
    return 0;
  v4 = Strong;
  v5 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType(Strong, v3);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
  swift_unknownObjectRelease(v4);
  return v7;
}

void sub_10047F688()
{
  TTRModuleState.modelWillRefresh()();
}

void sub_10047F6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  if (qword_10063D818 != -1)
    swift_once(&qword_10063D818, sub_100478F7C);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100012DC4(v16, (uint64_t)qword_100660618);
  v18 = sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v54 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v52 = v12;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v2;
    v24 = v23;
    v57 = v23;
    v50 = v10;
    v51 = v9;
    *(_DWORD *)v22 = 136315138;
    v25 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v26 = TTRTreeStorageItem.treeItemDescription.getter(v55, v25);
    v28 = v27;
    v56 = sub_100027E40(v26, v27, &v57);
    v10 = v50;
    v9 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v28);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Discard uncommittedSection {item: %s}", v22, 0xCu);
    swift_arrayDestroy(v24, 1, &type metadata for Any[8]);
    swift_slowDealloc(v24, -1, -1);
    v29 = v22;
    v12 = v52;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v30);
  v31 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v9, 1, v31) == 1)
  {
    v32 = sub_10002B1E8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.fault.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint64_t)v12;
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v57 = v37;
      *(_DWORD *)v36 = 136315138;
      v38 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v39 = TTRTreeStorageItem.treeItemDescription.getter(v55, v38);
      v41 = v40;
      v56 = sub_100027E40(v39, v40, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v36 + 4, v36 + 12);
      swift_bridgeObjectRelease(v41);
      sub_10001F544(v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Discard uncommittedSection invalid item type {item: %s}", v36, 0xCu);
      swift_arrayDestroy(v37, 1, &type metadata for Any[8]);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);
    }
    else
    {
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }

  }
  else
  {
    v42 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v43 = *(unsigned __int8 *)(v10 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v42, v44 + *(_QWORD *)(v10 + 72), v43 | 7);
    *(_OWORD *)(v45 + 16) = xmmword_100520250;
    sub_10002B1E8(a1, v45 + v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v46 = sub_10002A750((uint64_t *)&unk_100649CF0);
    v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v6, 1, 1, v46);
    __chkstk_darwin(v47);
    *(&v50 - 2) = v45;
    __chkstk_darwin(v48);
    *(&v50 - 2) = v45;
    sub_10047AAE0((uint64_t)v6, 1, (uint64_t (*)(_QWORD *, __n128))sub_100492BCC, v49, (uint64_t (*)(uint64_t))sub_100492BDC, (uint64_t)(&v50 - 4));
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100649CE0);
    swift_bridgeObjectRelease(v45);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  }
}

void sub_10047FC04(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = a5;
  v52 = a4;
  v55 = a3;
  v60 = a2;
  v50 = a1;
  v58 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  __chkstk_darwin(v58);
  v57 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v49 - v8;
  v9 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v9);
  v54 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v49);
  v53 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100647B00);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v51 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10002A750(&qword_10064B6B0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v5;
  swift_retain();
  sub_1003828E4(v60, (uint64_t)v20);
  v26 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48))(v20, 1, v21, v26) == 1)
  {
    v27 = &qword_100660C50;
    v28 = (uint64_t)v20;
LABEL_5:
    sub_1000073A0(v28, v27);
    v30 = (uint64_t)v59;
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v31 = type metadata accessor for Logger(0);
    sub_100012DC4(v31, (uint64_t)qword_100660618);
    v32 = sub_10002B1E8(v60, v30, type metadata accessor for TTRRemindersListSectionCreationLocation);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.fault.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v62 = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = v57;
      sub_10002B1E8(v30, v57, type metadata accessor for TTRRemindersListSectionCreationLocation);
      v38 = String.init<A>(describing:)(v37, v58);
      v40 = v39;
      v61 = sub_100027E40(v38, v39, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease(v40);
      sub_10001F544(v30, type metadata accessor for TTRRemindersListSectionCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Cannot resolve SectionCreationLocation {location: %s}", v35, 0xCu);
      swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_10001F544(v30, type metadata accessor for TTRRemindersListSectionCreationLocation);
    }

    return;
  }
  sub_10000F614((uint64_t)v20, (uint64_t)v24, &qword_10064B6B0);
  swift_retain();
  sub_100382EF8((uint64_t)v24, (uint64_t)v14);
  v29 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v14, 1, v15, v29) == 1)
  {
    sub_1000073A0((uint64_t)v24, &qword_10064B6B0);
    v27 = &qword_100647AF8;
    v28 = (uint64_t)v14;
    goto LABEL_5;
  }
  v41 = v51;
  sub_10000F614((uint64_t)v14, v51, &qword_100647B00);
  v42 = v53;
  sub_10002B1E8(v50, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v43 = 1;
  swift_storeEnumTagMultiPayload(v42, v49, 1);
  v44 = sub_10002A750((uint64_t *)&unk_100649CF0);
  v45 = v44;
  v46 = v54;
  if ((v52 & 1) != 0)
  {
    v47 = *(int *)(v44 + 48);
    sub_10002B1E8(v42, v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v43 = 0;
    *(_BYTE *)(v46 + v47) = 0;
  }
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v46, v43, 1, v45);
  __chkstk_darwin(v48);
  *(&v49 - 4) = v42;
  *(&v49 - 3) = v41;
  *(&v49 - 2) = v55;
  *(&v49 - 1) = v25;
  sub_10047A710(v46, v56 & 1, (uint64_t (*)(_QWORD *, __n128))sub_100491574, (uint64_t)(&v49 - 6), v25);
  sub_1000073A0(v46, (uint64_t *)&unk_100649CE0);
  sub_1000073A0((uint64_t)v24, &qword_10064B6B0);
  sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0(v41, &qword_100647B00);
}

BOOL sub_100480198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v31[1] = a5;
  v32 = a1;
  v33 = a4;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100647B00);
  __chkstk_darwin(v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v31 - v14;
  v16 = sub_10002A750(&qword_100658908);
  __chkstk_darwin(v16);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = &v18[*(int *)(v16 + 52)];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  *(_QWORD *)&v18[*(int *)(v16 + 56)] = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(a3 + *(int *)(v10 + 36));
  swift_retain();
  TTRMutableTreeStorage.insertNewItem(with:in:at:)(v18, a3, v20);
  swift_release();
  sub_1000073A0((uint64_t)v18, &qword_100658908);
  sub_10002B1E8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v9, 0, 1, v21);
  v23 = v32;
  v22(v12, 1, 1, v21);
  sub_100041F2C((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&v12[*(int *)(v10 + 36)] = 0;
  sub_10000F614((uint64_t)v12, (uint64_t)v15, &qword_100647B00);
  v24 = sub_1003807A0(v33, (uint64_t)v15);
  sub_1000073A0((uint64_t)v15, &qword_100647B00);
  if (v24)
  {
    sub_1004742D8(v23);
  }
  else
  {
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100012DC4(v25, (uint64_t)qword_100660618);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to move items to editable section in tree view model", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  return v24;
}

uint64_t sub_100480494()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree));
}

uint64_t sub_1004804A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
}

uint64_t sub_1004804E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10000735C(v3, a1, &qword_100649CA0);
}

uint64_t sub_100480538()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t sub_100480544()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

BOOL sub_10048055C(uint64_t a1)
{
  uint64_t v1;

  return sub_10047EF98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100480564()
{
  uint64_t v0;

  return sub_10047EFE8(*(_QWORD *)(v0 + 16));
}

void sub_10048056C(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  char v20;
  char v21;
  void *v22;
  id v23;
  char v24;
  int64_t v25;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v25)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v25)
        return;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v25)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v25)
            return;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = 8 * v10;
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + v14);
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + v14);
    v17 = v16;
    v18 = v15;
    v19 = sub_1002AA364((uint64_t)v18);
    v21 = v20;

    if ((v21 & 1) == 0)
    {

      return;
    }
    v22 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v19);
    v23 = v22;
    v24 = static TTRSectionID.__derived_enum_equals(_:_:)(v22, v16);

    if ((v24 & 1) == 0)
      return;
  }
  v13 = v11 + 4;
  if (v13 >= v25)
    return;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v25)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_100480758(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t ObjectType;
  Swift::String v14;
  void *object;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 >= 0)
      a2 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.subscript.getter(a1, a2);
    v7 = type metadata accessor for REMObjectID_Codable(0);
    if (swift_dynamicCastClass(v2, v7))
      return v2;
LABEL_12:
    _StringGuts.grow(_:)(85);
    v5 = 0xD000000000000046;
    v6 = "NSArray element failed to match the Swift Array Element type\nExpected ";
    goto LABEL_13;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  v3 = type metadata accessor for REMObjectID_Codable(0);
  swift_unknownObjectRetain(v2);
  if (swift_dynamicCastClass(v4, v3))
    return v2;
  _StringGuts.grow(_:)(82);
  v5 = 0xD000000000000043;
  v6 = "Down-casted Array element failed to match the target type\nExpected ";
LABEL_13:
  v9 = (unint64_t)(v6 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v5);
  v10._object = (void *)0x800000010057A930;
  v10._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x756F662074756220;
  v11._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v11);
  ObjectType = swift_getObjectType(v2, v12);
  swift_unknownObjectRelease(v2);
  v14._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  result = _assertionFailure(_:_:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, 0);
  __break(1u);
  return result;
}

void sub_100480900(uint64_t a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  Swift::Int v11;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  v8 = __CocoaDictionary.count.getter(v7);
  if (!__OFADD__(v8, 1))
  {
    v6 = sub_1004573C0(v7, v8 + 1);
    *v3 = v6;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_100097138(a1, a2, isUniquelyReferenced_nonNull_native);
    v10 = *v3;
    *v3 = v11;
    swift_bridgeObjectRelease(v10);
    return;
  }
  __break(1u);
}

uint64_t sub_1004809A0(uint64_t a1, uint64_t a2)
{
  return sub_1004809E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID, (void (*)(_QWORD *))&TTRRemindersListViewModel.SectionID.hash(into:), &qword_100660C48, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:));
}

uint64_t sub_1004809C4(uint64_t a1, uint64_t a2)
{
  return sub_1004809E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), &qword_10065F858, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
}

uint64_t sub_1004809E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD *), uint64_t *a5, uint64_t (*a6)(char *, uint64_t))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD *);
  uint64_t *v29;
  uint64_t (*v30)(char *, uint64_t);
  _QWORD v31[9];

  v29 = a5;
  v30 = a6;
  v9 = v6;
  v12 = a3(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - v14;
  v16 = *v6;
  Hasher.init(_seed:)(v31, *(_QWORD *)(*v6 + 40));
  swift_bridgeObjectRetain(v16);
  v28 = a4;
  a4(v31);
  v17 = Hasher._finalize()();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v26 = v6;
    v27 = a1;
    v20 = ~v18;
    v21 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      sub_10002B1E8(*(_QWORD *)(v16 + 48) + v21 * v19, (uint64_t)v15, a3);
      v22 = v30(v15, a2);
      sub_10001F544((uint64_t)v15, a3);
      if ((v22 & 1) != 0)
        break;
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        swift_bridgeObjectRelease(v16);
        v9 = v26;
        a1 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v16);
    sub_10001F544(a2, a3);
    sub_10002B1E8(*(_QWORD *)(*v26 + 48) + v21 * v19, v27, a3);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    sub_10002B1E8(a2, (uint64_t)v15, a3);
    v31[0] = *v9;
    *v9 = 0x8000000000000000;
    sub_100489524((uint64_t)v15, v19, isUniquelyReferenced_nonNull_native, a3, v29, v28, v30);
    v24 = *v9;
    *v9 = v31[0];
    swift_bridgeObjectRelease(v24);
    sub_10001F580(a2, a1, a3);
    return 1;
  }
}

uint64_t sub_100480BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::UInt v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v6);
    v8 = __CocoaSet.member(for:)(a2, v7);
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease(v6);
      swift_release();
      v26 = v8;
      swift_unknownObjectRetain(v8);
      v9 = sub_10002A750(&qword_1006463D0);
      swift_dynamicCast(v25, &v26, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
      v10 = v25[0];
      swift_unknownObjectRelease(v8);
      result = 0;
      *a1 = v10;
      return result;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v18 = sub_10048920C(v7, result + 1, &qword_100660C80, &qword_1006463D0, (void (*)(unint64_t))sub_1004867EC);
    v25[0] = v18;
    v19 = *(_QWORD *)(v18 + 16);
    if (*(_QWORD *)(v18 + 24) <= v19)
    {
      v24 = v19 + 1;
      swift_retain();
      sub_1004867EC(v24);
      v20 = v25[0];
    }
    else
    {
      v20 = v18;
      swift_retain();
    }
    sub_100489484(a2, v20);
    v23 = *v3;
    *v3 = v20;
  }
  else
  {
    Hasher.init(_seed:)(v25, *(_QWORD *)(v6 + 40));
    v12 = *(_QWORD *)(a2 + 16);
    Hasher._combine(_:)(v12);
    v13 = Hasher._finalize()();
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      v16 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v15) + 16) == v12)
      {
LABEL_12:
        swift_release();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v15);
        swift_retain();
        return 0;
      }
      v17 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v17;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v15) + 16) == v12)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v25[0] = *v2;
    *v2 = 0x8000000000000000;
    v22 = swift_retain();
    sub_10048A134(v22, v15, isUniquelyReferenced_nonNull_native, (void (*)(unint64_t))sub_1004867EC, &qword_1006463D0, (void (*)(unint64_t))sub_100484154, (uint64_t (*)(void))sub_100482B48);
    v23 = *v2;
    *v2 = v25[0];
  }
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  return 1;
}

uint64_t sub_100480E78(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  id v19;
  uint64_t v20;
  _QWORD v21[9];

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(v21, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v6);
  TTRSectionID.hash(into:)(v21, a2);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v9);
    v11 = v10;
    LOBYTE(v10) = static TTRSectionID.__derived_enum_equals(_:_:)(v10, a2);

    if ((v10 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease(v6);

      v15 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      v16 = v15;
      return 0;
    }
    v12 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v13 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v9);
      v14 = v13;
      LOBYTE(v13) = static TTRSectionID.__derived_enum_equals(_:_:)(v13, a2);

      if ((v13 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v21[0] = *v3;
  *v3 = 0x8000000000000000;
  v19 = a2;
  sub_100489720((uint64_t)a2, v9, isUniquelyReferenced_nonNull_native);
  v20 = *v3;
  *v3 = v21[0];
  swift_bridgeObjectRelease(v20);
  *a1 = a2;
  return 1;
}

uint64_t sub_100481004(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1004898A8(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1004810FC(uint64_t a1, uint64_t a2)
{
  return sub_100481120(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ReminderID.hash(into:), &qword_100660C20, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ReminderID.__derived_struct_equals(_:_:));
}

uint64_t sub_100481120(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD *), uint64_t *a5, uint64_t (*a6)(char *, uint64_t))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD *);
  uint64_t *v29;
  uint64_t (*v30)(char *, uint64_t);
  _QWORD v31[9];

  v29 = a5;
  v30 = a6;
  v9 = v6;
  v12 = a3(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - v14;
  v16 = *v6;
  Hasher.init(_seed:)(v31, *(_QWORD *)(*v6 + 40));
  swift_bridgeObjectRetain(v16);
  v28 = a4;
  a4(v31);
  v17 = Hasher._finalize()();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v26 = v6;
    v27 = a1;
    v20 = ~v18;
    v21 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      sub_10002B1E8(*(_QWORD *)(v16 + 48) + v21 * v19, (uint64_t)v15, a3);
      v22 = v30(v15, a2);
      sub_10001F544((uint64_t)v15, a3);
      if ((v22 & 1) != 0)
        break;
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        swift_bridgeObjectRelease(v16);
        v9 = v26;
        a1 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v16);
    sub_10001F544(a2, a3);
    sub_10002B1E8(*(_QWORD *)(*v26 + 48) + v21 * v19, v27, a3);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    sub_10002B1E8(a2, (uint64_t)v15, a3);
    v31[0] = *v9;
    *v9 = 0x8000000000000000;
    sub_100489F38((uint64_t)v15, v19, isUniquelyReferenced_nonNull_native, a3, v29, v28, v30);
    v24 = *v9;
    *v9 = v31[0];
    swift_bridgeObjectRelease(v24);
    sub_10001F580(a2, a1, a3);
    return 1;
  }
}

uint64_t sub_100481320(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = type metadata accessor for REMObjectID_Codable(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100488FF8(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_100486FB8(v29, &qword_100660C08);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_100489404((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      type metadata accessor for REMObjectID_Codable(0);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1004899C8((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_1004815A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v33 - v14;
  v16 = *v3;
  Hasher.init(_seed:)(v38, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v16);
  v37 = a2;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v17);
  TTRRemindersListViewModel.ItemID.hash(into:)(v38, v18);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v19 = Hasher._finalize()();
  v20 = -1 << *(_BYTE *)(v16 + 32);
  v21 = v19 & ~v20;
  v36 = v16;
  v22 = v16 + 56;
  v23 = *(_QWORD *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21;
  v33 = v3;
  v34 = a1;
  if ((v23 & 1) != 0)
  {
    v35 = ~v20;
    v24 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v25 = sub_10002B1E8(*(_QWORD *)(v36 + 48) + v24 * v21, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v26 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v26);
      v27 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v15, v13);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((v27 & 1) != 0)
        break;
      v21 = (v21 + 1) & v35;
      if (((*(_QWORD *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v36);
    sub_10001F544(v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(*(_QWORD *)(*v33 + 48) + v24 * v21, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v36);
    v28 = v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
    v30 = v37;
    sub_10002B1E8(v37, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v38[0] = *v28;
    *v28 = 0x8000000000000000;
    sub_100489B5C((uint64_t)v9, v21, isUniquelyReferenced_nonNull_native);
    v31 = *v28;
    *v28 = v38[0];
    swift_bridgeObjectRelease(v31);
    sub_10001F580(v30, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 1;
  }
}

uint64_t sub_100481848(Swift::UInt *a1, Swift::UInt a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_100489DEC(a2, v8, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100481964(uint64_t a1, uint64_t a2)
{
  return sub_100481120(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), &qword_10065F868, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
}

uint64_t sub_100481988(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  Swift::UInt v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain(a2);
    swift_bridgeObjectRetain(v6);
    v8 = __CocoaSet.member(for:)(a2, v7);
    swift_release(a2);
    if (v8)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v26 = v8;
      swift_unknownObjectRetain(v8);
      v9 = sub_10002A750((uint64_t *)&unk_100640E20);
      swift_dynamicCast(v25, &v26, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
      *a1 = v25[0];
      swift_unknownObjectRelease(v8);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v18 = sub_10048920C(v7, result + 1, &qword_100660C70, (uint64_t *)&unk_100640E20, (void (*)(unint64_t))sub_100487BF0);
    v25[0] = v18;
    v19 = *(_QWORD *)(v18 + 16);
    if (*(_QWORD *)(v18 + 24) <= v19)
    {
      v24 = v19 + 1;
      swift_retain(a2);
      sub_100487BF0(v24);
      v20 = v25[0];
    }
    else
    {
      v20 = v18;
      swift_retain(a2);
    }
    sub_100489484(a2, v20);
    v23 = *v3;
    *v3 = v20;
  }
  else
  {
    Hasher.init(_seed:)(v25, *(_QWORD *)(v6 + 40));
    v11 = *(_QWORD *)(a2 + 16);
    Hasher._combine(_:)(v11);
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(v6 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      v15 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(*(_QWORD *)(v15 + 8 * v14) + 16) == v11)
      {
LABEL_12:
        swift_release(a2);
        v17 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v14);
        *a1 = v17;
        swift_retain(v17);
        return 0;
      }
      v16 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v15 + 8 * v14) + 16) == v11)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v25[0] = *v2;
    *v2 = 0x8000000000000000;
    v22 = swift_retain(a2);
    sub_10048A134(v22, v14, isUniquelyReferenced_nonNull_native, (void (*)(unint64_t))sub_100487BF0, (uint64_t *)&unk_100640E20, (void (*)(unint64_t))sub_100485410, (uint64_t (*)(void))sub_100483584);
    v23 = *v2;
    *v2 = v25[0];
  }
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  return 1;
}

uint64_t sub_100481C18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_10048A29C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100481DC4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_1000175C8((unint64_t *)&qword_1006463A0, v12, (uint64_t)&protocol conformance descriptor for IndexPath);
  swift_bridgeObjectRetain(v10);
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_1000175C8((unint64_t *)&qword_10063F648, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v31;
        a1 = v32;
        v26 = v34;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v21);
    v25(v35, v6);
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_10048A434((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v36;
    swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v28, v6);
    return 1;
  }
}

void sub_100482020(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(*(_QWORD *)v2 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100482084()
{
  char *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  swift_bridgeObjectRetain(v3);
  String.hash(into:)(&v8, 0x7961646F74, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v8 = *v1;
  *v1 = 0x8000000000000000;
  sub_10048A688(v2, v4, isUniquelyReferenced_nonNull_native);
  v6 = *v1;
  *v1 = v8;
  swift_bridgeObjectRelease(v6);
  result = 1;
  *v0 = v2;
  return result;
}

uint64_t sub_1004823C4(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_10048AA78(a2, v8, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1004824E0(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_1000175C8(&qword_1006463A8, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_1000175C8((unint64_t *)&qword_1006463B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v31;
        a1 = v32;
        v26 = v34;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v21);
    v25(v35, v6);
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_10048ABD4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v36;
    swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v28, v6);
    return 1;
  }
}

uint64_t sub_10048273C(uint64_t a1, void *a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v29[9];

  v5 = a3 & 1;
  v6 = *v3;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v6);
  TTRListOrCustomSmartList.hash(into:)(v29, a2, v5);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = 16 * v9;
    v11 = *(_QWORD *)(v6 + 48) + 16 * v9;
    v12 = *(id *)v11;
    v13 = *(unsigned __int8 *)(v11 + 8);
    v14 = *(id *)v11;
    LOBYTE(v12) = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)(v12, v13, a2, v5);

    if ((v12 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease(v6);

      v20 = *(_QWORD *)(*v27 + 48) + v10;
      v21 = *(void **)v20;
      LOBYTE(v20) = *(_BYTE *)(v20 + 8);
      *(_QWORD *)a1 = v21;
      *(_BYTE *)(a1 + 8) = v20;
      v22 = v21;
      return 0;
    }
    v15 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v15;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v10 = 16 * v9;
      v16 = *(_QWORD *)(v6 + 48) + 16 * v9;
      v17 = *(id *)v16;
      v18 = *(unsigned __int8 *)(v16 + 8);
      v19 = *(id *)v16;
      LOBYTE(v17) = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)(v17, v18, a2, v5);

      if ((v17 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v27);
  v29[0] = *v27;
  *v27 = 0x8000000000000000;
  v25 = a2;
  sub_10048AE28((uint64_t)a2, v5, v9, isUniquelyReferenced_nonNull_native);
  v26 = *v27;
  *v27 = v29[0];
  swift_bridgeObjectRelease(v26);
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = (_DWORD)v5 != 0;
  return 1;
}

void *sub_10048291C()
{
  return sub_100482944((uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID, &qword_100660C48);
}

void *sub_100482930()
{
  return sub_100482944((uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_10065F858);
}

void *sub_100482944(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v5 = v2;
  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - v8;
  sub_10002A750(a2);
  v10 = *v2;
  v11 = static _SetStorage.copy(original:)(*v2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release(v10);
LABEL_28:
    *v5 = v12;
    return result;
  }
  v29 = v5;
  result = (void *)(v11 + 56);
  v14 = v10 + 56;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 56 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  v17 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v18 = 1 << *(_BYTE *)(v10 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v10 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v21)
      goto LABEL_26;
    v26 = *(_QWORD *)(v14 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v21)
        goto LABEL_26;
      v26 = *(_QWORD *)(v14 + 8 * v17);
      if (!v26)
        break;
    }
LABEL_25:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_12:
    v24 = *(_QWORD *)(v7 + 72) * v23;
    sub_10002B1E8(*(_QWORD *)(v10 + 48) + v24, (uint64_t)v9, a1);
    result = (void *)sub_10001F580((uint64_t)v9, *(_QWORD *)(v12 + 48) + v24, a1);
  }
  v27 = v25 + 2;
  if (v27 >= v21)
  {
LABEL_26:
    result = (void *)swift_release(v10);
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v21)
      goto LABEL_26;
    v26 = *(_QWORD *)(v14 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_100482B48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_10002A750(&qword_100660C80);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_26;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    swift_retain();
  }
  v18 = v16 + 2;
  if (v18 >= v13)
    goto LABEL_26;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_100482CDC()
{
  return sub_100483024(&qword_1006576D0);
}

void sub_100482CE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_10002A750(&qword_100660CA8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100482E90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_10002A750(&qword_100660CC8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

id sub_100483024(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1004831C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_10002A750(&qword_100660CB0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void *sub_100483358()
{
  return sub_10048336C((uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_10065F868);
}

void *sub_10048336C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v5 = v2;
  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - v8;
  sub_10002A750(a2);
  v10 = *v2;
  v11 = static _SetStorage.copy(original:)(*v2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release(v10);
LABEL_30:
    *v5 = v12;
    return result;
  }
  v29 = v5;
  result = (void *)(v11 + 56);
  v14 = v10 + 56;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 56 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  v17 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v18 = 1 << *(_BYTE *)(v10 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v10 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v25 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v21)
        goto LABEL_28;
      v26 = *(_QWORD *)(v14 + 8 * v17);
      if (!v26)
      {
        v17 = v25 + 2;
        if (v25 + 2 >= v21)
          goto LABEL_28;
        v26 = *(_QWORD *)(v14 + 8 * v17);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_12:
    v24 = *(_QWORD *)(v7 + 72) * v23;
    sub_10002B1E8(*(_QWORD *)(v10 + 48) + v24, (uint64_t)v9, a1);
    result = (void *)sub_10001F580((uint64_t)v9, *(_QWORD *)(v12 + 48) + v24, a1);
  }
  v27 = v25 + 3;
  if (v27 >= v21)
  {
LABEL_28:
    result = (void *)swift_release(v10);
    v5 = v29;
    goto LABEL_30;
  }
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100483584()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_10002A750(&qword_100660C70);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)swift_retain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_10048372C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10002A750(&qword_10065F848);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void *sub_1004838DC()
{
  return sub_100483A98((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, &qword_10065F850);
}

void sub_1004838F0()
{
  sub_1004838FC(&qword_10065F860);
}

void sub_1004838FC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release();
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void *sub_100483A84()
{
  return sub_100483A98((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_100660C78);
}

void *sub_100483A98(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - v7;
  sub_10002A750(a2);
  v9 = *v2;
  v10 = static _SetStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release(v9);
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release(v9);
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_100483CBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_10002A750(&qword_100660C98);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
    v20 = v18;
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

Swift::Int sub_100483E74(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(_QWORD *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *);
  _QWORD v41[9];

  v40 = a4;
  v7 = v4;
  v9 = a2(0);
  v39 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 0);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release(v12);
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v7;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
        break;
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v39 + 72);
    sub_10002B1E8(*(_QWORD *)(v12 + 48) + v28 * v24, (uint64_t)v11, a2);
    Hasher.init(_seed:)(v41, *(_QWORD *)(v14 + 40));
    v40(v41);
    result = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = sub_10001F580((uint64_t)v11, *(_QWORD *)(v14 + 48) + v22 * v28, a2);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 2;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n(v12, 2);
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_100484154(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C80);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_36:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_25;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v17 >= v12)
      goto LABEL_34;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_34;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
        break;
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_25:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(*(_QWORD *)(v20 + 16));
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
    swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v12)
  {
LABEL_34:
    swift_release();
    v2 = v29;
    goto LABEL_36;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_34;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_38:
  __break(1u);
}

void sub_1004843C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
    v21 = v20;
    TTRSectionID.hash(into:)(v31, v20);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100484648(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CC8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

Swift::Int sub_1004848A8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::Int v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release(v4);
LABEL_38:
    *v3 = v7;
    return result;
  }
  v31 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  result = swift_retain(v4);
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_27;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v19 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_36;
      v20 = *(_QWORD *)(v9 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v12)
          goto LABEL_36;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_26:
    v11 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_27:
    v22 = *(_QWORD *)(v7 + 40);
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    result = NSObject._rawHashValue(seed:)(v22);
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v16 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v12)
  {
LABEL_36:
    result = swift_release_n(v4, 2);
    v3 = v31;
    goto LABEL_38;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_100484B1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  _QWORD v41[9];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v40 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100660C88);
  v11 = static _SetStorage.resize(original:capacity:move:)(v10, a1, 0);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    swift_release();
LABEL_37:
    *v2 = v12;
    return;
  }
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 56);
  v37 = v2;
  v38 = v10 + 56;
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 56;
  swift_retain();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_26;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v39)
      goto LABEL_35;
    v23 = *(_QWORD *)(v38 + 8 * v22);
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_35;
      v23 = *(_QWORD *)(v38 + 8 * v18);
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v39)
          goto LABEL_35;
        v23 = *(_QWORD *)(v38 + 8 * v18);
        if (!v23)
          break;
      }
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_26:
    v25 = *(_QWORD *)(v40 + 72);
    sub_10002B1E8(*(_QWORD *)(v10 + 48) + v25 * v21, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = Hasher.init(_seed:)(v41, *(_QWORD *)(v12 + 40));
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v26);
    TTRRemindersListViewModel.ItemID.hash(into:)(v41, v27);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v17 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    sub_10001F580((uint64_t)v9, *(_QWORD *)(v12 + 48) + v19 * v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ++*(_QWORD *)(v12 + 16);
  }
  v24 = v22 + 3;
  if (v24 >= v39)
  {
LABEL_35:
    swift_release_n(v10, 2);
    v2 = v37;
    goto LABEL_37;
  }
  v23 = *(_QWORD *)(v38 + 8 * v24);
  if (v23)
  {
    v18 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v18 >= v39)
      goto LABEL_35;
    v23 = *(_QWORD *)(v38 + 8 * v18);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100484E84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CB0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

Swift::Int sub_1004850FC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(_QWORD *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *);
  _QWORD v41[9];

  v40 = a4;
  v7 = v4;
  v9 = a2(0);
  v39 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 0);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release(v12);
LABEL_37:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v7;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v38)
      goto LABEL_35;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_35;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_35;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v39 + 72);
    sub_10002B1E8(*(_QWORD *)(v12 + 48) + v28 * v24, (uint64_t)v11, a2);
    Hasher.init(_seed:)(v41, *(_QWORD *)(v14 + 40));
    v40(v41);
    result = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = sub_10001F580((uint64_t)v11, *(_QWORD *)(v14 + 48) + v22 * v28, a2);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_35:
    result = swift_release_n(v12, 2);
    v7 = v36;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_35;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::Int sub_100485410(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  Swift::Int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  Swift::Int *v28;
  uint64_t v29[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C70);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = result;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v28 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v29, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(*(_QWORD *)(v20 + 16));
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
    result = swift_retain(v20);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    result = swift_release(v3);
    v2 = v28;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_100485690(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_10065F848);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_10048593C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CB8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v15 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x100485C64);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
  v2 = v15;
LABEL_26:
  *v2 = v5;
}

void sub_100485C7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_10065F860);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100485EF4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;

  v43 = a4;
  v44 = a5;
  v7 = v5;
  v42 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    result = swift_release(v13);
LABEL_37:
    *v7 = v15;
    return result;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v39 = v7;
  v40 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v41 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  result = swift_retain(v13);
  v22 = 0;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_26;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v41)
      goto LABEL_35;
    v27 = *(_QWORD *)(v40 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v41)
        goto LABEL_35;
      v27 = *(_QWORD *)(v40 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v27 = *(_QWORD *)(v40 + 8 * v22);
        if (!v27)
          break;
      }
    }
LABEL_25:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_26:
    v29 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v29 * v25, v9);
    v30 = *(_QWORD *)(v15 + 40);
    v31 = sub_1000175C8(v43, v42, v44);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v9, v31);
    v32 = -1 << *(_BYTE *)(v15 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v20 + 8 * v34);
      }
      while (v38 == -1);
      v23 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v23 * v29, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v41)
  {
LABEL_35:
    result = swift_release_n(v13, 2);
    v7 = v39;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v40 + 8 * v28);
  if (v27)
  {
    v22 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v22 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v22 >= v41)
      goto LABEL_35;
    v27 = *(_QWORD *)(v40 + 8 * v22);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_100486210(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C98);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v33)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v33)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = *(_QWORD *)(v3 + 48) + 16 * v16;
    v21 = *(void **)v20;
    v22 = *(unsigned __int8 *)(v20 + 8);
    Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
    v23 = v21;
    TTRListOrCustomSmartList.hash(into:)(v34, v21, v22);
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v13 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v6 + 48) + 16 * v13;
    *(_QWORD *)v14 = v21;
    *(_BYTE *)(v14 + 8) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v32;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v33)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

Swift::Int sub_1004864C0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(_QWORD *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(_QWORD *);
  _QWORD v43[9];

  v42 = a4;
  v7 = v4;
  v9 = a2(0);
  v41 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v38 = v7;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v40 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v39 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v25 >= v39)
      break;
    v26 = v40;
    v27 = v40[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_33;
      v27 = v40[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_33:
          swift_release(v12);
          v7 = v38;
          goto LABEL_35;
        }
        v27 = v40[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_41;
            if (v21 >= v39)
              goto LABEL_33;
            v27 = v40[v21];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v21 = v28;
      }
    }
LABEL_23:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_24:
    v29 = *(_QWORD *)(v41 + 72);
    sub_10001F580(*(_QWORD *)(v12 + 48) + v29 * v24, (uint64_t)v11, a2);
    Hasher.init(_seed:)(v43, *(_QWORD *)(v14 + 40));
    v42(v43);
    result = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(v14 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v19 + 8 * (v31 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v19 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v19 + 8 * v32);
      }
      while (v36 == -1);
      v22 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = sub_10001F580((uint64_t)v11, *(_QWORD *)(v14 + 48) + v22 * v29, a2);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release(v12);
  v7 = v38;
  v26 = v40;
LABEL_35:
  v37 = 1 << *(_BYTE *)(v12 + 32);
  if (v37 > 63)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  result = swift_release(v12);
  *v7 = v14;
  return result;
}

void sub_1004867EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C80);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_34;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_34;
          v18 = v8[v7];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              v29 = 1 << *(_BYTE *)(v3 + 32);
              if (v29 > 63)
                bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v8 = -1 << v29;
              v2 = v30;
              *(_QWORD *)(v3 + 16) = 0;
              break;
            }
            v18 = v8[v19];
            if (!v18)
            {
              while (1)
              {
                v7 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v7 >= v12)
                  goto LABEL_34;
                v18 = v8[v7];
                ++v19;
                if (v18)
                  goto LABEL_24;
              }
            }
            v7 = v19;
          }
        }
LABEL_24:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v20 + 16));
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100486A80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release();
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      TTRSectionID.hash(into:)(v31, v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100486D38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CC8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

Swift::Int sub_100486FB8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    result = swift_retain(v4);
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_36;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_36;
          v20 = v9[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v12)
              goto LABEL_36;
            v20 = v9[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v20 = v9[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_42;
                  if (v15 >= v12)
                    goto LABEL_36;
                  v20 = v9[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_26:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v18);
      result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release(v4);
  *v3 = v7;
  return result;
}

void sub_100487250(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD v44[9];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v43 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10002A750(&qword_100660C88);
  v11 = static _SetStorage.resize(original:capacity:move:)(v10, a1, 1);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_39;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 56);
  v42 = (_QWORD *)(v10 + 56);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v40 = v2;
  v41 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 56;
  swift_retain();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_26;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v22 >= v41)
      goto LABEL_35;
    v23 = v42[v22];
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_35;
      v23 = v42[v18];
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v41)
          goto LABEL_35;
        v23 = v42[v18];
        if (!v23)
          break;
      }
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_26:
    v25 = v10;
    v26 = *(_QWORD *)(v10 + 48);
    v27 = *(_QWORD *)(v43 + 72);
    sub_10001F580(v26 + v27 * v21, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v28 = Hasher.init(_seed:)(v44, *(_QWORD *)(v12 + 40));
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v28);
    TTRRemindersListViewModel.ItemID.hash(into:)(v44, v29);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v30 = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v12 + 32);
    v32 = v30 & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v17 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    sub_10001F580((uint64_t)v9, *(_QWORD *)(v12 + 48) + v19 * v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ++*(_QWORD *)(v12 + 16);
    v10 = v25;
  }
  v24 = v22 + 3;
  if (v24 < v41)
  {
    v23 = v42[v24];
    if (!v23)
    {
      while (1)
      {
        v18 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_41;
        if (v18 >= v41)
          goto LABEL_35;
        v23 = v42[v18];
        ++v24;
        if (v23)
          goto LABEL_25;
      }
    }
    v18 = v24;
    goto LABEL_25;
  }
LABEL_35:
  swift_release();
  v2 = v40;
  v38 = 1 << *(_BYTE *)(v10 + 32);
  if (v38 > 63)
    bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v42 = -1 << v38;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_39:
  swift_release();
  *v2 = v12;
}

void sub_1004875F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CB0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

Swift::Int sub_1004878A0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(_QWORD *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(_QWORD *);
  _QWORD v42[9];

  v41 = a4;
  v7 = v4;
  v9 = a2(0);
  v40 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v37 = v7;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v39 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v25 >= v38)
      goto LABEL_35;
    v26 = v39[v25];
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_35;
      v26 = v39[v21];
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_35;
        v26 = v39[v21];
        if (!v26)
          break;
      }
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v40 + 72);
    sub_10001F580(*(_QWORD *)(v12 + 48) + v28 * v24, (uint64_t)v11, a2);
    Hasher.init(_seed:)(v42, *(_QWORD *)(v14 + 40));
    v41(v42);
    result = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = sub_10001F580((uint64_t)v11, *(_QWORD *)(v14 + 48) + v22 * v28, a2);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 < v38)
  {
    v26 = v39[v27];
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_41;
        if (v21 >= v38)
          goto LABEL_35;
        v26 = v39[v21];
        ++v27;
        if (v26)
          goto LABEL_25;
      }
    }
    v21 = v27;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v37;
  v36 = 1 << *(_BYTE *)(v12 + 32);
  if (v36 > 63)
    bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v39 = -1 << v36;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  result = swift_release(v12);
  *v7 = v14;
  return result;
}

Swift::Int sub_100487BF0(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  Swift::Int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C70);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = result;
  if (*(_QWORD *)(v3 + 16))
  {
    v29 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v2 = v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v20 + 16));
      result = Hasher._finalize()();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

void sub_100487E98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_10065F848);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100488174(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660CB8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x1004884D0);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

void sub_1004884E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_10065F860);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

uint64_t sub_100488790(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;

  v48 = a4;
  v49 = a5;
  v7 = v5;
  v47 = a2;
  v9 = a2(0);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10002A750(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v45 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v7;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      goto LABEL_35;
    v26 = v45[v25];
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v26 = v45[v21];
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v44)
          goto LABEL_35;
        v26 = v45[v21];
        if (!v26)
          break;
      }
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = v12;
    v29 = *(_QWORD *)(v12 + 48);
    v30 = *(_QWORD *)(v46 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 32);
    v31(v11, v29 + v30 * v24, v9);
    v32 = *(_QWORD *)(v14 + 40);
    v33 = sub_1000175C8(v48, v47, v49);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v9, v33);
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(*(_QWORD *)(v14 + 48) + v22 * v30, v11, v9);
    ++*(_QWORD *)(v14 + 16);
    v12 = v28;
  }
  v27 = v25 + 3;
  if (v27 < v44)
  {
    v26 = v45[v27];
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_41;
        if (v21 >= v44)
          goto LABEL_35;
        v26 = v45[v21];
        ++v27;
        if (v26)
          goto LABEL_25;
      }
    }
    v21 = v27;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v43;
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 > 63)
    bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v45 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  result = swift_release(v12);
  *v7 = v14;
  return result;
}

void sub_100488AF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10002A750(&qword_100660C98);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = *(_QWORD *)(v3 + 48) + 16 * v16;
      v21 = *(_QWORD *)v20;
      v22 = *(unsigned __int8 *)(v20 + 8);
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      TTRListOrCustomSmartList.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v6 + 48) + 16 * v13;
      *(_QWORD *)v14 = v21;
      *(_BYTE *)(v14 + 8) = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

Swift::Int sub_100488DD4(uint64_t a1, uint64_t a2)
{
  return sub_10048920C(a1, a2, &qword_100660C80, &qword_1006463D0, (void (*)(unint64_t))sub_1004867EC);
}

Swift::Int sub_100488DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_10002A750(&qword_1006576D0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_100486FB8(v16 + 1, &qword_1006576D0);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_100488FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_10002A750(&qword_100660C08);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for REMObjectID_Codable(0);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_100486FB8(v16 + 1, &qword_100660C08);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1004891F0(uint64_t a1, uint64_t a2)
{
  return sub_10048920C(a1, a2, &qword_100660C70, (uint64_t *)&unk_100640E20, (void (*)(unint64_t))sub_100487BF0);
}

Swift::Int sub_10048920C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(unint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;

  if (a2)
  {
    sub_10002A750(a3);
    v9 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v27 = v9;
    v10 = __CocoaSet.makeIterator()(a1);
    for (i = __CocoaSet.Iterator.next()(); i; i = __CocoaSet.Iterator.next()())
    {
      v25[0] = i;
      v19 = sub_10002A750(a4);
      swift_dynamicCast(&v26, v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
      v20 = *(_QWORD *)(v9 + 16);
      if (*(_QWORD *)(v9 + 24) <= v20)
      {
        a5(v20 + 1);
        v9 = v27;
      }
      v12 = v26;
      Hasher.init(_seed:)(v25, *(_QWORD *)(v9 + 40));
      Hasher._combine(_:)(*(_QWORD *)(v12 + 16));
      result = Hasher._finalize()();
      v14 = v9 + 56;
      v15 = -1 << *(_BYTE *)(v9 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v9 + 56 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v9 + 56 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = 0;
        v22 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v23 = v17 == v22;
          if (v17 == v22)
            v17 = 0;
          v21 |= v23;
          v24 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v24 == -1);
        v18 = __clz(__rbit64(~v24)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v12;
      ++*(_QWORD *)(v9 + 16);
    }
    swift_release(v10);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v9;
}

unint64_t sub_100489404(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_100489484(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  v4 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_100489524(uint64_t a1, unint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(_QWORD *), uint64_t (*a7)(char *, uint64_t))
{
  uint64_t *v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD v35[9];

  v15 = a4(0);
  v34 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = *(_QWORD *)(*v7 + 16);
  v19 = *(_QWORD *)(*v7 + 24);
  v33 = v7;
  if (v19 > v18 && (a3 & 1) != 0)
    goto LABEL_12;
  v20 = v18 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1004864C0(v20, a4, a5, a6);
  }
  else
  {
    if (v19 > v18)
    {
      sub_100482944(a4, a5);
      goto LABEL_12;
    }
    sub_100483E74(v20, a4, a5, a6);
  }
  v21 = *v7;
  Hasher.init(_seed:)(v35, *(_QWORD *)(*v7 + 40));
  a6(v35);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v21 + 32);
  a2 = v22 & ~v23;
  if (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v32 = v15;
    v24 = ~v23;
    v25 = *(_QWORD *)(v34 + 72);
    do
    {
      sub_10002B1E8(*(_QWORD *)(v21 + 48) + v25 * a2, (uint64_t)v17, a4);
      v26 = a7(v17, a1);
      sub_10001F544((uint64_t)v17, a4);
      if ((v26 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v24;
    }
    while (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v27 = *v33;
  *(_QWORD *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_10001F580(a1, *(_QWORD *)(v27 + 48) + *(_QWORD *)(v34 + 72) * a2, a4);
  v29 = *(_QWORD *)(v27 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (!v30)
  {
    *(_QWORD *)(v27 + 16) = v31;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v32);
  __break(1u);
  return result;
}

void sub_100489720(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[9];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100486A80(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100482CE8();
      goto LABEL_14;
    }
    sub_1004843C0(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v3 + 40));
  TTRSectionID.hash(into:)(v22, a1);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = *(void **)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v14 = v13;
    LOBYTE(v13) = static TTRSectionID.__derived_enum_equals(_:_:)(v13, a1);

    if ((v13 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRSectionID);
      __break(1u);
    }
    else
    {
      v15 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v16 = *(void **)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v17 = v16;
        LOBYTE(v16) = static TTRSectionID.__derived_enum_equals(_:_:)(v16, a1);

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

void sub_1004898A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100486D38(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_100482E90();
      goto LABEL_14;
    }
    sub_100484648(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ObjectIdentifier);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_1004899C8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100486FB8(v9, &qword_100660C08);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100483024(&qword_100660C08);
      goto LABEL_14;
    }
    sub_1004848A8(v9, &qword_100660C08);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for REMObjectID_Codable(0);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_100489B5C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v39 = a1;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v35 - v14;
  v16 = *(_QWORD *)(*v3 + 16);
  v17 = *(_QWORD *)(*v3 + 24);
  v36 = v7;
  v37 = v3;
  if (v17 > v16 && (a3 & 1) != 0)
    goto LABEL_12;
  v18 = v16 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100487250(v18);
  }
  else
  {
    if (v17 > v16)
    {
      sub_10048336C((uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, &qword_100660C88);
      goto LABEL_12;
    }
    sub_100484B1C(v18);
  }
  v19 = *v3;
  v20 = Hasher.init(_seed:)(v40, *(_QWORD *)(*v3 + 40));
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v20);
  TTRRemindersListViewModel.ItemID.hash(into:)(v40, v21);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v19 + 32);
  a2 = v22 & ~v23;
  v38 = v19;
  v24 = v19 + 56;
  if (((*(_QWORD *)(v19 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v35 = v6;
    v25 = ~v23;
    v26 = *(_QWORD *)(v7 + 72);
    do
    {
      v27 = sub_10002B1E8(*(_QWORD *)(v38 + 48) + v26 * a2, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v28 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v27);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v28);
      v29 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v15, v13);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((v29 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v25;
    }
    while (((*(_QWORD *)(v24 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v30 = *v37;
  *(_QWORD *)(*v37 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_10001F580(v39, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v36 + 72) * a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v32 = *(_QWORD *)(v30 + 16);
  v33 = __OFADD__(v32, 1);
  v34 = v32 + 1;
  if (!v33)
  {
    *(_QWORD *)(v30 + 16) = v34;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v35);
  __break(1u);
  return result;
}

void sub_100489DEC(Swift::UInt a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1004875F8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1004831C4();
      goto LABEL_14;
    }
    sub_100484E84(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v19, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(a1);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      type metadata accessor for REMReminderPriorityLevel(0);
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v14);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = a1;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
}

uint64_t sub_100489F38(uint64_t a1, unint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(_QWORD *), uint64_t (*a7)(char *, uint64_t))
{
  uint64_t *v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD v35[9];

  v15 = a4(0);
  v34 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = *(_QWORD *)(*v7 + 16);
  v19 = *(_QWORD *)(*v7 + 24);
  v33 = v7;
  if (v19 > v18 && (a3 & 1) != 0)
    goto LABEL_12;
  v20 = v18 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1004878A0(v20, a4, a5, a6);
  }
  else
  {
    if (v19 > v18)
    {
      sub_10048336C(a4, a5);
      goto LABEL_12;
    }
    sub_1004850FC(v20, a4, a5, a6);
  }
  v21 = *v7;
  Hasher.init(_seed:)(v35, *(_QWORD *)(*v7 + 40));
  a6(v35);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v21 + 32);
  a2 = v22 & ~v23;
  if (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v32 = v15;
    v24 = ~v23;
    v25 = *(_QWORD *)(v34 + 72);
    do
    {
      sub_10002B1E8(*(_QWORD *)(v21 + 48) + v25 * a2, (uint64_t)v17, a4);
      v26 = a7(v17, a1);
      sub_10001F544((uint64_t)v17, a4);
      if ((v26 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v24;
    }
    while (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v27 = *v33;
  *(_QWORD *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_10001F580(a1, *(_QWORD *)(v27 + 48) + *(_QWORD *)(v34 + 72) * a2, a4);
  v29 = *(_QWORD *)(v27 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (!v30)
  {
    *(_QWORD *)(v27 + 16) = v31;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v32);
  __break(1u);
  return result;
}

Swift::Int sub_10048A134(Swift::Int result, unint64_t a2, char a3, void (*a4)(unint64_t), uint64_t *a5, void (*a6)(unint64_t), uint64_t (*a7)(void))
{
  uint64_t *v7;
  Swift::Int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  Swift::UInt v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[9];

  v10 = result;
  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    if ((a3 & 1) == 0)
      a4 = a6;
    if ((a3 & 1) != 0 || v12 <= v11)
    {
      a4(v11 + 1);
      v14 = *v7;
      Hasher.init(_seed:)(v24, *(_QWORD *)(*v7 + 40));
      v15 = *(_QWORD *)(v10 + 16);
      Hasher._combine(_:)(v15);
      result = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v14 + 32);
      a2 = result & ~v16;
      if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      {
        v17 = *(_QWORD *)(v14 + 48);
        if (*(_QWORD *)(*(_QWORD *)(v17 + 8 * a2) + 16) == v15)
        {
LABEL_14:
          v19 = sub_10002A750(a5);
          result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v19);
          __break(1u);
        }
        else
        {
          v18 = ~v16;
          while (1)
          {
            a2 = (a2 + 1) & v18;
            if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
              break;
            if (*(_QWORD *)(*(_QWORD *)(v17 + 8 * a2) + 16) == v15)
              goto LABEL_14;
          }
        }
      }
    }
    else
    {
      result = a7();
    }
  }
  v20 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = v10;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
  return result;
}

void sub_10048A29C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100487E98(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10048372C();
      goto LABEL_22;
    }
    sub_100485690(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

uint64_t sub_10048A434(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100488790(v12, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_10065F850, (unint64_t *)&qword_1006463A0, (uint64_t)&protocol conformance descriptor for IndexPath);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100483A98((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, &qword_10065F850);
      goto LABEL_12;
    }
    sub_100485EF4(v12, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_10065F850, (unint64_t *)&qword_1006463A0, (uint64_t)&protocol conformance descriptor for IndexPath);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_1000175C8((unint64_t *)&qword_1006463A0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_1000175C8((unint64_t *)&qword_10063F648, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10048A688(char a1, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD v15[9];

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100488174(v8);
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_10048593C(v8);
LABEL_8:
      Hasher.init(_seed:)(v15, *(_QWORD *)(*(_QWORD *)v3 + 40));
      __asm { BR              X10 }
    }
    sub_1004838FC(&qword_100660CB8);
  }
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x10048AA14);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

void sub_10048AA78(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1004884E8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1004838FC(&qword_10065F860);
      goto LABEL_14;
    }
    sub_100485C7C(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRISmartListFilterEditorViewController.Filter);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

uint64_t sub_10048ABD4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100488790(v12, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_100660C78, &qword_1006463A8, (uint64_t)&protocol conformance descriptor for UUID);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100483A98((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_100660C78);
      goto LABEL_12;
    }
    sub_100485EF4(v12, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_100660C78, &qword_1006463A8, (uint64_t)&protocol conformance descriptor for UUID);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_1000175C8((unint64_t *)&qword_1006463B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10048AE28(uint64_t a1, char a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v8 = a2 & 1;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100488AF0(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100483CBC();
      goto LABEL_14;
    }
    sub_100486210(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  TTRListOrCustomSmartList.hash(into:)(v29, a1, v8);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48) + 16 * a3;
    v16 = *(id *)v15;
    v17 = *(unsigned __int8 *)(v15 + 8);
    v18 = *(id *)v15;
    LOBYTE(v16) = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)(v16, v17, a1, v8);

    if ((v16 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRListOrCustomSmartList);
      __break(1u);
    }
    else
    {
      v19 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v20 = *(_QWORD *)(v12 + 48) + 16 * a3;
        v21 = *(id *)v20;
        v22 = *(unsigned __int8 *)(v20 + 8);
        v23 = *(id *)v20;
        LOBYTE(v21) = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)(v21, v22, a1, v8);

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = *(_QWORD *)(v24 + 48) + 16 * a3;
  *(_QWORD *)v25 = a1;
  *(_BYTE *)(v25 + 8) = (_DWORD)v8 != 0;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

uint64_t sub_10048AFF4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void (*sub_10048B07C(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10048B178(v6, a2, a3);
  return sub_10002AD0C;
}

void (*sub_10048B0D0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10048B1E4(v6, a2, a3);
  return sub_10002AD0C;
}

void (*sub_10048B124(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10048B250(v6, a2, a3);
  return sub_10002AD0C;
}

uint64_t *sub_10048B178(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)j__s9Reminders29TTRRemindersListTreeViewModelC13AuxiliaryDataVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10048B1E4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for TTRITemplateSavingDismissAnimationCoordinator.SourceView;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10048B250(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for TTRRemindersListTreeViewModel.AuxiliaryData;
  }
  __break(1u);
  return result;
}

int64_t sub_10048B2C0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_10048B3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[9];
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v30 = a1;
  v31 = a2;
  v2 = type metadata accessor for DateComponents(0);
  v29[7] = *(_QWORD *)(v2 - 8);
  v29[8] = v2;
  __chkstk_darwin(v2);
  v29[2] = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v29[3] = (char *)v29 - v5;
  __chkstk_darwin(v6);
  v29[0] = (char *)v29 - v7;
  __chkstk_darwin(v8);
  v29[1] = (char *)v29 - v9;
  v10 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  __chkstk_darwin(v10);
  v29[6] = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v29[5] = (char *)v29 - v13;
  __chkstk_darwin(v14);
  v29[4] = (char *)v29 - v15;
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  v22 = sub_10002A750(&qword_100660E50);
  __chkstk_darwin(v22);
  v24 = (char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (uint64_t)&v24[*(int *)(v25 + 48)];
  sub_10002B1E8(v30, (uint64_t)v24, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v27 = v31;
  v31 = v26;
  sub_10002B1E8(v27, v26, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v32 = v24;
  v28 = (char *)sub_10048B624 + 4 * word_100537972[swift_getEnumCaseMultiPayload(v24, v10)];
  __asm { BR              X10 }
}

uint64_t sub_10048B624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;

  v3 = *(_QWORD *)(v2 - 120);
  sub_10002B1E8(v3, v1, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v4 = *(_QWORD *)v1;
  v5 = *(void **)(v1 + 8);
  v6 = *(void **)(v1 + 16);
  v7 = *(_BYTE *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v2 - 128);
  if (!swift_getEnumCaseMultiPayload(v9, v0))
  {
    *(_QWORD *)(v2 - 136) = v5;
    v11 = *(_QWORD *)v9;
    v10 = *(void **)(v9 + 8);
    v12 = *(void **)(v9 + 16);
    v13 = *(unsigned __int8 *)(v9 + 24);
    v14 = *(_QWORD *)(v9 + 32);
    v15 = sub_100096344(v4, v11);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v4);
    if ((v15 & 1) != 0)
    {
      v16 = v12;
      *(_DWORD *)(v2 - 128) = v13;
      sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
      v17 = *(void **)(v2 - 136);
      if ((static NSObject.== infix(_:_:)(v17, v10) & 1) != 0)
      {
        *(_QWORD *)(v2 - 144) = v10;
        *(_QWORD *)(v2 - 96) = v6;
        *(_BYTE *)(v2 - 88) = v7;
        v18 = v16;
        *(_QWORD *)(v2 - 112) = v16;
        v19 = *(_DWORD *)(v2 - 128);
        *(_BYTE *)(v2 - 104) = v19;
        v20 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
        v21 = sub_100017608(qword_100660E58, &qword_100649C20, REMReminder_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        if ((((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:))(v2 - 96, v2 - 112, v20, v21) & 1) != 0)
        {
          v22 = *(_QWORD *)(v2 - 120);
          if (v8)
          {
            if (v14)
            {
              swift_bridgeObjectRetain(v14);
              swift_bridgeObjectRetain(v8);
              sub_10048056C(v23, v14);
              v25 = v24;
              swift_bridgeObjectRelease(v14);
              sub_10004E09C(v18, *(_DWORD *)(v2 - 128));
              sub_10004E09C(v6, v7);
              swift_bridgeObjectRelease_n(v8, 2);
              swift_bridgeObjectRelease(v14);

              if ((v25 & 1) != 0)
                goto LABEL_20;
            }
            else
            {
              swift_bridgeObjectRetain(v8);
              sub_10004E09C(v18, *(_DWORD *)(v2 - 128));
              sub_10004E09C(v6, v7);
              swift_bridgeObjectRelease_n(v8, 2);

            }
          }
          else
          {
            sub_10004E09C(v18, *(_DWORD *)(v2 - 128));
            sub_10004E09C(v6, v7);

            if (!v14)
            {
LABEL_20:
              sub_10001F544(v22, type metadata accessor for TTRRemindersListMovingRemindersParams);
              v27 = 1;
              return v27 & 1;
            }
            swift_bridgeObjectRelease(v14);
          }
          v26 = v22;
LABEL_15:
          sub_10001F544(v26, type metadata accessor for TTRRemindersListMovingRemindersParams);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease(v14);
        sub_10004E09C(v16, v19);

      }
      else
      {
        swift_bridgeObjectRelease(v14);
        sub_10004E09C(v16, *(_DWORD *)(v2 - 128));

      }
      swift_bridgeObjectRelease(v8);
      sub_10004E09C(v6, v7);

    }
    else
    {
      swift_bridgeObjectRelease(v14);
      sub_10004E09C(v12, v13);

      swift_bridgeObjectRelease(v8);
      sub_10004E09C(v6, v7);

    }
    v26 = *(_QWORD *)(v2 - 120);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(v8);
  sub_10004E09C(v6, v7);
  swift_bridgeObjectRelease(v4);

  sub_1000073A0(v3, &qword_100660E50);
LABEL_16:
  v27 = 0;
  return v27 & 1;
}

void sub_10048C550(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

BOOL sub_10048C5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v8;
  char v9;

  return !a8 && v9 == v8;
}

void sub_10048C970(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

BOOL sub_10048C9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v6;
  char v7;

  return !a6 && v7 == v6;
}

void sub_10048CBE4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10002A750(&qword_1006576D0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v12);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

_QWORD *sub_10048CF40(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[10];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1003D7F30(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v19 = v2 & 0xC000000000000001;
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v5 = 0;
    v20 = v3;
    v21 = v2;
    while (v3 != v5)
    {
      if (v19)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      TTRParticipantModel.init(sharee:)(v27);
      v8 = objc_msgSend(v7, "objectID");
      v9 = objc_msgSend(v7, "objectID");
      v10 = static NSObject.== infix(_:_:)(v37, v9);

      TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)(&v28, v8, 0, v27, v10 & 1, 0);
      v11 = v28;
      v25 = v30;
      v26 = v29;
      v23 = v32;
      v24 = v31;
      v22 = v33;
      v12 = v34;
      v13 = v35;
      v14 = v36;

      v16 = _swiftEmptyArrayStorage[2];
      v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
        sub_1003D7F30(v15 > 1, v16 + 1, 1);
      _swiftEmptyArrayStorage[2] = v16 + 1;
      v17 = &_swiftEmptyArrayStorage[14 * v16];
      v17[4] = v11;
      ++v5;
      *(_OWORD *)(v17 + 5) = v26;
      *(_OWORD *)(v17 + 7) = v25;
      *(_OWORD *)(v17 + 9) = v24;
      *(_OWORD *)(v17 + 11) = v23;
      *(_OWORD *)(v17 + 13) = v22;
      v17[15] = v12;
      v17[16] = v13;
      v17[17] = v14;
      v3 = v20;
      v2 = v21;
      if (v20 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v18 = v2;
    else
      v18 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

Swift::Int sub_10048D19C(Swift::Int a1)
{
  return sub_10048D1B4(a1, &qword_100660C70);
}

Swift::Int sub_10048D1A8(Swift::Int a1)
{
  return sub_10048D1B4(a1, &qword_100660C80);
}

Swift::Int sub_10048D1B4(Swift::Int result, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  BOOL v12;
  Swift::Int v13;
  Swift::UInt v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::UInt v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v3 = result;
  v4 = (unint64_t)result >> 62;
  if ((unint64_t)result >> 62)
  {
    if (result < 0)
      v8 = result;
    else
      v8 = result & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(result);
    v5 = _CocoaArrayWrapper.endIndex.getter(v8);
    result = swift_bridgeObjectRelease(v3);
    if (v5)
    {
LABEL_3:
      sub_10002A750(a2);
      result = static _SetStorage.allocate(capacity:)(v5);
      v6 = (_QWORD *)result;
      if (!v4)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
  }
  v6 = &_swiftEmptySetSingleton;
  if (!v4)
  {
LABEL_4:
    v7 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return (Swift::Int)v6;
    goto LABEL_15;
  }
LABEL_11:
  if (v3 < 0)
    v9 = v3;
  else
    v9 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v7 = _CocoaArrayWrapper.endIndex.getter(v9);
  result = swift_bridgeObjectRelease(v3);
  if (!v7)
    return (Swift::Int)v6;
LABEL_15:
  v10 = (char *)(v6 + 7);
  if ((v3 & 0xC000000000000001) != 0)
  {
    v11 = 0;
    while (1)
    {
      while (1)
      {
        result = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v3);
        v12 = __OFADD__(v11++, 1);
        if (v12)
        {
          __break(1u);
          goto LABEL_40;
        }
        v13 = result;
        Hasher.init(_seed:)(v38, v6[5]);
        v14 = *(_QWORD *)(v13 + 16);
        Hasher._combine(_:)(v14);
        result = Hasher._finalize()();
        v15 = -1 << *((_BYTE *)v6 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        v18 = *(_QWORD *)&v10[8 * (v16 >> 6)];
        v19 = 1 << v16;
        v20 = v6[6];
        if (((1 << v16) & v18) != 0)
          break;
LABEL_25:
        *(_QWORD *)&v10[8 * v17] = v19 | v18;
        *(_QWORD *)(v20 + 8 * v16) = v13;
        v22 = v6[2];
        v12 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v12)
          goto LABEL_41;
        v6[2] = v23;
        if (v11 == v7)
          return (Swift::Int)v6;
      }
      if (*(_QWORD *)(*(_QWORD *)(v20 + 8 * v16) + 16) != v14)
      {
        v21 = ~v15;
        do
        {
          v16 = (v16 + 1) & v21;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)&v10[8 * (v16 >> 6)];
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_25;
        }
        while (*(_QWORD *)(*(_QWORD *)(v20 + 8 * v16) + 16) != v14);
      }
      swift_unknownObjectRelease(v13);
      if (v11 == v7)
        return (Swift::Int)v6;
    }
  }
  v24 = 0;
  v25 = v3 + 32;
  v26 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v26)
  {
    v29 = *(_QWORD *)(v25 + 8 * v24);
    Hasher.init(_seed:)(v38, v6[5]);
    v30 = *(_QWORD *)(v29 + 16);
    Hasher._combine(_:)(v30);
    result = Hasher._finalize()();
    v31 = -1 << *((_BYTE *)v6 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    v34 = *(_QWORD *)&v10[8 * (v32 >> 6)];
    v35 = 1 << v32;
    v36 = v6[6];
    if (((1 << v32) & v34) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v36 + 8 * v32) + 16) == v30)
        goto LABEL_31;
      v37 = ~v31;
      while (1)
      {
        v32 = (v32 + 1) & v37;
        v33 = v32 >> 6;
        v34 = *(_QWORD *)&v10[8 * (v32 >> 6)];
        v35 = 1 << v32;
        if ((v34 & (1 << v32)) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v36 + 8 * v32) + 16) == v30)
          goto LABEL_31;
      }
    }
    *(_QWORD *)&v10[8 * v33] = v35 | v34;
    *(_QWORD *)(v36 + 8 * v32) = v29;
    v27 = v6[2];
    v12 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (v12)
      goto LABEL_42;
    v6[2] = v28;
    result = swift_retain(v29);
LABEL_31:
    if (++v24 == v7)
      return (Swift::Int)v6;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10048D490(uint64_t result, int a2, char a3, uint64_t a4)
{
  if ((a3 & 1) != 0)
    goto LABEL_10;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
      return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10048D4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  _BYTE v24[24];

  v3 = v2;
  v6 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  *(_QWORD *)(v13 + 8) = a2;
  v14 = swift_unknownObjectWeakAssign(v13, a1);
  result = swift_unknownObjectWeakLoadStrong(v14);
  if (result)
  {
    v16 = result;
    v17 = *(_QWORD *)(v13 + 8);
    v18 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v24, 0, 0);
    sub_10000735C(v18, (uint64_t)v8, &qword_100649CA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_100649CA0);
    }
    else
    {
      sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      ObjectType = swift_getObjectType(v16, v20);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 56))(v12, ObjectType, v17);
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    v22 = swift_getObjectType(v16, v19);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 64))(*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging), v22, v17);
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

void *sub_10048D69C(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v12))
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, "objectID");
      v10 = objc_msgSend(a2, *a3);
      v11 = static NSObject.== infix(_:_:)(v9, v10);

      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

_QWORD *sub_10048D820(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  id v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v2 = a1[3];
  v3 = a1[4];
  sub_10001413C(a1, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 88))(v14, v2, v3);
  v4 = v15;
  if (!v15)
  {
    sub_1000073A0((uint64_t)v14, &qword_10063F580);
    return 0;
  }
  v5 = v16;
  sub_10001413C(v14, v15);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  sub_100027F10(v14);
  v7 = a1[3];
  v8 = a1[4];
  sub_10001413C(a1, v7);
  v9 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(v7, v8);
  v10 = v9;
  if (!v9)
  {
    swift_bridgeObjectRelease(v6);
    return v10;
  }
  v11 = objc_msgSend(v9, "objectID");

  if (!v11)
  {
    swift_bridgeObjectRelease(v6);
    return 0;
  }
  v12 = v11;
  v10 = sub_10048CF40(v6, (uint64_t)v12);
  swift_bridgeObjectRelease(v6);

  return v10;
}

void sub_10048D964(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_10002A750(&qword_100660C08);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v44 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    while (1)
    {
      v10 = sub_100480758(v9, a1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
        __break(1u);
        goto LABEL_43;
      }
      v12 = v10;
      v13 = NSObject._rawHashValue(seed:)(v4[5]);
      v14 = -1 << *((_BYTE *)v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        type metadata accessor for REMObjectID_Codable(0);
        v19 = *(id *)(v4[6] + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, v12);

        if ((v20 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v12);
          goto LABEL_18;
        }
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
      }
      *(_QWORD *)&v8[8 * v16] = v18 | v17;
      *(_QWORD *)(v4[6] + 8 * v15) = v12;
      v24 = v4[2];
      v11 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v11)
        goto LABEL_44;
      v4[2] = v25;
LABEL_18:
      if (v9 == v44)
        return;
    }
  }
  v26 = 0;
  v42 = a1 + 32;
  v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v43)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      type metadata accessor for REMObjectID_Codable(0);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_29:

        v5 = v44;
        goto LABEL_30;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_29;
      }
      v5 = v44;
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_45;
    v4[2] = v41;
LABEL_30:
    if (++v26 == v5)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_10048DC9C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_100027F10((_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = type metadata accessor for TTRListType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
    {
      case 0u:
      case 1u:
      case 5u:

        break;
      case 3u:
        v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
        break;
      case 4u:
        swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[5] + 8));

  v9 = *(char **)(v6 + v1[9] + 8);
  if ((unint64_t)(v9 - 1) >= 3)

  v10 = v6 + v1[10];
  v11 = type metadata accessor for TTRRemindersListTip(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = v10 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
    v13 = type metadata accessor for AnyTip(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[22] + 8));
  v14 = (_QWORD *)(v6 + v1[24]);
  v15 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16))
    {
      swift_bridgeObjectRelease(*v14);
      v17 = (char *)v14 + *(int *)(v16 + 20);
      v18 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
    v19 = (char *)v14 + *(int *)(v15 + 20);
    v20 = *((_QWORD *)v19 + 1);
    if (v20)
    {
      swift_bridgeObjectRelease(v20);

    }
  }
  v21 = v6 + v1[25];
  v22 = type metadata accessor for TTRTemplatePublicLinkData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
  {
    v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
    {
      v24 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
    }
  }
  return swift_deallocObject(v0, v5 + v4 + 2, v3 | 7);
}

uint64_t sub_10048DF48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  unsigned __int8 *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (char *)v1 + v4;
  v6 = (unsigned __int8 *)v1 + *(_QWORD *)(v3 + 64) + v4;
  v7 = *v6;
  if (v6[1])
    v8 = 256;
  else
    v8 = 0;
  v9 = v8 | v7;
  v10 = v1[5];
  v11 = v1[6];
  sub_10001413C(v1 + 2, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v5, v9, v10, v11);
}

_QWORD *sub_10048DFE4(uint64_t a1, void (*a2)(unint64_t, id), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, id);
  uint64_t v22;
  _QWORD *v23;

  v21 = a2;
  v22 = a3;
  v4 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v20 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = _swiftEmptyArrayStorage;
  sub_1003D7FD0(0, 0, 0);
  v7 = v23;
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v8)
  {
    while (1)
    {
      v9 = 0;
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
      v19 = a1 & 0xC000000000000001;
      while (v19)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
LABEL_7:
        v11 = v10;
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_14;
        v21(v9, v10);

        v23 = v7;
        v14 = v7[2];
        v13 = v7[3];
        if (v14 >= v13 >> 1)
        {
          sub_1003D7FD0(v13 > 1, v14 + 1, 1);
          v7 = v23;
        }
        v7[2] = v14 + 1;
        sub_10001F580((uint64_t)v6, (uint64_t)v7+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v14, type metadata accessor for TTRRemindersListUncommittedReminder);
        ++v9;
        if (v12 == v8)
          goto LABEL_19;
      }
      if (v9 < *(_QWORD *)(v18 + 16))
        break;
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      if (a1 < 0)
        v15 = a1;
      else
        v15 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v8 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (!v8)
        goto LABEL_19;
    }
    v10 = *(id *)(a1 + 8 * v9 + 32);
    goto LABEL_7;
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  return v7;
}

_QWORD *sub_10048E1C0(uint64_t a1, uint64_t (*a2)(char *, _QWORD, char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, _QWORD, char *);
  uint64_t v37;
  _QWORD *v38;

  v36 = a2;
  v37 = a3;
  v4 = sub_10002A750(&qword_100659458);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10002A750(&qword_100658960);
  __chkstk_darwin(v31);
  v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v30 = (uint64_t *)((char *)&v27 - v9);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  v38 = _swiftEmptyArrayStorage;
  sub_1003D7FA4(0, 0, 0);
  v13 = v38;
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v32 = v14;
  v27 = a1;
  if (v14)
  {
    v15 = 0;
    v16 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v28 = *(_QWORD *)(v16 + 72);
    v29 = v6;
    v18 = v31;
    do
    {
      v19 = (uint64_t)&v33[*(int *)(v18 + 48)];
      sub_10002B1E8(v17, v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = (uint64_t)v30;
      v21 = (uint64_t)v30 + *(int *)(v18 + 48);
      *v30 = v15;
      sub_10001F580(v19, v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10000F614(v20, (uint64_t)v12, &qword_100658960);
      v22 = *(int *)(v35 + 48);
      *(_QWORD *)&v6[v22] = v36(v6, *(_QWORD *)v12, &v12[*(int *)(v18 + 48)]);
      sub_1000073A0((uint64_t)v12, &qword_100658960);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_1003D7FA4(0, v13[2] + 1, 1);
        v13 = v38;
      }
      v24 = v13[2];
      v23 = v13[3];
      if (v24 >= v23 >> 1)
      {
        sub_1003D7FA4(v23 > 1, v24 + 1, 1);
        v13 = v38;
      }
      ++v15;
      v13[2] = v24 + 1;
      v25 = (uint64_t)v13
          + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
          + *(_QWORD *)(v34 + 72) * v24;
      v6 = v29;
      sub_10000F614((uint64_t)v29, v25, &qword_100659458);
      v17 += v28;
    }
    while (v32 != v15);
  }
  swift_bridgeObjectRelease(v27);
  return v13;
}

_QWORD *sub_10048E46C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v32 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  __chkstk_darwin(v32);
  v30 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)v28 - v8;
  result = _swiftEmptyArrayStorage;
  v33 = _swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v28[1] = v2;
    v12 = 0;
    v13 = *(_QWORD *)(v7 + 72);
    v29 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = a1 + v29;
    v31 = a2;
    v15 = a2 + 56;
    v16 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_10002B1E8(v14 + v13 * v12, (uint64_t)v9, type metadata accessor for TTRRemindersListUncommittedReminder);
      v17 = *(_QWORD *)&v9[*(int *)(v32 + 24)];
      if (v17)
      {
        v18 = objc_msgSend(*(id *)(v17 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "saveRequest");
        if (v18)
        {
          v19 = v18;
          if (*(_QWORD *)(v31 + 16))
          {
            v20 = static Hasher._hash(seed:_:)(*(_QWORD *)(v31 + 40), v18);
            v21 = -1 << *(_BYTE *)(v31 + 32);
            v22 = v20 & ~v21;
            if (((*(_QWORD *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
            {
              v23 = *(_QWORD *)(v31 + 48);
              if (*(void **)(v23 + 8 * v22) == v19)
              {
LABEL_11:

                sub_10001F580((uint64_t)v9, v30, type metadata accessor for TTRRemindersListUncommittedReminder);
                if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
                  sub_1003D7FD0(0, v16[2] + 1, 1);
                v16 = v33;
                v26 = v33[2];
                v25 = v33[3];
                v27 = v26 + 1;
                if (v26 >= v25 >> 1)
                {
                  v28[0] = v26 + 1;
                  sub_1003D7FD0(v25 > 1, v26 + 1, 1);
                  v27 = v28[0];
                  v16 = v33;
                }
                v16[2] = v27;
                sub_10001F580(v30, (uint64_t)v16 + v29 + v26 * v13, type metadata accessor for TTRRemindersListUncommittedReminder);
                goto LABEL_18;
              }
              v24 = ~v21;
              while (1)
              {
                v22 = (v22 + 1) & v24;
                if (((*(_QWORD *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
                  break;
                if (*(void **)(v23 + 8 * v22) == v19)
                  goto LABEL_11;
              }
            }
          }

        }
      }
      sub_10001F544((uint64_t)v9, type metadata accessor for TTRRemindersListUncommittedReminder);
LABEL_18:
      if (++v12 == v11)
        return v33;
    }
  }
  return result;
}

_QWORD *sub_10048E6E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;

  v75 = a2;
  v70 = sub_10002A750(&qword_100647B00);
  __chkstk_darwin(v70);
  v69 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v68 = (uint64_t)&v56 - v6;
  v7 = sub_10002A750(&qword_1006554F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v67);
  v66 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v65 = (uint64_t)&v56 - v15;
  v16 = sub_10002A750(&qword_100658938);
  __chkstk_darwin(v16);
  v76 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_100654860);
  v19 = *(_QWORD *)(v18 - 8);
  v73 = v18;
  v74 = v19;
  __chkstk_darwin(v18);
  v64 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v59 = (uint64_t)&v56 - v22;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v58 = v2;
    v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v60 = v25;
    v61 = v24;
    v72 = *(_QWORD *)(v25 + 72);
    v57 = a1;
    swift_bridgeObjectRetain(a1);
    v71 = _swiftEmptyArrayStorage;
    v62 = v13;
    v63 = v9;
    while (1)
    {
      v77 = v75[10];
      swift_retain();
      TTRMutableTreeStorage.parent(of:)(v26);
      v27 = sub_10002A750(&qword_1006445E8);
      v28 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
      v29 = TTRTreeContentsQueryable.childIndex(of:inParent:)(v26, v13, v27, v28);
      if ((v30 & 1) != 0)
      {
        sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
        v34 = sub_10002A750(&qword_100655500);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v9, 1, 1, v34);
      }
      else
      {
        v31 = v29;
        v32 = sub_10002A750(&qword_100655500);
        v33 = *(int *)(v32 + 48);
        sub_10000F614((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
        *(_QWORD *)&v9[v33] = v31;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 0, 1, v32);
      }
      swift_release();
      v35 = sub_10002A750(&qword_100655500);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v9, 1, v35) == 1)
      {
        sub_1000073A0((uint64_t)v9, &qword_1006554F0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, 1, 1, v73);
      }
      else
      {
        v36 = *(_QWORD *)&v9[*(int *)(v35 + 48)];
        v38 = v66;
        v37 = v67;
        v39 = *(int *)(v67 + 48);
        sub_10000F614((uint64_t)v9, v66, (uint64_t *)&unk_100640EB0);
        *(_QWORD *)(v38 + v39) = v36;
        v40 = *(_QWORD *)(v38 + *(int *)(v37 + 48));
        v41 = v65;
        sub_10000F614(v38, v65, (uint64_t *)&unk_100640EB0);
        v42 = v75[4];
        ObjectType = swift_getObjectType(v75[3], v43);
        v45 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v69, 1, 1, v61);
        sub_1000B5F7C(v41, v45);
        *(_QWORD *)(v45 + *(int *)(v70 + 36)) = v40;
        v46 = v45;
        v47 = v76;
        v48 = v68;
        sub_10000F614(v46, v68, &qword_100647B00);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v48, ObjectType, v42);
        sub_1000073A0(v48, &qword_100647B00);
        v49 = v41;
        v13 = v62;
        v9 = v63;
        sub_1000073A0(v49, (uint64_t *)&unk_100640EB0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v47, 1, v73) != 1)
        {
          v50 = v59;
          sub_10000F614(v76, v59, &qword_100654860);
          sub_10000F614(v50, v64, &qword_100654860);
          if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) != 0)
            v51 = (unint64_t)v71;
          else
            v51 = sub_100455A98(0, v71[2] + 1, 1, (unint64_t)v71);
          v53 = *(_QWORD *)(v51 + 16);
          v52 = *(_QWORD *)(v51 + 24);
          if (v53 >= v52 >> 1)
            v51 = sub_100455A98(v52 > 1, v53 + 1, 1, v51);
          *(_QWORD *)(v51 + 16) = v53 + 1;
          v54 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
          v71 = (_QWORD *)v51;
          sub_10000F614(v64, v51 + v54 + *(_QWORD *)(v74 + 72) * v53, &qword_100654860);
          goto LABEL_5;
        }
      }
      sub_1000073A0(v76, &qword_100658938);
LABEL_5:
      v26 += v72;
      if (!--v23)
      {
        swift_bridgeObjectRelease(v57);
        return v71;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10048ECA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10002A750(&qword_100660C58);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_1000175C8(&qword_100660C60, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_1000175C8(&qword_100660C68, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_10048EF0C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = result;
  v9 = a2;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v3 = result;
    if (!result)
      return v9;
  }
  else
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return v9;
  }
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v3; ++i)
      {
        v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
        sub_100481320((Swift::Int *)&v8, v5);

      }
    }
    else
    {
      v6 = (void **)(v2 + 32);
      do
      {
        v7 = *v6++;
        sub_100481320((Swift::Int *)&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

void sub_10048EFE8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10002A750(&qword_100660C08);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v44 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v42 = v1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
        __break(1u);
        goto LABEL_43;
      }
      v12 = v10;
      v13 = NSObject._rawHashValue(seed:)(v4[5]);
      v14 = -1 << *((_BYTE *)v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        type metadata accessor for REMObjectID_Codable(0);
        v19 = *(id *)(v4[6] + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, v12);

        if ((v20 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v12);
          v1 = v42;
          goto LABEL_18;
        }
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v42;
      }
      *(_QWORD *)&v8[8 * v16] = v18 | v17;
      *(_QWORD *)(v4[6] + 8 * v15) = v12;
      v24 = v4[2];
      v11 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v11)
        goto LABEL_44;
      v4[2] = v25;
LABEL_18:
      if (v9 == v44)
        return;
    }
  }
  v26 = 0;
  v43 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v43)
  {
    v27 = v4[5];
    v28 = *(id *)(v1 + 32 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      type metadata accessor for REMObjectID_Codable(0);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
        goto LABEL_30;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(v4[6] + 8 * v31);
          v39 = static NSObject.== infix(_:_:)(v38, v28);

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v5 = v44;
        goto LABEL_31;
      }
LABEL_38:
      v5 = v44;
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_45;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v5)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_10048F340(uint64_t result, int a2, char a3, uint64_t a4)
{
  if ((a3 & 1) != 0)
    goto LABEL_10;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
      return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_10048F3A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_10002B1E8(v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1004815A4((uint64_t)v8, (uint64_t)v4);
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v10 += v11;
      --v9;
    }
    while (v9);
  }
}

void sub_10048F480(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_10002B1E8(v10, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1004809E8((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), &qword_10065F858, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v10 += v11;
      --v9;
    }
    while (v9);
  }
}

uint64_t sub_10048F590(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[16];
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  __int128 v43[2];
  char v44[24];
  _QWORD v45[3];
  char v46[24];
  _QWORD v47[6];

  v41 = a6;
  v40 = a5;
  v47[3] = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v47[4] = &off_100604210;
  v47[0] = a3;
  v10 = swift_allocObject(&unk_100609410, 24, 7);
  *(_QWORD *)(v10 + 16) = 0;
  v11 = swift_allocObject(&unk_100609438, 24, 7);
  *(_QWORD *)(v11 + 16) = &_swiftEmptyDictionarySingleton;
  v12 = swift_allocObject(&unk_100609460, 24, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
  v13 = (uint64_t *)(v12 + 16);
  v39 = v12;
  if ((a2 & 1) != 0)
  {
    v34 = __chkstk_darwin(v12);
    v35 = (_QWORD *)v10;
    v36 = v47;
    v37 = v11;
    v16 = sub_10046A1D0((void (*)(uint64_t))sub_10039B6F0, (uint64_t)v33, a1);
  }
  else
  {
    swift_beginAccess(v12 + 16, v43, 33, 0);
    v14 = swift_bridgeObjectRetain(a1);
    sub_1004504C0(v14);
    v15 = swift_endAccess(v43);
    __chkstk_darwin(v15);
    v34 = v10 + 16;
    v35 = v47;
    v36 = (_QWORD *)(v11 + 16);
    v16 = sub_10047648C((void (*)(_QWORD))sub_10039534C, (uint64_t)v33, a1);
  }
  v17 = v16;
  swift_bridgeObjectRelease(a1);
  sub_10002A750(&qword_1006445E8);
  v18 = (_QWORD *)TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)(v17);
  sub_100393E8C(a4, v18);
  swift_bridgeObjectRelease(a4);
  swift_beginAccess(v13, v46, 0, 0);
  v19 = *v13;
  swift_bridgeObjectRetain(*v13);
  sub_100394F90((uint64_t)v18, v19);
  swift_bridgeObjectRelease(v19);
  v20 = v40;
  if (v40)
  {
    v21 = swift_allocObject(&unk_1006094B0, 32, 7);
    v22 = v41;
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v22;
    v23 = sub_10049156C;
  }
  else
  {
    v21 = 0;
    v23 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))sub_10037D944;
    v22 = v41;
  }
  v24 = swift_allocObject(&unk_100609488, 32, 7);
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v21;
  v45[0] = v18;
  sub_100053DE4(v20, v22);
  swift_retain(v21);
  ((void (*)(__int128 *__return_ptr, _QWORD *))v23)(v43, v45);
  swift_release(v21);
  v38 = v43[0];
  swift_beginAccess(v11 + 16, v45, 0, 0);
  v25 = *(_QWORD *)(v11 + 16);
  swift_beginAccess(v10 + 16, v44, 0, 0);
  v41 = *(_QWORD *)(v10 + 16);
  sub_100010634((uint64_t)v47, (uint64_t)v43);
  v26 = type metadata accessor for TTRRemindersListTreeViewModel();
  v27 = v11;
  v28 = v10;
  v29 = v20;
  v30 = swift_allocObject(v26, 120, 7);
  *(_QWORD *)(v30 + 88) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v30 + 80) = v18;
  *(_OWORD *)(v30 + 24) = v38;
  *(_QWORD *)(v30 + 96) = v25;
  *(_QWORD *)(v30 + 104) = sub_100491564;
  *(_QWORD *)(v30 + 112) = v24;
  swift_beginAccess(v30 + 88, v42, 1, 0);
  v31 = *(_QWORD *)(v30 + 88);
  *(_QWORD *)(v30 + 88) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)(v30 + 16) = v41;
  sub_10002E37C(v43, v30 + 40);
  sub_1000381B8(v29, v22);
  sub_100027F10(v47);
  swift_release(v28);
  swift_release(v27);
  swift_release(v39);
  return v30;
}

Swift::Int sub_10048F960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10002A750(&qword_100660CF0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v25 + v4);
      Hasher.init(_seed:)(v26, *(_QWORD *)(v3 + 40));
      if (v6)
        v7 = 0x736E6D756C6F63;
      else
        v7 = 1953720684;
      if (v6)
        v8 = 0xE700000000000000;
      else
        v8 = 0xE400000000000000;
      String.hash(into:)(v26, v7, v8);
      swift_bridgeObjectRelease(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v23 = v6;
        v15 = ~v10;
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v16 = 0x736E6D756C6F63;
          else
            v16 = 1953720684;
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v17 = 0xE700000000000000;
          else
            v17 = 0xE400000000000000;
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            goto LABEL_4;
          }
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v7, v8, 0);
          swift_bridgeObjectRelease(v17);
          result = swift_bridgeObjectRelease(v8);
          if ((v19 & 1) != 0)
            goto LABEL_4;
          v11 = (v11 + 1) & v15;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v11) = v6;
      v20 = *(_QWORD *)(v3 + 16);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        break;
      *(_QWORD *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void sub_10048FB48(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a3;
  v50 = a1;
  v48 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  __chkstk_darwin(v48);
  v47 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v54 = (uint64_t)&v46 - v7;
  v8 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v8);
  v51 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for TTRRemindersListUncommittedSection(0);
  __chkstk_darwin(v46);
  v53 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v49);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v16 = sub_10002A750(&qword_100660C50);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_10064B6B0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v46 - v24;
  v55 = v3;
  swift_retain();
  sub_1003828E4(a2, (uint64_t)v18);
  v26 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48))(v18, 1, v19, v26) == 1)
  {
    sub_1000073A0((uint64_t)v18, &qword_100660C50);
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v27 = type metadata accessor for Logger(0);
    sub_100012DC4(v27, (uint64_t)qword_100660618);
    v28 = v54;
    v29 = sub_10002B1E8(a2, v54, type metadata accessor for TTRRemindersListSectionCreationLocation);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.fault.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v57 = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = v47;
      sub_10002B1E8(v28, v47, type metadata accessor for TTRRemindersListSectionCreationLocation);
      v35 = String.init<A>(describing:)(v34, v48);
      v37 = v36;
      v56 = sub_100027E40(v35, v36, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v32 + 4, v32 + 12);
      swift_bridgeObjectRelease(v37);
      sub_10001F544(v28, type metadata accessor for TTRRemindersListSectionCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Cannot resolve SectionCreationLocation {location: %s}", v32, 0xCu);
      swift_arrayDestroy(v33, 1, &type metadata for Any[8]);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      sub_10001F544(v28, type metadata accessor for TTRRemindersListSectionCreationLocation);
    }

  }
  else
  {
    sub_10000F614((uint64_t)v18, (uint64_t)v25, &qword_10064B6B0);
    sub_10002B1E8(v50, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v38 = 1;
    swift_storeEnumTagMultiPayload(v15, v49, 1);
    sub_10000735C((uint64_t)v25, (uint64_t)v22, &qword_10064B6B0);
    sub_10002B1E8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v39 = v53;
    sub_10037D3A0((uint64_t)v22, (uint64_t)v12, v53);
    v40 = sub_10002A750((uint64_t *)&unk_100649CF0);
    v41 = v40;
    v42 = v52;
    v43 = v51;
    if ((v52 & 1) != 0)
    {
      v44 = *(int *)(v40 + 48);
      sub_10002B1E8(v39 + *(int *)(v46 + 20), v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v38 = 0;
      *(_BYTE *)(v43 + v44) = 0;
    }
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v43, v38, 1, v41);
    __chkstk_darwin(v45);
    *(&v46 - 2) = v39;
    sub_10047A710(v43, v42 & 1, (uint64_t (*)(_QWORD *, __n128))sub_100491580, (uint64_t)(&v46 - 4), v55);
    sub_1000073A0(v43, (uint64_t *)&unk_100649CE0);
    sub_10001F544(v39, type metadata accessor for TTRRemindersListUncommittedSection);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000073A0((uint64_t)v25, &qword_10064B6B0);
  }
}

void sub_100490090(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X9 }
}

uint64_t sub_1004900CC()
{
  return 0;
}

void sub_10049016C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10002A750(&qword_100660CA0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v37 = v1;
    v38 = a1 + 32;
    do
    {
      v6 = *(void **)(v38 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v39, v7);
      v11 = v6;
      String.hash(into:)(v39, v8, v10);
      v12 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10);
      v13 = -1 << *(_BYTE *)(v3 + 32);
      v14 = v12 & ~v13;
      v15 = v14 >> 6;
      v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
      v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
        v20 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v18 == v21 && v20 == v22)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v20, 2);
LABEL_4:

          goto LABEL_5;
        }
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          goto LABEL_4;
        v26 = ~v13;
        while (1)
        {
          v14 = (v14 + 1) & v26;
          v15 = v14 >> 6;
          v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
          v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0)
            break;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
          v20 = v28;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v27 == v29 && v20 == v30)
            goto LABEL_3;
          v32 = v30;
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v20, v29, v30, 0);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v32);
          if ((v33 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v15) = v17 | v16;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14) = v11;
      v34 = *(_QWORD *)(v3 + 16);
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v3 + 16) = v36;
LABEL_5:
      ++v4;
    }
    while (v4 != v37);
  }
}

Swift::Int sub_100490398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10002A750(&qword_10065F848);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_100490538(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t Strong;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)();
  BOOL v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  int64_t v99;
  char v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  void (*v110)(id *, _QWORD);
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  void *v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  void *v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _BYTE *v167;
  void *v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  _BYTE *v195;
  _QWORD *v196;
  _BYTE v197[24];
  _BYTE v198[24];
  id v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  _QWORD *v203;
  _BYTE v204[8];
  void *v205;
  _BYTE v206[4];

  v186 = a7;
  v181 = a5;
  v183 = a4;
  v11 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v11);
  v185 = (uint64_t)&v171 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated);
  v184 = (uint64_t)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v196 = (uint64_t *)((char *)&v171 - v16);
  v174 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v174);
  v175 = (uint64_t)&v171 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v180 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v19 = (char *)&v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v176 = (uint64_t)&v171 - v21;
  __chkstk_darwin(v22);
  v173 = (uint64_t)&v171 - v23;
  v24 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v24);
  v182 = (uint64_t)&v171 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v172 = (uint64_t)&v171 - v27;
  __chkstk_darwin(v28);
  v179 = (uint64_t)&v171 - v29;
  __chkstk_darwin(v30);
  v193 = (uint64_t)&v171 - v31;
  v188 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v192 = (char *)&v171 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v171 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v37);
  v39 = (char *)&v171 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    *(_BYTE *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 1;
  sub_10046ADD4(a2);
  v40 = a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, v206, 0, 0);
  sub_10000735C(v40, (uint64_t)v39, &qword_100649CA0);
  v41 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  LODWORD(v40) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v39, 1, v41);
  sub_1000073A0((uint64_t)v39, &qword_100649CA0);
  if ((_DWORD)v40 == 1)
  {
    if (qword_10063D818 != -1)
      swift_once(&qword_10063D818, sub_100478F7C);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100012DC4(v43, (uint64_t)qword_100660618);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unexpected: a non-nil ListInfo should be set by the time the tree is updated.", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }

  }
  v48 = *(_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v42);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 72))(ObjectType, v48);
  v52 = v50;
  if (v50)
  {
    v53 = v51;
    v54 = swift_getObjectType(v50, v51);
    v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v54, v53);
    swift_unknownObjectRelease(v52);
    v52 = v55 & 1;
  }
  v56 = a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v59 = Strong;
    v60 = *(_QWORD *)(v56 + 8);
    v61 = swift_getObjectType(Strong, v58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 40))(v52, 0, v61, v60);
    swift_unknownObjectRelease(v59);
  }
  v190 = v56;
  v62 = (uint64_t)&_swiftEmptySetSingleton;
  v205 = &_swiftEmptySetSingleton;
  v195 = (_BYTE *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
  v63 = &off_100660000;
  v64 = *(_BYTE *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) == 1;
  v177 = a6;
  v191 = a3;
  if (v64)
  {
    v65 = (_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
    swift_beginAccess(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, v198, 1, 0);
    v194 = v65;
    v66 = *v65;
    v67 = *(_QWORD *)(*v65 + 16);
    if (v67)
    {
      v68 = (uint64_t)&v36[*(int *)(v33 + 20)];
      v69 = v66 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      v70 = *(_QWORD *)(v34 + 72);
      v178 = v66;
      swift_bridgeObjectRetain(v66);
      do
      {
        sub_10002B1E8(v69, (uint64_t)v36, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        sub_10002B1E8(v68, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v71 = sub_10001F544((uint64_t)v36, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        v72 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v71);
        sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (v72)
        {
          sub_1000176A0((Swift::Int *)&v199, v72);

        }
        v69 += v70;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease(v178);
      v73 = v194;
      v66 = *v194;
      v62 = (uint64_t)v205;
      a6 = v177;
      v63 = &off_100660000;
    }
    else
    {
      v62 = (uint64_t)&_swiftEmptySetSingleton;
      v73 = v194;
    }
    *v73 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v66);
    v74 = (uint64_t *)(a6
                    + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
    swift_beginAccess(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides, v197, 1, 0);
    v75 = *v74;
    *v74 = (uint64_t)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v75);
  }
  if ((v62 & 0xC000000000000001) != 0)
  {
    if (v62 < 0)
      v76 = v62;
    else
      v76 = v62 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v62);
    v171 = __CocoaSet.count.getter(v76);
    swift_bridgeObjectRelease(v62);
  }
  else
  {
    v171 = *(_QWORD *)(v62 + 16);
  }
  v77 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v78 = swift_allocObject(v77, 16, 7);
  v79 = (uint64_t *)((char *)v63[206] + v186);
  swift_beginAccess(v79, v204, 0, 0);
  v80 = *v79;
  swift_bridgeObjectRetain(v80);
  v81 = sub_10047C564();
  v83 = sub_10048F590((uint64_t)_swiftEmptyArrayStorage, 0, v78, v80, (uint64_t)v81, v82);
  if (v195[1] == 1)
  {
    swift_retain();
    v84 = sub_100384390(v83);
    swift_release();
    sub_100477818((uint64_t)v84);
    v62 = (uint64_t)v205;
  }
  v194 = (_QWORD *)v83;
  v85 = sub_1004742D8(v83);
  v178 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter(v85);
  if ((v62 & 0xC000000000000001) == 0)
  {
LABEL_38:
    v88 = *(_QWORD *)(v62 + 16);
    swift_bridgeObjectRetain(v62);
    if (v88)
    {
      v203 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v88);
      v200 = sub_10048AFF4(v62);
      v201 = v90;
      v202 = v91 & 1;
      goto LABEL_40;
    }
LABEL_51:
    swift_bridgeObjectRelease(v62);
    v112 = _swiftEmptyArrayStorage;
LABEL_52:
    v113 = sub_10048EF0C((uint64_t)v112, v178);
    swift_bridgeObjectRelease(v112);
    v114 = v189;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
        v117 = v168;
      }
      else
      {
        v117 = &_swiftEmptySetSingleton;
      }
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
        v116 = v169;
      }
      else
      {
        v116 = &_swiftEmptySetSingleton;
      }
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_10048EFE8((uint64_t)_swiftEmptyArrayStorage);
        v115 = v170;
      }
      else
      {
        v115 = &_swiftEmptySetSingleton;
      }
    }
    else
    {
      v115 = &_swiftEmptySetSingleton;
      v116 = &_swiftEmptySetSingleton;
      v117 = &_swiftEmptySetSingleton;
    }
    REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v113, v117, v116, v115, &_swiftEmptySetSingleton);
    v118 = v180;
    v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v180 + 56);
    v120 = v193;
    v119(v193, 1, 1, v114);
    v121 = v179;
    sub_10000735C(v181, v179, (uint64_t *)&unk_100640EB0);
    v122 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
    if (v122(v121, 1, v114) == 1)
    {
      sub_1000073A0(v121, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v123 = v173;
      sub_10001F580(v121, v173, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v124 = v175;
      sub_10002B1E8(v123, v175, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v119(v124, 0, 1, v114);
      swift_storeEnumTagMultiPayload(v124, v174, 0);
      v125 = v172;
      sub_100383D24(v124, v172);
      sub_1000073A0(v124, &qword_10064B6B0);
      sub_10001F544(v123, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v120, (uint64_t *)&unk_100640EB0);
      sub_10000F614(v125, v120, (uint64_t *)&unk_100640EB0);
    }
    if ((v183 & 1) != 0 || *v195 != 1)
    {
      v133 = sub_10002A750(&qword_100642EA8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v196, 1, 1, v133);
    }
    else
    {
      v126 = v171 != 0;
      v127 = sub_10002A750(&qword_100642EA8);
      v128 = *(int *)(v127 + 48);
      v129 = *(_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
      v130 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
      v131 = v196;
      (*(void (**)(uint64_t, char *, uint64_t))(v187 + 16))((uint64_t)v196 + *(int *)(v130 + 20), v192, v188);
      *v131 = v129;
      v132 = *(int *)(v130 + 24);
      v120 = v193;
      *((_BYTE *)v131 + v132) = v126;
      *((_BYTE *)v131 + v128) = 1;
      v114 = v189;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v131, 0, 1, v127);
      swift_retain();
    }
    v134 = v182;
    sub_10000735C(v120, v182, (uint64_t *)&unk_100640EB0);
    if (v122(v134, 1, v114) == 1)
    {
      v135 = sub_10002A750((uint64_t *)&unk_100649CF0);
      v136 = v185;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v185, 1, 1, v135);
    }
    else
    {
      v137 = v176;
      sub_10001F580(v134, v176, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v138 = sub_10002A750((uint64_t *)&unk_100649CF0);
      v139 = *(int *)(v138 + 48);
      v136 = v185;
      sub_10002B1E8(v137, v185, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_BYTE *)(v136 + v139) = 0;
      sub_10001F544(v137, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v136, 0, 1, v138);
    }
    swift_bridgeObjectRelease(v205);
    v140 = v184;
    sub_10002B1E8((uint64_t)v196, v184, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    v141 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
    swift_allocObject(v141, *(unsigned int *)(v141 + 48), *(unsigned __int16 *)(v141 + 52));
    v142 = v194;
    v143 = swift_retain();
    v144 = sub_100372FD8(v143, v136, v140);
    swift_release();
    *(_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree) = v142;
    swift_retain();
    swift_release();
    v145 = v190;
    v146 = swift_unknownObjectWeakLoadStrong(v190);
    if (v146)
    {
      v148 = v146;
      v149 = *(_QWORD *)(v145 + 8);
      v150 = swift_getObjectType(v146, v147);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 72))(v144, v150, v149);
      v146 = swift_unknownObjectRelease(v148);
    }
    v151 = REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter(v146);
    v152 = *(_QWORD *)(v151 + 16);
    swift_bridgeObjectRelease(v151);
    if (v152)
    {
      v154 = REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter(v153);
      v155 = (void *)sub_10047DAD8(v154);
      v157 = v156;
      v159 = v158;
      v160 = v158;
      swift_bridgeObjectRelease(v154);
      if (v160 <= 0xFB)
      {
        v161 = v190;
        v162 = swift_unknownObjectWeakLoadStrong(v190);
        if (v162)
        {
          v164 = v162;
          v165 = *(_QWORD *)(v161 + 8);
          v166 = swift_getObjectType(v162, v163);
          (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v165 + 152))(v155, v157, v159, v166, v165);
          swift_unknownObjectRelease(v164);
        }
        sub_1000D5670(v155, v157, v159);
      }
    }
    sub_100475C14(0);
    swift_release();
    swift_release();
    sub_10001F544((uint64_t)v196, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    sub_1000073A0(v193, (uint64_t *)&unk_100640EB0);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v192, v188);
    v167 = v195;
    *(_WORD *)v195 = 257;
    v167[2] = 0;
    return;
  }
  if (v62 < 0)
    v86 = v62;
  else
    v86 = v62 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v62);
  v87 = __CocoaSet.count.getter(v86);
  if (!v87)
    goto LABEL_51;
  v88 = v87;
  v203 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v87);
  v200 = __CocoaSet.startIndex.getter(v86);
  v201 = v89;
  v202 = 1;
  if (v88 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
LABEL_40:
  if (v62 < 0)
    v92 = v62;
  else
    v92 = v62 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    while (1)
    {
      v99 = v200;
      v98 = v201;
      v100 = v202;
      sub_100478474(v200, v201, v202, v62);
      v102 = v101;
      v103 = REMObjectID.codable.getter();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v104);
      v105 = v203[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v105);
      v106 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v103);
      specialized ContiguousArray._endMutation()(v106);
      if ((v62 & 0xC000000000000001) != 0)
        break;
      v93 = sub_10048B2C0(v99, v98, v100, v62);
      v95 = v94;
      v97 = v96;
      sub_10003E0E0(v99, v98, v100);
      v200 = v93;
      v201 = v95;
      v202 = v97 & 1;
      if (!--v88)
        goto LABEL_50;
    }
    if ((v100 & 1) == 0)
      break;
    v107 = __CocoaSet.Index.handleBitPattern.getter(v99, v98);
    if (v107)
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v107);
    else
      isUniquelyReferenced_nonNull_native = 1;
    v109 = sub_10002A750(&qword_100660C18);
    v110 = (void (*)(id *, _QWORD))Set.Index._asCocoa.modify(&v199, v109);
    __CocoaSet.formIndex(after:isUnique:)(v111, isUniquelyReferenced_nonNull_native, v92);
    v110(&v199, 0);
    if (!--v88)
    {
LABEL_50:
      sub_10003E0E0(v200, v201, v202);
      v112 = v203;
      swift_bridgeObjectRelease(v62);
      a6 = v177;
      goto LABEL_52;
    }
  }
  swift_release();
  __break(1u);
}

uint64_t sub_10049150C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10049151C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491540()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100491564(uint64_t a1)
{
  uint64_t v1;

  return sub_10037D948(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_10049156C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_10037D918(a1, *(uint64_t (**)(_QWORD))(v2 + 16), a2);
}

BOOL sub_100491574(uint64_t a1)
{
  uint64_t *v1;

  return sub_100480198(a1, v1[2], v1[3], v1[4], v1[5]);
}

BOOL sub_100491580(uint64_t a1)
{
  uint64_t v1;

  return sub_10047D980(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100491588(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 24) + 504))(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_1004915B8(void **a1)
{
  uint64_t v1;

  return sub_10047AEC4(a1, v1);
}

uint64_t sub_1004915D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10047A6C8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004915DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10047A45C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1004915F8(uint64_t a1)
{
  uint64_t v1;

  sub_10047E8B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100491604@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_10047A14C(a1, a2, v3[3], v3[4], v3[5], a3);
}

uint64_t sub_100491610(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10047A384(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

id sub_100491618@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100479FB8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

double sub_100491634(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100491658(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRReminderProtocolWithPendingMove - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100491694(uint64_t a1)
{
  sub_1004916C4(*(id *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

id sub_1004916C4(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;

  if (a5)
  {
    v6 = result;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a5);
    v7 = v6;
    return a2;
  }
  return result;
}

uint64_t sub_100491710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100491764 + 4 * byte_10053799C[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

double sub_100491A1C(_QWORD *a1, uint64_t a2)
{
  double result;
  void *v4;
  unsigned __int8 v5;
  char *v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
    case 2u:
      swift_bridgeObjectRelease(*a1);

      sub_10004E09C((id)a1[2], *((_BYTE *)a1 + 24));
      *(_QWORD *)&result = swift_bridgeObjectRelease(a1[4]).n128_u64[0];
      break;
    case 1u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease(*a1);

      v4 = (void *)a1[2];
      v5 = *((_BYTE *)a1 + 24);
      goto LABEL_6;
    case 5u:
      swift_bridgeObjectRelease(*a1);

      v4 = (void *)a1[3];
      v5 = *((_BYTE *)a1 + 32);
LABEL_6:
      sub_10004E09C(v4, v5);
      break;
    case 6u:
      swift_bridgeObjectRelease(*a1);

      sub_10004E09C((id)a1[3], *((_BYTE *)a1 + 32));
      *(_QWORD *)&result = swift_bridgeObjectRelease(a1[5]).n128_u64[0];
      break;
    case 7u:
    case 8u:
      swift_bridgeObjectRelease(*a1);
      v6 = (char *)a1 + *(int *)(sub_10002A750(&qword_10064A840) + 48);
      v7 = type metadata accessor for DateComponents(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_100491B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100491B88 + 4 * byte_1005379AE[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100491B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  id v8;

  v4 = *v3;
  v5 = (void *)v3[1];
  *(_QWORD *)v0 = *v3;
  *(_QWORD *)(v0 + 8) = v5;
  v6 = (void *)v3[2];
  v7 = *((_BYTE *)v3 + 24);
  swift_bridgeObjectRetain(v4);
  v8 = v5;
  sub_1000898F4(v6, v7);
  *(_QWORD *)(v0 + 16) = v6;
  *(_BYTE *)(v0 + 24) = v7;
  swift_storeEnumTagMultiPayload(v0, v1, v2);
  return v0;
}

uint64_t sub_100491CDC(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10001F544(result, type metadata accessor for TTRRemindersListMovingRemindersParams);
    v5 = (char *)&loc_100491D3C + 4 * byte_1005379B7[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for TTRRemindersListMovingRemindersParams(uint64_t a1)
{
  return sub_100007328(a1, qword_100660D68, (uint64_t)&nominal type descriptor for TTRRemindersListMovingRemindersParams);
}

_QWORD *sub_100492024(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 8)
  {
    *a1 = *a2;
    v11 = *(int *)(sub_10002A750(&qword_10064A840) + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for DateComponents(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload(a1, a3, 8);
  }
  else if (EnumCaseMultiPayload == 7)
  {
    *a1 = *a2;
    v7 = *(int *)(sub_10002A750(&qword_10064A840) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for DateComponents(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, a3, 7);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10049212C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRRemindersListMovingRemindersParams);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 8)
    {
      *a1 = *a2;
      v11 = *(int *)(sub_10002A750(&qword_10064A840) + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for DateComponents(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload(a1, a3, 8);
    }
    else if (EnumCaseMultiPayload == 7)
    {
      *a1 = *a2;
      v7 = *(int *)(sub_10002A750(&qword_10064A840) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for DateComponents(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 7);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10049224C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _QWORD v7[9];

  v7[0] = "(";
  v7[1] = &unk_100537CF0;
  v7[2] = "(";
  v7[3] = &unk_100537CF0;
  v7[4] = &unk_100537CF0;
  v7[5] = &unk_100537D08;
  v7[6] = &unk_100537D20;
  result = type metadata accessor for DateComponents(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v6, (char *)&value witness table for Builtin.BridgeObject + 64, v4);
    v7[7] = v6;
    swift_getTupleTypeLayout2(v5, (char *)&value witness table for Builtin.BridgeObject + 64, v4);
    v7[8] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 9, v7);
    return 0;
  }
  return result;
}

char *sub_100492320(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v11 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for DateComponents(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_100492434(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 3)
  {
    v4 = type metadata accessor for REMHashtagLabelSpecifier(0);
LABEL_6:
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    return;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload)
      return;
    v4 = type metadata accessor for DateComponents(0);
    goto LABEL_6;
  }

}

void **sub_1004924A8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else if (EnumCaseMultiPayload == 2)
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = v9;
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for DateComponents(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void **sub_100492594(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else if (EnumCaseMultiPayload == 2)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for DateComponents(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for TTRRemindersListMatchedAttributeValue(uint64_t a1)
{
  return sub_100007328(a1, qword_100660E10, (uint64_t)&nominal type descriptor for TTRRemindersListMatchedAttributeValue);
}

void *sub_1004926AC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for DateComponents(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100492770(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v8 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for DateComponents(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10049284C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for DateComponents(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100537B98;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for REMHashtagLabelSpecifier(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 4, v5);
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListReminderActionTarget.DisallowReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100492930 + 4 * byte_1005379C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100492964 + 4 * byte_1005379C0[v4]))();
}

uint64_t sub_100492964(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10049296C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100492974);
  return result;
}

uint64_t sub_100492980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100492988);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10049298C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100492994(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTarget.DisallowReason()
{
  return &type metadata for TTRRemindersListReminderActionTarget.DisallowReason;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListReminderActionTargetExtended(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1004929CC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_10004DD44);
}

void destroy for TTRRemindersListReminderActionTargetExtended(uint64_t a1)
{
  sub_10004DDA4(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1004929CC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for TTRRemindersListReminderActionTargetExtended(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100492A28(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_10004DD44, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004DDA4);
}

uint64_t *sub_100492A28(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for TTRRemindersListReminderActionTargetExtended(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100492A94(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004DDA4);
}

uint64_t *sub_100492A94(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListReminderActionTargetExtended(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListReminderActionTargetExtended(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100492B64(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100492B6C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTargetExtended()
{
  return &type metadata for TTRRemindersListReminderActionTargetExtended;
}

unint64_t sub_100492B88()
{
  unint64_t result;

  result = qword_100660E48;
  if (!qword_100660E48)
  {
    result = swift_getWitnessTable(&unk_100537E18, &type metadata for TTRRemindersListReminderActionTarget.DisallowReason);
    atomic_store(result, (unint64_t *)&qword_100660E48);
  }
  return result;
}

uint64_t *sub_100492BF0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t *v22;
  _BYTE v23[24];

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(a1);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v3 + 2, v23, 0, 0);
  v21[0] = v3[2];
  v13 = type metadata accessor for TTRITreeViewNode(255, v8, *(_QWORD *)(v7 + 88), v12);
  v14 = type metadata accessor for Array(0, v13);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  if ((Collection.isEmpty.getter(v14, WitnessTable) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    swift_retain(a2);
    v16 = sub_10019E124((uint64_t)v11, a2, a3);
  }
  else
  {
    swift_beginAccess(v3 + 2, v21, 33, 0);
    v17 = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
    v18 = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
    RangeReplaceableCollection<>.removeLast()(&v22, v14, v17, v18);
    swift_endAccess(v21);
    v16 = v22;
    swift_retain(v22);
    sub_10019D7EC(a1, a2, a3);
    a2 = (uint64_t)v16;
  }
  swift_release(a2);
  return v16;
}

uint64_t sub_100492D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v32 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource
                  + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1+ OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource), v13);
  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12);
  v16 = objc_msgSend(v15, "objectID");

  *v11 = v16;
  v17 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v11, v17, 5);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 0, 1, v17);
  v18 = v16;
  v19 = static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter();
  v21 = v20;
  type metadata accessor for TTRListColors(0);
  v22 = static TTRListColors.recentlyDeleted.getter();
  v23 = 0;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount + 16) & 1) == 0)
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount);
  v24 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  v25 = type metadata accessor for TTRTemplatePublicLinkData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
  BYTE6(v30) = 1;
  WORD2(v30) = 1;
  LODWORD(v30) = 0x1000000;
  v29 = v23;
  v26 = v32;
  TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v11, v19, v21, v22, 0, 1, 0, 3, 0, 0, v29, 0, 0, 0, 0, v8, v5, v30);

  v27 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
}

double sub_10049301C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_100522BB0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 41) = 16843009;
  *(_WORD *)(a1 + 45) = 257;
  *(_BYTE *)(a1 + 47) = 0;
  return result;
}

unint64_t sub_10049304C()
{
  unsigned __int8 *v0;
  const mach_header_64 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (unsigned __int8 *)TTRReminderCellStyle.recentlyDeleted.unsafeMutableAddressor();
  v1 = &_mh_execute_header;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_1004930B4()
{
  sub_10049395C();
  return static UIColor.ttrLabelColor.getter();
}

double sub_1004930DC(uint64_t a1)
{
  return sub_1004931D0(a1, (void (*)(uint64_t))sub_1003E8E6C);
}

uint64_t sub_1004930E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    v2 = swift_allocObject(v3, 32, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_QWORD *)(v2 + 24) = &off_1006096F8;
    swift_unknownObjectWeakAssign(v4, v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double sub_10049317C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_1004930E8();
  sub_1003E94EC(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1004931C4(uint64_t a1)
{
  return sub_1004931D0(a1, (void (*)(uint64_t))sub_1003E9680);
}

double sub_1004931D0(uint64_t a1, void (*a2)(uint64_t))
{
  double result;

  sub_1004930E8();
  a2(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100493214()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource));

  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability));
}

uint64_t sub_100493250()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource));

  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004932B0()
{
  return type metadata accessor for TTRShowRecentlyDeletedViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowRecentlyDeletedViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100660F28;
  if (!qword_100660F28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowRecentlyDeletedViewModelSource);
  return result;
}

uint64_t sub_1004932F4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_100537F28;
  v2[1] = &unk_100537F40;
  v2[2] = &unk_100537F58;
  v2[3] = &unk_100537F40;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 1336);
}

double sub_100493348(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double result;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54[2];
  _QWORD v55[5];
  _OWORD v56[8];
  _BYTE v57[136];

  v51 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v48);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v9);
  v50 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  v47 = a1;
  REMRemindersListDataView.FlatModel.remindersCount.getter(v21);
  sub_10000735C((uint64_t)v20, (uint64_t)v17, &qword_10063F008);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  v23 = 0;
  v24 = 0;
  if (v22 != 1)
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v23 = REMRemindersListDataView.CountByCompleted.completed.getter(v25);
    v24 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v26 = v22 == 1;
  sub_1000073A0((uint64_t)v20, &qword_10063F008);
  v27 = v52;
  v28 = v52 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount;
  *(_QWORD *)v28 = v23;
  *(_QWORD *)(v28 + 8) = v24;
  *(_BYTE *)(v28 + 16) = v26;
  v29 = v50;
  v30 = sub_100492D94(v50);
  v31 = REMRemindersListDataView.FlatModel.reminders.getter(v30);
  v32 = sub_10002A750(&qword_1006452D8);
  v33 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = *(unsigned __int8 *)(v34 + 80);
  v37 = (v36 + 32) & ~v36;
  v38 = swift_allocObject(v32, v37 + v35, v36 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_100520250;
  v39 = v38 + v37;
  *v6 = 2;
  swift_storeEnumTagMultiPayload(v6, v48, 0);
  sub_1000D2B94(v56);
  sub_10003E0EC((uint64_t)v56, (uint64_t)v57);
  v40 = (uint64_t)v49;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v6, v57, 0, 0, 0, 0, 0, 0);
  sub_10001F580(v40, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  *(_QWORD *)(v39 + *(int *)(v33 + 20)) = v31;
  *(_BYTE *)(v39 + *(int *)(v33 + 24)) = 0;
  v41 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v42 = swift_allocObject(v41, 16, 7);
  v43 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v44 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v53, 1, 1, v43);
  v55[3] = v41;
  v55[4] = &off_100604210;
  v55[0] = v42;
  sub_100010634((uint64_t)v55, (uint64_t)v54);
  v45 = swift_allocObject(&unk_100609768, 72, 7);
  *(_QWORD *)(v45 + 16) = v38;
  sub_10002E37C(v54, v45 + 24);
  *(_QWORD *)(v45 + 64) = v27;
  swift_retain();
  swift_bridgeObjectRetain(v38);
  swift_retain();
  sub_10047C8F8(1, v29, (uint64_t (*)(uint64_t))sub_10003E360, v45, v51, 0, v44);
  swift_release();
  sub_100027F10(v55);
  swift_bridgeObjectRelease(v38);
  sub_1000073A0(v44, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v29, &qword_100649CA0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1004937B4()
{
  sub_1004937F0();
}

uint64_t sub_1004937BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72, 7);
}

void sub_1004937F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_1004938B0 + 4 * byte_100537EF0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1004938B0()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

unint64_t sub_10049395C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006466A0;
  if (!qword_1006466A0)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006466A0);
  }
  return result;
}

uint64_t sub_100493998(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _OWORD *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void **v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(void **, uint64_t, uint64_t);
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void **v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(void **, uint64_t, uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  id v96;
  uint64_t v97;
  void *v98;
  id v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  void *v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  void **v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  void **v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  void **v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t, __n128);
  void *v138;
  __n128 v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  void *v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  void *v157;
  id v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  char v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  void **v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  id v191;
  void *v192;
  id v193;
  int *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  char v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  void *v224;
  id v225;
  void **v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  id v234;
  void *v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  id v243;
  void *v244;
  id v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  void *v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  void *v256;
  uint64_t v257;
  void *v258;
  void (*v259)(void **, _QWORD, uint64_t, uint64_t);
  id v260;
  id v261;
  id v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  __int128 v266;
  uint64_t v267;
  void **v268;
  void **v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  id v276;
  void **v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void *v281;
  id v282;
  void **v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  void **v289;
  void **v290;
  uint64_t v291;
  uint64_t v292;
  unsigned int (*v293)(void **, uint64_t, uint64_t);
  id v294;
  uint64_t v295;
  uint64_t v296;
  void *v297;
  uint64_t v298;
  void **v299;
  void **v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int (*v303)(void **, uint64_t, uint64_t);
  id v304;
  uint64_t v305;
  uint64_t v306;
  void *v307;
  uint64_t v308;
  void **v309;
  void **v310;
  uint64_t v311;
  uint64_t v312;
  unsigned int (*v313)(void **, uint64_t, uint64_t);
  id v314;
  uint64_t v315;
  void *v316;
  id v317;
  void **v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  double v329;
  void *v330;
  id v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  void *v335;
  id v336;
  void **v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  id v341;
  void **v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  id v346;
  void **v347;
  uint64_t v348;
  uint64_t v349;
  void *v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  void (*v355)(char *, char *, uint64_t, __n128);
  void *v356;
  __n128 v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  _QWORD *v361;
  _QWORD *v362;
  uint64_t v363;
  void *v364;
  id v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  void *v373;
  id v374;
  void *v375;
  id v376;
  int *v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  int v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  char v392;
  void *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  void *v398;
  id v399;
  void **v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void *v408;
  id v409;
  void *v410;
  id v411;
  int *v412;
  uint64_t v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  void *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  int v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  char v427;
  void *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  void *v433;
  id v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  void *v440;
  id v441;
  void *v442;
  id v443;
  void **v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  void *v451;
  id v452;
  void *v453;
  id v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  void *v460;
  id v461;
  void *v462;
  id v463;
  uint64_t v464;
  int *v465;
  uint64_t v466;
  void *v467;
  uint64_t v468;
  void *v469;
  uint64_t v470;
  void *v471;
  void (*v472)(void **, _QWORD, uint64_t, uint64_t, __n128);
  id v473;
  __n128 v474;
  uint64_t v475;
  uint64_t v476;
  void *v477;
  _QWORD *v478;
  _QWORD *v479;
  uint64_t v480;
  uint64_t v481;
  _QWORD *v482;
  _QWORD *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  _QWORD *v487;
  _QWORD *v488;
  uint64_t v489;
  uint64_t *v490;
  void *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  _QWORD *v495;
  uint64_t v496;
  uint64_t v497;
  void *v498;
  uint64_t v499;
  void **v500;
  id v501;
  id v502;
  id v503;
  uint64_t v504;
  uint64_t v505;
  _QWORD *v506;
  _QWORD *v507;
  void *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  id v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  __int128 v517;
  uint64_t v518;
  uint64_t v519;
  void **v520;
  void **v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  void *v527;
  id v528;
  void **v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  void *v533;
  id v534;
  void **v535;
  uint64_t v536;
  uint64_t v537;
  void *v538;
  uint64_t v539;
  void **v540;
  uint64_t v541;
  uint64_t v542;
  unsigned int (*v543)(void **, uint64_t, uint64_t);
  id v544;
  uint64_t v545;
  void *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  unsigned int (*v550)(void **, uint64_t, uint64_t);
  id v551;
  uint64_t v552;
  void *v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  unsigned int (*v557)(void **, uint64_t, uint64_t);
  id v558;
  uint64_t v559;
  void *v560;
  id v561;
  void **v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  char *v569;
  char *v570;
  uint64_t v571;
  void *v572;
  id v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  void *v577;
  id v578;
  void **v579;
  uint64_t v580;
  uint64_t v581;
  void *v582;
  id v583;
  void **v584;
  uint64_t v585;
  uint64_t v586;
  void *v587;
  id v588;
  void **v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  void (*v594)(char *, char *, uint64_t, __n128);
  __n128 v595;
  uint64_t v596;
  uint64_t v597;
  _QWORD *v598;
  _QWORD *v599;
  uint64_t v600;
  uint64_t v601;
  void *v602;
  id v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  void *v611;
  id v612;
  void *v613;
  id v614;
  int *v615;
  uint64_t v616;
  char *v617;
  char *v618;
  uint64_t v619;
  int v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  uint64_t v625;
  void *v626;
  id v627;
  void **v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  void *v636;
  id v637;
  void *v638;
  id v639;
  int *v640;
  uint64_t v641;
  char *v642;
  char *v643;
  uint64_t v644;
  int v645;
  __int128 v646;
  __int128 v647;
  __int128 v648;
  __int128 v649;
  uint64_t v650;
  void *v651;
  id v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  void *v658;
  id v659;
  void *v660;
  id v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  void *v668;
  id v669;
  void *v670;
  id v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  void *v677;
  id v678;
  void *v679;
  id v680;
  uint64_t v681;
  int *v682;
  uint64_t v683;
  _QWORD *v684;
  uint64_t *v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  void *v689;
  void (*v690)(void **, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v691;
  unsigned __int8 v693;
  uint64_t v694;
  unsigned __int8 v695;
  uint64_t v696;
  unsigned __int8 v697;
  uint64_t v698;
  unsigned __int8 v699;
  uint64_t v700;
  unsigned __int8 v701;
  uint64_t v702;
  unsigned __int8 v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  char *v721;
  int *v722;
  int *v723;
  char *v724;
  int *v725;
  int *v726;
  void *v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  void **v745;
  void **v746;
  char *v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  void *__dst;
  void *__dsta;
  void *__dstb;
  void *__dstc;
  void *__dstd;
  void *__dste;
  void *__dstf;
  void *__dstg;
  void **__dsth;
  void **__dsti;
  void **__dstj;
  char *__dstk;
  void *__dstl;
  void *__dstm;
  void *__dstn;
  void *__dsto;
  uint64_t v768;
  uint64_t *v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  void *v774;
  char v775;
  void *v776;
  char v777;
  int *v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)v4 = *a2;
    v21 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = (void *)a2[1];
    v8 = (void *)a2[2];
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    v9 = (void *)a2[3];
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v10 = (void *)a2[5];
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v11 = (void *)a2[7];
    *(_QWORD *)(a1 + 56) = v11;
    v13 = a2 + 8;
    v12 = a2[8];
    v14 = v7;
    v15 = v8;
    v16 = v9;
    v17 = v10;
    v18 = v11;
    if (v12)
    {
      v19 = v3[9];
      *(_QWORD *)(v4 + 64) = v12;
      *(_QWORD *)(v4 + 72) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 64) = *v13;
    }
    v22 = v3[16];
    v23 = (void *)v3[10];
    v24 = (void *)v3[11];
    *(_QWORD *)(v4 + 80) = v23;
    *(_QWORD *)(v4 + 88) = v24;
    *(_BYTE *)(v4 + 96) = *((_BYTE *)v3 + 96);
    *(_QWORD *)(v4 + 104) = v3[13];
    *(_BYTE *)(v4 + 112) = *((_BYTE *)v3 + 112);
    v25 = (void *)v3[15];
    *(_QWORD *)(v4 + 120) = v25;
    v26 = v23;
    v27 = v24;
    v28 = v25;
    if (v22)
    {
      v29 = v3[17];
      *(_QWORD *)(v4 + 128) = v22;
      *(_QWORD *)(v4 + 136) = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 128) = *((_OWORD *)v3 + 8);
    }
    v30 = v3[21];
    v31 = v3[19];
    *(_QWORD *)(v4 + 144) = v3[18];
    *(_QWORD *)(v4 + 152) = v31;
    v32 = (void *)v3[20];
    *(_QWORD *)(v4 + 160) = v32;
    swift_bridgeObjectRetain(v31);
    v33 = v32;
    if (v30)
    {
      v34 = v3[22];
      *(_QWORD *)(v4 + 168) = v30;
      *(_QWORD *)(v4 + 176) = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 168) = *(_OWORD *)(v3 + 21);
    }
    v35 = v3[25];
    v36 = v3[24];
    *(_QWORD *)(v4 + 184) = v3[23];
    *(_QWORD *)(v4 + 192) = v36;
    swift_bridgeObjectRetain(v36);
    if (v35)
    {
      v37 = v3[26];
      *(_QWORD *)(v4 + 200) = v35;
      *(_QWORD *)(v4 + 208) = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 200) = *(_OWORD *)(v3 + 25);
    }
    v38 = v3[30];
    *(_WORD *)(v4 + 216) = *((_WORD *)v3 + 108);
    *(_BYTE *)(v4 + 224) = *((_BYTE *)v3 + 224);
    v39 = (void *)v3[29];
    *(_QWORD *)(v4 + 232) = v39;
    v40 = v39;
    if (v38)
    {
      v41 = v3[31];
      *(_QWORD *)(v4 + 240) = v38;
      *(_QWORD *)(v4 + 248) = v41;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 240) = *((_OWORD *)v3 + 15);
    }
    v42 = v3[32];
    v43 = v3[33];
    *(_QWORD *)(v4 + 256) = v42;
    swift_bridgeObjectRetain(v42);
    if (v43)
    {
      v44 = v3[34];
      *(_QWORD *)(v4 + 264) = v43;
      *(_QWORD *)(v4 + 272) = v44;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 264) = *(_OWORD *)(v3 + 33);
    }
    v45 = v6[17];
    v46 = v4 + v45;
    v47 = (uint64_t)v3 + v45;
    v48 = *(_OWORD *)((char *)v3 + v45);
    *(_OWORD *)(v4 + v45) = v48;
    swift_unknownObjectRetain(v48);
    v49 = *(int *)(sub_10002A750(&qword_10064CB68) + 28);
    v50 = (void **)(v46 + v49);
    v51 = (void **)(v47 + v49);
    v52 = sub_10002A750(&qword_10064CBB8);
    v53 = *(void **)(v52 - 8);
    v768 = v4;
    v769 = v3;
    v778 = v6;
    if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v53 + 6))(v51, 1, v52))
    {
      v54 = sub_10002A750(&qword_10064CBB0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v51, v55))
      {
        case 0u:
          __dst = v53;
          v56 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v732 = v55;
          switch(swift_getEnumCaseMultiPayload(v51, v56))
          {
            case 1u:
              v57 = *v51;
              *v50 = *v51;
              v58 = v57;
              v59 = v50;
              v60 = v56;
              v61 = 1;
              goto LABEL_63;
            case 2u:
              v150 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v50, v51, v150);
              v59 = v50;
              v60 = v56;
              v61 = 2;
              goto LABEL_63;
            case 3u:
              v151 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v50, v51, v151);
              v59 = v50;
              v60 = v56;
              v61 = 3;
              goto LABEL_63;
            case 4u:
              v152 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v50, v51, v152);
              v59 = v50;
              v60 = v56;
              v61 = 4;
              goto LABEL_63;
            case 5u:
              v153 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v50, v51, v153);
              v59 = v50;
              v60 = v56;
              v61 = 5;
              goto LABEL_63;
            case 6u:
              v154 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v50, v51, v154);
              v59 = v50;
              v60 = v56;
              v61 = 6;
              goto LABEL_63;
            case 8u:
              v155 = *v51;
              *v50 = *v51;
              v156 = v155;
              v59 = v50;
              v60 = v56;
              v61 = 8;
              goto LABEL_63;
            case 9u:
              v157 = *v51;
              *v50 = *v51;
              v158 = v157;
              v59 = v50;
              v60 = v56;
              v61 = 9;
LABEL_63:
              swift_storeEnumTagMultiPayload(v59, v60, v61);
              break;
            default:
              memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
              break;
          }
          v159 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v160 = v159[5];
          v161 = (char *)v50 + v160;
          v162 = (char *)v51 + v160;
          v163 = *(uint64_t *)((char *)v51 + v160 + 8);
          if (v163)
          {
            *(_QWORD *)v161 = *(_QWORD *)v162;
            *((_QWORD *)v161 + 1) = v163;
            v165 = (void *)*((_QWORD *)v162 + 2);
            v164 = *((_QWORD *)v162 + 3);
            v167 = *((_QWORD *)v162 + 4);
            v166 = *((_QWORD *)v162 + 5);
            v168 = *((_QWORD *)v162 + 7);
            v709 = *((_QWORD *)v162 + 6);
            v722 = v159;
            v697 = v162[64];
            swift_bridgeObjectRetain(v163);
            sub_10003E1F0(v165, v164, v167, v166, v709, v168, v697);
            *((_QWORD *)v161 + 2) = v165;
            *((_QWORD *)v161 + 3) = v164;
            *((_QWORD *)v161 + 4) = v167;
            *((_QWORD *)v161 + 5) = v166;
            *((_QWORD *)v161 + 6) = v709;
            *((_QWORD *)v161 + 7) = v168;
            v161[64] = v697;
            *(_DWORD *)(v161 + 65) = *(_DWORD *)(v162 + 65);
            v169 = v162[120];
            if (v169 == 255)
            {
              v170 = *(_OWORD *)(v162 + 88);
              *(_OWORD *)(v161 + 72) = *(_OWORD *)(v162 + 72);
              *(_OWORD *)(v161 + 88) = v170;
              *(_OWORD *)(v161 + 104) = *(_OWORD *)(v162 + 104);
              v161[120] = v162[120];
            }
            else
            {
              v174 = v169 & 1;
              v175 = (void *)*((_QWORD *)v162 + 9);
              v176 = *((_QWORD *)v162 + 10);
              v177 = *((_QWORD *)v162 + 11);
              v178 = *((_QWORD *)v162 + 12);
              v698 = *((_QWORD *)v162 + 14);
              v710 = *((_QWORD *)v162 + 13);
              sub_10002B764(v175, v176, v177, v178, v710, v698, v169 & 1);
              *((_QWORD *)v161 + 9) = v175;
              *((_QWORD *)v161 + 10) = v176;
              *((_QWORD *)v161 + 11) = v177;
              *((_QWORD *)v161 + 12) = v178;
              *((_QWORD *)v161 + 13) = v710;
              *((_QWORD *)v161 + 14) = v698;
              v161[120] = v174;
            }
            v4 = v768;
            v3 = v769;
            v161[121] = v162[121];
            v159 = v722;
          }
          else
          {
            v171 = *((_OWORD *)v162 + 5);
            *((_OWORD *)v161 + 4) = *((_OWORD *)v162 + 4);
            *((_OWORD *)v161 + 5) = v171;
            *((_OWORD *)v161 + 6) = *((_OWORD *)v162 + 6);
            *(_OWORD *)(v161 + 106) = *(_OWORD *)(v162 + 106);
            v172 = *((_OWORD *)v162 + 1);
            *(_OWORD *)v161 = *(_OWORD *)v162;
            *((_OWORD *)v161 + 1) = v172;
            v173 = *((_OWORD *)v162 + 3);
            *((_OWORD *)v161 + 2) = *((_OWORD *)v162 + 2);
            *((_OWORD *)v161 + 3) = v173;
          }
          *((_BYTE *)v50 + v159[6]) = *((_BYTE *)v51 + v159[6]);
          *((_BYTE *)v50 + v159[7]) = *((_BYTE *)v51 + v159[7]);
          *((_BYTE *)v50 + v159[8]) = *((_BYTE *)v51 + v159[8]);
          *((_BYTE *)v50 + v159[9]) = *((_BYTE *)v51 + v159[9]);
          *((_BYTE *)v50 + v159[10]) = *((_BYTE *)v51 + v159[10]);
          v179 = v159[11];
          v180 = *(void **)((char *)v51 + v179);
          *(void **)((char *)v50 + v179) = v180;
          v181 = v180;
          v182 = v50;
          v183 = v732;
          v184 = 0;
          goto LABEL_87;
        case 1u:
          __dst = v53;
          v62 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v733 = v55;
          switch(swift_getEnumCaseMultiPayload(v51, v62))
          {
            case 1u:
              v63 = *v51;
              *v50 = *v51;
              v64 = v63;
              v65 = v50;
              v66 = v62;
              v67 = 1;
              goto LABEL_79;
            case 2u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v50, v51, v185);
              v65 = v50;
              v66 = v62;
              v67 = 2;
              goto LABEL_79;
            case 3u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v50, v51, v186);
              v65 = v50;
              v66 = v62;
              v67 = 3;
              goto LABEL_79;
            case 4u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v50, v51, v187);
              v65 = v50;
              v66 = v62;
              v67 = 4;
              goto LABEL_79;
            case 5u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v50, v51, v188);
              v65 = v50;
              v66 = v62;
              v67 = 5;
              goto LABEL_79;
            case 6u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v50, v51, v189);
              v65 = v50;
              v66 = v62;
              v67 = 6;
              goto LABEL_79;
            case 8u:
              v190 = *v51;
              *v50 = *v51;
              v191 = v190;
              v65 = v50;
              v66 = v62;
              v67 = 8;
              goto LABEL_79;
            case 9u:
              v192 = *v51;
              *v50 = *v51;
              v193 = v192;
              v65 = v50;
              v66 = v62;
              v67 = 9;
LABEL_79:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
              break;
          }
          v194 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v195 = v194[5];
          v196 = (char *)v50 + v195;
          v197 = (char *)v51 + v195;
          v198 = *(uint64_t *)((char *)v51 + v195 + 8);
          if (v198)
          {
            *(_QWORD *)v196 = *(_QWORD *)v197;
            *((_QWORD *)v196 + 1) = v198;
            v200 = (void *)*((_QWORD *)v197 + 2);
            v199 = *((_QWORD *)v197 + 3);
            v201 = *((_QWORD *)v197 + 5);
            v711 = *((_QWORD *)v197 + 4);
            v723 = v194;
            v203 = *((_QWORD *)v197 + 6);
            v202 = *((_QWORD *)v197 + 7);
            v699 = v197[64];
            swift_bridgeObjectRetain(v198);
            sub_10003E1F0(v200, v199, v711, v201, v203, v202, v699);
            *((_QWORD *)v196 + 2) = v200;
            *((_QWORD *)v196 + 3) = v199;
            *((_QWORD *)v196 + 4) = v711;
            *((_QWORD *)v196 + 5) = v201;
            *((_QWORD *)v196 + 6) = v203;
            *((_QWORD *)v196 + 7) = v202;
            v196[64] = v699;
            *(_DWORD *)(v196 + 65) = *(_DWORD *)(v197 + 65);
            v204 = v197[120];
            if (v204 == 255)
            {
              v205 = *(_OWORD *)(v197 + 88);
              *(_OWORD *)(v196 + 72) = *(_OWORD *)(v197 + 72);
              *(_OWORD *)(v196 + 88) = v205;
              *(_OWORD *)(v196 + 104) = *(_OWORD *)(v197 + 104);
              v196[120] = v197[120];
            }
            else
            {
              v209 = v204 & 1;
              v210 = (void *)*((_QWORD *)v197 + 9);
              v211 = *((_QWORD *)v197 + 10);
              v212 = *((_QWORD *)v197 + 11);
              v213 = *((_QWORD *)v197 + 12);
              v700 = *((_QWORD *)v197 + 14);
              v712 = *((_QWORD *)v197 + 13);
              sub_10002B764(v210, v211, v212, v213, v712, v700, v204 & 1);
              *((_QWORD *)v196 + 9) = v210;
              *((_QWORD *)v196 + 10) = v211;
              *((_QWORD *)v196 + 11) = v212;
              *((_QWORD *)v196 + 12) = v213;
              *((_QWORD *)v196 + 13) = v712;
              *((_QWORD *)v196 + 14) = v700;
              v196[120] = v209;
            }
            v4 = v768;
            v3 = v769;
            v196[121] = v197[121];
            v194 = v723;
          }
          else
          {
            v206 = *((_OWORD *)v197 + 5);
            *((_OWORD *)v196 + 4) = *((_OWORD *)v197 + 4);
            *((_OWORD *)v196 + 5) = v206;
            *((_OWORD *)v196 + 6) = *((_OWORD *)v197 + 6);
            *(_OWORD *)(v196 + 106) = *(_OWORD *)(v197 + 106);
            v207 = *((_OWORD *)v197 + 1);
            *(_OWORD *)v196 = *(_OWORD *)v197;
            *((_OWORD *)v196 + 1) = v207;
            v208 = *((_OWORD *)v197 + 3);
            *((_OWORD *)v196 + 2) = *((_OWORD *)v197 + 2);
            *((_OWORD *)v196 + 3) = v208;
          }
          *((_BYTE *)v50 + v194[6]) = *((_BYTE *)v51 + v194[6]);
          *((_BYTE *)v50 + v194[7]) = *((_BYTE *)v51 + v194[7]);
          *((_BYTE *)v50 + v194[8]) = *((_BYTE *)v51 + v194[8]);
          *((_BYTE *)v50 + v194[9]) = *((_BYTE *)v51 + v194[9]);
          *((_BYTE *)v50 + v194[10]) = *((_BYTE *)v51 + v194[10]);
          v214 = v194[11];
          v215 = *(void **)((char *)v51 + v214);
          *(void **)((char *)v50 + v214) = v215;
          v216 = v215;
          v182 = v50;
          v183 = v733;
          v184 = 1;
LABEL_87:
          swift_storeEnumTagMultiPayload(v182, v183, v184);
          v6 = v778;
          goto LABEL_122;
        case 2u:
          v734 = v55;
          __dst = v53;
          v68 = v4;
          v69 = *v51;
          *v50 = *v51;
          v70 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v71 = (void **)((char *)v50 + v70);
          v72 = (void **)((char *)v51 + v70);
          v73 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v74 = *(_QWORD *)(v73 - 8);
          v75 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v74 + 48);
          v76 = v69;
          if (v75(v72, 1, v73))
          {
            v77 = sub_10002A750(&qword_100644980);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v72, v73))
            {
              case 1u:
                v117 = *v72;
                *v71 = *v72;
                v118 = v117;
                v119 = v71;
                v120 = v73;
                v121 = 1;
                goto LABEL_96;
              case 2u:
                v217 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v71, v72, v217);
                v119 = v71;
                v120 = v73;
                v121 = 2;
                goto LABEL_96;
              case 3u:
                v218 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v71, v72, v218);
                v119 = v71;
                v120 = v73;
                v121 = 3;
                goto LABEL_96;
              case 4u:
                v219 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v71, v72, v219);
                v119 = v71;
                v120 = v73;
                v121 = 4;
                goto LABEL_96;
              case 5u:
                v220 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v71, v72, v220);
                v119 = v71;
                v120 = v73;
                v121 = 5;
                goto LABEL_96;
              case 6u:
                v221 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v71, v72, v221);
                v119 = v71;
                v120 = v73;
                v121 = 6;
                goto LABEL_96;
              case 8u:
                v222 = *v72;
                *v71 = *v72;
                v223 = v222;
                v119 = v71;
                v120 = v73;
                v121 = 8;
                goto LABEL_96;
              case 9u:
                v224 = *v72;
                *v71 = *v72;
                v225 = v224;
                v119 = v71;
                v120 = v73;
                v121 = 9;
LABEL_96:
                swift_storeEnumTagMultiPayload(v119, v120, v121);
                break;
              default:
                memcpy(v71, v72, *(_QWORD *)(v74 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          }
          v4 = v68;
          v6 = v778;
          v226 = v50;
          v227 = v734;
          v228 = 2;
          goto LABEL_117;
        case 3u:
          v735 = v55;
          __dst = v53;
          v78 = v4;
          v79 = *v51;
          *v50 = *v51;
          v80 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v81 = (void **)((char *)v50 + v80);
          v82 = (void **)((char *)v51 + v80);
          v83 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v84 = *(_QWORD *)(v83 - 8);
          v85 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v84 + 48);
          v86 = v79;
          if (v85(v82, 1, v83))
          {
            v87 = sub_10002A750(&qword_100644980);
            memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            v4 = v78;
            v3 = v769;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v82, v83))
            {
              case 1u:
                v122 = *v82;
                *v81 = *v82;
                v123 = v122;
                v124 = v81;
                v125 = v83;
                v126 = 1;
                goto LABEL_119;
              case 2u:
                v229 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(v81, v82, v229);
                v124 = v81;
                v125 = v83;
                v126 = 2;
                goto LABEL_119;
              case 3u:
                v230 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v81, v82, v230);
                v124 = v81;
                v125 = v83;
                v126 = 3;
                goto LABEL_119;
              case 4u:
                v231 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v81, v82, v231);
                v124 = v81;
                v125 = v83;
                v126 = 4;
                goto LABEL_119;
              case 5u:
                v246 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v81, v82, v246);
                v124 = v81;
                v125 = v83;
                v126 = 5;
                goto LABEL_119;
              case 6u:
                v232 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v81, v82, v232);
                v124 = v81;
                v125 = v83;
                v126 = 6;
                goto LABEL_119;
              case 8u:
                v233 = *v82;
                *v81 = *v82;
                v234 = v233;
                v124 = v81;
                v125 = v83;
                v126 = 8;
                goto LABEL_119;
              case 9u:
                v235 = *v82;
                *v81 = *v82;
                v236 = v235;
                v124 = v81;
                v125 = v83;
                v126 = 9;
LABEL_119:
                swift_storeEnumTagMultiPayload(v124, v125, v126);
                break;
              default:
                memcpy(v81, v82, *(_QWORD *)(v84 + 64));
                break;
            }
            v4 = v78;
            v3 = v769;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
          }
          v6 = v778;
          swift_storeEnumTagMultiPayload(v50, v735, 3);
          goto LABEL_122;
        case 4u:
          v736 = v55;
          __dst = v53;
          v88 = v4;
          v89 = *v51;
          *v50 = *v51;
          v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v91 = (void **)((char *)v50 + v90);
          v92 = (void **)((char *)v51 + v90);
          v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v94 = *(_QWORD *)(v93 - 8);
          v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
          v96 = v89;
          if (v95(v92, 1, v93))
          {
            v97 = sub_10002A750(&qword_100644980);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v92, v93))
            {
              case 1u:
                v127 = *v92;
                *v91 = *v92;
                v128 = v127;
                v129 = v91;
                v130 = v93;
                v131 = 1;
                goto LABEL_114;
              case 2u:
                v237 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(v91, v92, v237);
                v129 = v91;
                v130 = v93;
                v131 = 2;
                goto LABEL_114;
              case 3u:
                v238 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(v91, v92, v238);
                v129 = v91;
                v130 = v93;
                v131 = 3;
                goto LABEL_114;
              case 4u:
                v239 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v91, v92, v239);
                v129 = v91;
                v130 = v93;
                v131 = 4;
                goto LABEL_114;
              case 5u:
                v240 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v91, v92, v240);
                v129 = v91;
                v130 = v93;
                v131 = 5;
                goto LABEL_114;
              case 6u:
                v241 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v91, v92, v241);
                v129 = v91;
                v130 = v93;
                v131 = 6;
                goto LABEL_114;
              case 8u:
                v242 = *v92;
                *v91 = *v92;
                v243 = v242;
                v129 = v91;
                v130 = v93;
                v131 = 8;
                goto LABEL_114;
              case 9u:
                v244 = *v92;
                *v91 = *v92;
                v245 = v244;
                v129 = v91;
                v130 = v93;
                v131 = 9;
LABEL_114:
                swift_storeEnumTagMultiPayload(v129, v130, v131);
                break;
              default:
                memcpy(v91, v92, *(_QWORD *)(v94 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          v4 = v88;
          v6 = v778;
          v226 = v50;
          v227 = v736;
          v228 = 4;
LABEL_117:
          swift_storeEnumTagMultiPayload(v226, v227, v228);
          v3 = v769;
LABEL_122:
          v53 = __dst;
          break;
        case 5u:
          *v50 = *v51;
          *((_BYTE *)v50 + 8) = *((_BYTE *)v51 + 8);
          *(_WORD *)((char *)v50 + 9) = *(_WORD *)((char *)v51 + 9);
          v98 = v51[2];
          v50[2] = v98;
          v99 = v98;
          swift_storeEnumTagMultiPayload(v50, v55, 5);
          break;
        case 6u:
          v111 = *v51;
          *v50 = *v51;
          v112 = v111;
          swift_storeEnumTagMultiPayload(v50, v55, 6);
          break;
        case 7u:
          __dsta = v53;
          v101 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v102 = *(_QWORD *)(v101 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v102 + 48))(v51, 1, v101))
          {
            v103 = sub_10002A750(&qword_100644600);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            v737 = v55;
            v132 = *v51;
            *v50 = *v51;
            v133 = *(int *)(v101 + 20);
            v721 = (char *)v50 + v133;
            v134 = v4;
            v135 = (char *)v51 + v133;
            v136 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v137 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v136 - 8) + 16);
            v138 = v132;
            v55 = v737;
            v139 = swift_bridgeObjectRetain(v138);
            v140 = v135;
            v4 = v134;
            v141 = v136;
            v3 = v769;
            v6 = v778;
            v137(v721, v140, v141, v139);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v102 + 56))(v50, 0, 1, v101);
          }
          v142 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v143 = (void **)((char *)v50 + v142);
          v144 = (void **)((char *)v51 + v142);
          v145 = v144[1];
          v53 = __dsta;
          if (v145)
          {
            *v143 = *v144;
            v143[1] = v145;
            v146 = (void *)v144[2];
            v143[2] = v146;
            swift_bridgeObjectRetain(v145);
            v147 = v146;
          }
          else
          {
            *(_OWORD *)v143 = *(_OWORD *)v144;
            v143[2] = v144[2];
          }
          swift_storeEnumTagMultiPayload(v50, v55, 7);
          break;
        case 8u:
          v113 = v53;
          v114 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v115 = *(_QWORD *)(v114 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v115 + 48))(v51, 1, v114))
          {
            v116 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          else
          {
            v148 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v50, v51, v148);
            *((_BYTE *)v50 + *(int *)(v114 + 20)) = *((_BYTE *)v51 + *(int *)(v114 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v115 + 56))(v50, 0, 1, v114);
          }
          v53 = v113;
          v149 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v50 + *(int *)(v149 + 20)) = *(void **)((char *)v51 + *(int *)(v149 + 20));
          swift_storeEnumTagMultiPayload(v50, v55, 8);
          break;
        case 9u:
          *(_BYTE *)v50 = *(_BYTE *)v51;
          v104 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v105 = v55;
          v106 = (char *)v50 + v104;
          v107 = v53;
          v108 = (char *)v51 + v104;
          v109 = type metadata accessor for AnyTip(0);
          v110 = v108;
          v53 = v107;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v106, v110, v109);
          swift_storeEnumTagMultiPayload(v50, v105, 9);
          break;
        default:
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          break;
      }
      v247 = (int *)type metadata accessor for TTRReminderCellTitleViewModel(0, v100);
      *((_BYTE *)v50 + v247[5]) = *((_BYTE *)v51 + v247[5]);
      v248 = v247[6];
      v249 = *(void **)((char *)v51 + v248);
      *(void **)((char *)v50 + v248) = v249;
      v250 = v247[7];
      v251 = *(void **)((char *)v51 + v250);
      *(void **)((char *)v50 + v250) = v251;
      *((_BYTE *)v50 + v247[8]) = *((_BYTE *)v51 + v247[8]);
      v252 = v247[9];
      v253 = (char *)v50 + v252;
      v254 = (char *)v51 + v252;
      *(_QWORD *)v253 = *(_QWORD *)v254;
      v253[8] = v254[8];
      v255 = v247[10];
      v256 = *(void **)((char *)v51 + v255);
      *(void **)((char *)v50 + v255) = v256;
      v257 = v247[11];
      v258 = *(void **)((char *)v51 + v257);
      *(void **)((char *)v50 + v257) = v258;
      *(void **)((char *)v50 + *(int *)(v52 + 48)) = *(void **)((char *)v51 + *(int *)(v52 + 48));
      v259 = (void (*)(void **, _QWORD, uint64_t, uint64_t))*((_QWORD *)v53 + 7);
      v260 = v249;
      v261 = v251;
      swift_bridgeObjectRetain(v256);
      v262 = v258;
      v259(v50, 0, 1, v52);
    }
    v263 = v6[18];
    v264 = v4 + v263;
    v265 = (uint64_t)v3 + v263;
    *(_BYTE *)v264 = *((_BYTE *)v3 + v263);
    v266 = *(_OWORD *)((char *)v3 + v263 + 8);
    *(_OWORD *)(v264 + 8) = v266;
    swift_unknownObjectRetain(v266);
    v267 = *(int *)(sub_10002A750(&qword_10064CB60) + 40);
    v268 = (void **)(v264 + v267);
    v269 = (void **)(v265 + v267);
    v270 = sub_10002A750(&qword_10064CBA0);
    v271 = *(void **)(v270 - 8);
    if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v271 + 6))(v269, 1, v270))
    {
      v272 = sub_10002A750(&qword_10064CB98);
      memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
    }
    else
    {
      v273 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v269, v273))
      {
        case 0u:
          v274 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v738 = v273;
          __dstb = v271;
          switch(swift_getEnumCaseMultiPayload(v269, v274))
          {
            case 1u:
              v275 = *v269;
              *v268 = *v269;
              v276 = v275;
              v277 = v268;
              v278 = v274;
              v279 = 1;
              goto LABEL_166;
            case 2u:
              v368 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v268, v269, v368);
              v277 = v268;
              v278 = v274;
              v279 = 2;
              goto LABEL_166;
            case 3u:
              v369 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v268, v269, v369);
              v277 = v268;
              v278 = v274;
              v279 = 3;
              goto LABEL_166;
            case 4u:
              v370 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v268, v269, v370);
              v277 = v268;
              v278 = v274;
              v279 = 4;
              goto LABEL_166;
            case 5u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v268, v269, v371);
              v277 = v268;
              v278 = v274;
              v279 = 5;
              goto LABEL_166;
            case 6u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v268, v269, v372);
              v277 = v268;
              v278 = v274;
              v279 = 6;
              goto LABEL_166;
            case 8u:
              v373 = *v269;
              *v268 = *v269;
              v374 = v373;
              v277 = v268;
              v278 = v274;
              v279 = 8;
              goto LABEL_166;
            case 9u:
              v375 = *v269;
              *v268 = *v269;
              v376 = v375;
              v277 = v268;
              v278 = v274;
              v279 = 9;
LABEL_166:
              swift_storeEnumTagMultiPayload(v277, v278, v279);
              break;
            default:
              memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
              break;
          }
          v377 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v378 = v377[5];
          v379 = (char *)v268 + v378;
          v380 = (char *)v269 + v378;
          v381 = *(uint64_t *)((char *)v269 + v378 + 8);
          if (v381)
          {
            *(_QWORD *)v379 = *(_QWORD *)v380;
            *((_QWORD *)v379 + 1) = v381;
            v383 = (void *)*((_QWORD *)v380 + 2);
            v382 = *((_QWORD *)v380 + 3);
            v385 = *((_QWORD *)v380 + 4);
            v384 = *((_QWORD *)v380 + 5);
            v386 = *((_QWORD *)v380 + 7);
            v713 = *((_QWORD *)v380 + 6);
            v725 = v377;
            v701 = v380[64];
            swift_bridgeObjectRetain(v381);
            sub_10003E1F0(v383, v382, v385, v384, v713, v386, v701);
            *((_QWORD *)v379 + 2) = v383;
            *((_QWORD *)v379 + 3) = v382;
            *((_QWORD *)v379 + 4) = v385;
            *((_QWORD *)v379 + 5) = v384;
            *((_QWORD *)v379 + 6) = v713;
            *((_QWORD *)v379 + 7) = v386;
            v379[64] = v701;
            *(_DWORD *)(v379 + 65) = *(_DWORD *)(v380 + 65);
            v387 = v380[120];
            if (v387 == 255)
            {
              v388 = *(_OWORD *)(v380 + 88);
              *(_OWORD *)(v379 + 72) = *(_OWORD *)(v380 + 72);
              *(_OWORD *)(v379 + 88) = v388;
              *(_OWORD *)(v379 + 104) = *(_OWORD *)(v380 + 104);
              v379[120] = v380[120];
            }
            else
            {
              v392 = v387 & 1;
              v393 = (void *)*((_QWORD *)v380 + 9);
              v394 = *((_QWORD *)v380 + 10);
              v395 = *((_QWORD *)v380 + 11);
              v396 = *((_QWORD *)v380 + 12);
              v702 = *((_QWORD *)v380 + 14);
              v714 = *((_QWORD *)v380 + 13);
              sub_10002B764(v393, v394, v395, v396, v714, v702, v387 & 1);
              *((_QWORD *)v379 + 9) = v393;
              *((_QWORD *)v379 + 10) = v394;
              *((_QWORD *)v379 + 11) = v395;
              *((_QWORD *)v379 + 12) = v396;
              *((_QWORD *)v379 + 13) = v714;
              *((_QWORD *)v379 + 14) = v702;
              v379[120] = v392;
            }
            v4 = v768;
            v3 = v769;
            v379[121] = v380[121];
            v377 = v725;
          }
          else
          {
            v389 = *((_OWORD *)v380 + 5);
            *((_OWORD *)v379 + 4) = *((_OWORD *)v380 + 4);
            *((_OWORD *)v379 + 5) = v389;
            *((_OWORD *)v379 + 6) = *((_OWORD *)v380 + 6);
            *(_OWORD *)(v379 + 106) = *(_OWORD *)(v380 + 106);
            v390 = *((_OWORD *)v380 + 1);
            *(_OWORD *)v379 = *(_OWORD *)v380;
            *((_OWORD *)v379 + 1) = v390;
            v391 = *((_OWORD *)v380 + 3);
            *((_OWORD *)v379 + 2) = *((_OWORD *)v380 + 2);
            *((_OWORD *)v379 + 3) = v391;
            v4 = v768;
            v3 = v769;
          }
          *((_BYTE *)v268 + v377[6]) = *((_BYTE *)v269 + v377[6]);
          *((_BYTE *)v268 + v377[7]) = *((_BYTE *)v269 + v377[7]);
          *((_BYTE *)v268 + v377[8]) = *((_BYTE *)v269 + v377[8]);
          *((_BYTE *)v268 + v377[9]) = *((_BYTE *)v269 + v377[9]);
          *((_BYTE *)v268 + v377[10]) = *((_BYTE *)v269 + v377[10]);
          v397 = v377[11];
          v398 = *(void **)((char *)v269 + v397);
          *(void **)((char *)v268 + v397) = v398;
          v399 = v398;
          v400 = v268;
          v401 = v738;
          v402 = 0;
          goto LABEL_190;
        case 1u:
          v280 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v739 = v273;
          __dstb = v271;
          switch(swift_getEnumCaseMultiPayload(v269, v280))
          {
            case 1u:
              v281 = *v269;
              *v268 = *v269;
              v282 = v281;
              v283 = v268;
              v284 = v280;
              v285 = 1;
              goto LABEL_182;
            case 2u:
              v403 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v403 - 8) + 16))(v268, v269, v403);
              v283 = v268;
              v284 = v280;
              v285 = 2;
              goto LABEL_182;
            case 3u:
              v404 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v404 - 8) + 16))(v268, v269, v404);
              v283 = v268;
              v284 = v280;
              v285 = 3;
              goto LABEL_182;
            case 4u:
              v405 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v405 - 8) + 16))(v268, v269, v405);
              v283 = v268;
              v284 = v280;
              v285 = 4;
              goto LABEL_182;
            case 5u:
              v406 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v406 - 8) + 16))(v268, v269, v406);
              v283 = v268;
              v284 = v280;
              v285 = 5;
              goto LABEL_182;
            case 6u:
              v407 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v407 - 8) + 16))(v268, v269, v407);
              v283 = v268;
              v284 = v280;
              v285 = 6;
              goto LABEL_182;
            case 8u:
              v408 = *v269;
              *v268 = *v269;
              v409 = v408;
              v283 = v268;
              v284 = v280;
              v285 = 8;
              goto LABEL_182;
            case 9u:
              v410 = *v269;
              *v268 = *v269;
              v411 = v410;
              v283 = v268;
              v284 = v280;
              v285 = 9;
LABEL_182:
              swift_storeEnumTagMultiPayload(v283, v284, v285);
              break;
            default:
              memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
              break;
          }
          v412 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v413 = v412[5];
          v414 = (char *)v268 + v413;
          v415 = (char *)v269 + v413;
          v416 = *(uint64_t *)((char *)v269 + v413 + 8);
          if (v416)
          {
            *(_QWORD *)v414 = *(_QWORD *)v415;
            *((_QWORD *)v414 + 1) = v416;
            v418 = (void *)*((_QWORD *)v415 + 2);
            v417 = *((_QWORD *)v415 + 3);
            v419 = *((_QWORD *)v415 + 5);
            v715 = *((_QWORD *)v415 + 4);
            v726 = v412;
            v421 = *((_QWORD *)v415 + 6);
            v420 = *((_QWORD *)v415 + 7);
            v703 = v415[64];
            swift_bridgeObjectRetain(v416);
            sub_10003E1F0(v418, v417, v715, v419, v421, v420, v703);
            *((_QWORD *)v414 + 2) = v418;
            *((_QWORD *)v414 + 3) = v417;
            *((_QWORD *)v414 + 4) = v715;
            *((_QWORD *)v414 + 5) = v419;
            *((_QWORD *)v414 + 6) = v421;
            *((_QWORD *)v414 + 7) = v420;
            v414[64] = v703;
            *(_DWORD *)(v414 + 65) = *(_DWORD *)(v415 + 65);
            v422 = v415[120];
            if (v422 == 255)
            {
              v423 = *(_OWORD *)(v415 + 88);
              *(_OWORD *)(v414 + 72) = *(_OWORD *)(v415 + 72);
              *(_OWORD *)(v414 + 88) = v423;
              *(_OWORD *)(v414 + 104) = *(_OWORD *)(v415 + 104);
              v414[120] = v415[120];
            }
            else
            {
              v427 = v422 & 1;
              v428 = (void *)*((_QWORD *)v415 + 9);
              v429 = *((_QWORD *)v415 + 10);
              v430 = *((_QWORD *)v415 + 11);
              v431 = *((_QWORD *)v415 + 12);
              v704 = *((_QWORD *)v415 + 14);
              v716 = *((_QWORD *)v415 + 13);
              sub_10002B764(v428, v429, v430, v431, v716, v704, v422 & 1);
              *((_QWORD *)v414 + 9) = v428;
              *((_QWORD *)v414 + 10) = v429;
              *((_QWORD *)v414 + 11) = v430;
              *((_QWORD *)v414 + 12) = v431;
              *((_QWORD *)v414 + 13) = v716;
              *((_QWORD *)v414 + 14) = v704;
              v414[120] = v427;
            }
            v4 = v768;
            v3 = v769;
            v414[121] = v415[121];
            v412 = v726;
          }
          else
          {
            v424 = *((_OWORD *)v415 + 5);
            *((_OWORD *)v414 + 4) = *((_OWORD *)v415 + 4);
            *((_OWORD *)v414 + 5) = v424;
            *((_OWORD *)v414 + 6) = *((_OWORD *)v415 + 6);
            *(_OWORD *)(v414 + 106) = *(_OWORD *)(v415 + 106);
            v425 = *((_OWORD *)v415 + 1);
            *(_OWORD *)v414 = *(_OWORD *)v415;
            *((_OWORD *)v414 + 1) = v425;
            v426 = *((_OWORD *)v415 + 3);
            *((_OWORD *)v414 + 2) = *((_OWORD *)v415 + 2);
            *((_OWORD *)v414 + 3) = v426;
            v4 = v768;
            v3 = v769;
          }
          *((_BYTE *)v268 + v412[6]) = *((_BYTE *)v269 + v412[6]);
          *((_BYTE *)v268 + v412[7]) = *((_BYTE *)v269 + v412[7]);
          *((_BYTE *)v268 + v412[8]) = *((_BYTE *)v269 + v412[8]);
          *((_BYTE *)v268 + v412[9]) = *((_BYTE *)v269 + v412[9]);
          *((_BYTE *)v268 + v412[10]) = *((_BYTE *)v269 + v412[10]);
          v432 = v412[11];
          v433 = *(void **)((char *)v269 + v432);
          *(void **)((char *)v268 + v432) = v433;
          v434 = v433;
          v400 = v268;
          v401 = v739;
          v402 = 1;
LABEL_190:
          swift_storeEnumTagMultiPayload(v400, v401, v402);
          v6 = v778;
          v271 = __dstb;
          break;
        case 2u:
          v740 = v273;
          __dstc = v271;
          v286 = v4;
          v287 = *v269;
          *v268 = *v269;
          v288 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v289 = (void **)((char *)v268 + v288);
          v290 = (void **)((char *)v269 + v288);
          v291 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v292 = *(_QWORD *)(v291 - 8);
          v293 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v292 + 48);
          v294 = v287;
          if (v293(v290, 1, v291))
          {
            v295 = sub_10002A750(&qword_100644980);
            memcpy(v289, v290, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
            v4 = v286;
            v6 = v778;
            v271 = __dstc;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v290, v291))
            {
              case 1u:
                v335 = *v290;
                *v289 = *v290;
                v336 = v335;
                v337 = v289;
                v338 = v291;
                v339 = 1;
                goto LABEL_199;
              case 2u:
                v435 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v435 - 8) + 16))(v289, v290, v435);
                v337 = v289;
                v338 = v291;
                v339 = 2;
                goto LABEL_199;
              case 3u:
                v436 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v436 - 8) + 16))(v289, v290, v436);
                v337 = v289;
                v338 = v291;
                v339 = 3;
                goto LABEL_199;
              case 4u:
                v437 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v437 - 8) + 16))(v289, v290, v437);
                v337 = v289;
                v338 = v291;
                v339 = 4;
                goto LABEL_199;
              case 5u:
                v438 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v438 - 8) + 16))(v289, v290, v438);
                v337 = v289;
                v338 = v291;
                v339 = 5;
                goto LABEL_199;
              case 6u:
                v439 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v439 - 8) + 16))(v289, v290, v439);
                v337 = v289;
                v338 = v291;
                v339 = 6;
                goto LABEL_199;
              case 8u:
                v440 = *v290;
                *v289 = *v290;
                v441 = v440;
                v337 = v289;
                v338 = v291;
                v339 = 8;
                goto LABEL_199;
              case 9u:
                v442 = *v290;
                *v289 = *v290;
                v443 = v442;
                v337 = v289;
                v338 = v291;
                v339 = 9;
LABEL_199:
                swift_storeEnumTagMultiPayload(v337, v338, v339);
                break;
              default:
                memcpy(v289, v290, *(_QWORD *)(v292 + 64));
                break;
            }
            v271 = __dstc;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v292 + 56))(v289, 0, 1, v291);
            v4 = v286;
            v6 = v778;
          }
          v444 = v268;
          v445 = v740;
          v446 = 2;
          goto LABEL_220;
        case 3u:
          v741 = v273;
          __dstd = v271;
          v296 = v4;
          v297 = *v269;
          *v268 = *v269;
          v298 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v299 = (void **)((char *)v268 + v298);
          v300 = (void **)((char *)v269 + v298);
          v301 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v302 = *(_QWORD *)(v301 - 8);
          v303 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v302 + 48);
          v304 = v297;
          if (v303(v300, 1, v301))
          {
            v305 = sub_10002A750(&qword_100644980);
            memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
            v4 = v296;
            v3 = v769;
            v6 = v778;
            v271 = __dstd;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v300, v301))
            {
              case 1u:
                v340 = *v300;
                *v299 = *v300;
                v341 = v340;
                v342 = v299;
                v343 = v301;
                v344 = 1;
                goto LABEL_222;
              case 2u:
                v447 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v447 - 8) + 16))(v299, v300, v447);
                v342 = v299;
                v343 = v301;
                v344 = 2;
                goto LABEL_222;
              case 3u:
                v448 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v448 - 8) + 16))(v299, v300, v448);
                v342 = v299;
                v343 = v301;
                v344 = 3;
                goto LABEL_222;
              case 4u:
                v449 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v449 - 8) + 16))(v299, v300, v449);
                v342 = v299;
                v343 = v301;
                v344 = 4;
                goto LABEL_222;
              case 5u:
                v464 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v299, v300, v464);
                v342 = v299;
                v343 = v301;
                v344 = 5;
                goto LABEL_222;
              case 6u:
                v450 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v450 - 8) + 16))(v299, v300, v450);
                v342 = v299;
                v343 = v301;
                v344 = 6;
                goto LABEL_222;
              case 8u:
                v451 = *v300;
                *v299 = *v300;
                v452 = v451;
                v342 = v299;
                v343 = v301;
                v344 = 8;
                goto LABEL_222;
              case 9u:
                v453 = *v300;
                *v299 = *v300;
                v454 = v453;
                v342 = v299;
                v343 = v301;
                v344 = 9;
LABEL_222:
                swift_storeEnumTagMultiPayload(v342, v343, v344);
                break;
              default:
                memcpy(v299, v300, *(_QWORD *)(v302 + 64));
                break;
            }
            v4 = v296;
            v3 = v769;
            v271 = __dstd;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v302 + 56))(v299, 0, 1, v301);
            v6 = v778;
          }
          v318 = v268;
          v319 = v741;
          v320 = 3;
          goto LABEL_225;
        case 4u:
          v742 = v273;
          __dste = v271;
          v306 = v4;
          v307 = *v269;
          *v268 = *v269;
          v308 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v309 = (void **)((char *)v268 + v308);
          v310 = (void **)((char *)v269 + v308);
          v311 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v312 = *(_QWORD *)(v311 - 8);
          v313 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v312 + 48);
          v314 = v307;
          if (v313(v310, 1, v311))
          {
            v315 = sub_10002A750(&qword_100644980);
            memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
            v4 = v306;
            v6 = v778;
            v271 = __dste;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v310, v311))
            {
              case 1u:
                v345 = *v310;
                *v309 = *v310;
                v346 = v345;
                v347 = v309;
                v348 = v311;
                v349 = 1;
                goto LABEL_217;
              case 2u:
                v455 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v455 - 8) + 16))(v309, v310, v455);
                v347 = v309;
                v348 = v311;
                v349 = 2;
                goto LABEL_217;
              case 3u:
                v456 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v456 - 8) + 16))(v309, v310, v456);
                v347 = v309;
                v348 = v311;
                v349 = 3;
                goto LABEL_217;
              case 4u:
                v457 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v457 - 8) + 16))(v309, v310, v457);
                v347 = v309;
                v348 = v311;
                v349 = 4;
                goto LABEL_217;
              case 5u:
                v458 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v458 - 8) + 16))(v309, v310, v458);
                v347 = v309;
                v348 = v311;
                v349 = 5;
                goto LABEL_217;
              case 6u:
                v459 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v459 - 8) + 16))(v309, v310, v459);
                v347 = v309;
                v348 = v311;
                v349 = 6;
                goto LABEL_217;
              case 8u:
                v460 = *v310;
                *v309 = *v310;
                v461 = v460;
                v347 = v309;
                v348 = v311;
                v349 = 8;
                goto LABEL_217;
              case 9u:
                v462 = *v310;
                *v309 = *v310;
                v463 = v462;
                v347 = v309;
                v348 = v311;
                v349 = 9;
LABEL_217:
                swift_storeEnumTagMultiPayload(v347, v348, v349);
                break;
              default:
                memcpy(v309, v310, *(_QWORD *)(v312 + 64));
                break;
            }
            v271 = __dste;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v312 + 56))(v309, 0, 1, v311);
            v4 = v306;
            v6 = v778;
          }
          v444 = v268;
          v445 = v742;
          v446 = 4;
LABEL_220:
          swift_storeEnumTagMultiPayload(v444, v445, v446);
          v3 = v769;
          break;
        case 5u:
          *v268 = *v269;
          *((_BYTE *)v268 + 8) = *((_BYTE *)v269 + 8);
          *(_WORD *)((char *)v268 + 9) = *(_WORD *)((char *)v269 + 9);
          v316 = v269[2];
          v268[2] = v316;
          v317 = v316;
          v318 = v268;
          v319 = v273;
          v320 = 5;
          goto LABEL_225;
        case 6u:
          v330 = *v269;
          *v268 = *v269;
          v331 = v330;
          v318 = v268;
          v319 = v273;
          v320 = 6;
          goto LABEL_225;
        case 7u:
          __dstf = v271;
          v321 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v322 = *(_QWORD *)(v321 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v322 + 48))(v269, 1, v321))
          {
            v323 = sub_10002A750(&qword_100644600);
            memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v323 - 8) + 64));
          }
          else
          {
            v743 = v273;
            v350 = *v269;
            *v268 = *v269;
            v351 = *(int *)(v321 + 20);
            v724 = (char *)v268 + v351;
            v352 = v4;
            v353 = (char *)v269 + v351;
            v354 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v355 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v354 - 8) + 16);
            v356 = v350;
            v273 = v743;
            v357 = swift_bridgeObjectRetain(v356);
            v358 = v353;
            v4 = v352;
            v359 = v354;
            v3 = v769;
            v6 = v778;
            v355(v724, v358, v359, v357);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v322 + 56))(v268, 0, 1, v321);
          }
          v360 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v361 = (void **)((char *)v268 + v360);
          v362 = (void **)((char *)v269 + v360);
          v363 = v362[1];
          v271 = __dstf;
          if (v363)
          {
            *v361 = *v362;
            v361[1] = v363;
            v364 = (void *)v362[2];
            v361[2] = v364;
            swift_bridgeObjectRetain(v363);
            v365 = v364;
          }
          else
          {
            *(_OWORD *)v361 = *(_OWORD *)v362;
            v361[2] = v362[2];
          }
          v318 = v268;
          v319 = v273;
          v320 = 7;
          goto LABEL_225;
        case 8u:
          v332 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v333 = *(_QWORD *)(v332 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v333 + 48))(v269, 1, v332))
          {
            v334 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v334 - 8) + 64));
          }
          else
          {
            v366 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v268, v269, v366);
            *((_BYTE *)v268 + *(int *)(v332 + 20)) = *((_BYTE *)v269 + *(int *)(v332 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v333 + 56))(v268, 0, 1, v332);
          }
          v367 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v268 + *(int *)(v367 + 20)) = *(void **)((char *)v269 + *(int *)(v367 + 20));
          v318 = v268;
          v319 = v273;
          v320 = 8;
          goto LABEL_225;
        case 9u:
          *(_BYTE *)v268 = *(_BYTE *)v269;
          v324 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v325 = v273;
          v326 = (char *)v268 + v324;
          v327 = (char *)v269 + v324;
          v328 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v326, v327, v328);
          v318 = v268;
          v319 = v325;
          v320 = 9;
LABEL_225:
          swift_storeEnumTagMultiPayload(v318, v319, v320);
          break;
        default:
          memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
          break;
      }
      v465 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel(0, v329);
      *((_BYTE *)v268 + v465[5]) = *((_BYTE *)v269 + v465[5]);
      v466 = v465[6];
      v467 = *(void **)((char *)v269 + v466);
      *(void **)((char *)v268 + v466) = v467;
      v468 = v465[7];
      v469 = *(void **)((char *)v269 + v468);
      *(void **)((char *)v268 + v468) = v469;
      v470 = v465[8];
      v471 = *(void **)((char *)v269 + v470);
      *(void **)((char *)v268 + v470) = v471;
      *((_BYTE *)v268 + v465[9]) = *((_BYTE *)v269 + v465[9]);
      *(void **)((char *)v268 + *(int *)(v270 + 48)) = *(void **)((char *)v269 + *(int *)(v270 + 48));
      v472 = (void (*)(void **, _QWORD, uint64_t, uint64_t, __n128))*((_QWORD *)v271 + 7);
      v473 = v467;
      swift_bridgeObjectRetain(v469);
      v474 = swift_bridgeObjectRetain(v471);
      v472(v268, 0, 1, v270, v474);
    }
    v475 = v6[19];
    v476 = v6[20];
    v477 = *(void **)((char *)v3 + v475);
    *(_QWORD *)(v4 + v475) = v477;
    v478 = (_QWORD *)(v4 + v476);
    v479 = (uint64_t *)((char *)v3 + v476);
    v480 = v479[1];
    *v478 = *v479;
    v478[1] = v480;
    v481 = v6[22];
    *(_BYTE *)(v4 + v6[21]) = *((_BYTE *)v3 + v6[21]);
    v482 = (_QWORD *)(v4 + v481);
    v483 = (uint64_t *)((char *)v3 + v481);
    v484 = v483[1];
    *v482 = *v483;
    v482[1] = v484;
    v485 = v6[23];
    v486 = v6[24];
    v487 = (_QWORD *)(v4 + v485);
    v488 = (uint64_t *)((char *)v3 + v485);
    v489 = v488[1];
    *v487 = *v488;
    v487[1] = v489;
    v490 = v3;
    v491 = *(void **)((char *)v3 + v486);
    *(_QWORD *)(v4 + v486) = v491;
    v492 = v6[25];
    v493 = v6[26];
    v494 = *(uint64_t *)((char *)v490 + v492);
    *(_QWORD *)(v4 + v492) = v494;
    v495 = (_QWORD *)(v4 + v493);
    v496 = (uint64_t)v490 + v493;
    v498 = *(void **)((char *)v490 + v493);
    v497 = *(uint64_t *)((char *)v490 + v493 + 8);
    *v495 = v498;
    v495[1] = v497;
    v499 = *(uint64_t *)((char *)v490 + v493 + 16);
    v495[2] = v499;
    v500 = (void **)((char *)v490 + v493 + 24);
    __dstg = *v500;
    v501 = v477;
    swift_bridgeObjectRetain(v480);
    swift_bridgeObjectRetain(v484);
    swift_bridgeObjectRetain(v489);
    v502 = v491;
    swift_bridgeObjectRetain(v494);
    v503 = v498;
    swift_bridgeObjectRetain(v499);
    if (__dstg)
    {
      v504 = *(_QWORD *)(v496 + 32);
      v495[3] = __dstg;
      v495[4] = v504;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v495 + 3) = *(_OWORD *)v500;
    }
    v505 = v778[27];
    v21 = v768;
    v506 = (_QWORD *)(v768 + v505);
    v507 = (uint64_t *)((char *)v769 + v505);
    v508 = *(void **)((char *)v769 + v505);
    v509 = v507[1];
    *v506 = v508;
    v506[1] = v509;
    v510 = v507[2];
    v506[2] = v510;
    v511 = v507[3];
    v512 = v508;
    swift_bridgeObjectRetain(v510);
    if (v511)
    {
      v513 = v507[4];
      v506[3] = v511;
      v506[4] = v513;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v506 + 3) = *(_OWORD *)(v507 + 3);
    }
    v514 = v778[28];
    v515 = v768 + v514;
    v516 = (uint64_t)v769 + v514;
    v517 = *(_OWORD *)((char *)v769 + v514);
    *(_OWORD *)(v768 + v514) = v517;
    swift_unknownObjectRetain(v517);
    v518 = sub_10002A750(&qword_10064CB58);
    v519 = *(int *)(v518 + 28);
    v520 = (void **)(v515 + v519);
    v521 = (void **)(v516 + v519);
    v522 = sub_10002A750(&qword_10064CB70);
    v523 = *(_QWORD *)(v522 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v523 + 48))(v521, 1, v522))
    {
      v524 = sub_10002A750(&qword_10065A450);
      memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v524 - 8) + 64));
    }
    else
    {
      v525 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v521, v525))
      {
        case 0u:
          v526 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v779 = v525;
          switch(swift_getEnumCaseMultiPayload(v521, v526))
          {
            case 1u:
              v527 = *v521;
              *v520 = *v521;
              v528 = v527;
              v529 = v520;
              v530 = v526;
              v531 = 1;
              goto LABEL_275;
            case 2u:
              v606 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v606 - 8) + 16))(v520, v521, v606);
              v529 = v520;
              v530 = v526;
              v531 = 2;
              goto LABEL_275;
            case 3u:
              v607 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v607 - 8) + 16))(v520, v521, v607);
              v529 = v520;
              v530 = v526;
              v531 = 3;
              goto LABEL_275;
            case 4u:
              v608 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v608 - 8) + 16))(v520, v521, v608);
              v529 = v520;
              v530 = v526;
              v531 = 4;
              goto LABEL_275;
            case 5u:
              v609 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v609 - 8) + 16))(v520, v521, v609);
              v529 = v520;
              v530 = v526;
              v531 = 5;
              goto LABEL_275;
            case 6u:
              v610 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v610 - 8) + 16))(v520, v521, v610);
              v529 = v520;
              v530 = v526;
              v531 = 6;
              goto LABEL_275;
            case 8u:
              v611 = *v521;
              *v520 = *v521;
              v612 = v611;
              v529 = v520;
              v530 = v526;
              v531 = 8;
              goto LABEL_275;
            case 9u:
              v613 = *v521;
              *v520 = *v521;
              v614 = v613;
              v529 = v520;
              v530 = v526;
              v531 = 9;
LABEL_275:
              swift_storeEnumTagMultiPayload(v529, v530, v531);
              break;
            default:
              memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
              break;
          }
          v615 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v616 = v615[5];
          v617 = (char *)v520 + v616;
          v618 = (char *)v521 + v616;
          v619 = *(uint64_t *)((char *)v521 + v616 + 8);
          if (v619)
          {
            *(_QWORD *)v617 = *(_QWORD *)v618;
            *((_QWORD *)v617 + 1) = v619;
            v774 = (void *)*((_QWORD *)v618 + 2);
            v748 = *((_QWORD *)v618 + 4);
            __dstl = (void *)*((_QWORD *)v618 + 3);
            v717 = *((_QWORD *)v618 + 6);
            v728 = *((_QWORD *)v618 + 5);
            v705 = *((_QWORD *)v618 + 7);
            v693 = v618[64];
            swift_bridgeObjectRetain(v619);
            sub_10003E1F0(v774, (uint64_t)__dstl, v748, v728, v717, v705, v693);
            *((_QWORD *)v617 + 2) = v774;
            *((_QWORD *)v617 + 3) = __dstl;
            *((_QWORD *)v617 + 4) = v748;
            *((_QWORD *)v617 + 5) = v728;
            *((_QWORD *)v617 + 6) = v717;
            *((_QWORD *)v617 + 7) = v705;
            v617[64] = v693;
            *(_DWORD *)(v617 + 65) = *(_DWORD *)(v618 + 65);
            v620 = v618[120];
            if (v620 == 255)
            {
              v621 = *(_OWORD *)(v618 + 88);
              *(_OWORD *)(v617 + 72) = *(_OWORD *)(v618 + 72);
              *(_OWORD *)(v617 + 88) = v621;
              *(_OWORD *)(v617 + 104) = *(_OWORD *)(v618 + 104);
              v617[120] = v618[120];
            }
            else
            {
              v775 = v620 & 1;
              v749 = *((_QWORD *)v618 + 10);
              __dstm = (void *)*((_QWORD *)v618 + 9);
              v718 = *((_QWORD *)v618 + 12);
              v729 = *((_QWORD *)v618 + 11);
              v694 = *((_QWORD *)v618 + 14);
              v706 = *((_QWORD *)v618 + 13);
              sub_10002B764(__dstm, v749, v729, v718, v706, v694, v620 & 1);
              *((_QWORD *)v617 + 9) = __dstm;
              *((_QWORD *)v617 + 10) = v749;
              *((_QWORD *)v617 + 11) = v729;
              *((_QWORD *)v617 + 12) = v718;
              *((_QWORD *)v617 + 13) = v706;
              *((_QWORD *)v617 + 14) = v694;
              v617[120] = v775;
            }
            v617[121] = v618[121];
          }
          else
          {
            v622 = *((_OWORD *)v618 + 5);
            *((_OWORD *)v617 + 4) = *((_OWORD *)v618 + 4);
            *((_OWORD *)v617 + 5) = v622;
            *((_OWORD *)v617 + 6) = *((_OWORD *)v618 + 6);
            *(_OWORD *)(v617 + 106) = *(_OWORD *)(v618 + 106);
            v623 = *((_OWORD *)v618 + 1);
            *(_OWORD *)v617 = *(_OWORD *)v618;
            *((_OWORD *)v617 + 1) = v623;
            v624 = *((_OWORD *)v618 + 3);
            *((_OWORD *)v617 + 2) = *((_OWORD *)v618 + 2);
            *((_OWORD *)v617 + 3) = v624;
          }
          *((_BYTE *)v520 + v615[6]) = *((_BYTE *)v521 + v615[6]);
          *((_BYTE *)v520 + v615[7]) = *((_BYTE *)v521 + v615[7]);
          *((_BYTE *)v520 + v615[8]) = *((_BYTE *)v521 + v615[8]);
          *((_BYTE *)v520 + v615[9]) = *((_BYTE *)v521 + v615[9]);
          *((_BYTE *)v520 + v615[10]) = *((_BYTE *)v521 + v615[10]);
          v625 = v615[11];
          v626 = *(void **)((char *)v521 + v625);
          *(void **)((char *)v520 + v625) = v626;
          v627 = v626;
          v628 = v520;
          v629 = v779;
          v630 = 0;
          goto LABEL_299;
        case 1u:
          v532 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v780 = v525;
          switch(swift_getEnumCaseMultiPayload(v521, v532))
          {
            case 1u:
              v533 = *v521;
              *v520 = *v521;
              v534 = v533;
              v535 = v520;
              v536 = v532;
              v537 = 1;
              goto LABEL_291;
            case 2u:
              v631 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v631 - 8) + 16))(v520, v521, v631);
              v535 = v520;
              v536 = v532;
              v537 = 2;
              goto LABEL_291;
            case 3u:
              v632 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v632 - 8) + 16))(v520, v521, v632);
              v535 = v520;
              v536 = v532;
              v537 = 3;
              goto LABEL_291;
            case 4u:
              v633 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v633 - 8) + 16))(v520, v521, v633);
              v535 = v520;
              v536 = v532;
              v537 = 4;
              goto LABEL_291;
            case 5u:
              v634 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v634 - 8) + 16))(v520, v521, v634);
              v535 = v520;
              v536 = v532;
              v537 = 5;
              goto LABEL_291;
            case 6u:
              v635 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v635 - 8) + 16))(v520, v521, v635);
              v535 = v520;
              v536 = v532;
              v537 = 6;
              goto LABEL_291;
            case 8u:
              v636 = *v521;
              *v520 = *v521;
              v637 = v636;
              v535 = v520;
              v536 = v532;
              v537 = 8;
              goto LABEL_291;
            case 9u:
              v638 = *v521;
              *v520 = *v521;
              v639 = v638;
              v535 = v520;
              v536 = v532;
              v537 = 9;
LABEL_291:
              swift_storeEnumTagMultiPayload(v535, v536, v537);
              break;
            default:
              memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
              break;
          }
          v640 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v641 = v640[5];
          v642 = (char *)v520 + v641;
          v643 = (char *)v521 + v641;
          v644 = *(uint64_t *)((char *)v521 + v641 + 8);
          if (v644)
          {
            *(_QWORD *)v642 = *(_QWORD *)v643;
            *((_QWORD *)v642 + 1) = v644;
            v776 = (void *)*((_QWORD *)v643 + 2);
            v750 = *((_QWORD *)v643 + 4);
            __dstn = (void *)*((_QWORD *)v643 + 3);
            v719 = *((_QWORD *)v643 + 6);
            v730 = *((_QWORD *)v643 + 5);
            v707 = *((_QWORD *)v643 + 7);
            v695 = v643[64];
            swift_bridgeObjectRetain(v644);
            sub_10003E1F0(v776, (uint64_t)__dstn, v750, v730, v719, v707, v695);
            *((_QWORD *)v642 + 2) = v776;
            *((_QWORD *)v642 + 3) = __dstn;
            *((_QWORD *)v642 + 4) = v750;
            *((_QWORD *)v642 + 5) = v730;
            *((_QWORD *)v642 + 6) = v719;
            *((_QWORD *)v642 + 7) = v707;
            v642[64] = v695;
            *(_DWORD *)(v642 + 65) = *(_DWORD *)(v643 + 65);
            v645 = v643[120];
            if (v645 == 255)
            {
              v646 = *(_OWORD *)(v643 + 88);
              *(_OWORD *)(v642 + 72) = *(_OWORD *)(v643 + 72);
              *(_OWORD *)(v642 + 88) = v646;
              *(_OWORD *)(v642 + 104) = *(_OWORD *)(v643 + 104);
              v642[120] = v643[120];
            }
            else
            {
              v777 = v645 & 1;
              v751 = *((_QWORD *)v643 + 10);
              __dsto = (void *)*((_QWORD *)v643 + 9);
              v720 = *((_QWORD *)v643 + 12);
              v731 = *((_QWORD *)v643 + 11);
              v696 = *((_QWORD *)v643 + 14);
              v708 = *((_QWORD *)v643 + 13);
              sub_10002B764(__dsto, v751, v731, v720, v708, v696, v645 & 1);
              *((_QWORD *)v642 + 9) = __dsto;
              *((_QWORD *)v642 + 10) = v751;
              *((_QWORD *)v642 + 11) = v731;
              *((_QWORD *)v642 + 12) = v720;
              *((_QWORD *)v642 + 13) = v708;
              *((_QWORD *)v642 + 14) = v696;
              v642[120] = v777;
            }
            v642[121] = v643[121];
          }
          else
          {
            v647 = *((_OWORD *)v643 + 5);
            *((_OWORD *)v642 + 4) = *((_OWORD *)v643 + 4);
            *((_OWORD *)v642 + 5) = v647;
            *((_OWORD *)v642 + 6) = *((_OWORD *)v643 + 6);
            *(_OWORD *)(v642 + 106) = *(_OWORD *)(v643 + 106);
            v648 = *((_OWORD *)v643 + 1);
            *(_OWORD *)v642 = *(_OWORD *)v643;
            *((_OWORD *)v642 + 1) = v648;
            v649 = *((_OWORD *)v643 + 3);
            *((_OWORD *)v642 + 2) = *((_OWORD *)v643 + 2);
            *((_OWORD *)v642 + 3) = v649;
          }
          *((_BYTE *)v520 + v640[6]) = *((_BYTE *)v521 + v640[6]);
          *((_BYTE *)v520 + v640[7]) = *((_BYTE *)v521 + v640[7]);
          *((_BYTE *)v520 + v640[8]) = *((_BYTE *)v521 + v640[8]);
          *((_BYTE *)v520 + v640[9]) = *((_BYTE *)v521 + v640[9]);
          *((_BYTE *)v520 + v640[10]) = *((_BYTE *)v521 + v640[10]);
          v650 = v640[11];
          v651 = *(void **)((char *)v521 + v650);
          *(void **)((char *)v520 + v650) = v651;
          v652 = v651;
          v628 = v520;
          v629 = v780;
          v630 = 1;
LABEL_299:
          swift_storeEnumTagMultiPayload(v628, v629, v630);
          v21 = v768;
          break;
        case 2u:
          v744 = v518;
          v770 = v523;
          v781 = v525;
          v538 = *v521;
          *v520 = *v521;
          v539 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          __dsth = (void **)((char *)v520 + v539);
          v540 = (void **)((char *)v521 + v539);
          v541 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v542 = *(_QWORD *)(v541 - 8);
          v543 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v542 + 48);
          v544 = v538;
          if (v543(v540, 1, v541))
          {
            v545 = sub_10002A750(&qword_100644980);
            memcpy(__dsth, v540, *(_QWORD *)(*(_QWORD *)(v545 - 8) + 64));
            v21 = v768;
            v523 = v770;
            v518 = v744;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v540, v541))
            {
              case 1u:
                v577 = *v540;
                *__dsth = *v540;
                v578 = v577;
                v579 = __dsth;
                v580 = v541;
                v581 = 1;
                goto LABEL_308;
              case 2u:
                v653 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v653 - 8) + 16))(__dsth, v540, v653);
                v579 = __dsth;
                v580 = v541;
                v581 = 2;
                goto LABEL_308;
              case 3u:
                v654 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v654 - 8) + 16))(__dsth, v540, v654);
                v579 = __dsth;
                v580 = v541;
                v581 = 3;
                goto LABEL_308;
              case 4u:
                v655 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v655 - 8) + 16))(__dsth, v540, v655);
                v579 = __dsth;
                v580 = v541;
                v581 = 4;
                goto LABEL_308;
              case 5u:
                v656 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v656 - 8) + 16))(__dsth, v540, v656);
                v579 = __dsth;
                v580 = v541;
                v581 = 5;
                goto LABEL_308;
              case 6u:
                v657 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v657 - 8) + 16))(__dsth, v540, v657);
                v579 = __dsth;
                v580 = v541;
                v581 = 6;
                goto LABEL_308;
              case 8u:
                v658 = *v540;
                *__dsth = *v540;
                v659 = v658;
                v579 = __dsth;
                v580 = v541;
                v581 = 8;
                goto LABEL_308;
              case 9u:
                v660 = *v540;
                *__dsth = *v540;
                v661 = v660;
                v579 = __dsth;
                v580 = v541;
                v581 = 9;
LABEL_308:
                swift_storeEnumTagMultiPayload(v579, v580, v581);
                v523 = v770;
                break;
              default:
                memcpy(__dsth, v540, *(_QWORD *)(v542 + 64));
                v523 = v770;
                break;
            }
            v518 = v744;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v542 + 56))(__dsth, 0, 1, v541);
            v21 = v768;
          }
          v562 = v520;
          v563 = v781;
          v564 = 2;
          goto LABEL_333;
        case 3u:
          v771 = v523;
          v782 = v525;
          v546 = *v521;
          *v520 = *v521;
          v547 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v745 = (void **)((char *)v521 + v547);
          __dsti = (void **)((char *)v520 + v547);
          v548 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v549 = *(_QWORD *)(v548 - 8);
          v550 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v549 + 48);
          v551 = v546;
          if (v550(v745, 1, v548))
          {
            v552 = sub_10002A750(&qword_100644980);
            memcpy(__dsti, v745, *(_QWORD *)(*(_QWORD *)(v552 - 8) + 64));
            v21 = v768;
            v523 = v771;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v745, v548))
            {
              case 1u:
                v582 = *v745;
                *__dsti = *v745;
                v583 = v582;
                v584 = __dsti;
                v585 = v548;
                v586 = 1;
                goto LABEL_330;
              case 2u:
                v662 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v662 - 8) + 16))(__dsti, v745, v662);
                v584 = __dsti;
                v585 = v548;
                v586 = 2;
                goto LABEL_330;
              case 3u:
                v663 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v663 - 8) + 16))(__dsti, v745, v663);
                v584 = __dsti;
                v585 = v548;
                v586 = 3;
                goto LABEL_330;
              case 4u:
                v664 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v664 - 8) + 16))(__dsti, v745, v664);
                v584 = __dsti;
                v585 = v548;
                v586 = 4;
                goto LABEL_330;
              case 5u:
                v681 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v681 - 8) + 16))(__dsti, v745, v681);
                v584 = __dsti;
                v585 = v548;
                v586 = 5;
                goto LABEL_330;
              case 6u:
                v665 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v665 - 8) + 16))(__dsti, v745, v665);
                v584 = __dsti;
                v585 = v548;
                v586 = 6;
                goto LABEL_330;
              case 8u:
                v668 = *v745;
                *__dsti = *v745;
                v669 = v668;
                v584 = __dsti;
                v585 = v548;
                v586 = 8;
                goto LABEL_330;
              case 9u:
                v670 = *v745;
                *__dsti = *v745;
                v671 = v670;
                v584 = __dsti;
                v585 = v548;
                v586 = 9;
LABEL_330:
                swift_storeEnumTagMultiPayload(v584, v585, v586);
                v667 = v548;
                v21 = v768;
                v523 = v771;
                v666 = v549;
                break;
              default:
                memcpy(__dsti, v745, *(_QWORD *)(v549 + 64));
                v666 = v549;
                v667 = v548;
                v21 = v768;
                v523 = v771;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v666 + 56))(__dsti, 0, 1, v667);
          }
          v562 = v520;
          v563 = v782;
          v564 = 3;
          goto LABEL_333;
        case 4u:
          v772 = v523;
          v783 = v525;
          v553 = *v521;
          *v520 = *v521;
          v554 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v746 = (void **)((char *)v521 + v554);
          __dstj = (void **)((char *)v520 + v554);
          v555 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v556 = *(_QWORD *)(v555 - 8);
          v557 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v556 + 48);
          v558 = v553;
          if (v557(v746, 1, v555))
          {
            v559 = sub_10002A750(&qword_100644980);
            memcpy(__dstj, v746, *(_QWORD *)(*(_QWORD *)(v559 - 8) + 64));
            v21 = v768;
            v523 = v772;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v746, v555))
            {
              case 1u:
                v587 = *v746;
                *__dstj = *v746;
                v588 = v587;
                v589 = __dstj;
                v590 = v555;
                v591 = 1;
                goto LABEL_326;
              case 2u:
                v672 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v672 - 8) + 16))(__dstj, v746, v672);
                v589 = __dstj;
                v590 = v555;
                v591 = 2;
                goto LABEL_326;
              case 3u:
                v673 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v673 - 8) + 16))(__dstj, v746, v673);
                v589 = __dstj;
                v590 = v555;
                v591 = 3;
                goto LABEL_326;
              case 4u:
                v674 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v674 - 8) + 16))(__dstj, v746, v674);
                v589 = __dstj;
                v590 = v555;
                v591 = 4;
                goto LABEL_326;
              case 5u:
                v675 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v675 - 8) + 16))(__dstj, v746, v675);
                v589 = __dstj;
                v590 = v555;
                v591 = 5;
                goto LABEL_326;
              case 6u:
                v676 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v676 - 8) + 16))(__dstj, v746, v676);
                v589 = __dstj;
                v590 = v555;
                v591 = 6;
                goto LABEL_326;
              case 8u:
                v677 = *v746;
                *__dstj = *v746;
                v678 = v677;
                v589 = __dstj;
                v590 = v555;
                v591 = 8;
                goto LABEL_326;
              case 9u:
                v679 = *v746;
                *__dstj = *v746;
                v680 = v679;
                v589 = __dstj;
                v590 = v555;
                v591 = 9;
LABEL_326:
                swift_storeEnumTagMultiPayload(v589, v590, v591);
                v523 = v772;
                break;
              default:
                memcpy(__dstj, v746, *(_QWORD *)(v556 + 64));
                v523 = v772;
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v556 + 56))(__dstj, 0, 1, v555);
            v21 = v768;
          }
          v562 = v520;
          v563 = v783;
          v564 = 4;
          goto LABEL_333;
        case 5u:
          *v520 = *v521;
          *((_BYTE *)v520 + 8) = *((_BYTE *)v521 + 8);
          *(_WORD *)((char *)v520 + 9) = *(_WORD *)((char *)v521 + 9);
          v560 = v521[2];
          v520[2] = v560;
          v561 = v560;
          v562 = v520;
          v563 = v525;
          v564 = 5;
          goto LABEL_333;
        case 6u:
          v572 = *v521;
          *v520 = *v521;
          v573 = v572;
          v562 = v520;
          v563 = v525;
          v564 = 6;
          goto LABEL_333;
        case 7u:
          v784 = v525;
          v565 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v566 = *(_QWORD *)(v565 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v566 + 48))(v521, 1, v565))
          {
            v567 = sub_10002A750(&qword_100644600);
            memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v567 - 8) + 64));
          }
          else
          {
            v727 = *v521;
            *v520 = *v521;
            v592 = *(int *)(v565 + 20);
            v747 = (char *)v521 + v592;
            __dstk = (char *)v520 + v592;
            v593 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v773 = v523;
            v594 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v593 - 8) + 16);
            v595 = swift_bridgeObjectRetain(v727);
            v596 = v593;
            v21 = v768;
            v594(__dstk, v747, v596, v595);
            v523 = v773;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v566 + 56))(v520, 0, 1, v565);
          }
          v597 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v598 = (void **)((char *)v520 + v597);
          v599 = (void **)((char *)v521 + v597);
          v600 = v599[1];
          if (v600)
          {
            *v598 = *v599;
            v598[1] = v600;
            v601 = v523;
            v602 = (void *)v599[2];
            v598[2] = v602;
            swift_bridgeObjectRetain(v600);
            v603 = v602;
            v523 = v601;
          }
          else
          {
            *(_OWORD *)v598 = *(_OWORD *)v599;
            v598[2] = v599[2];
          }
          v562 = v520;
          v563 = v784;
          v564 = 7;
          goto LABEL_333;
        case 8u:
          v786 = v525;
          v574 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v575 = *(_QWORD *)(v574 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v575 + 48))(v521, 1, v574))
          {
            v576 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v576 - 8) + 64));
          }
          else
          {
            v604 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v604 - 8) + 16))(v520, v521, v604);
            *((_BYTE *)v520 + *(int *)(v574 + 20)) = *((_BYTE *)v521 + *(int *)(v574 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v575 + 56))(v520, 0, 1, v574);
          }
          v605 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v520 + *(int *)(v605 + 20)) = *(void **)((char *)v521 + *(int *)(v605 + 20));
          v562 = v520;
          v563 = v786;
          v564 = 8;
          goto LABEL_333;
        case 9u:
          *(_BYTE *)v520 = *(_BYTE *)v521;
          v568 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v785 = v525;
          v569 = (char *)v520 + v568;
          v570 = (char *)v521 + v568;
          v571 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v571 - 8) + 16))(v569, v570, v571);
          v562 = v520;
          v563 = v785;
          v564 = 9;
LABEL_333:
          swift_storeEnumTagMultiPayload(v562, v563, v564);
          break;
        default:
          memcpy(v520, v521, *(_QWORD *)(*(_QWORD *)(v525 - 8) + 64));
          break;
      }
      v682 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
      *((_BYTE *)v520 + v682[5]) = *((_BYTE *)v521 + v682[5]);
      v683 = v682[6];
      v684 = (void **)((char *)v520 + v683);
      v685 = (uint64_t *)((char *)v521 + v683);
      v687 = *v685;
      v686 = v685[1];
      *v684 = v687;
      v684[1] = v686;
      v688 = v682[7];
      v689 = *(void **)((char *)v521 + v688);
      *(void **)((char *)v520 + v688) = v689;
      *(void **)((char *)v520 + *(int *)(v522 + 48)) = *(void **)((char *)v521 + *(int *)(v522 + 48));
      v690 = *(void (**)(void **, _QWORD, uint64_t, uint64_t, __n128))(v523 + 56);
      swift_bridgeObjectRetain(v686);
      v691 = swift_bridgeObjectRetain(v689);
      v690(v520, 0, 1, v522, v691);
    }
    *(_BYTE *)(v515 + *(int *)(v518 + 32)) = *(_BYTE *)(v516 + *(int *)(v518 + 32));
  }
  return v21;
}

