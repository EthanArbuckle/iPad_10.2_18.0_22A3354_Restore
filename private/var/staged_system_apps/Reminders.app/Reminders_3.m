_BYTE *sub_10018A924(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  _OWORD *v90;
  _OWORD *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  _OWORD *v178;
  _OWORD *v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  _OWORD *v190;
  _OWORD *v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v8, v9))
  {
    case 0u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v8, v10))
      {
        case 2u:
          v11 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
          v12 = v7;
          v13 = v10;
          v14 = 2;
          goto LABEL_33;
        case 3u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v7, v8, v72);
          v12 = v7;
          v13 = v10;
          v14 = 3;
          goto LABEL_33;
        case 4u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v7, v8, v73);
          v12 = v7;
          v13 = v10;
          v14 = 4;
          goto LABEL_33;
        case 5u:
          v74 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v7, v8, v74);
          v12 = v7;
          v13 = v10;
          v14 = 5;
          goto LABEL_33;
        case 6u:
          v75 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v7, v8, v75);
          v12 = v7;
          v13 = v10;
          v14 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v12, v13, v14);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
      v76 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v77 = v76[5];
      v78 = (_OWORD *)((char *)v7 + v77);
      v79 = (_OWORD *)((char *)v8 + v77);
      v80 = v79[3];
      v78[2] = v79[2];
      v78[3] = v80;
      v81 = v79[1];
      *v78 = *v79;
      v78[1] = v81;
      *(_OWORD *)((char *)v78 + 106) = *(_OWORD *)((char *)v79 + 106);
      v82 = v79[6];
      v83 = v79[4];
      v78[5] = v79[5];
      v78[6] = v82;
      v78[4] = v83;
      *((_BYTE *)v7 + v76[6]) = *((_BYTE *)v8 + v76[6]);
      *((_BYTE *)v7 + v76[7]) = *((_BYTE *)v8 + v76[7]);
      *((_BYTE *)v7 + v76[8]) = *((_BYTE *)v8 + v76[8]);
      *((_BYTE *)v7 + v76[9]) = *((_BYTE *)v8 + v76[9]);
      *((_BYTE *)v7 + v76[10]) = *((_BYTE *)v8 + v76[10]);
      *(_QWORD *)((char *)v7 + v76[11]) = *(_QWORD *)((char *)v8 + v76[11]);
      v48 = v7;
      v49 = v9;
      v50 = 0;
      goto LABEL_66;
    case 1u:
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v8, v15))
      {
        case 2u:
          v16 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v7, v8, v16);
          v17 = v7;
          v18 = v15;
          v19 = 2;
          goto LABEL_40;
        case 3u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v7, v8, v84);
          v17 = v7;
          v18 = v15;
          v19 = 3;
          goto LABEL_40;
        case 4u:
          v85 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v7, v8, v85);
          v17 = v7;
          v18 = v15;
          v19 = 4;
          goto LABEL_40;
        case 5u:
          v86 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v7, v8, v86);
          v17 = v7;
          v18 = v15;
          v19 = 5;
          goto LABEL_40;
        case 6u:
          v87 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v7, v8, v87);
          v17 = v7;
          v18 = v15;
          v19 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v17, v18, v19);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v88 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v89 = v88[5];
      v90 = (_OWORD *)((char *)v7 + v89);
      v91 = (_OWORD *)((char *)v8 + v89);
      v92 = v91[3];
      v90[2] = v91[2];
      v90[3] = v92;
      v93 = v91[1];
      *v90 = *v91;
      v90[1] = v93;
      *(_OWORD *)((char *)v90 + 106) = *(_OWORD *)((char *)v91 + 106);
      v94 = v91[6];
      v95 = v91[4];
      v90[5] = v91[5];
      v90[6] = v94;
      v90[4] = v95;
      *((_BYTE *)v7 + v88[6]) = *((_BYTE *)v8 + v88[6]);
      *((_BYTE *)v7 + v88[7]) = *((_BYTE *)v8 + v88[7]);
      *((_BYTE *)v7 + v88[8]) = *((_BYTE *)v8 + v88[8]);
      *((_BYTE *)v7 + v88[9]) = *((_BYTE *)v8 + v88[9]);
      *((_BYTE *)v7 + v88[10]) = *((_BYTE *)v8 + v88[10]);
      *(_QWORD *)((char *)v7 + v88[11]) = *(_QWORD *)((char *)v8 + v88[11]);
      v48 = v7;
      v49 = v9;
      v50 = 1;
      goto LABEL_66;
    case 2u:
      *v7 = *v8;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (char *)v7 + v20;
      v22 = (char *)v8 + v20;
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        v25 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 2u:
            v51 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v21, v22, v51);
            v52 = v21;
            v53 = v23;
            v54 = 2;
            goto LABEL_47;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v21, v22, v96);
            v52 = v21;
            v53 = v23;
            v54 = 3;
            goto LABEL_47;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v21, v22, v97);
            v52 = v21;
            v53 = v23;
            v54 = 4;
            goto LABEL_47;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v21, v22, v98);
            v52 = v21;
            v53 = v23;
            v54 = 5;
            goto LABEL_47;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v21, v22, v99);
            v52 = v21;
            v53 = v23;
            v54 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v52, v53, v54);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = v7;
      v49 = v9;
      v50 = 2;
      goto LABEL_66;
    case 3u:
      *v7 = *v8;
      v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = sub_10002A750(&qword_100644980);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v28, v29))
        {
          case 2u:
            v55 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v27, v28, v55);
            v56 = v27;
            v57 = v29;
            v58 = 2;
            goto LABEL_55;
          case 3u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v27, v28, v100);
            v56 = v27;
            v57 = v29;
            v58 = 3;
            goto LABEL_55;
          case 4u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v27, v28, v101);
            v56 = v27;
            v57 = v29;
            v58 = 4;
            goto LABEL_55;
          case 5u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v27, v28, v102);
            v56 = v27;
            v57 = v29;
            v58 = 5;
            goto LABEL_55;
          case 6u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v27, v28, v103);
            v56 = v27;
            v57 = v29;
            v58 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(v27, v28, *(_QWORD *)(v30 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v48 = v7;
      v49 = v9;
      v50 = 3;
      goto LABEL_66;
    case 4u:
      *v7 = *v8;
      v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v33 = (char *)v7 + v32;
      v34 = (char *)v8 + v32;
      v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644980);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v34, v35))
        {
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v33, v34, v59);
            v60 = v33;
            v61 = v35;
            v62 = 2;
            goto LABEL_63;
          case 3u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v33, v34, v104);
            v60 = v33;
            v61 = v35;
            v62 = 3;
            goto LABEL_63;
          case 4u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v33, v34, v105);
            v60 = v33;
            v61 = v35;
            v62 = 4;
            goto LABEL_63;
          case 5u:
            v106 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v33, v34, v106);
            v60 = v33;
            v61 = v35;
            v62 = 5;
            goto LABEL_63;
          case 6u:
            v107 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v33, v34, v107);
            v60 = v33;
            v61 = v35;
            v62 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(v33, v34, *(_QWORD *)(v36 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v48 = v7;
      v49 = v9;
      v50 = 4;
      goto LABEL_66;
    case 7u:
      v38 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v8, 1, v38))
      {
        v40 = sub_10002A750(&qword_100644600);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        *v7 = *v8;
        v63 = *(int *)(v38 + 20);
        v64 = (char *)v7 + v63;
        v65 = (char *)v8 + v63;
        v66 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v7, 0, 1, v38);
      }
      v67 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v68 = (char *)v7 + v67;
      v69 = (char *)v8 + v67;
      *(_OWORD *)v68 = *(_OWORD *)v69;
      *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
      v48 = v7;
      v49 = v9;
      v50 = 7;
      goto LABEL_66;
    case 8u:
      v41 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(v8, 1, v41))
      {
        v43 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v70 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v7, v8, v70);
        *((_BYTE *)v7 + *(int *)(v41 + 20)) = *((_BYTE *)v8 + *(int *)(v41 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v7, 0, 1, v41);
      }
      v71 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v7 + *(int *)(v71 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v71 + 20));
      v48 = v7;
      v49 = v9;
      v50 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)v7 = *(_BYTE *)v8;
      v44 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v45 = (char *)v7 + v44;
      v46 = (char *)v8 + v44;
      v47 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      v48 = v7;
      v49 = v9;
      v50 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v108 = *(int *)(a3 + 24);
  v109 = &a1[v108];
  v110 = &a2[v108];
  v111 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v111 + 48))(v110, 2, v9))
  {
    v112 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v110, v9))
    {
      case 0u:
        v113 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v110, v113))
        {
          case 2u:
            v114 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v109, v110, v114);
            v115 = v109;
            v116 = v113;
            v117 = 2;
            goto LABEL_101;
          case 3u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v109, v110, v172);
            v115 = v109;
            v116 = v113;
            v117 = 3;
            goto LABEL_101;
          case 4u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v109, v110, v173);
            v115 = v109;
            v116 = v113;
            v117 = 4;
            goto LABEL_101;
          case 5u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v109, v110, v174);
            v115 = v109;
            v116 = v113;
            v117 = 5;
            goto LABEL_101;
          case 6u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v109, v110, v175);
            v115 = v109;
            v116 = v113;
            v117 = 6;
LABEL_101:
            swift_storeEnumTagMultiPayload(v115, v116, v117);
            break;
          default:
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            break;
        }
        v176 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v177 = v176[5];
        v178 = (_OWORD *)((char *)v109 + v177);
        v179 = (_OWORD *)((char *)v110 + v177);
        v180 = v179[3];
        v178[2] = v179[2];
        v178[3] = v180;
        v181 = v179[1];
        *v178 = *v179;
        v178[1] = v181;
        *(_OWORD *)((char *)v178 + 106) = *(_OWORD *)((char *)v179 + 106);
        v182 = v179[6];
        v183 = v179[4];
        v178[5] = v179[5];
        v178[6] = v182;
        v178[4] = v183;
        *((_BYTE *)v109 + v176[6]) = *((_BYTE *)v110 + v176[6]);
        *((_BYTE *)v109 + v176[7]) = *((_BYTE *)v110 + v176[7]);
        *((_BYTE *)v109 + v176[8]) = *((_BYTE *)v110 + v176[8]);
        *((_BYTE *)v109 + v176[9]) = *((_BYTE *)v110 + v176[9]);
        *((_BYTE *)v109 + v176[10]) = *((_BYTE *)v110 + v176[10]);
        *(_QWORD *)((char *)v109 + v176[11]) = *(_QWORD *)((char *)v110 + v176[11]);
        v151 = v109;
        v152 = v9;
        v153 = 0;
        goto LABEL_133;
      case 1u:
        v118 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v110, v118))
        {
          case 2u:
            v119 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v109, v110, v119);
            v120 = v109;
            v121 = v118;
            v122 = 2;
            goto LABEL_108;
          case 3u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v109, v110, v184);
            v120 = v109;
            v121 = v118;
            v122 = 3;
            goto LABEL_108;
          case 4u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v109, v110, v185);
            v120 = v109;
            v121 = v118;
            v122 = 4;
            goto LABEL_108;
          case 5u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v109, v110, v186);
            v120 = v109;
            v121 = v118;
            v122 = 5;
            goto LABEL_108;
          case 6u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v109, v110, v187);
            v120 = v109;
            v121 = v118;
            v122 = 6;
LABEL_108:
            swift_storeEnumTagMultiPayload(v120, v121, v122);
            break;
          default:
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
            break;
        }
        v188 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v189 = v188[5];
        v190 = (_OWORD *)((char *)v109 + v189);
        v191 = (_OWORD *)((char *)v110 + v189);
        v192 = v191[3];
        v190[2] = v191[2];
        v190[3] = v192;
        v193 = v191[1];
        *v190 = *v191;
        v190[1] = v193;
        *(_OWORD *)((char *)v190 + 106) = *(_OWORD *)((char *)v191 + 106);
        v194 = v191[6];
        v195 = v191[4];
        v190[5] = v191[5];
        v190[6] = v194;
        v190[4] = v195;
        *((_BYTE *)v109 + v188[6]) = *((_BYTE *)v110 + v188[6]);
        *((_BYTE *)v109 + v188[7]) = *((_BYTE *)v110 + v188[7]);
        *((_BYTE *)v109 + v188[8]) = *((_BYTE *)v110 + v188[8]);
        *((_BYTE *)v109 + v188[9]) = *((_BYTE *)v110 + v188[9]);
        *((_BYTE *)v109 + v188[10]) = *((_BYTE *)v110 + v188[10]);
        *(_QWORD *)((char *)v109 + v188[11]) = *(_QWORD *)((char *)v110 + v188[11]);
        v151 = v109;
        v152 = v9;
        v153 = 1;
        goto LABEL_133;
      case 2u:
        *v109 = *v110;
        v123 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v124 = (char *)v109 + v123;
        v125 = (char *)v110 + v123;
        v126 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v127 = *(_QWORD *)(v126 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
        {
          v128 = sub_10002A750(&qword_100644980);
          memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v125, v126))
          {
            case 2u:
              v154 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v124, v125, v154);
              v155 = v124;
              v156 = v126;
              v157 = 2;
              goto LABEL_115;
            case 3u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v124, v125, v196);
              v155 = v124;
              v156 = v126;
              v157 = 3;
              goto LABEL_115;
            case 4u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v124, v125, v197);
              v155 = v124;
              v156 = v126;
              v157 = 4;
              goto LABEL_115;
            case 5u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v124, v125, v198);
              v155 = v124;
              v156 = v126;
              v157 = 5;
              goto LABEL_115;
            case 6u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v124, v125, v199);
              v155 = v124;
              v156 = v126;
              v157 = 6;
LABEL_115:
              swift_storeEnumTagMultiPayload(v155, v156, v157);
              break;
            default:
              memcpy(v124, v125, *(_QWORD *)(v127 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
        }
        v151 = v109;
        v152 = v9;
        v153 = 2;
        goto LABEL_133;
      case 3u:
        *v109 = *v110;
        v129 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v130 = (char *)v109 + v129;
        v131 = (char *)v110 + v129;
        v132 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          v134 = sub_10002A750(&qword_100644980);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v131, v132))
          {
            case 2u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v130, v131, v158);
              v159 = v130;
              v160 = v132;
              v161 = 2;
              goto LABEL_123;
            case 3u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v130, v131, v200);
              v159 = v130;
              v160 = v132;
              v161 = 3;
              goto LABEL_123;
            case 4u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v130, v131, v201);
              v159 = v130;
              v160 = v132;
              v161 = 4;
              goto LABEL_123;
            case 5u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v130, v131, v202);
              v159 = v130;
              v160 = v132;
              v161 = 5;
              goto LABEL_123;
            case 6u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v130, v131, v203);
              v159 = v130;
              v160 = v132;
              v161 = 6;
LABEL_123:
              swift_storeEnumTagMultiPayload(v159, v160, v161);
              break;
            default:
              memcpy(v130, v131, *(_QWORD *)(v133 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        v151 = v109;
        v152 = v9;
        v153 = 3;
        goto LABEL_133;
      case 4u:
        *v109 = *v110;
        v135 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v136 = (char *)v109 + v135;
        v137 = (char *)v110 + v135;
        v138 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v139 = *(_QWORD *)(v138 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
        {
          v140 = sub_10002A750(&qword_100644980);
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v137, v138))
          {
            case 2u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v136, v137, v162);
              swift_storeEnumTagMultiPayload(v136, v138, 2);
              break;
            case 3u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v136, v137, v204);
              swift_storeEnumTagMultiPayload(v136, v138, 3);
              break;
            case 4u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v136, v137, v205);
              swift_storeEnumTagMultiPayload(v136, v138, 4);
              break;
            case 5u:
              v206 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v136, v137, v206);
              swift_storeEnumTagMultiPayload(v136, v138, 5);
              break;
            case 6u:
              v207 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v136, v137, v207);
              swift_storeEnumTagMultiPayload(v136, v138, 6);
              break;
            default:
              memcpy(v136, v137, *(_QWORD *)(v139 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
        }
        v151 = v109;
        v152 = v9;
        v153 = 4;
        goto LABEL_133;
      case 7u:
        v141 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v142 = *(_QWORD *)(v141 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v142 + 48))(v110, 1, v141))
        {
          v143 = sub_10002A750(&qword_100644600);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        }
        else
        {
          *v109 = *v110;
          v163 = *(int *)(v141 + 20);
          v164 = (char *)v109 + v163;
          v165 = (char *)v110 + v163;
          v166 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v109, 0, 1, v141);
        }
        v167 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v168 = (char *)v109 + v167;
        v169 = (char *)v110 + v167;
        *(_OWORD *)v168 = *(_OWORD *)v169;
        *((_QWORD *)v168 + 2) = *((_QWORD *)v169 + 2);
        v151 = v109;
        v152 = v9;
        v153 = 7;
        goto LABEL_133;
      case 8u:
        v144 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v145 = *(_QWORD *)(v144 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v145 + 48))(v110, 1, v144))
        {
          v146 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v170 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v109, v110, v170);
          *((_BYTE *)v109 + *(int *)(v144 + 20)) = *((_BYTE *)v110 + *(int *)(v144 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v109, 0, 1, v144);
        }
        v171 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v109 + *(int *)(v171 + 20)) = *(_QWORD *)((char *)v110 + *(int *)(v171 + 20));
        v151 = v109;
        v152 = v9;
        v153 = 8;
        goto LABEL_133;
      case 9u:
        *(_BYTE *)v109 = *(_BYTE *)v110;
        v147 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v148 = (char *)v109 + v147;
        v149 = (char *)v110 + v147;
        v150 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
        v151 = v109;
        v152 = v9;
        v153 = 9;
LABEL_133:
        swift_storeEnumTagMultiPayload(v151, v152, v153);
        break;
      default:
        memcpy(v109, v110, *(_QWORD *)(v111 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v109, 0, 2, v9);
  }
  return a1;
}

_BYTE *sub_10018C010(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  _OWORD *v90;
  _OWORD *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(_QWORD *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int *v221;
  uint64_t v222;
  _OWORD *v223;
  _OWORD *v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int *v233;
  uint64_t v234;
  _OWORD *v235;
  _OWORD *v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int *v266;
  uint64_t v267;
  _OWORD *v268;
  _OWORD *v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int *v278;
  uint64_t v279;
  _OWORD *v280;
  _OWORD *v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_10001F544((uint64_t)&a1[v6], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v8, v9))
    {
      case 0u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v8, v10))
        {
          case 2u:
            v11 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
            v12 = v7;
            v13 = v10;
            v14 = 2;
            goto LABEL_34;
          case 3u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v7, v8, v72);
            v12 = v7;
            v13 = v10;
            v14 = 3;
            goto LABEL_34;
          case 4u:
            v73 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v7, v8, v73);
            v12 = v7;
            v13 = v10;
            v14 = 4;
            goto LABEL_34;
          case 5u:
            v74 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v7, v8, v74);
            v12 = v7;
            v13 = v10;
            v14 = 5;
            goto LABEL_34;
          case 6u:
            v75 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v7, v8, v75);
            v12 = v7;
            v13 = v10;
            v14 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v12, v13, v14);
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        v76 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v77 = v76[5];
        v78 = (_OWORD *)((char *)v7 + v77);
        v79 = (_OWORD *)((char *)v8 + v77);
        v80 = v79[3];
        v78[2] = v79[2];
        v78[3] = v80;
        v81 = v79[1];
        *v78 = *v79;
        v78[1] = v81;
        *(_OWORD *)((char *)v78 + 106) = *(_OWORD *)((char *)v79 + 106);
        v82 = v79[6];
        v83 = v79[4];
        v78[5] = v79[5];
        v78[6] = v82;
        v78[4] = v83;
        *((_BYTE *)v7 + v76[6]) = *((_BYTE *)v8 + v76[6]);
        *((_BYTE *)v7 + v76[7]) = *((_BYTE *)v8 + v76[7]);
        *((_BYTE *)v7 + v76[8]) = *((_BYTE *)v8 + v76[8]);
        *((_BYTE *)v7 + v76[9]) = *((_BYTE *)v8 + v76[9]);
        *((_BYTE *)v7 + v76[10]) = *((_BYTE *)v8 + v76[10]);
        *(_QWORD *)((char *)v7 + v76[11]) = *(_QWORD *)((char *)v8 + v76[11]);
        v48 = v7;
        v49 = v9;
        v50 = 0;
        goto LABEL_67;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v8, v15))
        {
          case 2u:
            v16 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v7, v8, v16);
            v17 = v7;
            v18 = v15;
            v19 = 2;
            goto LABEL_41;
          case 3u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v7, v8, v84);
            v17 = v7;
            v18 = v15;
            v19 = 3;
            goto LABEL_41;
          case 4u:
            v85 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v7, v8, v85);
            v17 = v7;
            v18 = v15;
            v19 = 4;
            goto LABEL_41;
          case 5u:
            v86 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v7, v8, v86);
            v17 = v7;
            v18 = v15;
            v19 = 5;
            goto LABEL_41;
          case 6u:
            v87 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v7, v8, v87);
            v17 = v7;
            v18 = v15;
            v19 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v88 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v89 = v88[5];
        v90 = (_OWORD *)((char *)v7 + v89);
        v91 = (_OWORD *)((char *)v8 + v89);
        v92 = v91[3];
        v90[2] = v91[2];
        v90[3] = v92;
        v93 = v91[1];
        *v90 = *v91;
        v90[1] = v93;
        *(_OWORD *)((char *)v90 + 106) = *(_OWORD *)((char *)v91 + 106);
        v94 = v91[6];
        v95 = v91[4];
        v90[5] = v91[5];
        v90[6] = v94;
        v90[4] = v95;
        *((_BYTE *)v7 + v88[6]) = *((_BYTE *)v8 + v88[6]);
        *((_BYTE *)v7 + v88[7]) = *((_BYTE *)v8 + v88[7]);
        *((_BYTE *)v7 + v88[8]) = *((_BYTE *)v8 + v88[8]);
        *((_BYTE *)v7 + v88[9]) = *((_BYTE *)v8 + v88[9]);
        *((_BYTE *)v7 + v88[10]) = *((_BYTE *)v8 + v88[10]);
        *(_QWORD *)((char *)v7 + v88[11]) = *(_QWORD *)((char *)v8 + v88[11]);
        v48 = v7;
        v49 = v9;
        v50 = 1;
        goto LABEL_67;
      case 2u:
        *v7 = *v8;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (char *)v7 + v20;
        v22 = (char *)v8 + v20;
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          v25 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 2u:
              v51 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v21, v22, v51);
              v52 = v21;
              v53 = v23;
              v54 = 2;
              goto LABEL_48;
            case 3u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v21, v22, v96);
              v52 = v21;
              v53 = v23;
              v54 = 3;
              goto LABEL_48;
            case 4u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v21, v22, v97);
              v52 = v21;
              v53 = v23;
              v54 = 4;
              goto LABEL_48;
            case 5u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v21, v22, v98);
              v52 = v21;
              v53 = v23;
              v54 = 5;
              goto LABEL_48;
            case 6u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v21, v22, v99);
              v52 = v21;
              v53 = v23;
              v54 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v52, v53, v54);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = v7;
        v49 = v9;
        v50 = 2;
        goto LABEL_67;
      case 3u:
        *v7 = *v8;
        v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v27 = (char *)v7 + v26;
        v28 = (char *)v8 + v26;
        v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10002A750(&qword_100644980);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v28, v29))
          {
            case 2u:
              v55 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v27, v28, v55);
              v56 = v27;
              v57 = v29;
              v58 = 2;
              goto LABEL_56;
            case 3u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v27, v28, v100);
              v56 = v27;
              v57 = v29;
              v58 = 3;
              goto LABEL_56;
            case 4u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v27, v28, v101);
              v56 = v27;
              v57 = v29;
              v58 = 4;
              goto LABEL_56;
            case 5u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v27, v28, v102);
              v56 = v27;
              v57 = v29;
              v58 = 5;
              goto LABEL_56;
            case 6u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v27, v28, v103);
              v56 = v27;
              v57 = v29;
              v58 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              break;
            default:
              memcpy(v27, v28, *(_QWORD *)(v30 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v48 = v7;
        v49 = v9;
        v50 = 3;
        goto LABEL_67;
      case 4u:
        *v7 = *v8;
        v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v33 = (char *)v7 + v32;
        v34 = (char *)v8 + v32;
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644980);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v34, v35))
          {
            case 2u:
              v59 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v33, v34, v59);
              v60 = v33;
              v61 = v35;
              v62 = 2;
              goto LABEL_64;
            case 3u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v33, v34, v104);
              v60 = v33;
              v61 = v35;
              v62 = 3;
              goto LABEL_64;
            case 4u:
              v105 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v33, v34, v105);
              v60 = v33;
              v61 = v35;
              v62 = 4;
              goto LABEL_64;
            case 5u:
              v106 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v33, v34, v106);
              v60 = v33;
              v61 = v35;
              v62 = 5;
              goto LABEL_64;
            case 6u:
              v107 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v33, v34, v107);
              v60 = v33;
              v61 = v35;
              v62 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v60, v61, v62);
              break;
            default:
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v48 = v7;
        v49 = v9;
        v50 = 4;
        goto LABEL_67;
      case 7u:
        v38 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v8, 1, v38))
        {
          v40 = sub_10002A750(&qword_100644600);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *v7 = *v8;
          v63 = *(int *)(v38 + 20);
          v64 = (char *)v7 + v63;
          v65 = (char *)v8 + v63;
          v66 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v7, 0, 1, v38);
        }
        v67 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v68 = (char *)v7 + v67;
        v69 = (char *)v8 + v67;
        *(_OWORD *)v68 = *(_OWORD *)v69;
        *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
        v48 = v7;
        v49 = v9;
        v50 = 7;
        goto LABEL_67;
      case 8u:
        v41 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v42 = *(_QWORD *)(v41 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(v8, 1, v41))
        {
          v43 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v7, v8, v70);
          *((_BYTE *)v7 + *(int *)(v41 + 20)) = *((_BYTE *)v8 + *(int *)(v41 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v7, 0, 1, v41);
        }
        v71 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v7 + *(int *)(v71 + 20)) = *(_QWORD *)((char *)v8 + *(int *)(v71 + 20));
        v48 = v7;
        v49 = v9;
        v50 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v44 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v45 = (char *)v7 + v44;
        v46 = (char *)v8 + v44;
        v47 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        v48 = v7;
        v49 = v9;
        v50 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v108 = *(int *)(a3 + 24);
  v109 = &a1[v108];
  v110 = &a2[v108];
  v111 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v112 + 48);
  v114 = v113(v109, 2, v111);
  v115 = v113(v110, 2, v111);
  if (v114)
  {
    if (!v115)
    {
      switch(swift_getEnumCaseMultiPayload(v110, v111))
      {
        case 0u:
          v116 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v110, v116))
          {
            case 2u:
              v117 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v109, v110, v117);
              v118 = v109;
              v119 = v116;
              v120 = 2;
              goto LABEL_124;
            case 3u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v109, v110, v217);
              v118 = v109;
              v119 = v116;
              v120 = 3;
              goto LABEL_124;
            case 4u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v109, v110, v218);
              v118 = v109;
              v119 = v116;
              v120 = 4;
              goto LABEL_124;
            case 5u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v109, v110, v219);
              v118 = v109;
              v119 = v116;
              v120 = 5;
              goto LABEL_124;
            case 6u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v109, v110, v220);
              v118 = v109;
              v119 = v116;
              v120 = 6;
LABEL_124:
              swift_storeEnumTagMultiPayload(v118, v119, v120);
              break;
            default:
              memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
              break;
          }
          v221 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v222 = v221[5];
          v223 = (_OWORD *)((char *)v109 + v222);
          v224 = (_OWORD *)((char *)v110 + v222);
          v225 = v224[3];
          v223[2] = v224[2];
          v223[3] = v225;
          v226 = v224[1];
          *v223 = *v224;
          v223[1] = v226;
          *(_OWORD *)((char *)v223 + 106) = *(_OWORD *)((char *)v224 + 106);
          v227 = v224[6];
          v228 = v224[4];
          v223[5] = v224[5];
          v223[6] = v227;
          v223[4] = v228;
          *((_BYTE *)v109 + v221[6]) = *((_BYTE *)v110 + v221[6]);
          *((_BYTE *)v109 + v221[7]) = *((_BYTE *)v110 + v221[7]);
          *((_BYTE *)v109 + v221[8]) = *((_BYTE *)v110 + v221[8]);
          *((_BYTE *)v109 + v221[9]) = *((_BYTE *)v110 + v221[9]);
          *((_BYTE *)v109 + v221[10]) = *((_BYTE *)v110 + v221[10]);
          *(_QWORD *)((char *)v109 + v221[11]) = *(_QWORD *)((char *)v110 + v221[11]);
          v160 = v109;
          v161 = v111;
          v162 = 0;
          goto LABEL_181;
        case 1u:
          v127 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v110, v127))
          {
            case 2u:
              v128 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v109, v110, v128);
              v129 = v109;
              v130 = v127;
              v131 = 2;
              goto LABEL_131;
            case 3u:
              v229 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v109, v110, v229);
              v129 = v109;
              v130 = v127;
              v131 = 3;
              goto LABEL_131;
            case 4u:
              v230 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v109, v110, v230);
              v129 = v109;
              v130 = v127;
              v131 = 4;
              goto LABEL_131;
            case 5u:
              v231 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v109, v110, v231);
              v129 = v109;
              v130 = v127;
              v131 = 5;
              goto LABEL_131;
            case 6u:
              v232 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v109, v110, v232);
              v129 = v109;
              v130 = v127;
              v131 = 6;
LABEL_131:
              swift_storeEnumTagMultiPayload(v129, v130, v131);
              break;
            default:
              memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
              break;
          }
          v233 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v234 = v233[5];
          v235 = (_OWORD *)((char *)v109 + v234);
          v236 = (_OWORD *)((char *)v110 + v234);
          v237 = v236[3];
          v235[2] = v236[2];
          v235[3] = v237;
          v238 = v236[1];
          *v235 = *v236;
          v235[1] = v238;
          *(_OWORD *)((char *)v235 + 106) = *(_OWORD *)((char *)v236 + 106);
          v239 = v236[6];
          v240 = v236[4];
          v235[5] = v236[5];
          v235[6] = v239;
          v235[4] = v240;
          *((_BYTE *)v109 + v233[6]) = *((_BYTE *)v110 + v233[6]);
          *((_BYTE *)v109 + v233[7]) = *((_BYTE *)v110 + v233[7]);
          *((_BYTE *)v109 + v233[8]) = *((_BYTE *)v110 + v233[8]);
          *((_BYTE *)v109 + v233[9]) = *((_BYTE *)v110 + v233[9]);
          *((_BYTE *)v109 + v233[10]) = *((_BYTE *)v110 + v233[10]);
          *(_QWORD *)((char *)v109 + v233[11]) = *(_QWORD *)((char *)v110 + v233[11]);
          v160 = v109;
          v161 = v111;
          v162 = 1;
          goto LABEL_181;
        case 2u:
          *v109 = *v110;
          v132 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v133 = (char *)v109 + v132;
          v134 = (char *)v110 + v132;
          v135 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v136 = *(_QWORD *)(v135 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
          {
            v137 = sub_10002A750(&qword_100644980);
            memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v134, v135))
            {
              case 2u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v133, v134, v196);
                v197 = v133;
                v198 = v135;
                v199 = 2;
                goto LABEL_162;
              case 3u:
                v286 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v133, v134, v286);
                v197 = v133;
                v198 = v135;
                v199 = 3;
                goto LABEL_162;
              case 4u:
                v287 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v287 - 8) + 32))(v133, v134, v287);
                v197 = v133;
                v198 = v135;
                v199 = 4;
                goto LABEL_162;
              case 5u:
                v288 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32))(v133, v134, v288);
                v197 = v133;
                v198 = v135;
                v199 = 5;
                goto LABEL_162;
              case 6u:
                v289 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32))(v133, v134, v289);
                v197 = v133;
                v198 = v135;
                v199 = 6;
LABEL_162:
                swift_storeEnumTagMultiPayload(v197, v198, v199);
                break;
              default:
                memcpy(v133, v134, *(_QWORD *)(v136 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
          }
          v160 = v109;
          v161 = v111;
          v162 = 2;
          goto LABEL_181;
        case 3u:
          *v109 = *v110;
          v138 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v139 = (char *)v109 + v138;
          v140 = (char *)v110 + v138;
          v141 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v142 = *(_QWORD *)(v141 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
          {
            v143 = sub_10002A750(&qword_100644980);
            memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v140, v141))
            {
              case 2u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v139, v140, v200);
                v201 = v139;
                v202 = v141;
                v203 = 2;
                goto LABEL_170;
              case 3u:
                v290 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v139, v140, v290);
                v201 = v139;
                v202 = v141;
                v203 = 3;
                goto LABEL_170;
              case 4u:
                v291 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v139, v140, v291);
                v201 = v139;
                v202 = v141;
                v203 = 4;
                goto LABEL_170;
              case 5u:
                v292 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v292 - 8) + 32))(v139, v140, v292);
                v201 = v139;
                v202 = v141;
                v203 = 5;
                goto LABEL_170;
              case 6u:
                v293 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v293 - 8) + 32))(v139, v140, v293);
                v201 = v139;
                v202 = v141;
                v203 = 6;
LABEL_170:
                swift_storeEnumTagMultiPayload(v201, v202, v203);
                break;
              default:
                memcpy(v139, v140, *(_QWORD *)(v142 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
          }
          v160 = v109;
          v161 = v111;
          v162 = 3;
          goto LABEL_181;
        case 4u:
          *v109 = *v110;
          v144 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v145 = (char *)v109 + v144;
          v146 = (char *)v110 + v144;
          v147 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v148 = *(_QWORD *)(v147 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
          {
            v149 = sub_10002A750(&qword_100644980);
            memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v146, v147))
            {
              case 2u:
                v204 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v145, v146, v204);
                v205 = v145;
                v206 = v147;
                v207 = 2;
                goto LABEL_178;
              case 3u:
                v294 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v145, v146, v294);
                v205 = v145;
                v206 = v147;
                v207 = 3;
                goto LABEL_178;
              case 4u:
                v295 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v145, v146, v295);
                v205 = v145;
                v206 = v147;
                v207 = 4;
                goto LABEL_178;
              case 5u:
                v296 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v145, v146, v296);
                v205 = v145;
                v206 = v147;
                v207 = 5;
                goto LABEL_178;
              case 6u:
                v297 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v145, v146, v297);
                v205 = v145;
                v206 = v147;
                v207 = 6;
LABEL_178:
                swift_storeEnumTagMultiPayload(v205, v206, v207);
                break;
              default:
                memcpy(v145, v146, *(_QWORD *)(v148 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
          }
          v160 = v109;
          v161 = v111;
          v162 = 4;
          goto LABEL_181;
        case 7u:
          v150 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v151 = *(_QWORD *)(v150 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v151 + 48))(v110, 1, v150))
          {
            v152 = sub_10002A750(&qword_100644600);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
          }
          else
          {
            *v109 = *v110;
            v208 = *(int *)(v150 + 20);
            v209 = (char *)v109 + v208;
            v210 = (char *)v110 + v208;
            v211 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v109, 0, 1, v150);
          }
          v212 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v213 = (char *)v109 + v212;
          v214 = (char *)v110 + v212;
          *(_OWORD *)v213 = *(_OWORD *)v214;
          *((_QWORD *)v213 + 2) = *((_QWORD *)v214 + 2);
          v160 = v109;
          v161 = v111;
          v162 = 7;
          goto LABEL_181;
        case 8u:
          v153 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v154 = *(_QWORD *)(v153 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v154 + 48))(v110, 1, v153))
          {
            v155 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
          }
          else
          {
            v215 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v109, v110, v215);
            *((_BYTE *)v109 + *(int *)(v153 + 20)) = *((_BYTE *)v110 + *(int *)(v153 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v109, 0, 1, v153);
          }
          v216 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)v109 + *(int *)(v216 + 20)) = *(_QWORD *)((char *)v110 + *(int *)(v216 + 20));
          v160 = v109;
          v161 = v111;
          v162 = 8;
          goto LABEL_181;
        case 9u:
          *(_BYTE *)v109 = *(_BYTE *)v110;
          v156 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v157 = (char *)v109 + v156;
          v158 = (char *)v110 + v156;
          v159 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
          v160 = v109;
          v161 = v111;
          v162 = 9;
LABEL_181:
          swift_storeEnumTagMultiPayload(v160, v161, v162);
          break;
        default:
          memcpy(v109, v110, *(_QWORD *)(v112 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 2, v111);
      return a1;
    }
    goto LABEL_75;
  }
  if (v115)
  {
    sub_10001F544((uint64_t)v109, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_75:
    v121 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0)
                                 - 8)
                     + 64);
LABEL_76:
    memcpy(v109, v110, v121);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)v109, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v110, v111))
    {
      case 0u:
        v122 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v110, v122))
        {
          case 2u:
            v123 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v109, v110, v123);
            v124 = v109;
            v125 = v122;
            v126 = 2;
            goto LABEL_148;
          case 3u:
            v262 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v262 - 8) + 32))(v109, v110, v262);
            v124 = v109;
            v125 = v122;
            v126 = 3;
            goto LABEL_148;
          case 4u:
            v263 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v109, v110, v263);
            v124 = v109;
            v125 = v122;
            v126 = 4;
            goto LABEL_148;
          case 5u:
            v264 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v109, v110, v264);
            v124 = v109;
            v125 = v122;
            v126 = 5;
            goto LABEL_148;
          case 6u:
            v265 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v109, v110, v265);
            v124 = v109;
            v125 = v122;
            v126 = 6;
LABEL_148:
            swift_storeEnumTagMultiPayload(v124, v125, v126);
            break;
          default:
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
            break;
        }
        v266 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v267 = v266[5];
        v268 = (_OWORD *)((char *)v109 + v267);
        v269 = (_OWORD *)((char *)v110 + v267);
        v270 = v269[3];
        v268[2] = v269[2];
        v268[3] = v270;
        v271 = v269[1];
        *v268 = *v269;
        v268[1] = v271;
        *(_OWORD *)((char *)v268 + 106) = *(_OWORD *)((char *)v269 + 106);
        v272 = v269[6];
        v273 = v269[4];
        v268[5] = v269[5];
        v268[6] = v272;
        v268[4] = v273;
        *((_BYTE *)v109 + v266[6]) = *((_BYTE *)v110 + v266[6]);
        *((_BYTE *)v109 + v266[7]) = *((_BYTE *)v110 + v266[7]);
        *((_BYTE *)v109 + v266[8]) = *((_BYTE *)v110 + v266[8]);
        *((_BYTE *)v109 + v266[9]) = *((_BYTE *)v110 + v266[9]);
        *((_BYTE *)v109 + v266[10]) = *((_BYTE *)v110 + v266[10]);
        *(_QWORD *)((char *)v109 + v266[11]) = *(_QWORD *)((char *)v110 + v266[11]);
        swift_storeEnumTagMultiPayload(v109, v111, 0);
        break;
      case 1u:
        v163 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v110, v163))
        {
          case 2u:
            v164 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v109, v110, v164);
            v165 = v109;
            v166 = v163;
            v167 = 2;
            goto LABEL_155;
          case 3u:
            v274 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v109, v110, v274);
            v165 = v109;
            v166 = v163;
            v167 = 3;
            goto LABEL_155;
          case 4u:
            v275 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v275 - 8) + 32))(v109, v110, v275);
            v165 = v109;
            v166 = v163;
            v167 = 4;
            goto LABEL_155;
          case 5u:
            v276 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v276 - 8) + 32))(v109, v110, v276);
            v165 = v109;
            v166 = v163;
            v167 = 5;
            goto LABEL_155;
          case 6u:
            v277 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v109, v110, v277);
            v165 = v109;
            v166 = v163;
            v167 = 6;
LABEL_155:
            swift_storeEnumTagMultiPayload(v165, v166, v167);
            break;
          default:
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
            break;
        }
        v278 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v279 = v278[5];
        v280 = (_OWORD *)((char *)v109 + v279);
        v281 = (_OWORD *)((char *)v110 + v279);
        v282 = v281[3];
        v280[2] = v281[2];
        v280[3] = v282;
        v283 = v281[1];
        *v280 = *v281;
        v280[1] = v283;
        *(_OWORD *)((char *)v280 + 106) = *(_OWORD *)((char *)v281 + 106);
        v284 = v281[6];
        v285 = v281[4];
        v280[5] = v281[5];
        v280[6] = v284;
        v280[4] = v285;
        *((_BYTE *)v109 + v278[6]) = *((_BYTE *)v110 + v278[6]);
        *((_BYTE *)v109 + v278[7]) = *((_BYTE *)v110 + v278[7]);
        *((_BYTE *)v109 + v278[8]) = *((_BYTE *)v110 + v278[8]);
        *((_BYTE *)v109 + v278[9]) = *((_BYTE *)v110 + v278[9]);
        *((_BYTE *)v109 + v278[10]) = *((_BYTE *)v110 + v278[10]);
        *(_QWORD *)((char *)v109 + v278[11]) = *(_QWORD *)((char *)v110 + v278[11]);
        swift_storeEnumTagMultiPayload(v109, v111, 1);
        break;
      case 2u:
        *v109 = *v110;
        v168 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v169 = (char *)v109 + v168;
        v170 = (char *)v110 + v168;
        v171 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v172 = *(_QWORD *)(v171 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v170, 1, v171))
        {
          v173 = sub_10002A750(&qword_100644980);
          memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v170, v171))
          {
            case 2u:
              v241 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v169, v170, v241);
              v242 = v169;
              v243 = v171;
              v244 = 2;
              goto LABEL_189;
            case 3u:
              v299 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(v169, v170, v299);
              v242 = v169;
              v243 = v171;
              v244 = 3;
              goto LABEL_189;
            case 4u:
              v300 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v169, v170, v300);
              v242 = v169;
              v243 = v171;
              v244 = 4;
              goto LABEL_189;
            case 5u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v169, v170, v301);
              v242 = v169;
              v243 = v171;
              v244 = 5;
              goto LABEL_189;
            case 6u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v169, v170, v302);
              v242 = v169;
              v243 = v171;
              v244 = 6;
LABEL_189:
              swift_storeEnumTagMultiPayload(v242, v243, v244);
              break;
            default:
              memcpy(v169, v170, *(_QWORD *)(v172 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
        }
        swift_storeEnumTagMultiPayload(v109, v111, 2);
        break;
      case 3u:
        *v109 = *v110;
        v174 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v175 = (char *)v109 + v174;
        v176 = (char *)v110 + v174;
        v177 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v178 = *(_QWORD *)(v177 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v176, 1, v177))
        {
          v179 = sub_10002A750(&qword_100644980);
          memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v176, v177))
          {
            case 2u:
              v245 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v175, v176, v245);
              v246 = v175;
              v247 = v177;
              v248 = 2;
              goto LABEL_197;
            case 3u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(v175, v176, v303);
              v246 = v175;
              v247 = v177;
              v248 = 3;
              goto LABEL_197;
            case 4u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 32))(v175, v176, v304);
              v246 = v175;
              v247 = v177;
              v248 = 4;
              goto LABEL_197;
            case 5u:
              v305 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v175, v176, v305);
              v246 = v175;
              v247 = v177;
              v248 = 5;
              goto LABEL_197;
            case 6u:
              v306 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 32))(v175, v176, v306);
              v246 = v175;
              v247 = v177;
              v248 = 6;
LABEL_197:
              swift_storeEnumTagMultiPayload(v246, v247, v248);
              break;
            default:
              memcpy(v175, v176, *(_QWORD *)(v178 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v178 + 56))(v175, 0, 1, v177);
        }
        swift_storeEnumTagMultiPayload(v109, v111, 3);
        break;
      case 4u:
        *v109 = *v110;
        v180 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v181 = (char *)v109 + v180;
        v182 = (char *)v110 + v180;
        v183 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v184 = *(_QWORD *)(v183 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v182, 1, v183))
        {
          v185 = sub_10002A750(&qword_100644980);
          memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v182, v183))
          {
            case 2u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v181, v182, v249);
              v250 = v181;
              v251 = v183;
              v252 = 2;
              goto LABEL_205;
            case 3u:
              v307 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v307 - 8) + 32))(v181, v182, v307);
              v250 = v181;
              v251 = v183;
              v252 = 3;
              goto LABEL_205;
            case 4u:
              v308 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v181, v182, v308);
              v250 = v181;
              v251 = v183;
              v252 = 4;
              goto LABEL_205;
            case 5u:
              v309 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32))(v181, v182, v309);
              v250 = v181;
              v251 = v183;
              v252 = 5;
              goto LABEL_205;
            case 6u:
              v310 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v181, v182, v310);
              v250 = v181;
              v251 = v183;
              v252 = 6;
LABEL_205:
              swift_storeEnumTagMultiPayload(v250, v251, v252);
              break;
            default:
              memcpy(v181, v182, *(_QWORD *)(v184 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v181, 0, 1, v183);
        }
        swift_storeEnumTagMultiPayload(v109, v111, 4);
        break;
      case 7u:
        v186 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v187 = *(_QWORD *)(v186 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v187 + 48))(v110, 1, v186))
        {
          v188 = sub_10002A750(&qword_100644600);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          *v109 = *v110;
          v253 = *(int *)(v186 + 20);
          v254 = (char *)v109 + v253;
          v255 = (char *)v110 + v253;
          v256 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 32))(v254, v255, v256);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v109, 0, 1, v186);
        }
        v257 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v258 = (char *)v109 + v257;
        v259 = (char *)v110 + v257;
        *(_OWORD *)v258 = *(_OWORD *)v259;
        *((_QWORD *)v258 + 2) = *((_QWORD *)v259 + 2);
        swift_storeEnumTagMultiPayload(v109, v111, 7);
        break;
      case 8u:
        v189 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v190 = *(_QWORD *)(v189 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v190 + 48))(v110, 1, v189))
        {
          v191 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          v260 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v109, v110, v260);
          *((_BYTE *)v109 + *(int *)(v189 + 20)) = *((_BYTE *)v110 + *(int *)(v189 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v109, 0, 1, v189);
        }
        v261 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v109 + *(int *)(v261 + 20)) = *(_QWORD *)((char *)v110 + *(int *)(v261 + 20));
        swift_storeEnumTagMultiPayload(v109, v111, 8);
        break;
      case 9u:
        *(_BYTE *)v109 = *(_BYTE *)v110;
        v192 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v193 = (char *)v109 + v192;
        v194 = (char *)v110 + v192;
        v195 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
        swift_storeEnumTagMultiPayload(v109, v111, 9);
        break;
      default:
        v121 = *(_QWORD *)(v112 + 64);
        goto LABEL_76;
    }
  }
  return a1;
}

uint64_t sub_10018E270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018E27C);
}

uint64_t sub_10018E27C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v12 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_10018E31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018E328);
}

_BYTE *sub_10018E328(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_10018E3C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_100526F98;
  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

char *sub_10018E450(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  void *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  void *v189;
  unsigned __int8 v190;
  void *v191;
  char *v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v197 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *(_QWORD *)a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_45;
            case 2u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_45;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_45;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_45;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_45;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_45;
            case 8u:
              v101 = *a2;
              *(_QWORD *)a1 = *a2;
              v102 = v101;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_45;
            case 9u:
              v103 = *a2;
              *(_QWORD *)a1 = *a2;
              v104 = v103;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_45:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v105 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v106 = v105[5];
          v107 = &a1[v106];
          v108 = (char *)a2 + v106;
          v109 = *(uint64_t *)((char *)a2 + v106 + 8);
          if (v109)
          {
            *(_QWORD *)v107 = *(_QWORD *)v108;
            *((_QWORD *)v107 + 1) = v109;
            v110 = (void *)*((_QWORD *)v108 + 2);
            v111 = *((_QWORD *)v108 + 3);
            v112 = *((_QWORD *)v108 + 4);
            v113 = *((_QWORD *)v108 + 5);
            v184 = *((_QWORD *)v108 + 6);
            v193 = *((_QWORD *)v108 + 7);
            v188 = v108[64];
            swift_bridgeObjectRetain(v109);
            sub_10003E1F0(v110, v111, v112, v113, v184, v193, v188);
            *((_QWORD *)v107 + 2) = v110;
            *((_QWORD *)v107 + 3) = v111;
            *((_QWORD *)v107 + 4) = v112;
            *((_QWORD *)v107 + 5) = v113;
            *((_QWORD *)v107 + 6) = v184;
            *((_QWORD *)v107 + 7) = v193;
            v107[64] = v188;
            *(_DWORD *)(v107 + 65) = *(_DWORD *)(v108 + 65);
            v114 = v108[120];
            if (v114 == 255)
            {
              v115 = *(_OWORD *)(v108 + 88);
              *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
              *(_OWORD *)(v107 + 88) = v115;
              *(_OWORD *)(v107 + 104) = *(_OWORD *)(v108 + 104);
              v107[120] = v108[120];
            }
            else
            {
              v194 = v114 & 1;
              v119 = *((_QWORD *)v108 + 10);
              v120 = *((_QWORD *)v108 + 11);
              v121 = *((_QWORD *)v108 + 12);
              v122 = *((_QWORD *)v108 + 13);
              v185 = *((_QWORD *)v108 + 14);
              v189 = (void *)*((_QWORD *)v108 + 9);
              sub_10002B764(v189, v119, v120, v121, v122, v185, v114 & 1);
              *((_QWORD *)v107 + 9) = v189;
              *((_QWORD *)v107 + 10) = v119;
              *((_QWORD *)v107 + 11) = v120;
              *((_QWORD *)v107 + 12) = v121;
              *((_QWORD *)v107 + 13) = v122;
              *((_QWORD *)v107 + 14) = v185;
              v107[120] = v194;
            }
            v8 = v197;
            v107[121] = v108[121];
          }
          else
          {
            v116 = *((_OWORD *)v108 + 5);
            *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
            *((_OWORD *)v107 + 5) = v116;
            *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
            *(_OWORD *)(v107 + 106) = *(_OWORD *)(v108 + 106);
            v117 = *((_OWORD *)v108 + 1);
            *(_OWORD *)v107 = *(_OWORD *)v108;
            *((_OWORD *)v107 + 1) = v117;
            v118 = *((_OWORD *)v108 + 3);
            *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
            *((_OWORD *)v107 + 3) = v118;
          }
          a1[v105[6]] = *((_BYTE *)a2 + v105[6]);
          a1[v105[7]] = *((_BYTE *)a2 + v105[7]);
          a1[v105[8]] = *((_BYTE *)a2 + v105[8]);
          a1[v105[9]] = *((_BYTE *)a2 + v105[9]);
          a1[v105[10]] = *((_BYTE *)a2 + v105[10]);
          v123 = v105[11];
          v124 = *(char **)((char *)a2 + v123);
          *(_QWORD *)&a1[v123] = v124;
          v125 = v124;
          v51 = a1;
          v52 = v7;
          v53 = 0;
          goto LABEL_102;
        case 1u:
          v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v198 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v16))
          {
            case 1u:
              v17 = *a2;
              *(_QWORD *)a1 = *a2;
              v18 = v17;
              v19 = a1;
              v20 = v16;
              v21 = 1;
              goto LABEL_61;
            case 2u:
              v126 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
              v19 = a1;
              v20 = v16;
              v21 = 2;
              goto LABEL_61;
            case 3u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
              v19 = a1;
              v20 = v16;
              v21 = 3;
              goto LABEL_61;
            case 4u:
              v128 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
              v19 = a1;
              v20 = v16;
              v21 = 4;
              goto LABEL_61;
            case 5u:
              v129 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
              v19 = a1;
              v20 = v16;
              v21 = 5;
              goto LABEL_61;
            case 6u:
              v130 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
              v19 = a1;
              v20 = v16;
              v21 = 6;
              goto LABEL_61;
            case 8u:
              v131 = *a2;
              *(_QWORD *)a1 = *a2;
              v132 = v131;
              v19 = a1;
              v20 = v16;
              v21 = 8;
              goto LABEL_61;
            case 9u:
              v133 = *a2;
              *(_QWORD *)a1 = *a2;
              v134 = v133;
              v19 = a1;
              v20 = v16;
              v21 = 9;
LABEL_61:
              swift_storeEnumTagMultiPayload(v19, v20, v21);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
              break;
          }
          v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v136 = v135[5];
          v137 = &a1[v136];
          v138 = (char *)a2 + v136;
          v139 = *(uint64_t *)((char *)a2 + v136 + 8);
          if (v139)
          {
            *(_QWORD *)v137 = *(_QWORD *)v138;
            *((_QWORD *)v137 + 1) = v139;
            v140 = (void *)*((_QWORD *)v138 + 2);
            v141 = *((_QWORD *)v138 + 3);
            v142 = *((_QWORD *)v138 + 4);
            v143 = *((_QWORD *)v138 + 5);
            v186 = *((_QWORD *)v138 + 6);
            v195 = *((_QWORD *)v138 + 7);
            v190 = v138[64];
            swift_bridgeObjectRetain(v139);
            sub_10003E1F0(v140, v141, v142, v143, v186, v195, v190);
            *((_QWORD *)v137 + 2) = v140;
            *((_QWORD *)v137 + 3) = v141;
            *((_QWORD *)v137 + 4) = v142;
            *((_QWORD *)v137 + 5) = v143;
            *((_QWORD *)v137 + 6) = v186;
            *((_QWORD *)v137 + 7) = v195;
            v137[64] = v190;
            *(_DWORD *)(v137 + 65) = *(_DWORD *)(v138 + 65);
            v144 = v138[120];
            if (v144 == 255)
            {
              v145 = *(_OWORD *)(v138 + 88);
              *(_OWORD *)(v137 + 72) = *(_OWORD *)(v138 + 72);
              *(_OWORD *)(v137 + 88) = v145;
              *(_OWORD *)(v137 + 104) = *(_OWORD *)(v138 + 104);
              v137[120] = v138[120];
            }
            else
            {
              v196 = v144 & 1;
              v149 = *((_QWORD *)v138 + 10);
              v150 = *((_QWORD *)v138 + 11);
              v151 = *((_QWORD *)v138 + 12);
              v152 = *((_QWORD *)v138 + 13);
              v187 = *((_QWORD *)v138 + 14);
              v191 = (void *)*((_QWORD *)v138 + 9);
              sub_10002B764(v191, v149, v150, v151, v152, v187, v144 & 1);
              *((_QWORD *)v137 + 9) = v191;
              *((_QWORD *)v137 + 10) = v149;
              *((_QWORD *)v137 + 11) = v150;
              *((_QWORD *)v137 + 12) = v151;
              *((_QWORD *)v137 + 13) = v152;
              *((_QWORD *)v137 + 14) = v187;
              v137[120] = v196;
            }
            v8 = v198;
            v137[121] = v138[121];
          }
          else
          {
            v146 = *((_OWORD *)v138 + 5);
            *((_OWORD *)v137 + 4) = *((_OWORD *)v138 + 4);
            *((_OWORD *)v137 + 5) = v146;
            *((_OWORD *)v137 + 6) = *((_OWORD *)v138 + 6);
            *(_OWORD *)(v137 + 106) = *(_OWORD *)(v138 + 106);
            v147 = *((_OWORD *)v138 + 1);
            *(_OWORD *)v137 = *(_OWORD *)v138;
            *((_OWORD *)v137 + 1) = v147;
            v148 = *((_OWORD *)v138 + 3);
            *((_OWORD *)v137 + 2) = *((_OWORD *)v138 + 2);
            *((_OWORD *)v137 + 3) = v148;
          }
          a1[v135[6]] = *((_BYTE *)a2 + v135[6]);
          a1[v135[7]] = *((_BYTE *)a2 + v135[7]);
          a1[v135[8]] = *((_BYTE *)a2 + v135[8]);
          a1[v135[9]] = *((_BYTE *)a2 + v135[9]);
          a1[v135[10]] = *((_BYTE *)a2 + v135[10]);
          v153 = v135[11];
          v154 = *(char **)((char *)a2 + v153);
          *(_QWORD *)&a1[v153] = v154;
          v155 = v154;
          v51 = a1;
          v52 = v7;
          v53 = 1;
          goto LABEL_102;
        case 2u:
          v22 = *a2;
          *(_QWORD *)a1 = *a2;
          v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v24 = (void **)&a1[v23];
          v25 = (void **)((char *)a2 + v23);
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
          v29 = v22;
          if (v28(v25, 1, v26))
          {
            v30 = sub_10002A750(&qword_100644980);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v25, v26))
            {
              case 1u:
                v66 = *v25;
                *v24 = *v25;
                v67 = v66;
                v68 = v24;
                v69 = v26;
                v70 = 1;
                goto LABEL_77;
              case 2u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v24, v25, v156);
                v68 = v24;
                v69 = v26;
                v70 = 2;
                goto LABEL_77;
              case 3u:
                v157 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v24, v25, v157);
                v68 = v24;
                v69 = v26;
                v70 = 3;
                goto LABEL_77;
              case 4u:
                v158 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v24, v25, v158);
                v68 = v24;
                v69 = v26;
                v70 = 4;
                goto LABEL_77;
              case 5u:
                v159 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v24, v25, v159);
                v68 = v24;
                v69 = v26;
                v70 = 5;
                goto LABEL_77;
              case 6u:
                v160 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v24, v25, v160);
                v68 = v24;
                v69 = v26;
                v70 = 6;
                goto LABEL_77;
              case 8u:
                v161 = *v25;
                *v24 = *v25;
                v162 = v161;
                v68 = v24;
                v69 = v26;
                v70 = 8;
                goto LABEL_77;
              case 9u:
                v163 = *v25;
                *v24 = *v25;
                v164 = v163;
                v68 = v24;
                v69 = v26;
                v70 = 9;
LABEL_77:
                swift_storeEnumTagMultiPayload(v68, v69, v70);
                break;
              default:
                memcpy(v24, v25, *(_QWORD *)(v27 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          v51 = a1;
          v52 = v7;
          v53 = 2;
          goto LABEL_102;
        case 3u:
          v31 = *a2;
          *(_QWORD *)a1 = *a2;
          v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v33 = (void **)&a1[v32];
          v34 = (void **)((char *)a2 + v32);
          v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
          v38 = v31;
          if (v37(v34, 1, v35))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v34, v35))
            {
              case 1u:
                v71 = *v34;
                *v33 = *v34;
                v72 = v71;
                v73 = v33;
                v74 = v35;
                v75 = 1;
                goto LABEL_99;
              case 2u:
                v165 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v33, v34, v165);
                v73 = v33;
                v74 = v35;
                v75 = 2;
                goto LABEL_99;
              case 3u:
                v166 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v33, v34, v166);
                v73 = v33;
                v74 = v35;
                v75 = 3;
                goto LABEL_99;
              case 4u:
                v167 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v33, v34, v167);
                v73 = v33;
                v74 = v35;
                v75 = 4;
                goto LABEL_99;
              case 5u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v33, v34, v182);
                v73 = v33;
                v74 = v35;
                v75 = 5;
                goto LABEL_99;
              case 6u:
                v168 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v33, v34, v168);
                v73 = v33;
                v74 = v35;
                v75 = 6;
                goto LABEL_99;
              case 8u:
                v169 = *v34;
                *v33 = *v34;
                v170 = v169;
                v73 = v33;
                v74 = v35;
                v75 = 8;
                goto LABEL_99;
              case 9u:
                v171 = *v34;
                *v33 = *v34;
                v172 = v171;
                v73 = v33;
                v74 = v35;
                v75 = 9;
LABEL_99:
                swift_storeEnumTagMultiPayload(v73, v74, v75);
                break;
              default:
                memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
          v51 = a1;
          v52 = v7;
          v53 = 3;
          goto LABEL_102;
        case 4u:
          v40 = *a2;
          *(_QWORD *)a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (void **)&a1[v41];
          v43 = (void **)((char *)a2 + v41);
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
          v47 = v40;
          if (v46(v43, 1, v44))
          {
            v48 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 1u:
                v76 = *v43;
                *v42 = *v43;
                v77 = v76;
                v78 = v42;
                v79 = v44;
                v80 = 1;
                goto LABEL_95;
              case 2u:
                v173 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v42, v43, v173);
                v78 = v42;
                v79 = v44;
                v80 = 2;
                goto LABEL_95;
              case 3u:
                v174 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v42, v43, v174);
                v78 = v42;
                v79 = v44;
                v80 = 3;
                goto LABEL_95;
              case 4u:
                v175 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v42, v43, v175);
                v78 = v42;
                v79 = v44;
                v80 = 4;
                goto LABEL_95;
              case 5u:
                v176 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v42, v43, v176);
                v78 = v42;
                v79 = v44;
                v80 = 5;
                goto LABEL_95;
              case 6u:
                v177 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v42, v43, v177);
                v78 = v42;
                v79 = v44;
                v80 = 6;
                goto LABEL_95;
              case 8u:
                v178 = *v43;
                *v42 = *v43;
                v179 = v178;
                v78 = v42;
                v79 = v44;
                v80 = 8;
                goto LABEL_95;
              case 9u:
                v180 = *v43;
                *v42 = *v43;
                v181 = v180;
                v78 = v42;
                v79 = v44;
                v80 = 9;
LABEL_95:
                swift_storeEnumTagMultiPayload(v78, v79, v80);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v51 = a1;
          v52 = v7;
          v53 = 4;
          goto LABEL_102;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v49 = a2[2];
          *((_QWORD *)a1 + 2) = v49;
          v50 = v49;
          v51 = a1;
          v52 = v7;
          v53 = 5;
          goto LABEL_102;
        case 6u:
          v61 = *a2;
          *(_QWORD *)a1 = *a2;
          v62 = v61;
          v51 = a1;
          v52 = v7;
          v53 = 6;
          goto LABEL_102;
        case 7u:
          v54 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v55 = *(_QWORD *)(v54 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v55 + 48))(a2, 1, v54))
          {
            v56 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v81 = *a2;
            *(_QWORD *)a1 = *a2;
            v82 = *(int *)(v54 + 20);
            v192 = &a1[v82];
            v83 = (char *)a2 + v82;
            v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v85 = v8;
            v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
            v87 = swift_bridgeObjectRetain(v81);
            v86(v192, v83, v84, v87);
            v8 = v85;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v54);
          }
          v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v89 = &a1[v88];
          v90 = (char **)((char *)a2 + v88);
          v91 = v90[1];
          if (v91)
          {
            *(_QWORD *)v89 = *v90;
            *((_QWORD *)v89 + 1) = v91;
            v92 = (void *)v90[2];
            *((_QWORD *)v89 + 2) = v92;
            swift_bridgeObjectRetain(v91);
            v93 = v92;
          }
          else
          {
            *(_OWORD *)v89 = *(_OWORD *)v90;
            *((_QWORD *)v89 + 2) = v90[2];
          }
          v51 = a1;
          v52 = v7;
          v53 = 7;
          goto LABEL_102;
        case 8u:
          v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            a1[*(int *)(v63 + 20)] = *((_BYTE *)a2 + *(int *)(v63 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v95 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v95 + 20)] = *(char **)((char *)a2 + *(int *)(v95 + 20));
          v51 = a1;
          v52 = v7;
          v53 = 8;
          goto LABEL_102;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v58 = &a1[v57];
          v59 = (char *)a2 + v57;
          v60 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          v51 = a1;
          v52 = v7;
          v53 = 9;
LABEL_102:
          swift_storeEnumTagMultiPayload(v51, v52, v53);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

void sub_10018F488(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2))
  {
    switch(swift_getEnumCaseMultiPayload(a1, v2))
    {
      case 0u:
        v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v3))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1u:
        v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v4))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v5 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
            break;
          default:
            break;
        }
LABEL_24:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v17 = (char *)a1 + *(int *)(v16 + 20);
        v18 = *((_QWORD *)v17 + 1);
        if (v18)
        {
          swift_bridgeObjectRelease(v18);
          sub_10003E2EC(*((void **)v17 + 2), *((_QWORD *)v17 + 3), *((_QWORD *)v17 + 4), *((_QWORD *)v17 + 5), *((_QWORD *)v17 + 6), *((_QWORD *)v17 + 7), v17[64]);
          v19 = v17[120];
          if (v19 != 255)
            sub_10002B328(*((void **)v17 + 9), *((_QWORD *)v17 + 10), *((_QWORD *)v17 + 11), *((_QWORD *)v17 + 12), *((_QWORD *)v17 + 13), *((_QWORD *)v17 + 14), v19 & 1);
        }
        v9 = *(id *)((char *)a1 + *(int *)(v16 + 44));
        goto LABEL_28;
      case 2u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v6))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v7))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:
        v9 = (id)*a1;
        goto LABEL_28;
      case 7u:
        v10 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1, 1, v10))
        {
          swift_bridgeObjectRelease(*a1);
          v11 = (char *)a1 + *(int *)(v10 + 20);
          v12 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        }
        a1 = (_QWORD *)((char *)a1
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v13 = a1[1];
        if (!v13)
          return;
        swift_bridgeObjectRelease(v13);
LABEL_18:
        v9 = (id)a1[2];
LABEL_28:

        break;
      case 8u:
        v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
          return;
LABEL_20:
        v15 = type metadata accessor for Date(0);
LABEL_22:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
        break;
      case 9u:
        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v15 = type metadata accessor for AnyTip(0);
        goto LABEL_22;
      default:
        return;
    }
  }
}

void **sub_10018F840(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(void **, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(void **, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(void **, uint64_t, uint64_t);
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void **v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  void *v131;
  id v132;
  int *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  void *v187;
  unsigned __int8 v188;
  void *v189;
  char *v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v195 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        v107 = *(uint64_t *)((char *)a2 + v104 + 8);
        if (v107)
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v182 = *((_QWORD *)v106 + 6);
          v191 = *((_QWORD *)v106 + 7);
          v186 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v182, v191, v186);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v182;
          *((_QWORD *)v105 + 7) = v191;
          v105[64] = v186;
          *(_DWORD *)(v105 + 65) = *(_DWORD *)(v106 + 65);
          v112 = v106[120];
          if (v112 == 255)
          {
            v113 = *(_OWORD *)(v106 + 88);
            *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
            *(_OWORD *)(v105 + 88) = v113;
            *(_OWORD *)(v105 + 104) = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
          }
          else
          {
            v192 = v112 & 1;
            v117 = *((_QWORD *)v106 + 10);
            v118 = *((_QWORD *)v106 + 11);
            v119 = *((_QWORD *)v106 + 12);
            v120 = *((_QWORD *)v106 + 13);
            v183 = *((_QWORD *)v106 + 14);
            v187 = (void *)*((_QWORD *)v106 + 9);
            sub_10002B764(v187, v117, v118, v119, v120, v183, v112 & 1);
            *((_QWORD *)v105 + 9) = v187;
            *((_QWORD *)v105 + 10) = v117;
            *((_QWORD *)v105 + 11) = v118;
            *((_QWORD *)v105 + 12) = v119;
            *((_QWORD *)v105 + 13) = v120;
            *((_QWORD *)v105 + 14) = v183;
            v105[120] = v192;
          }
          v7 = v195;
          v105[121] = v106[121];
        }
        else
        {
          v114 = *((_OWORD *)v106 + 5);
          *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
          *((_OWORD *)v105 + 5) = v114;
          *((_OWORD *)v105 + 6) = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          v115 = *((_OWORD *)v106 + 1);
          *(_OWORD *)v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v115;
          v116 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v116;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v121 = v103[11];
        v122 = *(void **)((char *)a2 + v121);
        *(void **)((char *)a1 + v121) = v122;
        v123 = v122;
        v49 = a1;
        v50 = v6;
        v51 = 0;
        goto LABEL_100;
      case 1u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v196 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 1u:
            v15 = *a2;
            *a1 = *a2;
            v16 = v15;
            v17 = a1;
            v18 = v14;
            v19 = 1;
            goto LABEL_59;
          case 2u:
            v124 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(a1, a2, v124);
            v17 = a1;
            v18 = v14;
            v19 = 2;
            goto LABEL_59;
          case 3u:
            v125 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(a1, a2, v125);
            v17 = a1;
            v18 = v14;
            v19 = 3;
            goto LABEL_59;
          case 4u:
            v126 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
            v17 = a1;
            v18 = v14;
            v19 = 4;
            goto LABEL_59;
          case 5u:
            v127 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
            v17 = a1;
            v18 = v14;
            v19 = 5;
            goto LABEL_59;
          case 6u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v17 = a1;
            v18 = v14;
            v19 = 6;
            goto LABEL_59;
          case 8u:
            v129 = *a2;
            *a1 = *a2;
            v130 = v129;
            v17 = a1;
            v18 = v14;
            v19 = 8;
            goto LABEL_59;
          case 9u:
            v131 = *a2;
            *a1 = *a2;
            v132 = v131;
            v17 = a1;
            v18 = v14;
            v19 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v133 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v134 = v133[5];
        v135 = (char *)a1 + v134;
        v136 = (char *)a2 + v134;
        v137 = *(uint64_t *)((char *)a2 + v134 + 8);
        if (v137)
        {
          *(_QWORD *)v135 = *(_QWORD *)v136;
          *((_QWORD *)v135 + 1) = v137;
          v138 = (void *)*((_QWORD *)v136 + 2);
          v139 = *((_QWORD *)v136 + 3);
          v140 = *((_QWORD *)v136 + 4);
          v141 = *((_QWORD *)v136 + 5);
          v184 = *((_QWORD *)v136 + 6);
          v193 = *((_QWORD *)v136 + 7);
          v188 = v136[64];
          swift_bridgeObjectRetain(v137);
          sub_10003E1F0(v138, v139, v140, v141, v184, v193, v188);
          *((_QWORD *)v135 + 2) = v138;
          *((_QWORD *)v135 + 3) = v139;
          *((_QWORD *)v135 + 4) = v140;
          *((_QWORD *)v135 + 5) = v141;
          *((_QWORD *)v135 + 6) = v184;
          *((_QWORD *)v135 + 7) = v193;
          v135[64] = v188;
          *(_DWORD *)(v135 + 65) = *(_DWORD *)(v136 + 65);
          v142 = v136[120];
          if (v142 == 255)
          {
            v143 = *(_OWORD *)(v136 + 88);
            *(_OWORD *)(v135 + 72) = *(_OWORD *)(v136 + 72);
            *(_OWORD *)(v135 + 88) = v143;
            *(_OWORD *)(v135 + 104) = *(_OWORD *)(v136 + 104);
            v135[120] = v136[120];
          }
          else
          {
            v194 = v142 & 1;
            v147 = *((_QWORD *)v136 + 10);
            v148 = *((_QWORD *)v136 + 11);
            v149 = *((_QWORD *)v136 + 12);
            v150 = *((_QWORD *)v136 + 13);
            v185 = *((_QWORD *)v136 + 14);
            v189 = (void *)*((_QWORD *)v136 + 9);
            sub_10002B764(v189, v147, v148, v149, v150, v185, v142 & 1);
            *((_QWORD *)v135 + 9) = v189;
            *((_QWORD *)v135 + 10) = v147;
            *((_QWORD *)v135 + 11) = v148;
            *((_QWORD *)v135 + 12) = v149;
            *((_QWORD *)v135 + 13) = v150;
            *((_QWORD *)v135 + 14) = v185;
            v135[120] = v194;
          }
          v7 = v196;
          v135[121] = v136[121];
        }
        else
        {
          v144 = *((_OWORD *)v136 + 5);
          *((_OWORD *)v135 + 4) = *((_OWORD *)v136 + 4);
          *((_OWORD *)v135 + 5) = v144;
          *((_OWORD *)v135 + 6) = *((_OWORD *)v136 + 6);
          *(_OWORD *)(v135 + 106) = *(_OWORD *)(v136 + 106);
          v145 = *((_OWORD *)v136 + 1);
          *(_OWORD *)v135 = *(_OWORD *)v136;
          *((_OWORD *)v135 + 1) = v145;
          v146 = *((_OWORD *)v136 + 3);
          *((_OWORD *)v135 + 2) = *((_OWORD *)v136 + 2);
          *((_OWORD *)v135 + 3) = v146;
        }
        *((_BYTE *)a1 + v133[6]) = *((_BYTE *)a2 + v133[6]);
        *((_BYTE *)a1 + v133[7]) = *((_BYTE *)a2 + v133[7]);
        *((_BYTE *)a1 + v133[8]) = *((_BYTE *)a2 + v133[8]);
        *((_BYTE *)a1 + v133[9]) = *((_BYTE *)a2 + v133[9]);
        *((_BYTE *)a1 + v133[10]) = *((_BYTE *)a2 + v133[10]);
        v151 = v133[11];
        v152 = *(void **)((char *)a2 + v151);
        *(void **)((char *)a1 + v151) = v152;
        v153 = v152;
        v49 = a1;
        v50 = v6;
        v51 = 1;
        goto LABEL_100;
      case 2u:
        v20 = *a2;
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v22 = (void **)((char *)a1 + v21);
        v23 = (void **)((char *)a2 + v21);
        v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v25 + 48);
        v27 = v20;
        if (v26(v23, 1, v24))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v23, v24))
          {
            case 1u:
              v64 = *v23;
              *v22 = *v23;
              v65 = v64;
              v66 = v22;
              v67 = v24;
              v68 = 1;
              goto LABEL_75;
            case 2u:
              v154 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v22, v23, v154);
              v66 = v22;
              v67 = v24;
              v68 = 2;
              goto LABEL_75;
            case 3u:
              v155 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v22, v23, v155);
              v66 = v22;
              v67 = v24;
              v68 = 3;
              goto LABEL_75;
            case 4u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v22, v23, v156);
              v66 = v22;
              v67 = v24;
              v68 = 4;
              goto LABEL_75;
            case 5u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v22, v23, v157);
              v66 = v22;
              v67 = v24;
              v68 = 5;
              goto LABEL_75;
            case 6u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v22, v23, v158);
              v66 = v22;
              v67 = v24;
              v68 = 6;
              goto LABEL_75;
            case 8u:
              v159 = *v23;
              *v22 = *v23;
              v160 = v159;
              v66 = v22;
              v67 = v24;
              v68 = 8;
              goto LABEL_75;
            case 9u:
              v161 = *v23;
              *v22 = *v23;
              v162 = v161;
              v66 = v22;
              v67 = v24;
              v68 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v66, v67, v68);
              break;
            default:
              memcpy(v22, v23, *(_QWORD *)(v25 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        v49 = a1;
        v50 = v6;
        v51 = 2;
        goto LABEL_100;
      case 3u:
        v29 = *a2;
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (void **)((char *)a1 + v30);
        v32 = (void **)((char *)a2 + v30);
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48);
        v36 = v29;
        if (v35(v32, 1, v33))
        {
          v37 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 1u:
              v69 = *v32;
              *v31 = *v32;
              v70 = v69;
              v71 = v31;
              v72 = v33;
              v73 = 1;
              goto LABEL_97;
            case 2u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v31, v32, v163);
              v71 = v31;
              v72 = v33;
              v73 = 2;
              goto LABEL_97;
            case 3u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v31, v32, v164);
              v71 = v31;
              v72 = v33;
              v73 = 3;
              goto LABEL_97;
            case 4u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v31, v32, v165);
              v71 = v31;
              v72 = v33;
              v73 = 4;
              goto LABEL_97;
            case 5u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v31, v32, v180);
              v71 = v31;
              v72 = v33;
              v73 = 5;
              goto LABEL_97;
            case 6u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v31, v32, v166);
              v71 = v31;
              v72 = v33;
              v73 = 6;
              goto LABEL_97;
            case 8u:
              v167 = *v32;
              *v31 = *v32;
              v168 = v167;
              v71 = v31;
              v72 = v33;
              v73 = 8;
              goto LABEL_97;
            case 9u:
              v169 = *v32;
              *v31 = *v32;
              v170 = v169;
              v71 = v31;
              v72 = v33;
              v73 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v71, v72, v73);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v49 = a1;
        v50 = v6;
        v51 = 3;
        goto LABEL_100;
      case 4u:
        v38 = *a2;
        *a1 = *a2;
        v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v40 = (void **)((char *)a1 + v39);
        v41 = (void **)((char *)a2 + v39);
        v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v43 = *(_QWORD *)(v42 - 8);
        v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
        v45 = v38;
        if (v44(v41, 1, v42))
        {
          v46 = sub_10002A750(&qword_100644980);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v41, v42))
          {
            case 1u:
              v74 = *v41;
              *v40 = *v41;
              v75 = v74;
              v76 = v40;
              v77 = v42;
              v78 = 1;
              goto LABEL_93;
            case 2u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v40, v41, v171);
              v76 = v40;
              v77 = v42;
              v78 = 2;
              goto LABEL_93;
            case 3u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v40, v41, v172);
              v76 = v40;
              v77 = v42;
              v78 = 3;
              goto LABEL_93;
            case 4u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v40, v41, v173);
              v76 = v40;
              v77 = v42;
              v78 = 4;
              goto LABEL_93;
            case 5u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v40, v41, v174);
              v76 = v40;
              v77 = v42;
              v78 = 5;
              goto LABEL_93;
            case 6u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v40, v41, v175);
              v76 = v40;
              v77 = v42;
              v78 = 6;
              goto LABEL_93;
            case 8u:
              v176 = *v41;
              *v40 = *v41;
              v177 = v176;
              v76 = v40;
              v77 = v42;
              v78 = 8;
              goto LABEL_93;
            case 9u:
              v178 = *v41;
              *v40 = *v41;
              v179 = v178;
              v76 = v40;
              v77 = v42;
              v78 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v76, v77, v78);
              break;
            default:
              memcpy(v40, v41, *(_QWORD *)(v43 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        v49 = a1;
        v50 = v6;
        v51 = 4;
        goto LABEL_100;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v47 = a2[2];
        a1[2] = v47;
        v48 = v47;
        v49 = a1;
        v50 = v6;
        v51 = 5;
        goto LABEL_100;
      case 6u:
        v59 = *a2;
        *a1 = *a2;
        v60 = v59;
        v49 = a1;
        v50 = v6;
        v51 = 6;
        goto LABEL_100;
      case 7u:
        v52 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v53 = *(_QWORD *)(v52 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48))(a2, 1, v52))
        {
          v54 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          v79 = *a2;
          *a1 = *a2;
          v80 = *(int *)(v52 + 20);
          v190 = (char *)a1 + v80;
          v81 = (char *)a2 + v80;
          v82 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v83 = v7;
          v84 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v82 - 8) + 16);
          v85 = swift_bridgeObjectRetain(v79);
          v84(v190, v81, v82, v85);
          v7 = v83;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(a1, 0, 1, v52);
        }
        v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v87 = (void **)((char *)a1 + v86);
        v88 = (void **)((char *)a2 + v86);
        v89 = v88[1];
        if (v89)
        {
          *v87 = *v88;
          v87[1] = v89;
          v90 = (void *)v88[2];
          v87[2] = v90;
          swift_bridgeObjectRetain(v89);
          v91 = v90;
        }
        else
        {
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v87[2] = v88[2];
        }
        v49 = a1;
        v50 = v6;
        v51 = 7;
        goto LABEL_100;
      case 8u:
        v61 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48))(a2, 1, v61))
        {
          v63 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v61 + 20)) = *((_BYTE *)a2 + *(int *)(v61 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v62 + 56))(a1, 0, 1, v61);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v49 = a1;
        v50 = v6;
        v51 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v55 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v56 = (char *)a1 + v55;
        v57 = (char *)a2 + v55;
        v58 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        v49 = a1;
        v50 = v6;
        v51 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v49, v50, v51);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void **sub_100190854(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void **v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(void **, uint64_t, uint64_t);
  id v105;
  uint64_t v106;
  void *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  id v117;
  void **v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t, __n128);
  __n128 v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void *v141;
  id v142;
  __int128 v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  void *v224;
  id v225;
  int *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void *v257;
  id v258;
  void *v259;
  id v260;
  int *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  uint64_t v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  uint64_t v318;
  void *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  id v332;
  void *v333;
  id v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  id v341;
  void *v342;
  id v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  id v350;
  void *v351;
  id v352;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  id v378;
  void *v379;
  id v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  int *v385;
  int *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unsigned __int8 v391;
  uint64_t v392;
  unsigned __int8 v393;
  uint64_t v394;
  int *v395;
  int *v396;
  char *v397;
  uint64_t v398;
  char v399;
  uint64_t v400;
  char v401;
  unsigned __int8 v402;
  char v403;
  unsigned __int8 v404;
  char v405;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 1u:
              v12 = *a2;
              *a1 = *a2;
              v13 = v12;
              v14 = a1;
              v15 = v11;
              v16 = 1;
              goto LABEL_80;
            case 2u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
              v14 = a1;
              v15 = v11;
              v16 = 2;
              goto LABEL_80;
            case 3u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v14 = a1;
              v15 = v11;
              v16 = 3;
              goto LABEL_80;
            case 4u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v14 = a1;
              v15 = v11;
              v16 = 4;
              goto LABEL_80;
            case 5u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v14 = a1;
              v15 = v11;
              v16 = 5;
              goto LABEL_80;
            case 6u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v14 = a1;
              v15 = v11;
              v16 = 6;
              goto LABEL_80;
            case 8u:
              v187 = *a2;
              *a1 = *a2;
              v188 = v187;
              v14 = a1;
              v15 = v11;
              v16 = 8;
              goto LABEL_80;
            case 9u:
              v189 = *a2;
              *a1 = *a2;
              v190 = v189;
              v14 = a1;
              v15 = v11;
              v16 = 9;
LABEL_80:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v191 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v192 = v191[5];
          v193 = (char *)a1 + v192;
          v194 = (char *)a2 + v192;
          if (*(void **)((char *)a2 + v192 + 8))
          {
            v385 = v191;
            *(_QWORD *)v193 = *(_QWORD *)v194;
            v195 = *((_QWORD *)v194 + 1);
            *((_QWORD *)v193 + 1) = v195;
            v196 = (void *)*((_QWORD *)v194 + 2);
            v197 = *((_QWORD *)v194 + 3);
            v198 = *((_QWORD *)v194 + 4);
            v381 = *((_QWORD *)v194 + 5);
            v199 = *((_QWORD *)v194 + 6);
            v398 = *((_QWORD *)v194 + 7);
            v391 = v194[64];
            swift_bridgeObjectRetain(v195);
            sub_10003E1F0(v196, v197, v198, v381, v199, v398, v391);
            *((_QWORD *)v193 + 2) = v196;
            *((_QWORD *)v193 + 3) = v197;
            *((_QWORD *)v193 + 4) = v198;
            *((_QWORD *)v193 + 5) = v381;
            *((_QWORD *)v193 + 6) = v199;
            *((_QWORD *)v193 + 7) = v398;
            v193[64] = v391;
            v193[65] = v194[65];
            v193[66] = v194[66];
            v193[67] = v194[67];
            v193[68] = v194[68];
            v200 = v194[120];
            if (v200 == 255)
            {
              v201 = *(_OWORD *)(v194 + 72);
              v202 = *(_OWORD *)(v194 + 88);
              v203 = *(_OWORD *)(v194 + 104);
              v193[120] = v194[120];
              *(_OWORD *)(v193 + 88) = v202;
              *(_OWORD *)(v193 + 104) = v203;
              *(_OWORD *)(v193 + 72) = v201;
            }
            else
            {
              v399 = v200 & 1;
              v210 = (void *)*((_QWORD *)v194 + 9);
              v392 = *((_QWORD *)v194 + 10);
              v211 = *((_QWORD *)v194 + 11);
              v212 = *((_QWORD *)v194 + 12);
              v213 = *((_QWORD *)v194 + 13);
              v382 = *((_QWORD *)v194 + 14);
              sub_10002B764(v210, v392, v211, v212, v213, v382, v200 & 1);
              *((_QWORD *)v193 + 9) = v210;
              *((_QWORD *)v193 + 10) = v392;
              *((_QWORD *)v193 + 11) = v211;
              *((_QWORD *)v193 + 12) = v212;
              *((_QWORD *)v193 + 13) = v213;
              *((_QWORD *)v193 + 14) = v382;
              v193[120] = v399;
            }
            v193[121] = v194[121];
            v191 = v385;
          }
          else
          {
            v204 = *(_OWORD *)v194;
            v205 = *((_OWORD *)v194 + 1);
            v206 = *((_OWORD *)v194 + 3);
            *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
            *((_OWORD *)v193 + 3) = v206;
            *(_OWORD *)v193 = v204;
            *((_OWORD *)v193 + 1) = v205;
            v207 = *((_OWORD *)v194 + 4);
            v208 = *((_OWORD *)v194 + 5);
            v209 = *((_OWORD *)v194 + 6);
            *(_OWORD *)(v193 + 106) = *(_OWORD *)(v194 + 106);
            *((_OWORD *)v193 + 5) = v208;
            *((_OWORD *)v193 + 6) = v209;
            *((_OWORD *)v193 + 4) = v207;
          }
          *((_BYTE *)a1 + v191[6]) = *((_BYTE *)a2 + v191[6]);
          *((_BYTE *)a1 + v191[7]) = *((_BYTE *)a2 + v191[7]);
          *((_BYTE *)a1 + v191[8]) = *((_BYTE *)a2 + v191[8]);
          *((_BYTE *)a1 + v191[9]) = *((_BYTE *)a2 + v191[9]);
          *((_BYTE *)a1 + v191[10]) = *((_BYTE *)a2 + v191[10]);
          v214 = v191[11];
          v215 = *(void **)((char *)a2 + v214);
          *(void **)((char *)a1 + v214) = v215;
          v216 = v215;
          v59 = a1;
          v60 = v6;
          v61 = 0;
          goto LABEL_169;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 1u:
              v25 = *a2;
              *a1 = *a2;
              v26 = v25;
              v27 = a1;
              v28 = v24;
              v29 = 1;
              goto LABEL_96;
            case 2u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v27 = a1;
              v28 = v24;
              v29 = 2;
              goto LABEL_96;
            case 3u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v27 = a1;
              v28 = v24;
              v29 = 3;
              goto LABEL_96;
            case 4u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v27 = a1;
              v28 = v24;
              v29 = 4;
              goto LABEL_96;
            case 5u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
              v27 = a1;
              v28 = v24;
              v29 = 5;
              goto LABEL_96;
            case 6u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v27 = a1;
              v28 = v24;
              v29 = 6;
              goto LABEL_96;
            case 8u:
              v222 = *a2;
              *a1 = *a2;
              v223 = v222;
              v27 = a1;
              v28 = v24;
              v29 = 8;
              goto LABEL_96;
            case 9u:
              v224 = *a2;
              *a1 = *a2;
              v225 = v224;
              v27 = a1;
              v28 = v24;
              v29 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v27, v28, v29);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v226 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v227 = v226[5];
          v228 = (char *)a1 + v227;
          v229 = (char *)a2 + v227;
          if (*(void **)((char *)a2 + v227 + 8))
          {
            v386 = v226;
            *(_QWORD *)v228 = *(_QWORD *)v229;
            v230 = *((_QWORD *)v229 + 1);
            *((_QWORD *)v228 + 1) = v230;
            v231 = (void *)*((_QWORD *)v229 + 2);
            v232 = *((_QWORD *)v229 + 3);
            v233 = *((_QWORD *)v229 + 4);
            v383 = *((_QWORD *)v229 + 5);
            v234 = *((_QWORD *)v229 + 6);
            v400 = *((_QWORD *)v229 + 7);
            v393 = v229[64];
            swift_bridgeObjectRetain(v230);
            sub_10003E1F0(v231, v232, v233, v383, v234, v400, v393);
            *((_QWORD *)v228 + 2) = v231;
            *((_QWORD *)v228 + 3) = v232;
            *((_QWORD *)v228 + 4) = v233;
            *((_QWORD *)v228 + 5) = v383;
            *((_QWORD *)v228 + 6) = v234;
            *((_QWORD *)v228 + 7) = v400;
            v228[64] = v393;
            v228[65] = v229[65];
            v228[66] = v229[66];
            v228[67] = v229[67];
            v228[68] = v229[68];
            v235 = v229[120];
            if (v235 == 255)
            {
              v236 = *(_OWORD *)(v229 + 72);
              v237 = *(_OWORD *)(v229 + 88);
              v238 = *(_OWORD *)(v229 + 104);
              v228[120] = v229[120];
              *(_OWORD *)(v228 + 88) = v237;
              *(_OWORD *)(v228 + 104) = v238;
              *(_OWORD *)(v228 + 72) = v236;
            }
            else
            {
              v401 = v235 & 1;
              v245 = (void *)*((_QWORD *)v229 + 9);
              v394 = *((_QWORD *)v229 + 10);
              v246 = *((_QWORD *)v229 + 11);
              v247 = *((_QWORD *)v229 + 12);
              v248 = *((_QWORD *)v229 + 13);
              v384 = *((_QWORD *)v229 + 14);
              sub_10002B764(v245, v394, v246, v247, v248, v384, v235 & 1);
              *((_QWORD *)v228 + 9) = v245;
              *((_QWORD *)v228 + 10) = v394;
              *((_QWORD *)v228 + 11) = v246;
              *((_QWORD *)v228 + 12) = v247;
              *((_QWORD *)v228 + 13) = v248;
              *((_QWORD *)v228 + 14) = v384;
              v228[120] = v401;
            }
            v228[121] = v229[121];
            v226 = v386;
          }
          else
          {
            v239 = *(_OWORD *)v229;
            v240 = *((_OWORD *)v229 + 1);
            v241 = *((_OWORD *)v229 + 3);
            *((_OWORD *)v228 + 2) = *((_OWORD *)v229 + 2);
            *((_OWORD *)v228 + 3) = v241;
            *(_OWORD *)v228 = v239;
            *((_OWORD *)v228 + 1) = v240;
            v242 = *((_OWORD *)v229 + 4);
            v243 = *((_OWORD *)v229 + 5);
            v244 = *((_OWORD *)v229 + 6);
            *(_OWORD *)(v228 + 106) = *(_OWORD *)(v229 + 106);
            *((_OWORD *)v228 + 5) = v243;
            *((_OWORD *)v228 + 6) = v244;
            *((_OWORD *)v228 + 4) = v242;
          }
          *((_BYTE *)a1 + v226[6]) = *((_BYTE *)a2 + v226[6]);
          *((_BYTE *)a1 + v226[7]) = *((_BYTE *)a2 + v226[7]);
          *((_BYTE *)a1 + v226[8]) = *((_BYTE *)a2 + v226[8]);
          *((_BYTE *)a1 + v226[9]) = *((_BYTE *)a2 + v226[9]);
          *((_BYTE *)a1 + v226[10]) = *((_BYTE *)a2 + v226[10]);
          v249 = v226[11];
          v250 = *(void **)((char *)a2 + v249);
          *(void **)((char *)a1 + v249) = v250;
          v251 = v250;
          v59 = a1;
          v60 = v6;
          v61 = 1;
          goto LABEL_169;
        case 2u:
          v30 = *a2;
          *a1 = *a2;
          v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v32 = (void **)((char *)a1 + v31);
          v33 = (void **)((char *)a2 + v31);
          v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
          v37 = v30;
          if (v36(v33, 1, v34))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v33, v34))
            {
              case 1u:
                v116 = *v33;
                *v32 = *v33;
                v117 = v116;
                v118 = v32;
                v119 = v34;
                v120 = 1;
                goto LABEL_144;
              case 2u:
                v326 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v32, v33, v326);
                v118 = v32;
                v119 = v34;
                v120 = 2;
                goto LABEL_144;
              case 3u:
                v327 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v32, v33, v327);
                v118 = v32;
                v119 = v34;
                v120 = 3;
                goto LABEL_144;
              case 4u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v32, v33, v328);
                v118 = v32;
                v119 = v34;
                v120 = 4;
                goto LABEL_144;
              case 5u:
                v329 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v32, v33, v329);
                v118 = v32;
                v119 = v34;
                v120 = 5;
                goto LABEL_144;
              case 6u:
                v330 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v32, v33, v330);
                v118 = v32;
                v119 = v34;
                v120 = 6;
                goto LABEL_144;
              case 8u:
                v331 = *v33;
                *v32 = *v33;
                v332 = v331;
                v118 = v32;
                v119 = v34;
                v120 = 8;
                goto LABEL_144;
              case 9u:
                v333 = *v33;
                *v32 = *v33;
                v334 = v333;
                v118 = v32;
                v119 = v34;
                v120 = 9;
LABEL_144:
                swift_storeEnumTagMultiPayload(v118, v119, v120);
                break;
              default:
                memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          v59 = a1;
          v60 = v6;
          v61 = 2;
          goto LABEL_169;
        case 3u:
          v39 = *a2;
          *a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (void **)((char *)a1 + v40);
          v42 = (void **)((char *)a2 + v40);
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
          v46 = v39;
          if (v45(v42, 1, v43))
          {
            v47 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 1u:
                v121 = *v42;
                *v41 = *v42;
                v122 = v121;
                v123 = v41;
                v124 = v43;
                v125 = 1;
                goto LABEL_155;
              case 2u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v41, v42, v335);
                v123 = v41;
                v124 = v43;
                v125 = 2;
                goto LABEL_155;
              case 3u:
                v336 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v336 - 8) + 16))(v41, v42, v336);
                v123 = v41;
                v124 = v43;
                v125 = 3;
                goto LABEL_155;
              case 4u:
                v337 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v41, v42, v337);
                v123 = v41;
                v124 = v43;
                v125 = 4;
                goto LABEL_155;
              case 5u:
                v338 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v41, v42, v338);
                v123 = v41;
                v124 = v43;
                v125 = 5;
                goto LABEL_155;
              case 6u:
                v339 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v41, v42, v339);
                v123 = v41;
                v124 = v43;
                v125 = 6;
                goto LABEL_155;
              case 8u:
                v340 = *v42;
                *v41 = *v42;
                v341 = v340;
                v123 = v41;
                v124 = v43;
                v125 = 8;
                goto LABEL_155;
              case 9u:
                v342 = *v42;
                *v41 = *v42;
                v343 = v342;
                v123 = v41;
                v124 = v43;
                v125 = 9;
LABEL_155:
                swift_storeEnumTagMultiPayload(v123, v124, v125);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v59 = a1;
          v60 = v6;
          v61 = 3;
          goto LABEL_169;
        case 4u:
          v48 = *a2;
          *a1 = *a2;
          v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v50 = (void **)((char *)a1 + v49);
          v51 = (void **)((char *)a2 + v49);
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v53 = *(_QWORD *)(v52 - 8);
          v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
          v55 = v48;
          if (v54(v51, 1, v52))
          {
            v56 = sub_10002A750(&qword_100644980);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v51, v52))
            {
              case 1u:
                v126 = *v51;
                *v50 = *v51;
                v127 = v126;
                v128 = v50;
                v129 = v52;
                v130 = 1;
                goto LABEL_166;
              case 2u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v50, v51, v344);
                v128 = v50;
                v129 = v52;
                v130 = 2;
                goto LABEL_166;
              case 3u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v50, v51, v345);
                v128 = v50;
                v129 = v52;
                v130 = 3;
                goto LABEL_166;
              case 4u:
                v346 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v50, v51, v346);
                v128 = v50;
                v129 = v52;
                v130 = 4;
                goto LABEL_166;
              case 5u:
                v347 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v50, v51, v347);
                v128 = v50;
                v129 = v52;
                v130 = 5;
                goto LABEL_166;
              case 6u:
                v348 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v50, v51, v348);
                v128 = v50;
                v129 = v52;
                v130 = 6;
                goto LABEL_166;
              case 8u:
                v349 = *v51;
                *v50 = *v51;
                v350 = v349;
                v128 = v50;
                v129 = v52;
                v130 = 8;
                goto LABEL_166;
              case 9u:
                v351 = *v51;
                *v50 = *v51;
                v352 = v351;
                v128 = v50;
                v129 = v52;
                v130 = 9;
LABEL_166:
                swift_storeEnumTagMultiPayload(v128, v129, v130);
                break;
              default:
                memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v59 = a1;
          v60 = v6;
          v61 = 4;
          goto LABEL_169;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v57 = a2[2];
          a1[2] = v57;
          v58 = v57;
          v59 = a1;
          v60 = v6;
          v61 = 5;
          goto LABEL_169;
        case 6u:
          v69 = *a2;
          *a1 = *a2;
          v70 = v69;
          v59 = a1;
          v60 = v6;
          v61 = 6;
          goto LABEL_169;
        case 7u:
          v62 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
          {
            v64 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            v131 = *a2;
            *a1 = *a2;
            v132 = *(int *)(v62 + 20);
            v133 = (char *)a1 + v132;
            v397 = (char *)a2 + v132;
            v134 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v135 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v134 - 8) + 16);
            v136 = swift_bridgeObjectRetain(v131);
            v135(v133, v397, v134, v136);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
          }
          v137 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v138 = (void **)((char *)a1 + v137);
          v139 = (void **)((char *)a2 + v137);
          if (v139[1])
          {
            *v138 = *v139;
            v140 = v139[1];
            v138[1] = v140;
            v141 = (void *)v139[2];
            v138[2] = v141;
            swift_bridgeObjectRetain(v140);
            v142 = v141;
          }
          else
          {
            v143 = *(_OWORD *)v139;
            v138[2] = v139[2];
            *(_OWORD *)v138 = v143;
          }
          v59 = a1;
          v60 = v6;
          v61 = 7;
          goto LABEL_169;
        case 8u:
          v71 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v72 + 48))(a2, 1, v71))
          {
            v73 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v149 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
            *((_BYTE *)a1 + *(int *)(v71 + 20)) = *((_BYTE *)a2 + *(int *)(v71 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v72 + 56))(a1, 0, 1, v71);
          }
          v150 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v150 + 20)) = *(void **)((char *)a2 + *(int *)(v150 + 20));
          v59 = a1;
          v60 = v6;
          v61 = 8;
          goto LABEL_169;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v65 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v66 = (char *)a1 + v65;
          v67 = (char *)a2 + v65;
          v68 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
          v59 = a1;
          v60 = v6;
          v61 = 9;
LABEL_169:
          swift_storeEnumTagMultiPayload(v59, v60, v61);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      return a1;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v17);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v18))
        {
          case 1u:
            v19 = *a2;
            *a1 = *a2;
            v20 = v19;
            v21 = a1;
            v22 = v18;
            v23 = 1;
            goto LABEL_112;
          case 2u:
            v252 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(a1, a2, v252);
            v21 = a1;
            v22 = v18;
            v23 = 2;
            goto LABEL_112;
          case 3u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(a1, a2, v253);
            v21 = a1;
            v22 = v18;
            v23 = 3;
            goto LABEL_112;
          case 4u:
            v254 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(a1, a2, v254);
            v21 = a1;
            v22 = v18;
            v23 = 4;
            goto LABEL_112;
          case 5u:
            v255 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(a1, a2, v255);
            v21 = a1;
            v22 = v18;
            v23 = 5;
            goto LABEL_112;
          case 6u:
            v256 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(a1, a2, v256);
            v21 = a1;
            v22 = v18;
            v23 = 6;
            goto LABEL_112;
          case 8u:
            v257 = *a2;
            *a1 = *a2;
            v258 = v257;
            v21 = a1;
            v22 = v18;
            v23 = 8;
            goto LABEL_112;
          case 9u:
            v259 = *a2;
            *a1 = *a2;
            v260 = v259;
            v21 = a1;
            v22 = v18;
            v23 = 9;
LABEL_112:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v261 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v262 = v261[5];
        v263 = (char *)a1 + v262;
        v264 = (char *)a2 + v262;
        if (*(void **)((char *)a2 + v262 + 8))
        {
          v395 = v261;
          *(_QWORD *)v263 = *(_QWORD *)v264;
          v265 = *((_QWORD *)v264 + 1);
          *((_QWORD *)v263 + 1) = v265;
          v266 = (void *)*((_QWORD *)v264 + 2);
          v267 = *((_QWORD *)v264 + 3);
          v268 = *((_QWORD *)v264 + 4);
          v269 = *((_QWORD *)v264 + 5);
          v270 = *((_QWORD *)v264 + 7);
          v387 = *((_QWORD *)v264 + 6);
          v402 = v264[64];
          swift_bridgeObjectRetain(v265);
          sub_10003E1F0(v266, v267, v268, v269, v387, v270, v402);
          *((_QWORD *)v263 + 2) = v266;
          *((_QWORD *)v263 + 3) = v267;
          *((_QWORD *)v263 + 4) = v268;
          *((_QWORD *)v263 + 5) = v269;
          *((_QWORD *)v263 + 6) = v387;
          *((_QWORD *)v263 + 7) = v270;
          v263[64] = v402;
          v263[65] = v264[65];
          v263[66] = v264[66];
          v263[67] = v264[67];
          v263[68] = v264[68];
          v271 = v264[120];
          if (v271 == 255)
          {
            v272 = *(_OWORD *)(v264 + 72);
            v273 = *(_OWORD *)(v264 + 88);
            v274 = *(_OWORD *)(v264 + 104);
            v263[120] = v264[120];
            *(_OWORD *)(v263 + 88) = v273;
            *(_OWORD *)(v263 + 104) = v274;
            *(_OWORD *)(v263 + 72) = v272;
          }
          else
          {
            v403 = v271 & 1;
            v282 = (void *)*((_QWORD *)v264 + 9);
            v281 = *((_QWORD *)v264 + 10);
            v283 = *((_QWORD *)v264 + 11);
            v284 = *((_QWORD *)v264 + 12);
            v285 = *((_QWORD *)v264 + 13);
            v388 = *((_QWORD *)v264 + 14);
            sub_10002B764(v282, v281, v283, v284, v285, v388, v271 & 1);
            *((_QWORD *)v263 + 9) = v282;
            *((_QWORD *)v263 + 10) = v281;
            *((_QWORD *)v263 + 11) = v283;
            *((_QWORD *)v263 + 12) = v284;
            *((_QWORD *)v263 + 13) = v285;
            *((_QWORD *)v263 + 14) = v388;
            v263[120] = v403;
          }
          v263[121] = v264[121];
          v261 = v395;
        }
        else
        {
          v275 = *(_OWORD *)v264;
          v276 = *((_OWORD *)v264 + 1);
          v277 = *((_OWORD *)v264 + 3);
          *((_OWORD *)v263 + 2) = *((_OWORD *)v264 + 2);
          *((_OWORD *)v263 + 3) = v277;
          *(_OWORD *)v263 = v275;
          *((_OWORD *)v263 + 1) = v276;
          v278 = *((_OWORD *)v264 + 4);
          v279 = *((_OWORD *)v264 + 5);
          v280 = *((_OWORD *)v264 + 6);
          *(_OWORD *)(v263 + 106) = *(_OWORD *)(v264 + 106);
          *((_OWORD *)v263 + 5) = v279;
          *((_OWORD *)v263 + 6) = v280;
          *((_OWORD *)v263 + 4) = v278;
        }
        *((_BYTE *)a1 + v261[6]) = *((_BYTE *)a2 + v261[6]);
        *((_BYTE *)a1 + v261[7]) = *((_BYTE *)a2 + v261[7]);
        *((_BYTE *)a1 + v261[8]) = *((_BYTE *)a2 + v261[8]);
        *((_BYTE *)a1 + v261[9]) = *((_BYTE *)a2 + v261[9]);
        *((_BYTE *)a1 + v261[10]) = *((_BYTE *)a2 + v261[10]);
        v286 = v261[11];
        v287 = *(void **)((char *)a2 + v286);
        *(void **)((char *)a1 + v286) = v287;
        v288 = v287;
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v74))
        {
          case 1u:
            v75 = *a2;
            *a1 = *a2;
            v76 = v75;
            v77 = a1;
            v78 = v74;
            v79 = 1;
            goto LABEL_128;
          case 2u:
            v289 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
            v77 = a1;
            v78 = v74;
            v79 = 2;
            goto LABEL_128;
          case 3u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
            v77 = a1;
            v78 = v74;
            v79 = 3;
            goto LABEL_128;
          case 4u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(a1, a2, v291);
            v77 = a1;
            v78 = v74;
            v79 = 4;
            goto LABEL_128;
          case 5u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(a1, a2, v292);
            v77 = a1;
            v78 = v74;
            v79 = 5;
            goto LABEL_128;
          case 6u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(a1, a2, v293);
            v77 = a1;
            v78 = v74;
            v79 = 6;
            goto LABEL_128;
          case 8u:
            v294 = *a2;
            *a1 = *a2;
            v295 = v294;
            v77 = a1;
            v78 = v74;
            v79 = 8;
            goto LABEL_128;
          case 9u:
            v296 = *a2;
            *a1 = *a2;
            v297 = v296;
            v77 = a1;
            v78 = v74;
            v79 = 9;
LABEL_128:
            swift_storeEnumTagMultiPayload(v77, v78, v79);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
            break;
        }
        v298 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v299 = v298[5];
        v300 = (char *)a1 + v299;
        v301 = (char *)a2 + v299;
        if (*(void **)((char *)a2 + v299 + 8))
        {
          v396 = v298;
          *(_QWORD *)v300 = *(_QWORD *)v301;
          v302 = *((_QWORD *)v301 + 1);
          *((_QWORD *)v300 + 1) = v302;
          v303 = (void *)*((_QWORD *)v301 + 2);
          v304 = *((_QWORD *)v301 + 3);
          v305 = *((_QWORD *)v301 + 4);
          v306 = *((_QWORD *)v301 + 5);
          v307 = *((_QWORD *)v301 + 7);
          v389 = *((_QWORD *)v301 + 6);
          v404 = v301[64];
          swift_bridgeObjectRetain(v302);
          sub_10003E1F0(v303, v304, v305, v306, v389, v307, v404);
          *((_QWORD *)v300 + 2) = v303;
          *((_QWORD *)v300 + 3) = v304;
          *((_QWORD *)v300 + 4) = v305;
          *((_QWORD *)v300 + 5) = v306;
          *((_QWORD *)v300 + 6) = v389;
          *((_QWORD *)v300 + 7) = v307;
          v300[64] = v404;
          v300[65] = v301[65];
          v300[66] = v301[66];
          v300[67] = v301[67];
          v300[68] = v301[68];
          v308 = v301[120];
          if (v308 == 255)
          {
            v309 = *(_OWORD *)(v301 + 72);
            v310 = *(_OWORD *)(v301 + 88);
            v311 = *(_OWORD *)(v301 + 104);
            v300[120] = v301[120];
            *(_OWORD *)(v300 + 88) = v310;
            *(_OWORD *)(v300 + 104) = v311;
            *(_OWORD *)(v300 + 72) = v309;
          }
          else
          {
            v405 = v308 & 1;
            v319 = (void *)*((_QWORD *)v301 + 9);
            v318 = *((_QWORD *)v301 + 10);
            v320 = *((_QWORD *)v301 + 11);
            v321 = *((_QWORD *)v301 + 12);
            v322 = *((_QWORD *)v301 + 13);
            v390 = *((_QWORD *)v301 + 14);
            sub_10002B764(v319, v318, v320, v321, v322, v390, v308 & 1);
            *((_QWORD *)v300 + 9) = v319;
            *((_QWORD *)v300 + 10) = v318;
            *((_QWORD *)v300 + 11) = v320;
            *((_QWORD *)v300 + 12) = v321;
            *((_QWORD *)v300 + 13) = v322;
            *((_QWORD *)v300 + 14) = v390;
            v300[120] = v405;
          }
          v300[121] = v301[121];
          v298 = v396;
        }
        else
        {
          v312 = *(_OWORD *)v301;
          v313 = *((_OWORD *)v301 + 1);
          v314 = *((_OWORD *)v301 + 3);
          *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
          *((_OWORD *)v300 + 3) = v314;
          *(_OWORD *)v300 = v312;
          *((_OWORD *)v300 + 1) = v313;
          v315 = *((_OWORD *)v301 + 4);
          v316 = *((_OWORD *)v301 + 5);
          v317 = *((_OWORD *)v301 + 6);
          *(_OWORD *)(v300 + 106) = *(_OWORD *)(v301 + 106);
          *((_OWORD *)v300 + 5) = v316;
          *((_OWORD *)v300 + 6) = v317;
          *((_OWORD *)v300 + 4) = v315;
        }
        *((_BYTE *)a1 + v298[6]) = *((_BYTE *)a2 + v298[6]);
        *((_BYTE *)a1 + v298[7]) = *((_BYTE *)a2 + v298[7]);
        *((_BYTE *)a1 + v298[8]) = *((_BYTE *)a2 + v298[8]);
        *((_BYTE *)a1 + v298[9]) = *((_BYTE *)a2 + v298[9]);
        *((_BYTE *)a1 + v298[10]) = *((_BYTE *)a2 + v298[10]);
        v323 = v298[11];
        v324 = *(void **)((char *)a2 + v323);
        *(void **)((char *)a1 + v323) = v324;
        v325 = v324;
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        v80 = *a2;
        *a1 = *a2;
        v81 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v82 = (void **)((char *)a1 + v81);
        v83 = (void **)((char *)a2 + v81);
        v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
        v87 = v80;
        if (v86(v83, 1, v84))
        {
          v88 = sub_10002A750(&qword_100644980);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v83, v84))
          {
            case 1u:
              v151 = *v83;
              *v82 = *v83;
              v152 = v151;
              v153 = v82;
              v154 = v84;
              v155 = 1;
              goto LABEL_180;
            case 2u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v82, v83, v354);
              v153 = v82;
              v154 = v84;
              v155 = 2;
              goto LABEL_180;
            case 3u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v82, v83, v355);
              v153 = v82;
              v154 = v84;
              v155 = 3;
              goto LABEL_180;
            case 4u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v82, v83, v356);
              v153 = v82;
              v154 = v84;
              v155 = 4;
              goto LABEL_180;
            case 5u:
              v357 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v82, v83, v357);
              v153 = v82;
              v154 = v84;
              v155 = 5;
              goto LABEL_180;
            case 6u:
              v358 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v82, v83, v358);
              v153 = v82;
              v154 = v84;
              v155 = 6;
              goto LABEL_180;
            case 8u:
              v359 = *v83;
              *v82 = *v83;
              v360 = v359;
              v153 = v82;
              v154 = v84;
              v155 = 8;
              goto LABEL_180;
            case 9u:
              v361 = *v83;
              *v82 = *v83;
              v362 = v361;
              v153 = v82;
              v154 = v84;
              v155 = 9;
LABEL_180:
              swift_storeEnumTagMultiPayload(v153, v154, v155);
              break;
            default:
              memcpy(v82, v83, *(_QWORD *)(v85 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        v89 = *a2;
        *a1 = *a2;
        v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v91 = (void **)((char *)a1 + v90);
        v92 = (void **)((char *)a2 + v90);
        v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v94 = *(_QWORD *)(v93 - 8);
        v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
        v96 = v89;
        if (v95(v92, 1, v93))
        {
          v97 = sub_10002A750(&qword_100644980);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v92, v93))
          {
            case 1u:
              v156 = *v92;
              *v91 = *v92;
              v157 = v156;
              v158 = v91;
              v159 = v93;
              v160 = 1;
              goto LABEL_191;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v91, v92, v363);
              v158 = v91;
              v159 = v93;
              v160 = 2;
              goto LABEL_191;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v91, v92, v364);
              v158 = v91;
              v159 = v93;
              v160 = 3;
              goto LABEL_191;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v91, v92, v365);
              v158 = v91;
              v159 = v93;
              v160 = 4;
              goto LABEL_191;
            case 5u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v91, v92, v366);
              v158 = v91;
              v159 = v93;
              v160 = 5;
              goto LABEL_191;
            case 6u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v91, v92, v367);
              v158 = v91;
              v159 = v93;
              v160 = 6;
              goto LABEL_191;
            case 8u:
              v368 = *v92;
              *v91 = *v92;
              v369 = v368;
              v158 = v91;
              v159 = v93;
              v160 = 8;
              goto LABEL_191;
            case 9u:
              v370 = *v92;
              *v91 = *v92;
              v371 = v370;
              v158 = v91;
              v159 = v93;
              v160 = 9;
LABEL_191:
              swift_storeEnumTagMultiPayload(v158, v159, v160);
              break;
            default:
              memcpy(v91, v92, *(_QWORD *)(v94 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        v98 = *a2;
        *a1 = *a2;
        v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v100 = (void **)((char *)a1 + v99);
        v101 = (void **)((char *)a2 + v99);
        v102 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v103 = *(_QWORD *)(v102 - 8);
        v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48);
        v105 = v98;
        if (v104(v101, 1, v102))
        {
          v106 = sub_10002A750(&qword_100644980);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v101, v102))
          {
            case 1u:
              v161 = *v101;
              *v100 = *v101;
              v162 = v161;
              v163 = v100;
              v164 = v102;
              v165 = 1;
              goto LABEL_202;
            case 2u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v100, v101, v372);
              v163 = v100;
              v164 = v102;
              v165 = 2;
              goto LABEL_202;
            case 3u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v100, v101, v373);
              v163 = v100;
              v164 = v102;
              v165 = 3;
              goto LABEL_202;
            case 4u:
              v374 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v100, v101, v374);
              v163 = v100;
              v164 = v102;
              v165 = 4;
              goto LABEL_202;
            case 5u:
              v375 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v100, v101, v375);
              v163 = v100;
              v164 = v102;
              v165 = 5;
              goto LABEL_202;
            case 6u:
              v376 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v100, v101, v376);
              v163 = v100;
              v164 = v102;
              v165 = 6;
              goto LABEL_202;
            case 8u:
              v377 = *v101;
              *v100 = *v101;
              v378 = v377;
              v163 = v100;
              v164 = v102;
              v165 = 8;
              goto LABEL_202;
            case 9u:
              v379 = *v101;
              *v100 = *v101;
              v380 = v379;
              v163 = v100;
              v164 = v102;
              v165 = 9;
LABEL_202:
              swift_storeEnumTagMultiPayload(v163, v164, v165);
              break;
            default:
              memcpy(v100, v101, *(_QWORD *)(v103 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v107 = a2[2];
        a1[2] = v107;
        v108 = v107;
        swift_storeEnumTagMultiPayload(a1, v6, 5);
        break;
      case 6u:
        v144 = *a2;
        *a1 = *a2;
        v145 = v144;
        swift_storeEnumTagMultiPayload(a1, v6, 6);
        break;
      case 7u:
        v109 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
        {
          v111 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v166 = *a2;
          *a1 = *a2;
          v167 = *(int *)(v109 + 20);
          v168 = (char *)a1 + v167;
          v169 = (char *)a2 + v167;
          v170 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v170 - 8) + 16);
          v172 = swift_bridgeObjectRetain(v166);
          v171(v168, v169, v170, v172);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
        }
        v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v174 = (void **)((char *)a1 + v173);
        v175 = (void **)((char *)a2 + v173);
        if (v175[1])
        {
          *v174 = *v175;
          v176 = v175[1];
          v174[1] = v176;
          v177 = (void *)v175[2];
          v174[2] = v177;
          swift_bridgeObjectRetain(v176);
          v178 = v177;
        }
        else
        {
          v179 = *(_OWORD *)v175;
          v174[2] = v175[2];
          *(_OWORD *)v174 = v179;
        }
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v146 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v147 = *(_QWORD *)(v146 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v147 + 48))(a2, 1, v146))
        {
          v148 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          v180 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(a1, a2, v180);
          *((_BYTE *)a1 + *(int *)(v146 + 20)) = *((_BYTE *)a2 + *(int *)(v146 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v147 + 56))(a1, 0, 1, v146);
        }
        v181 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v181 + 20)) = *(void **)((char *)a2 + *(int *)(v181 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v112 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v17 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
  return a1;
}

_QWORD *sub_100192888(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 2u:
            v9 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
            v10 = a1;
            v11 = v8;
            v12 = 2;
            goto LABEL_35;
          case 3u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
            v10 = a1;
            v11 = v8;
            v12 = 3;
            goto LABEL_35;
          case 4u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
            v10 = a1;
            v11 = v8;
            v12 = 4;
            goto LABEL_35;
          case 5u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v10 = a1;
            v11 = v8;
            v12 = 5;
            goto LABEL_35;
          case 6u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v10 = a1;
            v11 = v8;
            v12 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v71 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v72 = v71[5];
        v73 = (_OWORD *)((char *)a1 + v72);
        v74 = (_OWORD *)((char *)a2 + v72);
        v75 = v74[3];
        v73[2] = v74[2];
        v73[3] = v75;
        v76 = v74[1];
        *v73 = *v74;
        v73[1] = v76;
        *(_OWORD *)((char *)v73 + 106) = *(_OWORD *)((char *)v74 + 106);
        v77 = v74[6];
        v78 = v74[4];
        v73[5] = v74[5];
        v73[6] = v77;
        v73[4] = v78;
        *((_BYTE *)a1 + v71[6]) = *((_BYTE *)a2 + v71[6]);
        *((_BYTE *)a1 + v71[7]) = *((_BYTE *)a2 + v71[7]);
        *((_BYTE *)a1 + v71[8]) = *((_BYTE *)a2 + v71[8]);
        *((_BYTE *)a1 + v71[9]) = *((_BYTE *)a2 + v71[9]);
        *((_BYTE *)a1 + v71[10]) = *((_BYTE *)a2 + v71[10]);
        *(_QWORD *)((char *)a1 + v71[11]) = *(_QWORD *)((char *)a2 + v71[11]);
        v46 = a1;
        v47 = v6;
        v48 = 0;
        goto LABEL_67;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 2u:
            v14 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
            v15 = a1;
            v16 = v13;
            v17 = 2;
            goto LABEL_42;
          case 3u:
            v79 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(a1, a2, v79);
            v15 = a1;
            v16 = v13;
            v17 = 3;
            goto LABEL_42;
          case 4u:
            v80 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
            v15 = a1;
            v16 = v13;
            v17 = 4;
            goto LABEL_42;
          case 5u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v15 = a1;
            v16 = v13;
            v17 = 5;
            goto LABEL_42;
          case 6u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v15 = a1;
            v16 = v13;
            v17 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v15, v16, v17);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v83 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v84 = v83[5];
        v85 = (_OWORD *)((char *)a1 + v84);
        v86 = (_OWORD *)((char *)a2 + v84);
        v87 = v86[3];
        v85[2] = v86[2];
        v85[3] = v87;
        v88 = v86[1];
        *v85 = *v86;
        v85[1] = v88;
        *(_OWORD *)((char *)v85 + 106) = *(_OWORD *)((char *)v86 + 106);
        v89 = v86[6];
        v90 = v86[4];
        v85[5] = v86[5];
        v85[6] = v89;
        v85[4] = v90;
        *((_BYTE *)a1 + v83[6]) = *((_BYTE *)a2 + v83[6]);
        *((_BYTE *)a1 + v83[7]) = *((_BYTE *)a2 + v83[7]);
        *((_BYTE *)a1 + v83[8]) = *((_BYTE *)a2 + v83[8]);
        *((_BYTE *)a1 + v83[9]) = *((_BYTE *)a2 + v83[9]);
        *((_BYTE *)a1 + v83[10]) = *((_BYTE *)a2 + v83[10]);
        *(_QWORD *)((char *)a1 + v83[11]) = *(_QWORD *)((char *)a2 + v83[11]);
        v46 = a1;
        v47 = v6;
        v48 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          v23 = sub_10002A750(&qword_100644980);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v20, v21))
          {
            case 2u:
              v49 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v19, v20, v49);
              v50 = v19;
              v51 = v21;
              v52 = 2;
              goto LABEL_49;
            case 3u:
              v91 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v19, v20, v91);
              v50 = v19;
              v51 = v21;
              v52 = 3;
              goto LABEL_49;
            case 4u:
              v92 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v19, v20, v92);
              v50 = v19;
              v51 = v21;
              v52 = 4;
              goto LABEL_49;
            case 5u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v19, v20, v93);
              v50 = v19;
              v51 = v21;
              v52 = 5;
              goto LABEL_49;
            case 6u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v19, v20, v94);
              v50 = v19;
              v51 = v21;
              v52 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v50, v51, v52);
              break;
            default:
              memcpy(v19, v20, *(_QWORD *)(v22 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        v46 = a1;
        v47 = v6;
        v48 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v26, v27))
          {
            case 2u:
              v53 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v25, v26, v53);
              v54 = v25;
              v55 = v27;
              v56 = 2;
              goto LABEL_57;
            case 3u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v25, v26, v95);
              v54 = v25;
              v55 = v27;
              v56 = 3;
              goto LABEL_57;
            case 4u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v25, v26, v96);
              v54 = v25;
              v55 = v27;
              v56 = 4;
              goto LABEL_57;
            case 5u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v25, v26, v97);
              v54 = v25;
              v55 = v27;
              v56 = 5;
              goto LABEL_57;
            case 6u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v25, v26, v98);
              v54 = v25;
              v55 = v27;
              v56 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v54, v55, v56);
              break;
            default:
              memcpy(v25, v26, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v46 = a1;
        v47 = v6;
        v48 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 2u:
              v57 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v31, v32, v57);
              swift_storeEnumTagMultiPayload(v31, v33, 2);
              break;
            case 3u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v31, v32, v99);
              swift_storeEnumTagMultiPayload(v31, v33, 3);
              break;
            case 4u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v31, v32, v100);
              swift_storeEnumTagMultiPayload(v31, v33, 4);
              break;
            case 5u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v31, v32, v101);
              swift_storeEnumTagMultiPayload(v31, v33, 5);
              break;
            case 6u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v31, v32, v102);
              swift_storeEnumTagMultiPayload(v31, v33, 6);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v46 = a1;
        v47 = v6;
        v48 = 4;
        goto LABEL_67;
      case 7u:
        v36 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(a2, 1, v36))
        {
          v38 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v58 = *(int *)(v36 + 20);
          v59 = (char *)a1 + v58;
          v60 = (char *)a2 + v58;
          v61 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        }
        v62 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_QWORD *)v63 + 2) = *((_QWORD *)v64 + 2);
        v46 = a1;
        v47 = v6;
        v48 = 7;
        goto LABEL_67;
      case 8u:
        v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v65 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(a1, a2, v65);
          *((_BYTE *)a1 + *(int *)(v39 + 20)) = *((_BYTE *)a2 + *(int *)(v39 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        v66 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v66 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v66 + 20));
        v46 = a1;
        v47 = v6;
        v48 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v42 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        v46 = a1;
        v47 = v6;
        v48 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v46, v47, v48);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *sub_100193438(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  _OWORD *v118;
  _OWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  _OWORD *v175;
  _OWORD *v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 2u:
              v12 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
              v13 = a1;
              v14 = v11;
              v15 = 2;
              goto LABEL_57;
            case 3u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(a1, a2, v112);
              v13 = a1;
              v14 = v11;
              v15 = 3;
              goto LABEL_57;
            case 4u:
              v113 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
              v13 = a1;
              v14 = v11;
              v15 = 4;
              goto LABEL_57;
            case 5u:
              v114 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(a1, a2, v114);
              v13 = a1;
              v14 = v11;
              v15 = 5;
              goto LABEL_57;
            case 6u:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(a1, a2, v115);
              v13 = a1;
              v14 = v11;
              v15 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v116 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v117 = v116[5];
          v118 = (_OWORD *)((char *)a1 + v117);
          v119 = (_OWORD *)((char *)a2 + v117);
          v120 = v119[3];
          v118[2] = v119[2];
          v118[3] = v120;
          v121 = v119[1];
          *v118 = *v119;
          v118[1] = v121;
          *(_OWORD *)((char *)v118 + 106) = *(_OWORD *)((char *)v119 + 106);
          v122 = v119[6];
          v123 = v119[4];
          v118[5] = v119[5];
          v118[6] = v122;
          v118[4] = v123;
          *((_BYTE *)a1 + v116[6]) = *((_BYTE *)a2 + v116[6]);
          *((_BYTE *)a1 + v116[7]) = *((_BYTE *)a2 + v116[7]);
          *((_BYTE *)a1 + v116[8]) = *((_BYTE *)a2 + v116[8]);
          *((_BYTE *)a1 + v116[9]) = *((_BYTE *)a2 + v116[9]);
          *((_BYTE *)a1 + v116[10]) = *((_BYTE *)a2 + v116[10]);
          *(_QWORD *)((char *)a1 + v116[11]) = *(_QWORD *)((char *)a2 + v116[11]);
          v55 = a1;
          v56 = v6;
          v57 = 0;
          goto LABEL_114;
        case 1u:
          v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v22))
          {
            case 2u:
              v23 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
              v24 = a1;
              v25 = v22;
              v26 = 2;
              goto LABEL_64;
            case 3u:
              v124 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(a1, a2, v124);
              v24 = a1;
              v25 = v22;
              v26 = 3;
              goto LABEL_64;
            case 4u:
              v125 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(a1, a2, v125);
              v24 = a1;
              v25 = v22;
              v26 = 4;
              goto LABEL_64;
            case 5u:
              v126 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(a1, a2, v126);
              v24 = a1;
              v25 = v22;
              v26 = 5;
              goto LABEL_64;
            case 6u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
              v24 = a1;
              v25 = v22;
              v26 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v24, v25, v26);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
              break;
          }
          v128 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v129 = v128[5];
          v130 = (_OWORD *)((char *)a1 + v129);
          v131 = (_OWORD *)((char *)a2 + v129);
          v132 = v131[3];
          v130[2] = v131[2];
          v130[3] = v132;
          v133 = v131[1];
          *v130 = *v131;
          v130[1] = v133;
          *(_OWORD *)((char *)v130 + 106) = *(_OWORD *)((char *)v131 + 106);
          v134 = v131[6];
          v135 = v131[4];
          v130[5] = v131[5];
          v130[6] = v134;
          v130[4] = v135;
          *((_BYTE *)a1 + v128[6]) = *((_BYTE *)a2 + v128[6]);
          *((_BYTE *)a1 + v128[7]) = *((_BYTE *)a2 + v128[7]);
          *((_BYTE *)a1 + v128[8]) = *((_BYTE *)a2 + v128[8]);
          *((_BYTE *)a1 + v128[9]) = *((_BYTE *)a2 + v128[9]);
          *((_BYTE *)a1 + v128[10]) = *((_BYTE *)a2 + v128[10]);
          *(_QWORD *)((char *)a1 + v128[11]) = *(_QWORD *)((char *)a2 + v128[11]);
          v55 = a1;
          v56 = v6;
          v57 = 1;
          goto LABEL_114;
        case 2u:
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          {
            v32 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 2u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v28, v29, v91);
                v92 = v28;
                v93 = v30;
                v94 = 2;
                goto LABEL_95;
              case 3u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v28, v29, v181);
                v92 = v28;
                v93 = v30;
                v94 = 3;
                goto LABEL_95;
              case 4u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v28, v29, v182);
                v92 = v28;
                v93 = v30;
                v94 = 4;
                goto LABEL_95;
              case 5u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v28, v29, v183);
                v92 = v28;
                v93 = v30;
                v94 = 5;
                goto LABEL_95;
              case 6u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v28, v29, v184);
                v92 = v28;
                v93 = v30;
                v94 = 6;
LABEL_95:
                swift_storeEnumTagMultiPayload(v92, v93, v94);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v55 = a1;
          v56 = v6;
          v57 = 2;
          goto LABEL_114;
        case 3u:
          *a1 = *a2;
          v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v35, v36))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v34, v35, v95);
                v96 = v34;
                v97 = v36;
                v98 = 2;
                goto LABEL_103;
              case 3u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v34, v35, v185);
                v96 = v34;
                v97 = v36;
                v98 = 3;
                goto LABEL_103;
              case 4u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v34, v35, v186);
                v96 = v34;
                v97 = v36;
                v98 = 4;
                goto LABEL_103;
              case 5u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v34, v35, v187);
                v96 = v34;
                v97 = v36;
                v98 = 5;
                goto LABEL_103;
              case 6u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v34, v35, v188);
                v96 = v34;
                v97 = v36;
                v98 = 6;
LABEL_103:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v34, v35, *(_QWORD *)(v37 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          v55 = a1;
          v56 = v6;
          v57 = 3;
          goto LABEL_114;
        case 4u:
          *a1 = *a2;
          v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          {
            v44 = sub_10002A750(&qword_100644980);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v41, v42))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v40, v41, v99);
                v100 = v40;
                v101 = v42;
                v102 = 2;
                goto LABEL_111;
              case 3u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v40, v41, v189);
                v100 = v40;
                v101 = v42;
                v102 = 3;
                goto LABEL_111;
              case 4u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v40, v41, v190);
                v100 = v40;
                v101 = v42;
                v102 = 4;
                goto LABEL_111;
              case 5u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v40, v41, v191);
                v100 = v40;
                v101 = v42;
                v102 = 5;
                goto LABEL_111;
              case 6u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v40, v41, v192);
                v100 = v40;
                v101 = v42;
                v102 = 6;
LABEL_111:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v40, v41, *(_QWORD *)(v43 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          }
          v55 = a1;
          v56 = v6;
          v57 = 4;
          goto LABEL_114;
        case 7u:
          v45 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            v47 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v103 = *(int *)(v45 + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
          v55 = a1;
          v56 = v6;
          v57 = 7;
          goto LABEL_114;
        case 8u:
          v48 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v49 = *(_QWORD *)(v48 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48))(a2, 1, v48))
          {
            v50 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
            *((_BYTE *)a1 + *(int *)(v48 + 20)) = *((_BYTE *)a2 + *(int *)(v48 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(a1, 0, 1, v48);
          }
          v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
          v55 = a1;
          v56 = v6;
          v57 = 8;
          goto LABEL_114;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v51 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          v55 = a1;
          v56 = v6;
          v57 = 9;
LABEL_114:
          swift_storeEnumTagMultiPayload(v55, v56, v57);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      return a1;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v16);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v17))
        {
          case 2u:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
            v19 = a1;
            v20 = v17;
            v21 = 2;
            goto LABEL_81;
          case 3u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
            v19 = a1;
            v20 = v17;
            v21 = 3;
            goto LABEL_81;
          case 4u:
            v158 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
            v19 = a1;
            v20 = v17;
            v21 = 4;
            goto LABEL_81;
          case 5u:
            v159 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
            v19 = a1;
            v20 = v17;
            v21 = 5;
            goto LABEL_81;
          case 6u:
            v160 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
            v19 = a1;
            v20 = v17;
            v21 = 6;
LABEL_81:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            break;
        }
        v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v162 = v161[5];
        v163 = (_OWORD *)((char *)a1 + v162);
        v164 = (_OWORD *)((char *)a2 + v162);
        v165 = v164[3];
        v163[2] = v164[2];
        v163[3] = v165;
        v166 = v164[1];
        *v163 = *v164;
        v163[1] = v166;
        *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
        v167 = v164[6];
        v168 = v164[4];
        v163[5] = v164[5];
        v163[6] = v167;
        v163[4] = v168;
        *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
        *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
        *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
        *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
        *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
        *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v58 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v58))
        {
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
            v60 = a1;
            v61 = v58;
            v62 = 2;
            goto LABEL_88;
          case 3u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
            v60 = a1;
            v61 = v58;
            v62 = 3;
            goto LABEL_88;
          case 4u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
            v60 = a1;
            v61 = v58;
            v62 = 4;
            goto LABEL_88;
          case 5u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
            v60 = a1;
            v61 = v58;
            v62 = 5;
            goto LABEL_88;
          case 6u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
            v60 = a1;
            v61 = v58;
            v62 = 6;
LABEL_88:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
            break;
        }
        v173 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v174 = v173[5];
        v175 = (_OWORD *)((char *)a1 + v174);
        v176 = (_OWORD *)((char *)a2 + v174);
        v177 = v176[3];
        v175[2] = v176[2];
        v175[3] = v177;
        v178 = v176[1];
        *v175 = *v176;
        v175[1] = v178;
        *(_OWORD *)((char *)v175 + 106) = *(_OWORD *)((char *)v176 + 106);
        v179 = v176[6];
        v180 = v176[4];
        v175[5] = v176[5];
        v175[6] = v179;
        v175[4] = v180;
        *((_BYTE *)a1 + v173[6]) = *((_BYTE *)a2 + v173[6]);
        *((_BYTE *)a1 + v173[7]) = *((_BYTE *)a2 + v173[7]);
        *((_BYTE *)a1 + v173[8]) = *((_BYTE *)a2 + v173[8]);
        *((_BYTE *)a1 + v173[9]) = *((_BYTE *)a2 + v173[9]);
        *((_BYTE *)a1 + v173[10]) = *((_BYTE *)a2 + v173[10]);
        *(_QWORD *)((char *)a1 + v173[11]) = *(_QWORD *)((char *)a2 + v173[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        *a1 = *a2;
        v63 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_10002A750(&qword_100644980);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v65, v66))
          {
            case 2u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v64, v65, v136);
              v137 = v64;
              v138 = v66;
              v139 = 2;
              goto LABEL_122;
            case 3u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v64, v65, v194);
              v137 = v64;
              v138 = v66;
              v139 = 3;
              goto LABEL_122;
            case 4u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v64, v65, v195);
              v137 = v64;
              v138 = v66;
              v139 = 4;
              goto LABEL_122;
            case 5u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v64, v65, v196);
              v137 = v64;
              v138 = v66;
              v139 = 5;
              goto LABEL_122;
            case 6u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v64, v65, v197);
              v137 = v64;
              v138 = v66;
              v139 = 6;
LABEL_122:
              swift_storeEnumTagMultiPayload(v137, v138, v139);
              break;
            default:
              memcpy(v64, v65, *(_QWORD *)(v67 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        *a1 = *a2;
        v69 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_10002A750(&qword_100644980);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v71, v72))
          {
            case 2u:
              v140 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v70, v71, v140);
              v141 = v70;
              v142 = v72;
              v143 = 2;
              goto LABEL_130;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v70, v71, v198);
              v141 = v70;
              v142 = v72;
              v143 = 3;
              goto LABEL_130;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v70, v71, v199);
              v141 = v70;
              v142 = v72;
              v143 = 4;
              goto LABEL_130;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v70, v71, v200);
              v141 = v70;
              v142 = v72;
              v143 = 5;
              goto LABEL_130;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v70, v71, v201);
              v141 = v70;
              v142 = v72;
              v143 = 6;
LABEL_130:
              swift_storeEnumTagMultiPayload(v141, v142, v143);
              break;
            default:
              memcpy(v70, v71, *(_QWORD *)(v73 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        *a1 = *a2;
        v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          v80 = sub_10002A750(&qword_100644980);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v77, v78))
          {
            case 2u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v76, v77, v144);
              v145 = v76;
              v146 = v78;
              v147 = 2;
              goto LABEL_138;
            case 3u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v76, v77, v202);
              v145 = v76;
              v146 = v78;
              v147 = 3;
              goto LABEL_138;
            case 4u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v76, v77, v203);
              v145 = v76;
              v146 = v78;
              v147 = 4;
              goto LABEL_138;
            case 5u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v76, v77, v204);
              v145 = v76;
              v146 = v78;
              v147 = 5;
              goto LABEL_138;
            case 6u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v76, v77, v205);
              v145 = v76;
              v146 = v78;
              v147 = 6;
LABEL_138:
              swift_storeEnumTagMultiPayload(v145, v146, v147);
              break;
            default:
              memcpy(v76, v77, *(_QWORD *)(v79 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 7u:
        v81 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
        {
          v83 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v148 = *(int *)(v81 + 20);
          v149 = (char *)a1 + v148;
          v150 = (char *)a2 + v148;
          v151 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
        }
        v152 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v153 = (char *)a1 + v152;
        v154 = (char *)a2 + v152;
        *(_OWORD *)v153 = *(_OWORD *)v154;
        *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v84 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(a2, 1, v84))
        {
          v86 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v155 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
          *((_BYTE *)a1 + *(int *)(v84 + 20)) = *((_BYTE *)a2 + *(int *)(v84 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(a1, 0, 1, v84);
        }
        v156 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v156 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v156 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v87 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        v90 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v16 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
  return a1;
}

uint64_t sub_100194B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100194B44);
}

uint64_t sub_100194B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_100194B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100194B9C);
}

uint64_t sub_100194B9C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100194BF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_100194C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_100194C68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

uint64_t sub_100194CBC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t *, uint64_t, __n128);
  id v14;
  __n128 v15;
  uint64_t *v16;
  int *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void **, uint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  void *v45;
  id v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void **v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(void **, uint64_t, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void **v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  size_t v84;
  void *v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    v95 = *((_OWORD *)a2 + 1);
    v96 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = v95;
    *(_OWORD *)(a1 + 32) = v96;
    v8 = (void *)a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    v97 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 64) = v97;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v9 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v9;
    v98 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 104) = v98;
    v10 = a2 + 15;
    v11 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 144) = v11;
    v12 = v11;
    v13 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v11 - 8);
    swift_unknownObjectRetain(v5);
    swift_unknownObjectRetain(v95);
    swift_unknownObjectRetain(v96);
    swift_retain();
    v14 = v8;
    swift_unknownObjectRetain(v97);
    swift_retain();
    swift_retain();
    v15 = swift_unknownObjectRetain(v98);
    v16 = v10;
    v17 = a3;
    v13(a1 + 120, v16, v12, v15);
    v18 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 184) = v18;
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 160, (uint64_t)(a2 + 20));
    v19 = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 200) = v19;
    v20 = a2[30];
    *(_QWORD *)(a1 + 240) = v20;
    v21 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v20 - 8);
    v22 = swift_unknownObjectRetain(v19);
    v21(a1 + 216, (uint64_t)(a2 + 27), v20, v22);
    v23 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 248) = v23;
    v24 = a2[36];
    *(_QWORD *)(a1 + 288) = v24;
    v25 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v24 - 8);
    v26 = swift_unknownObjectRetain(v23);
    v25(a1 + 264, (uint64_t)(a2 + 33), v24, v26);
    v27 = a2[37];
    v28 = a2[38];
    *(_QWORD *)(a1 + 296) = v27;
    *(_QWORD *)(a1 + 304) = v28;
    v30 = a2[39];
    v29 = a2[40];
    *(_QWORD *)(a1 + 312) = v30;
    *(_QWORD *)(a1 + 320) = v29;
    v31 = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 352) = v31;
    v32 = v31;
    v33 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v31 - 8);
    swift_unknownObjectRetain(v27);
    v34 = swift_unknownObjectRetain(v30);
    v33(a1 + 328, (uint64_t)(a2 + 41), v32, v34);
    v99 = *((_OWORD *)a2 + 23);
    *(_OWORD *)(a1 + 368) = v99;
    v35 = a3[22];
    v36 = (void **)(a1 + v35);
    v37 = (void **)((char *)a2 + v35);
    v38 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(v39 + 48);
    v41 = swift_unknownObjectRetain(v99);
    if (v40(v37, 1, v38, v41))
    {
      v42 = sub_10002A750((uint64_t *)&unk_1006463C0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_39:
      v90 = v17[23];
      v91 = *(_OWORD *)((char *)a2 + v90 + 24);
      *(_OWORD *)(a1 + v90 + 24) = v91;
      (**(void (***)(void))(v91 - 8))();
      v92 = v17[24];
      v93 = *(_OWORD *)((char *)a2 + v92 + 24);
      *(_OWORD *)(a1 + v92 + 24) = v93;
      (**(void (***)(void))(v93 - 8))();
      *(_BYTE *)(a1 + v17[25]) = *((_BYTE *)a2 + v17[25]);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v37, v38);
    if (EnumCaseMultiPayload == 2)
    {
      v50 = *v37;
      *v36 = *v37;
      v51 = v50;
      v52 = v36;
      v53 = v38;
      v54 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v100 = v39;
      v55 = *v37;
      *v36 = *v37;
      v56 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v57 = (void **)((char *)v36 + v56);
      v58 = (void **)((char *)v37 + v56);
      v59 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48);
      v62 = v55;
      if (v61(v58, 1, v59))
      {
        v63 = sub_10002A750(&qword_100644980);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        v17 = a3;
        v39 = v100;
      }
      else
      {
        v64 = v60;
        switch(swift_getEnumCaseMultiPayload(v58, v59))
        {
          case 1u:
            v65 = *v58;
            v66 = v57;
            *v57 = *v58;
            v67 = v65;
            v68 = v57;
            v69 = v59;
            v70 = 1;
            goto LABEL_34;
          case 2u:
            v80 = type metadata accessor for Date(0);
            v66 = v57;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v57, v58, v80);
            v68 = v57;
            v69 = v59;
            v70 = 2;
            goto LABEL_34;
          case 3u:
            v81 = type metadata accessor for Date(0);
            v66 = v57;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v57, v58, v81);
            v68 = v57;
            v69 = v59;
            v70 = 3;
            goto LABEL_34;
          case 4u:
            v82 = type metadata accessor for Date(0);
            v66 = v57;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v57, v58, v82);
            v68 = v57;
            v69 = v59;
            v70 = 4;
            goto LABEL_34;
          case 5u:
            v89 = type metadata accessor for Date(0);
            v66 = v57;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v57, v58, v89);
            v68 = v57;
            v69 = v59;
            v70 = 5;
            goto LABEL_34;
          case 6u:
            v83 = type metadata accessor for Date(0);
            v66 = v57;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v57, v58, v83);
            v68 = v57;
            v69 = v59;
            v70 = 6;
            goto LABEL_34;
          case 8u:
            v85 = *v58;
            v66 = v57;
            *v57 = *v58;
            v86 = v85;
            v68 = v57;
            v69 = v59;
            v70 = 8;
            goto LABEL_34;
          case 9u:
            v87 = *v58;
            v66 = v57;
            *v57 = *v58;
            v88 = v87;
            v68 = v57;
            v69 = v59;
            v70 = 9;
LABEL_34:
            swift_storeEnumTagMultiPayload(v68, v69, v70);
            break;
          default:
            v84 = *(_QWORD *)(v60 + 64);
            v66 = v57;
            memcpy(v57, v58, v84);
            break;
        }
        v17 = a3;
        v39 = v100;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v59);
      }
      v52 = v36;
      v53 = v38;
      v54 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v36, v37, *(_QWORD *)(v39 + 64));
LABEL_38:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        goto LABEL_39;
      }
      v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v37, v44))
      {
        case 1u:
          v45 = *v37;
          *v36 = *v37;
          v46 = v45;
          v47 = v36;
          v48 = v44;
          v49 = 1;
          goto LABEL_24;
        case 2u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v36, v37, v71);
          v47 = v36;
          v48 = v44;
          v49 = 2;
          goto LABEL_24;
        case 3u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v36, v37, v72);
          v47 = v36;
          v48 = v44;
          v49 = 3;
          goto LABEL_24;
        case 4u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v36, v37, v73);
          v47 = v36;
          v48 = v44;
          v49 = 4;
          goto LABEL_24;
        case 5u:
          v74 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v36, v37, v74);
          v47 = v36;
          v48 = v44;
          v49 = 5;
          goto LABEL_24;
        case 6u:
          v75 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v36, v37, v75);
          v47 = v36;
          v48 = v44;
          v49 = 6;
          goto LABEL_24;
        case 8u:
          v76 = *v37;
          *v36 = *v37;
          v77 = v76;
          v47 = v36;
          v48 = v44;
          v49 = 8;
          goto LABEL_24;
        case 9u:
          v78 = *v37;
          *v36 = *v37;
          v79 = v78;
          v47 = v36;
          v48 = v44;
          v49 = 9;
LABEL_24:
          swift_storeEnumTagMultiPayload(v47, v48, v49);
          break;
        default:
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          break;
      }
      v52 = v36;
      v53 = v38;
      v54 = 0;
    }
    swift_storeEnumTagMultiPayload(v52, v53, v54);
    goto LABEL_38;
  }
  *(_QWORD *)a1 = v5;
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}

uint64_t sub_100195400(uint64_t a1, int *a2)
{
  id *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_unknownObjectRelease(*(_QWORD *)a1);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release();

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 64));
  swift_release();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 104));
  sub_100027F10((_QWORD *)(a1 + 120));
  sub_100027F10((_QWORD *)(a1 + 160));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 200));
  sub_100027F10((_QWORD *)(a1 + 216));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 248));
  sub_100027F10((_QWORD *)(a1 + 264));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 296));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 312));
  sub_100027F10((_QWORD *)(a1 + 328));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 368));
  v4 = (id *)(a1 + a2[22]);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    switch(EnumCaseMultiPayload)
    {
      case 2:
LABEL_10:

        break;
      case 1:

        v4 = (id *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload(v4, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_10;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_9:
              v10 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v4, v10);
              break;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 0:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v4, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_10;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_9;
          default:
            goto LABEL_2;
        }
    }
  }
LABEL_2:
  sub_100027F10((_QWORD *)(a1 + a2[23]));
  return sub_100027F10((_QWORD *)(a1 + a2[24]));
}

uint64_t sub_1001955FC(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  id v13;
  __n128 v14;
  uint64_t v15;
  int *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v21;
  __int128 v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  void **v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(void **, uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  void *v44;
  id v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void **v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(void **, uint64_t, uint64_t);
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void **v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v5 = *a2;
  v94 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v94;
  v95 = a2[2];
  *(_OWORD *)(a1 + 32) = v95;
  v6 = (void *)*((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = v6;
  v96 = a2[4];
  *(_OWORD *)(a1 + 64) = v96;
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v7 = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = v7;
  v97 = *(__int128 *)((char *)a2 + 104);
  *(_OWORD *)(a1 + 104) = v97;
  v8 = a1 + 120;
  v9 = (uint64_t)a2 + 120;
  v10 = a2[9];
  *(_OWORD *)(a1 + 144) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v10 - 8);
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRetain(v94);
  swift_unknownObjectRetain(v95);
  swift_retain();
  v13 = v6;
  swift_unknownObjectRetain(v96);
  swift_retain();
  swift_retain();
  v14 = swift_unknownObjectRetain(v97);
  v15 = v9;
  v16 = a3;
  v12(v8, v15, v11, v14);
  v17 = *(__int128 *)((char *)a2 + 184);
  *(_OWORD *)(a1 + 184) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 160, (uint64_t)(a2 + 10));
  v18 = *(__int128 *)((char *)a2 + 200);
  *(_OWORD *)(a1 + 200) = v18;
  v19 = *((_QWORD *)a2 + 30);
  *(_QWORD *)(a1 + 240) = v19;
  v20 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v19 - 8);
  v21 = swift_unknownObjectRetain(v18);
  v20(a1 + 216, (uint64_t)a2 + 216, v19, v21);
  v22 = *(__int128 *)((char *)a2 + 248);
  *(_OWORD *)(a1 + 248) = v22;
  v23 = *((_QWORD *)a2 + 36);
  *(_QWORD *)(a1 + 288) = v23;
  v24 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v23 - 8);
  v25 = swift_unknownObjectRetain(v22);
  v24(a1 + 264, (uint64_t)a2 + 264, v23, v25);
  v26 = *((_QWORD *)a2 + 37);
  v27 = *((_QWORD *)a2 + 38);
  *(_QWORD *)(a1 + 296) = v26;
  *(_QWORD *)(a1 + 304) = v27;
  v29 = *((_QWORD *)a2 + 39);
  v28 = *((_QWORD *)a2 + 40);
  *(_QWORD *)(a1 + 312) = v29;
  *(_QWORD *)(a1 + 320) = v28;
  v30 = a2[22];
  *(_OWORD *)(a1 + 352) = v30;
  v31 = v30;
  v32 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v30 - 8);
  swift_unknownObjectRetain(v26);
  v33 = swift_unknownObjectRetain(v29);
  v32(a1 + 328, (uint64_t)a2 + 328, v31, v33);
  v98 = a2[23];
  *(_OWORD *)(a1 + 368) = v98;
  v34 = a3[22];
  v35 = (void **)(a1 + v34);
  v36 = (void **)((char *)a2 + v34);
  v37 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(v38 + 48);
  v40 = swift_unknownObjectRetain(v98);
  if (!v39(v36, 1, v37, v40))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v37);
    if (EnumCaseMultiPayload == 2)
    {
      v49 = *v36;
      *v35 = *v36;
      v50 = v49;
      v51 = v35;
      v52 = v37;
      v53 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v99 = v38;
      v54 = *v36;
      *v35 = *v36;
      v55 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v56 = (void **)((char *)v35 + v55);
      v57 = (void **)((char *)v36 + v55);
      v58 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v59 = *(_QWORD *)(v58 - 8);
      v60 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v59 + 48);
      v61 = v54;
      if (v60(v57, 1, v58))
      {
        v62 = sub_10002A750(&qword_100644980);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        v16 = a3;
        v38 = v99;
      }
      else
      {
        v63 = v59;
        switch(swift_getEnumCaseMultiPayload(v57, v58))
        {
          case 1u:
            v64 = *v57;
            v65 = v56;
            *v56 = *v57;
            v66 = v64;
            v67 = v56;
            v68 = v58;
            v69 = 1;
            goto LABEL_32;
          case 2u:
            v79 = type metadata accessor for Date(0);
            v65 = v56;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v56, v57, v79);
            v67 = v56;
            v68 = v58;
            v69 = 2;
            goto LABEL_32;
          case 3u:
            v80 = type metadata accessor for Date(0);
            v65 = v56;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v56, v57, v80);
            v67 = v56;
            v68 = v58;
            v69 = 3;
            goto LABEL_32;
          case 4u:
            v81 = type metadata accessor for Date(0);
            v65 = v56;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v56, v57, v81);
            v67 = v56;
            v68 = v58;
            v69 = 4;
            goto LABEL_32;
          case 5u:
            v88 = type metadata accessor for Date(0);
            v65 = v56;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v56, v57, v88);
            v67 = v56;
            v68 = v58;
            v69 = 5;
            goto LABEL_32;
          case 6u:
            v82 = type metadata accessor for Date(0);
            v65 = v56;
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v56, v57, v82);
            v67 = v56;
            v68 = v58;
            v69 = 6;
            goto LABEL_32;
          case 8u:
            v84 = *v57;
            v65 = v56;
            *v56 = *v57;
            v85 = v84;
            v67 = v56;
            v68 = v58;
            v69 = 8;
            goto LABEL_32;
          case 9u:
            v86 = *v57;
            v65 = v56;
            *v56 = *v57;
            v87 = v86;
            v67 = v56;
            v68 = v58;
            v69 = 9;
LABEL_32:
            swift_storeEnumTagMultiPayload(v67, v68, v69);
            break;
          default:
            v83 = *(_QWORD *)(v59 + 64);
            v65 = v56;
            memcpy(v56, v57, v83);
            break;
        }
        v16 = a3;
        v38 = v99;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v58);
      }
      v51 = v35;
      v52 = v37;
      v53 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v35, v36, *(_QWORD *)(v38 + 64));
LABEL_36:
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        goto LABEL_37;
      }
      v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v36, v43))
      {
        case 1u:
          v44 = *v36;
          *v35 = *v36;
          v45 = v44;
          v46 = v35;
          v47 = v43;
          v48 = 1;
          goto LABEL_22;
        case 2u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v35, v36, v70);
          v46 = v35;
          v47 = v43;
          v48 = 2;
          goto LABEL_22;
        case 3u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v35, v36, v71);
          v46 = v35;
          v47 = v43;
          v48 = 3;
          goto LABEL_22;
        case 4u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v35, v36, v72);
          v46 = v35;
          v47 = v43;
          v48 = 4;
          goto LABEL_22;
        case 5u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v35, v36, v73);
          v46 = v35;
          v47 = v43;
          v48 = 5;
          goto LABEL_22;
        case 6u:
          v74 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v35, v36, v74);
          v46 = v35;
          v47 = v43;
          v48 = 6;
          goto LABEL_22;
        case 8u:
          v75 = *v36;
          *v35 = *v36;
          v76 = v75;
          v46 = v35;
          v47 = v43;
          v48 = 8;
          goto LABEL_22;
        case 9u:
          v77 = *v36;
          *v35 = *v36;
          v78 = v77;
          v46 = v35;
          v47 = v43;
          v48 = 9;
LABEL_22:
          swift_storeEnumTagMultiPayload(v46, v47, v48);
          break;
        default:
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          break;
      }
      v51 = v35;
      v52 = v37;
      v53 = 0;
    }
    swift_storeEnumTagMultiPayload(v51, v52, v53);
    goto LABEL_36;
  }
  v41 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_37:
  v89 = v16[23];
  v90 = *(__int128 *)((char *)a2 + v89 + 24);
  *(_OWORD *)(a1 + v89 + 24) = v90;
  (**(void (***)(void))(v90 - 8))();
  v91 = v16[24];
  v92 = *(__int128 *)((char *)a2 + v91 + 24);
  *(_OWORD *)(a1 + v91 + 24) = v92;
  (**(void (***)(void))(v92 - 8))();
  *(_BYTE *)(a1 + v16[25]) = *((_BYTE *)a2 + v16[25]);
  return a1;
}

uint64_t *sub_100195D1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void **, uint64_t, uint64_t);
  int v45;
  int v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  size_t v54;
  int v55;
  uint64_t v56;
  void *v57;
  id v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(void **, uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(void **, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  void *v84;
  id v85;
  void **v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  void **v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  void *v120;
  id v121;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  void *v130;
  id v131;
  void **v132;
  void **__dst;
  void **__dsta;

  v6 = *a2;
  v7 = a2[1];
  v8 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[1] = v7;
  v9 = a2[2];
  v10 = a2[3];
  v11 = a1[2];
  a1[2] = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v11);
  a1[3] = v10;
  v12 = a2[4];
  v13 = a2[5];
  v14 = a1[4];
  a1[4] = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v14);
  a1[5] = v13;
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  v15 = (void *)a2[7];
  v16 = (void *)a1[7];
  a1[7] = (uint64_t)v15;
  v17 = v15;

  v18 = a2[8];
  v19 = a2[9];
  v20 = a1[8];
  a1[8] = v18;
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRelease(v20);
  a1[9] = v19;
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  v21 = a2[13];
  v22 = a2[14];
  v23 = a1[13];
  a1[13] = v21;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRelease(v23);
  a1[14] = v22;
  sub_100043D5C(a1 + 15, a2 + 15);
  sub_100043D5C(a1 + 20, a2 + 20);
  v24 = a2[25];
  v25 = a2[26];
  v26 = a1[25];
  a1[25] = v24;
  swift_unknownObjectRetain(v24);
  swift_unknownObjectRelease(v26);
  a1[26] = v25;
  sub_100043EC4(a1 + 27, a2 + 27);
  v27 = a2[31];
  v28 = a2[32];
  v29 = a1[31];
  a1[31] = v27;
  swift_unknownObjectRetain(v27);
  swift_unknownObjectRelease(v29);
  a1[32] = v28;
  sub_100043EC4(a1 + 33, a2 + 33);
  v30 = a2[37];
  v31 = a2[38];
  v32 = a1[37];
  a1[37] = v30;
  swift_unknownObjectRetain(v30);
  swift_unknownObjectRelease(v32);
  a1[38] = v31;
  v33 = a2[39];
  v34 = a2[40];
  v35 = a1[39];
  a1[39] = v33;
  swift_unknownObjectRetain(v33);
  swift_unknownObjectRelease(v35);
  a1[40] = v34;
  sub_100043D5C(a1 + 41, a2 + 41);
  v36 = a2[46];
  v37 = a2[47];
  v38 = a1[46];
  a1[46] = v36;
  swift_unknownObjectRetain(v36);
  swift_unknownObjectRelease(v38);
  a1[47] = v37;
  v39 = a3[22];
  v40 = (void **)((char *)a1 + v39);
  v41 = (void **)((char *)a2 + v39);
  v42 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v41, v42);
      if (EnumCaseMultiPayload == 2)
      {
        v62 = *v41;
        *v40 = *v41;
        v63 = v62;
        v64 = v40;
        v65 = v42;
        v66 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v67 = *v41;
        *v40 = *v41;
        v68 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v132 = (void **)((char *)v41 + v68);
        __dst = (void **)((char *)v40 + v68);
        v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v70 = *(_QWORD *)(v69 - 8);
        v71 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v70 + 48);
        v72 = v67;
        if (v71(v132, 1, v69))
        {
          v73 = sub_10002A750(&qword_100644980);
          memcpy(__dst, v132, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v132, v69))
          {
            case 1u:
              v84 = *v132;
              *__dst = *v132;
              v85 = v84;
              v86 = __dst;
              v87 = v69;
              v88 = 1;
              goto LABEL_58;
            case 2u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(__dst, v132, v112);
              v86 = __dst;
              v87 = v69;
              v88 = 2;
              goto LABEL_58;
            case 3u:
              v113 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(__dst, v132, v113);
              v86 = __dst;
              v87 = v69;
              v88 = 3;
              goto LABEL_58;
            case 4u:
              v114 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(__dst, v132, v114);
              v86 = __dst;
              v87 = v69;
              v88 = 4;
              goto LABEL_58;
            case 5u:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(__dst, v132, v115);
              v86 = __dst;
              v87 = v69;
              v88 = 5;
              goto LABEL_58;
            case 6u:
              v116 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(__dst, v132, v116);
              v86 = __dst;
              v87 = v69;
              v88 = 6;
              goto LABEL_58;
            case 8u:
              v118 = *v132;
              *__dst = *v132;
              v119 = v118;
              v86 = __dst;
              v87 = v69;
              v88 = 8;
              goto LABEL_58;
            case 9u:
              v120 = *v132;
              *__dst = *v132;
              v121 = v120;
              v86 = __dst;
              v87 = v69;
              v88 = 9;
LABEL_58:
              swift_storeEnumTagMultiPayload(v86, v87, v88);
              v117 = v70;
              break;
            default:
              memcpy(__dst, v132, *(_QWORD *)(v70 + 64));
              v117 = v70;
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dst, 0, 1, v69);
        }
        v64 = v40;
        v65 = v42;
        v66 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v40, v41, *(_QWORD *)(v43 + 64));
LABEL_62:
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          goto LABEL_63;
        }
        v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v41, v48))
        {
          case 1u:
            v49 = *v41;
            *v40 = *v41;
            v50 = v49;
            v51 = v40;
            v52 = v48;
            v53 = 1;
            goto LABEL_38;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v40, v41, v94);
            v51 = v40;
            v52 = v48;
            v53 = 2;
            goto LABEL_38;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v40, v41, v95);
            v51 = v40;
            v52 = v48;
            v53 = 3;
            goto LABEL_38;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v40, v41, v96);
            v51 = v40;
            v52 = v48;
            v53 = 4;
            goto LABEL_38;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v40, v41, v97);
            v51 = v40;
            v52 = v48;
            v53 = 5;
            goto LABEL_38;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v40, v41, v98);
            v51 = v40;
            v52 = v48;
            v53 = 6;
            goto LABEL_38;
          case 8u:
            v99 = *v41;
            *v40 = *v41;
            v100 = v99;
            v51 = v40;
            v52 = v48;
            v53 = 8;
            goto LABEL_38;
          case 9u:
            v101 = *v41;
            *v40 = *v41;
            v102 = v101;
            v51 = v40;
            v52 = v48;
            v53 = 9;
LABEL_38:
            swift_storeEnumTagMultiPayload(v51, v52, v53);
            break;
          default:
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            break;
        }
        v64 = v40;
        v65 = v42;
        v66 = 0;
      }
      swift_storeEnumTagMultiPayload(v64, v65, v66);
      goto LABEL_62;
    }
    goto LABEL_10;
  }
  if (v46)
  {
    sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_10:
    v54 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_11:
    memcpy(v40, v41, v54);
    goto LABEL_63;
  }
  if (a1 == a2)
    goto LABEL_63;
  sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v55 = swift_getEnumCaseMultiPayload(v41, v42);
  if (v55 == 2)
  {
    v74 = *v41;
    *v40 = *v41;
    v75 = v74;
    swift_storeEnumTagMultiPayload(v40, v42, 2);
    goto LABEL_63;
  }
  if (v55 == 1)
  {
    v76 = *v41;
    *v40 = *v41;
    v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    __dsta = (void **)((char *)v40 + v77);
    v78 = (void **)((char *)v41 + v77);
    v79 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v80 + 48);
    v82 = v76;
    if (v81(v78, 1, v79))
    {
      v83 = sub_10002A750(&qword_100644980);
      memcpy(__dsta, v78, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v78, v79))
      {
        case 1u:
          v89 = *v78;
          *__dsta = *v78;
          v90 = v89;
          v91 = __dsta;
          v92 = v79;
          v93 = 1;
          goto LABEL_72;
        case 2u:
          v123 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(__dsta, v78, v123);
          v91 = __dsta;
          v92 = v79;
          v93 = 2;
          goto LABEL_72;
        case 3u:
          v124 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(__dsta, v78, v124);
          v91 = __dsta;
          v92 = v79;
          v93 = 3;
          goto LABEL_72;
        case 4u:
          v125 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(__dsta, v78, v125);
          v91 = __dsta;
          v92 = v79;
          v93 = 4;
          goto LABEL_72;
        case 5u:
          v126 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(__dsta, v78, v126);
          v91 = __dsta;
          v92 = v79;
          v93 = 5;
          goto LABEL_72;
        case 6u:
          v127 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(__dsta, v78, v127);
          v91 = __dsta;
          v92 = v79;
          v93 = 6;
          goto LABEL_72;
        case 8u:
          v128 = *v78;
          *__dsta = *v78;
          v129 = v128;
          v91 = __dsta;
          v92 = v79;
          v93 = 8;
          goto LABEL_72;
        case 9u:
          v130 = *v78;
          *__dsta = *v78;
          v131 = v130;
          v91 = __dsta;
          v92 = v79;
          v93 = 9;
LABEL_72:
          swift_storeEnumTagMultiPayload(v91, v92, v93);
          break;
        default:
          memcpy(__dsta, v78, *(_QWORD *)(v80 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v80 + 56))(__dsta, 0, 1, v79);
    }
    swift_storeEnumTagMultiPayload(v40, v42, 1);
  }
  else
  {
    if (v55)
    {
      v54 = *(_QWORD *)(v43 + 64);
      goto LABEL_11;
    }
    v56 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v41, v56))
    {
      case 1u:
        v57 = *v41;
        *v40 = *v41;
        v58 = v57;
        v59 = v40;
        v60 = v56;
        v61 = 1;
        goto LABEL_48;
      case 2u:
        v103 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v40, v41, v103);
        v59 = v40;
        v60 = v56;
        v61 = 2;
        goto LABEL_48;
      case 3u:
        v104 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v40, v41, v104);
        v59 = v40;
        v60 = v56;
        v61 = 3;
        goto LABEL_48;
      case 4u:
        v105 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v40, v41, v105);
        v59 = v40;
        v60 = v56;
        v61 = 4;
        goto LABEL_48;
      case 5u:
        v106 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v40, v41, v106);
        v59 = v40;
        v60 = v56;
        v61 = 5;
        goto LABEL_48;
      case 6u:
        v107 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v40, v41, v107);
        v59 = v40;
        v60 = v56;
        v61 = 6;
        goto LABEL_48;
      case 8u:
        v108 = *v41;
        *v40 = *v41;
        v109 = v108;
        v59 = v40;
        v60 = v56;
        v61 = 8;
        goto LABEL_48;
      case 9u:
        v110 = *v41;
        *v40 = *v41;
        v111 = v110;
        v59 = v40;
        v60 = v56;
        v61 = 9;
LABEL_48:
        swift_storeEnumTagMultiPayload(v59, v60, v61);
        break;
      default:
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v40, v42, 0);
  }
LABEL_63:
  sub_100043D5C((uint64_t *)((char *)a1 + a3[23]), (uint64_t *)((char *)a2 + a3[23]));
  sub_100043D5C((uint64_t *)((char *)a1 + a3[24]), (uint64_t *)((char *)a2 + a3[24]));
  *((_BYTE *)a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
  return a1;
}

uint64_t sub_100196850(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(_OWORD *)(a2 + 120);
  v9 = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v9;
  *(_OWORD *)(a1 + 120) = v8;
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v11 = *(_OWORD *)(a2 + 264);
  v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  *(_OWORD *)(a1 + 264) = v11;
  v13 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v13;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v14 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v14;
  v15 = a3[22];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  v18 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
    if (EnumCaseMultiPayload == 1)
    {
      *v16 = *v17;
      v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v28 = (char *)v16 + v27;
      v29 = (char *)v17 + v27;
      v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = sub_10002A750(&qword_100644980);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v29, v30))
        {
          case 2u:
            v33 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v28, v29, v33);
            v34 = v28;
            v35 = v30;
            v36 = 2;
            goto LABEL_24;
          case 3u:
            v44 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v28, v29, v44);
            v34 = v28;
            v35 = v30;
            v36 = 3;
            goto LABEL_24;
          case 4u:
            v45 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v28, v29, v45);
            v34 = v28;
            v35 = v30;
            v36 = 4;
            goto LABEL_24;
          case 5u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v28, v29, v46);
            v34 = v28;
            v35 = v30;
            v36 = 5;
            goto LABEL_24;
          case 6u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v28, v29, v47);
            v34 = v28;
            v35 = v30;
            v36 = 6;
LABEL_24:
            swift_storeEnumTagMultiPayload(v34, v35, v36);
            break;
          default:
            memcpy(v28, v29, *(_QWORD *)(v31 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v41 = v16;
      v42 = v18;
      v43 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v16, v17, *(_QWORD *)(v19 + 64));
LABEL_28:
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        goto LABEL_29;
      }
      v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v17, v22))
      {
        case 2u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v16, v17, v23);
          v24 = v16;
          v25 = v22;
          v26 = 2;
          goto LABEL_17;
        case 3u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v16, v17, v37);
          v24 = v16;
          v25 = v22;
          v26 = 3;
          goto LABEL_17;
        case 4u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v16, v17, v38);
          v24 = v16;
          v25 = v22;
          v26 = 4;
          goto LABEL_17;
        case 5u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v16, v17, v39);
          v24 = v16;
          v25 = v22;
          v26 = 5;
          goto LABEL_17;
        case 6u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v16, v17, v40);
          v24 = v16;
          v25 = v22;
          v26 = 6;
LABEL_17:
          swift_storeEnumTagMultiPayload(v24, v25, v26);
          break;
        default:
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          break;
      }
      v41 = v16;
      v42 = v18;
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v42, v43);
    goto LABEL_28;
  }
  v20 = sub_10002A750((uint64_t *)&unk_1006463C0);
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_29:
  v48 = a3[23];
  v49 = a3[24];
  v50 = a1 + v48;
  v51 = a2 + v48;
  v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
  v53 = a1 + v49;
  v54 = a2 + v49;
  *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
  v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  return a1;
}

uint64_t *sub_100196D44(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD *, uint64_t, uint64_t);
  int v42;
  int v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v6 = a2[1];
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v7);
  v8 = a2[2];
  v9 = a2[3];
  v10 = a1[2];
  a1[1] = v6;
  a1[2] = v8;
  swift_unknownObjectRelease(v10);
  v11 = a2[4];
  v12 = a2[5];
  v13 = a1[4];
  a1[3] = v9;
  a1[4] = v11;
  swift_unknownObjectRelease(v13);
  v14 = a2[6];
  a1[5] = v12;
  a1[6] = v14;
  swift_release();
  v15 = (void *)a1[7];
  a1[7] = a2[7];

  v16 = a2[9];
  v17 = a1[8];
  a1[8] = a2[8];
  swift_unknownObjectRelease(v17);
  a1[9] = v16;
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  v18 = a2[14];
  v19 = a1[13];
  a1[13] = a2[13];
  swift_unknownObjectRelease(v19);
  a1[14] = v18;
  sub_100027F10(a1 + 15);
  *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  a1[19] = a2[19];
  sub_100027F10(a1 + 20);
  v20 = *((_OWORD *)a2 + 11);
  *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 11) = v20;
  v21 = a2[25];
  v22 = a2[26];
  v23 = a1[25];
  a1[24] = a2[24];
  a1[25] = v21;
  swift_unknownObjectRelease(v23);
  a1[26] = v22;
  sub_100027F10(a1 + 27);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  v24 = a2[32];
  v25 = a1[31];
  a1[31] = a2[31];
  swift_unknownObjectRelease(v25);
  a1[32] = v24;
  sub_100027F10(a1 + 33);
  v26 = *(_OWORD *)(a2 + 35);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 35) = v26;
  v27 = a2[38];
  v28 = a1[37];
  a1[37] = a2[37];
  swift_unknownObjectRelease(v28);
  v29 = a2[39];
  v30 = a2[40];
  v31 = a1[39];
  a1[38] = v27;
  a1[39] = v29;
  swift_unknownObjectRelease(v31);
  a1[40] = v30;
  sub_100027F10(a1 + 41);
  v32 = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 43) = v32;
  v33 = a2[46];
  v34 = a2[47];
  v35 = a1[46];
  a1[45] = a2[45];
  a1[46] = v33;
  swift_unknownObjectRelease(v35);
  a1[47] = v34;
  v36 = a3[22];
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  v39 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v39);
      if (EnumCaseMultiPayload == 1)
      {
        *v37 = *v38;
        v57 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v58 = (char *)v37 + v57;
        v59 = (char *)v38 + v57;
        v60 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          v62 = sub_10002A750(&qword_100644980);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v59, v60))
          {
            case 2u:
              v69 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v58, v59, v69);
              v70 = v58;
              v71 = v60;
              v72 = 2;
              goto LABEL_45;
            case 3u:
              v85 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v58, v59, v85);
              v70 = v58;
              v71 = v60;
              v72 = 3;
              goto LABEL_45;
            case 4u:
              v86 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v58, v59, v86);
              v70 = v58;
              v71 = v60;
              v72 = 4;
              goto LABEL_45;
            case 5u:
              v87 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v58, v59, v87);
              v70 = v58;
              v71 = v60;
              v72 = 5;
              goto LABEL_45;
            case 6u:
              v88 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v58, v59, v88);
              v70 = v58;
              v71 = v60;
              v72 = 6;
LABEL_45:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v58, v59, *(_QWORD *)(v61 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v77 = v37;
        v78 = v39;
        v79 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v37, v38, *(_QWORD *)(v40 + 64));
LABEL_49:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          goto LABEL_50;
        }
        v45 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v38, v45))
        {
          case 2u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v37, v38, v46);
            v47 = v37;
            v48 = v45;
            v49 = 2;
            goto LABEL_29;
          case 3u:
            v73 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v37, v38, v73);
            v47 = v37;
            v48 = v45;
            v49 = 3;
            goto LABEL_29;
          case 4u:
            v74 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v37, v38, v74);
            v47 = v37;
            v48 = v45;
            v49 = 4;
            goto LABEL_29;
          case 5u:
            v75 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v37, v38, v75);
            v47 = v37;
            v48 = v45;
            v49 = 5;
            goto LABEL_29;
          case 6u:
            v76 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v37, v38, v76);
            v47 = v37;
            v48 = v45;
            v49 = 6;
LABEL_29:
            swift_storeEnumTagMultiPayload(v47, v48, v49);
            break;
          default:
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            break;
        }
        v77 = v37;
        v78 = v39;
        v79 = 0;
      }
      swift_storeEnumTagMultiPayload(v77, v78, v79);
      goto LABEL_49;
    }
    goto LABEL_9;
  }
  if (v43)
  {
    sub_10001F544((uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_9:
    v50 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_1006463C0) - 8) + 64);
LABEL_10:
    memcpy(v37, v38, v50);
    goto LABEL_50;
  }
  if (a1 == a2)
    goto LABEL_50;
  sub_10001F544((uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v51 = swift_getEnumCaseMultiPayload(v38, v39);
  if (v51 == 1)
  {
    *v37 = *v38;
    v63 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v64 = (char *)v37 + v63;
    v65 = (char *)v38 + v63;
    v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = sub_10002A750(&qword_100644980);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v65, v66))
      {
        case 2u:
          v80 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v64, v65, v80);
          swift_storeEnumTagMultiPayload(v64, v66, 2);
          break;
        case 3u:
          v98 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v64, v65, v98);
          swift_storeEnumTagMultiPayload(v64, v66, 3);
          break;
        case 4u:
          v99 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v64, v65, v99);
          swift_storeEnumTagMultiPayload(v64, v66, 4);
          break;
        case 5u:
          v100 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v64, v65, v100);
          swift_storeEnumTagMultiPayload(v64, v66, 5);
          break;
        case 6u:
          v101 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v64, v65, v101);
          swift_storeEnumTagMultiPayload(v64, v66, 6);
          break;
        default:
          memcpy(v64, v65, *(_QWORD *)(v67 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    swift_storeEnumTagMultiPayload(v37, v39, 1);
  }
  else
  {
    if (v51)
    {
      v50 = *(_QWORD *)(v40 + 64);
      goto LABEL_10;
    }
    v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v38, v52))
    {
      case 2u:
        v53 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v37, v38, v53);
        v54 = v37;
        v55 = v52;
        v56 = 2;
        goto LABEL_38;
      case 3u:
        v81 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v37, v38, v81);
        v54 = v37;
        v55 = v52;
        v56 = 3;
        goto LABEL_38;
      case 4u:
        v82 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v37, v38, v82);
        v54 = v37;
        v55 = v52;
        v56 = 4;
        goto LABEL_38;
      case 5u:
        v83 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v37, v38, v83);
        v54 = v37;
        v55 = v52;
        v56 = 5;
        goto LABEL_38;
      case 6u:
        v84 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v37, v38, v84);
        v54 = v37;
        v55 = v52;
        v56 = 6;
LABEL_38:
        swift_storeEnumTagMultiPayload(v54, v55, v56);
        break;
      default:
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(v37, v39, 0);
  }
LABEL_50:
  v89 = a3[23];
  v90 = (uint64_t)a1 + v89;
  v91 = (uint64_t)a2 + v89;
  sub_100027F10((uint64_t *)((char *)a1 + v89));
  v92 = *(_OWORD *)(v91 + 16);
  *(_OWORD *)v90 = *(_OWORD *)v91;
  *(_OWORD *)(v90 + 16) = v92;
  *(_QWORD *)(v90 + 32) = *(_QWORD *)(v91 + 32);
  v93 = a3[24];
  v94 = (uint64_t)a1 + v93;
  v95 = (uint64_t)a2 + v93;
  sub_100027F10((uint64_t *)((char *)a1 + v93));
  v96 = *(_OWORD *)(v95 + 16);
  *(_OWORD *)v94 = *(_OWORD *)v95;
  *(_OWORD *)(v94 + 16) = v96;
  *(_QWORD *)(v94 + 32) = *(_QWORD *)(v95 + 32);
  *((_BYTE *)a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
  return a1;
}

uint64_t sub_1001976A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001976B4);
}

uint64_t sub_1001976B4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 88)], a2, v8);
  }
}

uint64_t sub_100197734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100197740);
}

char *sub_100197740(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 88)], a2, a2, v7);
  }
  return result;
}

void sub_1001977B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = &unk_100526F80;
  v4[1] = &unk_100526F80;
  v4[2] = &unk_100526F80;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = &unk_100526F80;
  v4[6] = &unk_100526F98;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = &unk_100526F80;
  v4[10] = &unk_100526F68;
  v4[11] = &unk_100526F68;
  v4[12] = &unk_100526F80;
  v4[13] = &unk_100526FC8;
  v4[14] = &unk_100526FC8;
  v4[15] = &unk_100526F80;
  v4[16] = &unk_100526F68;
  v4[17] = &unk_100526F80;
  sub_1000492C8(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(v2 - 8) + 64;
    v4[19] = &unk_100526F68;
    v4[20] = &unk_100526F68;
    v4[21] = &unk_100526F98;
    swift_initStructMetadata(a1, 256, 22, v4, a1 + 16);
  }
}

uint64_t destroy for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t a1)
{

  sub_100027F10((_QWORD *)(a1 + 8));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  __int128 v11;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_unknownObjectRetain(v11);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  sub_100043D5C((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  sub_100027F10((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_unknownObjectRelease(v7);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersCommonPresenter.ParamsForPresentingDetails()
{
  return &type metadata for TTRIRemindersCommonPresenter.ParamsForPresentingDetails;
}

char *sub_100197AF0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void **v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(void **, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(void **, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t, __n128);
  __n128 v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  int *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unsigned __int8 v194;
  void *v195;
  unsigned __int8 v196;
  void *v197;
  char *v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 0u:
          v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v203 = v13;
          switch(swift_getEnumCaseMultiPayload(a2, v14))
          {
            case 1u:
              v15 = *a2;
              *(_QWORD *)a1 = *a2;
              v16 = v15;
              v17 = a1;
              v18 = v14;
              v19 = 1;
              goto LABEL_45;
            case 2u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
              v17 = a1;
              v18 = v14;
              v19 = 2;
              goto LABEL_45;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
              v17 = a1;
              v18 = v14;
              v19 = 3;
              goto LABEL_45;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
              v17 = a1;
              v18 = v14;
              v19 = 4;
              goto LABEL_45;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(a1, a2, v103);
              v17 = a1;
              v18 = v14;
              v19 = 5;
              goto LABEL_45;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(a1, a2, v104);
              v17 = a1;
              v18 = v14;
              v19 = 6;
              goto LABEL_45;
            case 8u:
              v105 = *a2;
              *(_QWORD *)a1 = *a2;
              v106 = v105;
              v17 = a1;
              v18 = v14;
              v19 = 8;
              goto LABEL_45;
            case 9u:
              v107 = *a2;
              *(_QWORD *)a1 = *a2;
              v108 = v107;
              v17 = a1;
              v18 = v14;
              v19 = 9;
LABEL_45:
              swift_storeEnumTagMultiPayload(v17, v18, v19);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
              break;
          }
          v109 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v110 = v109[5];
          v111 = &a1[v110];
          v112 = (char *)a2 + v110;
          v113 = *(uint64_t *)((char *)a2 + v110 + 8);
          if (v113)
          {
            *(_QWORD *)v111 = *(_QWORD *)v112;
            *((_QWORD *)v111 + 1) = v113;
            v114 = (void *)*((_QWORD *)v112 + 2);
            v115 = *((_QWORD *)v112 + 3);
            v116 = *((_QWORD *)v112 + 4);
            v117 = *((_QWORD *)v112 + 5);
            v190 = *((_QWORD *)v112 + 6);
            v199 = *((_QWORD *)v112 + 7);
            v194 = v112[64];
            swift_bridgeObjectRetain(v113);
            sub_10003E1F0(v114, v115, v116, v117, v190, v199, v194);
            *((_QWORD *)v111 + 2) = v114;
            *((_QWORD *)v111 + 3) = v115;
            *((_QWORD *)v111 + 4) = v116;
            *((_QWORD *)v111 + 5) = v117;
            *((_QWORD *)v111 + 6) = v190;
            *((_QWORD *)v111 + 7) = v199;
            v111[64] = v194;
            *(_DWORD *)(v111 + 65) = *(_DWORD *)(v112 + 65);
            v118 = v112[120];
            if (v118 == 255)
            {
              v119 = *(_OWORD *)(v112 + 88);
              *(_OWORD *)(v111 + 72) = *(_OWORD *)(v112 + 72);
              *(_OWORD *)(v111 + 88) = v119;
              *(_OWORD *)(v111 + 104) = *(_OWORD *)(v112 + 104);
              v111[120] = v112[120];
            }
            else
            {
              v200 = v118 & 1;
              v124 = *((_QWORD *)v112 + 10);
              v125 = *((_QWORD *)v112 + 11);
              v126 = *((_QWORD *)v112 + 12);
              v127 = *((_QWORD *)v112 + 13);
              v191 = *((_QWORD *)v112 + 14);
              v195 = (void *)*((_QWORD *)v112 + 9);
              sub_10002B764(v195, v124, v125, v126, v127, v191, v118 & 1);
              *((_QWORD *)v111 + 9) = v195;
              *((_QWORD *)v111 + 10) = v124;
              *((_QWORD *)v111 + 11) = v125;
              *((_QWORD *)v111 + 12) = v126;
              *((_QWORD *)v111 + 13) = v127;
              *((_QWORD *)v111 + 14) = v191;
              v111[120] = v200;
            }
            v123 = v203;
            v111[121] = v112[121];
          }
          else
          {
            v120 = *((_OWORD *)v112 + 5);
            *((_OWORD *)v111 + 4) = *((_OWORD *)v112 + 4);
            *((_OWORD *)v111 + 5) = v120;
            *((_OWORD *)v111 + 6) = *((_OWORD *)v112 + 6);
            *(_OWORD *)(v111 + 106) = *(_OWORD *)(v112 + 106);
            v121 = *((_OWORD *)v112 + 1);
            *(_OWORD *)v111 = *(_OWORD *)v112;
            *((_OWORD *)v111 + 1) = v121;
            v122 = *((_OWORD *)v112 + 3);
            *((_OWORD *)v111 + 2) = *((_OWORD *)v112 + 2);
            *((_OWORD *)v111 + 3) = v122;
            v123 = v13;
          }
          a1[v109[6]] = *((_BYTE *)a2 + v109[6]);
          a1[v109[7]] = *((_BYTE *)a2 + v109[7]);
          a1[v109[8]] = *((_BYTE *)a2 + v109[8]);
          a1[v109[9]] = *((_BYTE *)a2 + v109[9]);
          a1[v109[10]] = *((_BYTE *)a2 + v109[10]);
          v128 = v109[11];
          v129 = *(char **)((char *)a2 + v128);
          *(_QWORD *)&a1[v128] = v129;
          v130 = v129;
          v55 = a1;
          v56 = v123;
          v57 = 0;
          goto LABEL_102;
        case 1u:
          v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v204 = v13;
          switch(swift_getEnumCaseMultiPayload(a2, v20))
          {
            case 1u:
              v21 = *a2;
              *(_QWORD *)a1 = *a2;
              v22 = v21;
              v23 = a1;
              v24 = v20;
              v25 = 1;
              goto LABEL_61;
            case 2u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
              v23 = a1;
              v24 = v20;
              v25 = 2;
              goto LABEL_61;
            case 3u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
              v23 = a1;
              v24 = v20;
              v25 = 3;
              goto LABEL_61;
            case 4u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
              v23 = a1;
              v24 = v20;
              v25 = 4;
              goto LABEL_61;
            case 5u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
              v23 = a1;
              v24 = v20;
              v25 = 5;
              goto LABEL_61;
            case 6u:
              v135 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
              v23 = a1;
              v24 = v20;
              v25 = 6;
              goto LABEL_61;
            case 8u:
              v136 = *a2;
              *(_QWORD *)a1 = *a2;
              v137 = v136;
              v23 = a1;
              v24 = v20;
              v25 = 8;
              goto LABEL_61;
            case 9u:
              v138 = *a2;
              *(_QWORD *)a1 = *a2;
              v139 = v138;
              v23 = a1;
              v24 = v20;
              v25 = 9;
LABEL_61:
              swift_storeEnumTagMultiPayload(v23, v24, v25);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
              break;
          }
          v140 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v141 = v140[5];
          v142 = &a1[v141];
          v143 = (char *)a2 + v141;
          v144 = *(uint64_t *)((char *)a2 + v141 + 8);
          if (v144)
          {
            *(_QWORD *)v142 = *(_QWORD *)v143;
            *((_QWORD *)v142 + 1) = v144;
            v145 = (void *)*((_QWORD *)v143 + 2);
            v146 = *((_QWORD *)v143 + 3);
            v147 = *((_QWORD *)v143 + 4);
            v148 = *((_QWORD *)v143 + 5);
            v192 = *((_QWORD *)v143 + 6);
            v201 = *((_QWORD *)v143 + 7);
            v196 = v143[64];
            swift_bridgeObjectRetain(v144);
            sub_10003E1F0(v145, v146, v147, v148, v192, v201, v196);
            *((_QWORD *)v142 + 2) = v145;
            *((_QWORD *)v142 + 3) = v146;
            *((_QWORD *)v142 + 4) = v147;
            *((_QWORD *)v142 + 5) = v148;
            *((_QWORD *)v142 + 6) = v192;
            *((_QWORD *)v142 + 7) = v201;
            v142[64] = v196;
            *(_DWORD *)(v142 + 65) = *(_DWORD *)(v143 + 65);
            v149 = v143[120];
            if (v149 == 255)
            {
              v150 = *(_OWORD *)(v143 + 88);
              *(_OWORD *)(v142 + 72) = *(_OWORD *)(v143 + 72);
              *(_OWORD *)(v142 + 88) = v150;
              *(_OWORD *)(v142 + 104) = *(_OWORD *)(v143 + 104);
              v142[120] = v143[120];
            }
            else
            {
              v202 = v149 & 1;
              v155 = *((_QWORD *)v143 + 10);
              v156 = *((_QWORD *)v143 + 11);
              v157 = *((_QWORD *)v143 + 12);
              v158 = *((_QWORD *)v143 + 13);
              v193 = *((_QWORD *)v143 + 14);
              v197 = (void *)*((_QWORD *)v143 + 9);
              sub_10002B764(v197, v155, v156, v157, v158, v193, v149 & 1);
              *((_QWORD *)v142 + 9) = v197;
              *((_QWORD *)v142 + 10) = v155;
              *((_QWORD *)v142 + 11) = v156;
              *((_QWORD *)v142 + 12) = v157;
              *((_QWORD *)v142 + 13) = v158;
              *((_QWORD *)v142 + 14) = v193;
              v142[120] = v202;
            }
            v154 = v204;
            v142[121] = v143[121];
          }
          else
          {
            v151 = *((_OWORD *)v143 + 5);
            *((_OWORD *)v142 + 4) = *((_OWORD *)v143 + 4);
            *((_OWORD *)v142 + 5) = v151;
            *((_OWORD *)v142 + 6) = *((_OWORD *)v143 + 6);
            *(_OWORD *)(v142 + 106) = *(_OWORD *)(v143 + 106);
            v152 = *((_OWORD *)v143 + 1);
            *(_OWORD *)v142 = *(_OWORD *)v143;
            *((_OWORD *)v142 + 1) = v152;
            v153 = *((_OWORD *)v143 + 3);
            *((_OWORD *)v142 + 2) = *((_OWORD *)v143 + 2);
            *((_OWORD *)v142 + 3) = v153;
            v154 = v13;
          }
          a1[v140[6]] = *((_BYTE *)a2 + v140[6]);
          a1[v140[7]] = *((_BYTE *)a2 + v140[7]);
          a1[v140[8]] = *((_BYTE *)a2 + v140[8]);
          a1[v140[9]] = *((_BYTE *)a2 + v140[9]);
          a1[v140[10]] = *((_BYTE *)a2 + v140[10]);
          v159 = v140[11];
          v160 = *(char **)((char *)a2 + v159);
          *(_QWORD *)&a1[v159] = v160;
          v161 = v160;
          v55 = a1;
          v56 = v154;
          v57 = 1;
          goto LABEL_102;
        case 2u:
          v26 = *a2;
          *(_QWORD *)a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (void **)&a1[v27];
          v29 = (void **)((char *)a2 + v27);
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
          v33 = v26;
          if (v32(v29, 1, v30))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 1u:
                v70 = *v29;
                *v28 = *v29;
                v71 = v70;
                v72 = v28;
                v73 = v30;
                v74 = 1;
                goto LABEL_77;
              case 2u:
                v162 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v28, v29, v162);
                v72 = v28;
                v73 = v30;
                v74 = 2;
                goto LABEL_77;
              case 3u:
                v163 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v28, v29, v163);
                v72 = v28;
                v73 = v30;
                v74 = 3;
                goto LABEL_77;
              case 4u:
                v164 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v28, v29, v164);
                v72 = v28;
                v73 = v30;
                v74 = 4;
                goto LABEL_77;
              case 5u:
                v165 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v28, v29, v165);
                v72 = v28;
                v73 = v30;
                v74 = 5;
                goto LABEL_77;
              case 6u:
                v166 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v28, v29, v166);
                v72 = v28;
                v73 = v30;
                v74 = 6;
                goto LABEL_77;
              case 8u:
                v167 = *v29;
                *v28 = *v29;
                v168 = v167;
                v72 = v28;
                v73 = v30;
                v74 = 8;
                goto LABEL_77;
              case 9u:
                v169 = *v29;
                *v28 = *v29;
                v170 = v169;
                v72 = v28;
                v73 = v30;
                v74 = 9;
LABEL_77:
                swift_storeEnumTagMultiPayload(v72, v73, v74);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v55 = a1;
          v56 = v13;
          v57 = 2;
          goto LABEL_102;
        case 3u:
          v35 = *a2;
          *(_QWORD *)a1 = *a2;
          v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v37 = (void **)&a1[v36];
          v38 = (void **)((char *)a2 + v36);
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v40 = *(_QWORD *)(v39 - 8);
          v41 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48);
          v42 = v35;
          if (v41(v38, 1, v39))
          {
            v43 = sub_10002A750(&qword_100644980);
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v38, v39))
            {
              case 1u:
                v75 = *v38;
                *v37 = *v38;
                v76 = v75;
                v77 = v37;
                v78 = v39;
                v79 = 1;
                goto LABEL_88;
              case 2u:
                v171 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v37, v38, v171);
                v77 = v37;
                v78 = v39;
                v79 = 2;
                goto LABEL_88;
              case 3u:
                v172 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v37, v38, v172);
                v77 = v37;
                v78 = v39;
                v79 = 3;
                goto LABEL_88;
              case 4u:
                v173 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v37, v38, v173);
                v77 = v37;
                v78 = v39;
                v79 = 4;
                goto LABEL_88;
              case 5u:
                v174 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v37, v38, v174);
                v77 = v37;
                v78 = v39;
                v79 = 5;
                goto LABEL_88;
              case 6u:
                v175 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v37, v38, v175);
                v77 = v37;
                v78 = v39;
                v79 = 6;
                goto LABEL_88;
              case 8u:
                v176 = *v38;
                *v37 = *v38;
                v177 = v176;
                v77 = v37;
                v78 = v39;
                v79 = 8;
                goto LABEL_88;
              case 9u:
                v178 = *v38;
                *v37 = *v38;
                v179 = v178;
                v77 = v37;
                v78 = v39;
                v79 = 9;
LABEL_88:
                swift_storeEnumTagMultiPayload(v77, v78, v79);
                break;
              default:
                memcpy(v37, v38, *(_QWORD *)(v40 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          v55 = a1;
          v56 = v13;
          v57 = 3;
          goto LABEL_102;
        case 4u:
          v44 = *a2;
          *(_QWORD *)a1 = *a2;
          v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v46 = (void **)&a1[v45];
          v47 = (void **)((char *)a2 + v45);
          v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v49 = *(_QWORD *)(v48 - 8);
          v50 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48);
          v51 = v44;
          if (v50(v47, 1, v48))
          {
            v52 = sub_10002A750(&qword_100644980);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v47, v48))
            {
              case 1u:
                v80 = *v47;
                *v46 = *v47;
                v81 = v80;
                v82 = v46;
                v83 = v48;
                v84 = 1;
                goto LABEL_99;
              case 2u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v46, v47, v180);
                v82 = v46;
                v83 = v48;
                v84 = 2;
                goto LABEL_99;
              case 3u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v46, v47, v181);
                v82 = v46;
                v83 = v48;
                v84 = 3;
                goto LABEL_99;
              case 4u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v46, v47, v182);
                v82 = v46;
                v83 = v48;
                v84 = 4;
                goto LABEL_99;
              case 5u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v46, v47, v183);
                v82 = v46;
                v83 = v48;
                v84 = 5;
                goto LABEL_99;
              case 6u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v46, v47, v184);
                v82 = v46;
                v83 = v48;
                v84 = 6;
                goto LABEL_99;
              case 8u:
                v185 = *v47;
                *v46 = *v47;
                v186 = v185;
                v82 = v46;
                v83 = v48;
                v84 = 8;
                goto LABEL_99;
              case 9u:
                v187 = *v47;
                *v46 = *v47;
                v188 = v187;
                v82 = v46;
                v83 = v48;
                v84 = 9;
LABEL_99:
                swift_storeEnumTagMultiPayload(v82, v83, v84);
                break;
              default:
                memcpy(v46, v47, *(_QWORD *)(v49 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
          }
          v55 = a1;
          v56 = v13;
          v57 = 4;
          goto LABEL_102;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v53 = a2[2];
          *((_QWORD *)a1 + 2) = v53;
          v54 = v53;
          v55 = a1;
          v56 = v13;
          v57 = 5;
          goto LABEL_102;
        case 6u:
          v65 = *a2;
          *(_QWORD *)a1 = *a2;
          v66 = v65;
          v55 = a1;
          v56 = v13;
          v57 = 6;
          goto LABEL_102;
        case 7u:
          v58 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v59 = *(_QWORD *)(v58 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v59 + 48))(a2, 1, v58))
          {
            v60 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          }
          else
          {
            v85 = *a2;
            *(_QWORD *)a1 = *a2;
            v86 = *(int *)(v58 + 20);
            v198 = &a1[v86];
            v87 = (char *)a2 + v86;
            v88 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v89 = v13;
            v90 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v88 - 8) + 16);
            v91 = swift_bridgeObjectRetain(v85);
            v90(v198, v87, v88, v91);
            v13 = v89;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(a1, 0, 1, v58);
          }
          v92 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v93 = &a1[v92];
          v94 = (char **)((char *)a2 + v92);
          v95 = v94[1];
          if (v95)
          {
            *(_QWORD *)v93 = *v94;
            *((_QWORD *)v93 + 1) = v95;
            v96 = (void *)v94[2];
            *((_QWORD *)v93 + 2) = v96;
            swift_bridgeObjectRetain(v95);
            v97 = v96;
          }
          else
          {
            *(_OWORD *)v93 = *(_OWORD *)v94;
            *((_QWORD *)v93 + 2) = v94[2];
          }
          v55 = a1;
          v56 = v13;
          v57 = 7;
          goto LABEL_102;
        case 8u:
          v67 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v68 + 48))(a2, 1, v67))
          {
            v69 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            a1[*(int *)(v67 + 20)] = *((_BYTE *)a2 + *(int *)(v67 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(a1, 0, 1, v67);
          }
          v99 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v99 + 20)] = *(char **)((char *)a2 + *(int *)(v99 + 20));
          v55 = a1;
          v56 = v13;
          v57 = 8;
          goto LABEL_102;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v61 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v62 = &a1[v61];
          v63 = (char *)a2 + v61;
          v64 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
          v55 = a1;
          v56 = v13;
          v57 = 9;
LABEL_102:
          swift_storeEnumTagMultiPayload(v55, v56, v57);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void sub_100198B28(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;

  v2 = a1;
  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
  {
    v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v2, v4))
    {
      case 0u:
        v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v5))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_7;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 1u:
        v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v6))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_24:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            v7 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v2, v7);
            break;
          default:
            break;
        }
LABEL_25:
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v18 = (char *)v2 + *(int *)(v17 + 20);
        v19 = *((_QWORD *)v18 + 1);
        if (v19)
        {
          swift_bridgeObjectRelease(v19);
          sub_10003E2EC(*((void **)v18 + 2), *((_QWORD *)v18 + 3), *((_QWORD *)v18 + 4), *((_QWORD *)v18 + 5), *((_QWORD *)v18 + 6), *((_QWORD *)v18 + 7), v18[64]);
          v20 = v18[120];
          if (v20 != 255)
            sub_10002B328(*((void **)v18 + 9), *((_QWORD *)v18 + 10), *((_QWORD *)v18 + 11), *((_QWORD *)v18 + 12), *((_QWORD *)v18 + 13), *((_QWORD *)v18 + 14), v20 & 1);
        }
        v3 = *(id *)((char *)v2 + *(int *)(v17 + 44));
        goto LABEL_3;
      case 2u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v2, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_2;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_22;
            default:
              return;
          }
        }
        return;
      case 3u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v2, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_2;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_22;
            default:
              return;
          }
        }
        return;
      case 4u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v2, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v10))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_2;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_22;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
        break;
      case 7u:
        v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v2, 1, v11))
        {
          swift_bridgeObjectRelease(*v2);
          v12 = (char *)v2 + *(int *)(v11 + 20);
          v13 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v2 = (_QWORD *)((char *)v2
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v14 = v2[1];
        if (!v14)
          return;
        swift_bridgeObjectRelease(v14);
LABEL_18:
        v3 = (id)v2[2];
        goto LABEL_3;
      case 8u:
        v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v2, 1, v15))
          return;
LABEL_22:
        v16 = type metadata accessor for Date(0);
LABEL_23:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v2, v16);
        return;
      case 9u:
        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v16 = type metadata accessor for AnyTip(0);
        goto LABEL_23;
      default:
        return;
    }
  }
LABEL_2:
  v3 = (id)*v2;
LABEL_3:

}

void **sub_100198ECC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(void **, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void **v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(void **, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t, __n128);
  __n128 v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  void *v105;
  id v106;
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  id v137;
  void *v138;
  id v139;
  int *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  void *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  unsigned __int8 v192;
  void *v193;
  uint64_t v194;
  void *v195;
  char *v196;
  uint64_t v197;
  char v198;
  unsigned __int8 v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v3 = a3;
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    v7 = v6;
    v8 = a1;
    v9 = v3;
    v10 = 1;
  }
  else
  {
    v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v11))
    {
      case 0u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v201 = v11;
        v203 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 1u:
            v13 = *a2;
            *a1 = *a2;
            v14 = v13;
            v15 = a1;
            v16 = v12;
            v17 = 1;
            goto LABEL_43;
          case 2u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v15 = a1;
            v16 = v12;
            v17 = 2;
            goto LABEL_43;
          case 3u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v15 = a1;
            v16 = v12;
            v17 = 3;
            goto LABEL_43;
          case 4u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
            v15 = a1;
            v16 = v12;
            v17 = 4;
            goto LABEL_43;
          case 5u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
            v15 = a1;
            v16 = v12;
            v17 = 5;
            goto LABEL_43;
          case 6u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
            v15 = a1;
            v16 = v12;
            v17 = 6;
            goto LABEL_43;
          case 8u:
            v103 = *a2;
            *a1 = *a2;
            v104 = v103;
            v15 = a1;
            v16 = v12;
            v17 = 8;
            goto LABEL_43;
          case 9u:
            v105 = *a2;
            *a1 = *a2;
            v106 = v105;
            v15 = a1;
            v16 = v12;
            v17 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v15, v16, v17);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v107 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v108 = v107[5];
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = *(uint64_t *)((char *)a2 + v108 + 8);
        if (v111)
        {
          *(_QWORD *)v109 = *(_QWORD *)v110;
          *((_QWORD *)v109 + 1) = v111;
          v112 = (void *)*((_QWORD *)v110 + 2);
          v113 = *((_QWORD *)v110 + 3);
          v114 = *((_QWORD *)v110 + 4);
          v115 = *((_QWORD *)v110 + 5);
          v116 = *((_QWORD *)v110 + 6);
          v197 = *((_QWORD *)v110 + 7);
          v192 = v110[64];
          swift_bridgeObjectRetain(v111);
          sub_10003E1F0(v112, v113, v114, v115, v116, v197, v192);
          *((_QWORD *)v109 + 2) = v112;
          *((_QWORD *)v109 + 3) = v113;
          *((_QWORD *)v109 + 4) = v114;
          *((_QWORD *)v109 + 5) = v115;
          *((_QWORD *)v109 + 6) = v116;
          *((_QWORD *)v109 + 7) = v197;
          v109[64] = v192;
          *(_DWORD *)(v109 + 65) = *(_DWORD *)(v110 + 65);
          v117 = v110[120];
          if (v117 == 255)
          {
            v118 = *(_OWORD *)(v110 + 88);
            *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
            *(_OWORD *)(v109 + 88) = v118;
            *(_OWORD *)(v109 + 104) = *(_OWORD *)(v110 + 104);
            v109[120] = v110[120];
          }
          else
          {
            v198 = v117 & 1;
            v123 = *((_QWORD *)v110 + 10);
            v193 = (void *)*((_QWORD *)v110 + 9);
            v124 = *((_QWORD *)v110 + 11);
            v125 = *((_QWORD *)v110 + 12);
            v126 = *((_QWORD *)v110 + 13);
            v127 = *((_QWORD *)v110 + 14);
            sub_10002B764(v193, v123, v124, v125, v126, v127, v117 & 1);
            *((_QWORD *)v109 + 9) = v193;
            *((_QWORD *)v109 + 10) = v123;
            *((_QWORD *)v109 + 11) = v124;
            *((_QWORD *)v109 + 12) = v125;
            *((_QWORD *)v109 + 13) = v126;
            *((_QWORD *)v109 + 14) = v127;
            v109[120] = v198;
          }
          v122 = v201;
          v3 = v203;
          v109[121] = v110[121];
        }
        else
        {
          v119 = *((_OWORD *)v110 + 5);
          *((_OWORD *)v109 + 4) = *((_OWORD *)v110 + 4);
          *((_OWORD *)v109 + 5) = v119;
          *((_OWORD *)v109 + 6) = *((_OWORD *)v110 + 6);
          *(_OWORD *)(v109 + 106) = *(_OWORD *)(v110 + 106);
          v120 = *((_OWORD *)v110 + 1);
          *(_OWORD *)v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v120;
          v121 = *((_OWORD *)v110 + 3);
          *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
          *((_OWORD *)v109 + 3) = v121;
          v122 = v11;
        }
        *((_BYTE *)a1 + v107[6]) = *((_BYTE *)a2 + v107[6]);
        *((_BYTE *)a1 + v107[7]) = *((_BYTE *)a2 + v107[7]);
        *((_BYTE *)a1 + v107[8]) = *((_BYTE *)a2 + v107[8]);
        *((_BYTE *)a1 + v107[9]) = *((_BYTE *)a2 + v107[9]);
        *((_BYTE *)a1 + v107[10]) = *((_BYTE *)a2 + v107[10]);
        v128 = v107[11];
        v129 = *(void **)((char *)a2 + v128);
        *(void **)((char *)a1 + v128) = v129;
        v130 = v129;
        v53 = a1;
        v54 = v122;
        v55 = 0;
        goto LABEL_100;
      case 1u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v202 = v11;
        v204 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v18))
        {
          case 1u:
            v19 = *a2;
            *a1 = *a2;
            v20 = v19;
            v21 = a1;
            v22 = v18;
            v23 = 1;
            goto LABEL_59;
          case 2u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v21 = a1;
            v22 = v18;
            v23 = 2;
            goto LABEL_59;
          case 3u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v21 = a1;
            v22 = v18;
            v23 = 3;
            goto LABEL_59;
          case 4u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v21 = a1;
            v22 = v18;
            v23 = 4;
            goto LABEL_59;
          case 5u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v21 = a1;
            v22 = v18;
            v23 = 5;
            goto LABEL_59;
          case 6u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v21 = a1;
            v22 = v18;
            v23 = 6;
            goto LABEL_59;
          case 8u:
            v136 = *a2;
            *a1 = *a2;
            v137 = v136;
            v21 = a1;
            v22 = v18;
            v23 = 8;
            goto LABEL_59;
          case 9u:
            v138 = *a2;
            *a1 = *a2;
            v139 = v138;
            v21 = a1;
            v22 = v18;
            v23 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v140 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v141 = v140[5];
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        v144 = *(uint64_t *)((char *)a2 + v141 + 8);
        if (v144)
        {
          *(_QWORD *)v142 = *(_QWORD *)v143;
          *((_QWORD *)v142 + 1) = v144;
          v145 = (void *)*((_QWORD *)v143 + 2);
          v146 = *((_QWORD *)v143 + 3);
          v147 = *((_QWORD *)v143 + 4);
          v148 = *((_QWORD *)v143 + 5);
          v149 = *((_QWORD *)v143 + 6);
          v194 = *((_QWORD *)v143 + 7);
          v199 = v143[64];
          swift_bridgeObjectRetain(v144);
          sub_10003E1F0(v145, v146, v147, v148, v149, v194, v199);
          *((_QWORD *)v142 + 2) = v145;
          *((_QWORD *)v142 + 3) = v146;
          *((_QWORD *)v142 + 4) = v147;
          *((_QWORD *)v142 + 5) = v148;
          *((_QWORD *)v142 + 6) = v149;
          *((_QWORD *)v142 + 7) = v194;
          v142[64] = v199;
          *(_DWORD *)(v142 + 65) = *(_DWORD *)(v143 + 65);
          v150 = v143[120];
          if (v150 == 255)
          {
            v151 = *(_OWORD *)(v143 + 88);
            *(_OWORD *)(v142 + 72) = *(_OWORD *)(v143 + 72);
            *(_OWORD *)(v142 + 88) = v151;
            *(_OWORD *)(v142 + 104) = *(_OWORD *)(v143 + 104);
            v142[120] = v143[120];
          }
          else
          {
            v200 = v150 & 1;
            v156 = *((_QWORD *)v143 + 10);
            v195 = (void *)*((_QWORD *)v143 + 9);
            v157 = *((_QWORD *)v143 + 11);
            v158 = *((_QWORD *)v143 + 12);
            v159 = *((_QWORD *)v143 + 13);
            v160 = *((_QWORD *)v143 + 14);
            sub_10002B764(v195, v156, v157, v158, v159, v160, v150 & 1);
            *((_QWORD *)v142 + 9) = v195;
            *((_QWORD *)v142 + 10) = v156;
            *((_QWORD *)v142 + 11) = v157;
            *((_QWORD *)v142 + 12) = v158;
            *((_QWORD *)v142 + 13) = v159;
            *((_QWORD *)v142 + 14) = v160;
            v142[120] = v200;
          }
          v155 = v202;
          v3 = v204;
          v142[121] = v143[121];
        }
        else
        {
          v152 = *((_OWORD *)v143 + 5);
          *((_OWORD *)v142 + 4) = *((_OWORD *)v143 + 4);
          *((_OWORD *)v142 + 5) = v152;
          *((_OWORD *)v142 + 6) = *((_OWORD *)v143 + 6);
          *(_OWORD *)(v142 + 106) = *(_OWORD *)(v143 + 106);
          v153 = *((_OWORD *)v143 + 1);
          *(_OWORD *)v142 = *(_OWORD *)v143;
          *((_OWORD *)v142 + 1) = v153;
          v154 = *((_OWORD *)v143 + 3);
          *((_OWORD *)v142 + 2) = *((_OWORD *)v143 + 2);
          *((_OWORD *)v142 + 3) = v154;
          v155 = v11;
        }
        *((_BYTE *)a1 + v140[6]) = *((_BYTE *)a2 + v140[6]);
        *((_BYTE *)a1 + v140[7]) = *((_BYTE *)a2 + v140[7]);
        *((_BYTE *)a1 + v140[8]) = *((_BYTE *)a2 + v140[8]);
        *((_BYTE *)a1 + v140[9]) = *((_BYTE *)a2 + v140[9]);
        *((_BYTE *)a1 + v140[10]) = *((_BYTE *)a2 + v140[10]);
        v161 = v140[11];
        v162 = *(void **)((char *)a2 + v161);
        *(void **)((char *)a1 + v161) = v162;
        v163 = v162;
        v53 = a1;
        v54 = v155;
        v55 = 1;
        goto LABEL_100;
      case 2u:
        v24 = *a2;
        *a1 = *a2;
        v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v26 = (void **)((char *)a1 + v25);
        v27 = (void **)((char *)a2 + v25);
        v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48);
        v31 = v24;
        if (v30(v27, 1, v28))
        {
          v32 = sub_10002A750(&qword_100644980);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v27, v28))
          {
            case 1u:
              v68 = *v27;
              *v26 = *v27;
              v69 = v68;
              v70 = v26;
              v71 = v28;
              v72 = 1;
              goto LABEL_75;
            case 2u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v26, v27, v164);
              v70 = v26;
              v71 = v28;
              v72 = 2;
              goto LABEL_75;
            case 3u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v26, v27, v165);
              v70 = v26;
              v71 = v28;
              v72 = 3;
              goto LABEL_75;
            case 4u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v26, v27, v166);
              v70 = v26;
              v71 = v28;
              v72 = 4;
              goto LABEL_75;
            case 5u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v26, v27, v167);
              v70 = v26;
              v71 = v28;
              v72 = 5;
              goto LABEL_75;
            case 6u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v26, v27, v168);
              v70 = v26;
              v71 = v28;
              v72 = 6;
              goto LABEL_75;
            case 8u:
              v169 = *v27;
              *v26 = *v27;
              v170 = v169;
              v70 = v26;
              v71 = v28;
              v72 = 8;
              goto LABEL_75;
            case 9u:
              v171 = *v27;
              *v26 = *v27;
              v172 = v171;
              v70 = v26;
              v71 = v28;
              v72 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v26, v27, *(_QWORD *)(v29 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v53 = a1;
        v54 = v11;
        v55 = 2;
        goto LABEL_100;
      case 3u:
        v33 = *a2;
        *a1 = *a2;
        v34 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v35 = (void **)((char *)a1 + v34);
        v36 = (void **)((char *)a2 + v34);
        v37 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48);
        v40 = v33;
        if (v39(v36, 1, v37))
        {
          v41 = sub_10002A750(&qword_100644980);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v36, v37))
          {
            case 1u:
              v73 = *v36;
              *v35 = *v36;
              v74 = v73;
              v75 = v35;
              v76 = v37;
              v77 = 1;
              goto LABEL_97;
            case 2u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v35, v36, v173);
              v75 = v35;
              v76 = v37;
              v77 = 2;
              goto LABEL_97;
            case 3u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v35, v36, v174);
              v75 = v35;
              v76 = v37;
              v77 = 3;
              goto LABEL_97;
            case 4u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v35, v36, v175);
              v75 = v35;
              v76 = v37;
              v77 = 4;
              goto LABEL_97;
            case 5u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v35, v36, v190);
              v75 = v35;
              v76 = v37;
              v77 = 5;
              goto LABEL_97;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v35, v36, v176);
              v75 = v35;
              v76 = v37;
              v77 = 6;
              goto LABEL_97;
            case 8u:
              v177 = *v36;
              *v35 = *v36;
              v178 = v177;
              v75 = v35;
              v76 = v37;
              v77 = 8;
              goto LABEL_97;
            case 9u:
              v179 = *v36;
              *v35 = *v36;
              v180 = v179;
              v75 = v35;
              v76 = v37;
              v77 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v35, v36, *(_QWORD *)(v38 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        v53 = a1;
        v54 = v11;
        v55 = 3;
        goto LABEL_100;
      case 4u:
        v42 = *a2;
        *a1 = *a2;
        v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v44 = (void **)((char *)a1 + v43);
        v45 = (void **)((char *)a2 + v43);
        v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
        v49 = v42;
        if (v48(v45, 1, v46))
        {
          v50 = sub_10002A750(&qword_100644980);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v45, v46))
          {
            case 1u:
              v78 = *v45;
              *v44 = *v45;
              v79 = v78;
              v80 = v44;
              v81 = v46;
              v82 = 1;
              goto LABEL_93;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v44, v45, v181);
              v80 = v44;
              v81 = v46;
              v82 = 2;
              goto LABEL_93;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v44, v45, v182);
              v80 = v44;
              v81 = v46;
              v82 = 3;
              goto LABEL_93;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v44, v45, v183);
              v80 = v44;
              v81 = v46;
              v82 = 4;
              goto LABEL_93;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v44, v45, v184);
              v80 = v44;
              v81 = v46;
              v82 = 5;
              goto LABEL_93;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v44, v45, v185);
              v80 = v44;
              v81 = v46;
              v82 = 6;
              goto LABEL_93;
            case 8u:
              v186 = *v45;
              *v44 = *v45;
              v187 = v186;
              v80 = v44;
              v81 = v46;
              v82 = 8;
              goto LABEL_93;
            case 9u:
              v188 = *v45;
              *v44 = *v45;
              v189 = v188;
              v80 = v44;
              v81 = v46;
              v82 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v80, v81, v82);
              break;
            default:
              memcpy(v44, v45, *(_QWORD *)(v47 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        v53 = a1;
        v54 = v11;
        v55 = 4;
        goto LABEL_100;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v51 = a2[2];
        a1[2] = v51;
        v52 = v51;
        v53 = a1;
        v54 = v11;
        v55 = 5;
        goto LABEL_100;
      case 6u:
        v63 = *a2;
        *a1 = *a2;
        v64 = v63;
        v53 = a1;
        v54 = v11;
        v55 = 6;
        goto LABEL_100;
      case 7u:
        v56 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v57 + 48))(a2, 1, v56))
        {
          v58 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          v83 = *a2;
          *a1 = *a2;
          v84 = *(int *)(v56 + 20);
          v196 = (char *)a1 + v84;
          v85 = (char *)a2 + v84;
          v86 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v87 = v11;
          v88 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v86 - 8) + 16);
          v89 = swift_bridgeObjectRetain(v83);
          v88(v196, v85, v86, v89);
          v11 = v87;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v57 + 56))(a1, 0, 1, v56);
        }
        v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v91 = (void **)((char *)a1 + v90);
        v92 = (void **)((char *)a2 + v90);
        v93 = v92[1];
        if (v93)
        {
          *v91 = *v92;
          v91[1] = v93;
          v94 = (void *)v92[2];
          v91[2] = v94;
          swift_bridgeObjectRetain(v93);
          v95 = v94;
        }
        else
        {
          *(_OWORD *)v91 = *(_OWORD *)v92;
          v91[2] = v92[2];
        }
        v53 = a1;
        v54 = v11;
        v55 = 7;
        goto LABEL_100;
      case 8u:
        v65 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v66 = *(_QWORD *)(v65 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v66 + 48))(a2, 1, v65))
        {
          v67 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          *((_BYTE *)a1 + *(int *)(v65 + 20)) = *((_BYTE *)a2 + *(int *)(v65 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v66 + 56))(a1, 0, 1, v65);
        }
        v97 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v97 + 20)) = *(void **)((char *)a2 + *(int *)(v97 + 20));
        v53 = a1;
        v54 = v11;
        v55 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v59 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        v62 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        v53 = a1;
        v54 = v11;
        v55 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v53, v54, v55);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
    v8 = a1;
    v9 = v3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_100199EC4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  int v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  void *v144;
  id v145;
  int *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  int v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  id v183;
  void *v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  void *v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  id v201;
  void *v202;
  id v203;
  uint64_t v205;
  char v206;
  uint64_t v207;
  char v208;
  char *v209;
  int *v210;
  int *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = 1;
    }
    else
    {
      v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 0u:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v212 = a3;
          v214 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_44;
            case 2u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_44;
            case 3u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_44;
            case 4u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_44;
            case 5u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_44;
            case 6u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_44;
            case 8u:
              v102 = *a2;
              *a1 = *a2;
              v103 = v102;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_44;
            case 9u:
              v104 = *a2;
              *a1 = *a2;
              v105 = v104;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_44:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v106 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v107 = v106[5];
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          if (*(void **)((char *)a2 + v107 + 8))
          {
            v210 = v106;
            *(_QWORD *)v108 = *(_QWORD *)v109;
            v110 = *((_QWORD *)v109 + 1);
            *((_QWORD *)v108 + 1) = v110;
            v111 = (void *)*((_QWORD *)v109 + 2);
            v112 = *((_QWORD *)v109 + 3);
            v113 = *((_QWORD *)v109 + 4);
            v114 = *((_QWORD *)v109 + 5);
            v115 = *((_QWORD *)v109 + 6);
            v205 = *((_QWORD *)v109 + 7);
            v116 = v109[64];
            swift_bridgeObjectRetain(v110);
            sub_10003E1F0(v111, v112, v113, v114, v115, v205, v116);
            *((_QWORD *)v108 + 2) = v111;
            *((_QWORD *)v108 + 3) = v112;
            *((_QWORD *)v108 + 4) = v113;
            *((_QWORD *)v108 + 5) = v114;
            *((_QWORD *)v108 + 6) = v115;
            *((_QWORD *)v108 + 7) = v205;
            v108[64] = v116;
            v108[65] = v109[65];
            v108[66] = v109[66];
            v108[67] = v109[67];
            v108[68] = v109[68];
            v117 = v109[120];
            if (v117 == 255)
            {
              v118 = *(_OWORD *)(v109 + 72);
              v119 = *(_OWORD *)(v109 + 88);
              v120 = *(_OWORD *)(v109 + 104);
              v108[120] = v109[120];
              *(_OWORD *)(v108 + 88) = v119;
              *(_OWORD *)(v108 + 104) = v120;
              *(_OWORD *)(v108 + 72) = v118;
            }
            else
            {
              v206 = v117 & 1;
              v129 = (void *)*((_QWORD *)v109 + 9);
              v128 = *((_QWORD *)v109 + 10);
              v130 = *((_QWORD *)v109 + 11);
              v131 = *((_QWORD *)v109 + 12);
              v133 = *((_QWORD *)v109 + 13);
              v132 = *((_QWORD *)v109 + 14);
              sub_10002B764(v129, v128, v130, v131, v133, v132, v117 & 1);
              *((_QWORD *)v108 + 9) = v129;
              *((_QWORD *)v108 + 10) = v128;
              *((_QWORD *)v108 + 11) = v130;
              *((_QWORD *)v108 + 12) = v131;
              *((_QWORD *)v108 + 13) = v133;
              *((_QWORD *)v108 + 14) = v132;
              v108[120] = v206;
            }
            a3 = v212;
            v127 = v214;
            v108[121] = v109[121];
            v106 = v210;
          }
          else
          {
            v121 = *(_OWORD *)v109;
            v122 = *((_OWORD *)v109 + 1);
            v123 = *((_OWORD *)v109 + 3);
            *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
            *((_OWORD *)v108 + 3) = v123;
            *(_OWORD *)v108 = v121;
            *((_OWORD *)v108 + 1) = v122;
            v124 = *((_OWORD *)v109 + 4);
            v125 = *((_OWORD *)v109 + 5);
            v126 = *((_OWORD *)v109 + 6);
            *(_OWORD *)(v108 + 106) = *(_OWORD *)(v109 + 106);
            *((_OWORD *)v108 + 5) = v125;
            *((_OWORD *)v108 + 6) = v126;
            *((_OWORD *)v108 + 4) = v124;
            v127 = v9;
          }
          *((_BYTE *)a1 + v106[6]) = *((_BYTE *)a2 + v106[6]);
          *((_BYTE *)a1 + v106[7]) = *((_BYTE *)a2 + v106[7]);
          *((_BYTE *)a1 + v106[8]) = *((_BYTE *)a2 + v106[8]);
          *((_BYTE *)a1 + v106[9]) = *((_BYTE *)a2 + v106[9]);
          *((_BYTE *)a1 + v106[10]) = *((_BYTE *)a2 + v106[10]);
          v134 = v106[11];
          v135 = *(void **)((char *)a2 + v134);
          *(void **)((char *)a1 + v134) = v135;
          v136 = v135;
          v51 = a1;
          v52 = v127;
          v53 = 0;
          goto LABEL_101;
        case 1u:
          v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v213 = a3;
          v215 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v16))
          {
            case 1u:
              v17 = *a2;
              *a1 = *a2;
              v18 = v17;
              v19 = a1;
              v20 = v16;
              v21 = 1;
              goto LABEL_60;
            case 2u:
              v137 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(a1, a2, v137);
              v19 = a1;
              v20 = v16;
              v21 = 2;
              goto LABEL_60;
            case 3u:
              v138 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(a1, a2, v138);
              v19 = a1;
              v20 = v16;
              v21 = 3;
              goto LABEL_60;
            case 4u:
              v139 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(a1, a2, v139);
              v19 = a1;
              v20 = v16;
              v21 = 4;
              goto LABEL_60;
            case 5u:
              v140 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(a1, a2, v140);
              v19 = a1;
              v20 = v16;
              v21 = 5;
              goto LABEL_60;
            case 6u:
              v141 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(a1, a2, v141);
              v19 = a1;
              v20 = v16;
              v21 = 6;
              goto LABEL_60;
            case 8u:
              v142 = *a2;
              *a1 = *a2;
              v143 = v142;
              v19 = a1;
              v20 = v16;
              v21 = 8;
              goto LABEL_60;
            case 9u:
              v144 = *a2;
              *a1 = *a2;
              v145 = v144;
              v19 = a1;
              v20 = v16;
              v21 = 9;
LABEL_60:
              swift_storeEnumTagMultiPayload(v19, v20, v21);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
              break;
          }
          v146 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v147 = v146[5];
          v148 = (char *)a1 + v147;
          v149 = (char *)a2 + v147;
          if (*(void **)((char *)a2 + v147 + 8))
          {
            v211 = v146;
            *(_QWORD *)v148 = *(_QWORD *)v149;
            v150 = *((_QWORD *)v149 + 1);
            *((_QWORD *)v148 + 1) = v150;
            v151 = (void *)*((_QWORD *)v149 + 2);
            v152 = *((_QWORD *)v149 + 3);
            v153 = *((_QWORD *)v149 + 4);
            v154 = *((_QWORD *)v149 + 5);
            v155 = *((_QWORD *)v149 + 6);
            v207 = *((_QWORD *)v149 + 7);
            v156 = v149[64];
            swift_bridgeObjectRetain(v150);
            sub_10003E1F0(v151, v152, v153, v154, v155, v207, v156);
            *((_QWORD *)v148 + 2) = v151;
            *((_QWORD *)v148 + 3) = v152;
            *((_QWORD *)v148 + 4) = v153;
            *((_QWORD *)v148 + 5) = v154;
            *((_QWORD *)v148 + 6) = v155;
            *((_QWORD *)v148 + 7) = v207;
            v148[64] = v156;
            v148[65] = v149[65];
            v148[66] = v149[66];
            v148[67] = v149[67];
            v148[68] = v149[68];
            v157 = v149[120];
            if (v157 == 255)
            {
              v158 = *(_OWORD *)(v149 + 72);
              v159 = *(_OWORD *)(v149 + 88);
              v160 = *(_OWORD *)(v149 + 104);
              v148[120] = v149[120];
              *(_OWORD *)(v148 + 88) = v159;
              *(_OWORD *)(v148 + 104) = v160;
              *(_OWORD *)(v148 + 72) = v158;
            }
            else
            {
              v208 = v157 & 1;
              v169 = (void *)*((_QWORD *)v149 + 9);
              v168 = *((_QWORD *)v149 + 10);
              v170 = *((_QWORD *)v149 + 11);
              v171 = *((_QWORD *)v149 + 12);
              v173 = *((_QWORD *)v149 + 13);
              v172 = *((_QWORD *)v149 + 14);
              sub_10002B764(v169, v168, v170, v171, v173, v172, v157 & 1);
              *((_QWORD *)v148 + 9) = v169;
              *((_QWORD *)v148 + 10) = v168;
              *((_QWORD *)v148 + 11) = v170;
              *((_QWORD *)v148 + 12) = v171;
              *((_QWORD *)v148 + 13) = v173;
              *((_QWORD *)v148 + 14) = v172;
              v148[120] = v208;
            }
            a3 = v213;
            v167 = v215;
            v148[121] = v149[121];
            v146 = v211;
          }
          else
          {
            v161 = *(_OWORD *)v149;
            v162 = *((_OWORD *)v149 + 1);
            v163 = *((_OWORD *)v149 + 3);
            *((_OWORD *)v148 + 2) = *((_OWORD *)v149 + 2);
            *((_OWORD *)v148 + 3) = v163;
            *(_OWORD *)v148 = v161;
            *((_OWORD *)v148 + 1) = v162;
            v164 = *((_OWORD *)v149 + 4);
            v165 = *((_OWORD *)v149 + 5);
            v166 = *((_OWORD *)v149 + 6);
            *(_OWORD *)(v148 + 106) = *(_OWORD *)(v149 + 106);
            *((_OWORD *)v148 + 5) = v165;
            *((_OWORD *)v148 + 6) = v166;
            *((_OWORD *)v148 + 4) = v164;
            v167 = v9;
          }
          *((_BYTE *)a1 + v146[6]) = *((_BYTE *)a2 + v146[6]);
          *((_BYTE *)a1 + v146[7]) = *((_BYTE *)a2 + v146[7]);
          *((_BYTE *)a1 + v146[8]) = *((_BYTE *)a2 + v146[8]);
          *((_BYTE *)a1 + v146[9]) = *((_BYTE *)a2 + v146[9]);
          *((_BYTE *)a1 + v146[10]) = *((_BYTE *)a2 + v146[10]);
          v174 = v146[11];
          v175 = *(void **)((char *)a2 + v174);
          *(void **)((char *)a1 + v174) = v175;
          v176 = v175;
          v51 = a1;
          v52 = v167;
          v53 = 1;
          goto LABEL_101;
        case 2u:
          v22 = *a2;
          *a1 = *a2;
          v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v24 = (void **)((char *)a1 + v23);
          v25 = (void **)((char *)a2 + v23);
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
          v29 = v22;
          if (v28(v25, 1, v26))
          {
            v30 = sub_10002A750(&qword_100644980);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v25, v26))
            {
              case 1u:
                v66 = *v25;
                *v24 = *v25;
                v67 = v66;
                v68 = v24;
                v69 = v26;
                v70 = 1;
                goto LABEL_76;
              case 2u:
                v177 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v24, v25, v177);
                v68 = v24;
                v69 = v26;
                v70 = 2;
                goto LABEL_76;
              case 3u:
                v178 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v24, v25, v178);
                v68 = v24;
                v69 = v26;
                v70 = 3;
                goto LABEL_76;
              case 4u:
                v179 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v24, v25, v179);
                v68 = v24;
                v69 = v26;
                v70 = 4;
                goto LABEL_76;
              case 5u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v24, v25, v180);
                v68 = v24;
                v69 = v26;
                v70 = 5;
                goto LABEL_76;
              case 6u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v24, v25, v181);
                v68 = v24;
                v69 = v26;
                v70 = 6;
                goto LABEL_76;
              case 8u:
                v182 = *v25;
                *v24 = *v25;
                v183 = v182;
                v68 = v24;
                v69 = v26;
                v70 = 8;
                goto LABEL_76;
              case 9u:
                v184 = *v25;
                *v24 = *v25;
                v185 = v184;
                v68 = v24;
                v69 = v26;
                v70 = 9;
LABEL_76:
                swift_storeEnumTagMultiPayload(v68, v69, v70);
                break;
              default:
                memcpy(v24, v25, *(_QWORD *)(v27 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          v51 = a1;
          v52 = v9;
          v53 = 2;
          goto LABEL_101;
        case 3u:
          v31 = *a2;
          *a1 = *a2;
          v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v33 = (void **)((char *)a1 + v32);
          v34 = (void **)((char *)a2 + v32);
          v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
          v38 = v31;
          if (v37(v34, 1, v35))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v34, v35))
            {
              case 1u:
                v71 = *v34;
                *v33 = *v34;
                v72 = v71;
                v73 = v33;
                v74 = v35;
                v75 = 1;
                goto LABEL_87;
              case 2u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v33, v34, v186);
                v73 = v33;
                v74 = v35;
                v75 = 2;
                goto LABEL_87;
              case 3u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v33, v34, v187);
                v73 = v33;
                v74 = v35;
                v75 = 3;
                goto LABEL_87;
              case 4u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v33, v34, v188);
                v73 = v33;
                v74 = v35;
                v75 = 4;
                goto LABEL_87;
              case 5u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v33, v34, v189);
                v73 = v33;
                v74 = v35;
                v75 = 5;
                goto LABEL_87;
              case 6u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v33, v34, v190);
                v73 = v33;
                v74 = v35;
                v75 = 6;
                goto LABEL_87;
              case 8u:
                v191 = *v34;
                *v33 = *v34;
                v192 = v191;
                v73 = v33;
                v74 = v35;
                v75 = 8;
                goto LABEL_87;
              case 9u:
                v193 = *v34;
                *v33 = *v34;
                v194 = v193;
                v73 = v33;
                v74 = v35;
                v75 = 9;
LABEL_87:
                swift_storeEnumTagMultiPayload(v73, v74, v75);
                break;
              default:
                memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
          v51 = a1;
          v52 = v9;
          v53 = 3;
          goto LABEL_101;
        case 4u:
          v40 = *a2;
          *a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (void **)((char *)a1 + v41);
          v43 = (void **)((char *)a2 + v41);
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
          v47 = v40;
          if (v46(v43, 1, v44))
          {
            v48 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 1u:
                v76 = *v43;
                *v42 = *v43;
                v77 = v76;
                v78 = v42;
                v79 = v44;
                v80 = 1;
                goto LABEL_98;
              case 2u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v42, v43, v195);
                v78 = v42;
                v79 = v44;
                v80 = 2;
                goto LABEL_98;
              case 3u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v42, v43, v196);
                v78 = v42;
                v79 = v44;
                v80 = 3;
                goto LABEL_98;
              case 4u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v42, v43, v197);
                v78 = v42;
                v79 = v44;
                v80 = 4;
                goto LABEL_98;
              case 5u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v42, v43, v198);
                v78 = v42;
                v79 = v44;
                v80 = 5;
                goto LABEL_98;
              case 6u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v42, v43, v199);
                v78 = v42;
                v79 = v44;
                v80 = 6;
                goto LABEL_98;
              case 8u:
                v200 = *v43;
                *v42 = *v43;
                v201 = v200;
                v78 = v42;
                v79 = v44;
                v80 = 8;
                goto LABEL_98;
              case 9u:
                v202 = *v43;
                *v42 = *v43;
                v203 = v202;
                v78 = v42;
                v79 = v44;
                v80 = 9;
LABEL_98:
                swift_storeEnumTagMultiPayload(v78, v79, v80);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v51 = a1;
          v52 = v9;
          v53 = 4;
          goto LABEL_101;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v49 = a2[2];
          a1[2] = v49;
          v50 = v49;
          v51 = a1;
          v52 = v9;
          v53 = 5;
          goto LABEL_101;
        case 6u:
          v61 = *a2;
          *a1 = *a2;
          v62 = v61;
          v51 = a1;
          v52 = v9;
          v53 = 6;
          goto LABEL_101;
        case 7u:
          v54 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v55 = *(_QWORD *)(v54 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v55 + 48))(a2, 1, v54))
          {
            v56 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v81 = *a2;
            *a1 = *a2;
            v82 = *(int *)(v54 + 20);
            v209 = (char *)a1 + v82;
            v83 = (char *)a2 + v82;
            v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v85 = v9;
            v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
            v87 = swift_bridgeObjectRetain(v81);
            v86(v209, v83, v84, v87);
            v9 = v85;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v54);
          }
          v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v89 = (void **)((char *)a1 + v88);
          v90 = (void **)((char *)a2 + v88);
          if (v90[1])
          {
            *v89 = *v90;
            v91 = v90[1];
            v89[1] = v91;
            v92 = (void *)v90[2];
            v89[2] = v92;
            swift_bridgeObjectRetain(v91);
            v93 = v92;
          }
          else
          {
            v94 = *(_OWORD *)v90;
            v89[2] = v90[2];
            *(_OWORD *)v89 = v94;
          }
          v51 = a1;
          v52 = v9;
          v53 = 7;
          goto LABEL_101;
        case 8u:
          v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            *((_BYTE *)a1 + *(int *)(v63 + 20)) = *((_BYTE *)a2 + *(int *)(v63 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v96 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v96 + 20)) = *(void **)((char *)a2 + *(int *)(v96 + 20));
          v51 = a1;
          v52 = v9;
          v53 = 8;
          goto LABEL_101;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v58 = (char *)a1 + v57;
          v59 = (char *)a2 + v57;
          v60 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          v51 = a1;
          v52 = v9;
          v53 = 9;
LABEL_101:
          swift_storeEnumTagMultiPayload(v51, v52, v53);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v8);
  }
  return a1;
}

_QWORD *sub_10019AF08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_35;
          case 3u:
            v66 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_35;
          case 4u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_35;
          case 5u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_35;
          case 6u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v70 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v71 = v70[5];
        v72 = (_OWORD *)((char *)a1 + v71);
        v73 = (_OWORD *)((char *)a2 + v71);
        v74 = v73[3];
        v72[2] = v73[2];
        v72[3] = v74;
        v75 = v73[1];
        *v72 = *v73;
        v72[1] = v75;
        *(_OWORD *)((char *)v72 + 106) = *(_OWORD *)((char *)v73 + 106);
        v76 = v73[6];
        v77 = v73[4];
        v72[5] = v73[5];
        v72[6] = v76;
        v72[4] = v77;
        *((_BYTE *)a1 + v70[6]) = *((_BYTE *)a2 + v70[6]);
        *((_BYTE *)a1 + v70[7]) = *((_BYTE *)a2 + v70[7]);
        *((_BYTE *)a1 + v70[8]) = *((_BYTE *)a2 + v70[8]);
        *((_BYTE *)a1 + v70[9]) = *((_BYTE *)a2 + v70[9]);
        *((_BYTE *)a1 + v70[10]) = *((_BYTE *)a2 + v70[10]);
        *(_QWORD *)((char *)a1 + v70[11]) = *(_QWORD *)((char *)a2 + v70[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_42;
          case 3u:
            v78 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(a1, a2, v78);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_42;
          case 4u:
            v79 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(a1, a2, v79);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_42;
          case 5u:
            v80 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_42;
          case 6u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v82 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v83 = v82[5];
        v84 = (_OWORD *)((char *)a1 + v83);
        v85 = (_OWORD *)((char *)a2 + v83);
        v86 = v85[3];
        v84[2] = v85[2];
        v84[3] = v86;
        v87 = v85[1];
        *v84 = *v85;
        v84[1] = v87;
        *(_OWORD *)((char *)v84 + 106) = *(_OWORD *)((char *)v85 + 106);
        v88 = v85[6];
        v89 = v85[4];
        v84[5] = v85[5];
        v84[6] = v88;
        v84[4] = v89;
        *((_BYTE *)a1 + v82[6]) = *((_BYTE *)a2 + v82[6]);
        *((_BYTE *)a1 + v82[7]) = *((_BYTE *)a2 + v82[7]);
        *((_BYTE *)a1 + v82[8]) = *((_BYTE *)a2 + v82[8]);
        *((_BYTE *)a1 + v82[9]) = *((_BYTE *)a2 + v82[9]);
        *((_BYTE *)a1 + v82[10]) = *((_BYTE *)a2 + v82[10]);
        *(_QWORD *)((char *)a1 + v82[11]) = *(_QWORD *)((char *)a2 + v82[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_49;
            case 3u:
              v90 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v18, v19, v90);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_49;
            case 4u:
              v91 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v18, v19, v91);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_49;
            case 5u:
              v92 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v18, v19, v92);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_49;
            case 6u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_57;
            case 3u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v24, v25, v94);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_57;
            case 4u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v24, v25, v95);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_57;
            case 5u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v24, v25, v96);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_57;
            case 6u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              swift_storeEnumTagMultiPayload(v30, v32, 2);
              break;
            case 3u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v30, v31, v98);
              swift_storeEnumTagMultiPayload(v30, v32, 3);
              break;
            case 4u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v30, v31, v99);
              swift_storeEnumTagMultiPayload(v30, v32, 4);
              break;
            case 5u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v30, v31, v100);
              swift_storeEnumTagMultiPayload(v30, v32, 5);
              break;
            case 6u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              swift_storeEnumTagMultiPayload(v30, v32, 6);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v57 = *(int *)(v35 + 20);
          v58 = (char *)a1 + v57;
          v59 = (char *)a2 + v57;
          v60 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v61 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        *(_OWORD *)v62 = *(_OWORD *)v63;
        *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v64 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(a1, a2, v64);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v65 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v65 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v65 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *sub_10019BAA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v7))
          {
            case 2u:
              v8 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
              v9 = a1;
              v10 = v7;
              v11 = 2;
              goto LABEL_36;
            case 3u:
              v66 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
              v9 = a1;
              v10 = v7;
              v11 = 3;
              goto LABEL_36;
            case 4u:
              v67 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
              v9 = a1;
              v10 = v7;
              v11 = 4;
              goto LABEL_36;
            case 5u:
              v68 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
              v9 = a1;
              v10 = v7;
              v11 = 5;
              goto LABEL_36;
            case 6u:
              v69 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
              v9 = a1;
              v10 = v7;
              v11 = 6;
LABEL_36:
              swift_storeEnumTagMultiPayload(v9, v10, v11);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v70 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v71 = v70[5];
          v72 = (_OWORD *)((char *)a1 + v71);
          v73 = (_OWORD *)((char *)a2 + v71);
          v74 = v73[3];
          v72[2] = v73[2];
          v72[3] = v74;
          v75 = v73[1];
          *v72 = *v73;
          v72[1] = v75;
          *(_OWORD *)((char *)v72 + 106) = *(_OWORD *)((char *)v73 + 106);
          v76 = v73[6];
          v77 = v73[4];
          v72[5] = v73[5];
          v72[6] = v76;
          v72[4] = v77;
          *((_BYTE *)a1 + v70[6]) = *((_BYTE *)a2 + v70[6]);
          *((_BYTE *)a1 + v70[7]) = *((_BYTE *)a2 + v70[7]);
          *((_BYTE *)a1 + v70[8]) = *((_BYTE *)a2 + v70[8]);
          *((_BYTE *)a1 + v70[9]) = *((_BYTE *)a2 + v70[9]);
          *((_BYTE *)a1 + v70[10]) = *((_BYTE *)a2 + v70[10]);
          *(_QWORD *)((char *)a1 + v70[11]) = *(_QWORD *)((char *)a2 + v70[11]);
          v45 = a1;
          v46 = v6;
          v47 = 0;
          goto LABEL_68;
        case 1u:
          v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v12))
          {
            case 2u:
              v13 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
              v14 = a1;
              v15 = v12;
              v16 = 2;
              goto LABEL_43;
            case 3u:
              v78 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(a1, a2, v78);
              v14 = a1;
              v15 = v12;
              v16 = 3;
              goto LABEL_43;
            case 4u:
              v79 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(a1, a2, v79);
              v14 = a1;
              v15 = v12;
              v16 = 4;
              goto LABEL_43;
            case 5u:
              v80 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
              v14 = a1;
              v15 = v12;
              v16 = 5;
              goto LABEL_43;
            case 6u:
              v81 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
              v14 = a1;
              v15 = v12;
              v16 = 6;
LABEL_43:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
              break;
          }
          v82 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v83 = v82[5];
          v84 = (_OWORD *)((char *)a1 + v83);
          v85 = (_OWORD *)((char *)a2 + v83);
          v86 = v85[3];
          v84[2] = v85[2];
          v84[3] = v86;
          v87 = v85[1];
          *v84 = *v85;
          v84[1] = v87;
          *(_OWORD *)((char *)v84 + 106) = *(_OWORD *)((char *)v85 + 106);
          v88 = v85[6];
          v89 = v85[4];
          v84[5] = v85[5];
          v84[6] = v88;
          v84[4] = v89;
          *((_BYTE *)a1 + v82[6]) = *((_BYTE *)a2 + v82[6]);
          *((_BYTE *)a1 + v82[7]) = *((_BYTE *)a2 + v82[7]);
          *((_BYTE *)a1 + v82[8]) = *((_BYTE *)a2 + v82[8]);
          *((_BYTE *)a1 + v82[9]) = *((_BYTE *)a2 + v82[9]);
          *((_BYTE *)a1 + v82[10]) = *((_BYTE *)a2 + v82[10]);
          *(_QWORD *)((char *)a1 + v82[11]) = *(_QWORD *)((char *)a2 + v82[11]);
          v45 = a1;
          v46 = v6;
          v47 = 1;
          goto LABEL_68;
        case 2u:
          *a1 = *a2;
          v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v18 = (char *)a1 + v17;
          v19 = (char *)a2 + v17;
          v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v21 = *(_QWORD *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
            v22 = sub_10002A750(&qword_100644980);
            memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v19, v20))
            {
              case 2u:
                v48 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
                v49 = v18;
                v50 = v20;
                v51 = 2;
                goto LABEL_50;
              case 3u:
                v90 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v18, v19, v90);
                v49 = v18;
                v50 = v20;
                v51 = 3;
                goto LABEL_50;
              case 4u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v18, v19, v91);
                v49 = v18;
                v50 = v20;
                v51 = 4;
                goto LABEL_50;
              case 5u:
                v92 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v18, v19, v92);
                v49 = v18;
                v50 = v20;
                v51 = 5;
                goto LABEL_50;
              case 6u:
                v93 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
                v49 = v18;
                v50 = v20;
                v51 = 6;
LABEL_50:
                swift_storeEnumTagMultiPayload(v49, v50, v51);
                break;
              default:
                memcpy(v18, v19, *(_QWORD *)(v21 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
          v45 = a1;
          v46 = v6;
          v47 = 2;
          goto LABEL_68;
        case 3u:
          *a1 = *a2;
          v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            v28 = sub_10002A750(&qword_100644980);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v25, v26))
            {
              case 2u:
                v52 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
                v53 = v24;
                v54 = v26;
                v55 = 2;
                goto LABEL_58;
              case 3u:
                v94 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v24, v25, v94);
                v53 = v24;
                v54 = v26;
                v55 = 3;
                goto LABEL_58;
              case 4u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v24, v25, v95);
                v53 = v24;
                v54 = v26;
                v55 = 4;
                goto LABEL_58;
              case 5u:
                v96 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v24, v25, v96);
                v53 = v24;
                v54 = v26;
                v55 = 5;
                goto LABEL_58;
              case 6u:
                v97 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
                v53 = v24;
                v54 = v26;
                v55 = 6;
LABEL_58:
                swift_storeEnumTagMultiPayload(v53, v54, v55);
                break;
              default:
                memcpy(v24, v25, *(_QWORD *)(v27 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          v45 = a1;
          v46 = v6;
          v47 = 3;
          goto LABEL_68;
        case 4u:
          *a1 = *a2;
          v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v33 = *(_QWORD *)(v32 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v31, v32))
            {
              case 2u:
                v56 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
                swift_storeEnumTagMultiPayload(v30, v32, 2);
                break;
              case 3u:
                v98 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v30, v31, v98);
                swift_storeEnumTagMultiPayload(v30, v32, 3);
                break;
              case 4u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v30, v31, v99);
                swift_storeEnumTagMultiPayload(v30, v32, 4);
                break;
              case 5u:
                v100 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v30, v31, v100);
                swift_storeEnumTagMultiPayload(v30, v32, 5);
                break;
              case 6u:
                v101 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
                swift_storeEnumTagMultiPayload(v30, v32, 6);
                break;
              default:
                memcpy(v30, v31, *(_QWORD *)(v33 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          }
          v45 = a1;
          v46 = v6;
          v47 = 4;
          goto LABEL_68;
        case 7u:
          v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v36 = *(_QWORD *)(v35 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
          {
            v37 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v57 = *(int *)(v35 + 20);
            v58 = (char *)a1 + v57;
            v59 = (char *)a2 + v57;
            v60 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
          }
          v61 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v62 = (char *)a1 + v61;
          v63 = (char *)a2 + v61;
          *(_OWORD *)v62 = *(_OWORD *)v63;
          *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
          v45 = a1;
          v46 = v6;
          v47 = 7;
          goto LABEL_68;
        case 8u:
          v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v39 = *(_QWORD *)(v38 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
          {
            v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v64 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(a1, a2, v64);
            *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
          }
          v65 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v65 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v65 + 20));
          v45 = a1;
          v46 = v6;
          v47 = 8;
          goto LABEL_68;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v42 = (char *)a1 + v41;
          v43 = (char *)a2 + v41;
          v44 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
          v45 = a1;
          v46 = v6;
          v47 = 9;
LABEL_68:
          swift_storeEnumTagMultiPayload(v45, v46, v47);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10019C660(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_10019C6DC()
{
  return sub_10017AF98();
}

NSString sub_10019C6F4()
{
  return sub_10017B174();
}

uint64_t sub_10019C7D8(uint64_t a1)
{
  return sub_10017B220(a1);
}

uint64_t sub_10019C7EC()
{
  return sub_10017B02C();
}

uint64_t sub_10019C880()
{
  return sub_10017A230();
}

uint64_t sub_10019C89C@<X0>(uint64_t a1@<X8>)
{
  return sub_10017B258(a1);
}

uint64_t sub_10019C8B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10017B158(a1);
}

void sub_10019C8D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Bool IsNativeType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v1 = v0;
  v2 = *v0;
  Strong = swift_weakLoadStrong(v0 + 7);
  swift_retain(v0);
  v4 = 0;
  if (!Strong)
    return;
  v5 = v1;
  while (1)
  {
    v6 = __OFADD__(v4++, 1);
    if (v6)
      goto LABEL_23;
    v7 = Strong;
    swift_beginAccess(Strong + 64, v18, 0, 0);
    v8 = *(_QWORD *)(Strong + 64);
    swift_retain(v7);
    swift_bridgeObjectRetain(v8);
    if (Array.endIndex.getter(v9, v2))
      break;
LABEL_3:
    swift_release(v5);
LABEL_4:
    swift_bridgeObjectRelease(v8);
    Strong = swift_weakLoadStrong(v7 + 56);
    swift_release(v7);
    v5 = (_QWORD *)v7;
    if (!Strong)
      return;
  }
  v10 = 4;
  while (1)
  {
    v11 = v10 - 4;
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v10 - 4, IsNativeType, v8, v2);
    if (!IsNativeType)
      break;
    v13 = *(_QWORD *)(v8 + 8 * v10);
    v14 = swift_retain(v13);
    v6 = __OFADD__(v11, 1);
    v15 = v10 - 3;
    if (v6)
      goto LABEL_20;
LABEL_10:
    if ((_QWORD *)v13 == v5)
    {
      swift_release_n(v5, 2);
      goto LABEL_4;
    }
    v16 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_21;
    v17 = sub_10019D5D4(v14);
    swift_release(v13);
    v6 = __OFADD__(v16, v17);
    v4 = v16 + v17;
    if (v6)
      goto LABEL_22;
    ++v10;
    if (v15 == Array.endIndex.getter(v8, v2))
      goto LABEL_3;
  }
  v14 = _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8, v2);
  v13 = v14;
  v6 = __OFADD__(v11, 1);
  v15 = v10 - 3;
  if (!v6)
    goto LABEL_10;
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_10019CA80(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[24];

  v2 = v1;
  v4 = *v1;
  swift_beginAccess(v1 + 8, v20, 1, 0);
  v19 = v1[8];
  v5 = type metadata accessor for Array(0, v4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  if ((Collection.isEmpty.getter(v5, WitnessTable) & 1) == 0)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100012DC4(v7, (uint64_t)qword_10064A340);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.fault.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Expand should begin with no child nodes", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

  }
  if (*((_BYTE *)v2 + 72) != 1)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100012DC4(v12, (uint64_t)qword_10064A340);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Expand should begin with collapsed state", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
  *((_BYTE *)v2 + 72) = 2;
  v17 = v2[8];
  v2[8] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v17);
  v19 = Array.init()(v4);
  sub_1000244E0(&v19);
  sub_10019DBE0();
  return v19;
}

uint64_t sub_10019CCB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v2 = v1;
  v3 = *v1;
  if (*((_BYTE *)v1 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_10064A340);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.fault.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Collapse should begin with expanded state", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

  }
  v9 = sub_10019D5D4(a1);
  *((_BYTE *)v2 + 72) = 1;
  v10 = static Array._allocateUninitialized(_:)(0, v3);
  swift_beginAccess(v2 + 8, v13, 1, 0);
  v11 = v2[8];
  v2[8] = v10;
  swift_bridgeObjectRelease(v11);
  v2[5] = 0;
  *((_BYTE *)v2 + 48) = 0;
  sub_10019DBE0();
  return v9;
}

void sub_10019CDFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = v1;
  v4 = *v1;
  if (*((_BYTE *)v1 + 72) == 2)
    goto LABEL_6;
  if (qword_10063D408 != -1)
    goto LABEL_16;
  while (1)
  {
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_10064A340);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Remove requires expanded state", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

LABEL_6:
    swift_beginAccess(v2 + 8, v18, 32, 0);
    Array.subscript.getter(&v17, a1, v2[8], v4);
    swift_endAccess(v18);
    v10 = sub_10019DACC(a1);
    v11 = sub_10019D5D4(v10);
    v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    swift_beginAccess(v2 + 8, v18, 33, 0);
    v13 = type metadata accessor for Array(0, v4);
    Array.remove(at:)(&v17, a1, v13);
    swift_endAccess(v18);
    swift_release();
    if ((v2[6] & 1) == 0)
      break;
LABEL_10:
    sub_10019DBE0();
    swift_release();
    if (__OFADD__(v10, v12))
      goto LABEL_14;
    if (v10 + v12 >= v10)
      return;
LABEL_15:
    __break(1u);
LABEL_16:
    swift_once(&qword_10063D408, sub_10019D650);
  }
  v14 = v2[5];
  v15 = __OFSUB__(v14, v12);
  v16 = v14 - v12;
  if (!v15)
  {
    v2[5] = v16;
    *((_BYTE *)v2 + 48) = 0;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_10019CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD v25[3];
  uint64_t v26;

  v3 = v2;
  v6 = *v2;
  if (*((_BYTE *)v2 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100012DC4(v7, (uint64_t)qword_10064A340);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.fault.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Insert requires expanded state", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

  }
  Strong = swift_weakLoadStrong(a1 + 56);
  if (!Strong || (v13 = Strong, swift_release(), (uint64_t *)v13 != v3))
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_10064A340);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.fault.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Subtree parent is not set correctly before calling insert.", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  sub_10019DACC(a2);
  v26 = a1;
  swift_beginAccess(v3 + 8, v25, 33, 0);
  v19 = type metadata accessor for Array(0, v6);
  swift_retain();
  Array.insert(_:at:)(&v26, a2, v19);
  swift_endAccess(v25);
  v25[0] = Array.init()(v6);
  sub_10019D6E0(v25);
  v20 = v25[0];
  if ((v3[6] & 1) != 0)
    goto LABEL_17;
  v21 = v3[5];
  swift_bridgeObjectRetain(v25[0]);
  v23 = Array.count.getter(v22, v6);
  result = swift_bridgeObjectRelease(v20);
  if (!__OFADD__(v21, v23))
  {
    v3[5] = v21 + v23;
    *((_BYTE *)v3 + 48) = 0;
LABEL_17:
    sub_10019DBE0();
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019D26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v4 = v3;
  v8 = *v3;
  if (*((_BYTE *)v3 + 72) != 2 || *(_BYTE *)(a2 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_10064A340);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.fault.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Move requires expanded state", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  if ((uint64_t *)a2 != v4 || a1 >= a3)
  {
    result = a3;
LABEL_13:
    sub_10019DACC(result);
    swift_beginAccess(v4 + 8, v20, 32, 0);
    Array.subscript.getter(&v19, a1, v4[8], v8);
    v15 = v19;
    swift_endAccess(v20);
    sub_10019CDFC(a1);
    v17 = v16;
    swift_weakAssign(v15 + 56, a2);
    v18 = sub_10019CFE4(v15, a3);
    swift_release();
    swift_bridgeObjectRelease(v18);
    return v17;
  }
  result = a3 + 1;
  if (!__OFADD__(a3, 1))
    goto LABEL_13;
  __break(1u);
  return result;
}

double sub_10019D434@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  double result;
  __int128 v18;
  _BYTE v19[4];
  int v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _BYTE v24[24];

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v5, &unk_1005987EC, &unk_1005987FC);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v13 = &v19[-v12];
  v14 = v2[3];
  if (*((_BYTE *)v2 + 32))
    v14 = 0;
  v21 = v14;
  v20 = *((unsigned __int8 *)v2 + 72);
  v15 = (uint64_t)v2 + *(_QWORD *)(v4 + 144);
  swift_beginAccess(v15, v24, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v15, v5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v5, v9);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, v5, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  _convertToAnyHashable<A>(_:)(v22, v13, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  *(_QWORD *)a2 = v21;
  *(_BYTE *)(a2 + 8) = v20;
  result = *(double *)v22;
  v18 = v22[1];
  *(_OWORD *)(a2 + 16) = v22[0];
  *(_OWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 48) = v23;
  return result;
}

uint64_t sub_10019D5D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v3[5];
  uint64_t v4;

  if (*(_BYTE *)(v1 + 48) != 1)
    return *(_QWORD *)(v1 + 40);
  v4 = 0;
  __chkstk_darwin(a1);
  v3[2] = &v4;
  sub_10019D9A4((uint64_t)sub_10019E028, (uint64_t)v3);
  result = v4;
  *(_QWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_10019D650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064A340);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064A340);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10019D6E0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;

  v2 = v1;
  v4 = *v2;
  Strong = swift_weakLoadStrong(v2 + 7);
  if (!Strong || (v6 = *(_QWORD *)(Strong + 24), v7 = *(unsigned __int8 *)(Strong + 32), swift_release(), v7 == 1))
    v6 = -1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    v2[3] = v6 + 1;
    *((_BYTE *)v2 + 32) = 0;
    v9 = v2;
    v8 = type metadata accessor for Array(0, v4);
    swift_retain();
    Array.append(_:)(&v9, v8);
    sub_1000244E0(a1);
  }
}

uint64_t sub_10019D788()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_weakAssign(v0 + 7, 0);
  swift_beginAccess(v0 + 8, v3, 33, 0);
  type metadata accessor for Array(0, v1);
  Array.removeAll(keepingCapacity:)(0);
  return swift_endAccess(v3);
}

uint64_t sub_10019D7EC(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[24];

  v6 = *(_QWORD *)v3;
  swift_weakAssign(v3 + 56, a2);
  v7 = &v3[*(_QWORD *)(*(_QWORD *)v3 + 144)];
  swift_beginAccess(v7, v9, 33, 0);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 24))(v7, a1);
  result = swift_endAccess(v9);
  v3[72] = a3;
  return result;
}

uint64_t sub_10019D874(uint64_t a1, _QWORD *a2)
{
  return sub_10019D880(a1, a2, (void (*)(uint64_t, _QWORD *))sub_10019D874);
}

uint64_t sub_10019D880(uint64_t result, _QWORD *a2, void (*a3)(uint64_t, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (*(_BYTE *)(result + 72) == 2)
  {
    v5 = result;
    swift_beginAccess(result + 64, v11, 0, 0);
    v6 = *(_QWORD *)(v5 + 64);
    if ((unint64_t)v6 >> 62)
      goto LABEL_14;
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v6);
    if (v7)
    {
      while (v7 >= 1)
      {
        v8 = 0;
        while (1)
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
          }
          else
          {
            v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
            swift_retain(v9);
          }
          if (__OFADD__(*a2, 1))
            break;
          ++v8;
          ++*a2;
          a3(v9, a2);
          swift_release(v9);
          if (v7 == v8)
            return swift_bridgeObjectRelease(v6);
        }
        __break(1u);
LABEL_14:
        if (v6 < 0)
          v10 = v6;
        else
          v10 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        result = _CocoaArrayWrapper.endIndex.getter(v10);
        v7 = result;
        if (!result)
          return swift_bridgeObjectRelease(v6);
      }
      __break(1u);
    }
    else
    {
      return swift_bridgeObjectRelease(v6);
    }
  }
  return result;
}

uint64_t sub_10019D9A4(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  Swift::Bool IsNativeType;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  if (*((_BYTE *)v2 + 72) != 2)
    return result;
  v4 = (void (*)(uint64_t))result;
  v5 = *v2;
  swift_beginAccess(v2 + 8, v13, 0, 0);
  v6 = v2[8];
  v7 = swift_bridgeObjectRetain(v6);
  if (!Array.endIndex.getter(v7, v5))
    return swift_bridgeObjectRelease(v6);
  for (i = 4; ; ++i)
  {
    v9 = i - 4;
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(i - 4, IsNativeType, v6, v5);
    if (!IsNativeType)
      break;
    v11 = *(_QWORD *)(v6 + 8 * i);
    swift_retain(v11);
    v12 = i - 3;
    if (__OFADD__(v9, 1))
      goto LABEL_10;
LABEL_6:
    v4(v11);
    sub_10019D9A4(v4, a2);
    swift_release(v11);
    if (v12 == Array.endIndex.getter(v6, v5))
      return swift_bridgeObjectRelease(v6);
  }
  v11 = _ArrayBuffer._getElementSlowPath(_:)(i - 4, v6, v5);
  v12 = i - 3;
  if (!__OFADD__(v9, 1))
    goto LABEL_6;
LABEL_10:
  __break(1u);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10019DACC(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[4];
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v3 = *v1;
    swift_beginAccess(v1 + 8, v16, 32, 0);
    v4 = Array.subscript.getter(0, v2, v1[8], v3);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v11 = swift_endAccess(v16);
    v16[0] = v4;
    v16[1] = v6;
    v16[2] = v8;
    v16[3] = v10;
    v15 = 0;
    __chkstk_darwin(v11);
    v14[1] = *(_OWORD *)(v3 + 80);
    v12 = type metadata accessor for ArraySlice(0, v3);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ArraySlice<A>, v12);
    Sequence.reduce<A>(_:_:)(&v17, &v15, sub_10019E174, v14, v12, &type metadata for Int, WitnessTable);
    swift_unknownObjectRelease(v16[0]);
    return v17;
  }
  return result;
}

uint64_t sub_10019DBE0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t Strong;

  result = swift_weakLoadStrong(v0 + 56);
  if (result)
  {
    v2 = result;
    do
    {
      *(_QWORD *)(v2 + 40) = 0;
      *(_BYTE *)(v2 + 48) = 1;
      swift_retain(v2);
      Strong = swift_weakLoadStrong(v2 + 56);
      result = swift_release_n(v2, 2);
      v2 = Strong;
    }
    while (Strong);
  }
  return result;
}

char *sub_10019DC48()
{
  char *v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  swift_weakDestroy(v0 + 56);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 8));
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 144)]);
  return v0;
}

uint64_t sub_10019DC94()
{
  uint64_t v0;

  sub_10019DC48();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10019DCB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  void *object;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE v39[24];

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(a1);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[4] & 1) != 0)
  {
    countAndFlagsBits = 0;
    if ((result & 1) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v10 = v2[3];
  countAndFlagsBits = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if ((result & 1) == 0)
    {
      countAndFlagsBits = 0;
LABEL_8:
      v13 = (void *)0xE000000000000000;
      v14 = v3;
LABEL_9:
      v15 = 7104878;
      v16 = (uint64_t)v2 + *(_QWORD *)(v14 + 144);
      swift_beginAccess(v16, v39, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v16, v4);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 88) + 32))(v4);
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if ((v2[4] & 1) != 0)
      {
        v20 = (void *)0xE300000000000000;
        v21 = 7104878;
        if ((v2[6] & 1) == 0)
        {
LABEL_11:
          v37 = v2[5];
          v15 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v23 = v22;
LABEL_14:
          v37 = 0;
          v38 = 0xE000000000000000;
          _StringGuts.grow(_:)(58);
          v25._countAndFlagsBits = countAndFlagsBits;
          v25._object = v13;
          String.append(_:)(v25);
          swift_bridgeObjectRelease(v13);
          v26._countAndFlagsBits = 0x3D64692865646F4ELL;
          v26._object = (void *)0xE800000000000000;
          String.append(_:)(v26);
          v36 = v2[2];
          v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          object = v27._object;
          String.append(_:)(v27);
          swift_bridgeObjectRelease(object);
          v29._countAndFlagsBits = 0x203A6D657469202CLL;
          v29._object = (void *)0xE900000000000022;
          String.append(_:)(v29);
          v30._countAndFlagsBits = v17;
          v30._object = v19;
          String.append(_:)(v30);
          swift_bridgeObjectRelease(v19);
          v31._object = (void *)0xE90000000000003DLL;
          v31._countAndFlagsBits = 0x6C6576656C202C22;
          String.append(_:)(v31);
          v32._countAndFlagsBits = v21;
          v32._object = v20;
          String.append(_:)(v32);
          swift_bridgeObjectRelease(v20);
          v33._object = (void *)0x8000000100568160;
          v33._countAndFlagsBits = 0xD000000000000015;
          String.append(_:)(v33);
          v34._countAndFlagsBits = v15;
          v34._object = v23;
          String.append(_:)(v34);
          swift_bridgeObjectRelease(v23);
          v35._countAndFlagsBits = 41;
          v35._object = (void *)0xE100000000000000;
          String.append(_:)(v35);
          return v37;
        }
      }
      else
      {
        v37 = v2[3];
        v21 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v20 = v24;
        if ((v2[6] & 1) == 0)
          goto LABEL_11;
      }
      v23 = (void *)0xE300000000000000;
      goto LABEL_14;
    }
LABEL_6:
    v11._countAndFlagsBits = 9;
    v11._object = (void *)0xE100000000000000;
    v12 = String.init(repeating:count:)(v11, countAndFlagsBits);
    countAndFlagsBits = v12._countAndFlagsBits;
    v13 = v12._object;
    v14 = *v2;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019DF80()
{
  return sub_10019DCB8(0);
}

uint64_t sub_10019DF88()
{
  return sub_10019DF80();
}

Swift::Int sub_10019DFA8()
{
  uint64_t v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  Hasher._combine(_:)(*(_QWORD *)(v0 + 16));
  return Hasher._finalize()();
}

Swift::Int sub_10019DFE8()
{
  return sub_10019DFA8();
}

void sub_10019E008()
{
  sub_100029530();
}

void sub_10019E028()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  if (__OFADD__(*v1, 1))
    __break(1u);
  else
    ++*v1;
}

uint64_t *sub_10019E044(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;

  v7 = *v3;
  v3[3] = 0;
  *((_BYTE *)v3 + 32) = 1;
  v3[5] = 0;
  *((_BYTE *)v3 + 48) = 1;
  swift_weakInit(v3 + 7, 0);
  v3[8] = Array.init()(v7);
  if (qword_10063D410 != -1)
    swift_once(&qword_10063D410, sub_100007280);
  v3[2] = TTRCounterBasedIdentifierGenerator.allocID()();
  swift_weakAssign(v3 + 7, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 144), a1);
  *((_BYTE *)v3 + 72) = a3;
  return v3;
}

uint64_t *sub_10019E124(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return sub_10019E044(a1, a2, a3);
}

_QWORD *sub_10019E174@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *result + 1;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    result = (_QWORD *)sub_10019D5D4((uint64_t)result);
    if (!__OFADD__(v3, result))
    {
      *a2 = (char *)result + v3;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10019E1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064A3E0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064A3E0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10019E258()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v1 = v0;
  v2 = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v0[14];
  v6 = v0[15];
  sub_10001413C(v0 + 11, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(v5, v6);
  type metadata accessor for TTREditSectionsViewModel(0);
  if (v7)
    v8 = (_QWORD *)v7;
  else
    v8 = _swiftEmptyArrayStorage;
  TTREditSectionsViewModel.__allocating_init(shouldHideEmptySections:sections:shouldCategorizeGroceryItems:)(*((unsigned __int8 *)v1 + 176), v8, *((unsigned __int8 *)v1 + 177));
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply;
  swift_beginAccess(v9, v13, 0, 0);
  sub_10019FD60(v9, (uint64_t)v4);
  v10 = TTREditSectionsViewModel.applying(_:)(v4);
  swift_release();
  sub_10019FDA4((uint64_t)v4);
  return v10;
}

uint64_t sub_10019E364()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  char v18;
  char v19;

  v1 = v0;
  v2 = v0[28];
  v3 = v0[30];
  v4 = (v2 | v3) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = v0[27];
    v7 = v0[29];
    if (v6 == v7 && v2 == v3)
      v4 = 1;
    else
      v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v2, v7, v3, 0);
  }
  v9 = v0[31];
  v10 = v0[14];
  v11 = v0[15];
  sub_10001413C(v0 + 11, v10);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 64);
  v13 = swift_bridgeObjectRetain(v9);
  v14 = v12(v10, v11, v13);
  v15 = v14;
  if (!v9)
  {
    if (!v14)
    {
      v18 = 0;
      if ((v1[26] & 1) != 0)
        goto LABEL_19;
      goto LABEL_21;
    }
LABEL_18:
    swift_bridgeObjectRelease(v14);
    v18 = 1;
    if ((v1[26] & 1) != 0)
      goto LABEL_19;
LABEL_21:
    v19 = v4 ^ 1 | v18;
    return v19 & 1;
  }
  if (!v14)
  {
    v14 = v9;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain(v9);
  v17 = sub_100096CAC(v16, v15);
  swift_bridgeObjectRelease_n(v9, 2);
  swift_bridgeObjectRelease(v15);
  v18 = v17 ^ 1;
  if ((v1[26] & 1) == 0)
    goto LABEL_21;
LABEL_19:
  v19 = 1;
  return v19 & 1;
}

void sub_10019E494(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  int v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  char v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  NSString v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t (*v64)(char *, unint64_t, uint64_t);
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _BYTE v70[32];

  v4 = v3;
  v52 = a1;
  v53 = a3;
  v67 = a2;
  v5 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v58 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v68 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v69 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[14];
  v11 = v3[15];
  v57 = v3 + 11;
  sub_10001413C(v3 + 11, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
  if (v12)
  {
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
    {
      swift_bridgeObjectRelease(v12);
      return;
    }
    v55 = (char *)v3 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply;
    v14 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v51 = v12;
    v15 = v12 + v14;
    v66 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
    v54 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
    v16 = *(_QWORD *)(v68 + 72);
    v64 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v68 + 16);
    v65 = v16;
    v17 = v52;
    v18 = v58;
    v59 = v8;
    v56 = v5;
    for (i = v64(v69, v12 + v14, v8); ; i = v64(v69, v15, v8))
    {
      REMRemindersListDataView.SectionLite.type.getter(i);
      v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v7, v5);
      if (v20 == v66)
        break;
      if (v20 != v54)
      {
        _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
        __break(1u);
        return;
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v8);
LABEL_4:
      v15 += v65;
      if (!--v13)
      {
        swift_bridgeObjectRelease(v51);
        return;
      }
    }
    v21 = v17;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v7, v5);
    v22 = *(void **)v7;
    v23 = *((_QWORD *)v7 + 2);
    v24 = *((_QWORD *)v7 + 4);
    v61 = *((_QWORD *)v7 + 3);
    v62 = v24;
    swift_bridgeObjectRelease(v23);
    v25 = v4[14];
    v26 = v4[15];
    sub_10001413C(v57, v25);
    v27 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 136))(v22, v25, v26);
    v28 = v55;
    swift_beginAccess(v55, v70, 32, 0);
    v29 = *(_QWORD *)&v28[*(int *)(type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0) + 20)];
    v30 = *(_QWORD *)(v29 + 16);
    v63 = v22;
    if (v30)
    {
      v31 = v22;
      v32 = sub_1002AA364((uint64_t)v31);
      if ((v33 & 1) != 0)
      {
        v34 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v32);
        v35 = v34[1];
        v60 = *v34;
        swift_bridgeObjectRetain(v35);
      }
      else
      {
        v60 = 0;
        v35 = 0;
      }

      v8 = v59;
    }
    else
    {
      v60 = 0;
      v35 = 0;
    }
    swift_endAccess(v70);
    v17 = v21;
    if (v27)
    {
      v36 = objc_msgSend(v27, "displayName");
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

      v17 = v52;
      if (v37 == v52 && v39 == v67)
      {
        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v35);
        v8 = v59;
        v42 = v62;
        goto LABEL_28;
      }
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v52, v67, 0);
      swift_bridgeObjectRelease(v39);
      v8 = v59;
      if ((v41 & 1) != 0)
      {
        swift_bridgeObjectRelease(v35);
        v42 = v62;
LABEL_28:
        v44 = (void *)v4[23];
        v4[23] = v27;
        v45 = v27;

        v46 = v4[25];
        v4[24] = v61;
        v4[25] = v42;
        swift_bridgeObjectRetain(v42);
        v47 = swift_bridgeObjectRelease(v46).n128_u64[0];
        if (v42)
        {
          v48 = String._bridgeToObjectiveC()();
          v47 = swift_bridgeObjectRelease(v42).n128_u64[0];
        }
        else
        {
          v48 = 0;
        }
        v5 = v56;
        objc_msgSend(v53, "setPlaceholder:", v48, *(double *)&v47);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v8);
        goto LABEL_33;
      }
    }
    v42 = v62;
    if (v35)
    {
      if (v60 == v17 && v35 == v67)
      {
        swift_bridgeObjectRelease(v35);
        goto LABEL_28;
      }
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v35, v17, v67, 0);
      swift_bridgeObjectRelease(v35);
      if ((v43 & 1) != 0)
        goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v8);

    swift_bridgeObjectRelease(v42);
    v5 = v56;
LABEL_33:
    v18 = v58;
    if (!v4[30])
    {
      v49 = v67;
      v4[29] = v17;
      v4[30] = v49;
      swift_bridgeObjectRelease(0);
      swift_bridgeObjectRetain(v49);
    }
    goto LABEL_4;
  }
}

void sub_10019E94C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *object;
  uint64_t countAndFlagsBits;
  double v13;
  uint64_t v14;
  id v15;
  void *v16;
  NSString v17;
  id v18;
  char *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _BYTE v31[24];
  Swift::tuple_name_String_isValid_Bool v32;

  v4 = (void *)v3[23];
  if (v4)
  {
    v5 = v3;
    v7 = qword_10063D418;
    v8 = v4;
    if (v7 != -1)
      swift_once(&qword_10063D418, sub_10019E1C8);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_10064A3E0);
    v10 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Edit Sections Rename Section", 28, 2, v10);
    swift_bridgeObjectRelease(v10);
    v32 = String.validatedSectionName()();
    object = v32.name._object;
    if (v32.isValid)
    {
      countAndFlagsBits = v32.name._countAndFlagsBits;
    }
    else
    {
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v32.name._object).n128_u64[0];
      v14 = v5[25];
      if (v14)
      {
        countAndFlagsBits = v5[24];
        object = (void *)v5[25];
      }
      else
      {
        v15 = objc_msgSend(v8, "displayName", v13);
        countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        object = v16;

        v14 = 0;
      }
      swift_bridgeObjectRetain(v14);
      v17 = String._bridgeToObjectiveC()();
      objc_msgSend(a3, "setText:", v17);

    }
    v18 = objc_msgSend(v8, "objectID", swift_bridgeObjectRetain(object).n128_f64[0]);
    v19 = (char *)v5 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply;
    swift_beginAccess((char *)v5 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply, v31, 33, 0);
    v20 = *(int *)(type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0) + 20);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v19[v20]);
    v30 = *(_QWORD *)&v19[v20];
    *(_QWORD *)&v19[v20] = 0x8000000000000000;
    sub_10019FBE8(countAndFlagsBits, (uint64_t)object, v18, isUniquelyReferenced_nonNull_native);
    v23 = v22;
    v24 = *(_QWORD *)&v19[v20];
    *(_QWORD *)&v19[v20] = v30;
    swift_bridgeObjectRelease(v24);
    swift_endAccess(v31);

    swift_bridgeObjectRelease(v23);
    v25 = v5[14];
    v26 = v5[15];
    sub_10001413C(v5 + 11, v25);
    (*(void (**)(id, uint64_t, void *, uint64_t, uint64_t))(v26 + 96))(v8, countAndFlagsBits, object, v25, v26);
    v27._object = (void *)0x80000001005682D0;
    v27._countAndFlagsBits = 0xD000000000000019;
    TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v27);

    v28 = v5[28];
    v5[27] = countAndFlagsBits;
    v5[28] = object;
    swift_bridgeObjectRelease(v28);
    v29 = (void *)v5[23];
    v5[23] = 0;

  }
}

uint64_t sub_10019EBBC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v2 = v1;
  if (qword_10063D418 != -1)
    swift_once(&qword_10063D418, sub_10019E1C8);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_10064A3E0);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Edit Sections toggle hide empty sections", 40, 2, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v1 + 168);
  swift_beginAccess(v6 + 16, v13, 1, 0);
  v7 = a1 & 1;
  *(_BYTE *)(v6 + 16) = v7;
  *(_BYTE *)(v2 + 176) = v7;
  v8._object = (void *)0x80000001005682D0;
  v8._countAndFlagsBits = 0xD000000000000019;
  TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v8);
  *(_BYTE *)(v2 + 208) = 1;
  v9 = (_QWORD *)(v2 + 88);
  v11 = *(_QWORD *)(v2 + 112);
  v10 = *(_QWORD *)(v2 + 120);
  sub_10001413C(v9, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 112))(v7, v11, v10);
}

uint64_t sub_10019ECD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v21;
  __n128 v22;
  _BYTE v25[24];

  v3 = v2;
  v6 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10002A750(&qword_10064A540);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10063D418 != -1)
    swift_once(&qword_10063D418, sub_10019E1C8);
  v13 = type metadata accessor for Logger(0);
  sub_100012DC4(v13, (uint64_t)qword_10064A3E0);
  v14 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Edit Sections Reorder Sections", 30, 2, v14);
  swift_bridgeObjectRelease(v14);
  sub_100017648();
  sub_10003E3B8();
  v15 = swift_bridgeObjectRetain(a1);
  OrderedSet.init(_:)(v15);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v8, v12, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v16 = (uint64_t)v2 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply;
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply, v25, 33, 0);
  sub_10019FE0C((uint64_t)v8, v16);
  swift_endAccess(v25);
  if (!v3[31])
  {
    v3[31] = a2;
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRetain(a2);
  }
  v3[21] = sub_10019E258();
  swift_release();
  v17 = v3[14];
  v18 = v3[15];
  sub_10001413C(v3 + 11, v17);
  v19 = v3[31];
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 104);
  v21 = swift_bridgeObjectRetain(v19);
  v20(a1, v19, v17, v18, v21);
  v22 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v22);
}

void sub_10019EF10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  void *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  void *Strong;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD aBlock[6];

  v2 = v1;
  if (qword_10063D418 != -1)
    swift_once(&qword_10063D418, sub_10019E1C8);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_10064A3E0);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Edit Sections Cancel", 20, 2, v5);
  swift_bridgeObjectRelease(v5);
  if ((sub_10019E364() & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    v8 = v7;
    v9 = swift_allocObject(&unk_1005F51B8, 24, 7);
    swift_weakInit(v9 + 16, v2);
    swift_retain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    aBlock[4] = sub_10019FE04;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000D4884;
    aBlock[3] = &unk_1005F51D0;
    v11 = _Block_copy(aBlock);
    swift_release();
    v12 = (void *)objc_opt_self(UIAlertAction);
    v13 = objc_msgSend(v12, "actionWithTitle:style:handler:", v10, 2, v11);
    _Block_release(v11);
    swift_release();

    objc_msgSend(v6, "addAction:", v13);
    static TTRLocalizableStrings.Common.alertCancelButton.getter(v14);
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v12, "actionWithTitle:style:handler:", v17, 1, 0, swift_bridgeObjectRelease(v16).n128_f64[0]);

    objc_msgSend(v6, "addAction:", v18);
    v19 = objc_msgSend(v6, "popoverPresentationController");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "setBarButtonItem:", a1);

    }
    v21 = sub_10001413C((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v21 + 16);
    if (Strong
      && (v23 = Strong,
          v24 = objc_msgSend(Strong, "navigationController"),
          v23,
          v24))
    {
      objc_msgSend(v24, "presentViewController:animated:completion:", v6, 1, 0);

    }
    else
    {

    }
  }
  else
  {
    v25 = *sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
    if (qword_10063D868 != -1)
      swift_once(&qword_10063D868, sub_1004C7738);
    sub_100012DC4(v4, (uint64_t)qword_1006639F0);
    sub_1002EB4BC(0x6365532074696445, 0xED0000736E6F6974);
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v25 + 16);
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend(v26, "presentingViewController");

      if (v28)
      {
        objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, 0);

      }
    }
  }
}

uint64_t sub_10019F2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  _BYTE v12[24];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    sub_100010634(Strong + 88, (uint64_t)v13);
    swift_release();
    v4 = v14;
    v5 = v15;
    sub_10001413C(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v5 + 120))(v4, v5);
    sub_100027F10(v13);
  }
  swift_beginAccess(v2, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    sub_100010634(result + 48, (uint64_t)v13);
    swift_release();
    v7 = *sub_10001413C(v13, v14);
    if (qword_10063D868 != -1)
      swift_once(&qword_10063D868, sub_1004C7738);
    v8 = type metadata accessor for Logger(0);
    sub_100012DC4(v8, (uint64_t)qword_1006639F0);
    sub_1002EB4BC(0x6365532074696445, 0xED0000736E6F6974);
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v7 + 16);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "presentingViewController");

      if (v11)
      {
        objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 1, 0);

      }
    }
    return sub_100027F10(v13);
  }
  return result;
}

void sub_10019F470()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;

  if (qword_10063D418 != -1)
    swift_once(&qword_10063D418, sub_10019E1C8);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_10064A3E0);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Edit Sections Done", 18, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[14];
  v4 = v0[15];
  sub_10001413C(v0 + 11, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 128))(v3, v4);
  v5 = *sub_10001413C(v0 + 6, v0[9]);
  if (qword_10063D868 != -1)
    swift_once(&qword_10063D868, sub_1004C7738);
  sub_100012DC4(v1, (uint64_t)qword_1006639F0);
  sub_1002EB4BC(0x6365532074696445, 0xED0000736E6F6974);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "presentingViewController");

    if (v8)
    {
      objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

uint64_t sub_10019F614()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_100027F10((_QWORD *)(v0 + 48));
  sub_100027F10((_QWORD *)(v0 + 88));

  swift_release();
  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  sub_10019FDA4(v0 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply);
  return v0;
}

uint64_t sub_10019F6A8()
{
  uint64_t v0;

  sub_10019F614();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10019F6CC()
{
  return type metadata accessor for TTRIEditSectionsPresenter(0);
}

uint64_t type metadata accessor for TTRIEditSectionsPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10064A428;
  if (!qword_10064A428)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIEditSectionsPresenter);
  return result;
}

uint64_t sub_10019F710(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[18];

  v4[0] = &unk_100527820;
  v4[1] = &unk_100527820;
  v4[2] = &unk_100527838;
  v4[3] = &unk_100527838;
  v4[4] = &unk_100527850;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = &unk_100527868;
  v4[10] = &unk_100527868;
  v4[11] = &unk_100527880;
  v4[12] = &unk_100527898;
  v4[13] = &unk_100527868;
  v4[14] = &unk_100527898;
  v4[15] = &unk_100527898;
  v4[16] = &unk_100527880;
  result = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(319);
  if (v3 <= 0x3F)
  {
    v4[17] = *(_QWORD *)(result - 8) + 64;
    return swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 80);
  }
  return result;
}

void sub_10019F7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::String v10;
  _BYTE v12[24];

  v1 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10002A750(&qword_10064A540);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = sub_10019F918((uint64_t)_swiftEmptyArrayStorage);
  TTREditSectionsViewModel.OptimisticApply.init(sectionOrdering:renamedSections:)(v3, v8);
  v9 = v0 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders25TTRIEditSectionsPresenter_optimisticApply, v12, 33, 0);
  sub_10019FA2C((uint64_t)v6, v9);
  swift_endAccess(v12);
  v10._object = (void *)0x80000001005682D0;
  v10._countAndFlagsBits = 0xD000000000000019;
  TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v10);
}

unint64_t sub_10019F918(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_10064A548);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = (id)*(v5 - 2);
    swift_bridgeObjectRetain(v7);
    result = sub_10019FA70((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v8;
    v11 = (_QWORD *)(v3[7] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10019FA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10019FA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10019FAA0(a1, v4);
}

unint64_t sub_10019FAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;
  id v12;
  char v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_100017648();
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      i = (i + 1) & v9;
      if (((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) == 0)
        {
          for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
          {
            v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
            v13 = static NSObject.== infix(_:_:)(v12, a1);

            if ((v13 & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_10019FBE8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  id v23;
  unint64_t v24;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1002AA364((uint64_t)a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = *v19;
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002AEAFC();
      goto LABEL_7;
    }
    sub_100458218(v15, a4 & 1);
    v21 = sub_1002AA364((uint64_t)a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10045DFD8(v12, (uint64_t)a3, a1, a2, v18);
      v23 = a3;
      return 0;
    }
  }
  v24 = sub_100017648();
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
  return result;
}

void *sub_10019FCFC()
{
  uint64_t v0;
  void *result;
  void *v2;

  *(_QWORD *)(v0 + 168) = sub_10019E258();
  swift_release();
  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = result;
    if (objc_msgSend(result, "isViewLoaded"))
      sub_10023EB3C(1u);
    return (void *)swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_10019FD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019FDA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTREditSectionsViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019FDE0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019FE04(uint64_t a1)
{
  uint64_t v1;

  return sub_10019F2E0(a1, v1);
}

uint64_t sub_10019FE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064A538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019FE54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v4 = *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 20);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = *(id *)(a2 + v4);
      v10 = static NSObject.== infix(_:_:)(v7, v9);

      if ((v10 & 1) == 0)
      {
        ++v5;
        if (v8 != v3)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v10 = 0;
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v10 & 1;
}

_QWORD *sub_10019FF98(void (*a1)(uint64_t *__return_ptr, char *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *result;
  uint64_t v21;
  uint64_t v23;
  char v24;

  v21 = *(_QWORD *)(a3 + 16);
  if (!v21)
    return _swiftEmptyArrayStorage;
  v5 = swift_bridgeObjectRetain(a3);
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  while (1)
  {
    v24 = *(_BYTE *)(a3 + v6 + 32);
    a1(&v23, &v24, v5);
    if (v3)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a3);
      return v7;
    }
    v8 = v23;
    v9 = *(_QWORD *)(v23 + 16);
    v10 = v7[2];
    v11 = v10 + v9;
    if (__OFADD__(v10, v9))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v7);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v11 <= v7[3] >> 1)
    {
      if (*(_QWORD *)(v8 + 16))
        goto LABEL_15;
    }
    else
    {
      if (v10 <= v11)
        v13 = v10 + v9;
      else
        v13 = v10;
      v7 = sub_1004568C8(isUniquelyReferenced_nonNull_native, v13, 1, v7);
      if (*(_QWORD *)(v8 + 16))
      {
LABEL_15:
        v14 = v7[2];
        if ((v7[3] >> 1) - v14 < v9)
          goto LABEL_30;
        v15 = (char *)v7 + v14 + 32;
        if (v8 + 32 < (unint64_t)&v15[v9] && (unint64_t)v15 < v8 + 32 + v9)
          goto LABEL_32;
        memcpy(v15, (const void *)(v8 + 32), v9);
        if (v9)
        {
          v17 = v7[2];
          v18 = __OFADD__(v17, v9);
          v19 = v17 + v9;
          if (v18)
            goto LABEL_31;
          v7[2] = v19;
        }
        goto LABEL_4;
      }
    }
    if (v9)
      goto LABEL_29;
LABEL_4:
    ++v6;
    v5 = swift_bridgeObjectRelease(v8);
    if (v21 == v6)
    {
      swift_bridgeObjectRelease(a3);
      return v7;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_1001A0180(uint64_t a1, void (*a2)(uint64_t *, id *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[5];
  uint64_t v36;

  v5 = v4;
  v6 = a4;
  v36 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_100005ED8(0, &qword_100645310, REMHashtag_ptr);
    v11 = sub_100017608((unint64_t *)&qword_100649F10, &qword_100645310, REMHashtag_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v12 = Set.Iterator.init(_cocoa:)(v35, v9, v10, v11);
    v6 = v35[0];
    v32 = v35[1];
    v13 = v35[2];
    v14 = v35[3];
    v15 = v35[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a4 + 32);
    v32 = a4 + 56;
    v17 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & *(_QWORD *)(a4 + 56);
    swift_bridgeObjectRetain(a4);
    v13 = v17;
    v14 = 0;
  }
  v31 = (unint64_t)(v13 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v20 = __CocoaSet.Iterator.next()(v12);
  if (!v20)
    goto LABEL_38;
  v21 = v20;
  v33 = v20;
  v22 = sub_100005ED8(0, &qword_100645310, REMHashtag_ptr);
  swift_unknownObjectRetain(v21);
  swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
  v23 = v34;
  swift_unknownObjectRelease(v21);
  v24 = v14;
  v25 = v15;
  if (!v23)
    goto LABEL_38;
  while (1)
  {
    v34 = v23;
    a2(&v36, &v34);
    if (v5)
    {
      v30 = v36;

      swift_bridgeObjectRelease(v30);
      sub_10003E410(v6);
      return;
    }

    v14 = v24;
    v15 = v25;
    if (v6 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v15)
      break;
    v25 = (v15 - 1) & v15;
    v26 = __clz(__rbit64(v15)) | (v14 << 6);
    v24 = v14;
LABEL_27:
    v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v26);
    if (!v23)
      goto LABEL_38;
  }
  v24 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  if (v24 >= v31)
    goto LABEL_38;
  v27 = *(_QWORD *)(v32 + 8 * v24);
  if (v27)
  {
LABEL_26:
    v25 = (v27 - 1) & v27;
    v26 = __clz(__rbit64(v27)) + (v24 << 6);
    goto LABEL_27;
  }
  v28 = v14 + 2;
  if (v14 + 2 >= v31)
    goto LABEL_38;
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
    goto LABEL_25;
  v28 = v14 + 3;
  if (v14 + 3 >= v31)
    goto LABEL_38;
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
    goto LABEL_25;
  v28 = v14 + 4;
  if (v14 + 4 >= v31)
    goto LABEL_38;
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
LABEL_25:
    v24 = v28;
    goto LABEL_26;
  }
  v24 = v14 + 5;
  if (v14 + 5 >= v31)
    goto LABEL_38;
  v27 = *(_QWORD *)(v32 + 8 * v24);
  if (v27)
    goto LABEL_26;
  v29 = v14 + 6;
  while (v31 != v29)
  {
    v27 = *(_QWORD *)(v32 + 8 * v29++);
    if (v27)
    {
      v24 = v29 - 1;
      goto LABEL_26;
    }
  }
LABEL_38:
  sub_10003E410(v6);
}

uint64_t sub_1001A04C4(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)(v4 + 513) = a3;
  *(_QWORD *)(v4 + 288) = a2;
  *(_QWORD *)(v4 + 296) = v3;
  *(_BYTE *)(v4 + 512) = a1;
  *(_QWORD *)(v4 + 304) = *v3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v4 + 312) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 320) = v6;
  *(_QWORD *)(v4 + 328) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v4 + 336) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 344) = v8;
  *(_QWORD *)(v4 + 352) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v4 + 360) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 368) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 376) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 384) = swift_task_alloc(v11);
  v12 = type metadata accessor for REMAnalyticsEvent(0);
  *(_QWORD *)(v4 + 392) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 400) = v13;
  *(_QWORD *)(v4 + 408) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 416) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 424) = v15;
  *(_QWORD *)(v4 + 432) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 440) = static MainActor.shared.getter(v16);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor, v17);
  *(_QWORD *)(v4 + 448) = v18;
  *(_QWORD *)(v4 + 456) = v19;
  return swift_task_switch(sub_1001A0618, v18, v19);
}

uint64_t sub_1001A0618()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  void **v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;

  v1 = (char *)(v0 + 512);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v3 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 392);
  v83 = *(_QWORD *)(v0 + 304);
  v85 = *(_QWORD *)(v0 + 400);
  v87 = *(_BYTE *)(v0 + 513);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *v1;
  v9 = sub_100012DC4(v5, (uint64_t)qword_10064A550);
  *(_QWORD *)(v0 + 464) = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v5);
  v10 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v10, v0 + 16);
  v12 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x6574656C706D6F63;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v13 = 1702195828;
  if (!v8)
    v13 = 0x65736C6166;
  v14 = 0xE400000000000000;
  if (!v8)
    v14 = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(v12 + 96) = v7;
  swift_bridgeObjectRetain(v7);
  v15 = sub_10002D32C(v12);
  sub_1000143B4((uint64_t)"Reminder List set completed {completed: %@, items: %@}", 54, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v5, v16);
  v18 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v17);
  v19 = *v18;
  *(_QWORD *)(v0 + 472) = *v18;
  type metadata accessor for REMAnalyticsManager(0);
  v19;
  static REMAnalyticsManager.shared.getter();
  v20 = sub_10002A750(&qword_100649F98);
  v21 = (_QWORD *)(v4 + *(int *)(v20 + 48));
  v22 = (_QWORD *)(v4 + *(int *)(v20 + 80));
  v23 = enum case for REMUserOperation.markReminderCompletedUI(_:);
  v24 = type metadata accessor for REMUserOperation(0);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v4, v23, v24);
  *v21 = TTRUserDefaults.activitySessionId.getter(v25);
  v21[1] = v26;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *v22 = _typeName(_:qualified:)(v83, 0);
  v22[1] = v27;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v85 + 104))(v4, enum case for REMAnalyticsEvent.userOperation(_:), v6);
  REMAnalyticsManager.post(event:)(v4);
  v28 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v85 + 8))(v4, v6, v28);
  if ((v87 & 1) != 0)
  {
    swift_release();
    v30 = *(_QWORD *)(v0 + 288);
    v29 = *(_QWORD *)(v0 + 296);
    v31 = *v1;
    v32 = swift_allocObject(&unk_1005F53E0, 80, 7);
    *(_QWORD *)(v32 + 16) = 1;
    *(_OWORD *)(v32 + 24) = 0u;
    *(_OWORD *)(v32 + 40) = 0u;
    *(_OWORD *)(v32 + 56) = 0u;
    *(_QWORD *)(v32 + 72) = 0;
    v33 = static TTRLocalizableStrings.UndoAction.completionChange.getter();
    v35 = v34;
    v36 = swift_task_alloc(48);
    *(_QWORD *)(v36 + 16) = v30;
    *(_BYTE *)(v36 + 24) = v31;
    *(_QWORD *)(v36 + 32) = v29;
    *(_QWORD *)(v36 + 40) = v32;
    sub_1001B35FC(v30, v33, v35, (uint64_t)sub_1001BCF20, v36);
    v38 = v37;
    swift_bridgeObjectRelease(v35);
    swift_task_dealloc(v36);
    if (v38 >= 1)
      TTRDebouncedAction.schedule()();
    if (*v1 == 1)
    {
      v39 = *(_QWORD *)(v0 + 376);
      v78 = *(_QWORD *)(v0 + 384);
      v41 = *(_QWORD *)(v0 + 360);
      v40 = *(_QWORD *)(v0 + 368);
      v77 = *(_QWORD *)(v0 + 352);
      v86 = *(_QWORD *)(v0 + 344);
      v88 = *(_QWORD *)(v0 + 336);
      v80 = *(_QWORD *)(v0 + 328);
      v81 = *(void **)(v0 + 472);
      v42 = *(_QWORD *)(v0 + 312);
      v84 = *(_QWORD *)(v0 + 320);
      v43 = *(_QWORD *)(v0 + 296);
      v44 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v79 = (void *)static OS_dispatch_queue.main.getter(v44);
      static DispatchTime.now()();
      + infix(_:_:)(v39, 2.0);
      v82 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v82(v39, v41);
      *(_QWORD *)(v0 + 224) = sub_1001BCF30;
      *(_QWORD *)(v0 + 232) = v43;
      *(_QWORD *)(v0 + 192) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 200) = 1107296256;
      *(_QWORD *)(v0 + 208) = sub_100006378;
      *(_QWORD *)(v0 + 216) = &unk_1005F53F8;
      v45 = _Block_copy((const void *)(v0 + 192));
      v46 = swift_retain();
      static DispatchQoS.unspecified.getter(v46);
      *(_QWORD *)(v0 + 280) = _swiftEmptyArrayStorage;
      v47 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v48 = sub_10002A750((uint64_t *)&unk_100640F40);
      v49 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 280, v48, v49, v42, v47);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v78, v77, v80, v45);

      _Block_release(v45);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v80, v42);
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v77, v88);
      v82(v78, v41);
      swift_release();
    }
    else
    {

    }
    swift_release();
    v62 = v38 > 0;
    v63 = *(_QWORD *)(v0 + 408);
    v65 = *(_QWORD *)(v0 + 376);
    v64 = *(_QWORD *)(v0 + 384);
    v66 = *(_QWORD *)(v0 + 352);
    v67 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 432));
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v62);
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 288);
    v51 = *(_QWORD *)(v0 + 296);
    swift_retain();
    v52 = sub_1001BB990(v50, v51);
    *(_QWORD *)(v0 + 480) = v52;
    swift_release();
    Strong = swift_unknownObjectWeakLoadStrong(v51 + 16);
    if (Strong)
    {
      v55 = Strong;
      v56 = *(_QWORD *)(v0 + 296);
      v57 = *(_QWORD *)(v56 + 24);
      ObjectType = swift_getObjectType(Strong, v54);
      v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, ObjectType, v57);
      v61 = v60;
      swift_unknownObjectRelease(v55);
    }
    else
    {
      v59 = 0;
      v61 = 0;
    }
    *(_QWORD *)(v0 + 488) = v59;
    v69 = *(_QWORD *)(v0 + 296);
    v70 = *(_QWORD *)(v69 + 64);
    v71 = swift_getObjectType(*(_QWORD *)(v69 + 56), v54);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v70);
    v72 = *(_QWORD *)(v0 + 152);
    v73 = *(_QWORD *)(v0 + 160);
    v74 = *(_QWORD *)(v0 + 168);
    v75 = *(_QWORD *)(v0 + 176);
    v76 = (_QWORD *)swift_task_alloc(async function pointer to TTRSetReminderCompletedPresenterCapability.presenterUserConfirmation(forSettingCompletedTo:reminders:completionBehavior:with:)[1]);
    *(_QWORD *)(v0 + 496) = v76;
    *v76 = v0;
    v76[1] = sub_1001A0CAC;
    return TTRSetReminderCompletedPresenterCapability.presenterUserConfirmation(forSettingCompletedTo:reminders:completionBehavior:with:)(*(unsigned __int8 *)(v0 + 512), v52, v72, v73, v74, v75, v59, v61);
  }
}

uint64_t sub_1001A0CAC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 496);
  *(_QWORD *)(*v2 + 504) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 480);
  if (v1)
  {
    sub_100179C5C((uint64_t *)(v4 + 144));
    swift_bridgeObjectRelease(v6);
    v7 = *(_QWORD *)(v4 + 448);
    v8 = *(_QWORD *)(v4 + 456);
    v9 = sub_1001A10CC;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 480));
    *(_BYTE *)(v4 + 514) = a1 & 1;
    sub_100179C5C((uint64_t *)(v4 + 144));
    v7 = *(_QWORD *)(v4 + 448);
    v8 = *(_QWORD *)(v4 + 456);
    v9 = sub_1001A0D54;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1001A0D54()
{
  uint64_t v0;
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = (char *)(v0 + 512);
  v2 = *(_BYTE *)(v0 + 514);
  swift_release();
  v4 = *(_QWORD *)(v0 + 488);
  if ((v2 & 1) != 0)
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 488));
    v6 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 296);
    v7 = *v1;
    v8 = swift_allocObject(&unk_1005F53E0, 80, 7);
    *(_QWORD *)(v8 + 16) = 1;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_OWORD *)(v8 + 40) = 0u;
    *(_OWORD *)(v8 + 56) = 0u;
    *(_QWORD *)(v8 + 72) = 0;
    v9 = static TTRLocalizableStrings.UndoAction.completionChange.getter();
    v11 = v10;
    v12 = swift_task_alloc(48);
    *(_QWORD *)(v12 + 16) = v6;
    *(_BYTE *)(v12 + 24) = v7;
    *(_QWORD *)(v12 + 32) = v5;
    *(_QWORD *)(v12 + 40) = v8;
    sub_1001B35FC(v6, v9, v11, (uint64_t)sub_1001BCF20, v12);
    v14 = v13;
    swift_bridgeObjectRelease(v11);
    swift_task_dealloc(v12);
    v15 = v14 > 0;
    if (v14 >= 1)
      TTRDebouncedAction.schedule()();
    if (*v1 == 1)
    {
      v16 = *(_QWORD *)(v0 + 376);
      v37 = *(_QWORD *)(v0 + 384);
      v18 = *(_QWORD *)(v0 + 360);
      v17 = *(_QWORD *)(v0 + 368);
      v36 = *(_QWORD *)(v0 + 352);
      v43 = *(_QWORD *)(v0 + 344);
      v44 = *(_QWORD *)(v0 + 336);
      v39 = *(_QWORD *)(v0 + 328);
      v40 = *(void **)(v0 + 472);
      v19 = *(_QWORD *)(v0 + 312);
      v42 = *(_QWORD *)(v0 + 320);
      v20 = *(_QWORD *)(v0 + 296);
      v21 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v38 = (void *)static OS_dispatch_queue.main.getter(v21);
      static DispatchTime.now()();
      + infix(_:_:)(v16, 2.0);
      v41 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v41(v16, v18);
      *(_QWORD *)(v0 + 224) = sub_1001BCF30;
      *(_QWORD *)(v0 + 232) = v20;
      *(_QWORD *)(v0 + 192) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 200) = 1107296256;
      *(_QWORD *)(v0 + 208) = sub_100006378;
      *(_QWORD *)(v0 + 216) = &unk_1005F53F8;
      v22 = _Block_copy((const void *)(v0 + 192));
      v23 = swift_retain();
      static DispatchQoS.unspecified.getter(v23);
      *(_QWORD *)(v0 + 280) = _swiftEmptyArrayStorage;
      v24 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v25 = sub_10002A750((uint64_t *)&unk_100640F40);
      v26 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 280, v25, v26, v19, v24);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v37, v36, v39, v22);

      _Block_release(v22);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v39, v19);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v44);
      v41(v37, v18);
      swift_release();
    }
    else
    {

    }
    swift_release();
  }
  else
  {
    v27 = *(void **)(v0 + 472);
    v28 = *(_QWORD *)(v0 + 288);
    v29 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v3);
    sub_10041D610(*v29, v28);

    swift_unknownObjectRelease(v4);
    v15 = 0;
  }
  v30 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 384);
  v33 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v15);
}

uint64_t sub_1001A10CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 504);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v23 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_getErrorValue(v5, v0 + 272, v0 + 240);
    v8 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
    v10 = v9;
    *(_QWORD *)(v0 + 264) = sub_100027E40(v8, v9, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 264, v0 + 272, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRRemindersListPresenterCapability: error setting completed {error: %{public}s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    v11 = swift_errorRelease(v5);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 504);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  v13 = *(_QWORD *)(v0 + 488);
  v14 = *(void **)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v11);
  sub_10041D610(*v16, v15);

  swift_unknownObjectRelease(v13);
  v17 = *(_QWORD *)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 376);
  v18 = *(_QWORD *)(v0 + 384);
  v20 = *(_QWORD *)(v0 + 352);
  v21 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1001A12F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  _BYTE v20[80];

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v20);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v13 = TTRTreeStorageItem.treeItemDescription.getter(v11, v12);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v14;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List confirm SiriFoundInApps reminder {item: %@}", 57, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v17);
  v18 = (char *)&loc_1001A14D8 + *((int *)qword_1001A16D0 + swift_getEnumCaseMultiPayload(v3, v1));
  __asm { BR              X10 }
}

uint64_t sub_1001A16E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[5];
  char v51;

  v43 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v43);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v39 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v42 = (uint64_t)&v36 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - v11;
  v14 = *(_QWORD *)(v1 + 56);
  v13 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(v14, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v50, ObjectType, v13);
  sub_100179C5C(v50);
  if ((v51 & 1) != 0)
    return 2;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return 2;
  v38 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = a1 + v38;
  v44 = *(_QWORD *)(v6 + 72);
  v37 = a1;
  swift_bridgeObjectRetain(a1);
  v19 = _swiftEmptyArrayStorage;
  v40 = v14;
  v41 = ObjectType;
  do
  {
    v20 = sub_10002B1E8(v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v20);
    if (swift_getEnumCaseMultiPayload(v4, v43) > 2)
    {
LABEL_24:
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v37);
      return 2;
    }
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 320))(v12, ObjectType, v13);
    if (v21)
    {
      v22 = (void *)v21;
      REMReminderChangeItem.ttrFlaggedContext.getter(&v45);
      if (!v46)
        goto LABEL_25;
      sub_10002E37C(&v45, (uint64_t)v47);
      v23 = v48;
      v24 = v49;
      sub_10001413C(v47, v48);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24) < 1)
        goto LABEL_4;
      sub_10002B1E8((uint64_t)v12, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = (_QWORD *)sub_100454EEC(0, v19[2] + 1, 1, (unint64_t)v19);
      v26 = v19[2];
      v25 = v19[3];
      if (v26 >= v25 >> 1)
        v19 = (_QWORD *)sub_100454EEC(v25 > 1, v26 + 1, 1, (unint64_t)v19);
      v19[2] = v26 + 1;
      v27 = (uint64_t)v19 + v38 + v26 * v44;
      v28 = v42;
    }
    else
    {
      v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 248))(v12, ObjectType, v13);
      if (!v29)
        goto LABEL_24;
      v22 = (void *)v29;
      REMReminder.ttrFlaggedContext.getter(&v45);
      if (!v46)
      {
LABEL_25:

        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v37);
        sub_1000073A0((uint64_t)&v45, &qword_10063F590);
        return 2;
      }
      sub_10002E37C(&v45, (uint64_t)v47);
      v30 = v48;
      v31 = v49;
      sub_10001413C(v47, v48);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31) < 1)
      {
LABEL_4:
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

        goto LABEL_5;
      }
      sub_10002B1E8((uint64_t)v12, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = (_QWORD *)sub_100454EEC(0, v19[2] + 1, 1, (unint64_t)v19);
      v33 = v19[2];
      v32 = v19[3];
      if (v33 >= v32 >> 1)
        v19 = (_QWORD *)sub_100454EEC(v32 > 1, v33 + 1, 1, (unint64_t)v19);
      v19[2] = v33 + 1;
      v27 = (uint64_t)v19 + v38 + v33 * v44;
      v28 = v39;
    }
    sub_10001F580(v28, v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
    sub_100027F10(v47);
    ObjectType = v41;
    v18 += v44;
    --v17;
  }
  while (v17);
  v35 = v37;
  swift_bridgeObjectRelease(v37);
  LOBYTE(v35) = sub_100096848(v35, (uint64_t)v19);
  swift_bridgeObjectRelease(v19);
  return (v35 & 1) == 0;
}

uint64_t sub_1001A1B88(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v3 + 344) = a2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v2;
  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  *(_QWORD *)(v3 + 208) = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 216) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 224) = swift_task_alloc(v5);
  *(_QWORD *)(v3 + 232) = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ItemID(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 240) = swift_task_alloc(v6);
  *(_QWORD *)(v3 + 248) = swift_task_alloc(v6);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 256) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 264) = v8;
  *(_QWORD *)(v3 + 272) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 280) = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  *(_QWORD *)(v3 + 288) = v11;
  *(_QWORD *)(v3 + 296) = v12;
  return swift_task_switch(sub_1001A1C90, v11, v12);
}

void sub_1001A1C90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v2 = v0[33];
  v1 = v0[34];
  v3 = v0[32];
  v4 = v0[24];
  v5 = sub_100012DC4(v3, (uint64_t)qword_10064A550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  v6 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v6, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 72) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 48) = v4;
  swift_bridgeObjectRetain(v4);
  v8 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List delete {item: %@}", 31, 2, v8);
  v9 = swift_bridgeObjectRelease(v8);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v9);
  v0[38] = sub_1001AFB84(v4);
  v0[39] = v10;
  v0[40] = v11;
  __asm { BR              X10 }
}

uint64_t sub_1001A25B8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 328);
  v4 = *(_QWORD *)(*v1 + 304);
  v5 = *(_QWORD *)(*v1 + 312);
  *(_BYTE *)(*v1 + 345) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  return swift_task_switch(sub_1001A262C, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_1001A262C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(v0 + 280));
  v1 = *(unsigned __int8 *)(v0 + 345);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001A26B0(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 336);
  v4 = *(_QWORD *)(*v1 + 320);
  v5 = *(_QWORD *)(*v1 + 304);
  *(_BYTE *)(*v1 + 346) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_1001A2728, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_1001A2728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(v0 + 280));
  v1 = *(unsigned __int8 *)(v0 + 346);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001A27AC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[128];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v25);
  v11 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x64656767616C66;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v12 = a1 & 1;
  v13 = 1702195828;
  if ((a1 & 1) == 0)
    v13 = 0x65736C6166;
  v14 = 0xE400000000000000;
  if ((a1 & 1) == 0)
    v14 = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(v11 + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v15 = sub_10002D32C(v11);
  sub_1000143B4((uint64_t)"Reminder List set flagged {flagged: %@, items: %@}", 50, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  v18 = static TTRLocalizableStrings.UndoAction.flaggedChange.getter(v17);
  v20 = v19;
  __chkstk_darwin(v18);
  v25[-16] = v12;
  sub_1001B35FC(a2, v21, v20, (uint64_t)sub_1001BCDD0, (uint64_t)&v25[-32]);
  v23 = v22;
  swift_bridgeObjectRelease(v20);
  return v23;
}

uint64_t sub_1001A29B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t result;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[28];
  _OWORD v49[7];
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _OWORD v64[7];
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  void *v77;

  v7 = v3[8];
  ObjectType = swift_getObjectType(v3[7], a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v7 + 280))(v48, a1, ObjectType, v7);
  sub_10000F614((uint64_t)v48, (uint64_t)v49, (uint64_t *)&unk_100649F30);
  result = sub_100076D84((uint64_t *)v49);
  if ((_DWORD)result != 1)
  {
    v38 = a2;
    v39 = a3;
    v64[4] = v49[4];
    v64[5] = v49[5];
    v64[6] = v49[6];
    v64[0] = v49[0];
    v64[1] = v49[1];
    v64[2] = v49[2];
    v64[3] = v49[3];
    v10 = v50;
    v11 = v51;
    v12 = v53;
    v13 = v54;
    v46 = v55;
    v44 = v52;
    v45 = v56;
    v35 = v59;
    v36 = v57;
    v42 = v60;
    v43 = v58;
    v40 = v62;
    v41 = v61;
    v34 = v63;
    v14 = (_OWORD *)swift_allocObject(&unk_1005F5700, 128, 7);
    v14[1] = 0u;
    v14[2] = 0u;
    v14[3] = 0u;
    v14[4] = 0u;
    v14[5] = 0u;
    v14[6] = 0u;
    v14[7] = 0u;
    v15 = (_OWORD *)swift_allocObject(&unk_1005F5700, 128, 7);
    v15[1] = 0u;
    v15[2] = 0u;
    v15[3] = 0u;
    v15[4] = 0u;
    v15[5] = 0u;
    v15[6] = 0u;
    v15[7] = 0u;
    sub_1001B6638(v64, v3);
    v16 = swift_retain();
    v17 = (void *)zalgo.getter(v16);
    v37 = dispatch thunk of Promise.then<A>(on:closure:)(v17, sub_1001BEA40, v14, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    if (v10)
    {
      *(_QWORD *)&v65 = v10;
      *((_QWORD *)&v65 + 1) = v11;
      v66 = v44;
      v67 = v12;
      v68 = v13;
      v69 = v46;
      v70 = v45;
      v71 = v36;
      v72 = v43;
      v73 = v35;
      v74 = v42;
      v75 = v41;
      v76 = v40 & 1;
      v77 = v34;
      v18 = v34;
      v19 = v10;
      v20 = v11;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v41);
      sub_1001B6638(&v65, v3);
      v21 = swift_retain();
      v22 = (void *)zalgo.getter(v21);
      v23 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_1001BEA40, v15, (char *)&type metadata for () + 8);
      swift_release();
      swift_release();

      sub_100180D04(v10, v11, v44, v12, v13, v46, v45, v36, v43, v35, v42, v41, v40, v34);
    }
    else
    {
      v24 = sub_10002A750(&qword_100657300);
      v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
      v23 = Promise.init(value:)(v25);
    }
    sub_10002A750(&qword_100657300);
    v26 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v27 = swift_allocObject(v26, 48, 7);
    *(_OWORD *)(v27 + 16) = xmmword_10051FF90;
    *(_QWORD *)(v27 + 32) = v37;
    *(_QWORD *)(v27 + 40) = v23;
    v47 = v27;
    specialized Array._endMutation()(v27);
    v28 = v47;
    swift_retain();
    swift_retain();
    v29 = sub_10002A750(&qword_10064A898);
    v30 = sub_100023FEC(&qword_10064A8A0, &qword_10064A898, (uint64_t)&protocol conformance descriptor for [A]);
    static Promise.all<A>(_:)(&v47, v29, v30);
    swift_bridgeObjectRelease(v28);
    v31 = (_QWORD *)swift_allocObject(&unk_1005F5728, 48, 7);
    v31[2] = v14;
    v31[3] = v38;
    v31[4] = v39;
    v31[5] = v15;
    swift_retain();
    swift_retain();
    v32 = swift_retain();
    v33 = (void *)zalgo.getter(v32);
    dispatch thunk of Promise.then<A>(on:closure:)(v33, sub_1001BEA8C, v31, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return sub_100180A6C((uint64_t)v48);
  }
  return result;
}

uint64_t sub_1001A2E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t inited;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[128];
  uint64_t v48;

  v1 = v0;
  v44 = type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(0);
  v45 = *(_QWORD *)(v44 - 8);
  v2 = __chkstk_darwin(v44);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v43 = (char *)&v41 - v5;
  v6 = type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType(0);
  v46 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v41 - v10;
  v12 = sub_10002A750(&qword_10064A890);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  v14._countAndFlagsBits = 0xD00000000000002ELL;
  v14._object = (void *)0x8000000100568CF0;
  v15._object = (void *)0x8000000100568D20;
  v16._countAndFlagsBits = 0x706D6F43206C6C41;
  v16._object = (void *)0xED0000646574656CLL;
  v15._countAndFlagsBits = 0xD000000000000031;
  v17 = TTRLocalizedString(_:value:comment:)(v14, v16, v15);
  *(Swift::String *)(v13 + 32) = v17;
  *(_QWORD *)(v13 + 48) = 0;
  *(_BYTE *)(v13 + 56) = 1;
  v18 = *(_QWORD *)(v0 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 56), v17._object);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 48))(ObjectType, v18);
  if (v20)
  {
    v22 = v20;
    v23 = v21;
    v24 = swift_getObjectType(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23);
    swift_unknownObjectRelease(v22);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v11, v9, v6);
    v25 = *(_QWORD *)(v1 + 48);
    v27 = swift_getObjectType(*(_QWORD *)(v1 + 40), v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v11, v27, v25);
    v28 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v6;
    v29 = v43;
    v30 = v44;
    v28(v43, v4, v44);
    inited = swift_initStackObject(v12, v47);
    *(_OWORD *)(inited + 16) = xmmword_1005275C0;
    v32._countAndFlagsBits = 0xD000000000000012;
    v32._object = (void *)0x8000000100568D60;
    v33._countAndFlagsBits = 0xD000000000000031;
    v33._object = (void *)0x8000000100568D20;
    *(Swift::String *)(inited + 32) = TTRLocalizedString(_:comment:)(v32, v33);
    *(_QWORD *)(inited + 48) = 1;
    *(_BYTE *)(inited + 56) = 0;
    v34._countAndFlagsBits = 0xD000000000000013;
    v34._object = (void *)0x8000000100568D80;
    v35._countAndFlagsBits = 0xD000000000000031;
    v35._object = (void *)0x8000000100568D20;
    *(Swift::String *)(inited + 64) = TTRLocalizedString(_:comment:)(v34, v35);
    *(_QWORD *)(inited + 80) = 6;
    *(_BYTE *)(inited + 88) = 0;
    v36._countAndFlagsBits = 0xD000000000000011;
    v36._object = (void *)0x8000000100568DA0;
    v37._countAndFlagsBits = 0xD000000000000031;
    v37._object = (void *)0x8000000100568D20;
    v38 = TTRLocalizedString(_:comment:)(v36, v37);
    *(Swift::String *)(inited + 96) = v38;
    *(_QWORD *)(inited + 112) = 12;
    *(_BYTE *)(inited + 120) = 0;
    __chkstk_darwin(v38._countAndFlagsBits);
    *(&v41 - 2) = (uint64_t)v29;
    sub_1003E6AB8((uint64_t (*)(_QWORD *, __n128))sub_1001BE9C4, (uint64_t)(&v41 - 4), inited);
    v48 = v39;
    sub_10045067C(v13);
    v13 = v48;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v42);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v30);
  }
  return v13;
}

uint64_t sub_1001A3378(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  _QWORD *v108;
  char v109;
  unint64_t v110;
  uint64_t v111;
  _BOOL8 v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  char v116;
  _QWORD *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t, uint64_t, __n128);
  void *v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char v141;
  void (*v142)(char *, uint64_t);
  __n128 v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  __n128 v148;
  id v149;
  id v150;
  id v151;
  NSString v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t (*v162)(uint64_t, uint64_t, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int64_t v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  char v187;

  v156 = a2;
  v159 = type metadata accessor for REMHashtagLabelCollection(0);
  v158 = *(_QWORD *)(v159 - 8);
  v4 = __chkstk_darwin(v159);
  v157 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v160 = (char *)&v153 - v6;
  v172 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v172);
  v8 = (char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v161 = (uint64_t)&v153 - v14;
  v16 = *(_QWORD *)(v2 + 56);
  v15 = *(_QWORD *)(v2 + 64);
  v155 = v2;
  ObjectType = swift_getObjectType(v16, v17);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8))(&v186, ObjectType, v15);
  sub_100179C5C(&v186);
  if ((v187 & 1) != 0)
    return 0;
  v170 = *(_QWORD *)(a1 + 16);
  if (!v170)
    return 0;
  v153 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v168 = a1 + v153;
  sub_10002B1E8(a1 + v153, v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v185 = &_swiftEmptyDictionarySingleton;
  v171 = *(_QWORD *)(v10 + 72);
  v154 = a1;
  swift_bridgeObjectRetain(a1);
  v19 = 0;
  v20 = 0;
  v167 = v15;
  v166 = v16;
  v165 = ObjectType;
  v164 = v13;
  v163 = v8;
  while (1)
  {
    v22 = sub_10002B1E8(v168 + v171 * v19, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v22);
    if (swift_getEnumCaseMultiPayload(v8, v172) > 2)
    {
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease(v154);
      v93 = v161;
      goto LABEL_77;
    }
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 320);
    v24 = v23(v13, ObjectType, v15);
    v162 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v23;
    v174 = v19;
    if (!v24)
      break;
    v25 = (void *)v24;
    REMReminderChangeItem.ttrHashtagContext.getter(&v179);
    if (!v180)
      goto LABEL_78;
    v169 = v25;
    sub_10002E37C(&v179, (uint64_t)&v182);
    v26 = v183;
    v27 = v184;
    sub_10001413C(&v182, v183);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
    __chkstk_darwin(v28);
    *(&v153 - 2) = (unint64_t)v13;
    sub_1001A0180((uint64_t)&_swiftEmptyDictionarySingleton, (void (*)(uint64_t *, id *))sub_1001BF364, (uint64_t)(&v153 - 4), v28);
    v15 = v29;
    v173 = v20;
    swift_bridgeObjectRelease(v28);
    swift_beginAccess(&v185, &v179, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v185);
    v31 = v185;
    *(_QWORD *)&v177 = v185;
    v185 = (_QWORD *)0x8000000000000000;
    v32 = *(_QWORD *)(v15 + 64);
    v175 = v15 + 64;
    v33 = 1 << *(_BYTE *)(v15 + 32);
    if (v33 < 64)
      v34 = ~(-1 << v33);
    else
      v34 = -1;
    v35 = v34 & v32;
    v176 = (unint64_t)(v33 + 63) >> 6;
    swift_bridgeObjectRetain(v15);
    v36 = 0;
    if (v35)
    {
      while (1)
      {
        v40 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        v41 = v40 | (v36 << 6);
LABEL_31:
        v45 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v41);
        v46 = *v45;
        ObjectType = v45[1];
        v47 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v41);
        swift_bridgeObjectRetain(ObjectType);
        swift_bridgeObjectRetain(v47);
        v49 = sub_100005CF4(v46, ObjectType);
        v50 = v31[2];
        v51 = (v48 & 1) == 0;
        v52 = v50 + v51;
        if (__OFADD__(v50, v51))
          break;
        v53 = v48;
        if (v31[3] >= v52)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1002AECB0();
        }
        else
        {
          sub_1004584FC(v52, isUniquelyReferenced_nonNull_native & 1);
          v54 = sub_100005CF4(v46, ObjectType);
          if ((v53 & 1) != (v55 & 1))
            goto LABEL_144;
          v49 = v54;
        }
        v31 = (_QWORD *)v177;
        if ((v53 & 1) != 0)
        {
          v37 = 8 * v49;
          v38 = *(_QWORD *)(*(_QWORD *)(v177 + 56) + v37);
          swift_bridgeObjectRetain(v38);
          v39 = sub_1004775D4(v47, v38);
          swift_bridgeObjectRelease(ObjectType);
          ObjectType = v31[7];
          swift_bridgeObjectRelease(*(_QWORD *)(ObjectType + v37));
          *(_QWORD *)(ObjectType + v37) = v39;
          isUniquelyReferenced_nonNull_native = 1;
          if (!v35)
            goto LABEL_15;
        }
        else
        {
          *(_QWORD *)(v177 + 8 * (v49 >> 6) + 64) |= 1 << v49;
          v56 = (uint64_t *)(v31[6] + 16 * v49);
          *v56 = v46;
          v56[1] = ObjectType;
          *(_QWORD *)(v31[7] + 8 * v49) = v47;
          v57 = v31[2];
          v58 = __OFADD__(v57, 1);
          v59 = v57 + 1;
          if (v58)
            goto LABEL_121;
          v31[2] = v59;
          isUniquelyReferenced_nonNull_native = 1;
          if (!v35)
            goto LABEL_15;
        }
      }
      __break(1u);
      goto LABEL_102;
    }
LABEL_15:
    v42 = v36 + 1;
    if (__OFADD__(v36, 1))
      goto LABEL_122;
    if (v42 < v176)
    {
      v43 = *(_QWORD *)(v175 + 8 * v42);
      ++v36;
      if (v43)
        goto LABEL_30;
      v36 = v42 + 1;
      if (v42 + 1 < v176)
      {
        v43 = *(_QWORD *)(v175 + 8 * v36);
        if (v43)
          goto LABEL_30;
        v36 = v42 + 2;
        if (v42 + 2 < v176)
        {
          v43 = *(_QWORD *)(v175 + 8 * v36);
          if (v43)
            goto LABEL_30;
          v36 = v42 + 3;
          if (v42 + 3 < v176)
          {
            v43 = *(_QWORD *)(v175 + 8 * v36);
            if (v43)
              goto LABEL_30;
            v44 = v42 + 4;
            if (v44 < v176)
            {
              v43 = *(_QWORD *)(v175 + 8 * v44);
              if (v43)
              {
                v36 = v44;
LABEL_30:
                v35 = (v43 - 1) & v43;
                v41 = __clz(__rbit64(v43)) + (v36 << 6);
                goto LABEL_31;
              }
              while (1)
              {
                v36 = v44 + 1;
                if (__OFADD__(v44, 1))
                  break;
                if (v36 >= v176)
                  goto LABEL_4;
                v43 = *(_QWORD *)(v175 + 8 * v36);
                ++v44;
                if (v43)
                  goto LABEL_30;
              }
              __break(1u);
              goto LABEL_140;
            }
          }
        }
      }
    }
LABEL_4:
    swift_bridgeObjectRelease(v15);
    swift_release();
    v21 = v185;
    v185 = v31;
    swift_bridgeObjectRelease(v21);
    swift_endAccess(&v179);

    sub_100027F10(&v182);
    v13 = v164;
    sub_10001F544((uint64_t)v164, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = v174 + 1;
    v15 = v167;
    ObjectType = v165;
    v8 = v163;
    v20 = v173;
    if (v174 + 1 == v170)
    {
      v96 = swift_bridgeObjectRelease(v154);
      if ((v156 & 1) == 0)
      {
LABEL_103:
        v121 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 248);
        v122 = (void *)v121(v161, ObjectType, v15, v96);
        v83 = (unint64_t)v122;
        if (v170 == 1)
        {
          if (v122)
          {
            v123 = objc_msgSend(v122, "store");
            v124 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v123);

            v125 = objc_msgSend(v124, "updateReminder:", v83);
LABEL_136:
            v125;

            sub_10001F544(v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_137;
          }
          goto LABEL_123;
        }
        if (v122)
        {
          REMReminder.ttrHashtagContext.getter(&v179);
          if (v180)
          {
            v176 = v83;
            sub_10002E37C(&v179, (uint64_t)&v182);
            v126 = v183;
            v127 = v184;
            sub_10001413C(&v182, v183);
            *(_QWORD *)&v179 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v126, v127);
            v128 = sub_10002A750(&qword_100645300);
            v129 = sub_100023FEC((unint64_t *)&qword_100645308, &qword_100645300, (uint64_t)&protocol conformance descriptor for Set<A>);
            REMHashtagLabelCollection.init<A>(hashtags:)(&v179, v128, v129);
            v130 = v170 - 1;
            if (v170 <= 1)
              v131 = 1;
            else
              v131 = v170;
            v132 = swift_bridgeObjectRetain(v154);
            v133 = v131 - 1;
            v135 = v134 + v171 + v153;
            while (v133)
            {
              v136 = v121(v135, v165, v167, v132);
              if (!v136)
                goto LABEL_129;
              v137 = (void *)v136;
              REMReminder.ttrHashtagContext.getter(&v177);
              if (!v178)
              {
                swift_bridgeObjectRelease(v154);

                (*(void (**)(char *, uint64_t))(v158 + 8))(v160, v159);
                sub_1000073A0((uint64_t)&v177, &qword_10063F588);
                goto LABEL_132;
              }
              sub_10002E37C(&v177, (uint64_t)&v179);
              v138 = v180;
              v139 = v181;
              sub_10001413C(&v179, v180);
              *(_QWORD *)&v177 = (*(uint64_t (**)(uint64_t, uint64_t))(v139 + 8))(v138, v139);
              v140 = v157;
              REMHashtagLabelCollection.init<A>(hashtags:)(&v177, v128, v129);
              v141 = REMHashtagLabelCollection.matches(_:)(v160);

              v142 = *(void (**)(char *, uint64_t))(v158 + 8);
              v142(v140, v159);
              if ((v141 & 1) == 0)
              {
                v148 = swift_bridgeObjectRelease(v154);
                ((void (*)(char *, uint64_t, __n128))v142)(v160, v159, v148);
                sub_100027F10(&v179);
                goto LABEL_132;
              }
              sub_100027F10(&v179);
              --v133;
              v135 += v171;
              if (!--v130)
              {
                v143 = swift_bridgeObjectRelease(v154);
                ((void (*)(char *, uint64_t, __n128))v142)(v160, v159, v143);
                v144 = 1;
                goto LABEL_133;
              }
            }
            goto LABEL_143;
          }
LABEL_127:
          sub_1000073A0((uint64_t)&v179, &qword_10063F588);
          v144 = 0;
          goto LABEL_134;
        }
        v93 = v161;
LABEL_77:
        sub_10001F544(v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_79;
      }
      v97 = *(_QWORD *)(v155 + 48);
      v98 = swift_getObjectType(*(_QWORD *)(v155 + 40), v95);
      v176 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 592))(v98, v97);
      v99 = *(_QWORD *)(v176 + 16);
      if (v99)
      {
        v100 = (uint64_t *)(v176 + 40);
        do
        {
          v104 = *(v100 - 1);
          v103 = *v100;
          swift_beginAccess(&v185, &v182, 32, 0);
          v105 = v185[2];
          swift_bridgeObjectRetain(v103);
          if (v105)
          {
            sub_100005CF4(v104, v103);
            if ((v106 & 1) != 0)
            {
              swift_endAccess(&v182);
              swift_bridgeObjectRelease(v103);
              goto LABEL_86;
            }
          }
          swift_endAccess(&v182);
          swift_beginAccess(&v185, &v182, 33, 0);
          v107 = swift_isUniquelyReferenced_nonNull_native(v185);
          v108 = v185;
          *(_QWORD *)&v179 = v185;
          v185 = (_QWORD *)0x8000000000000000;
          v110 = sub_100005CF4(v104, v103);
          v111 = v108[2];
          v112 = (v109 & 1) == 0;
          v113 = v111 + v112;
          if (__OFADD__(v111, v112))
            goto LABEL_141;
          v114 = v109;
          if (v108[3] >= v113)
          {
            if ((v107 & 1) != 0)
            {
              v117 = (_QWORD *)v179;
              if ((v109 & 1) == 0)
                goto LABEL_97;
            }
            else
            {
              sub_1002AECB0();
              v117 = (_QWORD *)v179;
              if ((v114 & 1) == 0)
                goto LABEL_97;
            }
          }
          else
          {
            sub_1004584FC(v113, v107);
            v115 = sub_100005CF4(v104, v103);
            if ((v114 & 1) != (v116 & 1))
              goto LABEL_144;
            v110 = v115;
            v117 = (_QWORD *)v179;
            if ((v114 & 1) == 0)
            {
LABEL_97:
              v117[(v110 >> 6) + 8] |= 1 << v110;
              v118 = (uint64_t *)(v117[6] + 16 * v110);
              *v118 = v104;
              v118[1] = v103;
              *(_QWORD *)(v117[7] + 8 * v110) = &_swiftEmptySetSingleton;
              v119 = v117[2];
              v58 = __OFADD__(v119, 1);
              v120 = v119 + 1;
              if (v58)
                goto LABEL_142;
              v117[2] = v120;
              swift_bridgeObjectRetain(v103);
              goto LABEL_85;
            }
          }
          v101 = v117[7];
          swift_bridgeObjectRelease(*(_QWORD *)(v101 + 8 * v110));
          *(_QWORD *)(v101 + 8 * v110) = &_swiftEmptySetSingleton;
LABEL_85:
          v102 = v185;
          v185 = v117;
          swift_bridgeObjectRelease(v103);
          swift_bridgeObjectRelease(v102);
          swift_endAccess(&v182);
LABEL_86:
          v100 += 2;
          --v99;
        }
        while (v99);
      }
LABEL_102:
      v96 = swift_bridgeObjectRelease(v176);
      v15 = v167;
      ObjectType = v165;
      goto LABEL_103;
    }
  }
  v25 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 248))(v13, ObjectType, v15);
  if (!v25)
  {
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRelease(v154);
    sub_10001F544(v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_119;
  }
  REMReminder.ttrHashtagContext.getter(&v179);
  if (!v180)
  {
LABEL_78:

    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRelease(v154);
    sub_10001F544(v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000073A0((uint64_t)&v179, &qword_10063F588);
LABEL_79:
    swift_bridgeObjectRelease(v185);
    return 0;
  }
  v169 = v25;
  sub_10002E37C(&v179, (uint64_t)&v182);
  v60 = v183;
  v61 = v184;
  sub_10001413C(&v182, v183);
  v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61);
  __chkstk_darwin(v62);
  *(&v153 - 2) = (unint64_t)v13;
  sub_1001A0180((uint64_t)&_swiftEmptyDictionarySingleton, (void (*)(uint64_t *, id *))sub_1001BD84C, (uint64_t)(&v153 - 4), v62);
  v15 = v63;
  v173 = v20;
  swift_bridgeObjectRelease(v62);
  swift_beginAccess(&v185, &v179, 33, 0);
  v64 = swift_isUniquelyReferenced_nonNull_native(v185);
  v31 = v185;
  *(_QWORD *)&v177 = v185;
  v185 = (_QWORD *)0x8000000000000000;
  v65 = *(_QWORD *)(v15 + 64);
  v175 = v15 + 64;
  v66 = 1 << *(_BYTE *)(v15 + 32);
  if (v66 < 64)
    v67 = ~(-1 << v66);
  else
    v67 = -1;
  v68 = v67 & v65;
  v176 = (unint64_t)(v66 + 63) >> 6;
  swift_bridgeObjectRetain(v15);
  v69 = 0;
  if (v68)
  {
    while (1)
    {
      v74 = __clz(__rbit64(v68));
      v68 &= v68 - 1;
      v75 = v74 | (v69 << 6);
LABEL_66:
      v79 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v75);
      v80 = *v79;
      ObjectType = v79[1];
      v81 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v75);
      swift_bridgeObjectRetain(ObjectType);
      swift_bridgeObjectRetain(v81);
      v83 = sub_100005CF4(v80, ObjectType);
      v84 = v31[2];
      v85 = (v82 & 1) == 0;
      v86 = v84 + v85;
      if (__OFADD__(v84, v85))
        break;
      v87 = v82;
      if (v31[3] >= v86)
      {
        if ((v64 & 1) == 0)
          sub_1002AECB0();
      }
      else
      {
        sub_1004584FC(v86, v64 & 1);
        v88 = sub_100005CF4(v80, ObjectType);
        if ((v87 & 1) != (v89 & 1))
          goto LABEL_144;
        v83 = v88;
      }
      v31 = (_QWORD *)v177;
      if ((v87 & 1) != 0)
      {
        v70 = 8 * v83;
        v71 = *(_QWORD *)(*(_QWORD *)(v177 + 56) + v70);
        swift_bridgeObjectRetain(v71);
        v72 = sub_1004775D4(v81, v71);
        swift_bridgeObjectRelease(ObjectType);
        v73 = v31[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v73 + v70));
        *(_QWORD *)(v73 + v70) = v72;
        v64 = 1;
        if (!v68)
          goto LABEL_50;
      }
      else
      {
        *(_QWORD *)(v177 + 8 * (v83 >> 6) + 64) |= 1 << v83;
        v90 = (uint64_t *)(v31[6] + 16 * v83);
        *v90 = v80;
        v90[1] = ObjectType;
        *(_QWORD *)(v31[7] + 8 * v83) = v81;
        v91 = v31[2];
        v58 = __OFADD__(v91, 1);
        v92 = v91 + 1;
        if (v58)
        {
          __break(1u);
          goto LABEL_127;
        }
        v31[2] = v92;
        v64 = 1;
        if (!v68)
          goto LABEL_50;
      }
    }
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    v145 = v161;
    v146 = v162(v161, ObjectType, v15);
    sub_10001F544(v145, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v146)
    {
LABEL_137:
      swift_beginAccess(&v185, &v182, 0, 0);
      return (uint64_t)v185;
    }
LABEL_119:
    swift_bridgeObjectRelease(v185);
    return 0;
  }
LABEL_50:
  v76 = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
LABEL_129:
    v147 = swift_bridgeObjectRelease(v154);
    (*(void (**)(char *, uint64_t, __n128))(v158 + 8))(v160, v159, v147);
LABEL_132:
    v144 = 0;
LABEL_133:
    sub_100027F10(&v182);
    v83 = v176;
LABEL_134:
    v149 = objc_msgSend((id)v83, "store");
    v124 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v149);

    if (!v144)
    {
      v150 = objc_msgSend((id)v83, "list");
      v151 = objc_msgSend(v124, "updateList:", v150);

      v152 = String._bridgeToObjectiveC()();
      objc_msgSend(v124, "addReminderWithTitle:toListChangeItem:", v152, v151);

      sub_10001F544(v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_beginAccess(&v185, &v182, 0, 0);
      return (uint64_t)v185;
    }
    v125 = objc_msgSend(v124, "updateReminder:", v83);
    goto LABEL_136;
  }
  if (v76 >= v176)
    goto LABEL_4;
  v77 = *(_QWORD *)(v175 + 8 * v76);
  ++v69;
  if (v77)
    goto LABEL_65;
  v69 = v76 + 1;
  if (v76 + 1 >= v176)
    goto LABEL_4;
  v77 = *(_QWORD *)(v175 + 8 * v69);
  if (v77)
    goto LABEL_65;
  v69 = v76 + 2;
  if (v76 + 2 >= v176)
    goto LABEL_4;
  v77 = *(_QWORD *)(v175 + 8 * v69);
  if (v77)
    goto LABEL_65;
  v69 = v76 + 3;
  if (v76 + 3 >= v176)
    goto LABEL_4;
  v77 = *(_QWORD *)(v175 + 8 * v69);
  if (v77)
    goto LABEL_65;
  v78 = v76 + 4;
  if (v78 >= v176)
    goto LABEL_4;
  v77 = *(_QWORD *)(v175 + 8 * v78);
  if (v77)
  {
    v69 = v78;
LABEL_65:
    v68 = (v77 - 1) & v77;
    v75 = __clz(__rbit64(v77)) + (v69 << 6);
    goto LABEL_66;
  }
  while (1)
  {
    v69 = v78 + 1;
    if (__OFADD__(v78, 1))
      break;
    if (v69 >= v176)
      goto LABEL_4;
    v77 = *(_QWORD *)(v175 + 8 * v69);
    ++v78;
    if (v77)
      goto LABEL_65;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_QWORD *sub_1001A4608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[2];

  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96))(ObjectType, v6);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = sub_10021DD18();
  v12 = v11[2];
  swift_bridgeObjectRelease(v11);
  if (!v12
    || (v23[1] = a1,
        v13 = sub_10002A750(&qword_100649DF0),
        v14 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr),
        v15 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]), v16 = Sequence.completeCompactMap<A>(_:)(sub_1001BF31C, 0, v13, v14, v15), (v17 = v16) == 0))
  {
    swift_unknownObjectRelease(v10);
    return 0;
  }
  if ((unint64_t)v16 >> 62)
  {
    if (v16 >= 0)
      v16 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v16))
      goto LABEL_6;
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease(v17);
    swift_unknownObjectRelease(v10);
    return 0;
  }
LABEL_6:
  v18 = sub_100017684(v17);
  swift_bridgeObjectRelease(v17);
  v19 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectRetain(v10);
  sub_1001BB050(v19, v18);
  swift_bridgeObjectRelease(v18);
  swift_unknownObjectRelease(v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 136))(ObjectType, v6);
  v20 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v5, 1, v20) == 1)
    sub_1000073A0((uint64_t)v5, &qword_100649CA0);
  else
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v21 = sub_10021DD18();
  sub_10021DF50();
  swift_unknownObjectRelease(v10);
  return v21;
}

void sub_1001A4878(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[136];

  v4 = v3;
  v44 = a3;
  v7 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  __chkstk_darwin(v7);
  v43 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v13 = sub_100012DC4(v9, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v47);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x6E6F6974636573;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v16 = a2;
  v17 = TTRSectionID.description.getter(a2);
  v19 = v18;

  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v19;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a1;
  swift_bridgeObjectRetain(a1);
  v20 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List set  {section: %@, items: %@}", 44, 2, v20);
  v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v21);
  swift_retain();
  v22 = (uint64_t)sub_1001BB990(a1, v4);
  swift_release();
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v42 = v22;
    else
      v42 = v22 & 0xFFFFFFFFFFFFFF8;
    if (!_CocoaArrayWrapper.endIndex.getter(v42))
      goto LABEL_13;
  }
  else if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    swift_bridgeObjectRelease(v22);
    return;
  }
  if (!a2)
  {
    v38 = -1;
    goto LABEL_11;
  }
  v24 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), v23);
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 96);
  v27 = v16;
  v28 = v26(ObjectType, v24);
  if (!v28)
  {

    goto LABEL_13;
  }
  v29 = v28;
  Strong = swift_unknownObjectWeakLoadStrong(v28 + 56);
  if (Strong)
  {
    v32 = Strong;
    v33 = *(_QWORD *)(v29 + 64);
    v34 = swift_getObjectType(Strong, v31);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v34, v33);
    swift_unknownObjectRelease(v32);
    v36 = v27;
    a2 = (void *)TTRSection.init(with:store:)(v36, v35);
    v38 = v37;
    LODWORD(v35) = ~v37;

    swift_unknownObjectRelease(v29);
    if (!(_DWORD)v35)
      goto LABEL_13;
LABEL_11:
    v39 = *(_QWORD *)(v4 + 64);
    v40 = swift_getObjectType(*(_QWORD *)(v4 + 56), v23);
    v41 = (uint64_t)v43;
    (*(void (**)(uint64_t, uint64_t))(v39 + 600))(v40, v39);
    sub_1001B4278(v22, a2, v38, 1, 2u, v41, v44);
    swift_bridgeObjectRelease(v22);
    sub_1001BD81C(a2, v38);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v41, v46);
    return;
  }
  swift_bridgeObjectRelease(v22);

  swift_unknownObjectRelease(v29);
}

uint64_t sub_1001A4BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[5];
  char v56;

  v49 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v49);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v50 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v44 - v9;
  v11 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v12);
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 8);
  v46 = ObjectType;
  v14(v55, ObjectType, v11);
  sub_100179C5C(v55);
  v15 = 0;
  if ((v56 & 1) != 0)
    return v15;
  v47 = *(_QWORD *)(a1 + 16);
  if (!v47)
    return 0;
  v44 = v8;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
LABEL_38:
    v43 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
    v17 = v46;
    if (v43)
      sub_10048CBE4((uint64_t)_swiftEmptyArrayStorage);
    else
      v16 = &_swiftEmptySetSingleton;
  }
  else
  {
    v16 = &_swiftEmptySetSingleton;
    v17 = v46;
  }
  v54 = (uint64_t)v16;
  v48 = a1 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  v45 = a1;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  do
  {
    a1 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    v19 = sub_10002B1E8(v48 + *(_QWORD *)(v50 + 72) * v18, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v19);
    if (swift_getEnumCaseMultiPayload(v4, v49) > 2)
      goto LABEL_19;
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 320))(v10, v17, v11);
    if (v20)
    {
      v21 = (void *)v20;
      REMReminderChangeItem.ttrAssignmentContext.getter(v51);
      if (!v52)
        goto LABEL_18;
      v22 = sub_1000073A0((uint64_t)v51, (uint64_t *)&unk_100649E00);
      REMReminderChangeItem.ttrList.getter(v51, v22);
      v23 = v52;
      if (!v52)
        goto LABEL_6;
    }
    else
    {
      v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 248))(v10, v17, v11);
      if (!v24)
        goto LABEL_19;
      v21 = (void *)v24;
      REMReminder.ttrAssignmentContext.getter(v51);
      if (!v52)
      {
LABEL_18:

        sub_1000073A0((uint64_t)v51, (uint64_t *)&unk_100649E00);
LABEL_19:
        sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v54);
        return 0;
      }
      v25 = sub_1000073A0((uint64_t)v51, (uint64_t *)&unk_100649E00);
      REMReminder.ttrList.getter(v51, v25);
      v23 = v52;
      if (!v52)
      {
LABEL_6:

        sub_1000073A0((uint64_t)v51, &qword_100649C80);
        goto LABEL_7;
      }
    }
    v26 = v53;
    sub_10001413C(v51, v23);
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v23, v26);
    sub_100027F10(v51);
    v28 = v27;
    sub_1000176A0((Swift::Int *)v51, v28);

    v17 = v46;
LABEL_7:
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ++v18;
  }
  while (a1 != v47);
  swift_bridgeObjectRelease(v45);
  v30 = v54;
  if ((v54 & 0xC000000000000001) != 0)
  {
    if (v54 < 0)
      v31 = v54;
    else
      v31 = v54 & 0xFFFFFFFFFFFFFF8;
    v32 = __CocoaSet.count.getter(v31);
  }
  else
  {
    v32 = *(_QWORD *)(v54 + 16);
  }
  v33 = (uint64_t)v44;
  swift_bridgeObjectRelease(v30);
  if (v32 != 1)
    return 0;
  sub_10002B1E8(v48, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v34 = v46;
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 296))(v33, v46, v11);
  if (!v35)
  {
    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  v15 = v35;
  v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 248))(v33, v34, v11);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, "store");
    v39 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v38);

    if (v47 == 1)
    {
      objc_msgSend(v39, "updateReminder:", v37);
    }
    else
    {
      v40 = objc_msgSend(v37, "list");
      v41 = objc_msgSend(v39, "updateList:", v40);

      v42 = String._bridgeToObjectiveC()();
      objc_msgSend(v39, "addReminderWithTitle:toListChangeItem:", v42, v41);

    }
    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v15;
}

uint64_t sub_1001A5138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(_QWORD *__return_ptr, uint64_t, void *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t, _QWORD *, __n128);
  __n128 v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)(_QWORD, void *);
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  void (**v68)(_QWORD *__return_ptr, uint64_t, void *);
  _BYTE v69[40];

  v3 = v2;
  v5 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 320))(a1, ObjectType, v5);
  if (v7)
  {
    v8 = v7;
    *((_QWORD *)&v67 + 1) = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v68 = (void (**)(_QWORD *__return_ptr, uint64_t, void *))&protocol witness table for REMReminderChangeItem;
    *(_QWORD *)&v66 = v8;
  }
  else
  {
    v68 = 0;
    v66 = 0u;
    v67 = 0u;
  }
  sub_10000F614((uint64_t)&v66, (uint64_t)v69, &qword_10063F5A0);
  sub_10000735C((uint64_t)v69, (uint64_t)&v63, &qword_10063F5A0);
  if (v64)
  {
    sub_10002E37C(&v63, (uint64_t)&v66);
    v9 = *((_QWORD *)&v67 + 1);
    v10 = v68;
    sub_10001413C(&v66, *((uint64_t *)&v67 + 1));
    v10[22](v57, v9, v10);
    v11 = v58;
    if (v58)
    {
      v12 = v59;
      sub_10001413C(v57, v58);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 104))(&v60, v11, v12);
      sub_100027F10(v57);
      if (*((_QWORD *)&v61 + 1))
      {
        sub_10002E37C(&v60, (uint64_t)&v63);
        v13 = v64;
        v14 = v65;
        sub_10001413C(&v63, v64);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14) & 1) != 0)
        {
          v15 = (uint64_t *)(v3
                          + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection);
          swift_beginAccess(v3+ OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection, &v60, 0, 0);
          v16 = *v15;
          v17 = *((_QWORD *)&v67 + 1);
          v18 = v68;
          sub_10001413C(&v66, *((uint64_t *)&v67 + 1));
          v19 = (uint64_t (*)(uint64_t, _QWORD *, __n128))v18[1];
          v20 = swift_bridgeObjectRetain(v16);
          v21 = (void *)v19(v17, v18, v20);
          LOBYTE(v17) = sub_10037B2EC(v21, v16);

          v22 = swift_bridgeObjectRelease(v16);
          if ((v17 & 1) != 0)
          {
            if (qword_10063D420 != -1)
              swift_once(&qword_10063D420, sub_1001AF584);
            v23 = type metadata accessor for Logger(0);
            v24 = sub_100012DC4(v23, (uint64_t)qword_10064A550);
            v25 = Logger.logObject.getter(v24);
            v26 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v25, v26))
              goto LABEL_41;
            v27 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v27 = 0;
            v28 = "CheckBeforeFetchingSuggestedSection: Shouldn't fetch suggested section for reminder that was previousl"
                  "y shown a suggested section in this session";
          }
          else
          {
            v40 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 112))(ObjectType, v5, v22);
            if (v40)
            {
              v42 = v40;
              v43 = v41;
              v44 = swift_getObjectType(v40, v41);
              v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v44, v43);
              v46 = *((_QWORD *)&v67 + 1);
              v47 = (uint64_t (**)(_QWORD, void *))v68;
              sub_10001413C(&v66, *((uint64_t *)&v67 + 1));
              v48 = (void *)v47[1](v46, v47);
              LOBYTE(v46) = sub_10037B2EC(v48, v45);

              swift_bridgeObjectRelease(v45);
              if ((v46 & 1) != 0)
              {
                v49 = *((_QWORD *)&v67 + 1);
                v50 = v68;
                sub_10001413C(&v66, *((uint64_t *)&v67 + 1));
                if ((TTRReminderProtocol.isSubtask.getter(v49, v50) & 1) == 0)
                {
                  sub_1001B4B94();
                  swift_retain();
                  PassthroughSubject.send(_:)(&v66);
                  swift_unknownObjectRelease(v42);
                  swift_release();
                  goto LABEL_42;
                }
                if (qword_10063D420 != -1)
                  swift_once(&qword_10063D420, sub_1001AF584);
                v51 = type metadata accessor for Logger(0);
                v52 = sub_100012DC4(v51, (uint64_t)qword_10064A550);
                v25 = Logger.logObject.getter(v52);
                v53 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v25, v53))
                {
                  v54 = (uint8_t *)swift_slowAlloc(2, -1);
                  *(_WORD *)v54 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v25, v53, "CheckBeforeFetchingSuggestedSection: Shouldn't fetch suggested section for subtask", v54, 2u);
                  swift_slowDealloc(v54, -1, -1);
                }
                swift_unknownObjectRelease(v42);
LABEL_41:

LABEL_42:
                sub_1000073A0((uint64_t)v69, &qword_10063F5A0);
                sub_100027F10(&v63);
                return sub_100027F10(&v66);
              }
              swift_unknownObjectRelease(v42);
            }
            if (qword_10063D420 != -1)
              swift_once(&qword_10063D420, sub_1001AF584);
            v55 = type metadata accessor for Logger(0);
            v56 = sub_100012DC4(v55, (uint64_t)qword_10064A550);
            v25 = Logger.logObject.getter(v56);
            v26 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v25, v26))
              goto LABEL_41;
            v27 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v27 = 0;
            v28 = "CheckBeforeFetchingSuggestedSection: Shouldn't fetch suggested section for reminder that wasn't recently created";
          }
          _os_log_impl((void *)&_mh_execute_header, v25, v26, v28, v27, 2u);
          swift_slowDealloc(v27, -1, -1);
          goto LABEL_41;
        }
        sub_100027F10(&v63);
LABEL_21:
        if (qword_10063D420 != -1)
          swift_once(&qword_10063D420, sub_1001AF584);
        v35 = type metadata accessor for Logger(0);
        v36 = sub_100012DC4(v35, (uint64_t)qword_10064A550);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "CheckBeforeFetchingSuggestedSection: Shouldn't fetch suggested section in list that doesn't support categorization of grocery items", v39, 2u);
          swift_slowDealloc(v39, -1, -1);
        }

        sub_1000073A0((uint64_t)v69, &qword_10063F5A0);
        return sub_100027F10(&v66);
      }
    }
    else
    {
      sub_1000073A0((uint64_t)v57, &qword_100649C80);
      v60 = 0u;
      v61 = 0u;
      v62 = 0;
    }
    sub_1000073A0((uint64_t)&v60, &qword_100661E80);
    goto LABEL_21;
  }
  sub_1000073A0((uint64_t)&v63, &qword_10063F5A0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v29 = type metadata accessor for Logger(0);
  v30 = sub_100012DC4(v29, (uint64_t)qword_10064A550);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "CheckBeforeFetchingSuggestedSection: Couldn't get reminder for item", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }

  return sub_1000073A0((uint64_t)v69, &qword_10063F5A0);
}

double sub_1001A57E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  _BYTE v22[24];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = (uint64_t *)(v1
                   + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID);
    v5 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain(a1);
    do
    {
      v9 = TTRRemindersListViewModel.Item.reminderObjectID.getter(v8);
      if (!v9)
        break;
      v10 = (void *)v9;
      swift_beginAccess(v4, v22, 33, 0);
      v11 = *v4;
      if (*v4)
      {
        v12 = v10;
        swift_bridgeObjectRetain(v11);
        v13 = sub_1002AA364((uint64_t)v12);
        v15 = v14;
        swift_bridgeObjectRelease(v11);
        if ((v15 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
          v17 = *v4;
          v21 = *v4;
          *v4 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1002AEAFC();
            v17 = v21;
          }

          v18 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 16 * v13 + 8);
          sub_1002AD39C(v13, v17);
          v19 = *v4;
          *v4 = v17;
          swift_bridgeObjectRelease(v18);

          swift_bridgeObjectRelease(v19);
        }
        else
        {

        }
      }
      swift_endAccess(v22);

      v6 += v7;
      --v2;
    }
    while (v2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001A5954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[5];
  __int128 v25;
  uint64_t v26;
  _UNKNOWN **v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v7 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56), a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 520))(&v25, a2, a3, ObjectType, v7);
  if (v26)
  {
    sub_10002E37C(&v25, (uint64_t)v28);
    v9 = sub_100478C64(a1, ObjectType, v7);
    if (v9)
    {
      v10 = v9;
      v11 = v29;
      v12 = v30;
      sub_10001413C(v28, v29);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v12 + 32))(&v25, v10, v11, v12);
      swift_bridgeObjectRelease(v10);
      v14 = v26;
      v13 = v27;
      sub_10001413C(&v25, v26);
      LOBYTE(v14) = ((uint64_t (*)(uint64_t, _UNKNOWN **))v13[2])(v14, v13) ^ 1;
LABEL_10:
      sub_100027F10(&v25);
      sub_100027F10(v28);
      return v14 & 1;
    }
    sub_100027F10(v28);
  }
  else
  {
    sub_1000073A0((uint64_t)&v25, &qword_100641748);
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96))(ObjectType, v7);
  if (v14)
  {
    sub_10021F790(v24);
    sub_10001413C(v24, v24[3]);
    sub_1000B4310(a2, a3, (uint64_t *)&v25);
    sub_100027F10(v24);
    if (v26)
    {
      sub_10002E37C(&v25, (uint64_t)v28);
      *(_QWORD *)&v25 = a1;
      v15 = sub_10002A750(&qword_100649DF0);
      v16 = sub_10002A750(&qword_1006445D8);
      v17 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
      v18 = Sequence.completeCompactMap<A>(_:)(sub_1001818A0, v14, v15, v16, v17);
      if (v18)
      {
        v19 = v18;
        v20 = *sub_10001413C(v28, v29);
        v21 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionPlan();
        v22 = swift_allocObject(v21, 72, 7);
        *(_QWORD *)(v22 + 16) = _swiftEmptyArrayStorage;
        *(_BYTE *)(v22 + 24) = 1;
        *(_QWORD *)(v22 + 32) = 0;
        *(_WORD *)(v22 + 40) = -512;
        *(_QWORD *)(v22 + 56) = 0;
        *(_QWORD *)(v22 + 64) = 0;
        *(_QWORD *)(v22 + 48) = v20;
        swift_retain();
        sub_1000B5084(v19);
        v26 = v21;
        v27 = &off_1005EFFF0;
        *(_QWORD *)&v25 = v22;
        swift_bridgeObjectRelease(v19);
        LOBYTE(v20) = *(_BYTE *)(*sub_10001413C(&v25, v21) + 24);
        swift_unknownObjectRelease(v14);
        LOBYTE(v14) = v20 ^ 1;
        goto LABEL_10;
      }
      swift_unknownObjectRelease(v14);
      sub_100027F10(v28);
    }
    else
    {
      swift_unknownObjectRelease(v14);
      sub_1000073A0((uint64_t)&v25, (uint64_t *)&unk_10064A010);
    }
    LOBYTE(v14) = 0;
  }
  return v14 & 1;
}

BOOL sub_1001A5C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BOOL8 v13;
  uint64_t v15[5];
  char v16;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)v15 - v8;
  if (*(_QWORD *)(a1 + 16) != 1)
    return 0;
  sub_10002B1E8(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v15 - v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v10 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v15, ObjectType, v10);
  sub_100179C5C(v15);
  if ((v16 & 1) != 0)
  {
    v13 = 0;
  }
  else
  {
    sub_10001F580((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v13 = swift_getEnumCaseMultiPayload(v5, v3) == 2;
    v9 = v5;
  }
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v13;
}

uint64_t sub_1001A5D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v5 + 528))(&v12, a2, ObjectType, v5);
  if (v13)
  {
    sub_10002E37C(&v12, (uint64_t)v15);
    v7 = sub_100478C64(a1, ObjectType, v5);
    if (v7)
    {
      v8 = v16;
      v9 = v17;
      sub_10001413C(v15, v16);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v9 + 32))(&v12, v7, v8, v9);
      swift_bridgeObjectRelease(v7);
      v7 = v13;
      v10 = v14;
      sub_10001413C(&v12, v13);
      LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v7, v10) ^ 1;
      sub_100027F10(&v12);
    }
    sub_100027F10(v15);
  }
  else
  {
    sub_1000073A0((uint64_t)&v12, &qword_100641748);
    LOBYTE(v7) = 0;
  }
  return v7 & 1;
}

void sub_1001A5E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v2 = v1;
  v19 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v19);
  v4 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  v5 = __chkstk_darwin(v4);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - v7;
  v24 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v23 = *(_QWORD *)(v24 - 8);
  v9 = __chkstk_darwin(v24);
  v20 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - v11;
  v13 = *(_QWORD *)(v1 + 56);
  v22 = v2;
  v14 = *(_QWORD *)(v2 + 64);
  swift_getObjectType(v13, v15);
  v16 = *(void (**)(void))(v14 + 600);
  v25 = v12;
  v21 = v13;
  v16();
  sub_10002B1E8(a1, (uint64_t)v8, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v17 = (char *)&loc_1001A601C + *((int *)qword_1001A6BA8 + swift_getEnumCaseMultiPayload(v8, v4));
  __asm { BR              X10 }
}

uint64_t sub_1001A602C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  __n128 v28;

  *(_QWORD *)(v3 - 352) = v0;
  v4 = *(void **)(v1 + 8);
  *(_QWORD *)(v3 - 344) = *(_QWORD *)v1;
  v5 = *(void **)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v3 - 312);
  v9 = *(_QWORD *)(v3 - 336);
  v10 = *(_QWORD *)(v3 - 304);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v9, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v10);
  v11 = *(_QWORD *)(v3 - 296);
  v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v11, v9);
  v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v3 - 312) = v13;
  v13(v9, v10);
  if ((v12 & 1) != 0)
  {
    v15 = *(_QWORD *)(v3 - 320);
    v16 = *(_QWORD *)(v15 + 48);
    ObjectType = swift_getObjectType(*(_QWORD *)(v15 + 40), v14);
    v18 = *(_QWORD *)(v3 - 344);
    (*(void (**)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 296))(v18, v4, v5, v6, v7, ObjectType, v16);
    sub_10004E09C(v5, v6);
    v19 = v18;
  }
  else
  {
    v20 = v6;
    v19 = *(_QWORD *)(v3 - 344);
    v22 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 648))(v4, v11, v2);
    if (!v22)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 - 312))(v11, v10);
      sub_10004E09C(v5, v20);
      swift_bridgeObjectRelease(v19);

      swift_bridgeObjectRelease(v7);
      return v22 & 1;
    }
    v23 = *(_QWORD *)(v3 - 320);
    v24 = *(_QWORD *)(v23 + 48);
    v25 = swift_getObjectType(*(_QWORD *)(v23 + 40), v21);
    v26 = *(void (**)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 304);
    v27 = v24;
    v11 = *(_QWORD *)(v3 - 296);
    v26(v19, v4, v5, v20, v7, v22, v25, v27);
    sub_10004E09C(v5, v20);
    swift_bridgeObjectRelease(v22);
  }
  swift_bridgeObjectRelease(v19);

  v28 = swift_bridgeObjectRelease(v7);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 - 312))(v11, v10, v28);
  LOBYTE(v22) = 1;
  return v22 & 1;
}

uint64_t sub_1001A6BCC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t (*v20)(uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t);

  if ((unsigned __int16)a4 >> 14)
  {
    v9 = (a4 >> 8) & 0x3F;
    v10 = *(_QWORD *)(v4 + 48);
    if ((unsigned __int16)a4 >> 14 == 1)
    {
      ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 40), a2);
      v20 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v10 + 432);
      v12 = a2;
      sub_1000B5F50(a3, a4, BYTE1(a4) & 0x3F);
      v13 = a4 & 0x3FFF;
      v14 = a1;
      v15 = a2;
      v16 = 1;
    }
    else
    {
      ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 40), a2);
      v20 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v10 + 432);
      v12 = a2;
      sub_1000B5F50(a3, a4, BYTE1(a4) & 0x3F);
      v13 = a4 & 0x3FFF;
      v14 = a1;
      v15 = a2;
      v16 = 2;
    }
    v17 = a3;
  }
  else
  {
    LOBYTE(v9) = BYTE1(a4);
    v10 = *(_QWORD *)(v4 + 48);
    ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 40), a2);
    v20 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v10 + 432);
    v12 = a2;
    sub_1000B5F50(a3, a4, BYTE1(a4));
    v14 = a1;
    v15 = a2;
    v16 = 0;
    v17 = a3;
    v13 = a4;
  }
  v18 = v20(v14, v15, v16, v17, v13, ObjectType, v10);
  sub_1000B5F28(a3, a4, v9);

  return v18 & 1;
}

void sub_1001A6D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  char *v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v2 = v1;
  v16 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v16);
  v4 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  __chkstk_darwin(v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v17 = *(_QWORD *)(v19 - 8);
  v7 = __chkstk_darwin(v19);
  __chkstk_darwin(v7);
  v9 = (char *)v15 - v8;
  v10 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 600);
  v18 = v9;
  v15[1] = ObjectType;
  v13(ObjectType, v10);
  sub_10002B1E8(a1, (uint64_t)v6, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v14 = (char *)&loc_1001A6E8C + dword_1001A7854[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1001A6E9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;

  v5 = *v2;
  v6 = (void *)v2[1];
  v7 = (void *)v2[2];
  v8 = v2[4];
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *((unsigned __int8 *)v2 + 24);
  ObjectType = swift_getObjectType(v9, a2);
  (*(void (**)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 296))(v5, v6, v7, v11, v8, ObjectType, v10);
  sub_10004E09C(v7, v11);
  swift_bridgeObjectRelease(v5);

  v13 = swift_bridgeObjectRelease(v8);
  (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v4 - 312) + 8))(*(_QWORD *)(v4 - 304), *(_QWORD *)(v4 - 296), v13);
  return 1;
}

uint64_t sub_1001A7878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v21;
  unsigned int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];
  char v26;
  uint64_t v27[6];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v11);
  v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8);
  v13(v25, ObjectType, v10);
  sub_100179C5C(v25);
  v14 = 0;
  if ((v26 & 1) != 0)
    return v14;
  v13(v27, ObjectType, v10);
  sub_100179C5C(v27);
  if (LOBYTE(v27[0]) == 2)
    return 0;
  v15 = a1;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return 0;
  v17 = v15 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v18 = *(_QWORD *)(v7 + 72);
  v24 = v15;
  swift_bridgeObjectRetain(v15);
  v14 = 0;
  while (1)
  {
    v21 = sub_10002B1E8(v17, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v21);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
    if (EnumCaseMultiPayload >= 2)
    {
      if (EnumCaseMultiPayload == 2)
        sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_6;
    }
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    result = sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (__OFADD__(v14++, 1))
      break;
LABEL_6:
    v17 += v18;
    if (!--v16)
    {
      swift_bridgeObjectRelease(v24);
      return v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A7A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v19;
  unsigned int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[5];
  char v24;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v23, ObjectType, v10);
  sub_100179C5C(v23);
  v13 = 0;
  if ((v24 & 1) != 0)
    return v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return 0;
  v15 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v16 = *(_QWORD *)(v7 + 72);
  v22 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (1)
  {
    v19 = sub_10002B1E8(v15, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v19);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
    if (EnumCaseMultiPayload >= 2)
    {
      if (EnumCaseMultiPayload == 2)
        sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_5;
    }
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    result = sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (__OFADD__(v13++, 1))
      break;
LABEL_5:
    v15 += v16;
    if (!--v14)
    {
      swift_bridgeObjectRelease(v22);
      return v13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A7C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  void *v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];
  char v31;

  v3 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v30, ObjectType, v6);
  sub_100179C5C(v30);
  if ((v31 & 1) != 0)
    goto LABEL_6;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 328))(a1, ObjectType, v6);
  if (v10 == -1)
  {
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    sub_1000073A0((uint64_t)&v24, &qword_10063F5A0);
LABEL_6:
    v14 = 0;
    v15 = 6;
    return v14 | (v15 << 8);
  }
  v11 = v9;
  if ((v10 & 1) != 0)
  {
    v12 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v13 = &protocol witness table for REMReminderChangeItem;
  }
  else
  {
    v12 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    v13 = &protocol witness table for REMReminder;
  }
  *((_QWORD *)&v25 + 1) = v12;
  v26 = v13;
  *(_QWORD *)&v24 = v11;
  sub_10002E37C(&v24, (uint64_t)v27);
  v16 = v28;
  v17 = v29;
  sub_10001413C(v27, v28);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v16, v17);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, "date");

    static Date._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v21 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
  }
  else
  {
    v22 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  }
  v15 = TTRRemindersListPostponeType.init(date:)(v5);
  sub_100027F10(v27);
  v14 = 1;
  return v14 | (v15 << 8);
}

uint64_t sub_1001A7E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _BYTE v22[128];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v22);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "postponeType");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v21 = a2;
  *(_QWORD *)(inited + 48) = String.init<A>(describing:)(&v21, &type metadata for TTRRemindersListPostponeType);
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a1;
  swift_bridgeObjectRetain(a1);
  v12 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Postpone {postponeType: %@, items: %@}", 53, 2, v12);
  v13 = swift_bridgeObjectRelease(v12);
  v14 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  v15 = static TTRLocalizableStrings.UndoAction.dueDateChange.getter(v14);
  v17 = v16;
  v18 = sub_1001B37F0(a1, a2, v15, v16);
  swift_bridgeObjectRelease(v17);
  return v18;
}

BOOL sub_1001A7FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v26;
  char v27;
  _BYTE v28[128];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v28);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "postponeType");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v27 = a2;
  *(_QWORD *)(inited + 48) = String.init<A>(describing:)(&v27, &type metadata for TTRRemindersListPostponeType);
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  v12 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v13 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v12, v16 + v14, v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100520250;
  sub_10002B1E8(a1, v17 + v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = v17;
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Relative To DueDate Postpone {postponeType: %@, item: %@}", 72, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
  v21 = static TTRLocalizableStrings.UndoAction.dueDateChange.getter(v20);
  v23 = v22;
  v24 = sub_1001B3960(a1, a2, v21, v22);
  swift_bridgeObjectRelease(v23);
  return v24;
}

uint64_t sub_1001A8210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v36);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  strcpy((char *)(inited + 32), "postponeType");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  LOBYTE(v35) = a1;
  v11 = String.init<A>(describing:)(&v35, &type metadata for TTRRemindersListPostponeType);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Mark All Overdue to {postponeType: %@}", 53, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  v15 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 192))(ObjectType, v15);
  v19 = *(_QWORD *)(v18 + 24);
  v20 = *(_QWORD *)(v18 + 32);
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRelease(v18);
  v22 = swift_getObjectType(v19, v21);
  v35 = v19;
  TTRTreeContentsQueryable.allItems.getter(v22, *(_QWORD *)(v20 + 8));
  v23 = swift_unknownObjectRelease(v19);
  v24 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()(v23);
  v25 = swift_release();
  v26 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 256))(v24, 0, ObjectType, v15, v25);
  v27 = sub_1001BBFEC(v24, v26);
  swift_release();
  v28 = swift_bridgeObjectRelease(v26);
  if (v27[2])
  {
    v29 = static TTRLocalizableStrings.UndoAction.markOverdueToToday.getter(v28);
    v31 = v30;
    v32 = sub_1001B37F0((uint64_t)v27, a1, v29, v30);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    swift_bridgeObjectRelease(v27);
    return 0;
  }
  return v32;
}

uint64_t sub_1001A8478()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v35[0] = *v0;
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)v35 - v5;
  v7 = sub_10002A750(&qword_100644980);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)v35 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)v35 - v15;
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v14);
  sub_10002B1E8((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17) == 1)
  {
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  }
  else
  {
    sub_10002B1E8((uint64_t)v4, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 0, 1, v18);
  }
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  sub_10000735C((uint64_t)v16, (uint64_t)v13, &qword_100644980);
  type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v13, 1, v18);
  if ((_DWORD)v19 != 1)
  {
    TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v19);
    v21 = v20;
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v13, &qword_100644980);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v22 = type metadata accessor for Logger(0);
  sub_100012DC4(v22, (uint64_t)qword_10064A550);
  v23 = sub_10000735C((uint64_t)v16, (uint64_t)v10, &qword_100644980);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(32, -1);
    v27 = swift_slowAlloc(96, -1);
    v37 = v27;
    *(_DWORD *)v26 = 136315650;
    v28 = _typeName(_:qualified:)(v35[0], 0);
    v30 = v29;
    v36 = sub_100027E40(v28, v29, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v26 + 4, v26 + 12);
    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v26 + 12) = 2080;
    v36 = sub_100027E40(0xD000000000000026, 0x8000000100568BF0, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v26 + 14, v26 + 22);
    *(_WORD *)(v26 + 22) = 2080;
    v31 = Optional.descriptionOrNil.getter(v7);
    v33 = v32;
    v36 = sub_100027E40(v31, v32, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v26 + 24, v26 + 32);
    swift_bridgeObjectRelease(v33);
    sub_1000073A0((uint64_t)v10, &qword_100644980);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: %s - Attempted to create a new section for invalid section item %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy(v27, 3, &type metadata for Any[8]);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    sub_1000073A0((uint64_t)v10, &qword_100644980);
  }
  sub_1000073A0((uint64_t)v16, &qword_100644980);
  return 0;
}

uint64_t sub_1001A8B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  _BYTE v37[40];
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _BYTE v43[16];
  _BYTE v44[24];

  v7 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96))(ObjectType, v7);
  if (result)
  {
    v10 = result;
    v11 = TTRRemindersListViewModel.Item.reminderObjectID.getter(result);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = sub_10002A750((uint64_t *)&unk_1006469C0);
      v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(_QWORD *)(v15 + 72);
      v17 = *(unsigned __int8 *)(v15 + 80);
      v32 = a2;
      v18 = (v17 + 32) & ~v17;
      v34 = v18 + v16;
      v33 = v17 | 7;
      v19 = swift_allocObject(v13, v18 + v16, v17 | 7);
      *(_OWORD *)(v19 + 16) = xmmword_100520250;
      v35 = a3;
      sub_10002B1E8(a1, v19 + v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1001A57E4(v19);
      swift_setDeallocating(v19);
      v31 = v14;
      swift_arrayDestroy(v19 + v18, *(_QWORD *)(v19 + 16), v14);
      swift_deallocClassInstance(v19, 32, 7);
      v20 = sub_10002A750((uint64_t *)&unk_1006415A0);
      inited = swift_initStackObject(v20, v36);
      *(_OWORD *)(inited + 16) = xmmword_100521140;
      *(_QWORD *)(inited + 32) = v12;
      *(_QWORD *)&v40 = inited;
      specialized Array._endMutation()(inited);
      v22 = v40;
      v23 = v12;
      v24 = sub_100017684(v22);
      swift_bridgeObjectRelease(v22);
      v25 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
      swift_unknownObjectRetain(v10);
      v26 = sub_1001BB050(v25, v24);
      swift_bridgeObjectRelease(v24);
      swift_unknownObjectRelease(v10);
      sub_10021ECB8(v32, v35, (uint64_t)v37);
      sub_10000F614((uint64_t)v37, (uint64_t)v38, &qword_10064A750);
      if (*(_QWORD *)&v38[0] == 1)
      {
        v27 = swift_allocObject(v13, v34, v33);
        *(_OWORD *)(v27 + 16) = xmmword_100520250;
        sub_10002B1E8(a1, v27 + v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1001ACF1C(v27, v32, v35, v26, 1, 0, 1, 0, 0);
        swift_unknownObjectRelease(v10);
        swift_bridgeObjectRelease(v26);

        swift_setDeallocating(v27);
        swift_arrayDestroy(v27 + v18, *(_QWORD *)(v27 + 16), v31);
        return swift_deallocClassInstance(v27, 32, 7);
      }
      else
      {
        v40 = v38[0];
        v41 = v38[1];
        v42 = v39;
        v28 = *(void **)&v38[0];
        v29 = swift_allocObject(v13, v34, v33);
        *(_OWORD *)(v29 + 16) = xmmword_100520250;
        sub_10002B1E8(a1, v29 + v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v30 = v28;
        sub_1001A4878(v29, v28, v26);

        swift_bridgeObjectRelease(v29);
        swift_unknownObjectRelease(v10);
        swift_bridgeObjectRelease(v26);

        sub_10000F614((uint64_t)&v40 + 8, (uint64_t)v43, &qword_100646428);
        sub_100056AB8((uint64_t)v43);
        sub_10000F614((uint64_t)&v41 + 8, (uint64_t)v44, &qword_100646428);
        return sub_100056AB8((uint64_t)v44);
      }
    }
    else
    {
      return swift_unknownObjectRelease(v10);
    }
  }
  return result;
}

uint64_t sub_1001A8F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v3 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), a2);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(ObjectType, v3);
  v7 = v6;
  sub_1000760F4(v5, v6);
  v8 = 0;
  if ((v7 & 0x100) != 0)
  {
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(ObjectType, v3);
    if (v9)
    {
      v10 = v9;
      v11 = sub_10002A750(&qword_100649DF0);
      v12 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v13 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
      v14 = Sequence.completeCompactMap<A>(_:)(sub_1001B5390, 0, v11, v12, v13);
      if (v14)
      {
        v15 = v14;
        if ((unint64_t)v14 >> 62)
        {
          if (v14 >= 0)
            v14 &= 0xFFFFFFFFFFFFFF8uLL;
          if (_CocoaArrayWrapper.endIndex.getter(v14))
            goto LABEL_6;
        }
        else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_6:
          v16 = sub_100017684(v15);
          swift_bridgeObjectRelease(v15);
          v17 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
          swift_unknownObjectRetain(v10);
          v8 = sub_1001BB050(v17, v16);
          swift_bridgeObjectRelease(v16);
          swift_unknownObjectRelease_n(v10, 2);
          return v8;
        }
        swift_unknownObjectRelease(v10);
        swift_bridgeObjectRelease(v15);
      }
      else
      {
        swift_unknownObjectRelease(v10);
      }
    }
    return 0;
  }
  return v8;
}

uint64_t sub_1001A90A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void *v21;
  uint64_t v22;
  void *v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = v2[8];
    ObjectType = swift_getObjectType(v2[7], v19);
    v21 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 344))(v13, ObjectType, v18);
    v23 = v21;
    v24 = v22;
    if (v22 > 2u)
    {
      if (v22 != 3)
      {
        sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_3;
      }
      v28 = v2[6];
      v29 = swift_getObjectType(v2[5], v22);
      v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 528))(v29, v28);
      if (v26)
        goto LABEL_12;
    }
    else
    {
      if (v22 - 1 < 2)
      {
        v25 = v21;
        v26 = v23;
        if (!v23)
          goto LABEL_15;
LABEL_12:
        v30 = v26;
        REMList.ttrGroceryContext.getter(v37);

        v31 = v38;
        if (!v38)
        {
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000760F4(v23, v24);
          sub_1000073A0((uint64_t)v37, &qword_100661E80);

          goto LABEL_18;
        }
        v32 = v39;
        sub_10001413C(v37, v38);
        v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
        sub_1000760F4(v23, v24);
        sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100027F10(v37);

        return v27 & 1;
      }
      v33 = v2[6];
      v34 = swift_getObjectType(v2[5], v22);
      v26 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 552))(v23, v34, v33);
      if (v26)
        goto LABEL_12;
    }
LABEL_15:
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000760F4(v23, v24);
    goto LABEL_18;
  }
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
LABEL_3:
  v15 = v2[8];
  v16 = swift_getObjectType(v2[7], v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 136))(v16, v15);
  v17 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100649CA0);
LABEL_18:
    v27 = 0;
    return v27 & 1;
  }
  v27 = v6[*(int *)(v17 + 112)];
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  return v27 & 1;
}

void sub_1001A93CC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  __n128 v23;
  unsigned __int8 *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v9 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 320))(a2, ObjectType, v9);
  if (v11)
  {
    v30 = v11;
    v12 = objc_msgSend(v11, "attachmentContext");
    if (v12)
      goto LABEL_6;

  }
  v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v14 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v9 + 240))(*(_QWORD *)(a1 + *(int *)(v13 + 20)), ObjectType, v9);
  if (!v14)
    return;
  v30 = v14;
  v12 = objc_msgSend(v14, "attachmentContext");
  if (!v12)
  {

    return;
  }
LABEL_6:
  v15 = v12;
  v16 = objc_msgSend(v12, "attachments");

  v17 = sub_100005ED8(0, &qword_10064A870, REMAttachment_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v19 = sub_100005ED8(0, &qword_10064A878, REMImageAttachment_ptr);
  v20 = sub_10002A750(&qword_10064A880);
  v21 = sub_100023FEC(&qword_10064A888, &qword_10064A880, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = Sequence.elements<A>(ofType:)(v19, v20, v19, v21);
  v23 = swift_bridgeObjectRelease(v18);
  v23.n128_u64[0] = a3;
  if ((a4 & 1) != 0)
    v23.n128_f64[0] = 1.0;
  v24 = (unsigned __int8 *)TTRAttachmentThumbnailsManager.thumbnails(for:scale:)(v22, v23);
  __chkstk_darwin(v24);
  swift_bridgeObjectRetain(v22);
  v25 = sub_1001BBAC4(v24, v22, (void (*)(void *, void *, uint64_t, char *))sub_1001BE4AC);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  if (v25[2])
  {
    v26 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    v27 = *(int *)(v26 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v27));
    *(_QWORD *)(a1 + v27) = v25;
    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v29 = v22;
      else
        v29 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v28 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v28 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)(a1 + *(int *)(v26 + 72)) = v28;
  }
  else
  {
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v22);
  }
}

uint64_t sub_1001A96A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t result;
  char v13;
  void *v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t, void *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t (**v39)(uint64_t, void *);
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 328))(a2, ObjectType, v10);
  if (v13 != -1)
  {
    v14 = (void *)result;
    v15 = v13;
    if ((v13 & 1) != 0)
    {
      v38 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      v39 = (uint64_t (**)(uint64_t, void *))&protocol witness table for REMReminderChangeItem;
      *(_QWORD *)&v37 = v14;
      v16 = v14;
      if (v38)
        goto LABEL_4;
    }
    else
    {
      v35 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v36 = &protocol witness table for REMReminder;
      *(_QWORD *)&v34 = v14;
      sub_10002E37C(&v34, (uint64_t)&v37);
      v25 = v38;
      v26 = v14;
      if (v25)
      {
LABEL_4:
        sub_10002E37C(&v37, (uint64_t)v40);
        v17 = v41;
        v18 = v42;
        sub_10001413C(v40, v41);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 184))(&v37, v17, v18);
        v19 = v38;
        if (!v38)
        {
          sub_1000760F4(v14, v15);
          sub_1000073A0((uint64_t)&v37, &qword_10064A860);
          return sub_100027F10(v40);
        }
        v20 = v39;
        sub_10001413C(&v37, v38);
        v21 = v20[4](v19, v20);
        v22 = sub_100027F10(&v37);
        if ((unint64_t)v21 >> 62)
        {
          if (v21 < 0)
            v27 = v21;
          else
            v27 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v21);
          v28 = _CocoaArrayWrapper.endIndex.getter(v27);
          swift_bridgeObjectRelease(v21);
          if (v28)
            goto LABEL_7;
        }
        else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_7:
          __chkstk_darwin(v22);
          v29[2] = v5;
          v29[3] = v14;
          v30 = v15 & 1;
          v31 = a3;
          v32 = a4;
          v33 = a2;
          v23 = sub_10046A748((void (*)(id *))sub_1001BE480, (uint64_t)v29, v21);
          sub_1000760F4(v14, v15);
          swift_bridgeObjectRelease(v21);
          v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 60);
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + v24));
          *(_QWORD *)(a1 + v24) = v23;
          return sub_100027F10(v40);
        }
        sub_1000760F4(v14, v15);
        swift_bridgeObjectRelease(v21);
        return sub_100027F10(v40);
      }
    }
    sub_1000760F4(v14, v15);
    return sub_1000073A0((uint64_t)&v37, &qword_10063F5A0);
  }
  return result;
}

void sub_1001A9938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD aBlock[6];

  v5 = v4;
  v51 = a2;
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v52 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), v13);
  v15 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v16 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v12 + 240))(*(_QWORD *)(a1 + *(int *)(v15 + 20)), ObjectType, v12);
  if (v16)
  {
    v53 = v16;
    v17 = objc_msgSend(v16, "siriFoundInAppsData");
    if (v17)
    {
      v18 = v17;
      v48 = a3;
      v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;

      sub_100005ED8(0, &qword_10064A858, SGRecordId_ptr);
      v22 = static SGRecordId.createFrom(data:)(v19, v21);
      if (v22)
      {
        v23 = (void *)v22;
        v49 = v19;
        v50 = v21;
        v47 = a4;
        sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
        v24 = objc_msgSend(v53, "list");
        v25 = objc_msgSend(v24, "objectID");

        v26 = objc_msgSend((id)objc_opt_self(REMList), "siriFoundInAppsListID");
        v27 = static NSObject.== infix(_:_:)(v25, v26);

        if ((v27 & 1) != 0)
        {
          v28 = objc_msgSend(*(id *)(v5 + 272), "objectForKey:", v23);
          v29 = v49;
          if (v28)
          {
            v30 = v28;
            v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
            v33 = v32;

            sub_1000A2B58(v29, v50);
            v34 = (uint64_t *)(a1 + *(int *)(v15 + 152));
            swift_bridgeObjectRelease(v34[1]);
            *v34 = v31;
            v34[1] = v33;
          }
          else
          {
            v37 = objc_msgSend((id)objc_opt_self(SGSuggestionsService), "serviceForReminders");
            v38 = v52;
            sub_10002B1E8(v51, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v39 = *(unsigned __int8 *)(v10 + 80);
            v40 = (v39 + 48) & ~v39;
            v41 = v29;
            v42 = (_QWORD *)swift_allocObject(&unk_1005F55C0, v40 + v11, v39 | 7);
            v42[2] = v23;
            v42[3] = v5;
            v43 = v47;
            v42[4] = v48;
            v42[5] = v43;
            sub_10001F580(v38, (uint64_t)v42 + v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            aBlock[4] = sub_1001BDFC8;
            aBlock[5] = v42;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1001B65B8;
            aBlock[3] = &unk_1005F55D8;
            v44 = _Block_copy(aBlock);
            v45 = v23;
            swift_retain();
            swift_retain();
            objc_msgSend(v37, "foundInStringForRecordId:style:withCompletion:", v45, 0, v44, swift_release().n128_f64[0]);

            sub_1000A2B58(v41, v50);
            _Block_release(v44);
            swift_unknownObjectRelease(v37);
          }
          return;
        }

        v35 = v49;
        v36 = v50;
      }
      else
      {
        v35 = v19;
        v36 = v21;
      }
      sub_1000A2B58(v35, v36);
    }

  }
}

void sub_1001A9CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Result;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v5 = v4;
  v61 = a4;
  v62 = a1;
  v59 = a3;
  v60 = type metadata accessor for REMContactAndName(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v54 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v54 + 64);
  __chkstk_darwin(v8);
  v55 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Result = type metadata accessor for REMContactAndNameFetchResult(0);
  v11 = *(_QWORD *)(Result - 8);
  __chkstk_darwin(Result);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4[8];
  ObjectType = swift_getObjectType(v4[7], v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 320);
  v56 = a2;
  v18 = (void *)v17(a2, ObjectType, v14);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, "contactHandles");

    if (v20)
      goto LABEL_5;
  }
  v21 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v22 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v14 + 240))(*(_QWORD *)(v62 + *(int *)(v21 + 20)), ObjectType, v14);
  if (v22)
  {
    v23 = v22;
    v20 = objc_msgSend(v22, "contactHandles");

    if (v20)
    {
LABEL_5:
      v24 = v5 + 13;
      v26 = v5[16];
      v25 = v5[17];
      sub_10001413C(v24, v26);
      v27 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v28 = swift_allocObject(v27, 40, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100521140;
      v29 = static CNAvatarViewControllerUtils.ttrDescriptorForRequiredKeys.getter();
      *(_QWORD *)(v28 + 32) = v29;
      v63 = v28;
      specialized Array._endMutation()(v29);
      v30 = v63;
      dispatch thunk of REMContactsProviderType.contactAndName(matching:keys:)(v20, v63, v26, v25);
      v31 = swift_bridgeObjectRelease(v30);
      v32 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 88))(v13, Result, v31);
      if (v32 == enum case for REMContactAndNameFetchResult.running(_:))
      {
        (*(void (**)(char *, uint64_t))(v11 + 96))(v13, Result);
        v33 = v55;
        sub_10002B1E8(v56, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v34 = *(unsigned __int8 *)(v54 + 80);
        v35 = (v34 + 32) & ~v34;
        v36 = swift_allocObject(&unk_1005F5598, v35 + v9, v34 | 7);
        v37 = v61;
        *(_QWORD *)(v36 + 16) = v59;
        *(_QWORD *)(v36 + 24) = v37;
        sub_10001F580(v33, v36 + v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v38 = swift_retain();
        v39 = (void *)zalgo.getter(v38);
        dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_1001BDBB0, v36, (char *)&type metadata for () + 8);
        swift_release();
        swift_release();
        swift_release();

      }
      else if (v32 == enum case for REMContactAndNameFetchResult.succeeded(_:))
      {
        (*(void (**)(char *, uint64_t))(v11 + 96))(v13, Result);
        v41 = v57;
        v40 = v58;
        v42 = v60;
        v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v58 + 32))(v57, v13, v60);
        v44 = REMContactAndName.name.getter(v43);
        v46 = v45;
        v47 = REMContactAndName.contact.getter();

        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
        v48 = TTRRemindersListViewModel.PersonData.init(name:contact:)(v44, v46, v47);
        v50 = v49;
        v52 = v51;
        v53 = v62 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 124);
        sub_1001BDB7C(*(_QWORD *)v53, *(_QWORD *)(v53 + 8), *(void **)(v53 + 16));
        *(_QWORD *)v53 = v48;
        *(_QWORD *)(v53 + 8) = v50;
        *(_QWORD *)(v53 + 16) = v52;
      }
      else
      {
        _diagnoseUnexpectedEnumCase<A>(type:)(Result, Result);
        __break(1u);
      }
    }
  }
}

uint64_t sub_1001AA098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[14];
  _OWORD v24[14];
  _OWORD v25[14];
  uint64_t v26;
  _OWORD v27[14];
  uint64_t v28;
  _QWORD v29[29];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _QWORD v44[28];
  _OWORD v45[15];

  v5 = v4;
  v10 = v5[8];
  ObjectType = swift_getObjectType(v5[7], a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 280))(v44, a2, ObjectType, v10);
  sub_10000F614((uint64_t)v44, (uint64_t)v45, (uint64_t *)&unk_100649F30);
  result = sub_100076D84((uint64_t *)v45);
  if ((_DWORD)result != 1)
  {
    v40 = v45[10];
    v41 = v45[11];
    v42 = v45[12];
    v43 = v45[13];
    v36 = v45[6];
    v37 = v45[7];
    v38 = v45[8];
    v39 = v45[9];
    v32 = v45[2];
    v33 = v45[3];
    v34 = v45[4];
    v35 = v45[5];
    v30 = v45[0];
    v31 = v45[1];
    v13 = v5 + 13;
    v15 = v5[16];
    v14 = v5[17];
    sub_10001413C(v13, v15);
    v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v17 = swift_allocObject(v16, 40, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100521140;
    v18 = static CNAvatarViewControllerUtils.ttrDescriptorForRequiredKeys.getter();
    *(_QWORD *)(v17 + 32) = v18;
    v29[0] = v17;
    specialized Array._endMutation()(v18);
    v22 = a1;
    REMContactsProviderType.loadContact(for:keys:updateHandler:)(&v30, v17, a3, a4, v15, v14);
    swift_bridgeObjectRelease(v17);
    v23[10] = v40;
    v23[11] = v41;
    v23[12] = v42;
    v23[13] = v43;
    v23[6] = v36;
    v23[7] = v37;
    v23[8] = v38;
    v23[9] = v39;
    v23[2] = v32;
    v23[3] = v33;
    v23[4] = v34;
    v23[5] = v35;
    v23[0] = v30;
    v23[1] = v31;
    v24[10] = v40;
    v24[11] = v41;
    v24[12] = v42;
    v24[13] = v43;
    v24[6] = v36;
    v24[7] = v37;
    v24[8] = v38;
    v24[9] = v39;
    v24[2] = v32;
    v24[3] = v33;
    v24[4] = v34;
    v24[5] = v35;
    v24[0] = v30;
    v24[1] = v31;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v24);
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
    sub_100182638((uint64_t)v23);
    v20 = v19(ObjectType, v10);
    sub_1001BD940((uint64_t)v23);
    sub_10000F614((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_100649F30);
    v26 = v20;
    v28 = v20;
    v27[12] = v25[12];
    v27[13] = v25[13];
    v27[8] = v25[8];
    v27[9] = v25[9];
    v27[10] = v25[10];
    v27[11] = v25[11];
    v27[4] = v25[4];
    v27[5] = v25[5];
    v27[6] = v25[6];
    v27[7] = v25[7];
    v27[0] = v25[0];
    v27[1] = v25[1];
    v27[2] = v25[2];
    v27[3] = v25[3];
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v27);
    v21 = v22 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 132);
    sub_10000F614(v21, (uint64_t)v29, &qword_10064A848);
    sub_1001BDA40((uint64_t)v29);
    return sub_10000F614((uint64_t)v27, v21, &qword_10064A848);
  }
  return result;
}

uint64_t sub_1001AA3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  void *v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[40];
  _OWORD v41[2];
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _BYTE v46[16];
  _BYTE v47[24];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v12 = *(int *)(v11 + 144);
  v39 = a1;
  v13 = (uint64_t *)(a1 + v12);
  sub_1001BD924(*v13, v13[1], v13[2], v13[3]);
  v37 = v13 + 2;
  *((_OWORD *)v13 + 1) = 0u;
  *(_OWORD *)v13 = 0u;
  v14 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v15);
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 136);
  v38 = ObjectType;
  v17(ObjectType, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, &qword_100649CA0);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v19 = (uint64_t)v10;
  if (v10[*(int *)(v7 + 112)] != 1)
    return sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v20 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID, &v43, 32, 0);
  v21 = *v20;
  if (!v21 || !*(_QWORD *)(v21 + 16))
  {
LABEL_11:
    swift_endAccess(&v43);
    return sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  v22 = v39;
  v23 = *(id *)(v39 + *(int *)(v11 + 20));
  v24 = sub_1002AA364((uint64_t)v23);
  if ((v25 & 1) == 0)
  {

    goto LABEL_11;
  }
  v26 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 16 * v24);
  v28 = *v26;
  v27 = v26[1];
  swift_endAccess(&v43);
  swift_bridgeObjectRetain(v27);

  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 96))(v38, v14);
  if (!v29)
  {
    sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    goto LABEL_15;
  }
  v30 = v29;
  sub_10021ECB8(v28, v27, (uint64_t)v40);
  sub_10000F614((uint64_t)v40, (uint64_t)v41, &qword_10064A750);
  if (*(_QWORD *)&v41[0] == 1)
  {
    sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_unknownObjectRelease(v30);
LABEL_15:
    v31 = v37;
    result = sub_1001BD924(*v13, v13[1], v13[2], v13[3]);
    *v13 = v28;
    v13[1] = v27;
    *v31 = 0;
    v31[1] = 0;
    return result;
  }
  v43 = v41[0];
  v44 = v41[1];
  v32 = *(void **)&v41[0];
  v45 = v42;
  v33 = sub_10021E59C(*(void **)&v41[0], 1);
  v34 = sub_10019FE54((uint64_t)v33, v22);
  swift_unknownObjectRelease(v30);
  sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  swift_bridgeObjectRelease(v33);
  if ((v34 & 1) != 0)
  {
    swift_bridgeObjectRelease(v27);

    sub_10000F614((uint64_t)&v43 + 8, (uint64_t)v46, &qword_100646428);
    sub_100056AB8((uint64_t)v46);
    sub_10000F614((uint64_t)&v44 + 8, (uint64_t)v47, &qword_100646428);
    return sub_100056AB8((uint64_t)v47);
  }
  else
  {

    v35 = *((_QWORD *)&v43 + 1);
    v36 = v44;
    sub_10000F614((uint64_t)&v44 + 8, (uint64_t)v47, &qword_100646428);
    sub_100056AB8((uint64_t)v47);
    result = sub_1001BD924(*v13, v13[1], v13[2], v13[3]);
    *v13 = v28;
    v13[1] = v27;
    v13[2] = v35;
    v13[3] = v36;
  }
  return result;
}

uint64_t sub_1001AA72C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint8_t *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint8_t *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[3];
  uint64_t v63;

  v57 = a2;
  v58 = a3;
  v60 = a4;
  v6 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064A760);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10002A750(&qword_100653A10);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v59 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
  v17(v15, 1, 1, v16);
  v18 = (uint64_t)_swiftEmptyArrayStorage;
  v63 = (uint64_t)_swiftEmptyArrayStorage;
  if (a1)
  {
    v56 = v4;
    v19 = a1;
    TTRSharedWithYouProvider.highlightInfo(for:)();
    v20 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 88))(v12, v9);
    if (v20 == enum case for REMAsyncOperationState.running<A>(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v10 + 96))(v12, v9);
      v21 = *v12;
      v22 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v24 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v23 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v23 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
      v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
      specialized Array._endMutation()(v25);

      swift_release();
    }
    else if (v20 == enum case for REMAsyncOperationState.succeeded<A>(_:))
    {

      (*(void (**)(_QWORD *, uint64_t))(v10 + 96))(v12, v9);
      sub_1000073A0((uint64_t)v15, &qword_100653A10);
      sub_10001F580((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
      v17(v15, 0, 1, v16);
    }
    else
    {
      if (v20 != enum case for REMAsyncOperationState.failed<A>(_:))
      {
        result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
        __break(1u);
        return result;
      }
      (*(void (**)(_QWORD *, uint64_t))(v10 + 96))(v12, v9);
      swift_errorRelease(*v12);
      if (qword_10063D420 != -1)
        swift_once(&qword_10063D420, sub_1001AF584);
      v26 = type metadata accessor for Logger(0);
      sub_100012DC4(v26, (uint64_t)qword_10064A550);
      v27 = v19;
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.debug.getter();
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v55 = swift_slowAlloc(32, -1);
        v62[0] = v55;
        v54 = v30;
        *(_DWORD *)v31 = 136315138;
        v53 = v31 + 4;
        v32 = objc_msgSend(v27, "displayName");
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v35 = v34;

        v61 = sub_100027E40(v33, v35, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v53, v31 + 12);

        swift_bridgeObjectRelease(v35);
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v54, "fetchHighlight: No highlight for: %s", v31, 0xCu);
        v36 = v55;
        swift_arrayDestroy(v55, 1, &type metadata for Any[8]);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

      }
    }
    v4 = v56;
    v18 = v63;
  }
  v37 = v4;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v44 = v18;
    else
      v44 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v18);
    if (v45)
      goto LABEL_17;
LABEL_22:
    v43 = swift_bridgeObjectRelease(v18);
    goto LABEL_23;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_22;
LABEL_17:
  sub_10002A750(&qword_10064A768);
  v62[0] = v18;
  v38 = sub_10002A750(&qword_10064A770);
  v39 = sub_100023FEC(&qword_10064A778, &qword_10064A770, (uint64_t)&protocol conformance descriptor for [A]);
  static Promise.all<A>(_:)(v62, v38, v39);
  swift_bridgeObjectRelease(v18);
  v40 = swift_allocObject(&unk_1005F54A8, 32, 7);
  *(_QWORD *)(v40 + 16) = v57;
  *(_QWORD *)(v40 + 24) = v58;
  v41 = swift_retain();
  v42 = (void *)zalgo.getter(v41);
  dispatch thunk of Promise.then<A>(on:closure:)(v42, sub_1001BD44C, v40, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

LABEL_23:
  v46 = 1;
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v59 + 48))(v15, 1, v16, v43);
  v48 = type metadata accessor for URL(0);
  v49 = *(_QWORD *)(v48 - 8);
  if (!v47)
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v8, v15, v48);
    v46 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v8, v46, 1, v48);
  v50 = v37 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_currentShareURL;
  swift_beginAccess(v37 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_currentShareURL, v62, 33, 0);
  sub_1001BD464((uint64_t)v8, v50);
  swift_endAccess(v62);
  sub_10000735C((uint64_t)v15, v60, &qword_100653A10);
  return sub_1000073A0((uint64_t)v15, &qword_100653A10);
}

void *sub_1001AAD18(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  void *result;
  char v21;
  void *v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  int v58;
  uint64_t v59;
  _QWORD v60[5];

  v7 = v6;
  v56 = a5;
  v57 = *(double *)&a3;
  v58 = a4;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v53 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v53 + 64);
  __chkstk_darwin(v11);
  v55 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10002A750(&qword_10064A850);
  v13 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v15 = (uint64_t *)((char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = v6[8];
  ObjectType = swift_getObjectType(v6[7], v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 328);
  v54 = a2;
  result = (void *)v19(a2, ObjectType, v16);
  if (v21 != -1)
  {
    v22 = result;
    v23 = v21;
    v51 = a6;
    v52 = a1;
    if ((v21 & 1) != 0)
    {
      v24 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      v25 = &protocol witness table for REMReminderChangeItem;
    }
    else
    {
      v24 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v25 = &protocol witness table for REMReminder;
    }
    v60[3] = v24;
    v60[4] = v25;
    v60[0] = v22;
    sub_10001413C(v60, v24);
    v26 = (uint64_t (*)(uint64_t, _QWORD *))v25[18];
    v27 = v22;
    v28 = v26(v24, v25);
    if (!v28)
    {
      sub_1000760F4(v22, v23);
      return (void *)sub_100027F10(v60);
    }
    v29 = (void *)v28;
    sub_100027F10(v60);
    v31 = v6[18];
    v32 = v7[19];
    if ((v58 & 1) != 0)
      v33 = 1.0;
    else
      v33 = v57;
    v34 = swift_getObjectType(v31, v30);
    (*(void (**)(void *, uint64_t, uint64_t, double))(v32 + 8))(v29, v34, v32, v33);
    v35 = v59;
    v36 = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 88))(v15, v59);
    if (v36 == enum case for REMAsyncOperationState.running<A>(_:))
    {
      (*(void (**)(_QWORD *, uint64_t))(v13 + 96))(v15, v35);
      v37 = v55;
      sub_10002B1E8(v54, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v38 = *(unsigned __int8 *)(v53 + 80);
      v39 = (v38 + 32) & ~v38;
      v40 = swift_allocObject(&unk_1005F5570, v39 + v12, v38 | 7);
      v41 = v51;
      *(_QWORD *)(v40 + 16) = v56;
      *(_QWORD *)(v40 + 24) = v41;
      sub_10001F580(v37, v40 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v42 = swift_retain();
      v43 = (void *)zalgo.getter(v42);
      dispatch thunk of Promise.then<A>(on:closure:)(v43, sub_1001BDB68, v40, (char *)&type metadata for () + 8);
      sub_1000760F4(v22, v23);
      swift_release();
      swift_release();
      swift_release();

      v44 = 0;
      v45 = 0;
      v46 = 0;
      v47 = v52;
    }
    else
    {
      v47 = v52;
      if (v36 == enum case for REMAsyncOperationState.succeeded<A>(_:))
      {
        sub_1000760F4(v22, v23);

        (*(void (**)(_QWORD *, uint64_t))(v13 + 96))(v15, v35);
        v44 = TTRRemindersListViewModel.AppLink.init(icon:name:)(*v15, v15[1], v15[2]);
        v45 = v48;
        v46 = v49;
      }
      else
      {
        if (v36 != enum case for REMAsyncOperationState.failed<A>(_:))
        {
          result = (void *)_diagnoseUnexpectedEnumCase<A>(type:)(v35, v35);
          __break(1u);
          return result;
        }
        sub_1000760F4(v22, v23);

        (*(void (**)(_QWORD *, uint64_t))(v13 + 96))(v15, v35);
        swift_errorRelease(*v15);
        v44 = 0;
        v45 = 0;
        v46 = 0;
      }
    }
    v50 = v47 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 148);
    result = sub_1001BDB38(*(void **)v50, *(_QWORD *)(v50 + 8), *(_QWORD *)(v50 + 16));
    *(_QWORD *)v50 = v44;
    *(_QWORD *)(v50 + 8) = v45;
    *(_QWORD *)(v50 + 16) = v46;
  }
  return result;
}

void sub_1001AB0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53[5];
  char v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[32];
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v47 = (uint64_t)&v42 - v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - v13;
  v15 = *(_QWORD *)(v1 + 56);
  v16 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(v15, v17);
  v19 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8);
  v49 = v15;
  v20 = ObjectType;
  v51 = v16;
  v19(v53, ObjectType, v16);
  sub_100179C5C(v53);
  if ((v54 & 1) == 0)
  {
    v50 = *(_QWORD *)(a1 + 16);
    if (v50)
    {
      v48 = v20;
      ((void (*)(uint64_t *__return_ptr))v19)(&v55);
      sub_1001BCE18((uint64_t)&v56, (uint64_t)v57);
      sub_1001BCE18((uint64_t)v57, (uint64_t)v58);
      if ((unint64_t)(v59 - 1) < 2)
      {
        v43 = v10;
        v44 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v21 = a1 + v44;
        v22 = *(_QWORD *)(v7 + 72);
        v42 = a1;
        swift_bridgeObjectRetain(a1);
        v23 = 0;
        v52 = _swiftEmptyArrayStorage;
        v45 = v3;
        v46 = v5;
        v24 = v51;
        while (1)
        {
          v25 = v23 + 1;
          if (__OFADD__(v23, 1))
          {
            __break(1u);
            return;
          }
          v26 = sub_10002B1E8(v21, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v26);
          if (swift_getEnumCaseMultiPayload(v5, v3) > 2)
            goto LABEL_26;
          v27 = (uint64_t)v5;
          v28 = v3;
          v29 = v22;
          sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          v30 = v48;
          v31 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 320))(v14, v48, v24);
          if (v31)
          {
            v32 = v31;
            if (objc_msgSend(v31, "isCompleted"))
            {
              sub_10002B1E8((uint64_t)v14, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v22 = v29;
              if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
                v52 = (_QWORD *)sub_100454EEC(0, v52[2] + 1, 1, (unint64_t)v52);
              v5 = v46;
              v34 = v52[2];
              v33 = v52[3];
              if (v34 >= v33 >> 1)
                v52 = (_QWORD *)sub_100454EEC(v33 > 1, v34 + 1, 1, (unint64_t)v52);
              v35 = v52;
              v52[2] = v34 + 1;
              v36 = (uint64_t)v35 + v44 + v34 * v22;
              v37 = &v61;
LABEL_23:
              sub_10001F580(*(v37 - 32), v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

              sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v3 = v45;
              goto LABEL_6;
            }
          }
          else
          {
            v38 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 248))(v14, v30, v24);
            if (!v38)
            {
LABEL_26:
              sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              swift_bridgeObjectRelease(v52);
              swift_bridgeObjectRelease(v42);
              return;
            }
            v32 = v38;
            if (objc_msgSend(v38, "isCompleted"))
            {
              sub_10002B1E8((uint64_t)v14, (uint64_t)v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v22 = v29;
              if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
                v52 = (_QWORD *)sub_100454EEC(0, v52[2] + 1, 1, (unint64_t)v52);
              v5 = v46;
              v40 = v52[2];
              v39 = v52[3];
              if (v40 >= v39 >> 1)
                v52 = (_QWORD *)sub_100454EEC(v39 > 1, v40 + 1, 1, (unint64_t)v52);
              v41 = v52;
              v52[2] = v40 + 1;
              v36 = (uint64_t)v41 + v44 + v40 * v22;
              v37 = &v60;
              goto LABEL_23;
            }
          }
          sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

          v22 = v29;
          v3 = v28;
          v5 = v46;
LABEL_6:
          ++v23;
          v21 += v22;
          if (v25 == v50)
          {
            swift_bridgeObjectRelease(v42);
            swift_bridgeObjectRelease(v52);
            return;
          }
        }
      }
      if (v59 != 3)
        sub_100179C5C(&v55);
    }
  }
}

uint64_t sub_1001AB5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id ObjectType;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD v25[4];
  uint64_t v26[5];
  char v27;

  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 64);
  ObjectType = (id)swift_getObjectType(*(_QWORD *)(v1 + 56), v7);
  (*(void (**)(id, uint64_t))(v6 + 136))(ObjectType, v6);
  v9 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v5, &qword_100649CA0);
    LODWORD(v10) = 0;
  }
  else
  {
    LODWORD(v10) = v5[*(int *)(v9 + 116)];
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  (*(void (**)(uint64_t *__return_ptr, id, uint64_t))(v6 + 8))(v26, ObjectType, v6);
  sub_100179C5C(v26);
  if ((v27 & 1) != 0 && !(_DWORD)v10)
    return 0;
  swift_retain();
  v11 = (uint64_t)sub_1001BB990(a1, v1);
  swift_release();
  if ((unint64_t)v11 >> 62)
    goto LABEL_22;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v12 != *(_QWORD *)(a1 + 16))
    {
      v13 = swift_bridgeObjectRelease(v11);
      v14 = (*(uint64_t (**)(uint64_t, _QWORD, id, uint64_t, __n128))(v6 + 256))(a1, 0, ObjectType, v6, v13);
      v11 = (uint64_t)sub_1001BAE7C(a1, v14);
      swift_bridgeObjectRelease(v14);
    }
    type metadata accessor for TTRListEditor(0);
    a1 = static TTRListEditor.filterOutSubtasksWithParents(in:)(v11);
    v16 = v15;
    swift_bridgeObjectRelease(v11);
    if ((unint64_t)a1 >> 62)
      break;
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v17)
      goto LABEL_30;
LABEL_12:
    if (!(v10 & 1 | ((v16 & 1) == 0)))
      goto LABEL_30;
    v25[1] = (_DWORD)v10;
    swift_bridgeObjectRetain(a1);
    v11 = 4;
    v10 = &selRef_supportsAttachments;
    while (1)
    {
      v6 = v11 - 4;
      v18 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a1)
          : *(id *)(a1 + 8 * v11);
      v19 = v18;
      v20 = v11 - 3;
      if (__OFADD__(v6, 1))
        break;
      v21 = objc_msgSend(v18, "account");
      ObjectType = objc_msgSend(v21, "capabilities");

      LOBYTE(v21) = objc_msgSend(ObjectType, "supportsSubtasks");
      if ((v21 & 1) == 0)
      {
        ++v11;
        if (v20 != v17)
          continue;
      }
      swift_bridgeObjectRelease(a1);
      return a1;
    }
    __break(1u);
LABEL_22:
    if (v11 < 0)
      v22 = v11;
    else
      v22 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v11);
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v17 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a1);
  if (v17)
    goto LABEL_12;
LABEL_30:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_1001AB8F8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  id v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t ObjectType;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  NSObject *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 aBlock;
  uint64_t (*v67)(uint64_t);
  void *v68;
  uint64_t (*v69)();
  uint64_t v70;
  char v71[136];

  v4 = (uint64_t)v3;
  v62 = a3;
  v63 = *v3;
  v65 = type metadata accessor for REMAnalyticsEvent(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v13 = sub_100012DC4(v9, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v71);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x736D657469;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v16 = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = 0x44497473696CLL;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  v61 = a1;
  if (a2)
  {
    v17 = -[NSObject objectID](a2, "objectID", swift_bridgeObjectRetain(a1).n128_f64[0]);
    v68 = (void *)sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)&aBlock = v17;
    sub_100028D38(&aBlock, (_OWORD *)(inited + 96));
  }
  else
  {
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 96) = 7104878;
    *(_QWORD *)(inited + 104) = 0xE300000000000000;
    swift_bridgeObjectRetain(a1);
  }
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List recover deleted reminders to list {items: %@, listID: %@}", 71, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  v21 = a2;
  if (a2
    || (v22 = *(_QWORD *)(v4 + 48),
        ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 40), v20),
        (v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 536))(ObjectType, v22)) != 0))
  {
    v24 = (void *)REMList.accountCapabilities.getter(a2);
    v25 = objc_msgSend(v24, "supportsRecentlyDeletedList");

    if (v25)
    {
      swift_retain();
      v27 = sub_1001BB990(v61, v4);
      swift_release();
      v29 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v28);
      type metadata accessor for REMAnalyticsManager(0);
      v30 = v29;
      static REMAnalyticsManager.shared.getter();
      v31 = sub_10002A750(&qword_100649F98);
      v32 = &v8[*(int *)(v31 + 48)];
      v33 = &v8[*(int *)(v31 + 80)];
      sub_10000735C(v62, (uint64_t)v8, (uint64_t *)&unk_100649BE0);
      v34 = enum case for REMUserOperation.recoverReminder(_:);
      v35 = type metadata accessor for REMUserOperation(0);
      v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v8, v34, v35);
      *(_QWORD *)v32 = TTRUserDefaults.activitySessionId.getter(v36);
      *((_QWORD *)v32 + 1) = v37;
      TTRUserDefaults.activitySessionBeginTime.getter();
      *(_QWORD *)&aBlock = 0;
      *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v38 = *((_QWORD *)&aBlock + 1);
      v39 = _typeName(_:qualified:)(v63, 0);
      v41 = v40;
      swift_bridgeObjectRelease(v38);
      *(_QWORD *)&aBlock = v39;
      *((_QWORD *)&aBlock + 1) = v41;
      v42._object = (void *)0x8000000100568720;
      v42._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v42);
      v43 = *((_QWORD *)&aBlock + 1);
      *(_QWORD *)v33 = aBlock;
      *((_QWORD *)v33 + 1) = v43;
      v44 = v64;
      v45 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v8, enum case for REMAnalyticsEvent.userOperation(_:), v65);
      REMAnalyticsManager.post(event:)(v8);
      v46 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v8, v45, v46);
      v47 = (void *)objc_opt_self(TTRUndoManager);
      static TTRLocalizableStrings.UndoAction.recoverReminder.getter();
      v49 = v48;
      v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v49);
      v51 = (_QWORD *)swift_allocObject(&unk_1005F52F0, 40, 7);
      v51[2] = v4;
      v51[3] = v27;
      v51[4] = v21;
      v52 = swift_allocObject(&unk_1005F5318, 32, 7);
      *(_QWORD *)(v52 + 16) = sub_1001BCD70;
      *(_QWORD *)(v52 + 24) = v51;
      v69 = sub_1000381EC;
      v70 = v52;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v67 = sub_10001B258;
      v68 = &unk_1005F5330;
      v53 = _Block_copy(&aBlock);
      swift_retain();
      v54 = v21;
      swift_retain();
      objc_msgSend(v47, "withActionName:block:", v50, v53, swift_release().n128_f64[0]);

      _Block_release(v53);
      LOBYTE(v54) = swift_isEscapingClosureAtFileLocation(v52, "", 118, 623, 89, 1);
      swift_release();
      swift_release();
      if ((v54 & 1) == 0)
        return;
      __break(1u);
    }
    v55 = Logger.logObject.getter(v26);
    v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Reminder recovery for target list is not supported, should be part of CloudKit account.", v57, 2u);
      swift_slowDealloc(v57, -1, -1);

    }
    else
    {

      v55 = v21;
    }
  }
  else
  {
    v55 = Logger.logObject.getter(0);
    v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v58, "Failed to fetch default list for reminder recovery", v59, 2u);
      swift_slowDealloc(v59, -1, -1);
    }
  }

}

uint64_t sub_1001ABF80(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  __int128 v39;
  __int128 v40;
  void *v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46[5];
  char v47;

  v5 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v5);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return 0;
  v35 = a2;
  v45 = &_swiftEmptySetSingleton;
  v14 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v10);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 8);
  v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v37 = *(_QWORD *)(v9 + 72);
  v38 = v16;
  v36 = a1;
  swift_bridgeObjectRetain(a1);
  do
  {
    sub_10002B1E8(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v38(v46, ObjectType, v14);
    sub_100179C5C(v46);
    if ((v47 & 1) != 0)
      goto LABEL_13;
    v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 328))(v12, ObjectType, v14);
    if (v21 == -1)
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
      sub_1000073A0((uint64_t)&v39, &qword_10063F5A0);
LABEL_13:
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease(v36);
      v31 = v45;
LABEL_14:
      swift_bridgeObjectRelease(v31);
      return 0;
    }
    v22 = v20;
    if ((v21 & 1) != 0)
    {
      v23 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      v24 = &protocol witness table for REMReminderChangeItem;
    }
    else
    {
      v23 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v24 = &protocol witness table for REMReminder;
    }
    *((_QWORD *)&v40 + 1) = v23;
    v41 = v24;
    *(_QWORD *)&v39 = v22;
    sub_10002E37C(&v39, (uint64_t)v42);
    v26 = v43;
    v25 = v44;
    sub_10001413C(v42, v43);
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v26, v25);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, "date");

      static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v30 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v7, 0, 1, v30);
    }
    else
    {
      v18 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
    }
    v19 = TTRRemindersListPostponeType.init(date:)(v7);
    sub_100027F10(v42);
    sub_100482020((uint64_t)v42, v19);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 += v37;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease(v36);
  v33 = (uint64_t)v45;
  if (!v45[2])
  {
    v31 = v45;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain(v45);
  sub_10037BC38(v35, v33);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v33);
  return 1;
}

void *sub_1001AC2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  void *v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28[5];
  char v29;

  v4 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), a2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v28, ObjectType, v4);
  sub_100179C5C(v28);
  if ((v29 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      v27 = &_swiftEmptySetSingleton;
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 328);
      v8 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
      v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v10 = *(_QWORD *)(v8 + 72);
      v11 = swift_bridgeObjectRetain(a1);
      while (1)
      {
        v17 = v7(v9, ObjectType, v4, v11);
        if (v18 == -1)
          break;
        v19 = v17;
        if ((v18 & 1) != 0)
        {
          v12 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
          v13 = &protocol witness table for REMReminderChangeItem;
        }
        else
        {
          v12 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
          v13 = &protocol witness table for REMReminder;
        }
        *((_QWORD *)&v22 + 1) = v12;
        v23 = v13;
        *(_QWORD *)&v21 = v19;
        sub_10002E37C(&v21, (uint64_t)v24);
        v14 = v25;
        v15 = v26;
        sub_10001413C(v24, v25);
        v16 = TTRReminderProtocol.priorityLevel.getter(v14, v15);
        sub_100481848((Swift::UInt *)&v21, v16);
        sub_100027F10(v24);
        v9 += v10;
        if (!--v6)
        {
          swift_bridgeObjectRelease(a1);
          return v27;
        }
      }
      v23 = 0;
      v21 = 0u;
      v22 = 0u;
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v27);
      sub_1000073A0((uint64_t)&v21, &qword_10063F5A0);
    }
  }
  return 0;
}

double sub_1001AC4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  _QWORD v23[16];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v23);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "priorityLevel");
  *(_WORD *)(inited + 46) = -4864;
  v11 = (id)NSStringFromPriorityLevel(a1);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List set priorityLevel {priorityLevel: %@, items: %@}", 62, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  v18 = static TTRLocalizableStrings.UndoAction.priorityChange.getter(v17);
  v20 = v19;
  __chkstk_darwin(v18);
  v23[-2] = a1;
  sub_1001B35FC(a2, v21, v20, (uint64_t)sub_1001BD864, (uint64_t)&v23[-4]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  return result;
}

double sub_1001AC6B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double, double);
  double result;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  id v44;

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(a1);
    v32 = v11;
    v12 = (id *)(v11 + 136);
    v13 = _swiftEmptyArrayStorage;
    do
    {
      v15 = *(v12 - 13);
      if (v15)
      {
        v42 = *((_OWORD *)v12 - 5);
        v43 = *((_OWORD *)v12 - 6);
        v16 = *(v12 - 12);
        v17 = (uint64_t)*(v12 - 2);
        v38 = (uint64_t)*(v12 - 1);
        v18 = (uint64_t)*(v12 - 10);
        v40 = *((_OWORD *)v12 - 3);
        v41 = *((_OWORD *)v12 - 4);
        v19 = (uint64_t)*(v12 - 8);
        v20 = (uint64_t)*(v12 - 6);
        v39 = *((_OWORD *)v12 - 2);
        v21 = (uint64_t)*(v12 - 4);
        v44 = *v12;
        v22 = *v12;
        v23 = v15;
        v24 = v16;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRetain(v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = sub_100456A30(0, v13[2] + 1, 1, v13);
        v26 = v13[2];
        v25 = v13[3];
        if (v26 >= v25 >> 1)
          v13 = sub_100456A30((_QWORD *)(v25 > 1), v26 + 1, 1, v13);
        v13[2] = v26 + 1;
        v14 = &v13[14 * v26];
        v14[4] = v23;
        *(_OWORD *)(v14 + 5) = v43;
        *(_OWORD *)(v14 + 7) = v42;
        *(_OWORD *)(v14 + 9) = v41;
        *(_OWORD *)(v14 + 11) = v40;
        *(_OWORD *)(v14 + 13) = v39;
        v14[15] = v17;
        *((_BYTE *)v14 + 128) = v38 & 1;
        v14[17] = v44;
      }
      v12 += 14;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v32);
    v7 = v33;
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  v27 = v7[25];
  v28 = v7[26];
  sub_10001413C(v7 + 22, v27);
  v29 = swift_allocObject(&unk_1005F5548, 32, 7);
  *(_QWORD *)(v29 + 16) = a4;
  *(_QWORD *)(v29 + 24) = a5;
  v30 = *(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double, double))(v28 + 16);
  swift_retain();
  v30(v13, a2, a3 & 1, sub_10001B280, v29, v27, v28, a6, a7);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1001AC900(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _BYTE v20[112];
  uint64_t v21;
  _BYTE v22[112];

  sub_100180C6C((uint64_t)a1, (uint64_t)v22);
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, &v21);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x65656E6769737361;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  sub_100180C6C((uint64_t)a1, (uint64_t)v20);
  sub_100180CB0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100182738);
  *(_QWORD *)(inited + 48) = String.init<A>(describing:)(v20, &type metadata for TTRAssigneeCandidate);
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v12 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List set  {assignee: %@, items: %@}", 45, 2, v12);
  v13 = swift_bridgeObjectRelease(v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  v15 = static TTRLocalizableStrings.UndoAction.assigneeChange.getter(v14);
  v17 = v16;
  __chkstk_darwin(v15);
  *(_QWORD *)&v20[-16] = a1;
  sub_1001B35FC(a2, v18, v17, (uint64_t)sub_1001BD584, (uint64_t)&v20[-32]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  return result;
}

double sub_1001ACB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001ACB48(a1, a2, a3, (uint64_t)"Reminders List remove  {hashtag: %@, items: %@}", 47, (uint64_t)sub_1001BD844);
}

double sub_1001ACB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001ACB48(a1, a2, a3, (uint64_t)"Reminders List add  {hashtag: %@, items: %@}", 44, (uint64_t)sub_1001BD5D4);
}

double sub_1001ACB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[128];

  v27 = a6;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v15 = sub_100012DC4(v11, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v28);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x67617468736168;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  v18 = sub_10002D32C(inited);
  sub_1000143B4(a4, a5, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v19);
  v21 = static TTRLocalizableStrings.UndoAction.hashtagChange.getter(v20);
  v23 = v22;
  __chkstk_darwin(v21);
  *(&v26 - 2) = a1;
  *(&v26 - 1) = a2;
  sub_1001B35FC(a3, v24, v23, v27, (uint64_t)(&v26 - 4));
  *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  return result;
}

double sub_1001ACD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _QWORD v20[16];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v20);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x7367617468736168;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = sub_10002A750(&qword_10064A790);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v12 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List update  {hashtags: %@, items: %@}", 48, 2, v12);
  v13 = swift_bridgeObjectRelease(v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  v15 = static TTRLocalizableStrings.UndoAction.hashtagChange.getter(v14);
  v17 = v16;
  __chkstk_darwin(v15);
  v20[-2] = a1;
  sub_1001B35FC(a2, v18, v17, (uint64_t)sub_1001BD58C, (uint64_t)&v20[-4]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  return result;
}

void sub_1001ACF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, void (*a8)(_QWORD, __n128), uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unsigned int EnumCaseMultiPayload;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t Strong;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  void *v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_QWORD, __n128);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  __n128 v84;
  unint64_t v85;
  void (*v86)(_QWORD *__return_ptr, unint64_t, uint64_t);
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void (*v98)(_QWORD *__return_ptr, unint64_t, uint64_t);
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  uint64_t v112;
  void (*v113)(_QWORD);
  uint8_t *v114;
  id v115;
  void *v116;
  char v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  _BOOL4 v121;
  void (*v122)(_QWORD);
  uint8_t *v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  id v140;
  void *v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  id v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  int v164;
  int v165;
  int v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(_QWORD, __n128);
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD v184[4];
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;

  v165 = a7;
  v164 = a6;
  v166 = a5;
  v172 = a4;
  v174 = a3;
  v173 = a2;
  v169 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v167 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10064A800);
  v13 = __chkstk_darwin(v12);
  v162 = (uint64_t)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v161 = (uint64_t)&v156 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v156 - v17;
  v171 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection(0);
  v170 = *(_QWORD *)(v171 - 8);
  v19 = __chkstk_darwin(v171);
  v159 = (uint64_t)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v158 = (uint64_t)&v156 - v22;
  __chkstk_darwin(v21);
  v160 = (uint64_t)&v156 - v23;
  v183 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v183);
  v25 = (char *)&v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v179 = *(_QWORD *)(v26 - 8);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v156 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v27);
  v182 = (uint64_t)&v156 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v156 - v32;
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v163 = v18;
  v34 = type metadata accessor for Logger(0);
  v35 = sub_100012DC4(v34, (uint64_t)qword_10064A550);
  v36 = _swiftEmptyArrayStorage;
  v37 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v178 = v35;
  sub_1000143B4((uint64_t)"Reminders List new section from items", 37, 2, v37);
  swift_bridgeObjectRelease(v37);
  *(_QWORD *)&v189 = _swiftEmptyArrayStorage;
  v38 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  if (v38)
  {
    v176 = a8;
    v177 = v29;
    v39 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
    v40 = *(_QWORD *)(v179 + 72);
    v175 = a1;
    v181 = v39;
    v41 = a1 + v39;
    v42 = _swiftEmptyArrayStorage;
    do
    {
      v43 = sub_10002B1E8(v41, (uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v43);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v183);
      if (EnumCaseMultiPayload >= 2)
      {
        if (EnumCaseMultiPayload == 2)
          sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        sub_10001F544((uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        sub_10001F580((uint64_t)v33, v182, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          sub_1003D7F78(0, v42[2] + 1, 1);
        v42 = (_QWORD *)v189;
        v46 = *(_QWORD *)(v189 + 16);
        v45 = *(_QWORD *)(v189 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_1003D7F78(v45 > 1, v46 + 1, 1);
          v42 = (_QWORD *)v189;
        }
        v42[2] = v46 + 1;
        sub_10001F580(v182, (uint64_t)v42 + v181 + v46 * v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      v41 += v40;
      --v38;
    }
    while (v38);
    v36 = (_QWORD *)v189;
    v29 = v177;
    a8 = v176;
    a1 = v175;
  }
  swift_bridgeObjectRelease(a1);
  v47 = v180;
  swift_retain();
  v48 = (uint64_t)sub_1001BB990((uint64_t)v36, v47);
  swift_release();
  if ((unint64_t)v48 >> 62)
  {
    if (v48 < 0)
      v150 = v48;
    else
      v150 = v48 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v48);
    v151 = _CocoaArrayWrapper.endIndex.getter(v150);
    swift_bridgeObjectRelease(v48);
    if (!v151)
      goto LABEL_75;
  }
  else if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_75;
  }
  if ((v48 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v48);
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
    swift_bridgeObjectRelease(v48);
  }
  else
  {
    if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v49 = *(id *)(v48 + 32);
  }
  v50 = objc_msgSend(v49, "list");

  if (v50)
  {
    if (v36[2])
    {
      v183 = v48;
      v182 = a9;
      sub_10002B1E8((uint64_t)v36 + ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80)), (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v52 = *(_QWORD *)(v47 + 56);
      v51 = *(_QWORD *)(v47 + 64);
      ObjectType = swift_getObjectType(v52, v53);
      v55 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 96);
      v56 = v55(ObjectType, v51);
      if (v56)
      {
        v57 = v56;
        v179 = v52;
        v181 = ObjectType;
        v58 = v55(ObjectType, v51);
        if (v58)
        {
          v59 = v58;
          Strong = swift_unknownObjectWeakLoadStrong(v58 + 56);
          if (Strong)
          {
            v62 = Strong;
            v175 = v57;
            v157 = v50;
            v176 = a8;
            v63 = *(_QWORD *)(v59 + 64);
            v64 = swift_getObjectType(Strong, v61);
            v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32);
            v177 = v29;
            v66 = (void *)v65(v29, v64, v63);
            v68 = v67;
            swift_unknownObjectRelease(v59);
            swift_unknownObjectRelease(v62);
            if (v68 <= 1u)
            {
              v156 = v66;
              v69 = v180;
              v70 = v181;
              if (!v68)
              {
                v71 = v175;
                v72 = swift_unknownObjectWeakLoadStrong(v175 + 56);
                v73 = v176;
                if (v72)
                {
                  v74 = v72;
                  v75 = *(_QWORD *)(v71 + 64);
                  v76 = (uint64_t)v163;
                  sub_10021EF10(v173, v174, v71, (uint64_t)v163);
                  v77 = v171;
                  v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v76, 1, v171);
                  v79 = (uint64_t)v177;
                  v80 = v157;
                  v81 = v183;
                  if (v78 == 1)
                  {
                    swift_unknownObjectRelease(v74);
                    sub_1000073A0(v76, &qword_10064A800);
                    swift_release();
                    v83 = 0;
                  }
                  else
                  {
                    v127 = v76;
                    v128 = v160;
                    sub_10001F580(v127, v160, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    v130 = swift_getObjectType(v74, v129);
                    (*(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v75 + 64))(v128, v128 + *(int *)(v77 + 24), v36, v164 & 1, v165 & 1, v130, v75);
                    swift_unknownObjectRelease(v74);
                    v83 = *(id *)(v128 + *(int *)(v77 + 20));
                    sub_10001F544(v128, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    swift_release();
                  }
                }
                else
                {
                  swift_release();
                  v83 = 0;
                  v79 = (uint64_t)v177;
                  v80 = v157;
                  v81 = v183;
                }
                v131 = *(_QWORD *)(v69 + 48);
                v132 = swift_getObjectType(*(_QWORD *)(v69 + 40), v82);
                (*(void (**)(uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t, uint64_t, _BYTE, void (*)(_QWORD, __n128), uint64_t, uint64_t, uint64_t))(v131 + 368))(v81, v173, v174, v83, v80, 1, 2, v172, v166 & 1, v73, v182, v132, v131);

                swift_unknownObjectRelease(v175);
                sub_1000760F4(v156, 0);
                swift_bridgeObjectRelease(v81);
                sub_10001F544(v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                return;
              }
              v98 = *(void (**)(_QWORD *__return_ptr, unint64_t, uint64_t))(v51 + 632);
              v99 = v156;
              v98(v184, v70, v51);
              sub_10000F614((uint64_t)v184, (uint64_t)&v185, &qword_10064A808);
              if ((_QWORD)v185)
              {
                v189 = v185;
                v190 = v186;
                v191 = v187;
                v192 = v188;
                v100 = v175;
                v101 = swift_unknownObjectWeakLoadStrong(v175 + 56);
                if (v101)
                {
                  v102 = v101;
                  v103 = *(_QWORD *)(v100 + 64);
                  v104 = v161;
                  sub_10021EF10(v173, v174, v100, v161);
                  v105 = v171;
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v104, 1, v171) != 1)
                  {
                    v143 = v158;
                    sub_10001F580(v104, v158, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    v145 = swift_getObjectType(v102, v144);
                    (*(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v103 + 64))(v143, v143 + *(int *)(v105 + 24), v36, v164 & 1, v165 & 1, v145, v103);
                    swift_unknownObjectRelease(v102);
                    v107 = *(id *)(v143 + *(int *)(v105 + 20));
                    sub_10001F544(v143, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    swift_release();
                    goto LABEL_69;
                  }
                  swift_unknownObjectRelease(v102);
                  sub_1000073A0(v104, &qword_10064A800);
                }
                swift_release();
                v107 = 0;
LABEL_69:
                v146 = *(_QWORD *)(v69 + 48);
                v147 = swift_getObjectType(*(_QWORD *)(v69 + 40), v106);
                v138 = v167;
                (*(void (**)(unint64_t, uint64_t))(v51 + 600))(v181, v51);
                v139 = v183;
                (*(void (**)(uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t, uint64_t, char *, __int128 *, char, void (*)(_QWORD, __n128), uint64_t, uint64_t, uint64_t))(v146 + 376))(v183, v173, v174, v107, v99, 1, 2, v172, v138, &v189, 1, v176, v182, v147, v146);

                swift_unknownObjectRelease(v175);
                sub_10017A154((uint64_t)v184);
                v148 = v156;
                sub_1000760F4(v156, 1);
                v141 = v148;
                v142 = 1;
LABEL_70:
                sub_1000760F4(v141, v142);
                v149 = swift_bridgeObjectRelease(v139);
                (*(void (**)(char *, uint64_t, __n128))(v168 + 8))(v138, v169, v149);
                sub_10001F544((uint64_t)v177, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                return;
              }
              swift_bridgeObjectRelease(v183);
              swift_release();
              v119 = Logger.logObject.getter(v118);
              v120 = static os_log_type_t.fault.getter(v119);
              v121 = os_log_type_enabled(v119, v120);
              v112 = (uint64_t)v177;
              v122 = (void (*)(_QWORD))v176;
              if (v121)
              {
                v123 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v123 = 0;
                _os_log_impl((void *)&_mh_execute_header, v119, v120, "Unable to get manual ordering for custom smart list when moving reminders.", v123, 2u);
                swift_slowDealloc(v123, -1, -1);
              }

              v124 = v157;
              v125 = v156;
              v126 = v175;
              if (v122)
                v122(0);

              swift_unknownObjectRelease(v126);
              sub_1000760F4(v125, 1);
              v116 = v125;
              v117 = 1;
LABEL_62:
              sub_1000760F4(v116, v117);
              sub_10001F544(v112, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              return;
            }
            v85 = v181;
            if (v68 == 2)
            {
              v86 = *(void (**)(_QWORD *__return_ptr, unint64_t, uint64_t))(v51 + 632);
              v87 = v66;
              v86(v184, v85, v51);
              sub_10000F614((uint64_t)v184, (uint64_t)&v185, &qword_10064A808);
              if ((_QWORD)v185)
              {
                v156 = v66;
                v189 = v185;
                v190 = v186;
                v191 = v187;
                v192 = v188;
                v88 = v175;
                v89 = swift_unknownObjectWeakLoadStrong(v175 + 56);
                if (v89)
                {
                  v90 = v89;
                  v91 = *(_QWORD *)(v88 + 64);
                  v92 = v162;
                  sub_10021EF10(v173, v174, v88, v162);
                  v93 = v171;
                  v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v92, 1, v171);
                  v95 = v180;
                  if (v94 == 1)
                  {
                    swift_unknownObjectRelease(v90);
                    sub_1000073A0(v92, &qword_10064A800);
                    swift_release();
                    v97 = 0;
                  }
                  else
                  {
                    v133 = v159;
                    sub_10001F580(v92, v159, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    v135 = swift_getObjectType(v90, v134);
                    (*(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v91 + 64))(v133, v133 + *(int *)(v93 + 24), v36, v164 & 1, v165 & 1, v135, v91);
                    swift_unknownObjectRelease(v90);
                    v97 = *(id *)(v133 + *(int *)(v93 + 20));
                    sub_10001F544(v133, type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
                    swift_release();
                  }
                }
                else
                {
                  swift_release();
                  v97 = 0;
                  v95 = v180;
                }
                v136 = *(_QWORD *)(v95 + 48);
                v137 = swift_getObjectType(*(_QWORD *)(v95 + 40), v96);
                v138 = v167;
                (*(void (**)(unint64_t, uint64_t))(v51 + 600))(v181, v51);
                v139 = v183;
                (*(void (**)(uint64_t, uint64_t, uint64_t, id, id, uint64_t, uint64_t, uint64_t, char *, __int128 *, char, void (*)(_QWORD, __n128), uint64_t, uint64_t, uint64_t))(v136 + 384))(v183, v173, v174, v97, v87, 1, 2, v172, v138, &v189, 1, v176, v182, v137, v136);

                swift_unknownObjectRelease(v175);
                sub_10017A154((uint64_t)v184);
                v140 = v156;
                sub_1000760F4(v156, 2);
                v141 = v140;
                v142 = 2;
                goto LABEL_70;
              }
              swift_bridgeObjectRelease(v183);
              swift_release();
              v109 = Logger.logObject.getter(v108);
              v110 = static os_log_type_t.fault.getter(v109);
              v111 = os_log_type_enabled(v109, v110);
              v112 = (uint64_t)v177;
              v113 = (void (*)(_QWORD))v176;
              if (v111)
              {
                v114 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v114 = 0;
                _os_log_impl((void *)&_mh_execute_header, v109, v110, "Unable to get manual ordering for template when moving reminders.", v114, 2u);
                swift_slowDealloc(v114, -1, -1);
              }

              v115 = v157;
              if (v113)
                v113(0);

              swift_unknownObjectRelease(v175);
              sub_1000760F4(v66, 2);
              v116 = v66;
              v117 = 2;
              goto LABEL_62;
            }
            swift_bridgeObjectRelease(v183);
            swift_release();
            v59 = v175;
            v29 = v177;
            a8 = v176;
            v50 = v157;
          }
          else
          {
            swift_bridgeObjectRelease(v183);
            swift_release();
            swift_unknownObjectRelease(v57);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v183);
          swift_release();
          v59 = v57;
        }
        swift_unknownObjectRelease(v59);
        sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_bridgeObjectRelease(v183);
        v84 = swift_release();
      }
      if (!a8)
      {
LABEL_50:

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v48);
      v84 = swift_release();
      if (!a8)
        goto LABEL_50;
    }
    a8(0, v84);
    goto LABEL_50;
  }
LABEL_75:
  swift_bridgeObjectRelease(v48);
  swift_release();
  v153 = Logger.logObject.getter(v152);
  v154 = static os_log_type_t.fault.getter(v153);
  if (os_log_type_enabled(v153, v154))
  {
    v155 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v155 = 0;
    _os_log_impl((void *)&_mh_execute_header, v153, v154, "Unable to get reminder's list to proceed with creating New Section within list.", v155, 2u);
    swift_slowDealloc(v155, -1, -1);
  }

  if (a8)
    ((void (*)(_QWORD))a8)(0);
}

double sub_1001AE068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  _QWORD v23[16];

  v4 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v11 = sub_100012DC4(v7, (uint64_t)qword_10064A550);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v23);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "dateComponents");
  *(_BYTE *)(inited + 47) = -18;
  sub_10000735C(a1, (uint64_t)v6, &qword_100641728);
  *(_QWORD *)(inited + 48) = String.init<A>(describing:)(v6, v4);
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List set due date {dateComponents: %@, items: %@}", 59, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v16);
  v18 = static TTRLocalizableStrings.UndoAction.dueDateChange.getter(v17);
  v20 = v19;
  __chkstk_darwin(v18);
  v23[-2] = a1;
  sub_1001B35FC(a2, v21, v20, (uint64_t)sub_1001BD53C, (uint64_t)&v23[-4]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  return result;
}

double sub_1001AE2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  _QWORD v21[2];
  _BYTE v22[128];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v22);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(inited + 40) = 0xEF72656767697254;
  v21[1] = a1;
  v11 = sub_10002A750(&qword_10064A788);
  *(_QWORD *)(inited + 48) = Optional.descriptionOrNil.getter(v11);
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List set locationTrigger {locationTrigger: %@, items: %@}", 66, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  v15 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  v16 = static TTRLocalizableStrings.UndoAction.locationChange.getter(v15);
  v18 = v17;
  __chkstk_darwin(v16);
  v21[-2] = a1;
  sub_1001B35FC(a2, v19, v18, (uint64_t)sub_1001BD4F4, (uint64_t)&v21[-4]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

double sub_1001AE4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  _QWORD v21[2];
  _BYTE v22[128];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v8 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v22);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "vehicleTrigger");
  *(_BYTE *)(inited + 47) = -18;
  v21[1] = a1;
  v11 = sub_10002A750(&qword_10064A780);
  *(_QWORD *)(inited + 48) = Optional.descriptionOrNil.getter(v11);
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x736D657469;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a2);
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List set vehicleTrigger {vehicleTrigger: %@, items: %@}", 64, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  v15 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  v16 = static TTRLocalizableStrings.UndoAction.locationChange.getter(v15);
  v18 = v17;
  __chkstk_darwin(v16);
  v21[-2] = a1;
  sub_1001B35FC(a2, v19, v18, (uint64_t)sub_1001BD4AC, (uint64_t)&v21[-4]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

uint64_t sub_1001AE6B0(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[88];

  v59 = a2;
  v61 = a1;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = __chkstk_darwin(v2);
  v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v54 = (char *)&v48 - v5;
  v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v6);
  v55 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v52);
  v53 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064A7B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRPostponementWeekend(0);
  v57 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v49 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100649D80);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRDateChangeType(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v56 = (uint64_t)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Logger(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v24 = sub_100012DC4(v20, (uint64_t)qword_10064A550);
  v25 = *(void (**)(char *))(v21 + 16);
  v58 = v24;
  v25(v23);
  v26 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v26, v64);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v28 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v51 = v2;
  v50 = v28;
  v29 = TTRTreeStorageItem.treeItemDescription.getter(v2, v28);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v29;
  *(_QWORD *)(inited + 56) = v30;
  v31 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Create New Instance of Recurring Reminder {item: %@ postponeType: %@}", 84, 2, v31);
  v32 = swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v23, v20, v32);
  if (v59 == 3)
  {
    v33 = v61;
    sub_1001B3C6C(v61, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v11, 1, v12) == 1)
    {
      sub_1000073A0((uint64_t)v11, &qword_10064A7B0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
      v34 = (uint64_t)v60;
      goto LABEL_9;
    }
    v35 = v49;
    sub_10001F580((uint64_t)v11, v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRPostponementWeekend);
    sub_10001F580(v35 + *(int *)(v12 + 20), (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    v34 = (uint64_t)v60;
  }
  else
  {
    TTRRemindersListPostponeType.dateChangeType.getter(v59);
    v34 = (uint64_t)v60;
    v33 = v61;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    v44 = sub_10001F580((uint64_t)v16, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
    v45 = v53;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v44);
    v46 = (char *)&loc_1001AEC64 + 4 * byte_1005278FE[swift_getEnumCaseMultiPayload(v45, v52)];
    __asm { BR              X10 }
  }
LABEL_9:
  sub_1000073A0((uint64_t)v16, &qword_100649D80);
  v36 = sub_10002B1E8(v33, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.fault.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v63 = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = TTRTreeStorageItem.treeItemDescription.getter(v51, v50);
    v43 = v42;
    v62 = sub_100027E40(v41, v42, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease(v43);
    sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Couldn't get dateChangeType to update instance of a recurring reminder {item: %s}", v39, 0xCu);
    swift_arrayDestroy(v40, 1, &type metadata for Any[8]);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {
    sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  return 0;
}

double sub_1001AEEE4(uint64_t a1, uint64_t a2)
{
  id *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Swift::String v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  void (**v41)(uint64_t, id, uint64_t, id);
  uint64_t v42;
  uint64_t ObjectType;
  double result;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55[136];

  v52 = a2;
  v4 = *v2;
  v5 = type metadata accessor for REMAnalyticsEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v45 = a1;
    else
      v45 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v45))
    {
LABEL_3:
      v51 = v4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_15;
        }
        v14 = *(id *)(a1 + 32);
      }
      v47 = v14;
      v48 = v6;
      v49 = v5;
      v50 = v2;
      v4 = objc_msgSend(v14, "account", swift_bridgeObjectRelease(a1).n128_f64[0]);
      if (qword_10063D420 == -1)
      {
LABEL_7:
        v15 = sub_100012DC4(v9, (uint64_t)qword_10064A550);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
        v16 = sub_10002A750((uint64_t *)&unk_100640F20);
        inited = swift_initStackObject(v16, v55);
        *(_OWORD *)(inited + 16) = xmmword_1005201E0;
        *(_QWORD *)(inited + 32) = 0x7265646E696D6572;
        *(_QWORD *)(inited + 40) = 0xE900000000000073;
        v18 = sub_10002A750(&qword_100647B40);
        *(_QWORD *)(inited + 48) = a1;
        *(_QWORD *)(inited + 72) = v18;
        *(_QWORD *)(inited + 80) = 0x49746E756F636361;
        *(_QWORD *)(inited + 88) = 0xE900000000000044;
        v19 = objc_msgSend(v4, "objectID", swift_bridgeObjectRetain(a1).n128_f64[0]);
        *(_QWORD *)(inited + 120) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        *(_QWORD *)(inited + 96) = v19;
        v20 = sub_10002D32C(inited);
        sub_1000143B4((uint64_t)"Reminder List permanently hide deleted reminders {reminders: %@, accountID: %@}", 79, 2, v20);
        v21 = swift_bridgeObjectRelease(v20);
        v22 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v21);
        v23 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v22);
        type metadata accessor for REMAnalyticsManager(0);
        v24 = v23;
        static REMAnalyticsManager.shared.getter();
        v25 = sub_10002A750(&qword_100649F98);
        v26 = &v8[*(int *)(v25 + 48)];
        v27 = &v8[*(int *)(v25 + 80)];
        sub_10000735C(v52, (uint64_t)v8, (uint64_t *)&unk_100649BE0);
        v28 = enum case for REMUserOperation.permanentlyDeleteReminder(_:);
        v29 = type metadata accessor for REMUserOperation(0);
        v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v8, v28, v29);
        *(_QWORD *)v26 = TTRUserDefaults.activitySessionId.getter(v30);
        *((_QWORD *)v26 + 1) = v31;
        TTRUserDefaults.activitySessionBeginTime.getter();
        v53 = 0;
        v54 = 0xE000000000000000;
        _StringGuts.grow(_:)(19);
        v32 = v54;
        v33 = _typeName(_:qualified:)(v51, 0);
        v35 = v34;
        swift_bridgeObjectRelease(v32);
        v53 = v33;
        v54 = v35;
        v36._object = (void *)0x8000000100568720;
        v36._countAndFlagsBits = 0xD000000000000011;
        String.append(_:)(v36);
        v37 = v54;
        *(_QWORD *)v27 = v53;
        *((_QWORD *)v27 + 1) = v37;
        v38 = v48;
        v39 = v49;
        (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v8, enum case for REMAnalyticsEvent.userOperation(_:), v49);
        REMAnalyticsManager.post(event:)(v8);
        v40 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v8, v39, v40);
        v41 = (void (**)(uint64_t, id, uint64_t, id))v50[6];
        ObjectType = swift_getObjectType(v50[5], v42);
        v41[11](a1, v4, ObjectType, v41);

        return result;
      }
LABEL_15:
      swift_once(&qword_10063D420, sub_1001AF584);
      goto LABEL_7;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v13)
      goto LABEL_3;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

id sub_1001AF340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  uint64_t v19;

  v2 = sub_10002A750(&qword_10064A050);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_10064A810);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B4F1C(a1, (uint64_t)v4);
  v8 = sub_10002A750(&qword_10064A058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_10064A050);
    return 0;
  }
  else
  {
    v10 = *(_QWORD *)&v4[*(int *)(v8 + 48)];
    v11 = *(int *)(v5 + 48);
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v7[v11] = v10;
    v12 = *(void **)&v7[*(int *)(v5 + 48)];
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v13 = objc_msgSend(v12, "store");
    v14 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v13);

    if (*(_QWORD *)(a1 + 16) == 1)
    {
      v9 = objc_msgSend(v14, "updateReminder:", v12);
    }
    else
    {
      v15 = objc_msgSend(v12, "list");
      v16 = objc_msgSend(v14, "updateList:", v15);

      v17 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v14, "addReminderWithTitle:toListChangeItem:", v17, v16);

    }
  }
  return v9;
}

uint64_t sub_1001AF584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064A550);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064A550);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001AF614(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)&j___s15RemindersUICore21TTRLocalizableStringsO0A4ListO12SwipeActionsO6deleteSSvgZ
                            + 4 * byte_100527902[a1]))();
}

void sub_1001AF65C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001AF688()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.flagOrUnflag.getter)();
}

uint64_t sub_1001AF694()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.indentOrOutdent.getter)();
}

uint64_t sub_1001AF6A0()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.weekend.getter)();
}

uint64_t sub_1001AF6AC()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.details.getter)();
}

uint64_t sub_1001AF6B8()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.tomorrow.getter)();
}

uint64_t sub_1001AF6C4()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.customDateAndTime.getter)();
}

uint64_t sub_1001AF6D0()
{
  return ((uint64_t (*)(void))static TTRCommonAsset.Color.RowAction.move.getter)();
}

uint64_t sub_1001AF6DC(uint64_t a1, uint64_t a2)
{
  return sub_1001BAD84(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1001AF6F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id *v38;
  int *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;

  v64 = a2;
  v3 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v55 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (id *)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (int *)sub_10002A750(&qword_10064A828);
  v7 = __chkstk_darwin(v6);
  v62 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v63 = (uint64_t)&v54 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v13);
  v57 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v6[12];
  v16 = (uint64_t)&v12[v15];
  v17 = v6[16];
  v18 = (uint64_t)&v12[v17];
  v19 = v6[20];
  v20 = a1 + v15;
  v21 = a1 + v17;
  sub_10002B1E8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v59 = v20;
  v61 = v16;
  sub_10002B1E8(v20, v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v60 = v21;
  sub_10002B1E8(v21, v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v22 = a1;
  v23 = *(_QWORD *)(a1 + v19);
  v58 = v19;
  *(_QWORD *)&v12[v19] = v23;
  v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (swift_getEnumCaseMultiPayload(v12, v24) == 1)
  {
    v25 = v57;
    sub_10001F580((uint64_t)v12, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v26 = sub_10001F544(v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v26);
    v28 = v27;
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    __asm { BR              X10 }
  }
  sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  sub_10001F544(v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v61 = 0;
  v29 = v63;
  v30 = v63 + v6[12];
  v31 = (id *)(v63 + v6[16]);
  v32 = v6[20];
  sub_10002B1E8(v22, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v33 = v59;
  v57 = v30;
  sub_10002B1E8(v59, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v34 = v60;
  sub_10002B1E8(v60, (uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v35 = v58;
  *(_QWORD *)(v29 + v32) = *(_QWORD *)(v22 + v58);
  v36 = *v31;
  sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  *v64 = v36;
  v37 = v62;
  v38 = (id *)(v62 + v6[12]);
  v39 = v6;
  v40 = v62 + v6[16];
  v56 = v39[20];
  sub_10002B1E8(v22, v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8(v33, (uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v60 = v40;
  sub_10002B1E8(v34, v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  *(_QWORD *)(v37 + v56) = *(_QWORD *)(v22 + v35);
  v41 = *v38;
  sub_10001F544((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v64[1] = v41;
  v42 = *(_QWORD *)(v22 + v35);
  v43 = *(_QWORD *)(v42 + 16);
  v44 = _swiftEmptyArrayStorage;
  if (v43)
  {
    v65 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v43);
    v45 = v42 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v46 = *(_QWORD *)(v55 + 72);
    do
    {
      sub_10002B1E8(v45, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v47 = *v5;
      v48 = sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v48);
      v49 = v65[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v49);
      v50 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
      specialized ContiguousArray._endMutation()(v50);
      v45 += v46;
      --v43;
    }
    while (v43);
    v44 = v65;
  }
  v51 = v64;
  v64[2] = v44;
  v52 = v60;
  v51[3] = v61;
  sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  sub_10001F544(v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  return sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_1001AFB7C()
{
  JUMPOUT(0x1001AF94CLL);
}

_QWORD *sub_1001AFB84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[14];
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57[7];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v4);
  v48[11] = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v7 = __chkstk_darwin(v6);
  v48[7] = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v48[6] = (char *)v48 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem(0);
  __chkstk_darwin(v10);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = __chkstk_darwin(v50);
  v48[3] = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v48[10] = (char *)v48 - v16;
  v17 = __chkstk_darwin(v15);
  v48[9] = (char *)v48 - v18;
  v19 = __chkstk_darwin(v17);
  v48[5] = (char *)v48 - v20;
  v21 = __chkstk_darwin(v19);
  v48[12] = (char *)v48 - v22;
  v23 = __chkstk_darwin(v21);
  v52 = (char *)v48 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)v48 - v26;
  v55 = (uint64_t)_swiftEmptyArrayStorage;
  v56 = _swiftEmptyArrayStorage;
  v28 = *(_QWORD *)(a1 + 16);
  v49 = v2;
  if (v28)
  {
    v51 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v29 = a1 + v51;
    v54 = *(_QWORD *)(v25 + 72);
    v48[0] = a1;
    swift_bridgeObjectRetain(a1);
    v48[2] = 0;
    v48[4] = _swiftEmptyArrayStorage;
    v48[8] = _swiftEmptyArrayStorage;
    v53 = _swiftEmptyArrayStorage;
    v48[13] = v10;
    v30 = sub_10002B1E8(v29, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.editableCasesOnly.getter(v30);
    v31 = (char *)&loc_1001AFE70 + 4 * byte_10052791E[swift_getEnumCaseMultiPayload(v12, v10)];
    __asm { BR              X9 }
  }
  v53 = _swiftEmptyArrayStorage;
  type metadata accessor for TTRListEditor(0);
  v32 = static TTRListEditor.filterOutSubtasksWithParents(in:)(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v56 = (_QWORD *)v32;
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v46 = v32;
    else
      v46 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v33 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = v55;
  if ((unint64_t)v55 >> 62)
  {
    if (v55 < 0)
      v47 = v55;
    else
      v47 = v55 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v55);
    v35 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v36 = _swiftEmptyArrayStorage[2];
  if (v33)
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v55);
    if (v35)
      goto LABEL_9;
    v38 = v53;
    if (v36)
      goto LABEL_14;
    v42 = *(_QWORD *)(v49 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(v49 + 56), v37);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v57, ObjectType, v42);
    sub_100179C5C(v57);
    if (LOBYTE(v57[0]) > 1u)
    {
LABEL_9:
      v38 = v53;
LABEL_14:
      swift_bridgeObjectRelease(v38);
      v40 = v56;
      goto LABEL_17;
    }
    return v56;
  }
  else
  {
    swift_bridgeObjectRelease(v56);
    if (!v35)
    {
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(v53);
      v40 = _swiftEmptyArrayStorage;
      goto LABEL_17;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v36
      || (v44 = *(_QWORD *)(v49 + 64),
          v45 = swift_getObjectType(*(_QWORD *)(v49 + 56), v39),
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 8))(v57, v45, v44),
          sub_100179C5C(v57),
          LOBYTE(v57[0]) > 1u))
    {
      swift_bridgeObjectRelease(v53);
      v40 = (_QWORD *)v55;
LABEL_17:
      swift_bridgeObjectRelease(v40);
      return 0;
    }
    return (_QWORD *)v55;
  }
}

uint64_t sub_1001B0854(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 112) = a2;
  *(_QWORD *)(v5 + 120) = v4;
  *(_BYTE *)(v5 + 193) = a4;
  *(_BYTE *)(v5 + 192) = a3;
  *(_QWORD *)(v5 + 104) = a1;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 128) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v5 + 136) = v8;
  *(_QWORD *)(v5 + 144) = v9;
  return swift_task_switch(sub_1001B08CC, v8, v9);
}

uint64_t sub_1001B08CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;

  v3 = *(_QWORD *)(v2 + 120);
  v4 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56), a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  sub_100179C5C((uint64_t *)(v2 + 16));
  if (*(_BYTE *)(v2 + 16))
  {
    if (*(_BYTE *)(v2 + 16) != 1)
    {
      v14 = swift_release();
      return (*(uint64_t (**)(_QWORD, __n128))(v2 + 8))(0, v14);
    }
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 120) + 16);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v2 + 120);
    v11 = *(_QWORD *)(v10 + 24);
    v12 = swift_getObjectType(Strong, v8);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v10, v12, v11);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v13 = 0;
  }
  *(_QWORD *)(v2 + 152) = v13;
  v17 = *(_QWORD *)(v2 + 112);
  v16 = *(_QWORD *)(v2 + 120);
  v18 = swift_task_alloc(32);
  *(_QWORD *)(v2 + 160) = v18;
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v16;
  v19 = sub_1001BABEC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v2 + 168) = v19;
  v20 = (_QWORD *)swift_task_alloc(async function pointer to TTRDeleteRemindersPresenterCapability.deleteReminders(_:areSiriSuggestions:dueDateOfRecurrenceInstanceByRecurrentReminderID:requiresConfirmationForRemindersWithSubtasks:shouldNotPrompt:performOptimisticDeletion:alertPresenter:)[1]);
  *(_QWORD *)(v2 + 176) = v20;
  *v20 = v2;
  v20[1] = sub_1001B0A54;
  return TTRDeleteRemindersPresenterCapability.deleteReminders(_:areSiriSuggestions:dueDateOfRecurrenceInstanceByRecurrentReminderID:requiresConfirmationForRemindersWithSubtasks:shouldNotPrompt:performOptimisticDeletion:alertPresenter:)(*(_QWORD *)(v2 + 104), *(unsigned __int8 *)(v2 + 192), v19, v6, *(unsigned __int8 *)(v2 + 193), sub_1001BD7CC, v18, v13);
}

uint64_t sub_1001B0A54(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 176);
  *(_QWORD *)(*v2 + 184) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 136);
    v7 = *(_QWORD *)(v4 + 144);
    v8 = sub_1001B0B1C;
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 160);
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 168));
    *(_BYTE *)(v4 + 194) = a1 & 1;
    swift_task_dealloc(v9);
    v6 = *(_QWORD *)(v4 + 136);
    v7 = *(_QWORD *)(v4 + 144);
    v8 = sub_1001B0ADC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1001B0ADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 194));
}

uint64_t sub_1001B0B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_10064A550);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 184);
  if (v8)
  {
    v16 = *(_QWORD *)(v0 + 152);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v17 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_getErrorValue(v9, v0 + 88, v0 + 64);
    v12 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v14 = v13;
    *(_QWORD *)(v0 + 96) = sub_100027E40(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRRemindersListPresenterCapability: error deleting reminders {error: %{public}s}", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_unknownObjectRelease(v16);
    swift_errorRelease(v9);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 152));
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1001B0D40(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = v3;
  *(_BYTE *)(v4 + 240) = a2;
  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 104) = *v3;
  v5 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  *(_QWORD *)(v4 + 112) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 120) = v6;
  *(_QWORD *)(v4 + 128) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_10064A7E8);
  *(_QWORD *)(v4 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  *(_QWORD *)(v4 + 144) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 152) = v9;
  *(_QWORD *)(v4 + 160) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 168) = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
  *(_QWORD *)(v4 + 176) = v12;
  *(_QWORD *)(v4 + 184) = v13;
  return swift_task_switch(sub_1001B0E30, v12, v13);
}

void sub_1001B0E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD, unint64_t, _QWORD);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t (*v44)(id, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _QWORD *v57;
  uint8_t *v58;
  _QWORD *v59;
  uint64_t MetatypeMetadata;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  void *v82;
  char v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  NSString v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  _QWORD *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + 16);
  if (v3)
    v4 = 0;
  else
    v4 = *(_BYTE *)(v2 + 240) == 0;
  if (v4)
  {
    swift_release();
LABEL_47:
    v64 = 0;
    goto LABEL_48;
  }
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v5 + 56);
  *(_QWORD *)(v2 + 192) = v6;
  v7 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v2 + 200) = v7;
  ObjectType = swift_getObjectType(v6, a2);
  *(_QWORD *)(v2 + 208) = ObjectType;
  v109 = ObjectType;
  v110 = v7;
  v9 = (*(uint64_t (**)(void))(v7 + 96))();
  *(_QWORD *)(v2 + 216) = v9;
  if (!v9)
  {
    swift_release();
    if (qword_10063D420 != -1)
      swift_once(&qword_10063D420, sub_1001AF584);
    v53 = type metadata accessor for Logger(0);
    v54 = sub_100012DC4(v53, (uint64_t)qword_10064A550);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.fault.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = *(_QWORD **)(v2 + 104);
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = (_QWORD *)swift_slowAlloc(32, -1);
      v111 = v59;
      *(_DWORD *)v58 = 136446210;
      v112 = (uint64_t)v57;
      MetatypeMetadata = swift_getMetatypeMetadata(v57);
      v61 = String.init<A>(describing:)(&v112, MetatypeMetadata);
      v63 = v62;
      *(_QWORD *)(v2 + 64) = sub_100027E40(v61, v62, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 64, v2 + 72, v58 + 4, v58 + 12);
      swift_bridgeObjectRelease(v63);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "%{public}s#request(sections:completion:) 'viewModelSource.sectionsContext' is nil unexpectedly.", v58, 0xCu);
      swift_arrayDestroy(v59, 1, &type metadata for Any[8]);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);
    }

    goto LABEL_47;
  }
  v10 = (uint64_t)_swiftEmptyArrayStorage;
  v100 = (_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 72) = _swiftEmptyArrayStorage;
  v111 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v108 = *(_QWORD *)(v2 + 120);
    v12 = *(_QWORD *)(v2 + 80);
    v105 = v12 + 32;
    swift_bridgeObjectRetain_n(v12, 2);
    v13 = 0;
    v104 = v3;
    v103 = v11;
    while (1)
    {
      v107 = v13;
      v15 = v105 + 16 * v13;
      v16 = *(id *)v15;
      v17 = *(unsigned __int8 *)(v15 + 8);
      v106 = *(id *)v15;
      v18 = (void *)TTRSection.sectionID.getter(v16, v17);
      v19 = v18;
      v20 = sub_10021E540();
      if (*(_QWORD *)(v20 + 16) && (v21 = sub_1002AA620((uint64_t)v18), (v22 & 1) != 0))
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(v11 + 16))(*(_QWORD *)(v2 + 136), *(_QWORD *)(v20 + 56) + *(_QWORD *)(v11 + 72) * v21, *(_QWORD *)(v2 + 144));
        v23 = 0;
      }
      else
      {
        v23 = 1;
      }
      v25 = *(_QWORD *)(v2 + 136);
      v24 = *(_QWORD *)(v2 + 144);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v25, v23, 1, v24);
      swift_bridgeObjectRelease(v20);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v25, 1, v24) == 1)
      {
        sub_1000073A0(*(_QWORD *)(v2 + 136), &qword_10064A7E8);
        v26 = (uint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        v27 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v11 + 32))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
        v28 = REMRemindersListDataView.SectionLite.reminders.getter(v27);
        v112 = (uint64_t)_swiftEmptyArrayStorage;
        v29 = *(_QWORD *)(v28 + 16);
        if (v29)
        {
          v101 = v28;
          v102 = v19;
          v30 = v28 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
          v31 = *(_QWORD *)(v108 + 72);
          v32 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v108 + 16);
          do
          {
            v33 = v32(*(_QWORD *)(v2 + 128), v30, *(_QWORD *)(v2 + 112));
            v34 = REMRemindersListDataView.ReminderLite.objectID.getter(v33);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
            v36 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v35 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v36 >= v35 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
            v37 = *(_QWORD *)(v2 + 128);
            v38 = *(_QWORD *)(v2 + 112);
            v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
            specialized Array._endMutation()(v39);
            (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v37, v38);
            v30 += v31;
            --v29;
          }
          while (v29);
          v26 = v112;
          v3 = v104;
          v19 = v102;
          v11 = v103;
          v28 = v101;
        }
        else
        {
          v26 = (uint64_t)_swiftEmptyArrayStorage;
        }
        v40 = *(_QWORD *)(v2 + 160);
        v41 = *(_QWORD *)(v2 + 144);
        v42 = swift_bridgeObjectRelease(v28);
        (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v40, v41, v42);
      }

      v112 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v26 >> 62)
      {
        if (v26 < 0)
          v52 = v26;
        else
          v52 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_retain();
        swift_bridgeObjectRetain(v26);
        v43 = _CocoaArrayWrapper.endIndex.getter(v52);
        if (v43)
        {
LABEL_26:
          v3 = 0;
          v44 = *(uint64_t (**)(id, uint64_t, uint64_t))(v110 + 240);
          while (1)
          {
            v46 = (v26 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v26)
                : *(id *)(v26 + 8 * v3 + 32);
            v47 = v46;
            v10 = v3 + 1;
            if (__OFADD__(v3, 1))
              break;
            v48 = v44(v46, v109, v110);

            if (v48)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
              v51 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v50 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v51 >= v50 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
              v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v48);
              specialized Array._endMutation()(v45);
            }
            ++v3;
            if (v10 == v43)
            {
              swift_bridgeObjectRelease(v26);
              v14 = (_QWORD *)v112;
              v3 = v104;
              v11 = v103;
              goto LABEL_9;
            }
          }
          __break(1u);
          goto LABEL_55;
        }
      }
      else
      {
        v43 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_bridgeObjectRetain(v26);
        if (v43)
          goto LABEL_26;
      }
      swift_bridgeObjectRelease(v26);
      v14 = _swiftEmptyArrayStorage;
LABEL_9:
      swift_release();
      swift_bridgeObjectRelease(v26);
      v13 = v107 + 1;
      sub_100450D40((uint64_t)v14);

      if (v107 + 1 == v3)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v2 + 80));
        v10 = (uint64_t)v111;
        goto LABEL_51;
      }
    }
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 80));
LABEL_51:
  v67 = *(_QWORD *)(v2 + 96);
  v68 = sub_10021E59C(0, 0);
  swift_retain();
  v26 = (uint64_t)sub_1001BBE58((uint64_t)v68, v67);
  swift_release();
  swift_bridgeObjectRelease(v68);
  if ((unint64_t)v10 >> 62)
  {
LABEL_55:
    if (v10 < 0)
      v70 = v10;
    else
      v70 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v71 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease(v10);
    v69 = v10;
    if (v71)
      goto LABEL_53;
  }
  else
  {
    v69 = v10;
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_53:
      sub_100450D40(v69);
      goto LABEL_60;
    }
  }
  swift_bridgeObjectRelease(v69);
LABEL_60:
  if (*(_BYTE *)(v2 + 240) == 1)
  {
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v72 = v26;
      else
        v72 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v73 = _CocoaArrayWrapper.endIndex.getter(v72);
      swift_bridgeObjectRelease(v26);
      if (v73)
        goto LABEL_63;
    }
    else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_63:
      sub_100450D40(v26);
      goto LABEL_69;
    }
  }
  swift_bridgeObjectRelease(v26);
LABEL_69:
  v74 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 224) = v74;
  if (!((unint64_t)v74 >> 62))
  {
    if (*(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_71;
    goto LABEL_82;
  }
  if (v74 < 0)
    v86 = v74;
  else
    v86 = v74 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v74);
  v87 = _CocoaArrayWrapper.endIndex.getter(v86);
  swift_bridgeObjectRelease(v74);
  if (!v87)
  {
LABEL_82:
    v88 = swift_release();
    v89 = *(_QWORD *)(v2 + 216);
    v90 = *(_QWORD *)(v2 + 96);
    v91 = *(_QWORD *)(v2 + 80);
    v92 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, __n128))(*(_QWORD *)(v2 + 200) + 368))(*(_QWORD *)(v2 + 88), 1, *(_QWORD *)(v2 + 208), v88);
    static TTRLocalizableStrings.UndoAction.deleteSection.getter(v92);
    v94 = v93;
    v95 = (void *)objc_opt_self(TTRUndoManager);
    v96 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v94);
    v97 = (_QWORD *)swift_allocObject(&unk_1005F54D0, 40, 7);
    v97[2] = v90;
    v97[3] = v91;
    v97[4] = v100;
    v98 = swift_allocObject(&unk_1005F54F8, 32, 7);
    *(_QWORD *)(v98 + 16) = sub_1001BD800;
    *(_QWORD *)(v98 + 24) = v97;
    *(_QWORD *)(v2 + 48) = sub_1000381EC;
    *(_QWORD *)(v2 + 56) = v98;
    *(_QWORD *)(v2 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v2 + 24) = 1107296256;
    *(_QWORD *)(v2 + 32) = sub_10001B258;
    *(_QWORD *)(v2 + 40) = &unk_1005F5510;
    v99 = _Block_copy((const void *)(v2 + 16));
    swift_retain();
    swift_retain();
    objc_msgSend(v95, "withActionName:block:", v96, v99, swift_release().n128_f64[0]);

    swift_unknownObjectRelease(v89);
    _Block_release(v99);
    LOBYTE(v89) = swift_isEscapingClosureAtFileLocation(v98, "", 118, 3188, 51, 1);
    swift_release();
    if ((v89 & 1) != 0)
    {
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease(*v100);
    swift_release();
    v64 = 1;
LABEL_48:
    v66 = *(_QWORD *)(v2 + 128);
    v65 = *(_QWORD *)(v2 + 136);
    swift_task_dealloc(*(_QWORD *)(v2 + 160));
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    (*(void (**)(uint64_t))(v2 + 8))(v64);
    return;
  }
LABEL_71:
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 80));
    v75 = v3 - 1;
    v77 = (unsigned __int8 *)(v76 + 40);
    do
    {
      v78 = v75;
      v79 = (void *)*((_QWORD *)v77 - 1);
      v80 = *v77;
      v81 = v79;
      v82 = (void *)TTRSection.sectionID.getter(v79, v80);
      v83 = sub_10021E948(v82);

      if ((v83 & 1) != 0)
        break;
      v75 = v78 - 1;
      v77 += 16;
    }
    while (v78);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 80));
  }
  else
  {
    v83 = 0;
  }
  v84 = v83 | sub_10021E948(0);
  v85 = (_QWORD *)swift_task_alloc(dword_10064A7F4);
  *(_QWORD *)(v2 + 232) = v85;
  *v85 = v2;
  v85[1] = sub_1001B178C;
  sub_1001B8780(v3 > 1, v84 & 1);
}

uint64_t sub_1001B178C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_BYTE *)(*v1 + 241) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1001B17E4, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

void sub_1001B17E4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(unsigned __int8 *)(v0 + 241);
  v2 = swift_release();
  if ((v1 & 1) == 0)
  {
    v15 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
    swift_bridgeObjectRelease(v14);
    swift_unknownObjectRelease(v15);
    goto LABEL_5;
  }
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 200) + 368))(*(_QWORD *)(v0 + 88), 1, *(_QWORD *)(v0 + 208), v2);
  static TTRLocalizableStrings.UndoAction.deleteSection.getter(v6);
  v8 = v7;
  v9 = (void *)objc_opt_self(TTRUndoManager);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = (_QWORD *)swift_allocObject(&unk_1005F54D0, 40, 7);
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v0 + 72;
  v12 = swift_allocObject(&unk_1005F54F8, 32, 7);
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v12 + 16) = sub_1001BD800;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v0 + 48) = sub_1000381EC;
  *(_QWORD *)(v0 + 56) = v12;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_10001B258;
  *(_QWORD *)(v0 + 40) = &unk_1005F5510;
  v13 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_retain();
  objc_msgSend(v9, "withActionName:block:", v10, v13, swift_release().n128_f64[0]);

  swift_unknownObjectRelease(v3);
  _Block_release(v13);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v12, "", 118, 3188, 51, 1);
  swift_release();
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
    swift_release();
LABEL_5:
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    (*(void (**)(uint64_t))(v0 + 8))(v1);
    return;
  }
  __break(1u);
}

void sub_1001B19F0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  void **v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47[80];

  v42 = *v1;
  v43 = type metadata accessor for REMAnalyticsEvent(0);
  v3 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v10 = sub_100012DC4(v6, (uint64_t)qword_10064A550);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v11, v47);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x49746E756F636361;
  *(_QWORD *)(inited + 40) = 0xE900000000000044;
  v13 = objc_msgSend(a1, "objectID");
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v13;
  v14 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder List permanently hide all deleted reminders {items: %@, accountID: %@}", 79, 2, v14);
  v15 = swift_bridgeObjectRelease(v14);
  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v15);
  v17 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v16);
  v41 = a1;
  v18 = *v17;
  type metadata accessor for REMAnalyticsManager(0);
  v19 = v18;
  static REMAnalyticsManager.shared.getter();
  v20 = sub_10002A750(&qword_100649F98);
  v21 = &v5[*(int *)(v20 + 48)];
  v22 = &v5[*(int *)(v20 + 80)];
  v23 = enum case for REMRDLUserOperationDetail.rdl_permanentlyDeleteAll(_:);
  v24 = type metadata accessor for REMRDLUserOperationDetail(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v5, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v5, 0, 1, v24);
  v26 = enum case for REMUserOperation.permanentlyDeleteReminder(_:);
  v27 = type metadata accessor for REMUserOperation(0);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v5, v26, v27);
  *(_QWORD *)v21 = TTRUserDefaults.activitySessionId.getter(v28);
  *((_QWORD *)v21 + 1) = v29;
  TTRUserDefaults.activitySessionBeginTime.getter();
  v45 = 0;
  v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v30 = v46;
  v31 = _typeName(_:qualified:)(v42, 0);
  v33 = v32;
  swift_bridgeObjectRelease(v30);
  v45 = v31;
  v46 = v33;
  v34._object = (void *)0x8000000100568720;
  v34._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v34);
  v35 = v46;
  *(_QWORD *)v22 = v45;
  *((_QWORD *)v22 + 1) = v35;
  v36 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for REMAnalyticsEvent.userOperation(_:), v43);
  REMAnalyticsManager.post(event:)(v5);
  v37 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v36, v37);
  v38 = *(_QWORD *)(v44 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(v44 + 40), v39);
  (*(void (**)(void *, uint64_t, uint64_t))(v38 + 96))(v41, ObjectType, v38);

}

void sub_1001B1D54(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  _QWORD v44[9];

  v6 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  ObjectType = swift_getObjectType(v13, v15);
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 600);
  v42 = ObjectType;
  v17(ObjectType, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v6);
  v18 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v12, v9);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  v19(v12, v6);
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  if ((v18 & 1) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 632))(v44, v42, v14);
    v20 = v44[0];
    v21 = v44[1];
    v22 = (void *)v44[2];
    v23 = v44[3];
    v24 = (void *)v44[4];
    v25 = v44[5];
    v26 = v44[6];
    v27 = v44[7];
  }
  v28 = v21;
  v29 = v20;
  v30 = v22;
  swift_beginAccess(a2, v43, 1, 0);
  v31 = *a2;
  v41 = a2[1];
  v42 = v31;
  v32 = (void *)a2[2];
  v39 = a2[3];
  v40 = v32;
  v33 = (void *)a2[4];
  v37 = a2[5];
  v38 = v33;
  v34 = a2[6];
  v35 = a2[7];
  v36 = v34;
  *a2 = v29;
  a2[1] = v28;
  a2[2] = (uint64_t)v30;
  a2[3] = v23;
  a2[4] = (uint64_t)v24;
  a2[5] = v25;
  a2[6] = v26;
  a2[7] = v27;
  sub_1001BD3C4(v29, v28, v30, v23, v24, v25, v26, v27);
  sub_1001BD418(v42, v41, v40, v39, v38, v37, v36, v35);
  *a3 = v29;
  a3[1] = v28;
  a3[2] = (uint64_t)v30;
  a3[3] = v23;
  a3[4] = (uint64_t)v24;
  a3[5] = v25;
  a3[6] = v26;
  a3[7] = v27;
}

uint64_t sub_1001B1F4C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53[11];

  v45 = a5;
  v50 = a3;
  v8 = sub_10002A750(&qword_10064A058);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 16);
  v49 = a4;
  v46 = a1;
  if (v14)
  {
    v15 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v16 = *(_QWORD *)(v11 + 72);
    v44 = a2;
    swift_bridgeObjectRetain(a2);
    v52 = _swiftEmptyArrayStorage;
    v17 = v50;
    do
    {
      sub_10002B1E8(v15, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((v17 & 1) != 0)
      {
        v20 = *(_QWORD *)(a4 + 64);
        ObjectType = swift_getObjectType(*(_QWORD *)(a4 + 56), v19);
        v22 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 248))(v13, ObjectType, v20);
        if (v22)
        {
          v23 = v22;
          if (objc_msgSend(v22, "isRecurrent"))
          {
            v24 = *(int *)(v48 + 48);
            v25 = v51;
            sub_10002B1E8((uint64_t)v13, v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            *(_QWORD *)(v25 + v24) = v23;
            v26 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) != 0)
              v27 = (unint64_t)v52;
            else
              v27 = sub_100456B6C(0, v52[2] + 1, 1, (unint64_t)v52);
            v29 = *(_QWORD *)(v27 + 16);
            v28 = *(_QWORD *)(v27 + 24);
            if (v29 >= v28 >> 1)
              v27 = sub_100456B6C(v28 > 1, v29 + 1, 1, v27);
            *(_QWORD *)(v27 + 16) = v29 + 1;
            v18 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
            v52 = (_QWORD *)v27;
            sub_10000F614(v51, v27 + v18 + *(_QWORD *)(v47 + 72) * v29, &qword_10064A058);
            a4 = v49;
            v17 = v50;
          }
          (*(void (**)(char *, void *, uint64_t, uint64_t))(v20 + 480))(v13, v23, ObjectType, v20);

        }
      }
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v15 += v16;
      --v14;
    }
    while (v14);
    a2 = v44;
    swift_bridgeObjectRelease(v44);
    v30 = v45;
    v31 = v52;
  }
  else
  {
    v31 = _swiftEmptyArrayStorage;
    v30 = v45;
  }
  v32 = (_QWORD *)swift_allocObject(&unk_1005F5430, 48, 7);
  v33 = v49;
  v32[2] = v49;
  v32[3] = v30;
  v32[4] = v33;
  v32[5] = v31;
  v34 = (_QWORD *)swift_allocObject(&unk_1005F5458, 48, 7);
  v34[2] = v33;
  v34[3] = v31;
  v34[4] = v30;
  v34[5] = v33;
  v35 = swift_allocObject(&unk_1005F5480, 48, 7);
  *(_QWORD *)(v35 + 16) = v31;
  *(_QWORD *)(v35 + 24) = v33;
  v36 = v50 & 1;
  *(_BYTE *)(v35 + 32) = v50 & 1;
  *(_QWORD *)(v35 + 40) = a2;
  swift_retain_n(v33, 5);
  swift_retain_n(v30, 2);
  swift_bridgeObjectRetain_n(v31, 2);
  v37 = swift_bridgeObjectRetain(a2);
  TTRRemindersListSetCompletedOptions.init(afterDateProviderForAdvancingForwardRecurrence:editBeforeAdvancingForwardRecurrence:orderClonedInSmartList:updateClonedMemberships:concludeEditing:)(v53, 0, 0, 0, 0, sub_1001BCF4C, v32, sub_1001BCFC0, v34, v37, sub_1001BD000, v35);
  v38 = v46[3];
  v39 = v46[4];
  sub_10001413C(v46, v38);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v39 + 16))(v36, v53, v38, v39);
  v42 = v41;
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v42);
  sub_1000381B8(v53[0], v53[1]);
  sub_1000381B8(v53[2], v53[3]);
  sub_1000381B8(v53[4], v53[5]);
  sub_1000381B8(v53[6], v53[7]);
  return sub_1000381B8(v53[8], v53[9]);
}

void sub_1001B2310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, char *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  char v73;
  Swift::Int v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  char v78;
  uint64_t v79;
  id v80;
  char v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(id, id, _QWORD, _QWORD *, uint64_t, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  _BYTE v135[24];
  uint64_t v136[8];
  _QWORD v137[3];
  char v138;
  uint64_t v139;
  __int16 v140;
  uint64_t v141;
  uint64_t v142;

  v117 = a7;
  v118 = a3;
  v122 = a2;
  v11 = sub_10002A750(&qword_10064A058);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v124 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v105 - v15;
  __chkstk_darwin(v17);
  v132 = (uint64_t)&v105 - v18;
  v119 = a4;
  v20 = *(_QWORD *)(a4 + 56);
  v19 = *(_QWORD *)(a4 + 64);
  ObjectType = swift_getObjectType(v20, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(ObjectType, v19);
  if (!v23
    || (v25 = v23,
        v26 = v24,
        v27 = swift_getObjectType(v23, v24),
        LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26),
        swift_unknownObjectRelease(v25),
        (v26 & 1) == 0))
  {
    v131 = a6;
    v127 = v12;
    swift_beginAccess(a5 + 2, v135, 0, 0);
    v28 = a5[2];
    v29 = a5[3];
    v30 = (char *)a5[4];
    v31 = a5[5];
    v32 = (void *)a5[6];
    v33 = a5[7];
    v34 = v28;
    v35 = v29;
    v36 = (uint64_t)v30;
    v37 = v31;
    v38 = (uint64_t)v32;
    v39 = a5[8];
    v40 = a5[9];
    v41 = v33;
    v42 = v39;
    v43 = v40;
    if (v28 == 1)
    {
      v130 = 1;
      v44 = v29;
      v45 = a5 + 2;
      v46 = v33;
      v47 = v32;
      v48 = v31;
      v49 = v30;
      v50 = v40;
      v51 = v39;
      sub_1001B1D54((uint64_t)v131, v45, v136);
      v39 = v51;
      v40 = v50;
      v28 = v130;
      v29 = v44;
      v30 = v49;
      v31 = v48;
      v32 = v47;
      v33 = v46;
      v34 = v136[0];
      v35 = v136[1];
      v36 = v136[2];
      v37 = v136[3];
      v38 = v136[4];
      v41 = v136[5];
      v42 = v136[6];
      v43 = v136[7];
    }
    if (v34)
    {
      v137[0] = v34;
      v137[1] = v35;
      v137[2] = v36;
      v138 = v37 & 1;
      v139 = v38;
      v140 = v41;
      v141 = v42;
      v142 = v43;
      v52 = v34;
      v116 = *(_QWORD *)(v117 + 16);
      if (v116)
      {
        v106 = v43;
        v107 = v42;
        v108 = v41;
        v109 = (void *)v38;
        v110 = v37;
        v111 = (void *)v36;
        v112 = v35;
        v113 = v34;
        v130 = *(int *)(v11 + 48);
        v53 = v127;
        v129 = v117 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
        v125 = v29;
        v131 = v30;
        v54 = v28;
        v55 = v33;
        v56 = v32;
        v57 = v31;
        v58 = v40;
        v59 = v39;
        v126 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v128 = a1 & 0xC000000000000001;
        sub_1001BD3B4(v54, v125, v131, v57, v56, v55, v59, v58);
        v127 = *(_QWORD *)(v53 + 72);
        v60 = a1 & 0xFFFFFFFFFFFFFF8;
        if (a1 < 0)
          v60 = a1;
        v125 = v60;
        v131 = (char *)(a1 + 56);
        v123 = v122 & 0xC000000000000001;
        v61 = v122 & 0xFFFFFFFFFFFFFF8;
        if (v122 < 0)
          v61 = v122;
        v120 = v61;
        swift_bridgeObjectRetain(v117);
        v62 = 0;
        v115 = (char *)&type metadata for Swift.AnyObject + 8;
        v121 = v11;
        v63 = (uint64_t)v124;
        v64 = v116;
        v114 = a1;
        while (1)
        {
          v65 = v132;
          sub_10000735C(v129 + v127 * v62, v132, &qword_10064A058);
          v66 = *(void **)(v65 + v130);
          v67 = *(int *)(v11 + 48);
          sub_10001F580(v65, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(_QWORD *)&v16[v67] = v66;
          v68 = *(int *)(v11 + 48);
          sub_10002B1E8((uint64_t)v16, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(_QWORD *)(v63 + v68) = v66;
          v69 = v66;
          sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v70 = objc_msgSend(v69, "objectID");
          v71 = v70;
          if (v128)
          {
            v72 = v70;
            v73 = __CocoaSet.contains(_:)(v72, v125);

            if ((v73 & 1) == 0)
              goto LABEL_14;
          }
          else
          {
            if (!*(_QWORD *)(a1 + 16))
              goto LABEL_13;
            v74 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a1 + 40));
            v75 = -1 << *(_BYTE *)(a1 + 32);
            v76 = v74 & ~v75;
            if (((*(_QWORD *)&v131[(v76 >> 3) & 0xFFFFFFFFFFFFF8] >> v76) & 1) == 0)
              goto LABEL_12;
            v77 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v76);
            v78 = static NSObject.== infix(_:_:)(v77, v71);

            if ((v78 & 1) == 0)
            {
              v79 = ~v75;
              while (1)
              {
                v76 = (v76 + 1) & v79;
                if (((*(_QWORD *)&v131[(v76 >> 3) & 0xFFFFFFFFFFFFF8] >> v76) & 1) == 0)
                  break;
                v80 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v76);
                v81 = static NSObject.== infix(_:_:)(v80, v71);

                if ((v81 & 1) != 0)
                  goto LABEL_25;
              }
LABEL_12:
              v11 = v121;
              v63 = (uint64_t)v124;
LABEL_13:

              goto LABEL_14;
            }
LABEL_25:

            v11 = v121;
            v63 = (uint64_t)v124;
          }
          v82 = objc_msgSend(v69, "objectID");
          v71 = v82;
          if (v123)
          {
            v83 = v82;
            v84 = __CocoaDictionary.lookup(_:)(v83, v120);

            if (!v84)
            {
              v71 = v83;
              goto LABEL_13;
            }
            v133 = v84;
            v85 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
            swift_unknownObjectRetain(v84);
            swift_dynamicCast(&v134, &v133, v115, v85, 7);
            v86 = v134;
            swift_unknownObjectRelease(v84);

            if (v86)
              goto LABEL_33;
          }
          else
          {
            if (!*(_QWORD *)(v122 + 16))
              goto LABEL_13;
            v88 = sub_1002AA364((uint64_t)v82);
            if ((v89 & 1) == 0)
              goto LABEL_13;
            v86 = *(id *)(*(_QWORD *)(v122 + 56) + 8 * v88);

            if (v86)
            {
LABEL_33:
              v90 = *(_QWORD *)(v119 + 48);
              v91 = swift_getObjectType(*(_QWORD *)(v119 + 40), v87);
              v92 = *(void (**)(id, id, _QWORD, _QWORD *, uint64_t, uint64_t, uint64_t))(v90 + 448);
              v93 = v69;
              v94 = v91;
              v63 = (uint64_t)v124;
              v92(v86, v69, 0, v137, v118, v94, v90);
              v64 = v116;
              a1 = v114;

              v11 = v121;
              sub_1000073A0((uint64_t)v16, &qword_10064A058);
              goto LABEL_15;
            }
          }
LABEL_14:
          sub_1000073A0((uint64_t)v16, &qword_10064A058);

LABEL_15:
          if (++v62 == v64)
          {
            swift_bridgeObjectRelease(v117);
            v95 = v113;
            v96 = v112;
            v97 = v111;
            v98 = v110;
            v99 = v109;
            v100 = v108;
            v101 = v107;
            v102 = v106;
            goto LABEL_38;
          }
        }
      }
      v103 = v43;
      v104 = v42;
      sub_1001BD3B4(v28, v29, v30, v31, v32, v33, v39, v40);
      v95 = v52;
      v96 = v35;
      v97 = (void *)v36;
      v98 = v37;
      v99 = (void *)v38;
      v100 = v41;
      v101 = v104;
      v102 = v103;
LABEL_38:
      sub_10017A18C(v95, v96, v97, v98, v99, v100, v101, v102);
    }
    else
    {
      sub_1001BD3B4(v28, v29, v30, v31, v32, v33, v39, v40);
    }
  }
}

double sub_1001B2AC0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  _QWORD *v91;
  int *v92;
  char v93[32];
  uint64_t v94[9];

  v88 = a6;
  v90 = a1;
  v91 = (_QWORD *)a5;
  v92 = (int *)sub_10002A750(&qword_10064A058);
  v89 = *((_QWORD *)v92 - 1);
  __chkstk_darwin(v92);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v80 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - v18;
  v20 = *(_QWORD *)(a3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 56), v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 96))(ObjectType, v20);
  if (v23)
  {
    v25 = v23;
    v80 = v10;
    v81 = v13;
    v83 = a3;
    v84 = a2;
    v94[0] = (uint64_t)_swiftEmptyArrayStorage;
    v26 = *(_QWORD *)(a4 + 16);
    v86 = a4;
    v82 = v26;
    if (v26)
    {
      v85 = v23;
      v27 = a4 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
      v28 = *(_QWORD *)(v89 + 72);
      swift_bridgeObjectRetain(a4);
      v29 = v26;
      do
      {
        sub_10000735C(v27, (uint64_t)v19, &qword_10064A058);
        v31 = v92[12];
        sub_10002B1E8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v32 = *(void **)&v19[v31];
        *(_QWORD *)&v16[v31] = v32;
        v33 = objc_msgSend(v32, "objectID");
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v34 = sub_1000073A0((uint64_t)v19, &qword_10064A058);
        if (v33)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
          v36 = *(_QWORD *)((v94[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v35 = *(_QWORD *)((v94[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v36 >= v35 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
          v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v33);
          specialized Array._endMutation()(v30);
        }
        v27 += v28;
        --v29;
      }
      while (v29);
      v37 = (_QWORD *)v94[0];
      v25 = v85;
      a4 = v86;
    }
    else
    {
      swift_bridgeObjectRetain(a4);
      v37 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRetain(v37);
    v39 = sub_100017684(v38);
    swift_bridgeObjectRelease(v37);
    v40 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRetain(v25);
    v41 = sub_1001BB050(v40, v39);
    swift_bridgeObjectRelease(v39);
    swift_unknownObjectRelease(v25);
    v42 = (uint64_t)v90;
    swift_bridgeObjectRetain(v90);
    swift_bridgeObjectRetain(v41);
    v87 = sub_1001BD010(_swiftEmptyDictionarySingleton, (uint64_t)v37, v42, v41);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease_n(v41, 2);
    v43 = v91;
    v44 = v91 + 2;
    swift_beginAccess(v91 + 2, v93, 0, 0);
    v45 = v43[2];
    v46 = v43[3];
    v48 = (void *)v43[4];
    v47 = v43[5];
    v49 = (int *)v43[6];
    v50 = v43[7];
    v51 = v45;
    v52 = v46;
    v53 = v48;
    v54 = v47;
    v55 = v49;
    v57 = v43[8];
    v56 = v43[9];
    v58 = v50;
    v59 = (int *)v57;
    v60 = v56;
    if (v45 == 1)
    {
      v61 = v44;
      v62 = v50;
      v63 = v49;
      v64 = v47;
      sub_1001B1D54(v88, v61, v94);
      v47 = v64;
      v49 = v63;
      v50 = v62;
      v51 = v94[0];
      v52 = v94[1];
      v53 = (void *)v94[2];
      v54 = v94[3];
      v55 = (int *)v94[4];
      v58 = v94[5];
      v59 = (int *)v94[6];
      v60 = v94[7];
    }
    if (v51)
    {
      v89 = v60;
      v90 = v59;
      v91 = (_QWORD *)v58;
      v92 = v55;
      v65 = v52;
      v66 = v51;
      if ((v54 & 1) == 0)
      {
        sub_1001BD3B4(v45, v46, v48, v47, v49, v50, v57, v56);
        v67 = v53;
        sub_10017A18C(v66, v65, v53, v54, v92, (uint64_t)v91, (uint64_t)v90, v89);
LABEL_18:
        v76 = *(_QWORD *)(v83 + 48);
        v77 = swift_getObjectType(*(_QWORD *)(v83 + 40), v68);
        v78 = v53;
        v79 = v87;
        (*(void (**)(void *, BOOL, uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 456))(v78, v66 != 0, v87, v84, v77, v76);
        swift_unknownObjectRelease(v25);
        swift_bridgeObjectRelease(v79);

        return result;
      }
      sub_1001BD3B4(v45, v46, v48, v47, v49, v50, v57, v56);
      swift_unknownObjectRelease(v25);
      swift_bridgeObjectRelease(v87);
      sub_10017A18C(v66, v65, v53, v54, v92, (uint64_t)v91, (uint64_t)v90, v89);
    }
    else
    {
      if (v82)
      {
        v85 = v25;
        v69 = v92;
        v88 = v92[12];
        v70 = *(unsigned __int8 *)(v89 + 80);
        v82 = 0;
        v71 = (uint64_t)v80;
        v90 = v49;
        v91 = (_QWORD *)v50;
        v89 = v47;
        sub_10000735C(v86 + ((v70 + 32) & ~v70), (uint64_t)v80, &qword_10064A058);
        v72 = v69[12];
        v73 = (uint64_t)v81;
        sub_10001F580(v71, (uint64_t)v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v74 = *(void **)(v71 + v72);
        *(_QWORD *)(v73 + v88) = v74;
        v75 = v69[12];
        v66 = v82;
        sub_10002B1E8(v73, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)&v16[v75] = v74;
        v25 = v85;
        sub_1001BD3B4(v45, v46, v48, v89, v90, (uint64_t)v91, v57, v56);
        v67 = objc_msgSend(v74, "list");
        sub_1000073A0(v73, &qword_10064A058);
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v53 = v67;
        goto LABEL_18;
      }
      sub_1001BD3B4(v45, v46, v48, v47, v49, v50, v57, v56);
      swift_unknownObjectRelease(v25);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v87).n128_u64[0];
    }
  }
  return result;
}

void sub_1001B3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t *v52;
  _QWORD *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  _QWORD *v65;
  char *v66;
  __n128 v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;

  v62 = a6;
  v63 = a4;
  v64 = a5;
  v61 = a1;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &qword_10064A050;
  v12 = sub_10002A750(&qword_10064A050);
  __chkstk_darwin(v12);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v61 - v16;
  v18 = *(_QWORD *)(a3 + 16);
  v65 = sub_100456B80(0, v18, 0, _swiftEmptyArrayStorage);
  v71 = a2;
  v72 = a2 & 0xC000000000000001;
  v19 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v19 = a2;
  v69 = a3;
  v70 = v19;
  v20 = swift_bridgeObjectRetain(a3);
  v73 = 0;
  v20.n128_u64[0] = 138412290;
  v67 = v20;
  v66 = (char *)&type metadata for Swift.AnyObject + 8;
  v68 = v17;
  while (1)
  {
    if (v73 == v18)
    {
      v21 = sub_10002A750(&qword_10064A058);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v14, 1, 1, v21);
      v73 = v18;
    }
    else
    {
      if (v73 >= v18)
      {
        __break(1u);
        return;
      }
      v22 = sub_10002A750(&qword_10064A058);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = v73;
      sub_10000735C(v69+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v73, (uint64_t)v14, &qword_10064A058);
      v73 = v24 + 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v22);
    }
    sub_10000F614((uint64_t)v14, (uint64_t)v17, v11);
    v25 = sub_10002A750(&qword_10064A058);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v17, 1, v25) == 1)
      break;
    v26 = *(void **)&v17[*(int *)(v25 + 48)];
    sub_10001F580((uint64_t)v17, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27 = objc_msgSend(v26, "objectID");
    v28 = v27;
    if (v72)
    {
      v29 = v27;
      v30 = __CocoaDictionary.lookup(_:)(v29, v70);

      if (!v30)
        goto LABEL_21;
      v74 = v30;
      v31 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      swift_unknownObjectRetain(v30);
      swift_dynamicCast(&v75, &v74, v66, v31, 7);
      v32 = v75;
      swift_unknownObjectRelease(v30);

      if (!v32)
        goto LABEL_22;
LABEL_18:
      v36 = v65[2];
      v35 = v65[3];
      v37 = v26;
      v39 = v32;
      if (v36 >= v35 >> 1)
        v65 = sub_100456B80((_QWORD *)(v35 > 1), v36 + 1, 1, v65);
      v40 = v65;
      v65[2] = v36 + 1;
      v41 = &v40[2 * v36];
      v41[4] = v37;
      v41[5] = v39;
      v42 = *(_QWORD *)(v63 + 64);
      ObjectType = swift_getObjectType(*(_QWORD *)(v63 + 56), v38);
      (*(void (**)(char *, id, uint64_t, uint64_t))(v42 + 488))(v10, v39, ObjectType, v42);

      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v11 = &qword_10064A050;
    }
    else
    {
      if (!*(_QWORD *)(v71 + 16) || (v33 = sub_1002AA364((uint64_t)v27), (v34 & 1) == 0))
      {
LABEL_21:

        goto LABEL_22;
      }
      v32 = *(id *)(*(_QWORD *)(v71 + 56) + 8 * v33);

      if (v32)
        goto LABEL_18;
LABEL_22:
      if (qword_10063D420 != -1)
        swift_once(&qword_10063D420, sub_1001AF584);
      v44 = type metadata accessor for Logger(0);
      sub_100012DC4(v44, (uint64_t)qword_10064A550);
      v45 = v26;
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.fault.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc(12, -1);
        v49 = v14;
        v50 = v10;
        v51 = v18;
        v52 = v11;
        v53 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v48 = v67.n128_u32[0];
        v54 = objc_msgSend(v45, "objectID");
        *(_QWORD *)(v48 + 4) = v54;
        *v53 = v54;

        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Missing cloned reminder change item {original: %@}", (uint8_t *)v48, 0xCu);
        v55 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v53, 1, v55);
        v56 = v53;
        v11 = v52;
        v18 = v51;
        v10 = v50;
        v14 = v49;
        v17 = v68;
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v48, -1, -1);
      }
      else
      {

      }
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  swift_bridgeObjectRelease(v69);
  if ((v64 & 1) != 0)
  {
    v58 = *(_QWORD *)(v63 + 64);
    v59 = swift_getObjectType(*(_QWORD *)(v63 + 56), v57);
    v60 = v65;
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v58 + 496))(v61, v65, v59, v58);
    swift_bridgeObjectRelease(v60);
    sub_1001A57E4(v62);
  }
  else
  {
    swift_bridgeObjectRelease(v65);
  }
}

void sub_1001B35FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v10;
  NSString v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];
  uint64_t v16;

  v6 = v5;
  v16 = 0;
  v10 = (void *)objc_opt_self(TTRUndoManager);
  v11 = String._bridgeToObjectiveC()();
  v12 = (_QWORD *)swift_allocObject(&unk_1005F5278, 56, 7);
  v12[2] = &v16;
  v12[3] = v6;
  v12[4] = a1;
  v12[5] = a4;
  v12[6] = a5;
  v13 = swift_allocObject(&unk_1005F52A0, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1001BCCFC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_10001B278;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005F52B8;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  swift_retain();
  objc_msgSend(v10, "withActionName:block:", v11, v14, swift_release().n128_f64[0]);

  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v13, "", 118, 2753, 51, 1);
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_1001B378C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(result, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_1001B37F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = sub_10002A750(&qword_100649D80);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRDateChangeType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    TTRRemindersListPostponeType.dateChangeType.getter(a2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v16 = sub_10001F580((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
      __chkstk_darwin(v16);
      *(&v19 - 2) = (uint64_t)v14;
      sub_1001B35FC(a1, a3, a4, (uint64_t)sub_1001BCCCC, (uint64_t)(&v19 - 4));
      v15 = v17;
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
      return v15;
    }
    sub_1000073A0((uint64_t)v10, &qword_100649D80);
  }
  return 0;
}

BOOL sub_1001B3960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a3;
  v34 = a4;
  v35 = a1;
  v5 = a2;
  v6 = sub_10002A750(&qword_10064A7B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRPostponementWeekend(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649D80);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRDateChangeType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v32 = (uint64_t)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 == 3)
  {
    v19 = v35;
    sub_1001B3C6C(v35, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_10064A7B0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
      goto LABEL_7;
    }
    sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRPostponementWeekend);
    sub_10001F580((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  }
  else
  {
    TTRRemindersListPostponeType.dateChangeType.getter(a2);
    v19 = v35;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v21 = v32;
    sub_10001F580((uint64_t)v15, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
    v22 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v23 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v24 = *(_QWORD *)(v23 + 72);
    v25 = *(unsigned __int8 *)(v23 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = swift_allocObject(v22, v26 + v24, v25 | 7);
    *(_OWORD *)(v27 + 16) = xmmword_100520250;
    v28 = sub_10002B1E8(v19, v27 + v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    __chkstk_darwin(v28);
    *(&v32 - 2) = v21;
    sub_1001B35FC(v27, v33, v34, (uint64_t)sub_1001BCCCC, (uint64_t)(&v32 - 4));
    v30 = v29;
    swift_bridgeObjectRelease(v27);
    v20 = v30 == 1;
    sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
    return v20;
  }
LABEL_7:
  sub_1000073A0((uint64_t)v15, &qword_100649D80);
  return 0;
}

uint64_t sub_1001B3C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a1;
  v44 = a2;
  v3 = type metadata accessor for Calendar(0);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  __chkstk_darwin(v3);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_10064A7B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v39 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v38 = (char *)&v37 - v15;
  v16 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 224))(v43, ObjectType, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    v26 = (uint64_t *)&unk_100646F40;
    v27 = (uint64_t)v18;
LABEL_7:
    sub_1000073A0(v27, v26);
    v29 = type metadata accessor for TTRPostponementWeekend(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v44, 1, 1, v29);
  }
  sub_10001F580((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  sub_10000735C((uint64_t)&v22[*(int *)(v19 + 44)], (uint64_t)v7, &qword_10064A7B8);
  v28 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v7, 1, v28) == 1)
  {
    sub_1000073A0((uint64_t)v7, &qword_10064A7B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_6:
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v26 = (uint64_t *)&unk_100653A90;
    v27 = (uint64_t)v10;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, &v7[*(int *)(v28 + 20)], v11);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_6;
  v31 = v38;
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v38, v10, v11);
  v33 = v39;
  v34 = static Date.now.getter(v32);
  v35 = v40;
  static Calendar.current.getter(v34);
  static TTRPostponementCalculator.postponementWeekendType(relativeTo:now:calendar:)(v31, v33, v35);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
  v36 = *(void (**)(char *, uint64_t))(v12 + 8);
  v36(v33, v11);
  v36(v31, v11);
  return sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
}

uint64_t sub_1001B4028(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 128))(a2, v3, v4);
}

uint64_t sub_1001B4070(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[3];
  v6 = a1[4];
  sub_10001413C(a1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 80))(a2, a3, 0, 0, v5, v6);
}

uint64_t sub_1001B40CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  v5 = a1[3];
  v6 = a1[4];
  sub_10001413C(a1, v5);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 88);
  v7(a2, a3, 0, 0, v5, v6);
  return v7(a2, a3, 1, 0, v5, v6);
}

_QWORD *sub_1001B4148(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v24;
  _QWORD v25[14];
  _QWORD v26[15];

  sub_100180C6C((uint64_t)a2, (uint64_t)v25);
  v5 = (void *)v25[0];
  v4 = (void *)v25[1];
  v6 = v25[3];
  v7 = v25[5];
  v24 = v25[7];
  v8 = v25[9];
  v9 = v25[11];
  v10 = (void *)v25[13];
  sub_100180C6C((uint64_t)a2, (uint64_t)v26);
  v11 = v26[0];
  if (v26[0])
  {
    v21 = v8;
    v22 = v9;
    v12 = a1[3];
    v13 = a1[4];
    sub_10001413C(a1, v12);
    v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v13 + 64);
    v14 = v10;
    v15 = v5;
    v16 = v4;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v21);
    v17 = swift_bridgeObjectRetain(v22);
    v23(v11, 0, v12, v13, v17);
    return sub_100180CB0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100180D04);
  }
  else
  {
    v19 = a1[3];
    v20 = a1[4];
    sub_10001413C(a1, v19);
    return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
  }
}

void sub_1001B4278(uint64_t a1, void *a2, unsigned __int8 a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void (*v29)(void);
  id v30;
  id v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t ObjectType;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void *v50;
  char v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  char v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unsigned __int8 v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t Strong;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  int v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  id v94;
  uint64_t v95;
  _QWORD *v96;
  void *v97;
  void (*v98)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char v104;
  void (*v105)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD v124[3];
  char v125;
  void *v126;
  __int16 v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[8];
  _QWORD v131[3];
  char v132;
  void *v133;
  __int16 v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;

  v122 = a1;
  v120 = a7;
  v121 = a6;
  v119 = a5;
  v118 = a4;
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v20 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 <= 1u)
  {
    if (!a3)
    {
      sub_1001BD830(a2, 0);
      v30 = a2;
      v31 = objc_msgSend(v30, "list");
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v20, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v16);
      v32 = v121;
      v33 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v121, v20);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      v35 = v123;
      if ((v33 & 1) != 0)
      {
        v36 = v123[6];
        ObjectType = swift_getObjectType(v123[5], v34);
        (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v36 + 312))(v122, v30, v118, v119, v120, ObjectType, v36);

        sub_1001BD81C(a2, 0);
        sub_1001BD81C(a2, 0);
        return;
      }
      v60 = v123[8];
      v61 = swift_getObjectType(v123[7], v34);
      v62 = (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v60 + 648))(v31, v32, v61, v60);
      if (v62)
      {
        v64 = v62;
        v65 = v35[6];
        v66 = swift_getObjectType(v35[5], v63);
        (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 320))(v122, v30, v118, v119, v120, v64, v66, v65);

        sub_1001BD81C(a2, 0);
        sub_1001BD81C(a2, 0);
        swift_bridgeObjectRelease(v64);
        return;
      }

      sub_1001BD81C(a2, 0);
      v67 = a2;
      v68 = 0;
      goto LABEL_31;
    }
    v46 = v123;
    v47 = v123[8];
    v48 = swift_getObjectType(v123[7], v18);
    v49 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v47 + 632);
    v115 = a2;
    v49(v124, v48, v47);
    v50 = (void *)v124[2];
    v113 = v124[1];
    v114 = v124[0];
    v51 = v125;
    v53 = v127;
    v52 = v128;
    v116 = v129;
    v117 = v126;
    sub_10000F614((uint64_t)v124, (uint64_t)&v137, &qword_10064A808);
    if ((_QWORD)v137)
    {
      v55 = v51 & 1;
      v56 = v50;
      v57 = v114;
      v58 = v115;
      v59 = v113;
    }
    else
    {
      v69 = v115;
      v70 = objc_msgSend(v115, "smartList");
      (*(void (**)(_QWORD *__return_ptr))(v47 + 640))(v130);

      sub_10000F614((uint64_t)v130, (uint64_t)v131, &qword_10064A808);
      v57 = v131[0];
      if (!v131[0])
      {
        sub_1001BD81C(a2, 1u);
        v67 = a2;
        v68 = 1;
LABEL_31:
        sub_1001BD81C(v67, v68);
        return;
      }
      v59 = v131[1];
      v56 = (void *)v131[2];
      v117 = v133;
      v53 = v134;
      v52 = v135;
      v116 = v136;
      v55 = v132 & 1;
      v58 = v69;
    }
    v115 = v56;
    *(_QWORD *)&v141 = v57;
    *((_QWORD *)&v141 + 1) = v59;
    *(_QWORD *)&v142 = v56;
    BYTE8(v142) = v55;
    v71 = v117;
    *(_QWORD *)&v143 = v117;
    WORD4(v143) = v53;
    v72 = v116;
    *(_QWORD *)&v144 = v52;
    *((_QWORD *)&v144 + 1) = v116;
    v73 = v46[6];
    v74 = v59;
    v75 = swift_getObjectType(v46[5], v54);
    (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(v73 + 336))(v122, v58, v118, v119, v120, v121, &v141, 1, v75, v73);
    sub_1001BD81C(a2, 1u);
    swift_bridgeObjectRelease(v72);

    swift_bridgeObjectRelease(v74);
    swift_bridgeObjectRelease(v57);

    sub_1001BD81C(a2, 1u);
    return;
  }
  if (a3 == 2)
  {
    v38 = v123;
    v39 = v123[8];
    v40 = swift_getObjectType(v123[7], v18);
    v41 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v39 + 632);
    v42 = a2;
    v41(v131, v40, v39);
    sub_10000F614((uint64_t)v131, (uint64_t)&v137, &qword_10064A808);
    if ((_QWORD)v137)
    {
      v141 = v137;
      v142 = v138;
      v143 = v139;
      v144 = v140;
      v44 = v38[6];
      v45 = swift_getObjectType(v38[5], v43);
      (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(v44 + 344))(v122, v42, v118, v119, v120, v121, &v141, 1, v45, v44);
      sub_10017A154((uint64_t)v131);
      sub_1001BD81C(a2, 2u);
      sub_1001BD81C(a2, 2u);
      return;
    }
    sub_1001BD81C(a2, 2u);
    v67 = a2;
    v68 = 2;
    goto LABEL_31;
  }
  if (a3 == 254)
    return;
  v21 = v122;
  if ((unint64_t)v122 >> 62)
  {
    if (v122 < 0)
      v111 = v122;
    else
      v111 = v122 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v122);
    if (_CocoaArrayWrapper.endIndex.getter(v111))
      goto LABEL_6;
LABEL_48:
    swift_bridgeObjectRelease(v21);
    return;
  }
  v22 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v122);
  if (!v22)
    goto LABEL_48;
LABEL_6:
  if ((v21 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
LABEL_9:
    v24 = v23;
    v117 = v23;
    swift_bridgeObjectRelease(v21);
    v25 = v123[8];
    v27 = swift_getObjectType(v123[7], v26);
    v28 = objc_msgSend(v24, "objectID");
    v29 = *(void (**)(void))(v25 + 232);
    v116 = v27;
    v29();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {

      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
      return;
    }
    v76 = (uint64_t)v15;
    sub_10001F580((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 96))(v116, v25);
    if (v77)
    {
      v78 = v77;
      Strong = swift_unknownObjectWeakLoadStrong(v77 + 56);
      if (!Strong)
      {

        swift_unknownObjectRelease(v78);
        goto LABEL_37;
      }
      v81 = Strong;
      v82 = *(_QWORD *)(v78 + 64);
      v83 = swift_getObjectType(Strong, v80);
      v84 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 32))(v15, v83, v82);
      v86 = v85;
      swift_unknownObjectRelease(v78);
      swift_unknownObjectRelease(v81);
      LODWORD(v115) = v86;
      v88 = v86;
      if (v86 <= 1u)
      {
        v89 = v121;
        v90 = v123;
        if (!(_BYTE)v86)
        {
          v91 = v123[6];
          v92 = swift_getObjectType(v123[5], v87);
          v93 = *(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v91 + 296);
          v94 = v84;
          v93(v122, v94, v118, v119, v120, v92, v91);

          sub_1000760F4(v84, 0);
LABEL_41:
          sub_1000760F4(v84, (char)v115);
          sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          return;
        }
        v105 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 632);
        v97 = v84;
        v106 = v84;
        v105(v131, v116, v25);
        sub_10000F614((uint64_t)v131, (uint64_t)&v137, &qword_10064A808);
        if ((_QWORD)v137)
        {
          v141 = v137;
          v142 = v138;
          v143 = v139;
          v144 = v140;
          v108 = v106;
          v109 = v90[6];
          v110 = swift_getObjectType(v90[5], v107);
          (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(v109 + 352))(v122, v108, v118, v119, v120, v89, &v141, 1, v110, v109);

          v103 = v97;
          v104 = 1;
          goto LABEL_40;
        }

        sub_1000760F4(v97, 1);
        sub_1000760F4(v97, 1);
        goto LABEL_37;
      }
      v95 = v121;
      v96 = v123;
      if (v88 == 2)
      {
        v97 = v84;
        v98 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 632);
        v99 = v97;
        v98(v131, v116, v25);
        sub_10000F614((uint64_t)v131, (uint64_t)&v137, &qword_10064A808);
        if ((_QWORD)v137)
        {
          v141 = v137;
          v142 = v138;
          v143 = v139;
          v144 = v140;
          v101 = v96[6];
          v102 = swift_getObjectType(v96[5], v100);
          (*(void (**)(uint64_t, id, uint64_t, _QWORD, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(v101 + 360))(v122, v99, v118, v119, v120, v95, &v141, 1, v102, v101);

          v103 = v97;
          v104 = 2;
LABEL_40:
          sub_1000760F4(v103, v104);
          sub_10017A154((uint64_t)v131);
          v84 = v97;
          goto LABEL_41;
        }

        sub_1000760F4(v97, 2);
        sub_1000760F4(v97, 2);
LABEL_37:
        sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        return;
      }
    }

    goto LABEL_37;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v21 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

double sub_1001B4B94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100641980);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10064A700);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_10064A708);
  result = __chkstk_darwin(v14);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)((char *)v1
                  + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_fetchSuggestedSectionsCancellable))
  {
    v44 = v16;
    v45 = v2;
    v48 = *(id *)((char *)v1
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_fetchSuggestedSectionsPassthroughSubject);
    v43 = v15;
    v46 = OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_fetchSuggestedSectionsCancellable;
    v20 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v42 = v3;
    v21 = v20;
    v22 = swift_retain();
    v47 = (id)static OS_dispatch_queue.main.getter(v22);
    v23 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v41 = v4;
    v24 = v23;
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v38(v9, 1, 1, v23);
    v25 = sub_10002A750(&qword_10064A710);
    v39 = v10;
    v26 = v25;
    v27 = sub_100023FEC(&qword_10064A718, &qword_10064A710, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v40 = v11;
    v28 = v27;
    v29 = sub_100017608((unint64_t *)&qword_1006419A8, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    Publisher.receive<A>(on:options:)(&v47, v9, v26, v21, v28, v29);
    sub_1000073A0((uint64_t)v9, &qword_100641980);

    v30 = swift_release();
    v31 = static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)(200, v30);
    v48 = (id)static OS_dispatch_queue.main.getter(v31);
    v38(v9, 1, 1, v24);
    v32 = sub_100023FEC(&qword_10064A720, &qword_10064A700, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v33 = v39;
    Publisher.debounce<A>(for:scheduler:options:)(v6, &v48, v9, v39, v21, v32);
    sub_1000073A0((uint64_t)v9, &qword_100641980);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v33);
    v34 = sub_100023FEC(&qword_10064A728, &qword_10064A708, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
    v35 = v43;
    v36 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v1, sub_1001B8D4C, 0, 0, 0, v43, v45, v34);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v35);
    *(_QWORD *)((char *)v1 + v46) = v36;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001B4F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  unsigned int v26;
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[5];
  char v40;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064A050);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 56);
  v12 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(v13, v14);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8);
  v37 = ObjectType;
  v38 = v13;
  v16(v39, ObjectType, v12);
  sub_100179C5C(v39);
  if ((v40 & 1) != 0 || (v17 = *(_QWORD *)(a1 + 16)) == 0)
  {
    v30 = sub_10002A750(&qword_10064A058);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a2, 1, 1, v30);
  }
  else
  {
    v33 = a2;
    v18 = sub_10002A750(&qword_10064A058);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
    v36(v11, 1, 1, v18);
    v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 248);
    v20 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v34 = *(_QWORD *)(v6 + 72);
    v35 = v19;
    v32 = a1;
    swift_bridgeObjectRetain(a1);
    v21 = v17 - 1;
    while (1)
    {
      sub_10002B1E8(v20, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v22 = (void *)v35(v8, v37, v12);
      sub_1000073A0((uint64_t)v11, &qword_10064A050);
      if (!v22)
        break;
      v23 = *(int *)(v18 + 48);
      sub_10002B1E8((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)&v11[v23] = v22;
      v36(v11, 0, 1, v18);
      v24 = v22;
      v25 = (void *)REMReminder.accountCapabilities.getter();
      v26 = objc_msgSend(v25, "supportsHourlyRecurrence");

      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v28 = v21-- != 0;
      if (v26)
      {
        v20 += v34;
        if (v28)
          continue;
      }
      swift_bridgeObjectRelease(v32);
      return sub_10000F614((uint64_t)v11, v33, &qword_10064A050);
    }
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRelease(v32);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v33, 1, 1, v18);
  }
}

double sub_1001B51A4(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v32 - v10;
  v12 = *a2;
  v13 = objc_msgSend(v12, "name");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = TTRHashtag.init(name:type:)(v14, v16, objc_msgSend(v12, "type"));
  v19 = v18;
  v20 = objc_msgSend(v12, "name");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v25 = sub_100005CF4(v21, v23), (v26 & 1) != 0))
  {
    v27 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
    swift_bridgeObjectRetain(v27);
  }
  else
  {
    v27 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease(v23);
  v34 = (uint64_t)v27;
  sub_10002B1E8(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1004815A4((uint64_t)v11, (uint64_t)v9);
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v28 = v34;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  v33 = *a1;
  *a1 = 0x8000000000000000;
  sub_1000975F8(v28, v17, v19, isUniquelyReferenced_nonNull_native);
  v30 = *a1;
  *a1 = v33;
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v30).n128_u64[0];
  return result;
}

uint64_t sub_1001B5390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = TTRRemindersListViewModel.Item.reminderObjectID.getter();
  *a1 = result;
  return result;
}

double sub_1001B53C8@<D0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  _QWORD v22[5];
  _QWORD v23[3];

  v6 = *a1;
  v7 = *(_QWORD *)(a2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 56), a2);
  v9 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 192))(ObjectType, v7);
  swift_beginAccess(v9 + 12, v23, 32, 0);
  v10 = v9[12];
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_5;
  v11 = v6;
  v12 = sub_1002AA364((uint64_t)v11);
  if ((v13 & 1) == 0)
  {

LABEL_5:
    v17 = swift_endAccess(v23);
    v16 = _swiftEmptyArrayStorage;
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v12);
  swift_endAccess(v23);
  swift_bridgeObjectRetain(v14);

  v15 = v11;
  swift_unknownObjectRetain(v9);
  v16 = (_QWORD *)sub_10003D6CC(v14, v9, (uint64_t)v15);
  swift_bridgeObjectRelease(v14);
  swift_unknownObjectRelease(v9);

LABEL_6:
  v23[0] = v16;
  __chkstk_darwin(v17);
  v22[2] = v9;
  v22[3] = a3;
  v18 = sub_10002A750(&qword_10064A818);
  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v20 = sub_100023FEC(&qword_10064A820, &qword_10064A818, (uint64_t)&protocol conformance descriptor for [A]);
  Sequence.firstMap<A>(_:)(a4, sub_1001BD8C4, v22, v18, v19, v20);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

uint64_t sub_1001B5580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a7;
  v46 = a5;
  v47 = a6;
  v49 = a8;
  v12 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v48 = a2;
  v19 = (void *)TTRAttachmentThumbnailsManager.Result.attachmentID.getter(a1, a2, a3);
  v20 = objc_msgSend(a4, "objectID");
  v21 = static NSObject.== infix(_:_:)(v19, v20);

  if ((v21 & 1) != 0)
  {
    if (a3 == 1)
    {
      swift_retain();
      v22 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v23 = (void *)static OS_dispatch_queue.main.getter(v22);
      sub_10002B1E8(v45, (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v24 = *(unsigned __int8 *)(v16 + 80);
      v25 = (v24 + 32) & ~v24;
      v26 = swift_allocObject(&unk_1005F5688, v25 + v17, v24 | 7);
      v27 = v47;
      *(_QWORD *)(v26 + 16) = v46;
      *(_QWORD *)(v26 + 24) = v27;
      sub_10001F580((uint64_t)v18, v26 + v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_retain();
      dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_1001BE564, v26, (char *)&type metadata for () + 8);
      swift_release();
      swift_release();

      swift_release();
    }
    v28 = v48;
    v29 = TTRAttachmentThumbnailsManager.Result.attachmentID.getter(a1, v48, a3);
    v30 = objc_msgSend(a4, "fileURL");
    if (v30)
    {
      v31 = v30;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v32 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 0, 1, v32);
    }
    else
    {
      v40 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v14, 1, 1, v40);
    }
    v41 = TTRAttachmentThumbnailsManager.Result.image.getter(a1, v28, a3);
    v42 = v49;
    TTRRemindersListViewModel.ImageAttachment.init(attachmentID:fileURL:image:)(v29, v14, v41);
    v43 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  else
  {
    if (qword_10063D420 != -1)
      swift_once(&qword_10063D420, sub_1001AF584);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100012DC4(v33, (uint64_t)qword_10064A550);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.fault.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Thumbnails from attachmentThumbnailsManager are of wrong order", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    v38 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v49, 1, 1, v38);
  }
}

uint64_t sub_1001B5948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v26 = a3;
  v27 = a4;
  v28 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  sub_10002B1E8(v27, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(&unk_1005F56B0, v17 + v12, v16 | 7);
  v19 = v26;
  *(_QWORD *)(v18 + 16) = v28;
  *(_QWORD *)(v18 + 24) = v19;
  sub_10001F580((uint64_t)v13, v18 + v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  aBlock[4] = sub_1001BE984;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005F56C8;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_10002A750((uint64_t *)&unk_100640F40);
  v24 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v4, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v30);
}

uint64_t sub_1001B5BDC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t ObjectType;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  uint64_t result;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  id v48;
  char *v49;

  v47 = a8;
  v42 = a7;
  v43 = a5;
  v44 = a6;
  v45 = a4;
  v40 = a3;
  v10 = type metadata accessor for URL(0);
  __chkstk_darwin(v10);
  v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v41 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v41 + 64);
  __chkstk_darwin(v12);
  v14 = sub_10002A750(&qword_10064A868);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (id *)((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v49 = (char *)&v40 - v20;
  v21 = 0;
  v48 = *a1;
  v22 = *(_QWORD *)(a2 + 88);
  v23 = *(_QWORD *)(a2 + 96);
  if ((v45 & 1) == 0)
  {
    v21 = v40;
    v24 = v40;
  }
  ObjectType = swift_getObjectType(v22, v19);
  v26 = v49;
  (*(void (**)(id, id, uint64_t, uint64_t))(v23 + 8))(v48, v21, ObjectType, v23);

  (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v18, v26, v14);
  v27 = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 88))(v18, v14);
  if (v27 == enum case for REMAsyncOperationState.running<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v15 + 96))(v18, v14);
    sub_10002B1E8(v42, (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v28 = *(unsigned __int8 *)(v41 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(&unk_1005F5660, v29 + v13, v28 | 7);
    v31 = v44;
    *(_QWORD *)(v30 + 16) = v43;
    *(_QWORD *)(v30 + 24) = v31;
    sub_10001F580((uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v32 = swift_retain();
    v33 = (void *)zalgo.getter(v32);
    dispatch thunk of Promise.then<A>(on:closure:)(v33, sub_1001BDB68, v30, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();
    swift_release();

LABEL_9:
    v34 = 0;
    goto LABEL_10;
  }
  if (v27 == enum case for REMAsyncOperationState.succeeded<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v15 + 96))(v18, v14);
    v34 = *v18;
LABEL_10:
    v35 = v48;
    v36 = objc_msgSend(v48, "objectID", v40);
    v37 = objc_msgSend(v35, "url");
    v38 = v46;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v37);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v14);
    return TTRRemindersListViewModel.LinkAttachment.init(attachmentID:url:metadata:)(v36, v38, v34);
  }
  if (v27 == enum case for REMAsyncOperationState.failed<A>(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v15 + 96))(v18, v14);
    swift_errorRelease(*v18);
    goto LABEL_9;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

void sub_1001B5F24(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  NSObject **v26;
  void **v27;
  NSObject *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  NSObject **v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  _QWORD v70[3];
  char v71[8];
  uint64_t v72;
  void **aBlock;
  _QWORD v74[6];

  v66 = a7;
  v67 = a8;
  v64 = a1;
  v65 = a6;
  v63 = a5;
  v68 = a2;
  v69 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_10063D420 != -1)
      swift_once(&qword_10063D420, sub_1001AF584);
    v21 = type metadata accessor for Logger(0);
    sub_100012DC4(v21, (uint64_t)qword_10064A550);
    swift_errorRetain(a3);
    v22 = v69;
    swift_errorRetain(a3);
    v23 = v22;
    v69 = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v26 = (NSObject **)swift_slowAlloc(8, -1);
      v27 = (void **)swift_slowAlloc(32, -1);
      v72 = (uint64_t)v23;
      aBlock = v27;
      *(_DWORD *)v25 = 138412546;
      v28 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &aBlock, v25 + 4, v25 + 12);
      *v26 = v23;

      *(_WORD *)(v25 + 12) = 2080;
      swift_getErrorValue(a3, v71, v70);
      v29 = Error.localizedDescription.getter(v70[1], v70[2]);
      v31 = v30;
      v72 = sub_100027E40(v29, v30, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &aBlock, v25 + 14, v25 + 22);
      swift_bridgeObjectRelease(v31);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v69, v24, "Error retrieving foundInString {sgObjectID: %@, error: %s}", (uint8_t *)v25, 0x16u);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v26, 1, v32);
      swift_slowDealloc(v26, -1, -1);
      swift_arrayDestroy(v27, 1, &type metadata for Any[8]);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(a3);
      return;
    }
    swift_errorRelease(a3);

    swift_errorRelease(a3);
    swift_errorRelease(a3);
    goto LABEL_9;
  }
  v33 = v67;
  v60 = v12;
  v59 = v9;
  v61 = v14;
  v62 = v13;
  v34 = v68;
  if (v68)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v58 = v10;
    swift_bridgeObjectRetain(v34);
    v36 = (void *)static OS_dispatch_queue.main.getter(v35);
    sub_10002B1E8(v33, (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v37 = *(unsigned __int8 *)(v18 + 80);
    v38 = (v37 + 64) & ~v37;
    v39 = (_QWORD *)swift_allocObject(&unk_1005F5610, v38 + v19, v37 | 7);
    v40 = v64;
    v39[2] = v63;
    v39[3] = v40;
    v41 = v69;
    v39[4] = v34;
    v39[5] = v41;
    v42 = v66;
    v39[6] = v65;
    v39[7] = v42;
    sub_10001F580((uint64_t)v20, (uint64_t)v39 + v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v74[3] = sub_1001BE3FC;
    v74[4] = v39;
    aBlock = _NSConcreteStackBlock;
    v74[0] = 1107296256;
    v74[1] = sub_100006378;
    v74[2] = &unk_1005F5628;
    v43 = _Block_copy(&aBlock);
    v44 = v41;
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter(v45);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v46 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v47 = sub_10002A750((uint64_t *)&unk_100640F40);
    v48 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
    v49 = v60;
    v50 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v47, v48, v59, v46);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v49, v43);
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    return;
  }
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v51 = type metadata accessor for Logger(0);
  sub_100012DC4(v51, (uint64_t)qword_10064A550);
  v69 = v69;
  v52 = Logger.logObject.getter(v69);
  v53 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v52, v53))
  {

LABEL_9:
    return;
  }
  v54 = (uint8_t *)swift_slowAlloc(12, -1);
  v55 = (NSObject **)swift_slowAlloc(8, -1);
  *(_DWORD *)v54 = 138412290;
  aBlock = (void **)&v69->isa;
  v56 = v69;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v54 + 4, v54 + 12);
  *v55 = v69;

  _os_log_impl((void *)&_mh_execute_header, v52, v53, "Found nil foundInString, skipping. {sgObjectID: %@}", v54, 0xCu);
  v57 = sub_10002A750(&qword_100642D60);
  swift_arrayDestroy(v55, 1, v57);
  swift_slowDealloc(v55, -1, -1);
  swift_slowDealloc(v54, -1, -1);

}

uint64_t sub_1001B65B8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1001B6638(_OWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v4 = sub_10002A750(&qword_10064A8A8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1[4];
  v39 = a1[3];
  v40 = v9;
  v41 = a1[5];
  v10 = a1[2];
  v37 = a1[1];
  v38 = v10;
  v11 = TTRParticipantModel.contactHandles.getter(v6);
  if (!v11)
  {
    v36 = 0;
    v23 = sub_10002A750(&qword_10064A8B0);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    Promise.init(value:)(&v36);
LABEL_10:
    v27 = (_OWORD *)swift_allocObject(&unk_1005F5750, 128, 7);
    v28 = a1[5];
    v27[5] = a1[4];
    v27[6] = v28;
    v27[7] = a1[6];
    v29 = a1[1];
    v27[1] = *a1;
    v27[2] = v29;
    v30 = a1[3];
    v27[3] = a1[2];
    v27[4] = v30;
    v31 = sub_1001809E4((uint64_t)a1);
    v32 = (void *)zalgo.getter(v31);
    v33 = dispatch thunk of Promise.then<A>(on:closure:)(v32, sub_1001BEB04, v27, &type metadata for TTRAssigneeCandidateData);
    swift_release();
    swift_release();

    return v33;
  }
  v12 = (void *)v11;
  v13 = a2 + 13;
  v14 = a2[16];
  v15 = a2[17];
  sub_10001413C(v13, v14);
  v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100521140;
  v18 = objc_msgSend((id)objc_opt_self(CNContactViewController), "descriptorForRequiredKeys");
  *(_QWORD *)(v17 + 32) = v18;
  v36 = v17;
  specialized Array._endMutation()(v18);
  v19 = v36;
  dispatch thunk of REMContactsProviderType.contact(matching:keys:)(v12, v36, v14, v15);
  v20 = swift_bridgeObjectRelease(v19);
  v21 = (*(uint64_t (**)(uint64_t *, uint64_t, __n128))(v5 + 88))(v8, v4, v20);
  if (v21 == enum case for REMAsyncOperationState.running<A>(_:))
  {
    v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 96))(v8, v4);
LABEL_9:
    Promise.errorAsNil()(v22);

    swift_release();
    goto LABEL_10;
  }
  if (v21 == enum case for REMAsyncOperationState.succeeded<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v8, v4);
    v36 = *v8;
    v24 = sub_10002A750(&qword_10064A8B8);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v22 = Promise.init(value:)(&v36);
    goto LABEL_9;
  }
  if (v21 == enum case for REMAsyncOperationState.failed<A>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v8, v4);
    v25 = *v8;
    v26 = sub_10002A750(&qword_10064A8B8);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v22 = Promise.init(error:)(v25);
    goto LABEL_9;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
  __break(1u);
  return result;
}

uint64_t sub_1001B6930(void **a1, _OWORD *a2)
{
  void *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE v18[96];
  __int128 v19;

  v2 = *a1;
  v3 = a2[5];
  *(_OWORD *)&v18[64] = a2[4];
  *(_OWORD *)&v18[80] = v3;
  v19 = a2[6];
  v4 = a2[1];
  *(_OWORD *)v18 = *a2;
  *(_OWORD *)&v18[16] = v4;
  v5 = a2[3];
  *(_OWORD *)&v18[32] = a2[2];
  *(_OWORD *)&v18[48] = v5;
  sub_1001809E4((uint64_t)a2);
  if (v2)
  {
    v6 = v2;
    TTRAssigneeCandidateData.setLoadedContact(_:)((CNContact)v6);

  }
  else
  {
    TTRAssigneeCandidateData.setUnknownContact()();
  }
  v9 = *(_QWORD *)v18;
  v10 = *(_OWORD *)&v18[8];
  v11 = *(_OWORD *)&v18[24];
  v12 = *(_OWORD *)&v18[40];
  v13 = *(_OWORD *)&v18[56];
  v14 = *(_OWORD *)&v18[72];
  v15 = *(_QWORD *)&v18[88];
  v16 = v19;
  v17 = *((_QWORD *)&v19 + 1);
  v7 = sub_10002A750(&qword_10064A8C0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  return Promise.init(value:)(&v9);
}

__n128 sub_1001B6A2C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  __n128 result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _BYTE v33[32];

  v4 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 88);
  v15 = *(unsigned __int8 *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 80);
  v10 = *(void **)(a1 + 104);
  swift_beginAccess(a2 + 16, v33, 1, 0);
  v31 = *(void **)(a2 + 24);
  v32 = *(void **)(a2 + 16);
  v29 = *(_QWORD *)(a2 + 40);
  v30 = *(_QWORD *)(a2 + 32);
  v28 = *(_QWORD *)(a2 + 48);
  v26 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 56);
  v25 = *(_QWORD *)(a2 + 72);
  v23 = *(_OWORD *)(a2 + 96);
  v24 = *(_OWORD *)(a2 + 80);
  v21 = *(void **)(a2 + 120);
  v22 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v17;
  *(_QWORD *)(a2 + 88) = v8;
  *(_QWORD *)(a2 + 96) = v16;
  *(_QWORD *)(a2 + 104) = v9;
  *(_QWORD *)(a2 + 112) = v15;
  *(_QWORD *)(a2 + 120) = v10;
  v11 = v10;
  v12 = v4;
  v13 = v3;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  sub_100180D04(v32, v31, v30, v29, v28, v27, v26, v25, v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, v21);
  return result;
}

void sub_1001B6BA0(uint64_t a1, _QWORD *a2, void (*a3)(_OWORD *), uint64_t a4, _QWORD *a5)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void (*v33)(_OWORD *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[24];
  _OWORD v53[15];
  void *v54;

  swift_beginAccess(a2 + 2, v52, 0, 0);
  v8 = (void *)a2[2];
  if (v8)
  {
    v33 = a3;
    v54 = (void *)a2[15];
    v35 = a2[13];
    v36 = a2[14];
    v34 = a2[11];
    v9 = a2[9];
    v17 = a2[10];
    v18 = a2[12];
    v10 = a2[7];
    v11 = a2[8];
    v12 = a2[5];
    v13 = a2[6];
    v16 = a2 + 3;
    v14 = (void *)a2[3];
    v15 = v16[1];
    swift_beginAccess(a5 + 2, v37, 0, 0);
    v31 = (void *)a5[3];
    v32 = a5[2];
    v29 = a5[5];
    v30 = a5[4];
    v27 = a5[7];
    v28 = a5[6];
    v25 = a5[9];
    v26 = a5[8];
    v23 = a5[11];
    v24 = a5[10];
    v21 = a5[13];
    v22 = a5[12];
    v19 = (void *)a5[15];
    v20 = a5[14];
    *(_QWORD *)&v38 = v8;
    *((_QWORD *)&v38 + 1) = v14;
    *(_QWORD *)&v39 = v15;
    *((_QWORD *)&v39 + 1) = v12;
    *(_QWORD *)&v40 = v13;
    *((_QWORD *)&v40 + 1) = v10;
    *(_QWORD *)&v41 = v11;
    *((_QWORD *)&v41 + 1) = v9;
    *(_QWORD *)&v42 = v17;
    *((_QWORD *)&v42 + 1) = v34;
    *(_QWORD *)&v43 = v18;
    *((_QWORD *)&v43 + 1) = v35;
    LOBYTE(v44) = v36 & 1;
    *((_QWORD *)&v44 + 1) = v54;
    *(_QWORD *)&v45 = v32;
    *((_QWORD *)&v45 + 1) = v31;
    *(_QWORD *)&v46 = v30;
    *((_QWORD *)&v46 + 1) = v29;
    *(_QWORD *)&v47 = v28;
    *((_QWORD *)&v47 + 1) = v27;
    *(_QWORD *)&v48 = v26;
    *((_QWORD *)&v48 + 1) = v25;
    *(_QWORD *)&v49 = v24;
    *((_QWORD *)&v49 + 1) = v23;
    *(_QWORD *)&v50 = v22;
    *((_QWORD *)&v50 + 1) = v21;
    *(_QWORD *)&v51 = v20;
    *((_QWORD *)&v51 + 1) = v19;
    v53[8] = v46;
    v53[9] = v47;
    v53[0] = v38;
    v53[1] = v39;
    v53[4] = v42;
    v53[5] = v43;
    v53[2] = v40;
    v53[3] = v41;
    v53[12] = v50;
    v53[13] = v51;
    v53[10] = v48;
    v53[11] = v49;
    v53[6] = v44;
    v53[7] = v45;
    sub_100182738((uint64_t)v8, v14, v15, v12, v13, v10, v11, v9, v17, v34, v18, v35, v36, v54);
    sub_100182738((uint64_t)v8, v14, v15, v12, v13, v10, v11, v9, v17, v34, v18, v35, v36, v54);
    sub_100182738(v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22, v21, v20, v19);
    v33(v53);
    sub_1001BD940((uint64_t)&v38);
    sub_100180D04(v8, v14, v15, v12, v13, v10, v11, v9, v17, v34, v18, v35, v36, v54);
  }
}

uint64_t sub_1001B6E8C(uint64_t *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_10002A750(&qword_100653A10);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 16);
  v9 = type metadata accessor for TTRSharedWithYouHighlight(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8)
  {
    sub_10002B1E8(v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRSharedWithYouHighlight);
    v11 = 0;
  }
  else
  {
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, v11, 1, v9);
  a2(v6);
  return sub_1000073A0((uint64_t)v6, &qword_100653A10);
}

uint64_t sub_1001B6F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  _QWORD v12[2];

  v3 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.DeleteCompletedMenuItem.completeBeforeDateFromNow()(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  else if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v10 = REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.hasReminders(completedBefore:)(v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v10 & 1;
  }
  sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100653A90);
  v10 = 0;
  return v10 & 1;
}

void sub_1001B70E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t (*v62)(_QWORD);
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  char v74;
  void *v75;
  char v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  unint64_t v106;
  uint64_t v107;

  v97 = a6;
  v98 = a4;
  v94 = a5;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v99 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v101 = (uint64_t)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v87 - v14;
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v87 - v21;
  v23 = __chkstk_darwin(v20);
  v102 = a1;
  v103 = (uint64_t)&v87 - v24;
  v25 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v23);
  if (!v25)
    goto LABEL_11;
  v26 = v25;
  v96 = a2;
  v27 = sub_1004781F8(v25, a2);
  if (!v27)
  {

LABEL_11:
    *a7 = 0;
    a7[1] = 0;
    return;
  }
  v92 = v26;
  v100 = a7;
  v91 = v27;
  v28 = objc_msgSend(v27, "parentReminder");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v28, "objectID");
    v31 = sub_1004781F8(v30, v96);

    if (v31)
    {

      v32 = v100;
      *v100 = 0;
      v32[1] = 0;
      return;
    }
  }
  v33 = v99;
  v34 = v103;
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
  v95(v103, 1, 1, v11);
  swift_retain();
  v35 = TTRMutableTreeStorage.descendants(of:)(v34);
  swift_release();
  sub_1000073A0(v34, (uint64_t *)&unk_100640EB0);
  swift_unknownObjectRetain(a3);
  v36 = swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()(v36);
  v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35;
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()(v37);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v38(v22, 1, v11) == 1)
  {
LABEL_7:
    swift_unknownObjectRelease(a3);
    swift_release();
    swift_release();
    v40 = _swiftEmptyArrayStorage;
LABEL_8:
    v41 = v100;
    goto LABEL_9;
  }
  while (1)
  {
    sub_10001F580((uint64_t)v22, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v15);
    v46 = swift_release();
    if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v38)(v19, 1, v11, v46) != 1)
      break;
    sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_100640EB0);
LABEL_14:
    v45 = sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    dispatch thunk of _AnyIteratorBoxBase.next()(v45);
    if (v38(v22, 1, v11) == 1)
      goto LABEL_7;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v11);
  sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload != 2)
    goto LABEL_14;
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRelease(a3);
  swift_release();
  swift_release();
  v48 = v98;
  ObjectType = swift_getObjectType(v98, v49);
  v107 = v48;
  v51 = v103;
  sub_10002B1E8(v102, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v95(v51, 0, 1, v11);
  v52 = *(_QWORD *)(v94 + 8);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 24);
  v99 = ObjectType;
  v54 = v53(v51, ObjectType, v52);
  v39 = sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
  v40 = _swiftEmptyArrayStorage;
  v94 = v54;
  if (v54 < 1)
    goto LABEL_8;
  v55 = 0;
  v107 = (uint64_t)_swiftEmptyArrayStorage;
  v106 = (unint64_t)_swiftEmptyArrayStorage;
  v56 = v52;
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 32);
  v90 = v96 & 0xC000000000000001;
  v57 = v96 & 0xFFFFFFFFFFFFFF8;
  v58 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
  if (v96 < 0)
    v57 = v96;
  v89 = v57;
  v88 = (char *)&type metadata for Swift.AnyObject + 8;
  v41 = v100;
  v59 = v101;
  while (2)
  {
    v105 = (void *)v48;
    v61 = v103;
    v62 = v58;
    sub_10002B1E8(v102, v103, v58);
    v95(v61, 0, 1, v11);
    v93(v55, v61, v99, v56);
    v63 = sub_1000073A0(v61, (uint64_t *)&unk_100640EB0);
    v64 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v63);
    if (v64)
    {
      v65 = v64;
      if (v90)
      {
        v66 = __CocoaDictionary.lookup(_:)(v64, v89);
        if (!v66
          || (v67 = v66,
              v104 = v66,
              v68 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr),
              swift_unknownObjectRetain(v67),
              swift_dynamicCast(&v105, &v104, v88, v68, 7),
              v69 = v105,
              v70 = swift_unknownObjectRelease(v67),
              !v69))
        {
LABEL_21:
          v60 = v65;
          goto LABEL_22;
        }
LABEL_33:
        v75 = (void *)REMReminder.codable.getter(v70);

        v76 = sub_10037C044(v101, v97);
        v77 = v75;
        v60 = v77;
        if ((v76 & 1) != 0)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
          v79 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v78 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v79 >= v78 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
        }
        else
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
          v79 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v80 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v79 >= v80 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v79 + 1, 1);
        }
        v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v60);
        specialized Array._endMutation()(v81);
        v72 = v65;
        v48 = v98;
        goto LABEL_42;
      }
      v71 = v96;
      if (*(_QWORD *)(v96 + 16))
      {
        v72 = v64;
        v73 = sub_1002AA364((uint64_t)v72);
        if ((v74 & 1) != 0)
        {
          v69 = *(id *)(*(_QWORD *)(v71 + 56) + 8 * v73);

          if (!v69)
            goto LABEL_21;
          goto LABEL_33;
        }
        v60 = v65;
LABEL_42:

LABEL_22:
        v59 = v101;
      }
      else
      {
        v60 = v64;
      }

      v41 = v100;
    }
    ++v55;
    v58 = v62;
    sub_10001F544(v59, v62);
    if (v94 != v55)
      continue;
    break;
  }
  v82 = v107;
  if ((unint64_t)v107 >> 62)
  {
    if (v107 < 0)
      v86 = v107;
    else
      v86 = v107 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v107);
    v83 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v82);
  }
  else
  {
    v83 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v84 = (_QWORD *)v106;
  if (v83)
    v85 = v106;
  else
    v85 = v82;
  swift_bridgeObjectRelease(v85);
  if (v83)
    v40 = (_QWORD *)v107;
  else
    v40 = v84;
LABEL_9:
  v42 = v91;
  v43 = REMReminder.codable.getter(v39);

  *v41 = TTRReminderCopyPasteItem.Reminder.init(reminder:children:)(v43, v40);
  v41[1] = v44;
}

_QWORD *sub_1001B77E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unsigned int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[16];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v17[-v7];
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v9);
  sub_10002B1E8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v11 = *(_QWORD *)(v1 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v12);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 184))(ObjectType, v11);
    __chkstk_darwin(v14);
    *(_QWORD *)&v17[-32] = v1;
    *(_QWORD *)&v17[-24] = a1;
    *(_QWORD *)&v17[-16] = v8;
    v15 = sub_10019FF98((void (*)(uint64_t *__return_ptr, char *, __n128))sub_1001BD744, (uint64_t)&v17[-48], v14);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    swift_bridgeObjectRelease(v14);
  }
  return v15;
}

void sub_1001B7968(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v11 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  if (*a1)
  {
    if (*a1 == 1)
    {
      sub_10002B1E8(a4, (uint64_t)&v59 - v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v11);
      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (!EnumCaseMultiPayload && (sub_1001A7C14(a3) & 1) != 0)
      {
        v58 = sub_1001B82CC(a3);
        __chkstk_darwin(v58);
        *(&v59 - 2) = a2;
        *(&v59 - 1) = a3;
        v18 = sub_100476CA0((void (*)(_QWORD *__return_ptr, _QWORD, __n128))sub_1001BD760, (uint64_t)(&v59 - 4), (uint64_t)v58);
        swift_bridgeObjectRelease(v58);
      }
      else
      {
        v18 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      sub_10002B1E8(a4, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      v43 = swift_getEnumCaseMultiPayload(v13, v11);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      v18 = _swiftEmptyArrayStorage;
      if (!v43 && (sub_1001A7C14(a3) & 1) != 0)
        v18 = &off_1005EAA30;
    }
  }
  else
  {
    v65 = a5;
    v66 = v5;
    v19 = sub_10002A750(&qword_10064A798);
    v63 = swift_allocObject(v19, 34, 7);
    *(_OWORD *)(v63 + 16) = xmmword_1005201E0;
    v20 = *(_QWORD *)(a2 + 56);
    v21 = *(_QWORD *)(a2 + 64);
    ObjectType = swift_getObjectType(v20, v22);
    v24 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v25 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(_QWORD *)(v26 + 72);
    v28 = *(unsigned __int8 *)(v26 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = v28 | 7;
    v60 = v29 + v27;
    v61 = v24;
    v31 = swift_allocObject(v24, v29 + v27, v28 | 7);
    v32 = a3;
    v33 = v31;
    v67 = xmmword_100520250;
    *(_OWORD *)(v31 + 16) = xmmword_100520250;
    v34 = v31 + v29;
    v64 = v32;
    sub_10002B1E8(v32, v31 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 560);
    v69 = v20;
    v62 = ObjectType;
    v36 = v35(v33, ObjectType, v21);
    v38 = v37;
    v40 = v39;
    swift_setDeallocating(v33);
    v41 = *(_QWORD *)(v33 + 16);
    v68 = v25;
    swift_arrayDestroy(v34, v41, v25);
    swift_deallocClassInstance(v33, 32, 7);
    if (v36 && (swift_bridgeObjectRelease(v36), swift_bridgeObjectRelease(v38), v40 > 0))
      v42 = 4;
    else
      v42 = 12;
    v45 = v63;
    v44 = v64;
    v46 = v61;
    v47 = v62;
    v48 = v60;
    *(_BYTE *)(v63 + 32) = v42;
    v49 = swift_allocObject(v46, v48, v30);
    *(_OWORD *)(v49 + 16) = v67;
    sub_10002B1E8(v44, v49 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 568))(v49, v47, v21);
    v52 = v51;
    v54 = v53;
    swift_setDeallocating(v49);
    swift_arrayDestroy(v49 + v29, *(_QWORD *)(v49 + 16), v68);
    swift_deallocClassInstance(v49, 32, 7);
    if (v50 && (swift_bridgeObjectRelease(v50), swift_bridgeObjectRelease(v52), v54 > 0))
      v55 = 5;
    else
      v55 = 12;
    a5 = v65;
    *(_BYTE *)(v45 + 33) = v55;
    v70 = v45;
    v56 = sub_10002A750(&qword_10064A7A0);
    v57 = sub_100023FEC(&qword_10064A7A8, &qword_10064A7A0, (uint64_t)&protocol conformance descriptor for [A]);
    v18 = (_QWORD *)Sequence.removingNils<A>()(v56, &type metadata for TTRReminderSwipeAction, v57);
    swift_bridgeObjectRelease(v45);
  }
  *a5 = v18;
}

_QWORD *sub_1001B7D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;

  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = v10 + v8;
  v12 = v9 | 7;
  v13 = swift_allocObject(v5, v10 + v8, v9 | 7);
  v47 = xmmword_100520250;
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  v48 = a1;
  sub_10002B1E8(a1, v13 + v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = sub_1001AFB84(v13);
  if (v17 >= 4u)
  {
    swift_setDeallocating(v13);
    swift_arrayDestroy(v13 + v10, *(_QWORD *)(v13 + 16), v6);
    swift_deallocClassInstance(v13, 32, 7);
    v18 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1001805D4((uint64_t)v14, v15, v16, v17);
    swift_bridgeObjectRelease(v13);
    v18 = sub_1004568C8(0, 1, 1, _swiftEmptyArrayStorage);
    v20 = v18[2];
    v19 = v18[3];
    if (v20 >= v19 >> 1)
      v18 = sub_1004568C8((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
    v18[2] = v20 + 1;
    *((_BYTE *)v18 + v20 + 32) = 0;
  }
  v21 = swift_allocObject(v5, v11, v12);
  *(_OWORD *)(v21 + 16) = v47;
  sub_10002B1E8(v48, v21 + v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v22 = sub_1001A16E0(v21);
  swift_setDeallocating(v21);
  swift_arrayDestroy(v21 + v10, *(_QWORD *)(v21 + 16), v6);
  swift_deallocClassInstance(v21, 32, 7);
  if (v22)
  {
    if (v22 == 2)
      goto LABEL_19;
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
      v18 = sub_1004568C8(0, v18[2] + 1, 1, v18);
    v24 = v18[2];
    v23 = v18[3];
    v25 = v24 + 1;
    if (v24 >= v23 >> 1)
      v18 = sub_1004568C8((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
    v26 = 2;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
      v18 = sub_1004568C8(0, v18[2] + 1, 1, v18);
    v24 = v18[2];
    v27 = v18[3];
    v25 = v24 + 1;
    if (v24 >= v27 >> 1)
      v18 = sub_1004568C8((_QWORD *)(v27 > 1), v24 + 1, 1, v18);
    v26 = 3;
  }
  v18[2] = v25;
  *((_BYTE *)v18 + v24 + 32) = v26;
LABEL_19:
  v28 = swift_allocObject(v5, v11, v12);
  *(_OWORD *)(v28 + 16) = v47;
  sub_10002B1E8(v48, v28 + v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v29 = sub_1001A5C28(v28);
  swift_setDeallocating(v28);
  swift_arrayDestroy(v28 + v10, 1, v6);
  swift_deallocClassInstance(v28, 32, 7);
  if (v29)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v32 = (uint64_t)v46;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1004568C8(0, v18[2] + 1, 1, v18);
    v34 = v18[2];
    v33 = v18[3];
    if (v34 >= v33 >> 1)
      v18 = sub_1004568C8((_QWORD *)(v33 > 1), v34 + 1, 1, v18);
    v18[2] = v34 + 1;
    *((_BYTE *)v18 + v34 + 32) = 1;
  }
  else
  {
    v32 = (uint64_t)v46;
  }
  v35 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v30);
  (*(void (**)(uint64_t, uint64_t))(v35 + 136))(ObjectType, v35);
  v37 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v32, 1, v37) == 1)
  {
    sub_1000073A0(v32, &qword_100649CA0);
  }
  else
  {
    v38 = *(unsigned __int8 *)(v32 + *(int *)(v37 + 116));
    sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v38 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v18 = sub_1004568C8(0, v18[2] + 1, 1, v18);
      v40 = v18[2];
      v39 = v18[3];
      v41 = v39 >> 1;
      v42 = v40 + 1;
      if (v39 >> 1 <= v40)
      {
        v18 = sub_1004568C8((_QWORD *)(v39 > 1), v40 + 1, 1, v18);
        v39 = v18[3];
        v41 = v39 >> 1;
      }
      v18[2] = v42;
      *((_BYTE *)v18 + v40 + 32) = 10;
      v43 = v40 + 2;
      if (v41 < v43)
        v18 = sub_1004568C8((_QWORD *)(v39 > 1), v43, 1, v18);
      v18[2] = v43;
      *((_BYTE *)v18 + v42 + 32) = 11;
    }
  }
  return v18;
}

uint64_t (*sub_1001B8298(uint64_t (**a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5))(char *, uint64_t, uint64_t)
{
  uint64_t (*result)(char *, uint64_t, uint64_t);

  result = sub_10041CE00(a3, a4, a5);
  *a1 = result;
  return result;
}

_QWORD *sub_1001B82CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  void *v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v3 = type metadata accessor for Calendar(0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  v16 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 328))(a1, ObjectType, v16);
  if (v20 == -1)
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    sub_1000073A0((uint64_t)&v37, &qword_10063F5A0);
    return _swiftEmptyArrayStorage;
  }
  v21 = v19;
  if ((v20 & 1) != 0)
  {
    v22 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v23 = &protocol witness table for REMReminderChangeItem;
  }
  else
  {
    v22 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    v23 = &protocol witness table for REMReminder;
  }
  *((_QWORD *)&v38 + 1) = v22;
  v39 = v23;
  *(_QWORD *)&v37 = v21;
  sub_10002E37C(&v37, (uint64_t)v40);
  v24 = v41;
  v25 = v42;
  sub_10001413C(v40, v41);
  v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_10;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "date");

  static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v29 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v29(v8, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100653A90);
    sub_100027F10(v40);
    return _swiftEmptyArrayStorage;
  }
  v30 = ((uint64_t (*)(char *, char *, uint64_t))v29)(v15, v8, v9);
  v31 = static Date.now.getter(v30);
  static Calendar.current.getter(v31);
  v32 = static TTRPostponementCalculator.allowedPostponementTypes(relativeTo:now:calendar:)(v15, v12, v5);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v36);
  v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v12, v9);
  v33(v15, v9);
  sub_100027F10(v40);
  return (_QWORD *)v32;
}

void sub_1001B85CC(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  char v14;
  int v15;
  _QWORD v16[2];

  v6 = sub_10002A750(&qword_10064A7B0);
  __chkstk_darwin(v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRPostponementWeekend(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (unsigned __int8 *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = 6;
  if (((1 << v13) & 0x33) != 0)
    goto LABEL_2;
  if (v13 == 2)
    goto LABEL_3;
  sub_1001B3C6C(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, &qword_10064A7B0);
LABEL_2:
    v14 = 12;
    goto LABEL_3;
  }
  sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRPostponementWeekend);
  v15 = *v12;
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRPostponementWeekend);
  if (v15)
    v14 = 8;
  else
    v14 = 7;
LABEL_3:
  *a3 = v14;
}

uint64_t sub_1001B8730(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  if (*(_QWORD *)(result + 16))
  {
    v2 = result;
    v3 = *(_QWORD *)(a2 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 56), a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 368))(v2, 1, ObjectType, v3);
  }
  return result;
}

uint64_t sub_1001B8780(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 104) = v2;
  *(_BYTE *)(v3 + 59) = a2;
  *(_BYTE *)(v3 + 58) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 112) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 120) = v6;
  *(_QWORD *)(v3 + 128) = v7;
  return swift_task_switch(sub_1001B87F4, v6, v7);
}

uint64_t sub_1001B87F4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  _QWORD *v37;
  uint64_t (*v38)(uint64_t, uint64_t, void *, uint64_t, uint64_t);

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 104) + 16);
  if (!Strong)
    goto LABEL_5;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType(Strong, v2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, ObjectType, v5);
  v9 = v8;
  swift_unknownObjectRelease(v3);
  *(_QWORD *)(v0 + 136) = v7;
  if (v7)
  {
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v11 + 64);
    v13 = swift_getObjectType(*(_QWORD *)(v11 + 56), v10);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 104))(v13, v12);
    if (v14)
    {
      v16 = v14;
      v17 = v15;
      v18 = swift_getObjectType(v14, v15);
      LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
      swift_unknownObjectRelease(v16);
      v19 = v17 & 1;
    }
    else
    {
      v19 = 0;
    }
    v22 = *(unsigned __int8 *)(v0 + 59);
    v23 = *(unsigned __int8 *)(v0 + 58);
    v24 = static TTRLocalizableStrings.RemindersList.confirmationAlertTitleForDeletingSections(isDeletingMoreThanOneSection:currentLayout:)(v23, v19);
    v26 = v25;
    *(_QWORD *)(v0 + 144) = v25;
    v27 = static TTRLocalizableStrings.RemindersList.confirmationAlertMessageForDeletingSections(isDeletingMoreThanOneSection:hasCompletedReminders:currentLayout:)(v23, v22, v19);
    v29 = v28;
    *(_QWORD *)(v0 + 152) = v28;
    v30 = sub_10002A750(&qword_10064A7F8);
    v31 = swift_allocObject(v30, 80, 7);
    *(_QWORD *)(v0 + 160) = v31;
    *(_OWORD *)(v31 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v31 + 32) = static TTRLocalizableStrings.Common.deleteButton.getter();
    *(_QWORD *)(v31 + 40) = v32;
    *(_WORD *)(v31 + 48) = 258;
    *(_QWORD *)(v31 + 56) = static TTRLocalizableStrings.Common.alertCancelButton.getter(v33);
    *(_QWORD *)(v31 + 64) = v34;
    *(_WORD *)(v31 + 72) = 1;
    *(_QWORD *)(v0 + 16) = v24;
    *(_QWORD *)(v0 + 24) = v26;
    *(_QWORD *)(v0 + 32) = v27;
    *(_QWORD *)(v0 + 40) = v29;
    *(_QWORD *)(v0 + 48) = v31;
    *(_BYTE *)(v0 + 56) = 3;
    v35 = swift_getObjectType(v7, v34);
    v36 = *(int **)(v9 + 8);
    v38 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))((char *)v36 + *v36);
    v37 = (_QWORD *)swift_task_alloc(v36[1]);
    *(_QWORD *)(v0 + 168) = v37;
    *v37 = v0;
    v37[1] = sub_1001B8A04;
    return v38(v0 + 57, v0 + 16, &type metadata for Bool, v35, v9);
  }
  else
  {
LABEL_5:
    v20 = swift_release();
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v20);
  }
}

uint64_t sub_1001B8A04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 160);
  v3 = *(_QWORD *)(*v1 + 168);
  v6 = *(_QWORD *)(*v1 + 144);
  v5 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  if (v0)
    v7 = sub_1001B8AD0;
  else
    v7 = sub_1001B8A90;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1001B8A90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 57));
}

uint64_t sub_1001B8AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10064A550);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 176);
  if (v6)
  {
    v14 = *(_QWORD *)(v0 + 136);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 88, v0 + 64);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v12 = v11;
    *(_QWORD *)(v0 + 96) = sub_100027E40(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRRemindersListPresenterCapability: failed to present alert {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_unknownObjectRelease(v14);
    swift_errorRelease(v7);
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 136));
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1001B8CE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a1 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 40), a2);
  v7 = *a3;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 72);
  swift_bridgeObjectRetain(v7);
  v8(a2, v7, ObjectType, v5);
  return swift_bridgeObjectRelease(v7);
}

double sub_1001B8D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double result;
  uint64_t v12;
  __int128 v13[2];

  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_100010634(a2, (uint64_t)v13);
  type metadata accessor for MainActor(0);
  v8 = swift_retain();
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1005F5250, 80, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a1;
  sub_10002E37C(v13, (uint64_t)(v10 + 5));
  sub_1001B9C04((uint64_t)v6, (uint64_t)&unk_10064A738, (uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001B8E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_10064A744);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1001B8EC0;
  return sub_1001B8FB0(a5);
}

uint64_t sub_1001B8EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  if (v0)
    v7 = sub_1001B8F7C;
  else
    v7 = sub_1001B8F48;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1001B8F48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B8F7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B8FB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[33] = a1;
  v2[34] = v1;
  v3 = sub_10002A750(&qword_100649CA0);
  v2[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v2[36] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[37] = v5;
  v2[38] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[39] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v2[40] = v8;
  v2[41] = v9;
  return swift_task_switch(sub_1001B9068, v8, v9);
}

uint64_t sub_1001B9068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  const char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t inited;
  uint64_t v70;
  int *v71;
  _QWORD *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v1 = *(_QWORD *)(v0 + 264);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10064A550);
  v3 = sub_100010634(v1, v0 + 64);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    sub_10001413C((_QWORD *)(v0 + 64), v8);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
    *(_QWORD *)(v0 + 256) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 256, v0 + 264, v6 + 4, v6 + 12);
    *v77 = v9;
    sub_100027F10((_QWORD *)(v0 + 64));
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FetchSuggestedSection: reminderID:%@", v6, 0xCu);
    v10 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v77, 1, v10);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    sub_100027F10((_QWORD *)(v0 + 64));
  }

  v11 = *(_QWORD *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 296);
  v14 = *(_QWORD *)(v0 + 272);
  v13 = *(_QWORD *)(v0 + 280);
  v15 = *(_QWORD **)(v0 + 264);
  v16 = v15[3];
  v17 = v15[4];
  sub_10001413C(v15, v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  *(_QWORD *)(v0 + 336) = v18;
  v19 = *(_QWORD *)(v14 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 56), v20);
  (*(void (**)(uint64_t, uint64_t))(v19 + 136))(ObjectType, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
  {
    v22 = *(_QWORD *)(v0 + 280);
    swift_release();
    v23 = sub_1000073A0(v22, &qword_100649CA0);
LABEL_18:
    v46 = Logger.logObject.getter(v23);
    v47 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "FetchSuggestedSection: Don't fetch in a list that doesn't support categorization of grocery items", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  sub_10001F580(*(_QWORD *)(v0 + 280), v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (*(_BYTE *)(v24 + *(int *)(v25 + 112)) != 1)
  {
    sub_10001F544(*(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
    goto LABEL_18;
  }
  v26 = v15[3];
  v27 = v15[4];
  sub_10001413C(*(_QWORD **)(v0 + 264), v26);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 48))(v26, v27);
  *(_QWORD *)(v0 + 344) = v28;
  *(_QWORD *)(v0 + 352) = v29;
  if (!v29)
    goto LABEL_22;
  v30 = v28;
  v31 = v29;
  v32 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v32 = v28 & 0xFFFFFFFFFFFFLL;
  if (!v32)
  {
    swift_bridgeObjectRelease(v29);
LABEL_22:
    swift_release();
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v50, v51))
    {
LABEL_35:
      v75 = *(_QWORD *)(v0 + 304);

      v45 = v75;
      goto LABEL_36;
    }
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    v53 = "FetchSuggestedSection: Cannot fetch for empty reminder title";
LABEL_34:
    _os_log_impl((void *)&_mh_execute_header, v50, v51, v53, v52, 2u);
    swift_slowDealloc(v52, -1, -1);
    goto LABEL_35;
  }
  v33 = *(_QWORD *)(v0 + 272);
  v34 = OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle;
  *(_QWORD *)(v0 + 360) = OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle;
  v35 = (uint64_t *)(v33 + v34);
  swift_beginAccess(v33 + v34, v0 + 184, 32, 0);
  v36 = *v35;
  if (!v36 || !*(_QWORD *)(v36 + 16))
    goto LABEL_25;
  swift_bridgeObjectRetain(v31);
  v37 = sub_100005CF4(v30, v31);
  if ((v38 & 1) == 0)
  {
    swift_bridgeObjectRelease(v31);
LABEL_25:
    v54 = *(_QWORD **)(v0 + 264);
    swift_endAccess(v0 + 184);
    v55 = v15[3];
    v56 = v15[4];
    sub_10001413C(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 176))(v55, v56);
    v57 = *(_QWORD *)(v0 + 168);
    if (v57)
    {
      v58 = *(_QWORD *)(v0 + 176);
      sub_10001413C((_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
      (*(void (**)(uint64_t, uint64_t))(v58 + 104))(v57, v58);
      v59 = *(_QWORD *)(v0 + 128);
      if (v59)
      {
        v60 = *(_QWORD *)(v0 + 136);
        sub_10001413C((_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
        v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
        v63 = v62;
        *(_QWORD *)(v0 + 368) = v62;
        sub_100027F10((_QWORD *)(v0 + 104));
        sub_100027F10((_QWORD *)(v0 + 144));
        if (v63)
        {
          v65 = *(_QWORD *)(v0 + 272);
          v66 = *(_QWORD *)(v65 + 48);
          v67 = swift_getObjectType(*(_QWORD *)(v65 + 40), v64);
          v68 = sub_10002A750((uint64_t *)&unk_100654F80);
          inited = swift_initStackObject(v68, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100520250;
          *(_QWORD *)(inited + 32) = v30;
          *(_QWORD *)(inited + 40) = v31;
          swift_bridgeObjectRetain(v31);
          v70 = sub_1003E7D94(inited);
          *(_QWORD *)(v0 + 376) = v70;
          swift_setDeallocating(inited);
          swift_arrayDestroy(inited + 32, 1, &type metadata for String);
          v71 = *(int **)(v66 + 632);
          v78 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v71 + *v71);
          v72 = (_QWORD *)swift_task_alloc(v71[1]);
          *(_QWORD *)(v0 + 384) = v72;
          *v72 = v0;
          v72[1] = sub_1001B978C;
          return v78(v70, v61, v63, 1, v67, v66);
        }
        swift_release();
        swift_bridgeObjectRelease(v31);
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease(v31);
        sub_100027F10((_QWORD *)(v0 + 144));
        v74 = sub_1000073A0(v0 + 104, &qword_100661E80);
      }
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease(v31);
      v74 = sub_1000073A0(v0 + 144, &qword_100649C80);
    }
    v50 = Logger.logObject.getter(v74);
    v51 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v50, v51))
      goto LABEL_35;
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    v53 = "FetchSuggestedSection: Cannot fetch for list without groceryLocaleID";
    goto LABEL_34;
  }
  v39 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD **)(v0 + 264);
  v40 = *(_QWORD **)(v0 + 272);
  v42 = (uint64_t *)(*(_QWORD *)(v36 + 56) + 16 * v37);
  v43 = *v42;
  v44 = v42[1];
  swift_endAccess(v0 + 184);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease_n(v31, 2);
  swift_release();
  sub_1001B9E68(v43, v44, v40, v18, v41);

  swift_bridgeObjectRelease(v44);
  v45 = v39;
LABEL_36:
  sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_37:
  v76 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B978C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 384);
  v3[49] = a1;
  v3[50] = v1;
  swift_task_dealloc(v4);
  v6 = v3[46];
  v5 = v3[47];
  if (v1)
  {
    v7 = v3[44];
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    v8 = v3[40];
    v9 = v3[41];
    v10 = sub_1001B9B9C;
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);
    v8 = v3[40];
    v9 = v3[41];
    v10 = sub_1001B9828;
  }
  return swift_task_switch(v10, v8, v9);
}

void sub_1001B9828()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v1 = objc_msgSend(*(id *)(v0 + 392), "suggestedSectionsByReminderTitle", swift_release().n128_f64[0]);
  v2 = sub_10002A750(&qword_10064A748);
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, v2, &protocol witness table for String);

  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_14;
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  swift_bridgeObjectRetain(v4);
  v6 = sub_100005CF4(v5, v4);
  v7 = *(_QWORD *)(v0 + 352);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
LABEL_14:
    v35 = *(void **)(v0 + 392);
    v36 = *(_QWORD *)(v0 + 352);
    v37 = *(void **)(v0 + 336);
    v38 = *(_QWORD *)(v0 + 304);
    swift_bridgeObjectRelease(v3);
    sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);

    v39 = v36;
LABEL_15:
    swift_bridgeObjectRelease(v39);
LABEL_16:
    v40 = *(_QWORD *)(v0 + 280);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v40);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v7);
  if (!((unint64_t)v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_21;
  }
  if (v9 < 0)
    v41 = v9;
  else
    v41 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v42 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(v9);
  if (!v42)
  {
LABEL_21:
    v43 = *(void **)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 352);
    v45 = *(void **)(v0 + 336);
    v46 = *(_QWORD *)(v0 + 304);
    swift_bridgeObjectRelease(v9);
    sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);

    v39 = v44;
    goto LABEL_15;
  }
LABEL_5:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    v11 = v10;
    v12 = *(_QWORD *)(v0 + 360);
    v13 = *(_QWORD *)(v0 + 272);
    v14 = objc_msgSend(v10, "sectionCanonicalName", swift_bridgeObjectRelease(v9).n128_f64[0]);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    if (!*(_QWORD *)(v13 + v12))
    {
      v18 = (unint64_t *)(*(_QWORD *)(v0 + 272) + *(_QWORD *)(v0 + 360));
      v19 = sub_100350F50((uint64_t)_swiftEmptyArrayStorage);
      swift_beginAccess(v18, v0 + 232, 1, 0);
      v20 = *v18;
      *v18 = v19;
      swift_bridgeObjectRelease(v20);
    }
    v47 = v11;
    v21 = (uint64_t *)(*(_QWORD *)(v0 + 272) + *(_QWORD *)(v0 + 360));
    swift_beginAccess(v21, v0 + 208, 33, 0);
    v22 = *v21;
    if (v22)
    {
      v23 = *(_QWORD *)(v0 + 352);
      v24 = *(_QWORD *)(v0 + 360);
      v25 = *(_QWORD *)(v0 + 344);
      v26 = *(_QWORD *)(v0 + 272);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v17);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v48 = *(_QWORD *)(v26 + v24);
      *(_QWORD *)(v26 + v24) = 0x8000000000000000;
      sub_1000984B8(v15, v17, v25, v23, isUniquelyReferenced_nonNull_native);
      v28 = *(_QWORD *)(v26 + v24);
      *(_QWORD *)(v26 + v24) = v48;
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v23);
    }
    v29 = *(void **)(v0 + 392);
    v30 = *(_QWORD *)(v0 + 352);
    v31 = *(void **)(v0 + 336);
    v32 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD **)(v0 + 264);
    v33 = *(_QWORD **)(v0 + 272);
    swift_endAccess(v0 + 208);
    swift_bridgeObjectRelease(v30);
    sub_1001B9E68(v15, v17, v33, v31, v34);

    swift_bridgeObjectRelease(v17);
    sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_1001B9B9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 280);
  swift_release();

  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1000073A0(a1, &qword_100649BA0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v9, v17, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v18 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
      goto LABEL_6;
  }
  v11 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v10, v8);
  v13 = swift_unknownObjectRetain(v10);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11, v13);
  v16 = v15;
  swift_unknownObjectRelease(v10);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v9, v17, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_1001B9D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1000073A0(a1, &qword_100649BA0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10, v8);
      v13 = swift_unknownObjectRetain(v10);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11, v13);
      v16 = v15;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v17 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
LABEL_6:
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (v16 | v14)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v14;
    v21[3] = v16;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v9, v19, v18, a2, a3);
}

void sub_1001B9E68(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  id v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t Strong;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(void *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  NSObject *v85;
  id v86;
  _BYTE v87[24];
  _BYTE v88[24];
  _BYTE v89[40];
  _OWORD v90[2];
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  char v95[8];
  char v96[8];

  v83 = a5;
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v76 - v13;
  v82 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v79 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a3[7];
  v18 = a3[8];
  ObjectType = swift_getObjectType(v17, v19);
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96);
  v85 = v17;
  v84 = ObjectType;
  v22 = v21(ObjectType, v18);
  if (v22)
  {
    v23 = v22;
    v77 = v11;
    v80 = a1;
    sub_10021ECB8(a1, a2, (uint64_t)v89);
    sub_10000F614((uint64_t)v89, (uint64_t)v90, &qword_10064A750);
    v24 = a4;
    v81 = v23;
    v78 = a2;
    if (*(_QWORD *)&v90[0] != 1)
    {
      v92 = v90[0];
      v93 = v90[1];
      v25 = *(void **)&v90[0];
      v94 = v91;
      v26 = sub_10021E59C(*(void **)&v90[0], 1);
      v27 = a4;
      v28 = sub_1001BB87C((uint64_t)v26, (uint64_t)v27);
      swift_bridgeObjectRelease(v26);

      if ((v28 & 1) != 0)
      {
        if (qword_10063D420 != -1)
          swift_once(&qword_10063D420, sub_1001AF584);
        v29 = type metadata accessor for Logger(0);
        v30 = sub_100012DC4(v29, (uint64_t)qword_10064A550);
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "FetchSuggestedSection: don't add suggested section for reminder already in correct canonical section", v33, 2u);
          swift_slowDealloc(v33, -1, -1);

          sub_10000F614((uint64_t)&v92 + 8, (uint64_t)v87, &qword_100646428);
          sub_100056AB8((uint64_t)v87);
          sub_10000F614((uint64_t)&v93 + 8, (uint64_t)v88, &qword_100646428);
          sub_100056AB8((uint64_t)v88);
        }
        else
        {

          sub_10000F614((uint64_t)&v92 + 8, (uint64_t)v87, &qword_100646428);
          sub_100056AB8((uint64_t)v87);
          sub_10000F614((uint64_t)&v93 + 8, (uint64_t)v88, &qword_100646428);
          sub_100056AB8((uint64_t)v88);

        }
LABEL_35:
        swift_unknownObjectRelease(v81);
        return;
      }

      sub_10000F614((uint64_t)&v92 + 8, (uint64_t)v95, &qword_100646428);
      sub_100056AB8((uint64_t)v95);
      sub_10000F614((uint64_t)&v93 + 8, (uint64_t)v96, &qword_100646428);
      sub_100056AB8((uint64_t)v96);
      v23 = v81;
      a2 = v78;
    }
    v38 = (char *)a3
        + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID;
    swift_beginAccess((char *)a3+ OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID, v88, 1, 0);
    if (!*(_QWORD *)v38)
    {
      v39 = sub_100350E3C((uint64_t)_swiftEmptyArrayStorage);
      v40 = *(_QWORD *)v38;
      *(_QWORD *)v38 = v39;
      swift_bridgeObjectRelease(v40);
    }
    swift_beginAccess(v38, v87, 32, 0);
    if (*(_QWORD *)v38 && *(_QWORD *)(*(_QWORD *)v38 + 16))
    {
      v41 = a4;
      sub_1002AA364((uint64_t)v41);
      if ((v42 & 1) != 0)
      {
        swift_endAccess(v87);
        swift_unknownObjectRelease(v23);

        return;
      }

      a2 = v78;
    }
    swift_endAccess(v87);
    swift_beginAccess(v38, v87, 33, 0);
    v43 = *(_QWORD *)v38;
    if (*(_QWORD *)v38)
    {
      v44 = a4;
      swift_bridgeObjectRetain(a2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v43);
      v86 = *(id *)v38;
      *(_QWORD *)v38 = 0x8000000000000000;
      sub_1000974B8(v80, a2, v44, isUniquelyReferenced_nonNull_native);
      v46 = *(_QWORD *)v38;
      *(_QWORD *)v38 = v86;

      swift_bridgeObjectRelease(v46);
    }
    swift_endAccess(v87);
    v76 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 232);
    v76(a4, v84, v18);
    v47 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v82) == 1)
    {
      sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100640EB0);
      v48 = v80;
    }
    else
    {
      v49 = (uint64_t)v14;
      v50 = v79;
      sub_10001F580(v49, v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v51 = sub_10002A750((uint64_t *)&unk_1006469C0);
      v52 = *(unsigned __int8 *)(v15 + 80);
      v53 = (v52 + 32) & ~v52;
      v54 = swift_allocObject(v51, v53 + *(_QWORD *)(v15 + 72), v52 | 7);
      *(_OWORD *)(v54 + 16) = xmmword_100520250;
      v55 = v54 + v53;
      v56 = sub_10002B1E8(v50, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v57 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v56);
      sub_10041D610(*v57, v54);
      swift_setDeallocating(v54);
      swift_arrayDestroy(v55, *(_QWORD *)(v54 + 16), v47);
      swift_deallocClassInstance(v54, 32, 7);
      swift_beginAccess((char *)a3+ OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection, v87, 33, 0);
      sub_1000176A0((Swift::Int *)&v86, v24);
      swift_endAccess(v87);

      if (qword_10063D420 != -1)
        swift_once(&qword_10063D420, sub_1001AF584);
      v58 = type metadata accessor for Logger(0);
      v59 = sub_100012DC4(v58, (uint64_t)qword_10064A550);
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.debug.getter();
      v62 = os_log_type_enabled(v60, v61);
      v48 = v80;
      if (v62)
      {
        v63 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "FetchSuggestedSection: refreshing cell", v63, 2u);
        swift_slowDealloc(v63, -1, -1);
      }

      sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    v64 = v83[3];
    v65 = v83[4];
    sub_10001413C(v83, v64);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 48))(v64, v65);
    if (!v67)
      goto LABEL_35;
    v68 = v66;
    v69 = v67;
    Strong = swift_unknownObjectWeakLoadStrong(a3 + 2);
    if (Strong)
    {
      v72 = Strong;
      v73 = a3[3];
      v74 = swift_getObjectType(Strong, v71);
      v75 = (uint64_t)v77;
      v76(v24, v84, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 40))(v75, v68, v69, v48, v78, v74, v73);
      swift_unknownObjectRelease(v81);
      swift_bridgeObjectRelease(v69);
      swift_unknownObjectRelease(v72);
      sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      swift_unknownObjectRelease(v81);
      swift_bridgeObjectRelease(v69);
    }
  }
  else
  {
    if (qword_10063D420 != -1)
      swift_once(&qword_10063D420, sub_1001AF584);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100012DC4(v34, (uint64_t)qword_10064A550);
    v85 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.fault.getter(v85);
    if (os_log_type_enabled(v85, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v36, "FetchSuggestedSection: missing sectionsContext", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

  }
}

uint64_t sub_1001BA6DC()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release();

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  sub_100027F10((_QWORD *)(v0 + 104));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 144));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 160));
  sub_100027F10((_QWORD *)(v0 + 176));
  sub_100027F10((_QWORD *)(v0 + 216));
  swift_release();
  swift_release();

  swift_release();
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_currentShareURL, (uint64_t *)&unk_100640EE0);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection));
  return v0;
}

uint64_t sub_1001BA7D8()
{
  uint64_t v0;

  sub_1001BA6DC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001BA7FC()
{
  return type metadata accessor for TTRRemindersListPresenterCapability(0);
}

uint64_t type metadata accessor for TTRRemindersListPresenterCapability(uint64_t a1)
{
  uint64_t result;

  result = qword_10064A5C0;
  if (!qword_10064A5C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRRemindersListPresenterCapability);
  return result;
}

void sub_1001BA840(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[24];

  v4[0] = &unk_100527AD8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_100527AF0;
  v4[3] = &unk_100527AF0;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_100527AF0;
  v4[7] = &unk_100527B08;
  v4[8] = &unk_100527AF0;
  v4[9] = &unk_100527AF0;
  v4[10] = &unk_100527B08;
  v4[11] = &unk_100527B08;
  v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[17] = &unk_100527B20;
  sub_1001BA92C(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(v2 - 8) + 64;
    v4[19] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[20] = &unk_100527B38;
    v4[21] = &unk_100527B38;
    v4[22] = &unk_100527B38;
    v4[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 24, v4, a1 + 80);
  }
}

void sub_1001BA92C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10064B8B0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10064B8B0);
  }
}

uint64_t sub_1001BA980(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v2 = *(unsigned __int8 *)(v1 + 296);
  if (v2 != 2)
  {
    v3 = v1;
    v4 = (v2 & 1) == 0;
    v5 = *(_QWORD *)(result + 24);
    v6 = *(_QWORD *)(result + 32);
    sub_10001413C((_QWORD *)result, v5);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
    if (((v4 ^ result) & 1) == 0)
    {
      *(_BYTE *)(v1 + 296) = result & 1;
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (result)
      {
        v8 = result;
        v9 = *(_QWORD *)(v3 + 24);
        ObjectType = swift_getObjectType(result, v7);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, ObjectType, v9);
        return swift_unknownObjectRelease(v8);
      }
    }
  }
  return result;
}

uint64_t sub_1001BAA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  return TTRGeoLocationServiceDelegate.geoService(_:didResolve:to:)(a1, a2, a3, a4, a5, a6, *v6);
}

uint64_t sub_1001BAA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20[5];

  sub_10021F790(v20);
  v4 = sub_10001413C(v20, v20[3]);
  Strong = swift_unknownObjectWeakLoadStrong(*v4 + 16);
  if (!Strong)
  {
    if (qword_10063D378 != -1)
      swift_once(&qword_10063D378, sub_1000B4280);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_100644338);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.fault.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    goto LABEL_9;
  }
  v6 = Strong;
  v7 = sub_100220B04();
  v9 = v8;
  v10 = ~v8;
  swift_unknownObjectRelease(v6);
  if (!v10)
  {
LABEL_9:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return sub_100027F10(v20);
  }
  v11 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0);
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = &off_1005F0098;
  v12 = sub_100028D70((_QWORD *)a2);
  sub_10002B1E8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v13 = (char *)v12 + *(int *)(v11 + 20);
  *(_QWORD *)v13 = v7;
  v13[8] = v9;
  return sub_100027F10(v20);
}

unint64_t sub_1001BABEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_10002A750(&qword_10064A7D8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  sub_10002A750(&qword_10064A7E0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000735C(v13, (uint64_t)v5, &qword_10064A7D8);
    v15 = *v5;
    result = sub_10019FA70(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for Date(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001BAD84(void *a1, char a2, void *a3, char a4)
{
  char v7;

  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
        return sub_100341994((uint64_t)a1, (uint64_t)a3);
    }
    else if (a4 == 2 && !a3)
    {
      return 1;
    }
  }
  else if (!a4)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    sub_1001BECBC(a1, 0);
    sub_1001BECBC(a3, 0);
    v7 = static NSObject.== infix(_:_:)(a1, a3);
    sub_100180954(a3, 0);
    sub_100180954(a1, 0);
    return v7 & 1;
  }
  return 0;
}

_QWORD *sub_1001BAE68(uint64_t a1, uint64_t a2)
{
  return sub_1001BB990(a1, a2);
}

_QWORD *sub_1001BAE7C(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;

  result = _swiftEmptyArrayStorage;
  v24 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    if (a2 < 0)
      v8 = a2;
    else
      v8 = a2 & 0xFFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)(v6 + 72);
    v21 = a1;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v10 = TTRRemindersListViewModel.Item.reminderObjectID.getter(v10);
      if (!v10)
        goto LABEL_7;
      v11 = (void *)v10;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v12 = __CocoaDictionary.lookup(_:)(v10, v8);
        if (!v12)
          goto LABEL_6;
        v13 = v12;
        v22 = v12;
        v14 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
        swift_unknownObjectRetain(v13);
        swift_dynamicCast(&v23, &v22, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v15 = v23;
        swift_unknownObjectRelease(v13);

        if (v15)
          goto LABEL_16;
      }
      else
      {
        if (!*(_QWORD *)(a2 + 16) || (v16 = sub_1002AA364(v10), (v17 & 1) == 0))
        {
LABEL_6:

          goto LABEL_7;
        }
        v15 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v16);

        if (v15)
        {
LABEL_16:
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v19 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v18 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v19 >= v18 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
          v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v15);
          v10 = specialized Array._endMutation()(v20);
        }
      }
LABEL_7:
      v7 += v9;
      if (!--v4)
      {
        swift_bridgeObjectRelease(v21);
        return (_QWORD *)v24;
      }
    }
  }
  return result;
}

uint64_t sub_1001BB050(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  id v45;
  uint64_t result;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t i;
  uint64_t v51;
  _QWORD v52[5];
  _QWORD *v53;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v4 = a2;
    else
      v4 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v7 = sub_100017608((unint64_t *)&qword_10063F030, qword_100646430, REMObjectID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v52, v5, v6, v7);
    v2 = v52[0];
    v49 = v52[1];
    v9 = v52[2];
    v10 = v52[3];
    v11 = v52[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a2 + 32);
    v49 = a2 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain(a2);
    v9 = v13;
    v10 = 0;
  }
  v48 = (unint64_t)(v9 + 64) >> 6;
  for (i = v2; ; v2 = i)
  {
    if (v2 < 0)
    {
      v20 = __CocoaSet.Iterator.next()(v8);
      if (!v20)
        goto LABEL_49;
      v21 = v20;
      v51 = v20;
      v22 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      swift_unknownObjectRetain(v21);
      swift_dynamicCast(&v53, &v51, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
      v23 = v53;
      swift_unknownObjectRelease(v21);
      v19 = v10;
      v17 = v11;
      if (!v23)
        goto LABEL_49;
    }
    else
    {
      if (v11)
      {
        v17 = (v11 - 1) & v11;
        v18 = __clz(__rbit64(v11)) | (v10 << 6);
        v19 = v10;
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_52;
        if (v24 >= v48)
          goto LABEL_49;
        v25 = *(_QWORD *)(v49 + 8 * v24);
        v19 = v10 + 1;
        if (!v25)
        {
          v19 = v10 + 2;
          if (v10 + 2 >= v48)
            goto LABEL_49;
          v25 = *(_QWORD *)(v49 + 8 * v19);
          if (!v25)
          {
            v19 = v10 + 3;
            if (v10 + 3 >= v48)
              goto LABEL_49;
            v25 = *(_QWORD *)(v49 + 8 * v19);
            if (!v25)
            {
              v19 = v10 + 4;
              if (v10 + 4 >= v48)
                goto LABEL_49;
              v25 = *(_QWORD *)(v49 + 8 * v19);
              if (!v25)
              {
                v19 = v10 + 5;
                if (v10 + 5 >= v48)
                  goto LABEL_49;
                v25 = *(_QWORD *)(v49 + 8 * v19);
                if (!v25)
                {
                  v26 = v10 + 6;
                  while (v48 != v26)
                  {
                    v25 = *(_QWORD *)(v49 + 8 * v26++);
                    if (v25)
                    {
                      v19 = v26 - 1;
                      goto LABEL_34;
                    }
                  }
LABEL_49:
                  sub_10003E410(v2);
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_34:
        v17 = (v25 - 1) & v25;
        v18 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v18);
      if (!v23)
        goto LABEL_49;
    }
    v27 = v23;
    v28 = sub_10021E4E4();
    if (*(_QWORD *)(v28 + 16) && (v29 = sub_1002AA364((uint64_t)v27), (v30 & 1) != 0))
    {
      v31 = *(void **)(*(_QWORD *)(v28 + 56) + 8 * v29);
      v32 = v31;
    }
    else
    {
      v31 = 0;
    }

    swift_bridgeObjectRelease(v28);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    v53 = a1;
    v35 = sub_1002AA364((uint64_t)v27);
    v36 = a1[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (a1[3] >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1002B11D4();
    }
    else
    {
      sub_10045C014(v38, isUniquelyReferenced_nonNull_native);
      v40 = sub_1002AA364((uint64_t)v27);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_53;
      v35 = v40;
    }
    a1 = v53;
    if ((v39 & 1) != 0)
    {
      v16 = v53[7];

      *(_QWORD *)(v16 + 8 * v35) = v31;
    }
    else
    {
      v53[(v35 >> 6) + 8] |= 1 << v35;
      *(_QWORD *)(a1[6] + 8 * v35) = v27;
      *(_QWORD *)(a1[7] + 8 * v35) = v31;
      v42 = a1[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_51;
      a1[2] = v44;
      v45 = v27;
    }

    v8 = (_QWORD *)swift_bridgeObjectRelease(0x8000000000000000);
    v10 = v19;
    v11 = v17;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  v47 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v47);
  __break(1u);
  return result;
}

uint64_t sub_1001BB4A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  sub_100027F10((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001BB4DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10064A734);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_1001B8E4C(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

void sub_1001BB558(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void *v48;
  _QWORD *v49;

  v49 = &_swiftEmptySetSingleton;
  v16 = a3 + 64;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a3 + 64);
  swift_retain();
  sub_100053DE4(a11, a12);
  sub_100053DE4(a13, a14);
  v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain(a3);
  v21 = 0;
  while (1)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_5;
    }
    v30 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v30 >= v20)
      goto LABEL_25;
    v31 = *(_QWORD *)(v16 + 8 * v30);
    ++v21;
    if (!v31)
    {
      v21 = v30 + 1;
      if (v30 + 1 >= v20)
        goto LABEL_25;
      v31 = *(_QWORD *)(v16 + 8 * v21);
      if (!v31)
      {
        v21 = v30 + 2;
        if (v30 + 2 >= v20)
          goto LABEL_25;
        v31 = *(_QWORD *)(v16 + 8 * v21);
        if (!v31)
        {
          v21 = v30 + 3;
          if (v30 + 3 >= v20)
            goto LABEL_25;
          v31 = *(_QWORD *)(v16 + 8 * v21);
          if (!v31)
          {
            v21 = v30 + 4;
            if (v30 + 4 >= v20)
              goto LABEL_25;
            v31 = *(_QWORD *)(v16 + 8 * v21);
            if (!v31)
            {
              v32 = v30 + 5;
              if (v32 >= v20)
              {
LABEL_25:
                swift_release();
                swift_bridgeObjectRelease(a3);
                v33 = (uint64_t)v49;
                if (v49[2] == 1)
                {
                  v34 = sub_1000CE5F8((uint64_t)v49);
                  swift_bridgeObjectRetain(v33);
                  v35 = a13;
                  v36 = a14;
                  sub_1000381B8(a13, a14);
                  v37 = a11;
                  v38 = a12;
                  sub_1000381B8(a11, a12);
                  swift_bridgeObjectRelease(v33);
                  v39 = a10;
                  swift_release();
                  if (v34 != 1)
                  {
                    swift_bridgeObjectRelease(v33);
                    v40 = 2 * (v34 == 0);
                    v33 = v34;
LABEL_30:
                    *(_QWORD *)a9 = a1;
                    *(_QWORD *)(a9 + 8) = a2;
                    *(_QWORD *)(a9 + 16) = v33;
                    *(_BYTE *)(a9 + 24) = v40;
                    *(_BYTE *)(a9 + 25) = a4 & 1;
                    *(_BYTE *)(a9 + 26) = a5 & 1;
                    *(_BYTE *)(a9 + 27) = a6 & 1;
                    *(_QWORD *)(a9 + 32) = a7;
                    *(_QWORD *)(a9 + 40) = a8;
                    *(_QWORD *)(a9 + 48) = v39;
                    *(_QWORD *)(a9 + 56) = v37;
                    *(_QWORD *)(a9 + 64) = v38;
                    *(_QWORD *)(a9 + 72) = v35;
                    *(_QWORD *)(a9 + 80) = v36;
                    return;
                  }
                }
                else
                {
                  v35 = a13;
                  v36 = a14;
                  sub_1000381B8(a13, a14);
                  v37 = a11;
                  v38 = a12;
                  sub_1000381B8(a11, a12);
                  v39 = a10;
                  swift_release();
                }
                v40 = 1;
                goto LABEL_30;
              }
              v31 = *(_QWORD *)(v16 + 8 * v32);
              if (!v31)
              {
                while (1)
                {
                  v21 = v32 + 1;
                  if (__OFADD__(v32, 1))
                    goto LABEL_32;
                  if (v21 >= v20)
                    goto LABEL_25;
                  v31 = *(_QWORD *)(v16 + 8 * v21);
                  ++v32;
                  if (v31)
                    goto LABEL_24;
                }
              }
              v21 = v32;
            }
          }
        }
      }
    }
LABEL_24:
    v19 = (v31 - 1) & v31;
    v23 = __clz(__rbit64(v31)) + (v21 << 6);
LABEL_5:
    v24 = 8 * v23;
    v25 = *(void **)(*(_QWORD *)(a3 + 48) + v24);
    v26 = *(void **)(*(_QWORD *)(a3 + 56) + v24);
    v27 = v26;
    v28 = v25;
    sub_100480E78(&v48, v26);
    v29 = v48;

  }
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_1001BB87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = static NSObject.== infix(_:_:)(v6, a2);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v9 = 0;
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v9 & 1;
}

_QWORD *sub_1001BB990(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  result = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v9 = *(_QWORD *)(a2 + 56);
    v8 = *(_QWORD *)(a2 + 64);
    v19 = a1;
    swift_bridgeObjectRetain(a1);
    ObjectType = swift_getObjectType(v9, v10);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 248);
    v13 = *(_QWORD *)(v6 + 72);
    do
    {
      v15 = v12(v7, ObjectType, v8);
      if (v15)
      {
        v16 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized Array._endMutation()(v14);
      }
      v7 += v13;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v19);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1001BBAC4(unsigned __int8 *a1, int64_t a2, void (*a3)(void *, void *, uint64_t, char *))
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD v25[2];
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void *, void *, uint64_t, char *);
  uint64_t v36;

  v4 = v3;
  v35 = a3;
  v7 = sub_10002A750(&qword_100649E58);
  __chkstk_darwin(v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  v36 = *(_QWORD *)(v34 - 8);
  v10 = __chkstk_darwin(v34);
  v33 = (uint64_t)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v28 = (uint64_t)v25 - v12;
  v13 = (char *)*((_QWORD *)a1 + 2);
  if (v13)
  {
    v15 = (void *)*((_QWORD *)a1 + 4);
    v14 = (void *)*((_QWORD *)a1 + 5);
    v16 = a1[48];
    v29 = a2;
    if ((unint64_t)a2 >> 62)
      goto LABEL_21;
    v17 = a2;
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v17);
    sub_1001BE4B8(v15, v14, v16);
    for (; v18; v18 = _CocoaArrayWrapper.endIndex.getter(a2))
    {
      v25[0] = a1;
      v25[1] = v4;
      v4 = 0;
      v26 = v29 + 32;
      v27 = v29 & 0xFFFFFFFFFFFFFF8;
      a1 += 72;
      v30 = v18 - 1;
      v31 = v13 - 1;
      v32 = v29 & 0xC000000000000001;
      a2 = (int64_t)_swiftEmptyArrayStorage;
      if ((v29 & 0xC000000000000001) != 0)
      {
LABEL_5:
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v29);
        goto LABEL_8;
      }
      while ((unint64_t)v4 < *(_QWORD *)(v27 + 16))
      {
        v19 = (char *)*(id *)(v26 + 8 * (_QWORD)v4);
LABEL_8:
        v13 = v19;
        v35(v15, v14, v16, v19);
        sub_1001BE50C(v15, v14, v16);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v9, 1, v34) == 1)
        {
          sub_1000073A0((uint64_t)v9, &qword_100649E58);
        }
        else
        {
          v20 = v28;
          sub_10001F580((uint64_t)v9, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
          sub_10001F580(v20, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
          if ((swift_isUniquelyReferenced_nonNull_native(a2) & 1) == 0)
            a2 = sub_100456030(0, *(_QWORD *)(a2 + 16) + 1, 1, a2);
          v22 = *(_QWORD *)(a2 + 16);
          v21 = *(_QWORD *)(a2 + 24);
          if (v22 >= v21 >> 1)
            a2 = sub_100456030(v21 > 1, v22 + 1, 1, a2);
          *(_QWORD *)(a2 + 16) = v22 + 1;
          sub_10001F580(v33, a2+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        }
        if (v31 == v4 || (char *)v30 == v4)
        {
          swift_bridgeObjectRelease(v29);
          swift_bridgeObjectRelease(v25[0]);
          return (_QWORD *)a2;
        }
        v16 = *a1;
        v15 = (void *)*((_QWORD *)a1 - 2);
        v14 = (void *)*((_QWORD *)a1 - 1);
        sub_1001BE4B8(v15, v14, *a1);
        ++v4;
        a1 += 24;
        if (v32)
          goto LABEL_5;
      }
      __break(1u);
LABEL_21:
      v23 = a2;
      if (a2 >= 0)
        a2 &= 0xFFFFFFFFFFFFFF8uLL;
      swift_bridgeObjectRetain(a1);
      swift_bridgeObjectRetain(v23);
      sub_1001BE4B8(v15, v14, v16);
    }
    sub_1001BE50C(v15, v14, v16);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(a1);
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1001BBE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(id, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v6 = *(_QWORD *)(a2 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 56), v5);
    v7 = v6;
    v8 = *(uint64_t (**)(id, uint64_t, uint64_t))(v6 + 240);
    v9 = 4;
    while (1)
    {
      a2 = v9 - 4;
      v11 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1)
          : *(id *)(a1 + 8 * v9);
      v12 = v11;
      v13 = v9 - 3;
      if (__OFADD__(a2, 1))
        break;
      v14 = v8(v11, ObjectType, v7);

      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
        specialized Array._endMutation()(v10);
      }
      ++v9;
      if (v13 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1001BBFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  char v25;
  unsigned __int8 v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[2];
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v33 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)v30 - v9;
  result = _swiftEmptyArrayStorage;
  v39 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = *(_QWORD *)(v8 + 72);
    v30[1] = v2;
    v31 = v13;
    v15 = a1 + v13;
    v16 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v16 = a2;
    v35 = v16;
    v36 = a2 & 0xC000000000000001;
    v34 = (char *)&type metadata for Swift.AnyObject + 8;
    v32 = a2;
    while (1)
    {
      v17 = sub_10002B1E8(v15, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v18 = TTRRemindersListViewModel.Item.reminderObjectID.getter(v17);
      if (!v18)
        goto LABEL_6;
      v19 = (void *)v18;
      if (v36)
      {
        v20 = __CocoaDictionary.lookup(_:)(v18, v35);
        if (!v20)
          goto LABEL_5;
        v21 = v20;
        v37 = v20;
        v22 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
        swift_unknownObjectRetain(v21);
        swift_dynamicCast(&v38, &v37, v34, v22, 7);
        v23 = v38;
        swift_unknownObjectRelease(v21);
        if (!v23)
          goto LABEL_5;
      }
      else if (!*(_QWORD *)(a2 + 16)
             || (v24 = sub_1002AA364(v18), (v25 & 1) == 0)
             || (v23 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v24)) == 0)
      {
LABEL_5:

        goto LABEL_6;
      }
      v26 = objc_msgSend(v23, "isOverdue");

      if ((v26 & 1) != 0)
      {
        sub_10001F580((uint64_t)v10, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v27 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
        {
          sub_1003D7F78(0, v27[2] + 1, 1);
          v27 = v39;
        }
        v29 = v27[2];
        v28 = v27[3];
        if (v29 >= v28 >> 1)
        {
          sub_1003D7F78(v28 > 1, v29 + 1, 1);
          v27 = v39;
        }
        v27[2] = v29 + 1;
        sub_10001F580(v33, (uint64_t)v27 + v31 + v29 * v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        a2 = v32;
        goto LABEL_7;
      }
LABEL_6:
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_7:
      v15 += v14;
      if (!--v12)
        return v39;
    }
  }
  return result;
}

_QWORD *sub_1001BC280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, _QWORD *a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v42[24];
  _BYTE v43[32];

  v16 = (_QWORD *)v15;
  *(_QWORD *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit(v15 + 16, 0);
  *(_QWORD *)(v15 + 32) = 0x4000000000000000;
  *(_QWORD *)(v15 + 272) = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  *(_BYTE *)(v15 + 296) = 2;
  v23 = v15 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_currentShareURL;
  v24 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_fetchSuggestedSectionsPassthroughSubject;
  v26 = sub_10002A750(&qword_10064A710);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)((char *)v16 + v25) = PassthroughSubject.init()();
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_fetchSuggestedSectionsCancellable) = 0;
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID) = 0;
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle) = 0;
  *(_QWORD *)((char *)v16
            + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection) = &_swiftEmptySetSingleton;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a3;
  v16[8] = a4;
  v16[9] = a5;
  v16[10] = a6;
  v16[11] = a7;
  v16[12] = a8;
  sub_100010634((uint64_t)a9, (uint64_t)(v16 + 13));
  v16[18] = a10;
  v16[19] = a11;
  v16[20] = a12;
  v16[21] = a13;
  sub_100010634((uint64_t)a14, (uint64_t)(v16 + 22));
  sub_100010634((uint64_t)a15, (uint64_t)(v16 + 27));
  v27 = *(_QWORD *)(a2 + 8);
  v28 = type metadata accessor for TTRDeleteRemindersPresenterCapability(0);
  swift_allocObject(v28, 32, 7);
  v16[32] = TTRDeleteRemindersPresenterCapability.init(interactor:)(a1, v27);
  v29 = *(_QWORD *)(a2 + 24);
  v30 = type metadata accessor for TTRSetReminderCompletedPresenterCapability(0);
  swift_allocObject(v30, 32, 7);
  v16[33] = TTRSetReminderCompletedPresenterCapability.init(interactor:)(a1, v29);
  sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  swift_unknownObjectRetain_n(a1, 3);
  swift_unknownObjectRetain(a3);
  swift_retain(a5);
  v31 = a6;
  swift_unknownObjectRetain(a7);
  swift_unknownObjectRetain(a10);
  swift_unknownObjectRetain(a12);
  v33 = static OS_dispatch_queue.main.getter(v32);
  v34 = type metadata accessor for TTRDebouncedAction(0);
  swift_allocObject(v34, 64, 7);
  v16[35] = TTRDebouncedAction.init(interval:queue:)(v33, 2.0);
  type metadata accessor for TTRGeoLocationService(0);
  v35 = static TTRGeoLocationService.newService()();
  sub_100027F10(a15);
  sub_100027F10(a14);
  sub_100027F10(a9);
  v16[36] = v35;
  v36 = v16[35];
  swift_beginAccess(v36 + 16, v43, 1, 0);
  *(_QWORD *)(v36 + 24) = &off_1005F5208;
  swift_unknownObjectWeakAssign(v36 + 16, v16);
  v37 = v35 + direct field offset for TTRGeoLocationService.delegate;
  swift_beginAccess(v37, v42, 1, 0);
  *(_QWORD *)(v37 + 8) = &off_1005F5218;
  swift_unknownObjectWeakAssign(v37, v16);
  return v16;
}

double sub_1001BC5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[9];

  v4 = v3;
  v55 = a1;
  v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v56 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (id *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = sub_10002A750(&qword_10064A838);
  v10 = __chkstk_darwin(v66);
  v12 = (id *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __chkstk_darwin(v10);
  v60 = (uint64_t)&v52 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v52 - v16;
  v59 = *(_QWORD *)(a2 + 16);
  if (v59)
  {
    v53 = a3;
    v54 = v3;
    v58 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v57 = *(_QWORD *)(v15 + 72);
    v52 = a2;
    swift_bridgeObjectRetain(a2);
    v18 = 0;
    v19 = _swiftEmptyArrayStorage;
    v63 = v17;
    do
    {
      sub_10000735C(v58 + v57 * v18, (uint64_t)v17, &qword_10064A838);
      v20 = *(int *)(v66 + 48);
      v21 = v60;
      sub_10002B1E8((uint64_t)v17, v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v22 = *(_QWORD *)&v17[v20];
      v65 = v20;
      *(_QWORD *)(v21 + v20) = v22;
      swift_bridgeObjectRetain(v22);
      sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        v61 = v22;
        v62 = v18;
        v24 = v22 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
        v64 = *(_QWORD *)(v56 + 72);
        do
        {
          sub_10002B1E8(v24, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v25 = *(int *)(v66 + 48);
          sub_10002B1E8((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(id *)((char *)v12 + v25) = *(id *)&v17[v65];
          v26 = *v12;
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v27 = *v9;
          if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
            v19 = sub_100456B58(0, v19[2] + 1, 1, v19);
          v29 = v19[2];
          v28 = v19[3];
          if (v29 >= v28 >> 1)
            v19 = sub_100456B58((_QWORD *)(v28 > 1), v29 + 1, 1, v19);
          v19[2] = v29 + 1;
          v30 = &v19[2 * v29];
          v30[4] = v26;
          v30[5] = v27;
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v17 = v63;
          v24 += v64;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease(v61);
        v18 = v62;
      }
      else
      {
        swift_bridgeObjectRelease(v22);
      }
      ++v18;
      sub_1000073A0((uint64_t)v17, &qword_10064A838);
    }
    while (v18 != v59);
    swift_bridgeObjectRelease(v52);
    v4 = v54;
    a3 = v53;
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  v31 = v55;
  v67[0] = v55;
  v32 = sub_10002A750(&qword_100649DF0);
  v33 = sub_100023FEC(&qword_10064A830, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection<>.isSingleUncommittedReminder.getter(v32, v33) & 1) != 0
    && a3 == 1
    && *(_QWORD *)(v31 + 16)
    && (v35 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80),
        v36 = v31 + ((v35 + 32) & ~v35),
        v37 = v4[8],
        v39 = swift_getObjectType(v4[7], v38),
        (v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 320))(v36, v39, v37)) != 0))
  {
    v41 = (void *)v40;
    v42 = v4[5];
    v43 = v4[6];
    ObjectType = swift_getObjectType(v42, v34);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v37 + 632))(v67, v39, v37);
    v45 = ObjectType;
    v31 = v55;
    (*(void (**)(void *, _QWORD *, _QWORD *, uint64_t, uint64_t))(v43 + 136))(v41, v19, v67, v45, v43);
    sub_10017A154((uint64_t)v67);
    swift_bridgeObjectRelease(v19);

  }
  else
  {
    v46 = v4[6];
    v47 = swift_getObjectType(v4[5], v34);
    v48 = v4[8];
    v50 = swift_getObjectType(v4[7], v49);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v48 + 632))(v67, v50, v48);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v46 + 128))(v19, v67, v47, v46);
    swift_bridgeObjectRelease(v19);
    sub_10017A154((uint64_t)v67);
  }
  return sub_1001A57E4(v31);
}

void sub_1001BCA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  v5 = a3;
  v6 = a1;
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    sub_1003D82CC(0, v7, 0);
    v9 = *(_QWORD *)(sub_10002A750(&qword_10064A828) - 8);
    v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1001AF6F4(v10, &v40);
      v12 = v40;
      v14 = v41;
      v13 = v42;
      v16 = _swiftEmptyArrayStorage[2];
      v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
      {
        v37 = v40;
        sub_1003D82CC(v15 > 1, v16 + 1, 1);
        v12 = v37;
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      v17 = &_swiftEmptyArrayStorage[4 * v16];
      *((_OWORD *)v17 + 2) = v12;
      v17[6] = v14;
      v17[7] = v13;
      v10 += v11;
      --v7;
    }
    while (v7);
    v6 = a1;
    v4 = v3;
    v5 = a3;
  }
  *(_QWORD *)&v40 = v6;
  v18 = sub_10002A750(&qword_100649DF0);
  v19 = sub_100023FEC(&qword_10064A830, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection<>.isSingleUncommittedReminder.getter(v18, v19) & 1) != 0
    && v5 == 1
    && *(_QWORD *)(v6 + 16)
    && (v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80),
        v22 = v6 + ((v21 + 32) & ~v21),
        v23 = v4[8],
        v25 = swift_getObjectType(v4[7], v24),
        (v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 320))(v22, v25, v23)) != 0))
  {
    v27 = (void *)v26;
    v29 = v4[5];
    v28 = v4[6];
    ObjectType = swift_getObjectType(v29, v20);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 632))(&v40, v25, v23);
    (*(void (**)(void *, _QWORD *, __int128 *, uint64_t, uint64_t))(v28 + 152))(v27, _swiftEmptyArrayStorage, &v40, ObjectType, v28);
    sub_10017A154((uint64_t)&v40);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

  }
  else
  {
    v31 = v4[6];
    v32 = swift_getObjectType(v4[5], v20);
    v33 = v4[7];
    v34 = v4[8];
    v36 = swift_getObjectType(v33, v35);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v34 + 632))(&v40, v36, v34);
    (*(void (**)(_QWORD *, __int128 *, uint64_t, uint64_t))(v31 + 144))(_swiftEmptyArrayStorage, &v40, v32, v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_10017A154((uint64_t)&v40);
  }
}

uint64_t sub_1001BCCD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t (*sub_1001BCCFC())(char *, uint64_t, uint64_t)
{
  uint64_t v0;
  uint64_t (**v1)(char *, uint64_t, uint64_t);
  uint64_t (*result)(char *, uint64_t, uint64_t);

  v1 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v0 + 16);
  result = sub_10041CE00(*(_QWORD *)(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(_QWORD *)(v0 + 48));
  *v1 = result;
  return result;
}

uint64_t sub_1001BCD2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BCD3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BCD70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  v6 = *(_QWORD *)(v3 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 40), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 80))(v4, v5, ObjectType, v6);
}

uint64_t sub_1001BCDC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BCDD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v2, v3, v4);
}

uint64_t sub_1001BCE18(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRReminderListCompletionBehavior - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001BCE54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BCE80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 40), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 504))(v4, ObjectType, v5);
}

uint64_t sub_1001BCEC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BCED4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >= 2)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  }
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001BCF20(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B1F4C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1001BCF30()
{
  uint64_t v0;

  return sub_1001B378C(v0);
}

uint64_t sub_1001BCF38()
{
  return sub_1001BCF6C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1001BCF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001B2310(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD **)(v3 + 24), *(char **)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1001BCF58()
{
  return sub_1001BCF6C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1001BCF6C(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_release(v2[2]);
  a1(v2[3]);
  swift_release(v2[4]);
  a2(v2[5]);
  return swift_deallocObject(v2, 48, 7);
}

double sub_1001BCFC0(int *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001B2AC0(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1001BCFCC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001BD000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001B3068(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001BD010(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  id v18;
  unint64_t v19;
  char v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  id v42;
  unsigned int isUniquelyReferenced_nonNull_native;
  void *v44;
  void *v45;
  uint64_t v46;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;

  if (!((unint64_t)a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v6)
      goto LABEL_3;
    goto LABEL_45;
  }
LABEL_41:
  if (a2 < 0)
    v39 = a2;
  else
    v39 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v6 = _CocoaArrayWrapper.endIndex.getter(v39);
  if (!v6)
  {
LABEL_45:
    swift_bridgeObjectRelease(a2);
    return (uint64_t)a1;
  }
LABEL_3:
  v46 = a4;
  v7 = a2 & 0xC000000000000001;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (a3 < 0)
    v8 = a3;
  v50 = v8;
  v9 = 0;
  if (!v7)
  {
LABEL_11:
    v10 = *(id *)(a2 + 8 * v9 + 32);
    goto LABEL_12;
  }
  while (1)
  {
    while (1)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a2);
LABEL_12:
      v11 = v10;
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_41;
      }
      if ((a3 & 0xC000000000000001) != 0)
        break;
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_8;
      a4 = a3;
      v16 = sub_1002AA364((uint64_t)v10);
      if ((v17 & 1) == 0)
      {
LABEL_7:

        goto LABEL_8;
      }
      v15 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v16);

      if (v15)
        goto LABEL_20;
LABEL_8:

      ++v9;
      if (v12 == v6)
        goto LABEL_45;
      if (!v7)
        goto LABEL_11;
    }
    v13 = __CocoaDictionary.lookup(_:)(v10, v50);
    if (!v13)
      goto LABEL_7;
    a4 = v13;
    v52 = v13;
    v14 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    swift_unknownObjectRetain(a4);
    swift_dynamicCast(&v53, &v52, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
    v15 = v53;
    swift_unknownObjectRelease(a4);

    if (!v15)
      goto LABEL_8;
LABEL_20:
    if (*(_QWORD *)(v46 + 16))
    {
      v18 = v11;
      v19 = sub_1002AA364((uint64_t)v18);
      if ((v20 & 1) != 0)
      {
        v21 = *(void **)(*(_QWORD *)(v46 + 56) + 8 * v19);
        v22 = v21;
      }
      else
      {
        v21 = 0;
      }

    }
    else
    {
      v21 = 0;
    }
    v23 = objc_msgSend(v15, "remObjectID");
    v44 = v21;
    v42 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    v53 = a1;
    v45 = v23;
    v25 = sub_1002AA364((uint64_t)v23);
    v26 = a1[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    if (a1[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v49 = v24;
        sub_1002B11D4();
        v24 = v49;
      }
    }
    else
    {
      v48 = v24;
      sub_10045C014(v28, isUniquelyReferenced_nonNull_native);
      v29 = sub_1002AA364((uint64_t)v45);
      v31 = v30 & 1;
      v24 = v48;
      if ((v48 & 1) != v31)
        goto LABEL_48;
      v25 = v29;
    }
    v32 = v53;
    a4 = 8 * v25;
    a1 = v53;
    if ((v24 & 1) != 0)
    {
      v33 = v53[7];

      *(_QWORD *)(v33 + a4) = v44;
      v34 = v45;
    }
    else
    {
      v53[(v25 >> 6) + 8] |= 1 << v25;
      v34 = v45;
      *(_QWORD *)(v32[6] + a4) = v45;
      *(_QWORD *)(v32[7] + a4) = v44;
      v35 = v32[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_47;
      v32[2] = v37;
      v38 = v45;
    }

    swift_bridgeObjectRelease(0x8000000000000000);
    if (v12 == v6)
      goto LABEL_45;
    v9 = v12;
    if (!v7)
      goto LABEL_11;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  v41 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v41);
  __break(1u);
  return result;
}

uint64_t sub_1001BD3B4(uint64_t result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result != 1)
    return sub_1001BD3C4(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t sub_1001BD3C4(uint64_t result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  id v12;
  id v13;

  if (result)
  {
    v11 = result;
    v12 = a3;
    v13 = a5;
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(v11);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

void sub_1001BD418(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 != 1)
    sub_10017A18C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1001BD428()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BD44C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1001B6E8C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1001BD464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BD4AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 144))(v2, v3, v4);
}

uint64_t sub_1001BD4F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 136))(v2, v3, v4);
}

uint64_t sub_1001BD53C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return TTRRemindersListAttributeEditing.setDueDate(_:)(v2, v3, v4);
}

_QWORD *sub_1001BD584(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B4148(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1001BD58C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, v3, v4);
}

uint64_t sub_1001BD5D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = a1[3];
  v5 = a1[4];
  sub_10001413C(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v5 + 80))(v2, v3, 0, 0, v4, v5);
}

uint64_t sub_1001BD62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  if (qword_10063D420 != -1)
    swift_once(&qword_10063D420, sub_1001AF584);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_10064A550);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRRemindersListPresenterCapability completed reminders cleanup action", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
  if (result)
  {
    v13 = result;
    v14 = v12;
    v15 = swift_getObjectType(result, v12);
    (*(void (**)(uint64_t, uint64_t))(v14 + 48))(v15, v14);
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

void sub_1001BD744(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  sub_1001B7968(a1, v2[2], v2[3], v2[4], a2);
}

void sub_1001BD760(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  sub_1001B85CC(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1001BD778(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
    case 3:
      goto LABEL_4;
    case 2:
      a2 = a3;
LABEL_3:
      swift_bridgeObjectRetain(result);
      result = a2;
LABEL_4:
      result = swift_bridgeObjectRetain(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BD7CC()
{
  uint64_t v0;

  return sub_1001B8730(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001BD7D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BD800()
{
  uint64_t v0;

  return sub_1001B8CE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001BD80C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001BD81C(id a1, unsigned __int8 a2)
{
  if (a2 <= 0xFDu)

}

id sub_1001BD830(id result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu)
    return result;
  return result;
}

uint64_t sub_1001BD844(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B40CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_1001BD84C(_QWORD *a1, void **a2)
{
  uint64_t v2;

  return sub_1001B51A4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001BD864(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v4);
}

double sub_1001BD8AC@<D0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1001B53C8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1001BD8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10038058C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1001BD8DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
}

uint64_t sub_1001BD924(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 1)
    return sub_100179CA0(result, a2, a3, a4);
  return result;
}

uint64_t sub_1001BD940(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(void **)(a1 + 104);
  v20 = *(void **)(a1 + 120);
  v21 = *(void **)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 160);
  v16 = *(_QWORD *)(a1 + 152);
  v14 = *(_QWORD *)(a1 + 168);
  v12 = *(_OWORD *)(a1 + 192);
  v13 = *(_OWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 208);
  v10 = *(void **)(a1 + 216);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  sub_100180D04(v21, v20, v19, v18, v17, v16, v15, v14, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1001BDA40(uint64_t a1)
{
  sub_1001BDAB0(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(void **)(a1 + 104), *(void **)(a1 + 112), *(void **)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216));
  return a1;
}

void sub_1001BDAB0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a1 != (void *)1)
    sub_100180ADC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28);
}

void *sub_1001BDB38(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_1001BDB68()
{
  return sub_1001BDBB0();
}

void sub_1001BDB7C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t sub_1001BDBB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1001BDBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_release();
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1001BDFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  sub_1001B5F24(a1, a2, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), v3 + ((v7 + 48) & ~v7));
}

uint64_t sub_1001BE024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001BE3FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char *);
  char *v5;
  void *v6;
  NSString v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  v2 = v0[2];
  v3 = v0[5];
  v4 = (uint64_t (*)(char *))v0[6];
  v5 = (char *)v0 + ((v1 + 64) & ~v1);
  v6 = *(void **)(v2 + 272);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setObject:forKey:", v7, v3);

  return v4(v5);
}

uint64_t sub_1001BE480@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1001B5BDC(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

uint64_t sub_1001BE4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;

  return sub_1001B5580(a1, a2, a3, a4, v5[2], v5[3], v5[4], a5);
}

id sub_1001BE4B8(id result, void *a2, char a3)
{
  id v3;
  id v4;

  if (a3 != 2)
  {
    if (a3 == 1)
    {
      v4 = a2;
      swift_retain(result);
    }
    else
    {
      if (a3)
        return result;
      v4 = a2;
      v3 = result;
    }
    result = v4;
  }
  return result;
}

void sub_1001BE50C(void *a1, void *a2, char a3)
{
  id v3;

  if (a3 != 2)
  {
    if (a3 == 1)
    {
      v3 = a2;
      swift_release(a1);
    }
    else
    {
      if (a3)
        return;
      v3 = a2;

    }
    a1 = v3;
  }

}

uint64_t sub_1001BE564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_1001B5948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1001BE5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001BE984()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1001BE9C4(uint64_t a1)
{
  return sub_1001B6F80(a1) & 1;
}

uint64_t sub_1001BE9E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  }
  return swift_deallocObject(v0, 128, 7);
}

double sub_1001BEA40(uint64_t a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1001B6A2C(a1, v1).n128_u64[0];
  return result;
}

uint64_t sub_1001BEA58()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001BEA8C(uint64_t a1)
{
  uint64_t v1;

  sub_1001B6BA0(a1, *(_QWORD **)(v1 + 16), *(void (**)(_OWORD *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40));
}

uint64_t sub_1001BEAA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1001BEB04(void **a1)
{
  uint64_t v1;

  return sub_1001B6930(a1, (_OWORD *)(v1 + 16));
}

uint64_t getEnumTagSinglePayload for TTRReminderSwipeAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRReminderSwipeAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1001BEBF8 + 4 * byte_1005279E6[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1001BEC2C + 4 * byte_1005279E1[v4]))();
}

uint64_t sub_1001BEC2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BEC34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001BEC3CLL);
  return result;
}

uint64_t sub_1001BEC48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001BEC50);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1001BEC54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001BEC5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderSwipeAction()
{
  return &type metadata for TTRReminderSwipeAction;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001BECBC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1001BECBC(id result, char a2)
{
  if (a2 == 1)
    return (id)swift_bridgeObjectRetain(result);
  if (!a2)
    return result;
  return result;
}

void destroy for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t a1)
{
  sub_100180954(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001BECBC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_100180954(v5, v6);
  return a1;
}

uint64_t assignWithTake for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_100180954(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001BEE00(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1001BEE18(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections()
{
  return &type metadata for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration.InitialSections;
}

unint64_t sub_1001BEE44()
{
  unint64_t result;

  result = qword_10064A8C8;
  if (!qword_10064A8C8)
  {
    result = swift_getWitnessTable(&unk_100527C4C, &type metadata for TTRReminderSwipeAction);
    atomic_store(result, (unint64_t *)&qword_10064A8C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly()
{
  return &type metadata for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly;
}

double destroy for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_100180954(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (*(_QWORD *)(a1 + 56))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  if (*(_QWORD *)(a1 + 72))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = (void *)a2[2];
  v7 = *((_BYTE *)a2 + 24);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_1001BECBC(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = a2[7];
  *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
  *(_BYTE *)(a1 + 27) = *((_BYTE *)a2 + 27);
  v9 = a2[5];
  v10 = a2[6];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain();
  if (v8)
  {
    v11 = a2[8];
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  }
  v12 = a2[9];
  if (v12)
  {
    v13 = a2[10];
    *(_QWORD *)(a1 + 72) = v12;
    *(_QWORD *)(a1 + 80) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
  }
  return a1;
}

uint64_t *assignWithCopy for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a2[2];
  v9 = *((_BYTE *)a2 + 24);
  sub_1001BECBC(v8, v9);
  v10 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v11 = *((_BYTE *)a1 + 24);
  *((_BYTE *)a1 + 24) = v9;
  sub_100180954(v10, v11);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  *((_BYTE *)a1 + 27) = *((_BYTE *)a2 + 27);
  a1[4] = a2[4];
  v12 = a2[6];
  a1[5] = a2[5];
  a1[6] = v12;
  swift_retain();
  swift_release();
  v13 = a2[7];
  if (a1[7])
  {
    if (v13)
    {
      v14 = a2[8];
      a1[7] = v13;
      a1[8] = v14;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = a2[8];
    a1[7] = v13;
    a1[8] = v15;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
LABEL_8:
  v16 = a2[9];
  if (!a1[9])
  {
    if (v16)
    {
      v18 = a2[10];
      a1[9] = v16;
      a1[10] = v18;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_14;
  }
  v17 = a2[10];
  a1[9] = v16;
  a1[10] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_100180954(v6, v7);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  v11 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v11)
    {
      v13 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v11;
      *(_QWORD *)(a1 + 80) = v13;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration()
{
  return &type metadata for TTRRemindersListPresenterCapability.MoveToExistingSectionMenuAssembly.MenuConfiguration;
}

uint64_t sub_1001BF31C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001B5390(a1);
}

double sub_1001BF364(_QWORD *a1, void **a2)
{
  return sub_1001BD84C(a1, a2);
}

uint64_t sub_1001BF378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064A8D0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064A8D0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1001BF4F4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v12;

  v12.receiver = v2;
  v12.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v12, "viewDidLoad");
  v3 = objc_msgSend(v2, "navigationItem");
  v4._object = (void *)0x800000010056A870;
  v5._countAndFlagsBits = 0x737265746C6946;
  v5._object = (void *)0xE700000000000000;
  v4._countAndFlagsBits = 0xD00000000000003ELL;
  object = TTRLocalizedString(_:comment:)(v5, v4)._object;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  v8 = objc_msgSend(v2, "navigationItem");
  v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v2, "cancelButtonAction:");
  objc_msgSend(v8, "setLeftBarButtonItem:", v9);

  v10 = objc_msgSend(v2, "navigationItem");
  v11 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v2, "doneButtonAction:");
  objc_msgSend(v10, "setRightBarButtonItem:", v11);

  sub_1001BF680();
}

void sub_1001BF680()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  id v9;
  char *v10;
  char *v11;
  void *v12;
  char *v13;
  _QWORD v14[4];
  id v15;
  _QWORD v16[5];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController])
  {
    v2 = v0;
    v15 = objc_msgSend(v0, "view");
    if (v15)
    {
      v3 = objc_opt_self(UITableView);
      v4 = swift_dynamicCastObjCClass(v15, v3);
      if (v4)
      {
        v5 = (void *)v4;
        v6 = sub_1001C94BC();
        v7 = v15;
        v8 = sub_1002DEA58(v6);
        swift_bridgeObjectRelease(v6);
        v16[3] = sub_100005ED8(0, (unint64_t *)&qword_100646410, UITableView_ptr);
        v16[4] = &protocol witness table for UITableView;
        v16[0] = v5;
        v9 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController(0));
        v10 = (char *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)(v16, v8, 6, 1);
        v11 = &v10[direct field offset for TTRITableDataController.customSectionSpacing];
        swift_beginAccess(&v10[direct field offset for TTRITableDataController.customSectionSpacing], v16, 1, 0);
        *(_QWORD *)v11 = 0x4030000000000000;
        v11[8] = 0;
        v12 = *(void **)&v2[v1];
        *(_QWORD *)&v2[v1] = v10;
        v13 = v10;

        objc_msgSend(v5, "setDataSource:", v13);
        __chkstk_darwin(objc_msgSend(v5, "setDelegate:", v13));
        v14[2] = v2;
        TTRITableDataController.performBatchUpdates(by:updates:)(2, sub_1001CD5F4, v14);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_1001BF9FC(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t result;
  objc_super v8;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8.receiver = v3;
  v8.super_class = ObjectType;
  objc_msgSendSuper2(&v8, "viewWillDisappear:", a1 & 1);
  if (qword_10063D428 != -1)
    swift_once(&qword_10063D428, sub_1001BF378);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_10064A8D0);
  sub_1002EB4BC(0xD000000000000012, 0x800000010056A850);
  UIViewController.endFirstResponderEditing()();
  objc_msgSend(v3, "resignFirstResponder");
  if (objc_msgSend(v3, "isMovingFromParentViewController"))
    sub_1002E5FA8();
  result = TTRKeyboardAvoidance<>.stopAvoidingKeyboard()(ObjectType, &off_1005F5A20);
  *((_BYTE *)v3
  + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_ttrAccessibilityShouldAnnounceOptionChanges) = 0;
  return result;
}

unint64_t sub_1001BFB48@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001BFB70(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1001BFB7C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001BFBAC + 4 * byte_100527C80[*v0]))(0x7367617468736168, 0xE800000000000000);
}

uint64_t sub_1001BFBAC()
{
  return 1702125924;
}

uint64_t sub_1001BFBBC()
{
  return 1701669236;
}

uint64_t sub_1001BFBCC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1001BFBE0()
{
  return 0x64656767616C66;
}

uint64_t sub_1001BFBF8()
{
  return 0x797469726F697270;
}

uint64_t sub_1001BFC0C()
{
  return 0x737473696CLL;
}

BOOL sub_1001BFC20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1001BFC34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1001BFC48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1001BFC5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void sub_1001BFC70(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAA58;
}

void *sub_1001BFC80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters);
  if (v1)
  {
    v2 = *(void **)(v0
                  + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters);
  }
  else
  {
    v2 = &_swiftEmptySetSingleton;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(0);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_1001BFCCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _QWORD v17[27];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v7 = v2;
    v18 = 0u;
    v19 = 0;
    v20 = 0x1FFFFFFFELL;
    v21 = 0u;
    v22 = 0u;
    v23 = 0;
    TTRIDetailCellState.init(icon:title:titleTextColor:subtitle:detailText:detailTextColor:shortenedDetailText:checkmarkState:accessibilityLabel:accessibilityValue:accessibilityHint:accessibilityDifferentiateWithoutColorsIcon:)(v17, &v18, 0, 0xE000000000000000, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
      0);
    v8 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailCellContent(0));
    v9 = (_QWORD *)TTRIDetailCellContent.init(state:)(v17);
    v10 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v7);
    v11 = (_QWORD *)((char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x108));
    swift_beginAccess(v11, v16, 1, 0);
    v12 = *v11;
    v13 = v11[1];
    *v11 = a2;
    v11[1] = v10;
    sub_1000381B8(v12, v13);
    v14 = sub_10002A750(&qword_10064AB20);
    swift_allocObject(v14, 73, 7);
    v5 = TTRITableCell.init(_:)(v9);
    *(_QWORD *)(v7 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1001BFE48(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v5 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for TTRICalendarPickerCellContentState(0, v7);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *a1;
  if (*(_QWORD *)(v5 + *a1))
  {
    v14 = *(_QWORD *)(v5 + *a1);
  }
  else
  {
    Date.init()(0);
    TTRICalendarPickerCellContentState.init(date:)(v9);
    v15 = objc_allocWithZone((Class)type metadata accessor for TTRICalendarPickerCellContent(0));
    v16 = TTRICalendarPickerCellContent.init(state:)(v12);
    v17 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v5);
    v18 = (uint64_t *)(v16 + direct field offset for TTRICalendarPickerCellContent.stateChangeBlock);
    swift_beginAccess(v16 + direct field offset for TTRICalendarPickerCellContent.stateChangeBlock, v24, 1, 0);
    v19 = *v18;
    v20 = v18[1];
    *v18 = a2;
    v18[1] = v17;
    sub_1000381B8(v19, v20);
    v21 = sub_10002A750(&qword_10064AB18);
    swift_allocObject(v21, 73, 7);
    v14 = TTRITableCell.init(_:)(v16);
    *(_QWORD *)(v5 + v13) = v14;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v14;
}

uint64_t sub_1001BFFD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];
  _OWORD v25[4];
  char v26;

  v5 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for TTRITitledDatePickerCellContentState(0, v7);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *a1;
  if (*(_QWORD *)(v5 + *a1))
  {
    v14 = *(_QWORD *)(v5 + *a1);
  }
  else
  {
    memset(v25, 0, sizeof(v25));
    v26 = 0x80;
    Date.init()(0);
    TTRITitledDatePickerCellContentState.init(icon:title:date:datePickerMode:)(v25, 0, 0xE000000000000000, v9, 1);
    v15 = objc_allocWithZone((Class)type metadata accessor for TTRITitledDatePickerCellContent(0));
    v16 = TTRITitledDatePickerCellContent.init(state:)(v12);
    v17 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v5);
    v18 = (uint64_t *)(v16 + direct field offset for TTRITitledDatePickerCellContent.stateChangeBlock);
    swift_beginAccess(v16 + direct field offset for TTRITitledDatePickerCellContent.stateChangeBlock, v24, 1, 0);
    v19 = *v18;
    v20 = v18[1];
    *v18 = a2;
    v18[1] = v17;
    sub_1000381B8(v19, v20);
    v21 = sub_10002A750(&qword_10064AB10);
    swift_allocObject(v21, 73, 7);
    v14 = TTRITableCell.init(_:)(v16);
    *(_QWORD *)(v5 + v13) = v14;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v14;
}

uint64_t sub_1001C017C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];
  _QWORD v17[10];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___includePastDueRemindersCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___includePastDueRemindersCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___includePastDueRemindersCell);
  }
  else
  {
    v3 = v0;
    v4._countAndFlagsBits = 0xD000000000000037;
    v5._object = (void *)0x8000000100569AD0;
    v4._object = (void *)0x8000000100569AF0;
    v5._countAndFlagsBits = 0xD00000000000001ALL;
    v6 = TTRLocalizedString(_:comment:)(v5, v4);
    WORD2(v15) = 0;
    LODWORD(v15) = 0;
    TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)(v17, 1, 0, 0, v6._countAndFlagsBits, v6._object, 0, 0, 0, 0, v15);
    v7 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent(0));
    v8 = TTRIToggleCellContent.init(state:)(v17);
    v9 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v3);
    v10 = (uint64_t *)(v8 + direct field offset for TTRIToggleCellContent.stateChangeBlock);
    swift_beginAccess(v8 + direct field offset for TTRIToggleCellContent.stateChangeBlock, v16, 1, 0);
    v11 = *v10;
    v12 = v10[1];
    *v10 = (uint64_t)sub_1001CC2B8;
    v10[1] = v9;
    sub_1000381B8(v11, v12);
    v13 = sub_10002A750((uint64_t *)&unk_10064BD30);
    swift_allocObject(v13, 73, 7);
    v2 = TTRITableCell.init(_:)(v8);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C02F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _QWORD v13[6];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationQuickPicksCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationQuickPicksCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationQuickPicksCell);
  }
  else
  {
    v3 = v0;
    TTRILocationQuickPickersCellContentState.init(items:selected:ttriAccessiblityProximity:ttriAccessibilityCurrentLocation:)(v13, _swiftEmptyArrayStorage, 6, 0, 1, 0, 0);
    v4 = objc_allocWithZone((Class)type metadata accessor for TTRILocationQuickPickersCellContent(0));
    v5 = TTRILocationQuickPickersCellContent.init(state:)(v13);
    v6 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v3);
    v7 = (uint64_t *)(v5 + direct field offset for TTRILocationQuickPickersCellContent.action);
    swift_beginAccess(v5 + direct field offset for TTRILocationQuickPickersCellContent.action, v12, 1, 0);
    v8 = *v7;
    v9 = v7[1];
    *v7 = (uint64_t)sub_1001CC5A8;
    v7[1] = v6;
    sub_1000381B8(v8, v9);
    v10 = sub_10002A750(&qword_10064AB58);
    swift_allocObject(v10, 73, 7);
    v2 = TTRITableCell.init(_:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C042C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationDetailCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationDetailCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationDetailCell);
  }
  else
  {
    v3 = v0;
    v4 = objc_allocWithZone((Class)type metadata accessor for TTRILocationCellContent());
    v5 = TTRILocationCellContent.init(state:)(0, 0xE000000000000000, 0, 0);
    v6 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v3);
    v7 = (uint64_t *)(v5 + direct field offset for TTRILocationCellContent.action);
    swift_beginAccess(v5 + direct field offset for TTRILocationCellContent.action, v12, 1, 0);
    v8 = *v7;
    v9 = v7[1];
    *v7 = (uint64_t)sub_1001CC5A0;
    v7[1] = v6;
    sub_1000381B8(v8, v9);
    v10 = sub_10002A750(&qword_10064AB50);
    swift_allocObject(v10, 73, 7);
    v2 = TTRITableCell.init(_:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C0544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _QWORD v13[8];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[25];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listCell;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listCell))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listCell);
  }
  else
  {
    v3 = v0;
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    v13[2] = 0;
    v13[3] = 0xE000000000000000;
    memset(&v13[4], 0, 24);
    v13[7] = 1;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    memset(v17, 0, sizeof(v17));
    v4 = objc_allocWithZone((Class)type metadata accessor for TTRIListCellContent());
    v5 = (_QWORD *)TTRIListCellContent.init(state:)(v13);
    v6 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v3);
    v7 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x108));
    swift_beginAccess(v7, v12, 1, 0);
    v8 = *v7;
    v9 = v7[1];
    *v7 = (uint64_t)sub_1001CC830;
    v7[1] = v6;
    sub_1000381B8(v8, v9);
    v10 = sub_10002A750(&qword_10064AB80);
    swift_allocObject(v10, 73, 7);
    v2 = TTRITableCell.init(_:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C068C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _QWORD v15[8];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[25];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listPopoverCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listPopoverCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listPopoverCell);
  }
  else
  {
    v3 = v0;
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    v15[2] = 0;
    v15[3] = 0xE000000000000000;
    memset(&v15[4], 0, 24);
    v15[7] = 1;
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    memset(v19, 0, sizeof(v19));
    v4 = objc_allocWithZone((Class)type metadata accessor for TTRIListCellContent());
    v5 = (_QWORD *)TTRIListCellContent.init(state:)(v15);
    v6 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v3);
    v7 = swift_allocObject(&unk_1005F5B48, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v5);
    v8 = swift_allocObject(&unk_1005F5B70, 32, 7);
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x108));
    swift_beginAccess(v9, v14, 1, 0);
    v10 = *v9;
    v11 = v9[1];
    *v9 = (uint64_t)sub_1001CC828;
    v9[1] = v8;
    sub_1000381B8(v10, v11);
    v12 = sub_10002A750(&qword_10064AB80);
    swift_allocObject(v12, 73, 7);
    v2 = TTRITableCell.init(_:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C0814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[7];

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagToggleShowMoreCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagToggleShowMoreCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagToggleShowMoreCell);
  }
  else
  {
    v3 = v0;
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = 1;
    v13[5] = 0;
    v13[6] = 0;
    v4 = objc_allocWithZone((Class)type metadata accessor for TTRIActionCellContent());
    v5 = (_QWORD *)TTRIActionCellContent.init(state:)(v13);
    v6 = swift_allocObject(&unk_1005F5A80, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v3);
    v7 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x108));
    swift_beginAccess(v7, &v12, 1, 0);
    v8 = *v7;
    v9 = v7[1];
    *v7 = (uint64_t)sub_1001CB63C;
    v7[1] = v6;
    sub_1000381B8(v8, v9);
    v10 = sub_10002A750(&qword_10064AAD0);
    swift_allocObject(v10, 73, 7);
    v2 = TTRITableCell.init(_:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001C0944()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v0 = sub_1001BFC80();
  v1 = v0[2];
  swift_bridgeObjectRelease(v0);
  if (v1)
  {
    v2 = 0xD00000000000001FLL;
    v3 = 0x8000000100563270;
    v4 = 0x8000000100563290;
    v5 = 0x694620726568744FLL;
    v6 = 0xED0000737265746CLL;
    v7 = 0xD000000000000019;
  }
  else
  {
    v2 = 0xD00000000000002ALL;
    v7 = 0xD00000000000002CLL;
    v3 = 0x8000000100563380;
    v4 = 0x80000001005633B0;
    v5 = 0x46207463656C6553;
    v6 = 0xEE00737265746C69;
  }
  return TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v2, *(Swift::String *)&v5, *(Swift::String *)&v7)._countAndFlagsBits;
}

uint64_t sub_1001C0A0C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v12;

  v1 = OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersGroup;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersGroup])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersGroup];
  }
  else
  {
    v3 = sub_1001C0B38();
    swift_bridgeObjectRetain(v3);
    v5 = sub_1002AC4D0(v4);
    swift_bridgeObjectRelease(v3);
    v12 = v5;
    sub_1001CA884((uint64_t *)&v12);
    swift_bridgeObjectRelease(v3);
    v6 = (uint64_t)v12;
    v7 = v0;
    v8 = sub_1001CB19C(v6);
    swift_release();

    v10 = type metadata accessor for TTRITableGroup(0, v9);
    v2 = swift_allocObject(v10, 97, 7);
    *(_QWORD *)(v2 + 16) = 0;
    *(_BYTE *)(v2 + 24) = 1;
    *(_QWORD *)(v2 + 40) = 0;
    swift_unknownObjectWeakInit(v2 + 32, 0);
    *(_QWORD *)(v2 + 88) = 0;
    *(_OWORD *)(v2 + 72) = 0u;
    *(_OWORD *)(v2 + 56) = 0u;
    *(_BYTE *)(v2 + 96) = 2;
    *(_QWORD *)(v2 + 48) = v8;
    *(_QWORD *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1001C0B38()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;

  v0 = sub_1003E7FF8((uint64_t)&off_1005EAA58);
  v1 = sub_1001BFC80();
  v2 = v1;
  if (v1[2] <= *(_QWORD *)(v0 + 16) >> 3)
  {
    sub_1000F707C((uint64_t)v1);
    swift_bridgeObjectRelease(v2);
    return (void *)v0;
  }
  else
  {
    v3 = sub_1001205D4((uint64_t)v1, v0);
    swift_bridgeObjectRelease(v2);
    return v3;
  }
}

void sub_1001C0BC4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001C0BE8()
{
  return sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagOptionsCell, sub_1001C5F98);
}

uint64_t sub_1001C0C84(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[5];
  _OWORD v17[5];

  v5 = *a1;
  v6 = *(_QWORD *)(v4 + *a1);
  if (v6)
  {
    v7 = v6;
  }
  else
  {
    v11 = v4;
    memset(v17, 0, 73);
    memset(v16, 0, 73);
    v12 = sub_10002A750(&qword_10064AAE0);
    v13 = swift_allocObject(v12, 48, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100520250;
    *(_QWORD *)(v13 + 32) = sub_1001C0D80(a2, a3);
    *(_QWORD *)(v13 + 40) = a4;
    v14 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v14, 217, 7);
    v7 = TTRITableSection.init(header:footer:items:)(v17, v16, v13);
    *(_QWORD *)(v11 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1001C0D80(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    v6 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    swift_retain(v5);
    swift_release(v6);
    v4 = 0;
  }
  swift_retain(v4);
  return v5;
}

uint64_t sub_1001C0DE0(unsigned __int8 a1)
{
  int v2;
  void *v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[24];
  uint64_t v31[4];

  v2 = a1;
  v3 = sub_1001BFC80();
  v4 = sub_10037C230(a1, (uint64_t)v3);
  swift_bridgeObjectRelease(v3);
  v5 = sub_1001C0B38();
  v6 = v5;
  if (v2 == 2)
  {
    swift_bridgeObjectRetain(v5);
    v8 = sub_1002AC4D0(v7);
    swift_bridgeObjectRelease(v6);
    v31[0] = (uint64_t)v8;
    sub_1001CA884(v31);
    swift_bridgeObjectRelease(v6);
    v9 = sub_100315A0C(2u, v31[0]);
    v11 = v10;
    swift_release();
    if ((v11 & 1) != 0)
      v12 = 0;
    else
      v12 = v9;
    v13 = sub_1001C0A0C();
    swift_beginAccess(v13 + 48, v31, 0, 0);
    v14 = *(_QWORD *)(v13 + 48);
    swift_bridgeObjectRetain(v14);
    swift_release();
    v15 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRelease(v14);
    if (v12 <= 0)
    {
      if (!v4)
        return 0;
    }
    else
    {
      if (v15 >= v12)
        result = v12;
      else
        result = v15;
      if (!v4)
        return result;
    }
    v27 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup, (uint64_t (*)(uint64_t))sub_1001CBEE0);
    swift_beginAccess(v27 + 48, v30, 0, 0);
    v28 = *(_QWORD *)(v27 + 48);
    swift_bridgeObjectRetain(v28);
    swift_release();
    v29 = *(_QWORD *)(v28 + 16);
    swift_bridgeObjectRelease(v28);
    return v29 - 1;
  }
  swift_bridgeObjectRetain(v5);
  v18 = sub_1002AC4D0(v17);
  swift_bridgeObjectRelease(v6);
  v31[0] = (uint64_t)v18;
  sub_1001CA884(v31);
  swift_bridgeObjectRelease(v6);
  v19 = sub_100315A0C(a1, v31[0]);
  v21 = v20;
  swift_release();
  v22 = v19 & ~(v19 >> 63);
  v23 = sub_1001C0A0C();
  swift_beginAccess(v23 + 48, v31, 0, 0);
  v24 = *(_QWORD *)(v23 + 48);
  swift_bridgeObjectRetain(v24);
  swift_release();
  v25 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRelease(v24);
  if ((v21 & 1) != 0)
    v26 = 0;
  else
    v26 = v22;
  if (v25 < v26)
    v26 = v25;
  if (v4)
    return 0;
  else
    return v26;
}

void sub_1001C1008(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6[8];
  void *v7;

  v2 = v1;
  v4 = sub_1001C0B38();
  sub_10037C230(a1, (uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  v7 = sub_1001BFC80();
  sub_1004823C4(v6, a1);
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters) = v7;
  swift_bridgeObjectRelease(v5);
  __asm { BR              X10 }
}

uint64_t sub_1001C10A4()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _DWORD *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];

  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateSection, (uint64_t (*)(uint64_t))sub_1001CC378);
  v2 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup, (uint64_t (*)(uint64_t))sub_1001CBEE0);
  v17 = 0u;
  memset(v18, 0, sizeof(v18));
  v15 = 0u;
  v16 = 0u;
  ((void (*)(__int128 *))TTRITableSection.header.setter)(&v15);
  v17 = 0u;
  memset(v18, 0, sizeof(v18));
  v15 = 0u;
  v16 = 0u;
  TTRITableSection.footer.setter(&v15);
  sub_1001C0BC4(v0);
  v4 = v3;
  v6 = v5;
  v7 = sub_1001C0DE0(v0);
  if ((v1 & 1) != 0)
  {
    v8 = v7;
    sub_1001C1498();
    if (qword_10063D428 != -1)
      swift_once(&qword_10063D428, sub_1001BF378);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_10064A8D0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (_DWORD *)swift_slowAlloc(22, -1);
      *(_QWORD *)&v15 = swift_slowAlloc(32, -1);
      *v13 = 136315394;
      __asm { BR              X10 }
    }

    sub_1001C0A0C();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))TTRITableGroup.move(_:to:at:))(v4, v6, v2, v8);
    swift_release();
    swift_release();
    swift_release();
    return swift_unknownObjectRelease(v4);
  }
  else
  {
    swift_release();
    swift_release();
    return swift_unknownObjectRelease(v4);
  }
}

void sub_1001C1498()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v0 = sub_1001BFC80();
  swift_bridgeObjectRetain(v0);
  v2 = sub_1002AC4D0(v1);
  swift_bridgeObjectRelease(v0);
  v24 = v2;
  sub_1001CA884((uint64_t *)&v24);
  swift_bridgeObjectRelease(v0);
  v3 = (uint64_t)v24;
  v4 = sub_1001C0B38();
  swift_bridgeObjectRetain(v4);
  v6 = sub_1002AC4D0(v5);
  swift_bridgeObjectRelease(v4);
  v24 = v6;
  sub_1001CA884((uint64_t *)&v24);
  swift_bridgeObjectRelease(v4);
  v7 = (uint64_t)v24;
  if (qword_10063D428 != -1)
    swift_once(&qword_10063D428, sub_1001BF378);
  v8 = type metadata accessor for Logger(0);
  sub_100012DC4(v8, (uint64_t)qword_10064A8D0);
  swift_retain();
  v9 = swift_retain();
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v24 = (_QWORD *)v13;
    *(_DWORD *)v12 = 136315394;
    v14 = swift_retain();
    v15 = Array.description.getter(v14, &type metadata for TTRISmartListFilterEditorViewController.Filter);
    v17 = v16;
    swift_release();
    v22 = sub_100027E40(v15, v17, (uint64_t *)&v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 4, v12 + 12);
    swift_release_n(v3, 2);
    swift_bridgeObjectRelease(v17);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain(v7);
    v19 = Array.description.getter(v18, &type metadata for TTRISmartListFilterEditorViewController.Filter);
    v21 = v20;
    swift_release();
    v22 = sub_100027E40(v19, v21, (uint64_t *)&v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 14, v12 + 22);
    swift_release_n(v7, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRISmartListFilterEditor {enabled: %s, disabled: %s}", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, &type metadata for Any[8]);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v7, 2);
    swift_release_n(v3, 2);
  }
}

void sub_1001C1750(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = v1;
  v4 = sub_1001BFC80();
  sub_10037C230(a1, (uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  v6 = sub_1001BFC80();
  sub_1000F4FAC(a1);
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters) = v6;
  swift_bridgeObjectRelease(v5);
  __asm { BR              X10 }
}

uint64_t sub_1001C17E8()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];

  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateSection, (uint64_t (*)(uint64_t))sub_1001CC378);
  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup, (uint64_t (*)(uint64_t))sub_1001CBEE0);
  v17 = 0u;
  memset(v18, 0, sizeof(v18));
  v15 = 0u;
  v16 = 0u;
  ((void (*)(__int128 *))TTRITableSection.header.setter)(&v15);
  v17 = 0u;
  memset(v18, 0, sizeof(v18));
  v15 = 0u;
  v16 = 0u;
  TTRITableSection.footer.setter(&v15);
  sub_1001C0BC4(v0);
  v3 = v2;
  v5 = v4;
  v6 = sub_1001C0DE0(v0);
  if ((v1 & 1) != 0)
  {
    v7 = v6;
    sub_1001C1498();
    if (qword_10063D428 != -1)
      swift_once(&qword_10063D428, sub_1001BF378);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_10064A8D0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (_DWORD *)swift_slowAlloc(22, -1);
      *(_QWORD *)&v15 = swift_slowAlloc(32, -1);
      *v12 = 136315394;
      __asm { BR              X10 }
    }

    v14 = sub_1001C0A0C();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))TTRITableGroup.move(_:to:at:))(v3, v5, v14, v7);
    swift_release();
    swift_release();
    swift_release();
    return swift_unknownObjectRelease(v3);
  }
  else
  {
    swift_release();
    swift_release();
    return swift_unknownObjectRelease(v3);
  }
}

void sub_1001C1BE0(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  char v36;
  char v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[37];
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[2];
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68[40];

  v3 = type metadata accessor for TTRICalendarPickerCellContentState(0, a2);
  __chkstk_darwin(v3);
  v54 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v5);
  v51[18] = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v51[34] = *(_QWORD *)(v52 - 8);
  v7 = __chkstk_darwin(v52);
  v51[32] = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for TTRITitledDatePickerCellContentState(0, v7);
  __chkstk_darwin(v53);
  v51[30] = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  v59 = v11;
  __chkstk_darwin(v10);
  v51[25] = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v51[29] = (char *)v51 - v14;
  __chkstk_darwin(v15);
  v55 = (char *)v51 - v16;
  __chkstk_darwin(v17);
  v51[22] = (char *)v51 - v18;
  __chkstk_darwin(v19);
  v51[20] = (char *)v51 - v20;
  __chkstk_darwin(v21);
  v51[26] = (char *)v51 - v22;
  v23 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v23);
  v57 = (uint64_t)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v56 = (uint64_t)v51 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)v51 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)v51 - v31;
  v33 = a1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 20);
  sub_10002B1E8(v33, (uint64_t)v32, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  swift_storeEnumTagMultiPayload(v29, v23, 6);
  _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v32, (uint64_t)v29);
  LOBYTE(a1) = v34;
  sub_10001F544((uint64_t)v29, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  sub_10001F544((uint64_t)v32, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  if ((a1 & 1) != 0)
    sub_1001C1750(1u);
  else
    sub_1001C1008(1u);
  v35 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateOptionsCell, sub_1001C3E30)+ 32);
  swift_release();
  sub_1003D3A4C();
  v37 = v36;
  v38 = (char *)v35 + *(_QWORD *)((swift_isaMask & *v35) + 0x78);
  swift_beginAccess(v38, v68, 0, 0);
  v39 = (void *)*((_QWORD *)v38 + 1);
  v41 = *((_QWORD *)v38 + 4);
  v40 = *((_QWORD *)v38 + 5);
  v43 = *((_QWORD *)v38 + 6);
  v42 = *((_QWORD *)v38 + 7);
  v44 = v38[65];
  v45 = *((_OWORD *)v38 + 1);
  v60[0] = *(id *)v38;
  v60[1] = v39;
  v61 = v45;
  v62 = v41;
  v63 = v40;
  v64 = v43;
  v65 = v42;
  v66 = v37;
  v67 = v44;
  sub_1000DDA1C(v60[0], v39, (void *)v45);
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v41);
  TTRITableCellContent.state.setter(v60);

  if ((UIViewController.isIPadIdiom.getter(v46) & 1) != 0)
  {
    v47 = v56;
    sub_10002B1E8(v33, v56, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
    v48 = (char *)&loc_1001C2030 + 4 * word_100527CBC[swift_getEnumCaseMultiPayload(v47, v23)];
    __asm { BR              X10 }
  }
  v49 = v57;
  sub_10002B1E8(v33, v57, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  v50 = (char *)sub_1001C2220 + 4 * word_100527CAA[swift_getEnumCaseMultiPayload(v49, v23)];
  __asm { BR              X10 }
}

void sub_1001C2220()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = (_QWORD *)(v1 + *(int *)(sub_10002A750(&qword_10064AC10) + 48));
  *(_QWORD *)(v0 + 344) = v2[1];
  v3 = v2[3];
  *(_QWORD *)(v0 + 304) = v2[2];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 368) + 32))(*(_QWORD *)(v0 + 336), v1, *(_QWORD *)(v0 + 360));
  v4 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358)+ 32);
  swift_release();
  v5 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78);
  swift_beginAccess(v5, v0 + 896, 0, 0);
  v6 = *((_OWORD *)v5 + 1);
  *(_OWORD *)(v0 + 1392) = *(_OWORD *)v5;
  *(_OWORD *)(v0 + 1408) = v6;
  v7 = *((_OWORD *)v5 + 2);
  v8 = *((_OWORD *)v5 + 3);
  v9 = *((_OWORD *)v5 + 5);
  *(_OWORD *)(v0 + 1456) = *((_OWORD *)v5 + 4);
  *(_OWORD *)(v0 + 1472) = v9;
  *(_OWORD *)(v0 + 1424) = v7;
  *(_OWORD *)(v0 + 1440) = v8;
  v10 = *((_OWORD *)v5 + 6);
  v11 = *((_OWORD *)v5 + 7);
  v12 = *((_OWORD *)v5 + 9);
  *(_OWORD *)(v0 + 1520) = *((_OWORD *)v5 + 8);
  *(_OWORD *)(v0 + 1536) = v12;
  *(_OWORD *)(v0 + 1488) = v10;
  *(_OWORD *)(v0 + 1504) = v11;
  v13 = *((_OWORD *)v5 + 10);
  v14 = *((_OWORD *)v5 + 11);
  v15 = *((_OWORD *)v5 + 12);
  *(_QWORD *)(v0 + 1600) = *((_QWORD *)v5 + 26);
  *(_OWORD *)(v0 + 1568) = v14;
  *(_OWORD *)(v0 + 1584) = v15;
  *(_OWORD *)(v0 + 1552) = v13;
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 1600);
  v16 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 272) = v16;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 1544);
  *(_DWORD *)(v0 + 232) = *(unsigned __int8 *)(v0 + 1536);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 1512);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 1488);
  v17 = *(_QWORD *)(v0 + 1480);
  v18 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 1392);
  *(_OWORD *)(v0 + 176) = v18;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 1408);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 1424);
  v19 = *(_QWORD *)(v0 + 1440);
  v20 = *(_QWORD *)(v0 + 1448);
  v21 = *(_BYTE *)(v0 + 1456);
  v22 = *(_QWORD *)(v0 + 1528);
  v23 = *(_QWORD *)(v0 + 1504);
  swift_bridgeObjectRetain(v3);
  sub_1001CD4A4(v0 + 1392);
  swift_bridgeObjectRelease(v23);
  v24 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 1184) = v24;
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 1216) = v19;
  *(_QWORD *)(v0 + 1224) = v20;
  *(_BYTE *)(v0 + 1232) = v21;
  *(_OWORD *)(v0 + 1240) = *(_OWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 1256) = v17;
  *(_QWORD *)(v0 + 1264) = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 1272) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 1280) = v3;
  *(_OWORD *)(v0 + 1288) = *(_OWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 1304) = v22;
  *(_BYTE *)(v0 + 1312) = *(_DWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 1320) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 1336) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 1352) = *(_OWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 1368) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 1376) = *(_QWORD *)(v0 + 296);
  TTRITableCellContent.state.setter(v0 + 1168);
  swift_bridgeObjectRelease(v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 344));
  v25 = *(id *)(sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1, (uint64_t)sub_1001CC33C)+ 32);
  swift_release();
  v26 = (char *)v25 + *(_QWORD *)((swift_isaMask & *v25) + 0x78);
  swift_beginAccess(v26, v0 + 1168, 0, 0);
  v27 = (uint64_t)v26;
  v28 = *(_QWORD *)(v0 + 320);
  sub_10002B1E8(v27, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRICalendarPickerCellContentState);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 40))(v28, *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360));
  TTRITableCellContent.state.setter(v28);

  JUMPOUT(0x1001C38F4);
}

void sub_1001C24FC()
{
  uint64_t v0;
  char *v1;
  char v2;
  _QWORD *v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *v1;
  v3 = *(id *)(sub_1001C017C() + 32);
  swift_release();
  v4 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x78);
  swift_beginAccess(v4, v0 + 1168, 0, 0);
  v5 = *(void **)v4;
  v6 = (void *)*((_QWORD *)v4 + 1);
  v8 = *((_QWORD *)v4 + 4);
  v7 = *((_QWORD *)v4 + 5);
  v9 = *((_QWORD *)v4 + 8);
  v10 = v4[73];
  v11 = v4[74];
  v12 = v4[75];
  v13 = v4[76];
  v14 = v4[77];
  v15 = *((_OWORD *)v4 + 1);
  v16 = *((_OWORD *)v4 + 3);
  *(_OWORD *)(v0 + 368) = v16;
  *(_QWORD *)(v0 + 1392) = v5;
  *(_QWORD *)(v0 + 1400) = v6;
  *(_OWORD *)(v0 + 1408) = v15;
  *(_QWORD *)(v0 + 1424) = v8;
  *(_QWORD *)(v0 + 1432) = v7;
  *(_OWORD *)(v0 + 1440) = v16;
  *(_QWORD *)(v0 + 1456) = v9;
  *(_BYTE *)(v0 + 1464) = v2;
  *(_BYTE *)(v0 + 1465) = v10;
  *(_BYTE *)(v0 + 1466) = v11;
  *(_BYTE *)(v0 + 1467) = v12;
  *(_BYTE *)(v0 + 1468) = v13;
  *(_BYTE *)(v0 + 1469) = v14;
  sub_1000DDA1C(v5, v6, (void *)v15);
  v17 = *(_QWORD *)(v0 + 368);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v17);
  TTRITableCellContent.state.setter(v0 + 1392);

  JUMPOUT(0x1001C38F4);
}

void sub_1001C259C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  v3 = (int *)sub_10002A750(&qword_10064AC08);
  v4 = v1;
  v5 = v1 + v3[12];
  v6 = (uint64_t *)(v4 + v3[16]);
  v8 = *v6;
  v7 = v6[1];
  v9 = v6[3];
  v10 = (_QWORD *)(v4 + v3[20]);
  v0[44] = *v10;
  v0[42] = v10[1];
  v0[40] = v10[3];
  v11 = v0[45];
  v12 = *(void (**)(uint64_t))(v0[46] + 32);
  v13 = v0[20];
  v12(v13);
  ((void (*)(_QWORD, uint64_t, uint64_t))v12)(v0[22], v5, v11);
  v0[17] = v2;
  v14 = *(id *)(sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1, (uint64_t)sub_1001CC2DC)+ 32);
  swift_release();
  swift_bridgeObjectRelease(v9);
  if (!v7)
  {
    v8 = 0;
    v7 = 0xE000000000000000;
  }
  v15 = (uint64_t)v14 + *(_QWORD *)((swift_isaMask & *v14) + 0x78);
  swift_beginAccess(v15, v0 + 174, 0, 0);
  v16 = v0[30];
  sub_10002B1E8(v15, v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRITitledDatePickerCellContentState);
  swift_bridgeObjectRelease(*(_QWORD *)(v16 + 80));
  *(_QWORD *)(v16 + 72) = v8;
  *(_QWORD *)(v16 + 80) = v7;
  TTRITableCellContent.state.setter(v16);

  v17 = *(id *)(sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1, (uint64_t)sub_1001CC2DC)+ 32);
  swift_release();
  v18 = (uint64_t)v17 + *(_QWORD *)((swift_isaMask & *v17) + 0x78);
  swift_beginAccess(v18, v0 + 146, 0, 0);
  sub_10002B1E8(v18, v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRITitledDatePickerCellContentState);
  v19 = v16 + *(int *)(v0[38] + 24);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[46] + 24);
  v0[43] = v20;
  v20(v19, v13, v11);
  TTRITableCellContent.state.setter(v16);

  v21 = *(id *)(sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2, (uint64_t)sub_1001CC2C0)+ 32);
  swift_release();
  swift_bridgeObjectRelease(v0[40]);
  v22 = v0[42];
  if (v22)
    v23 = v0[44];
  else
    v23 = 0;
  if (v22)
    v24 = v0[42];
  else
    v24 = 0xE000000000000000;
  v25 = (uint64_t)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0x78);
  swift_beginAccess(v25, v0 + 112, 0, 0);
  sub_10002B1E8(v25, v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRITitledDatePickerCellContentState);
  swift_bridgeObjectRelease(*(_QWORD *)(v16 + 80));
  *(_QWORD *)(v16 + 72) = v23;
  *(_QWORD *)(v16 + 80) = v24;
  TTRITableCellContent.state.setter(v16);

  v26 = *(id *)(sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2, (uint64_t)sub_1001CC2C0)+ 32);
  swift_release();
  v27 = (uint64_t)v26 + *(_QWORD *)((swift_isaMask & *v26) + 0x78);
  swift_beginAccess(v27, v0 + 82, 0, 0);
  sub_10002B1E8(v27, v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRITitledDatePickerCellContentState);
  v28 = v0[22];
  ((void (*)(uint64_t, uint64_t, uint64_t))v0[43])(v16 + *(int *)(v0[38] + 24), v28, v11);
  TTRITableCellContent.state.setter(v16);

  v29 = *(void (**)(uint64_t, uint64_t))(v0[46] + 8);
  v29(v28, v11);
  v29(v0[20], v11);
  JUMPOUT(0x1001C28DCLL);
}

void sub_1001C28EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __n128 v35;

  v2 = (_QWORD *)(v1 + *(int *)(sub_10002A750(&qword_10064AC00) + 48));
  v3 = v2[1];
  v5 = v2[2];
  v4 = v2[3];
  *(_QWORD *)(v0 + 360) = v5;
  *(_QWORD *)(v0 + 368) = v3;
  *(_QWORD *)(v0 + 352) = v4;
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v1, v8);
  v9 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell, sub_1001C4534)+ 32);
  swift_release();
  v10 = (char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x78);
  swift_beginAccess(v10, v0 + 896, 0, 0);
  v11 = (uint64_t)v10;
  v12 = *(_QWORD *)(v0 + 144);
  sub_10002B1E8(v11, v12, type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v12, v7, v8);
  TTRITableCellContent.state.setter(v12);

  v13 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358)+ 32);
  swift_release();
  v14 = (char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x78);
  swift_beginAccess(v14, v0 + 656, 0, 0);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)(v0 + 1392) = *(_OWORD *)v14;
  *(_OWORD *)(v0 + 1408) = v15;
  v16 = *((_OWORD *)v14 + 2);
  v17 = *((_OWORD *)v14 + 3);
  v18 = *((_OWORD *)v14 + 5);
  *(_OWORD *)(v0 + 1456) = *((_OWORD *)v14 + 4);
  *(_OWORD *)(v0 + 1472) = v18;
  *(_OWORD *)(v0 + 1424) = v16;
  *(_OWORD *)(v0 + 1440) = v17;
  v19 = *((_OWORD *)v14 + 6);
  v20 = *((_OWORD *)v14 + 7);
  v21 = *((_OWORD *)v14 + 9);
  *(_OWORD *)(v0 + 1520) = *((_OWORD *)v14 + 8);
  *(_OWORD *)(v0 + 1536) = v21;
  *(_OWORD *)(v0 + 1488) = v19;
  *(_OWORD *)(v0 + 1504) = v20;
  v22 = *((_OWORD *)v14 + 10);
  v23 = *((_OWORD *)v14 + 11);
  v24 = *((_OWORD *)v14 + 12);
  *(_QWORD *)(v0 + 1600) = *((_QWORD *)v14 + 26);
  *(_OWORD *)(v0 + 1568) = v23;
  *(_OWORD *)(v0 + 1584) = v24;
  *(_OWORD *)(v0 + 1552) = v22;
  v25 = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 1600);
  *(_QWORD *)(v0 + 344) = v25;
  v26 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 320) = v26;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 1544);
  *(_DWORD *)(v0 + 232) = *(unsigned __int8 *)(v0 + 1536);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 1512);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 1488);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 1480);
  v27 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 1392);
  *(_OWORD *)(v0 + 160) = v27;
  v28 = *(_OWORD *)(v0 + 1408);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 1424);
  *(_OWORD *)(v0 + 112) = v28;
  v29 = *(_QWORD *)(v0 + 1440);
  v30 = *(_QWORD *)(v0 + 1448);
  LOBYTE(v7) = *(_BYTE *)(v0 + 1456);
  v31 = *(_QWORD *)(v0 + 1528);
  v32 = *(_QWORD *)(v0 + 1504);
  v33 = *(_QWORD *)(v0 + 352);
  swift_bridgeObjectRetain(v33);
  sub_1001CD4A4(v0 + 1392);
  swift_bridgeObjectRelease(v32);
  v34 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1184) = v34;
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 1216) = v29;
  *(_QWORD *)(v0 + 1224) = v30;
  *(_BYTE *)(v0 + 1232) = v7;
  *(_DWORD *)(v0 + 1233) = *(_DWORD *)(v0 + 392);
  *(_DWORD *)(v0 + 1236) = *(_DWORD *)(v0 + 395);
  *(_OWORD *)(v0 + 1240) = *(_OWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 1256) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 1264) = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 1272) = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 1280) = v33;
  *(_OWORD *)(v0 + 1288) = *(_OWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 1304) = v31;
  *(_BYTE *)(v0 + 1312) = *(_DWORD *)(v0 + 232);
  *(_DWORD *)(v0 + 1313) = *(_DWORD *)(v0 + 1144);
  *(_DWORD *)(v0 + 1316) = *(_DWORD *)(v0 + 1147);
  *(_OWORD *)(v0 + 1320) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 1336) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 1352) = *(_OWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 1368) = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v0 + 1376) = *(_QWORD *)(v0 + 336);
  TTRITableCellContent.state.setter(v0 + 1168);
  swift_bridgeObjectRelease(v33);

  v35 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 368));
  (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 296), v35);
  JUMPOUT(0x1001C38ECLL);
}

void sub_1001C2B9C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v1 = *(id *)(sub_1001C017C() + 32);
  swift_release();
  v2 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78);
  swift_beginAccess(v2, v0 + 1168, 0, 0);
  v3 = *(_QWORD *)v2;
  v4 = *((_QWORD *)v2 + 1);
  v6 = *((_QWORD *)v2 + 4);
  v5 = *((_QWORD *)v2 + 5);
  v7 = *((_OWORD *)v2 + 1);
  v8 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v0 + 368) = v8;
  *(_QWORD *)(v0 + 1392) = v3;
  *(_QWORD *)(v0 + 1400) = v4;
  *(_OWORD *)(v0 + 1408) = v7;
  *(_QWORD *)(v0 + 1424) = v6;
  *(_QWORD *)(v0 + 1432) = v5;
  *(_OWORD *)(v0 + 1440) = v8;
  JUMPOUT(0x1001C2C38);
}

void sub_1001C2CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD);
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _QWORD *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t);
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  _QWORD *v100;
  char *v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);

  v3 = (int *)sub_10002A750(&qword_10064AC08);
  v4 = v1;
  v5 = v1 + v3[12];
  v6 = (uint64_t *)(v4 + v3[16]);
  v7 = *v6;
  v8 = v6[1];
  v10 = v6[2];
  v9 = v6[3];
  *(_QWORD *)(v0 + 272) = v10;
  *(_QWORD *)(v0 + 256) = v9;
  v11 = (uint64_t *)(v4 + v3[20]);
  v12 = *v11;
  v13 = v11[1];
  v15 = v11[2];
  v14 = v11[3];
  *(_QWORD *)(v0 + 336) = v15;
  *(_QWORD *)(v0 + 344) = v13;
  *(_QWORD *)(v0 + 296) = v12;
  *(_QWORD *)(v0 + 304) = v14;
  v16 = *(_QWORD *)(v0 + 360);
  v17 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 368) + 32);
  v17(*(_QWORD *)(v0 + 232));
  ((void (*)(_QWORD, uint64_t, uint64_t))v17)(*(_QWORD *)(v0 + 200), v5, v16);
  v18 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358)+ 32);
  swift_release();
  if (v8)
    v19 = v7;
  else
    v19 = 0;
  *(_QWORD *)(v0 + 352) = v19;
  v20 = 0xE000000000000000;
  if (v8)
    v20 = v8;
  *(_QWORD *)(v0 + 208) = v20;
  *(_QWORD *)(v0 + 240) = v8;
  v21 = (char *)v18 + *(_QWORD *)((swift_isaMask & *v18) + 0x78);
  swift_beginAccess(v21, v0 + 1144, 0, 0);
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)v21;
  *(_OWORD *)(v0 + 1184) = v22;
  v23 = *((_OWORD *)v21 + 2);
  v24 = *((_OWORD *)v21 + 3);
  v25 = *((_OWORD *)v21 + 5);
  *(_OWORD *)(v0 + 1232) = *((_OWORD *)v21 + 4);
  *(_OWORD *)(v0 + 1248) = v25;
  *(_OWORD *)(v0 + 1200) = v23;
  *(_OWORD *)(v0 + 1216) = v24;
  v26 = *((_OWORD *)v21 + 6);
  v27 = *((_OWORD *)v21 + 7);
  v28 = *((_OWORD *)v21 + 9);
  *(_OWORD *)(v0 + 1296) = *((_OWORD *)v21 + 8);
  *(_OWORD *)(v0 + 1312) = v28;
  *(_OWORD *)(v0 + 1264) = v26;
  *(_OWORD *)(v0 + 1280) = v27;
  v29 = *((_OWORD *)v21 + 10);
  v30 = *((_OWORD *)v21 + 11);
  v31 = *((_OWORD *)v21 + 12);
  *(_QWORD *)(v0 + 1376) = *((_QWORD *)v21 + 26);
  *(_OWORD *)(v0 + 1344) = v30;
  *(_OWORD *)(v0 + 1360) = v31;
  *(_OWORD *)(v0 + 1328) = v29;
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 1368);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 1376);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 1352);
  v32 = *(_OWORD *)(v0 + 1336);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 1320);
  *(_OWORD *)(v0 + 112) = v32;
  *(_QWORD *)(v0 + 136) = v2;
  v33 = *(_BYTE *)(v0 + 1312);
  v34 = *(_OWORD *)(v0 + 1288);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 1272);
  *(_OWORD *)(v0 + 80) = v34;
  v35 = *(_OWORD *)(v0 + 1256);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 1168);
  *(_OWORD *)(v0 + 48) = v35;
  v36 = *(_OWORD *)(v0 + 1184);
  *(_OWORD *)v0 = *(_OWORD *)(v0 + 1200);
  *(_OWORD *)(v0 + 16) = v36;
  v37 = *(_QWORD *)(v0 + 1216);
  v38 = *(_QWORD *)(v0 + 1224);
  v39 = *(_BYTE *)(v0 + 1232);
  v40 = *(_QWORD *)(v0 + 1304);
  v41 = *(_QWORD *)(v0 + 1248);
  sub_1001CD4A4(v0 + 1168);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v41);
  v42 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 1392) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 1408) = v42;
  *(_OWORD *)(v0 + 1424) = *(_OWORD *)v0;
  *(_QWORD *)(v0 + 1440) = v37;
  *(_QWORD *)(v0 + 1448) = v38;
  *(_BYTE *)(v0 + 1456) = v39;
  *(_QWORD *)(v0 + 1464) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 1472) = *(_QWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 1480) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 1496) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 1512) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 1528) = v40;
  *(_BYTE *)(v0 + 1536) = v33;
  *(_OWORD *)(v0 + 1544) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 1560) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1576) = *(_OWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 1592) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 1600) = *(_QWORD *)(v0 + 160);
  TTRITableCellContent.state.setter(v0 + 1392);

  v43 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358)+ 32);
  swift_release();
  v44 = (char *)v43 + *(_QWORD *)((swift_isaMask & *v43) + 0x78);
  swift_beginAccess(v44, v0 + 1120, 0, 0);
  v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)(v0 + 1392) = *(_OWORD *)v44;
  *(_OWORD *)(v0 + 1408) = v45;
  v46 = *((_OWORD *)v44 + 2);
  v47 = *((_OWORD *)v44 + 3);
  v48 = *((_OWORD *)v44 + 5);
  *(_OWORD *)(v0 + 1456) = *((_OWORD *)v44 + 4);
  *(_OWORD *)(v0 + 1472) = v48;
  *(_OWORD *)(v0 + 1424) = v46;
  *(_OWORD *)(v0 + 1440) = v47;
  v49 = *((_OWORD *)v44 + 6);
  v50 = *((_OWORD *)v44 + 7);
  v51 = *((_OWORD *)v44 + 9);
  *(_OWORD *)(v0 + 1520) = *((_OWORD *)v44 + 8);
  *(_OWORD *)(v0 + 1536) = v51;
  *(_OWORD *)(v0 + 1488) = v49;
  *(_OWORD *)(v0 + 1504) = v50;
  v52 = *((_OWORD *)v44 + 10);
  v53 = *((_OWORD *)v44 + 11);
  v54 = *((_OWORD *)v44 + 12);
  *(_QWORD *)(v0 + 1600) = *((_QWORD *)v44 + 26);
  *(_OWORD *)(v0 + 1568) = v53;
  *(_OWORD *)(v0 + 1584) = v54;
  *(_OWORD *)(v0 + 1552) = v52;
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 1600);
  v55 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 176) = v55;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 1544);
  *(_DWORD *)(v0 + 112) = *(unsigned __int8 *)(v0 + 1536);
  v56 = *(_OWORD *)(v0 + 1512);
  v57 = *(_QWORD *)(v0 + 1488);
  v58 = *(_QWORD *)(v0 + 1480);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 96) = v56;
  v59 = *(_OWORD *)(v0 + 1392);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 1408);
  *(_OWORD *)(v0 + 64) = v59;
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 1424);
  v60 = *(_QWORD *)(v0 + 1440);
  v61 = *(_QWORD *)(v0 + 1448);
  LOBYTE(v37) = *(_BYTE *)(v0 + 1456);
  v62 = *(_QWORD *)(v0 + 1528);
  v63 = *(_QWORD *)(v0 + 1504);
  v64 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain(v64);
  sub_1001CD4A4(v0 + 1392);
  swift_bridgeObjectRelease(v63);
  v65 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 912) = v65;
  *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 944) = v60;
  *(_QWORD *)(v0 + 952) = v61;
  *(_BYTE *)(v0 + 960) = v37;
  v66 = (__int128 *)(v0 + 896);
  *(_OWORD *)(v0 + 968) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 984) = v58;
  *(_QWORD *)(v0 + 992) = v57;
  *(_QWORD *)(v0 + 1000) = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 1008) = v64;
  *(_OWORD *)(v0 + 1016) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 1032) = v62;
  *(_BYTE *)(v0 + 1040) = *(_DWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1048) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1064) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 1080) = *(_OWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 1096) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 1104) = *(_QWORD *)(v0 + 208);
  TTRITableCellContent.state.setter(v0 + 896);
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));

  v67 = *(id *)(sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1, (uint64_t)sub_1001CC33C)+ 32);
  swift_release();
  v68 = (char *)v67 + *(_QWORD *)((swift_isaMask & *v67) + 0x78);
  swift_beginAccess(v68, v0 + 872, 0, 0);
  v69 = (uint64_t)v68;
  v70 = *(_QWORD *)(v0 + 320);
  sub_10002B1E8(v69, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRICalendarPickerCellContentState);
  v71 = *(_QWORD *)(v0 + 360);
  v72 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 368) + 24);
  *(_QWORD *)(v0 + 272) = v72;
  v72(v70, *(_QWORD *)(v0 + 232), v71);
  TTRITableCellContent.state.setter(v70);

  v73 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
  *(_QWORD *)(v0 + 256) = v73;
  *(_DWORD *)(v0 + 352) = (*(_QWORD *)(v73 + 56) & 1) == 0;
  v74 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2, (uint64_t)sub_1001CC314)+ 32);
  swift_release();
  v75 = *(_QWORD *)(v0 + 344);
  v76 = *(_QWORD *)(v0 + 296);
  if (!v75)
    v76 = 0;
  *(_QWORD *)(v0 + 296) = v76;
  v77 = 0xE000000000000000;
  if (v75)
    v77 = v75;
  *(_QWORD *)(v0 + 240) = v77;
  v78 = (char *)v74 + *(_QWORD *)((swift_isaMask & *v74) + 0x78);
  swift_beginAccess(v78, v0 + 632, 0, 0);
  v79 = *((_OWORD *)v78 + 1);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)v78;
  *(_OWORD *)(v0 + 672) = v79;
  v80 = *((_OWORD *)v78 + 2);
  v81 = *((_OWORD *)v78 + 3);
  v82 = *((_OWORD *)v78 + 5);
  *(_OWORD *)(v0 + 720) = *((_OWORD *)v78 + 4);
  *(_OWORD *)(v0 + 736) = v82;
  *(_OWORD *)(v0 + 688) = v80;
  *(_OWORD *)(v0 + 704) = v81;
  v83 = *((_OWORD *)v78 + 6);
  v84 = *((_OWORD *)v78 + 7);
  v85 = *((_OWORD *)v78 + 9);
  *(_OWORD *)(v0 + 784) = *((_OWORD *)v78 + 8);
  *(_OWORD *)(v0 + 800) = v85;
  *(_OWORD *)(v0 + 752) = v83;
  *(_OWORD *)(v0 + 768) = v84;
  v86 = *((_OWORD *)v78 + 10);
  v87 = *((_OWORD *)v78 + 11);
  v88 = *((_OWORD *)v78 + 12);
  *(_QWORD *)(v0 + 864) = *((_QWORD *)v78 + 26);
  *(_OWORD *)(v0 + 832) = v87;
  *(_OWORD *)(v0 + 848) = v88;
  *(_OWORD *)(v0 + 816) = v86;
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 856);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 864);
  v89 = *(_OWORD *)(v0 + 840);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 824);
  *(_OWORD *)(v0 + 160) = v89;
  v90 = *(_OWORD *)(v0 + 808);
  v91 = *(_BYTE *)(v0 + 800);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 776);
  *(_OWORD *)(v0 + 112) = v90;
  v92 = *(_OWORD *)(v0 + 760);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 744);
  *(_OWORD *)(v0 + 80) = v92;
  v93 = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 48) = v93;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 688);
  v94 = *(_QWORD *)(v0 + 704);
  v95 = *(_QWORD *)(v0 + 712);
  v96 = *(_BYTE *)(v0 + 720);
  v97 = *(_QWORD *)(v0 + 792);
  v98 = *(_QWORD *)(v0 + 736);
  swift_bridgeObjectRetain(v75);
  sub_1001CD4A4(v0 + 656);
  swift_bridgeObjectRelease(v98);
  v99 = *(_OWORD *)(v0 + 32);
  *v66 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 912) = v99;
  *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 944) = v94;
  *(_QWORD *)(v0 + 952) = v95;
  *(_BYTE *)(v0 + 960) = v96;
  *(_QWORD *)(v0 + 968) = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 976) = *(_QWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 984) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 1000) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 1016) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 1032) = v97;
  *(_BYTE *)(v0 + 1040) = v91;
  *(_OWORD *)(v0 + 1048) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1064) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1080) = *(_OWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 1096) = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 1104) = *(_QWORD *)(v0 + 176);
  TTRITableCellContent.state.setter(v0 + 896);

  v100 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2, (uint64_t)sub_1001CC314)+ 32);
  swift_release();
  v101 = (char *)v100 + *(_QWORD *)((swift_isaMask & *v100) + 0x78);
  swift_beginAccess(v101, v0 + 608, 0, 0);
  v102 = *((_OWORD *)v101 + 1);
  *v66 = *(_OWORD *)v101;
  *(_OWORD *)(v0 + 912) = v102;
  v103 = *((_OWORD *)v101 + 2);
  v104 = *((_OWORD *)v101 + 3);
  v105 = *((_OWORD *)v101 + 5);
  *(_OWORD *)(v0 + 960) = *((_OWORD *)v101 + 4);
  *(_OWORD *)(v0 + 976) = v105;
  *(_OWORD *)(v0 + 928) = v103;
  *(_OWORD *)(v0 + 944) = v104;
  v106 = *((_OWORD *)v101 + 6);
  v107 = *((_OWORD *)v101 + 7);
  v108 = *((_OWORD *)v101 + 9);
  *(_OWORD *)(v0 + 1024) = *((_OWORD *)v101 + 8);
  *(_OWORD *)(v0 + 1040) = v108;
  *(_OWORD *)(v0 + 992) = v106;
  *(_OWORD *)(v0 + 1008) = v107;
  v109 = *((_OWORD *)v101 + 10);
  v110 = *((_OWORD *)v101 + 11);
  v111 = *((_OWORD *)v101 + 12);
  *(_QWORD *)(v0 + 1104) = *((_QWORD *)v101 + 26);
  *(_OWORD *)(v0 + 1072) = v110;
  *(_OWORD *)(v0 + 1088) = v111;
  *(_OWORD *)(v0 + 1056) = v109;
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 1096);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 1104);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 1080);
  v112 = *(_OWORD *)(v0 + 1064);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 1048);
  *(_OWORD *)(v0 + 176) = v112;
  *(_DWORD *)(v0 + 144) = *(unsigned __int8 *)(v0 + 1040);
  v113 = *(_OWORD *)(v0 + 1016);
  v114 = *(_QWORD *)(v0 + 992);
  v115 = *(_QWORD *)(v0 + 984);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 968);
  *(_OWORD *)(v0 + 112) = v113;
  v116 = *v66;
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 80) = v116;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 928);
  v117 = *(_QWORD *)(v0 + 944);
  v118 = *(_QWORD *)(v0 + 952);
  v119 = *(_BYTE *)(v0 + 960);
  v120 = *(_QWORD *)(v0 + 1032);
  v121 = *(_QWORD *)(v0 + 1008);
  v122 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRetain(v122);
  sub_1001CD4A4(v0 + 896);
  swift_bridgeObjectRelease(v121);
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 408) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 440) = v117;
  *(_QWORD *)(v0 + 448) = v118;
  *(_BYTE *)(v0 + 456) = v119;
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 480) = v115;
  *(_QWORD *)(v0 + 488) = v114;
  *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 504) = v122;
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 528) = v120;
  *(_BYTE *)(v0 + 536) = *(_DWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = *(_OWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 592) = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(v0 + 240);
  TTRITableCellContent.state.setter(v0 + 392);
  swift_bridgeObjectRelease(v122);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 344));

  v123 = *(id *)(sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell2, (uint64_t)sub_1001CC2F8)+ 32);
  swift_release();
  v124 = (char *)v123 + *(_QWORD *)((swift_isaMask & *v123) + 0x78);
  swift_beginAccess(v124, v0 + 392, 0, 0);
  v125 = (uint64_t)v124;
  v126 = *(_QWORD *)(v0 + 320);
  sub_10002B1E8(v125, v126, (uint64_t (*)(_QWORD))&type metadata accessor for TTRICalendarPickerCellContentState);
  v127 = *(_QWORD *)(v0 + 200);
  v128 = *(_QWORD *)(v0 + 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272))(v126, v127, v128);
  TTRITableCellContent.state.setter(v126);

  v129 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 368) + 8);
  v129(v127, v128);
  v129(*(_QWORD *)(v0 + 232), v128);
  JUMPOUT(0x1001C38F4);
}

void sub_1001C35D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v2 = (_QWORD *)(v1 + *(int *)(sub_10002A750(&qword_10064AC00) + 48));
  v3 = v2[1];
  v5 = v2[2];
  v4 = v2[3];
  *(_QWORD *)(v0 + 360) = v5;
  *(_QWORD *)(v0 + 368) = v3;
  *(_QWORD *)(v0 + 344) = v4;
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v1, v8);
  v9 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell, sub_1001C4534)+ 32);
  swift_release();
  v10 = (char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x78);
  swift_beginAccess(v10, v0 + 896, 0, 0);
  v11 = (uint64_t)v10;
  v12 = *(_QWORD *)(v0 + 144);
  sub_10002B1E8(v11, v12, type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v12, v7, v8);
  TTRITableCellContent.state.setter(v12);

  v13 = *(id *)(sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358)+ 32);
  swift_release();
  v14 = (char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x78);
  swift_beginAccess(v14, v0 + 656, 0, 0);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)(v0 + 1392) = *(_OWORD *)v14;
  *(_OWORD *)(v0 + 1408) = v15;
  v16 = *((_OWORD *)v14 + 2);
  v17 = *((_OWORD *)v14 + 3);
  v18 = *((_OWORD *)v14 + 5);
  *(_OWORD *)(v0 + 1456) = *((_OWORD *)v14 + 4);
  *(_OWORD *)(v0 + 1472) = v18;
  *(_OWORD *)(v0 + 1424) = v16;
  *(_OWORD *)(v0 + 1440) = v17;
  v19 = *((_OWORD *)v14 + 6);
  v20 = *((_OWORD *)v14 + 7);
  v21 = *((_OWORD *)v14 + 9);
  *(_OWORD *)(v0 + 1520) = *((_OWORD *)v14 + 8);
  *(_OWORD *)(v0 + 1536) = v21;
  *(_OWORD *)(v0 + 1488) = v19;
  *(_OWORD *)(v0 + 1504) = v20;
  v22 = *((_OWORD *)v14 + 10);
  v23 = *((_OWORD *)v14 + 11);
  v24 = *((_OWORD *)v14 + 12);
  *(_QWORD *)(v0 + 1600) = *((_QWORD *)v14 + 26);
  *(_OWORD *)(v0 + 1568) = v23;
  *(_OWORD *)(v0 + 1584) = v24;
  *(_OWORD *)(v0 + 1552) = v22;
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 1600);
  v25 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 320) = v25;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 1544);
  *(_DWORD *)(v0 + 232) = *(unsigned __int8 *)(v0 + 1536);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 1512);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 1488);
  v26 = *(_QWORD *)(v0 + 1480);
  v27 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 1392);
  *(_OWORD *)(v0 + 176) = v27;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 1408);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 1424);
  v28 = *(_QWORD *)(v0 + 1440);
  v29 = *(_QWORD *)(v0 + 1448);
  LOBYTE(v7) = *(_BYTE *)(v0 + 1456);
  v30 = *(_QWORD *)(v0 + 1528);
  v31 = *(_QWORD *)(v0 + 1504);
  v32 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRetain(v32);
  sub_1001CD4A4(v0 + 1392);
  swift_bridgeObjectRelease(v31);
  v33 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 1184) = v33;
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 1216) = v28;
  *(_QWORD *)(v0 + 1224) = v29;
  *(_BYTE *)(v0 + 1232) = v7;
  *(_DWORD *)(v0 + 1233) = *(_DWORD *)(v0 + 392);
  *(_DWORD *)(v0 + 1236) = *(_DWORD *)(v0 + 395);
  *(_OWORD *)(v0 + 1240) = *(_OWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 1256) = v26;
  *(_QWORD *)(v0 + 1264) = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 1272) = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 1280) = v32;
  *(_OWORD *)(v0 + 1288) = *(_OWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 1304) = v30;
  *(_BYTE *)(v0 + 1312) = *(_DWORD *)(v0 + 232);
  *(_DWORD *)(v0 + 1313) = *(_DWORD *)(v0 + 1144);
  *(_DWORD *)(v0 + 1316) = *(_DWORD *)(v0 + 1147);
  *(_OWORD *)(v0 + 1320) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 1336) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 1352) = *(_OWORD *)(v0 + 320);
  JUMPOUT(0x1001C3880);
}

uint64_t sub_1001C3A88()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];

  v0 = sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1, (uint64_t)sub_1001CC33C);
  swift_beginAccess(v0 + 49, v32, 0, 0);
  v1 = *(_BYTE *)(v0 + 49);
  swift_release();
  v2 = ~v1;
  v3 = sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell2, (uint64_t)sub_1001CC2F8);
  swift_beginAccess(v3 + 49, v31, 0, 0);
  v4 = *(unsigned __int8 *)(v3 + 49);
  swift_release();
  if (v4)
    v5 = v2 & 1;
  else
    v5 = v2 & 1 | 2;
  v6 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell, sub_1001C4534);
  swift_beginAccess(v6 + 49, v30, 0, 0);
  v7 = *(unsigned __int8 *)(v6 + 49);
  swift_release();
  if (!v7)
    v5 |= 4uLL;
  v8 = sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358);
  swift_beginAccess(v8 + 49, v29, 0, 0);
  v9 = *(unsigned __int8 *)(v8 + 49);
  swift_release();
  if (!v9)
    v5 |= 8uLL;
  v10 = sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2, (uint64_t)sub_1001CC314);
  swift_beginAccess(v10 + 49, v28, 0, 0);
  v11 = *(unsigned __int8 *)(v10 + 49);
  swift_release();
  if (!v11)
    v5 |= 0x10uLL;
  v12 = sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1, (uint64_t)sub_1001CC2DC);
  swift_beginAccess(v12 + 49, v27, 0, 0);
  v13 = *(unsigned __int8 *)(v12 + 49);
  swift_release();
  if (!v13)
    v5 |= 0x80uLL;
  v14 = sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2, (uint64_t)sub_1001CC2C0);
  swift_beginAccess(v14 + 49, v26, 0, 0);
  v15 = *(unsigned __int8 *)(v14 + 49);
  swift_release();
  if (!v15)
    v5 |= 0x100uLL;
  v16 = sub_1001C02F8();
  swift_beginAccess(v16 + 49, v25, 0, 0);
  v17 = *(_BYTE *)(v16 + 49);
  swift_release();
  if (!(v17 & 1 | (v5 >> 5) & 1))
    v5 |= 0x20uLL;
  v18 = sub_1001C042C();
  swift_beginAccess(v18 + 49, v24, 0, 0);
  v19 = *(_BYTE *)(v18 + 49);
  swift_release();
  if (!(v19 & 1 | (v5 >> 6) & 1))
    v5 |= 0x40uLL;
  v20 = sub_1001C017C();
  swift_beginAccess(v20 + 49, &v23, 0, 0);
  v21 = *(unsigned __int8 *)(v20 + 49);
  swift_release();
  if (v21)
    return v5;
  else
    return v5 | 0x200;
}

void sub_1001C3D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  UIAccessibilityNotifications v5;
  uint64_t v6;
  uint64_t v7;
  NSString argument;

  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_ttrAccessibilityShouldAnnounceOptionChanges) == 1)
  {
    v3 = sub_1001C3A88();
    v4 = v3 & a1;
    if (v3 != a1 && v4 == a1)
    {
      v5 = UIAccessibilityAnnouncementNotification;
      v6 = TTRAccesibility.General.Announcements.MoreOptionsShown.unsafeMutableAddressor();
LABEL_11:
      v7 = *(_QWORD *)(v6 + 8);
      swift_bridgeObjectRetain(v7);
      argument = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
      UIAccessibilityPostNotification(v5, argument);

      return;
    }
    if (v3 != a1 && v4 == v3)
    {
      v5 = UIAccessibilityAnnouncementNotification;
      v6 = TTRAccesibility.General.Announcements.FewerOptionsShown.unsafeMutableAddressor();
      goto LABEL_11;
    }
    if (v3 != a1)
    {
      v5 = UIAccessibilityAnnouncementNotification;
      v6 = TTRAccesibility.General.Announcements.OptionsChanged.unsafeMutableAddressor();
      goto LABEL_11;
    }
  }
}

uint64_t sub_1001C3E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v79;
  uint64_t v80;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  __int128 v87;
  uint64_t v88;
  unsigned __int8 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  unsigned __int8 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  unsigned __int8 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  unsigned __int8 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  unsigned __int8 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  unsigned __int8 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  unsigned __int8 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  unsigned __int8 v117;
  __int128 v118;

  v2 = sub_10002A750(&qword_10064AAE8);
  v3 = swift_allocObject(v2, 512, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100527EB0;
  v4._object = (void *)0x8000000100569750;
  v5._object = (void *)0x8000000100569770;
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v5._countAndFlagsBits = 0xD00000000000002ALL;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v115) = 0;
  sub_1001CC1EC();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v79, v7._countAndFlagsBits, v7._object, 0, &v115, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v8 = v80;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v79;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x80000001005697A0;
  v11._object = (void *)0x80000001005697C0;
  v10._countAndFlagsBits = 0xD00000000000001BLL;
  v12._countAndFlagsBits = 7958081;
  v12._object = (void *)0xE300000000000000;
  v11._countAndFlagsBits = 0xD00000000000002ALL;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v111) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v115, v13._countAndFlagsBits, v13._object, 0, &v111, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v14 = v116;
  v15 = v117;
  *(_OWORD *)(v3 + 128) = v115;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v118;
  v16._countAndFlagsBits = 0xD00000000000001DLL;
  v17._countAndFlagsBits = 0xD00000000000002CLL;
  v16._object = (void *)0x80000001005697F0;
  v17._object = (void *)0x8000000100569810;
  v18._countAndFlagsBits = 0x7961646F54;
  v18._object = (void *)0xE500000000000000;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  LOBYTE(v107) = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v111, v19._countAndFlagsBits, v19._object, 0, &v107, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v20 = v112;
  v21 = v113;
  *(_OWORD *)(v3 + 176) = v111;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v114;
  v22._countAndFlagsBits = 0xD000000000000030;
  v23._object = (void *)0x8000000100569840;
  v22._object = (void *)0x8000000100569860;
  v23._countAndFlagsBits = 0xD00000000000001FLL;
  v24._countAndFlagsBits = 0x7461442061206E4FLL;
  v24._object = (void *)0xE900000000000065;
  v25 = TTRLocalizedString(_:value:comment:)(v23, v24, v22);
  LOBYTE(v103) = 3;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v107, v25._countAndFlagsBits, v25._object, 0, &v103, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v26 = v108;
  v27 = v109;
  *(_OWORD *)(v3 + 224) = v107;
  *(_QWORD *)(v3 + 240) = v26;
  *(_QWORD *)(v3 + 248) = v27;
  *(_OWORD *)(v3 + 256) = v110;
  v28._countAndFlagsBits = 0xD000000000000023;
  v29._countAndFlagsBits = 0xD000000000000034;
  v28._object = (void *)0x80000001005698A0;
  v29._object = (void *)0x80000001005698D0;
  v30._countAndFlagsBits = 0x612065726F666542;
  v30._object = (void *)0xED00006574614420;
  v31 = TTRLocalizedString(_:value:comment:)(v28, v30, v29);
  LOBYTE(v99) = 4;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v103, v31._countAndFlagsBits, v31._object, 0, &v99, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v32 = v104;
  v33 = v105;
  *(_OWORD *)(v3 + 272) = v103;
  *(_QWORD *)(v3 + 288) = v32;
  *(_QWORD *)(v3 + 296) = v33;
  *(_OWORD *)(v3 + 304) = v106;
  v34._countAndFlagsBits = 0xD000000000000022;
  v35._countAndFlagsBits = 0xD000000000000033;
  v34._object = (void *)0x8000000100569910;
  v35._object = (void *)0x8000000100569940;
  v36._countAndFlagsBits = 0x2061207265746641;
  v36._object = (void *)0xEC00000065746144;
  v37 = TTRLocalizedString(_:value:comment:)(v34, v36, v35);
  LOBYTE(v95) = 5;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v99, v37._countAndFlagsBits, v37._object, 0, &v95, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v38 = v100;
  v39 = v101;
  *(_OWORD *)(v3 + 320) = v99;
  *(_QWORD *)(v3 + 336) = v38;
  *(_QWORD *)(v3 + 344) = v39;
  *(_OWORD *)(v3 + 352) = v102;
  v40._countAndFlagsBits = 0xD000000000000027;
  v41._countAndFlagsBits = 0xD000000000000036;
  v40._object = (void *)0x8000000100569980;
  v41._object = (void *)0x80000001005699B0;
  v42._countAndFlagsBits = 0x6569666963657053;
  v42._object = (void *)0xEF65676E61522064;
  v43 = TTRLocalizedString(_:value:comment:)(v40, v42, v41);
  LOBYTE(v91) = 6;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v95, v43._countAndFlagsBits, v43._object, 0, &v91, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v44 = v96;
  v45 = v97;
  *(_OWORD *)(v3 + 368) = v95;
  *(_QWORD *)(v3 + 384) = v44;
  *(_QWORD *)(v3 + 392) = v45;
  *(_OWORD *)(v3 + 400) = v98;
  v46._countAndFlagsBits = 0xD000000000000026;
  v47._countAndFlagsBits = 0xD000000000000035;
  v46._object = (void *)0x80000001005699F0;
  v47._object = (void *)0x8000000100569A20;
  v48._countAndFlagsBits = 0x65766974616C6552;
  v48._object = (void *)0xEE0065676E615220;
  v49 = TTRLocalizedString(_:value:comment:)(v46, v48, v47);
  LOBYTE(v87) = 7;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v91, v49._countAndFlagsBits, v49._object, 0, &v87, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v50 = v92;
  v51 = v93;
  *(_OWORD *)(v3 + 416) = v91;
  *(_QWORD *)(v3 + 432) = v50;
  *(_QWORD *)(v3 + 440) = v51;
  *(_OWORD *)(v3 + 448) = v94;
  v52._countAndFlagsBits = 0xD00000000000002ELL;
  v53._object = (void *)0x8000000100569A60;
  v52._object = (void *)0x8000000100569A80;
  v53._countAndFlagsBits = 0xD00000000000001FLL;
  v54._countAndFlagsBits = 0x65746144206F4ELL;
  v54._object = (void *)0xE700000000000000;
  v55 = TTRLocalizedString(_:value:comment:)(v53, v54, v52);
  v86 = 8;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v87, v55._countAndFlagsBits, v55._object, 0, &v86, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  v56 = v88;
  v57 = v89;
  *(_OWORD *)(v3 + 464) = v87;
  *(_QWORD *)(v3 + 480) = v56;
  *(_QWORD *)(v3 + 488) = v57;
  *(_OWORD *)(v3 + 496) = v90;
  v58 = String._bridgeToObjectiveC()();
  v59 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v58);

  v60 = static TTRListColors.SmartList.scheduled.getter();
  v61 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v59, 0, v60);
  v63 = v62;
  v65 = v64;
  v66._countAndFlagsBits = 0xD000000000000017;
  v66._object = (void *)0x8000000100569AB0;
  v67._countAndFlagsBits = 1702125892;
  v67._object = (void *)0xE400000000000000;
  v68._countAndFlagsBits = 0x6E207265746C6946;
  v68._object = (void *)0xEB00000000656D61;
  v69 = TTRLocalizedString(_:value:comment:)(v66, v67, v68);
  *(_QWORD *)&v79 = v61;
  *((_QWORD *)&v79 + 1) = v63;
  v80 = v65;
  countAndFlagsBits = v69._countAndFlagsBits;
  object = (unint64_t)v69._object;
  v83 = 0;
  v84 = v3;
  v85 = 0;
  v70 = objc_allocWithZone((Class)sub_10002A750(&qword_10064AAF8));
  v71 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v79, 0, 0);
  v72 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v72 + 16, a1);
  v73 = swift_allocObject(&unk_1005F5AD0, 32, 7);
  *(_QWORD *)(v73 + 16) = sub_1001CC230;
  *(_QWORD *)(v73 + 24) = v72;
  v74 = (_QWORD *)((char *)v71 + *(_QWORD *)((swift_isaMask & *v71) + 0x100));
  swift_beginAccess(v74, &v79, 1, 0);
  v75 = *v74;
  v76 = v74[1];
  *v74 = (uint64_t)sub_1001CC274;
  v74[1] = v73;
  sub_1000381B8(v75, v76);
  v77 = sub_10002A750((uint64_t *)&unk_10064AB00);
  swift_allocObject(v77, 73, 7);
  return TTRITableCell.init(_:)(v71);
}

uint64_t sub_1001C4534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v25 - v15;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v7 + 104))(v9, enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:), v6, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:), v2);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v9, 1, v5, 0);
  v17 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRISmartListFilterEditorRelativeRangeContent(0))
      + qword_100673720;
  *v17 = 0;
  v17[1] = 0;
  sub_10002B1E8((uint64_t)v16, (uint64_t)v12, type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState);
  v18 = TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(v12, 0, 0xD00000000000001CLL, 0x8000000100569B30);
  sub_10001F544((uint64_t)v16, type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState);
  v19 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a1);
  v20 = (void (**)(uint64_t))(v18 + qword_100673720);
  v21 = *(_QWORD *)(v18 + qword_100673720);
  v22 = *(_QWORD *)(v18 + qword_100673720 + 8);
  *v20 = sub_1001CC334;
  v20[1] = (void (*)(uint64_t))v19;
  sub_1000381B8(v21, v22);
  v23 = sub_10002A750(&qword_10064AB28);
  swift_allocObject(v23, 73, 7);
  return TTRITableCell.init(_:)(v18);
}

void sub_1001C475C(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v11[24];

  updated = type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, a1, v9);
    swift_storeEnumTagMultiPayload(v6, updated, 2);
    sub_1002E0CE4((uint64_t)v6);
    sub_10001F544((uint64_t)v6, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);

  }
}

uint64_t sub_1001C484C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    v7 = swift_unknownObjectRetain(v6);
    a2(v7);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_1001C48C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  _BYTE v13[24];

  updated = type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    UIViewController.endFirstResponderEditing()();
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, a1, v11);
    swift_storeEnumTagMultiPayload(v8, updated, a3);
    sub_1002E0CE4((uint64_t)v8);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);

  }
}

void sub_1001C49C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  updated = type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    UIViewController.endFirstResponderEditing()();
    v12 = a1 + *(int *)(type metadata accessor for TTRITitledDatePickerCellContentState(0, v11) + 24);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v12, v13);
    swift_storeEnumTagMultiPayload(v8, updated, a3);
    sub_1002E0CE4((uint64_t)v8);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);

  }
}

void sub_1001C4ACC(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  void *v8;
  _BYTE v10[24];

  updated = type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    UIViewController.endFirstResponderEditing()();
    *v6 = *(_BYTE *)(a1 + 72);
    swift_storeEnumTagMultiPayload(v6, updated, 3);
    sub_1002E0CE4((uint64_t)v6);
    sub_10001F544((uint64_t)v6, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);

  }
}

uint64_t sub_1001C4BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  id v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v67;
  uint64_t v68;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  char v74;
  __int128 v75;
  uint64_t v76;
  unsigned __int8 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  unsigned __int8 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  unsigned __int8 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  unsigned __int8 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  unsigned __int8 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  unsigned __int8 v97;
  __int128 v98;

  v2 = sub_10002A750(&qword_10064ABE0);
  v3 = swift_allocObject(v2, 464, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100527EC0;
  v4._object = (void *)0x800000010056A260;
  v5._object = (void *)0x800000010056A280;
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v5._countAndFlagsBits = 0xD00000000000002ALL;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v95) = 0;
  sub_1001CD440();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v67, v7._countAndFlagsBits, v7._object, 0, &v95, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v8 = v68;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v67;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x800000010056A2B0;
  v11._object = (void *)0x800000010056A2D0;
  v10._countAndFlagsBits = 0xD00000000000001BLL;
  v12._countAndFlagsBits = 7958081;
  v12._object = (void *)0xE300000000000000;
  v11._countAndFlagsBits = 0xD00000000000002ALL;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v91) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v95, v13._countAndFlagsBits, v13._object, 0, &v91, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v14 = v96;
  v15 = v97;
  *(_OWORD *)(v3 + 128) = v95;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v98;
  v16._object = (void *)0x800000010056A300;
  v17._object = (void *)0x800000010056A320;
  v16._countAndFlagsBits = 0xD00000000000001FLL;
  v18._countAndFlagsBits = 0x676E696E726F4DLL;
  v18._object = (void *)0xE700000000000000;
  v17._countAndFlagsBits = 0xD00000000000002ELL;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  LOBYTE(v87) = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v91, v19._countAndFlagsBits, v19._object, 0, &v87, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v20 = v92;
  v21 = v93;
  *(_OWORD *)(v3 + 176) = v91;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v94;
  v22._countAndFlagsBits = 0xD000000000000021;
  v23._countAndFlagsBits = 0xD000000000000030;
  v22._object = (void *)0x800000010056A350;
  v23._object = (void *)0x800000010056A380;
  v24._countAndFlagsBits = 0x6F6F6E7265746641;
  v24._object = (void *)0xE90000000000006ELL;
  v25 = TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  LOBYTE(v83) = 3;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v87, v25._countAndFlagsBits, v25._object, 0, &v83, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v26 = v88;
  v27 = v89;
  *(_OWORD *)(v3 + 224) = v87;
  *(_QWORD *)(v3 + 240) = v26;
  *(_QWORD *)(v3 + 248) = v27;
  *(_OWORD *)(v3 + 256) = v90;
  v28._object = (void *)0x800000010056A3C0;
  v29._object = (void *)0x800000010056A3E0;
  v28._countAndFlagsBits = 0xD00000000000001FLL;
  v30._countAndFlagsBits = 0x676E696E657645;
  v30._object = (void *)0xE700000000000000;
  v29._countAndFlagsBits = 0xD00000000000002ELL;
  v31 = TTRLocalizedString(_:value:comment:)(v28, v30, v29);
  LOBYTE(v79) = 4;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v83, v31._countAndFlagsBits, v31._object, 0, &v79, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v32 = v84;
  v33 = v85;
  *(_OWORD *)(v3 + 272) = v83;
  *(_QWORD *)(v3 + 288) = v32;
  *(_QWORD *)(v3 + 296) = v33;
  *(_OWORD *)(v3 + 304) = v86;
  v34._countAndFlagsBits = 0xD00000000000001DLL;
  v35._countAndFlagsBits = 0xD00000000000002CLL;
  v34._object = (void *)0x800000010056A410;
  v35._object = (void *)0x800000010056A430;
  v36._countAndFlagsBits = 0x746867694ELL;
  v36._object = (void *)0xE500000000000000;
  v37 = TTRLocalizedString(_:value:comment:)(v34, v36, v35);
  LOBYTE(v75) = 5;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v79, v37._countAndFlagsBits, v37._object, 0, &v75, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v38 = v80;
  v39 = v81;
  *(_OWORD *)(v3 + 320) = v79;
  *(_QWORD *)(v3 + 336) = v38;
  *(_QWORD *)(v3 + 344) = v39;
  *(_OWORD *)(v3 + 352) = v82;
  *(_OWORD *)(v3 + 368) = 0u;
  v40._countAndFlagsBits = 0xD00000000000001ELL;
  *(_OWORD *)(v3 + 384) = 0u;
  *(_OWORD *)(v3 + 400) = 0u;
  v40._object = (void *)0x800000010056A460;
  v41._object = (void *)0x800000010056A480;
  v42._countAndFlagsBits = 0x656D6954206F4ELL;
  v42._object = (void *)0xE700000000000000;
  v41._countAndFlagsBits = 0xD00000000000002ELL;
  v43 = TTRLocalizedString(_:value:comment:)(v40, v42, v41);
  v74 = 6;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v75, v43._countAndFlagsBits, v43._object, 0, &v74, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
  v44 = v76;
  v45 = v77;
  *(_OWORD *)(v3 + 416) = v75;
  *(_QWORD *)(v3 + 432) = v44;
  *(_QWORD *)(v3 + 440) = v45;
  *(_OWORD *)(v3 + 448) = v78;
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v46);

  v48 = static TTRListColors.SmartList.today.getter();
  v49 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v47, 0, v48);
  v51 = v50;
  v53 = v52;
  v54._countAndFlagsBits = 0xD000000000000017;
  v54._object = (void *)0x800000010056A4B0;
  v55._countAndFlagsBits = 1701669204;
  v55._object = (void *)0xE400000000000000;
  v56._countAndFlagsBits = 0x6E207265746C6946;
  v56._object = (void *)0xEB00000000656D61;
  v57 = TTRLocalizedString(_:value:comment:)(v54, v55, v56);
  *(_QWORD *)&v67 = v49;
  *((_QWORD *)&v67 + 1) = v51;
  v68 = v53;
  countAndFlagsBits = v57._countAndFlagsBits;
  object = (unint64_t)v57._object;
  v71 = 0;
  v72 = v3;
  v73 = 0;
  v58 = objc_allocWithZone((Class)sub_10002A750(&qword_10064ABF0));
  v59 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v67, 0, 0);
  v60 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16, a1);
  v61 = swift_allocObject(&unk_1005F5BE8, 32, 7);
  *(_QWORD *)(v61 + 16) = sub_1001CD484;
  *(_QWORD *)(v61 + 24) = v60;
  v62 = (_QWORD *)((char *)v59 + *(_QWORD *)((swift_isaMask & *v59) + 0x100));
  swift_beginAccess(v62, &v67, 1, 0);
  v63 = *v62;
  v64 = v62[1];
  *v62 = (uint64_t)sub_1001CD634;
  v62[1] = v61;
  sub_1000381B8(v63, v64);
  v65 = sub_10002A750(&qword_10064ABF8);
  swift_allocObject(v65, 73, 7);
  return TTRITableCell.init(_:)(v59);
}

uint64_t sub_1001C5190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  id v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v62;
  uint64_t v63;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v66;
  uint64_t v67;
  __int16 v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int8 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  unsigned __int8 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  unsigned __int8 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  unsigned __int8 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  unsigned __int8 v88;
  __int128 v89;

  v2 = sub_10002A750(&qword_10064AB98);
  v3 = swift_allocObject(v2, 416, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100523750;
  v4._object = (void *)0x8000000100569E70;
  v5._object = (void *)0x8000000100569EA0;
  v4._countAndFlagsBits = 0xD000000000000021;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v5._countAndFlagsBits = 0xD000000000000030;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v86) = 0;
  sub_1001CCDFC();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v62, v7._countAndFlagsBits, v7._object, 0, &v86, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v8 = v63;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v62;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x8000000100569EE0;
  v11._object = (void *)0x8000000100569F10;
  v10._countAndFlagsBits = 0xD000000000000021;
  v12._countAndFlagsBits = 7958081;
  v12._object = (void *)0xE300000000000000;
  v11._countAndFlagsBits = 0xD000000000000030;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v82) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v86, v13._countAndFlagsBits, v13._object, 0, &v82, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v14 = v87;
  v15 = v88;
  *(_OWORD *)(v3 + 128) = v86;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v89;
  v16._object = (void *)0x8000000100569F50;
  v17._object = (void *)0x8000000100569F80;
  v16._countAndFlagsBits = 0xD000000000000021;
  v18._countAndFlagsBits = 7827276;
  v18._object = (void *)0xE300000000000000;
  v17._countAndFlagsBits = 0xD000000000000030;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  LOBYTE(v78) = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v82, v19._countAndFlagsBits, v19._object, 0, &v78, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v20 = v83;
  v21 = v84;
  *(_OWORD *)(v3 + 176) = v82;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v85;
  v22._countAndFlagsBits = 0xD000000000000024;
  v23._countAndFlagsBits = 0xD000000000000033;
  v22._object = (void *)0x8000000100569FC0;
  v23._object = (void *)0x8000000100569FF0;
  v24._countAndFlagsBits = 0x6D756964654DLL;
  v24._object = (void *)0xE600000000000000;
  v25 = TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  LOBYTE(v74) = 3;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v78, v25._countAndFlagsBits, v25._object, 0, &v74, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v26 = v79;
  v27 = v80;
  *(_OWORD *)(v3 + 224) = v78;
  *(_QWORD *)(v3 + 240) = v26;
  *(_QWORD *)(v3 + 248) = v27;
  *(_OWORD *)(v3 + 256) = v81;
  v28._countAndFlagsBits = 0xD000000000000022;
  v29._countAndFlagsBits = 0xD000000000000031;
  v28._object = (void *)0x800000010056A030;
  v29._object = (void *)0x800000010056A060;
  v30._countAndFlagsBits = 1751607624;
  v30._object = (void *)0xE400000000000000;
  v31 = TTRLocalizedString(_:value:comment:)(v28, v30, v29);
  LOBYTE(v70) = 4;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v74, v31._countAndFlagsBits, v31._object, 0, &v70, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v32 = v75;
  v33 = v76;
  *(_OWORD *)(v3 + 272) = v74;
  *(_QWORD *)(v3 + 288) = v32;
  *(_QWORD *)(v3 + 296) = v33;
  *(_OWORD *)(v3 + 304) = v77;
  *(_OWORD *)(v3 + 320) = 0u;
  v34._countAndFlagsBits = 0xD000000000000029;
  v35._countAndFlagsBits = 0xD000000000000038;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  v34._object = (void *)0x800000010056A0A0;
  v35._object = (void *)0x800000010056A0D0;
  v36._countAndFlagsBits = 0x726F697250206F4ELL;
  v36._object = (void *)0xEB00000000797469;
  v37 = TTRLocalizedString(_:value:comment:)(v34, v36, v35);
  v69 = 5;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v70, v37._countAndFlagsBits, v37._object, 0, &v69, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  v38 = v71;
  v39 = v72;
  *(_OWORD *)(v3 + 368) = v70;
  *(_QWORD *)(v3 + 384) = v38;
  *(_QWORD *)(v3 + 392) = v39;
  *(_OWORD *)(v3 + 400) = v73;
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v40);

  v42 = *(void **)TTRCommonAsset.Color.remindersColor1.unsafeMutableAddressor();
  v43 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v41, 0, v42);
  v45 = v44;
  v47 = v46;
  v48 = v42;
  v49._countAndFlagsBits = 0xD00000000000001BLL;
  v49._object = (void *)0x800000010056A110;
  v50._countAndFlagsBits = 0x797469726F697250;
  v50._object = (void *)0xE800000000000000;
  v51._countAndFlagsBits = 0x6E207265746C6946;
  v51._object = (void *)0xEB00000000656D61;
  v52 = TTRLocalizedString(_:value:comment:)(v49, v50, v51);
  *(_QWORD *)&v62 = v43;
  *((_QWORD *)&v62 + 1) = v45;
  v63 = v47;
  countAndFlagsBits = v52._countAndFlagsBits;
  object = (unint64_t)v52._object;
  v66 = 0;
  v67 = v3;
  v68 = 0;
  v53 = objc_allocWithZone((Class)sub_10002A750(&qword_10064ABA8));
  v54 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v62, 0, 0);
  v55 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, a1);
  v56 = swift_allocObject(&unk_1005F5B98, 32, 7);
  *(_QWORD *)(v56 + 16) = sub_1001CCE40;
  *(_QWORD *)(v56 + 24) = v55;
  v57 = (_QWORD *)((char *)v54 + *(_QWORD *)((swift_isaMask & *v54) + 0x100));
  swift_beginAccess(v57, &v62, 1, 0);
  v58 = *v57;
  v59 = v57[1];
  *v57 = (uint64_t)sub_1001CD634;
  v57[1] = v56;
  sub_1000381B8(v58, v59);
  v60 = sub_10002A750(&qword_10064ABB0);
  swift_allocObject(v60, 73, 7);
  return TTRITableCell.init(_:)(v54);
}

uint64_t sub_1001C56F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v43;
  uint64_t v44;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  unsigned __int8 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unsigned __int8 v57;
  __int128 v58;

  v2 = sub_10002A750(&qword_10064ABB8);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005275D0;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  v5._countAndFlagsBits = 0xD00000000000002DLL;
  v4._object = (void *)0x800000010056A130;
  v5._object = (void *)0x800000010056A150;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v55) = 0;
  sub_1001CCE60();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v43, v7._countAndFlagsBits, v7._object, 0, &v55, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions);
  v8 = v44;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v43;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  v10._countAndFlagsBits = 0xD000000000000022;
  v11._countAndFlagsBits = 0xD000000000000031;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x800000010056A180;
  v11._object = (void *)0x800000010056A1B0;
  v12._countAndFlagsBits = 0x64656767616C46;
  v12._object = (void *)0xE700000000000000;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v51) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v55, v13._countAndFlagsBits, v13._object, 0, &v51, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions);
  v14 = v56;
  v15 = v57;
  *(_OWORD *)(v3 + 128) = v55;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v58;
  v16._countAndFlagsBits = 0xD000000000000026;
  v17._countAndFlagsBits = 0xD000000000000035;
  v16._object = (void *)0x800000010056A1F0;
  v17._object = (void *)0x800000010056A220;
  v18._countAndFlagsBits = 0x67616C4620746F4ELL;
  v18._object = (void *)0xEB00000000646567;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  v50 = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v51, v19._countAndFlagsBits, v19._object, 0, &v50, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions);
  v20 = v52;
  v21 = v53;
  *(_OWORD *)(v3 + 176) = v51;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v54;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v22);

  v24 = static TTRListColors.SmartList.flagged.getter();
  v25 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v23, 0, v24);
  v27 = v26;
  v29 = v28;
  v30._object = (void *)0x8000000100563250;
  v30._countAndFlagsBits = 0xD000000000000017;
  v31._countAndFlagsBits = 1734437958;
  v31._object = (void *)0xE400000000000000;
  v32._countAndFlagsBits = 0x6E207265746C6946;
  v32._object = (void *)0xEB00000000656D61;
  v33 = TTRLocalizedString(_:value:comment:)(v30, v31, v32);
  *(_QWORD *)&v43 = v25;
  *((_QWORD *)&v43 + 1) = v27;
  v44 = v29;
  countAndFlagsBits = v33._countAndFlagsBits;
  object = (unint64_t)v33._object;
  v47 = 0;
  v48 = v3;
  v49 = 0;
  v34 = objc_allocWithZone((Class)sub_10002A750(&qword_10064ABC8));
  v35 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v43, 0, 0);
  v36 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, a1);
  v37 = swift_allocObject(&unk_1005F5BC0, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1001CCEA4;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = (_QWORD *)((char *)v35 + *(_QWORD *)((swift_isaMask & *v35) + 0x100));
  swift_beginAccess(v38, &v43, 1, 0);
  v39 = *v38;
  v40 = v38[1];
  *v38 = (uint64_t)sub_1001CD634;
  v38[1] = v37;
  sub_1000381B8(v39, v40);
  v41 = sub_10002A750(&qword_10064ABD0);
  swift_allocObject(v41, 73, 7);
  return TTRITableCell.init(_:)(v35);
}

uint64_t sub_1001C5AB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v43;
  uint64_t v44;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  unsigned __int8 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unsigned __int8 v57;
  __int128 v58;

  v2 = sub_10002A750(&qword_10064AB30);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005275D0;
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  v5._countAndFlagsBits = 0xD00000000000002ELL;
  v4._object = (void *)0x8000000100569B50;
  v5._object = (void *)0x8000000100569B70;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v55) = 0;
  sub_1001CC53C();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v43, v7._countAndFlagsBits, v7._object, 0, &v55, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions);
  v8 = v44;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v43;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  v10._countAndFlagsBits = 0xD000000000000024;
  v11._countAndFlagsBits = 0xD000000000000033;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x8000000100569BA0;
  v11._object = (void *)0x8000000100569BD0;
  v12._countAndFlagsBits = 0x6369666963657053;
  v12._object = (void *)0xE800000000000000;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v51) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v55, v13._countAndFlagsBits, v13._object, 0, &v51, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions);
  v14 = v56;
  v15 = v57;
  *(_OWORD *)(v3 + 128) = v55;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v58;
  v16._countAndFlagsBits = 0xD000000000000027;
  v17._countAndFlagsBits = 0xD000000000000036;
  v16._object = (void *)0x8000000100569C10;
  v17._object = (void *)0x8000000100569C40;
  v18._countAndFlagsBits = 0x7461636F4C206F4ELL;
  v18._object = (void *)0xEB000000006E6F69;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  v50 = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v51, v19._countAndFlagsBits, v19._object, 0, &v50, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions);
  v20 = v52;
  v21 = v53;
  *(_OWORD *)(v3 + 176) = v51;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v54;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v22);

  v24 = objc_msgSend((id)objc_opt_self(UIColor), "ttr_systemBlueColor");
  v25 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v23, 0, v24);
  v27 = v26;
  v29 = v28;
  v30._object = (void *)0x8000000100569C80;
  v30._countAndFlagsBits = 0xD00000000000001BLL;
  v31._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v31._object = (void *)0xE800000000000000;
  v32._countAndFlagsBits = 0x6E207265746C6946;
  v32._object = (void *)0xEB00000000656D61;
  v33 = TTRLocalizedString(_:value:comment:)(v30, v31, v32);
  *(_QWORD *)&v43 = v25;
  *((_QWORD *)&v43 + 1) = v27;
  v44 = v29;
  countAndFlagsBits = v33._countAndFlagsBits;
  object = (unint64_t)v33._object;
  v47 = 0;
  v48 = v3;
  v49 = 256;
  v34 = objc_allocWithZone((Class)sub_10002A750(&qword_10064AB40));
  v35 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v43, 0, 0);
  v36 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, a1);
  v37 = swift_allocObject(&unk_1005F5AF8, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1001CC580;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = (_QWORD *)((char *)v35 + *(_QWORD *)((swift_isaMask & *v35) + 0x100));
  swift_beginAccess(v38, &v43, 1, 0);
  v39 = *v38;
  v40 = v38[1];
  *v38 = (uint64_t)sub_1001CD634;
  v38[1] = v37;
  sub_1000381B8(v39, v40);
  v41 = sub_10002A750(&qword_10064AB48);
  swift_allocObject(v41, 73, 7);
  return TTRITableCell.init(_:)(v35);
}

uint64_t sub_1001C5EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (char *)result;
    UIViewController.endFirstResponderEditing()();
    v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
    swift_unknownObjectRetain(v6);
    sub_1002E3640(a1);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001C5F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v4);
    sub_1002E3898(1);

    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_1001C5F98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v56;
  uint64_t v57;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  unsigned __int8 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  unsigned __int8 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  unsigned __int8 v78;
  __int128 v79;

  v2 = sub_10002A750(&qword_10064AAB0);
  v3 = swift_allocObject(v2, 368, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100520EB0;
  v4._countAndFlagsBits = 0xD000000000000029;
  v5._object = (void *)0x80000001005694F0;
  v4._object = (void *)0x8000000100569510;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v7 = TTRLocalizedString(_:value:comment:)(v5, v6, v4);
  LOBYTE(v76) = 0;
  sub_1001CB5B4();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v56, v7._countAndFlagsBits, v7._object, 0, &v76, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  v8 = v57;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v56;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x8000000100569540;
  v11._object = (void *)0x8000000100569560;
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  v12._countAndFlagsBits = 0x67615420796E41;
  v12._object = (void *)0xE700000000000000;
  v11._countAndFlagsBits = 0xD00000000000002DLL;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v72) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v76, v13._countAndFlagsBits, v13._object, 0, &v72, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  v14 = v77;
  v15 = v78;
  *(_OWORD *)(v3 + 128) = v76;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v79;
  v16._countAndFlagsBits = 0xD000000000000023;
  v17._countAndFlagsBits = 0xD000000000000037;
  v16._object = (void *)0x8000000100569590;
  v18._object = (void *)0x80000001005695C0;
  v17._object = (void *)0x80000001005695E0;
  v18._countAndFlagsBits = 0xD000000000000011;
  v19 = TTRLocalizedString(_:value:comment:)(v16, v18, v17);
  LOBYTE(v68) = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v72, v19._countAndFlagsBits, v19._object, 0, &v68, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  v20 = v73;
  v21 = v74;
  *(_OWORD *)(v3 + 176) = v72;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v75;
  v22._countAndFlagsBits = 0xD000000000000022;
  v23._countAndFlagsBits = 0xD000000000000038;
  v22._object = (void *)0x8000000100569620;
  v24._object = (void *)0x8000000100569650;
  v23._object = (void *)0x8000000100569670;
  v24._countAndFlagsBits = 0xD000000000000011;
  v25 = TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  LOBYTE(v64) = 3;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v68, v25._countAndFlagsBits, v25._object, 0, &v64, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  v26 = v69;
  v27 = v70;
  *(_OWORD *)(v3 + 224) = v68;
  *(_QWORD *)(v3 + 240) = v26;
  *(_QWORD *)(v3 + 248) = v27;
  *(_OWORD *)(v3 + 256) = v71;
  *(_OWORD *)(v3 + 272) = 0u;
  v28._countAndFlagsBits = 0xD00000000000001FLL;
  *(_OWORD *)(v3 + 288) = 0u;
  *(_OWORD *)(v3 + 304) = 0u;
  v28._object = (void *)0x80000001005696B0;
  v29._object = (void *)0x80000001005696D0;
  v30._countAndFlagsBits = 0x73676154206F4ELL;
  v30._object = (void *)0xE700000000000000;
  v29._countAndFlagsBits = 0xD00000000000002DLL;
  v31 = TTRLocalizedString(_:value:comment:)(v28, v30, v29);
  v63 = 4;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v64, v31._countAndFlagsBits, v31._object, 0, &v63, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  v32 = v65;
  v33 = v66;
  *(_OWORD *)(v3 + 320) = v64;
  *(_QWORD *)(v3 + 336) = v32;
  *(_QWORD *)(v3 + 344) = v33;
  *(_OWORD *)(v3 + 352) = v67;
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v34);

  v36 = *(void **)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
  v37 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v35, 0, v36);
  v39 = v38;
  v41 = v40;
  v42 = v36;
  v43._countAndFlagsBits = 0xD00000000000001BLL;
  v43._object = (void *)0x8000000100569700;
  v44._countAndFlagsBits = 1936154964;
  v44._object = (void *)0xE400000000000000;
  v45._countAndFlagsBits = 0x6E207265746C6946;
  v45._object = (void *)0xEB00000000656D61;
  v46 = TTRLocalizedString(_:value:comment:)(v43, v44, v45);
  *(_QWORD *)&v56 = v37;
  *((_QWORD *)&v56 + 1) = v39;
  v57 = v41;
  countAndFlagsBits = v46._countAndFlagsBits;
  object = (unint64_t)v46._object;
  v60 = 0;
  v61 = v3;
  v62 = 0;
  v47 = objc_allocWithZone((Class)sub_10002A750(&qword_10064AAC0));
  v48 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v56, 0, 0);
  v49 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, a1);
  v50 = swift_allocObject(&unk_1005F5AA8, 32, 7);
  *(_QWORD *)(v50 + 16) = sub_1001CB61C;
  *(_QWORD *)(v50 + 24) = v49;
  v51 = (_QWORD *)((char *)v48 + *(_QWORD *)((swift_isaMask & *v48) + 0x100));
  swift_beginAccess(v51, &v56, 1, 0);
  v52 = *v51;
  v53 = v51[1];
  *v51 = (uint64_t)sub_1001CD634;
  v51[1] = v50;
  sub_1000381B8(v52, v53);
  v54 = sub_10002A750(&qword_10064AAC8);
  swift_allocObject(v54, 73, 7);
  return TTRITableCell.init(_:)(v48);
}

uint64_t sub_1001C647C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (char *)result;
    UIViewController.endFirstResponderEditing()();
    v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
    v9 = *(unsigned __int8 *)(a1 + 64);
    swift_unknownObjectRetain(v8);
    a3(v9);

    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1001C6508(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRIHashtagCollectionCellContentState(0, v3);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v30[-v10 - 8];
  static REMHashtagLabelSpecifier.labels(_:)(&_swiftEmptySetSingleton);
  TTRIHashtagCollectionCellContentState.init(selection:hashtagLabels:allTagsButtonState:addTagButtonState:allowsExcludedSelection:maxRowCount:)(v5, _swiftEmptyArrayStorage, 0, 0, 0, 1, 3, 0);
  sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIHashtagCollectionCellContentState);
  v12 = objc_allocWithZone((Class)type metadata accessor for TTRIHashtagCollectionCellContent(0));
  v13 = TTRIHashtagCollectionCellContent.init(state:)(v8);
  v14 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a1);
  v15 = (uint64_t *)(v13 + direct field offset for TTRIHashtagCollectionCellContent.stateChangeBlock);
  swift_beginAccess(v13 + direct field offset for TTRIHashtagCollectionCellContent.stateChangeBlock, v32, 1, 0);
  v16 = *v15;
  v17 = v15[1];
  *v15 = (uint64_t)sub_1001CB644;
  v15[1] = v14;
  sub_1000381B8(v16, v17);
  v18 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  v19 = (uint64_t *)(v13 + direct field offset for TTRIHashtagCollectionCellContent.layoutResultDidChange);
  swift_beginAccess(v13 + direct field offset for TTRIHashtagCollectionCellContent.layoutResultDidChange, v31, 1, 0);
  v20 = *v19;
  v21 = v19[1];
  *v19 = (uint64_t)sub_1001CB64C;
  v19[1] = v18;
  sub_1000381B8(v20, v21);
  v22 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a1);
  v23 = (uint64_t *)(v13 + direct field offset for TTRIHashtagCollectionCellContent.requestAddTag);
  swift_beginAccess(v13 + direct field offset for TTRIHashtagCollectionCellContent.requestAddTag, v30, 1, 0);
  v24 = *v23;
  v25 = v23[1];
  *v23 = (uint64_t)sub_1001CB654;
  v23[1] = v22;
  sub_1000381B8(v24, v25);
  v26 = sub_10002A750(&qword_10064AAD8);
  swift_allocObject(v26, 73, 7);
  v27 = TTRITableCell.init(_:)(v13);
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIHashtagCollectionCellContentState);
  return v27;
}

uint64_t sub_1001C6784(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v6);

    sub_1002E4300(a1);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001C6804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  BOOL v9;
  Swift::String v10;
  _BYTE v11[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v8);

    if ((*(_BYTE *)(v8 + 312) & 1) != 0
      || (*(_QWORD *)(v8 + 296) == a1 ? (v9 = *(_QWORD *)(v8 + 304) == a2) : (v9 = 0), !v9))
    {
      *(_QWORD *)(v8 + 296) = a1;
      *(_QWORD *)(v8 + 304) = a2;
      *(_BYTE *)(v8 + 312) = 0;
      v10._object = (void *)0x8000000100560820;
      v10._countAndFlagsBits = 0xD000000000000011;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v10);
    }
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_1001C68C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v4);

    v5 = sub_1002E5330();
    v6 = sub_10001413C((_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 144));
    v7 = (void *)swift_unknownObjectWeakLoadStrong(*v6 + 16);
    if (v7
      && (v8 = v7,
          v9 = objc_msgSend(v7, "navigationController"),
          v8,
          v9))
    {
      objc_msgSend(v9, "presentViewController:animated:completion:", v5, 1, 0);
      swift_unknownObjectRelease(v4);

      v5 = v9;
    }
    else
    {
      swift_unknownObjectRelease(v4);
    }

  }
}

uint64_t sub_1001C69AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v4);

    if (qword_10063D600 != -1)
      swift_once(&qword_10063D600, sub_1002DEFBC);
    v5 = type metadata accessor for Logger(0);
    sub_100012DC4(v5, (uint64_t)qword_100654AF0);
    v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"List Detail toggle show all hashtags", 36, 2, v6);
    swift_bridgeObjectRelease(v6);
    *(_BYTE *)(v4 + 313) = (*(_BYTE *)(v4 + 313) & 1) == 0;
    v7._object = (void *)0x8000000100560820;
    v7._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v7);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_1001C6ABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v43;
  uint64_t v44;
  uint64_t countAndFlagsBits;
  __int128 object;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  unsigned __int8 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unsigned __int8 v57;
  __int128 v58;

  v2 = sub_10002A750(&qword_10064AB60);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005275D0;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  v4._object = (void *)0x8000000100569CA0;
  v5._object = (void *)0x8000000100569CC0;
  v6._countAndFlagsBits = 6710863;
  v6._object = (void *)0xE300000000000000;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v55) = 0;
  sub_1001CC5B0();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v43, v7._countAndFlagsBits, v7._object, 0, &v55, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions);
  v8 = v44;
  v9 = countAndFlagsBits;
  *(_OWORD *)(v3 + 32) = v43;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = object;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  v10._object = (void *)0x8000000100569CF0;
  v11._object = (void *)0x8000000100569D20;
  v10._countAndFlagsBits = 0xD000000000000020;
  v12._countAndFlagsBits = 0x6564756C636E49;
  v12._object = (void *)0xE700000000000000;
  v11._countAndFlagsBits = 0xD00000000000002FLL;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  LOBYTE(v51) = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v55, v13._countAndFlagsBits, v13._object, 0, &v51, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions);
  v14 = v56;
  v15 = v57;
  *(_OWORD *)(v3 + 128) = v55;
  *(_QWORD *)(v3 + 144) = v14;
  *(_QWORD *)(v3 + 152) = v15;
  *(_OWORD *)(v3 + 160) = v58;
  v16._countAndFlagsBits = 0x6564756C637845;
  v17._object = (void *)0x8000000100569D50;
  v18._object = (void *)0x8000000100569D80;
  v17._countAndFlagsBits = 0xD000000000000020;
  v16._object = (void *)0xE700000000000000;
  v18._countAndFlagsBits = 0xD00000000000002FLL;
  v19 = TTRLocalizedString(_:value:comment:)(v17, v16, v18);
  v50 = 2;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v51, v19._countAndFlagsBits, v19._object, 0, &v50, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions);
  v20 = v52;
  v21 = v53;
  *(_OWORD *)(v3 + 176) = v51;
  *(_QWORD *)(v3 + 192) = v20;
  *(_QWORD *)(v3 + 200) = v21;
  *(_OWORD *)(v3 + 208) = v54;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v22);

  v24 = objc_msgSend((id)objc_opt_self(UIColor), "systemCyanColor");
  v25 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v23, 0, v24);
  v27 = v26;
  v29 = v28;
  v30._countAndFlagsBits = 0xD000000000000018;
  v30._object = (void *)0x8000000100569DB0;
  v31._countAndFlagsBits = 0x737473694CLL;
  v31._object = (void *)0xE500000000000000;
  v32._countAndFlagsBits = 0x6E207265746C6946;
  v32._object = (void *)0xEB00000000656D61;
  v33 = TTRLocalizedString(_:value:comment:)(v30, v31, v32);
  *(_QWORD *)&v43 = v25;
  *((_QWORD *)&v43 + 1) = v27;
  v44 = v29;
  countAndFlagsBits = v33._countAndFlagsBits;
  object = (unint64_t)v33._object;
  v47 = 0;
  v48 = v3;
  v49 = 0;
  v34 = objc_allocWithZone((Class)sub_10002A750(&qword_10064AB70));
  v35 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(&v43, 0, 0);
  v36 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, a1);
  v37 = swift_allocObject(&unk_1005F5B20, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1001CC5F4;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = (_QWORD *)((char *)v35 + *(_QWORD *)((swift_isaMask & *v35) + 0x100));
  swift_beginAccess(v38, &v43, 1, 0);
  v39 = *v38;
  v40 = v38[1];
  *v38 = (uint64_t)sub_1001CD634;
  v38[1] = v37;
  sub_1000381B8(v39, v40);
  v41 = sub_10002A750(&qword_10064AB78);
  swift_allocObject(v41, 73, 7);
  return TTRITableCell.init(_:)(v35);
}

void sub_1001C6EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  char v7;
  uint64_t v8;
  int v9;
  _BYTE v10[24];
  _OWORD v11[2];
  uint64_t v12;
  __int128 v13;
  char v14;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    UIViewController.endFirstResponderEditing()();
    v6 = v5;
    v7 = UIViewController.isIPadIdiom.getter(v6);

    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
    v9 = *(unsigned __int8 *)(a1 + 64);
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v13 = xmmword_1005218A0;
    v14 = 0;
    swift_unknownObjectRetain(v8);
    if ((v7 & 1) != 0)
    {
      sub_1002E490C(v9, (uint64_t)v11, 0);
      swift_unknownObjectRelease(v8);

    }
    else
    {
      sub_1002E490C(v9, (uint64_t)v11, 1);

      swift_unknownObjectRelease(v8);
    }
  }
}

uint64_t sub_1001C6FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];
  _OWORD v6[2];
  uint64_t v7;
  __int128 v8;
  char v9;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    memset(v6, 0, sizeof(v6));
    v7 = 0;
    v8 = xmmword_1005218A0;
    v9 = 0;
    swift_unknownObjectRetain(v4);
    sub_1002E490C(3, (uint64_t)v6, 1);

    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_1001C7040(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _QWORD v32[5];
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  _QWORD v36[7];
  char v37;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = a2 + 16;
    swift_beginAccess(v6, v30, 0, 0);
    v7 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = v7;
      v9 = (_QWORD *)((char *)v7 + *(_QWORD *)((swift_isaMask & *v7) + 0x68));
      v10 = swift_beginAccess(v9, v29, 0, 0);
      if (*v9 && (v11 = TTRIStaticTableViewStandardCell.extraAccessoryView.getter(v10)) != 0)
      {
        v13 = (void *)v11;
        swift_unknownObjectRelease(v12);
        static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v32, v13, 0, 1, v14);
        v15 = (void *)v32[0];
        v16 = v32[1];
        v17 = v32[2];
        v18 = v32[3];
        v19 = v32[4];
        v27 = v33;
        v20 = v34;
        v21 = v35;

        v22 = v27;
      }
      else
      {
        v15 = 0;
        v16 = 0;
        v17 = 0;
        v18 = 0;
        v19 = 0;
        v20 = 0;
        v21 = 0;
        v22 = 254;
      }
      v26 = v18;
      v36[0] = v15;
      v36[1] = v16;
      v36[2] = v17;
      v36[3] = v18;
      v36[4] = v19;
      v36[5] = v22;
      v36[6] = v20;
      v37 = v21;
      v23 = v22;
      v24 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsOptionsCell, sub_1001C6ABC)+ 32);
      swift_release();
      v25 = (char *)v24 + *(_QWORD *)((swift_isaMask & *v24) + 0x78);
      swift_beginAccess(v25, v28, 0, 0);
      LODWORD(v25) = v25[64];

      sub_1002E490C((int)v25, (uint64_t)v36, 0);
      sub_1000866B0(v15, v16, v17, v26, v19, v23);
    }

  }
}

uint64_t sub_1001C7250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  __int128 v31;
  uint64_t v32;
  unsigned __int8 v33;
  __int128 v34;
  Swift::String v35;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;

  v2 = sub_10002A750(&qword_10064AC18);
  v3 = swift_allocObject(v2, 128, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005201E0;
  v4._object = (void *)0x800000010056A4D0;
  v5._object = (void *)0x800000010056A4F0;
  v4._countAndFlagsBits = 0xD000000000000016;
  v6._countAndFlagsBits = 7958113;
  v6._object = (void *)0xE300000000000000;
  v5._countAndFlagsBits = 0xD000000000000045;
  v7 = TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  LOBYTE(v31) = 0;
  sub_1001CD574();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v35, v7._countAndFlagsBits, v7._object, 0, &v31, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions);
  v8 = v36;
  v9 = v37;
  *(Swift::String *)(v3 + 32) = v35;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_OWORD *)(v3 + 64) = v38;
  v10._object = (void *)0x800000010056A540;
  v11._object = (void *)0x800000010056A560;
  v10._countAndFlagsBits = 0xD000000000000016;
  v12._countAndFlagsBits = 7105633;
  v12._object = (void *)0xE300000000000000;
  v11._countAndFlagsBits = 0xD000000000000044;
  v13 = TTRLocalizedString(_:value:comment:)(v10, v12, v11);
  v30 = 1;
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v31, v13._countAndFlagsBits, v13._object, 0, &v30, 0, 0, &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions);
  v14 = v32;
  v15 = v33;
  *(_OWORD *)(v3 + 80) = v31;
  *(_QWORD *)(v3 + 96) = v14;
  *(_QWORD *)(v3 + 104) = v15;
  *(_OWORD *)(v3 + 112) = v34;
  v16._countAndFlagsBits = 0xD000000000000194;
  v17._object = (void *)0x800000010056A5B0;
  v18._object = (void *)0x800000010056A600;
  v16._object = (void *)0x800000010056A650;
  v17._countAndFlagsBits = 0xD000000000000045;
  v18._countAndFlagsBits = 0xD000000000000044;
  v19 = TTRLocalizedString(_:value:comment:)(v17, v18, v16);
  v20 = (char *)objc_allocWithZone((Class)sub_10002A750(&qword_10064AC28));
  v21 = &v20[*(_QWORD *)((swift_isaMask & *(_QWORD *)v20) + 0xF8)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v35 = v19;
  v36 = v3;
  v37 = 1;
  v22 = (_QWORD *)TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(&v35, 0, 0xD000000000000012, 0x800000010056A7F0);
  v23 = swift_allocObject(&unk_1005F5A80, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, a1);
  v24 = swift_allocObject(&unk_1005F5C10, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_1001CD5B8;
  *(_QWORD *)(v24 + 24) = v23;
  v25 = (_QWORD *)((char *)v22 + *(_QWORD *)((swift_isaMask & *v22) + 0xF8));
  swift_beginAccess(v25, &v35, 1, 0);
  v26 = *v25;
  v27 = v25[1];
  *v25 = (uint64_t)sub_1001CD5C4;
  v25[1] = v24;
  sub_1000381B8(v26, v27);
  v28 = sub_10002A750((uint64_t *)&unk_10064AC30);
  swift_allocObject(v28, 73, 7);
  return TTRITableCell.init(_:)(v22);
}

uint64_t sub_1001C753C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t result;
  char *v8;
  char v9;
  uint64_t v10;
  _BYTE v11[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (char *)result;
    v9 = a4 & 1;
    UIViewController.endFirstResponderEditing()();
    v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
    swift_unknownObjectRetain(v10);
    sub_1002DFFD0(v9);

    return swift_unknownObjectRelease(v10);
  }
  return result;
}

void sub_1001C75C4(uint64_t a1)
{
  uint64_t v2;
  int v3;
  _QWORD *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  _QWORD *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v50;
  id v51;
  BOOL v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56[24];
  id v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  BOOL v65;
  char v66[24];

  v2 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  v3 = *(unsigned __int8 *)(a1 + *(int *)(v2 + 28));
  v54 = a1;
  if (*(_BYTE *)(a1 + *(int *)(v2 + 28)))
    sub_1001C1008(3u);
  else
    sub_1001C1750(3u);
  v52 = v3 != 0;
  v4 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationOptionsCell, sub_1001C5AB4)+ 32);
  swift_release();
  v5 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78);
  swift_beginAccess(v5, v66, 0, 0);
  v6 = (void *)*((_QWORD *)v5 + 1);
  v8 = *((_QWORD *)v5 + 4);
  v7 = *((_QWORD *)v5 + 5);
  v9 = *((_QWORD *)v5 + 6);
  v10 = *((_QWORD *)v5 + 7);
  v11 = v5[65];
  v12 = *((_OWORD *)v5 + 1);
  v57 = *(id *)v5;
  v58 = (uint64_t)v6;
  v59 = v12;
  v60 = v8;
  v61 = v7;
  v62 = v9;
  v63 = v10;
  v64 = v3;
  v65 = v11;
  sub_1000DDA1C(v57, v6, (void *)v12);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v8);
  TTRITableCellContent.state.setter(&v57);

  v13 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationOptionsCell, sub_1001C5AB4)+ 32);
  swift_release();
  v14 = (char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x78);
  swift_beginAccess(v14, v56, 0, 0);
  v15 = (void *)*((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 4);
  v16 = *((_QWORD *)v14 + 5);
  v18 = *((_QWORD *)v14 + 6);
  v19 = *((_QWORD *)v14 + 7);
  v20 = v14[64];
  v21 = *((_OWORD *)v14 + 1);
  v57 = *(id *)v14;
  v58 = (uint64_t)v15;
  v59 = v21;
  v60 = v17;
  v61 = v16;
  v62 = v18;
  v63 = v19;
  v64 = v20;
  v65 = v52;
  sub_1000DDA1C(v57, v15, (void *)v21);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v17);
  TTRITableCellContent.state.setter(&v57);

  v22 = sub_1001C3A88();
  v23 = v22;
  v24 = v54 + *(int *)(v2 + 32);
  v25 = *(_QWORD *)(v24 + 40);
  if (v25)
  {
    v55 = v22;
    v27 = *(void **)v24;
    v26 = *(_QWORD *)(v24 + 8);
    v28 = *(void **)(v24 + 16);
    v29 = *(_QWORD *)(v24 + 24);
    v30 = *(char *)(v24 + 32);
    v31 = *(unsigned __int8 *)(v24 + 48);
    swift_bridgeObjectRetain(v25);
    sub_1001CD3C8((uint64_t)v27, v26, v28, v29, v30);
    sub_1001C02F8();
    TTRITableCell.isHidden.setter(0);
    swift_release();
    sub_1001C042C();
    TTRITableCell.isHidden.setter(0);
    swift_release();
    v32 = *(id *)(sub_1001C02F8() + 32);
    swift_release();
    swift_bridgeObjectRetain(v25);
    TTRILocationQuickPickersCellContentState.init(items:selected:ttriAccessiblityProximity:ttriAccessibilityCurrentLocation:)(&v57, v33, v31, 0, 1, 0, 0);
    TTRITableCellContent.state.setter(&v57);

    v34 = swift_bridgeObjectRetain(v26);
    if (v30 < 0)
    {
      v51 = *(id *)(sub_1001C042C() + 32);
      swift_release();
      v57 = v27;
      v58 = v26;
      *(_QWORD *)&v59 = 0;
      BYTE8(v59) = 0;
      TTRITableCellContent.state.setter(&v57);

      v46 = (uint64_t)v27;
      v47 = v26;
      v48 = v28;
      v49 = v29;
      v50 = v30;
    }
    else
    {
      v35 = REMAlarmProximity.localizedLabelFormatString.getter(v29, v34);
      v37 = v36;
      v38 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v39 = swift_allocObject(v38, 72, 7);
      *(_OWORD *)(v39 + 16) = xmmword_100520250;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = sub_1000770A4();
      *(_QWORD *)(v39 + 32) = v27;
      *(_QWORD *)(v39 + 40) = v26;
      v40 = (void *)String.init(format:_:)(v35, v37, v39);
      v53 = v30;
      v41 = v29;
      v42 = v28;
      v44 = v43;
      swift_bridgeObjectRelease(v37);
      v45 = *(id *)(sub_1001C042C() + 32);
      swift_release();
      v57 = v40;
      v58 = v44;
      *(_QWORD *)&v59 = 0;
      BYTE8(v59) = 0;
      TTRITableCellContent.state.setter(&v57);

      v46 = (uint64_t)v27;
      v47 = v26;
      v48 = v42;
      v49 = v41;
      v50 = v53;
    }
    sub_1001CD3F8(v46, v47, v48, v49, v50);
    swift_bridgeObjectRelease(v25);
    v23 = v55;
  }
  else
  {
    sub_1001C02F8();
    TTRITableCell.isHidden.setter(1);
    swift_release();
    sub_1001C042C();
    TTRITableCell.isHidden.setter(1);
    swift_release();
  }
  sub_1001C3D40(v23);
}

double sub_1001C7A18(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  int v12;
  _QWORD *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45[2];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53[24];

  v3 = v2;
  v5 = type metadata accessor for TTRIHashtagCollectionCellContentState(0, a2);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = (int *)type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
  v12 = *((unsigned __int8 *)a1 + v11[6]);
  v43 = v5;
  v44 = v7;
  if (v12)
    sub_1001C1008(0);
  else
    sub_1001C1750(0);
  v13 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagOptionsCell, sub_1001C5F98)+ 32);
  swift_release();
  v14 = (char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x78);
  swift_beginAccess(v14, v53, 0, 0);
  v15 = (void *)*((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 4);
  v16 = *((_QWORD *)v14 + 5);
  v19 = *((_QWORD *)v14 + 6);
  v18 = *((_QWORD *)v14 + 7);
  v20 = v14[65];
  v21 = *((_OWORD *)v14 + 1);
  v45[0] = *(id *)v14;
  v45[1] = v15;
  v46 = v21;
  v47 = v17;
  v48 = v16;
  v49 = v19;
  v50 = v18;
  v51 = v12;
  v52 = v20;
  sub_1000DDA1C(v45[0], v15, (void *)v21);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v17);
  TTRITableCellContent.state.setter(v45);

  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell, sub_1001C6508);
  if ((v12 & 0xFE) == 2)
  {
    TTRITableCell.isHidden.setter(0);
    swift_release();
    v22 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell, sub_1001C6508)+ 32);
    swift_release();
    v23 = (uint64_t)v22 + *(_QWORD *)((swift_isaMask & *v22) + 0x78);
    swift_beginAccess(v23, v45, 0, 0);
    sub_10002B1E8(v23, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIHashtagCollectionCellContentState);

    v24 = (char *)a1 + v11[5];
    v25 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v10, v24, v25);
    v26 = *a1;
    v27 = v43;
    v28 = *(int *)(v43 + 20);
    v29 = *(_QWORD *)&v10[v28];
    swift_bridgeObjectRetain(*a1);
    swift_bridgeObjectRelease(v29);
    *(_QWORD *)&v10[v28] = v26;
    v30 = (_QWORD *)((char *)a1 + v11[8]);
    if ((v30[2] & 1) != 0 || *v30 < 4 || (v31 = *((unsigned __int8 *)a1 + v11[7]), v31 != 1))
    {
      LOBYTE(v31) = 0;
      v32 = 3;
    }
    else
    {
      v32 = 0;
    }
    v35 = &v10[*(int *)(v27 + 36)];
    *(_QWORD *)v35 = v32;
    v35[8] = v31;
    v36 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell, sub_1001C6508)+ 32);
    swift_release();
    v37 = (uint64_t)v44;
    sub_10002B1E8((uint64_t)v10, (uint64_t)v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIHashtagCollectionCellContentState);
    TTRITableCellContent.state.setter(v37);

    v33 = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIHashtagCollectionCellContentState);
  }
  else
  {
    TTRITableCell.isHidden.setter(1);
    v34 = swift_release();
  }
  v38 = (_QWORD *)((char *)a1 + v11[8]);
  if ((v38[2] & 1) != 0 || *v38 < 4)
  {
    sub_1001C0814();
    TTRITableCell.isHidden.setter(1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    if ((*((_BYTE *)a1 + v11[7]) & 1) != 0)
      v39 = static TTRLocalizableStrings.Hashtags.showLessText.getter(v33, v34);
    else
      v39 = static TTRLocalizableStrings.Hashtags.showMoreText.getter(v33, v34);
    v42 = v40;
    sub_1001C7DCC(v39, v40, v3, (uint64_t)a1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v42).n128_u64[0];
  }
  return result;
}

void sub_1001C7DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  char v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  char v36[24];

  sub_1001C0814();
  TTRITableCell.isHidden.setter(0);
  swift_release();
  v5 = *(id *)(sub_1001C0814() + 32);
  swift_release();
  v6 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x78));
  swift_beginAccess(v6, v36, 0, 0);
  v8 = v6[1];
  v7 = v6[2];
  v9 = v6[3];
  v10 = (void *)v6[4];
  v12 = (void *)v6[5];
  v11 = (void *)v6[6];
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v8);
  sub_1000DDA1C(v10, v12, v11);
  swift_bridgeObjectRelease(v8);
  v29 = a1;
  v30 = a2;
  v31 = v7;
  v32 = v9;
  v33 = v10;
  v34 = v12;
  v35 = v11;
  TTRITableCellContent.state.setter(&v29);

  v13 = *(id *)(sub_1001C0814() + 32);
  swift_release();
  v14 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
  v15 = 0;
  v16 = 0;
  v17 = a4 + *(int *)(v14 + 32);
  if ((*(_BYTE *)(v17 + 16) & 1) == 0)
  {
    if (*(uint64_t *)v17 < 4 || (*(_BYTE *)(a4 + *(int *)(v14 + 28)) & 1) != 0)
    {
      v15 = 0;
      v16 = 0;
    }
    else
    {
      v15 = static TTRLocalizableStrings.Hashtags.showMoreCountText(withCount:)(*(_QWORD *)(v17 + 8));
      v16 = v18;
    }
  }
  v19 = (_QWORD *)((char *)v13 + *(_QWORD *)((swift_isaMask & *v13) + 0x78));
  swift_beginAccess(v19, v28, 0, 0);
  v21 = *v19;
  v20 = v19[1];
  v22 = v19[3];
  v23 = (void *)v19[4];
  v25 = (void *)v19[5];
  v24 = (void *)v19[6];
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v20);
  sub_1000DDA1C(v23, v25, v24);
  swift_bridgeObjectRelease(v22);
  v29 = v21;
  v30 = v20;
  v31 = v15;
  v32 = v16;
  v33 = v23;
  v34 = v25;
  v35 = v24;
  TTRITableCellContent.state.setter(&v29);

}

double sub_1001C7FD0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int v4;
  char v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  void *v51;
  __int128 *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  void *v59;
  double result;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  __int128 v73;
  char v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  char v105;
  char v106[24];
  char v107[24];
  char v108[24];
  _BYTE v109[34];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[25];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _BYTE v125[25];
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _BYTE v133[25];
  _QWORD v134[2];
  __int128 v135;
  __int128 v136;
  __int128 v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  void *v149;
  char v150;
  _BYTE v151[168];
  id v152[2];
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  char v159;
  char v160[24];
  _BYTE v161[176];
  __int128 v162;
  __int128 v163;
  __int128 v164;
  char v165;
  __int128 v166[11];
  _BYTE v167[192];

  v2 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  sub_1001CCEC4((__int128 *)(a1 + *(int *)(v2 + 44)), (uint64_t)v166);
  sub_1001CCEC4(v166, (uint64_t)v167);
  if (sub_1001CCF00((uint64_t)v167) > 1)
  {
    sub_1001C1750(6u);
  }
  else
  {
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v167);
    sub_1001C1008(6u);
  }
  v3 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsOptionsCell, sub_1001C6ABC)+ 32);
  swift_release();
  sub_1001CCEC4(v166, (uint64_t)v161);
  v4 = sub_1001CCF00((uint64_t)v161);
  if (!v4)
  {
    v5 = 1;
    goto LABEL_8;
  }
  if (v4 == 1)
  {
    v5 = 2;
LABEL_8:
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v161);
    goto LABEL_10;
  }
  v5 = 0;
LABEL_10:
  v6 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x78);
  swift_beginAccess(v6, v160, 0, 0);
  v7 = (void *)*((_QWORD *)v6 + 1);
  v9 = *((_QWORD *)v6 + 4);
  v8 = *((_QWORD *)v6 + 5);
  v10 = *((_QWORD *)v6 + 6);
  v11 = *((_QWORD *)v6 + 7);
  v12 = v6[65];
  v13 = *((_OWORD *)v6 + 1);
  v152[0] = *(id *)v6;
  v152[1] = v7;
  v153 = v13;
  v154 = v9;
  v155 = v8;
  v156 = v10;
  v157 = v11;
  v158 = v5;
  v159 = v12;
  sub_1000DDA1C(v152[0], v7, (void *)v13);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v9);
  TTRITableCellContent.state.setter(v152);

  if ((UIViewController.isIPadIdiom.getter(v14) & 1) != 0)
    v15 = sub_1001C068C();
  else
    v15 = sub_1001C0544();
  v16 = v15;
  if ((UIViewController.isIPadIdiom.getter(v15) & 1) != 0)
    sub_1001C0544();
  else
    sub_1001C068C();
  TTRITableCell.isHidden.setter(1);
  sub_1001CCEC4(v166, (uint64_t)v152);
  if (sub_1001CCF00((uint64_t)v152) >= 2
    || (v17.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v152).reminders._rawValue,
        sub_1001CCF18((uint64_t)v17.reminders._rawValue + 8, (uint64_t)v151),
        sub_1001CCF18((uint64_t)v151, (uint64_t)v134),
        sub_100171C50((uint64_t)v134) == 1))
  {
    TTRITableCell.isHidden.setter(1);
    swift_release();
  }
  else
  {
    sub_1001CCF18((uint64_t)v151, (uint64_t)v109);
    sub_1001CCF60((uint64_t)v109);
    TTRITableCell.isHidden.setter(0);
    v18 = v134[0];
    v19 = v134[1];
    v20 = (__int128 *)(*(_QWORD *)(v16 + 32) + *(_QWORD *)((swift_isaMask & **(_QWORD **)(v16 + 32)) + 0x78));
    swift_beginAccess(v20, v108, 0, 0);
    v110 = *v20;
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[4];
    v113 = v20[3];
    v114 = v23;
    v111 = v21;
    v112 = v22;
    v24 = v20[5];
    v25 = v20[6];
    v26 = v20[7];
    *(_OWORD *)&v117[9] = *(__int128 *)((char *)v20 + 121);
    v116 = v25;
    *(_OWORD *)v117 = v26;
    v115 = v24;
    v87 = v24;
    v89 = v23;
    v83 = v26;
    v85 = v25;
    v27 = *(_QWORD *)&v117[16];
    v28 = v117[24];
    v79 = v112;
    v81 = v113;
    v29 = v110;
    v30 = *((_QWORD *)&v111 + 1);
    swift_bridgeObjectRetain(v19);
    sub_1001CD0EC((uint64_t)&v110);
    swift_bridgeObjectRelease(v30);
    v126 = v29;
    *(_QWORD *)&v127 = v18;
    *((_QWORD *)&v127 + 1) = v19;
    v128 = v79;
    v129 = v81;
    v130 = v89;
    v131 = v87;
    v132 = v85;
    *(_OWORD *)v133 = v83;
    *(_QWORD *)&v133[16] = v27;
    v133[24] = v28;
    v31 = TTRITableCellContent.state.setter(&v126);
    v32 = *(_QWORD **)(v16 + 32);
    v162 = v135;
    v163 = v136;
    v164 = v137;
    v165 = v138;
    v33 = TTRListColors.Color.localizedDescription.getter(v31);
    v35 = v34;
    v36 = (__int128 *)((char *)v32 + *(_QWORD *)((swift_isaMask & *v32) + 0x78));
    swift_beginAccess(v36, v107, 0, 0);
    v118 = *v36;
    v37 = v36[1];
    v38 = v36[2];
    v39 = v36[4];
    v121 = v36[3];
    v122 = v39;
    v119 = v37;
    v120 = v38;
    v40 = v36[5];
    v41 = v36[6];
    v42 = v36[7];
    *(_OWORD *)&v125[9] = *(__int128 *)((char *)v36 + 121);
    v124 = v41;
    *(_OWORD *)v125 = v42;
    v123 = v40;
    v88 = v39;
    v90 = v121;
    v84 = v41;
    v86 = v40;
    v43 = *(_QWORD *)&v125[16];
    LOBYTE(v27) = v125[24];
    v44 = v119;
    v80 = v118;
    v82 = v42;
    v45 = *((_QWORD *)&v120 + 1);
    sub_1001CD0EC((uint64_t)&v118);
    swift_bridgeObjectRelease(v45);
    v126 = v80;
    v127 = v44;
    *(_QWORD *)&v128 = v33;
    *((_QWORD *)&v128 + 1) = v35;
    v129 = v90;
    v130 = v88;
    v131 = v86;
    v132 = v84;
    *(_OWORD *)v133 = v82;
    *(_QWORD *)&v133[16] = v43;
    v133[24] = v27;
    TTRITableCellContent.state.setter(&v126);
    *(_QWORD *)&v88 = *(_QWORD *)(v16 + 32);
    *(_QWORD *)&v86 = v139;
    *(_QWORD *)&v84 = v140;
    *(_QWORD *)&v82 = v141;
    v46 = v143;
    v47 = v144;
    v48 = v145;
    v78 = v146;
    *(_QWORD *)&v80 = v142;
    v49 = v147;
    v50 = v148;
    v70 = v147;
    v71 = v148;
    v51 = v149;
    v72 = v149;
    LOBYTE(v45) = v150;
    v74 = v150;
    v52 = (__int128 *)(v88 + *(_QWORD *)((swift_isaMask & *(_QWORD *)v88) + 0x78));
    swift_beginAccess(v52, v106, 0, 0);
    v126 = *v52;
    v53 = v52[1];
    v54 = v52[2];
    v55 = v52[3];
    v130 = v52[4];
    v129 = v55;
    v128 = v54;
    v127 = v53;
    v56 = v52[5];
    v57 = v52[6];
    v58 = v52[7];
    *(_OWORD *)&v133[9] = *(__int128 *)((char *)v52 + 121);
    *(_OWORD *)v133 = v58;
    v132 = v57;
    v131 = v56;
    v76 = *((_QWORD *)&v128 + 1);
    v77 = v128;
    v75 = v127;
    v73 = v126;
    v68 = *((_QWORD *)&v129 + 1);
    v69 = v129;
    v66 = *((_QWORD *)&v130 + 1);
    v67 = (void *)v130;
    v64 = *((_QWORD *)&v56 + 1);
    v65 = v56;
    v62 = *((_QWORD *)&v57 + 1);
    v63 = v57;
    v61 = v58;
    v59 = *(void **)&v133[16];
    LOBYTE(v33) = v133[24];
    sub_1001CD04C(v86, v84, (void *)v82, v80, v46, v47, v48, v78, v49, v50, v51, v45);
    sub_1001CD0EC((uint64_t)&v126);
    sub_1001CD1B0(v69, v68, v67, v66, v65, v64, v63, v62, v61, *((void **)&v61 + 1), v59, v33);
    v91[0] = v73;
    v91[1] = v75;
    v92 = v77;
    v93 = v76;
    v94 = v86;
    v95 = v84;
    v96 = v82;
    v97 = v80;
    v98 = v46;
    v99 = v47;
    v100 = v48;
    v101 = v78;
    v102 = v70;
    v103 = v71;
    v104 = v72;
    v105 = v74;
    TTRITableCellContent.state.setter(v91);
    swift_release();
    sub_1001CD250((uint64_t)v151);
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001C8670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  char *v33;
  uint8_t *v34;
  char *v35;
  _QWORD v37[5];
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  _QWORD v45[10];
  _QWORD *v46;

  v38 = type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration(0);
  __chkstk_darwin(v38);
  v37[4] = (char *)v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v39 = (char *)v37 - v3;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v37[2] = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v37[3] = (char *)v37 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)v37 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v37 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v37 - v16;
  v18 = sub_1001C0944();
  v20 = v19;
  v21 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  UIListContentConfiguration.usingRoundedSystemFont()(v21);
  v43 = *(void (**)(char *, uint64_t))(v5 + 8);
  v43(v14, v4);
  UIListContentConfiguration.text.setter(v18, v20);
  v44 = v0;
  v22 = sub_1001C0B38();
  v23 = v22[2];
  v24 = swift_bridgeObjectRelease(v22);
  v41 = v5;
  v42 = v14;
  if (v23)
  {
    (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v14, v17, v4, v24);
    TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)(v45, v14, 0, 1);
  }
  else
  {
    memset(v45, 0, 73);
  }
  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersSection, (uint64_t (*)(uint64_t))sub_1001CCB38);
  sub_1001CC838((uint64_t)v45, (uint64_t)&v46);
  TTRITableSection.header.setter(&v46);
  swift_release();
  v25 = sub_1001BFC80();
  swift_bridgeObjectRetain(v25);
  v27 = sub_1002AC4D0(v26);
  swift_bridgeObjectRelease(v25);
  v46 = v27;
  sub_1001CA884((uint64_t *)&v46);
  swift_bridgeObjectRelease(v25);
  if (v46[2])
  {
    v40 = v11;
    v28 = *((unsigned __int8 *)v46 + 32);
    swift_release();
    __asm { BR              X9 }
  }
  swift_release();
  if (qword_10063D428 != -1)
    swift_once(&qword_10063D428, sub_1001BF378);
  v29 = type metadata accessor for Logger(0);
  v30 = sub_100012DC4(v29, (uint64_t)qword_10064A8D0);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = v17;
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "No section available to apply header", v34, 2u);
    swift_slowDealloc(v34, -1, -1);

    sub_1000073A0((uint64_t)v45, &qword_10064AB88);
    v35 = v33;
  }
  else
  {

    sub_1000073A0((uint64_t)v45, &qword_10064AB88);
    v35 = v17;
  }
  return ((uint64_t (*)(char *, uint64_t))v43)(v35, v4);
}

uint64_t sub_1001C9430(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter);
    swift_unknownObjectRetain(v6);

    sub_10001413C((_QWORD *)(v6 + 120), *(_QWORD *)(v6 + 144));
    sub_1000A6E2C(a1);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001C94BC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100521140;
  v3 = sub_1001C0C84(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorSection, &OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorCell, sub_1001C7250, (uint64_t)&protocol witness table for TTRITableCell<A>);
  *(_QWORD *)(v2 + 32) = v3;
  specialized Array._endMutation()(v3);
  v4 = v0;
  v5 = sub_1001CC5FC((uint64_t)&off_1005EAA58);

  sub_100450F08((uint64_t)v5);
  v6 = v2;
  v7 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersSection, (uint64_t (*)(uint64_t))sub_1001CCB38);
  swift_bridgeObjectRetain(v6);
  v8 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
  specialized Array._endMutation()(v11);
  swift_bridgeObjectRelease(v6);
  swift_release();
  return v6;
}

void sub_1001C961C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  char v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  double v31;
  char v32;
  void *v33;
  _QWORD *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  char v43;
  _QWORD *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  char **v53;
  id v54;
  void *v55;
  _UNKNOWN **v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjCClassFromMetadata;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  unint64_t v89;
  UIAccessibilityTraits v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  UIAccessibilityTraits v97;
  int *v98;
  _BYTE *v99;
  void *v100;
  unint64_t v101;
  char v102[24];
  char v103[24];
  id v104;
  void *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  char v113[24];
  char v114[32];

  v1 = v0;
  v2 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
  v9 = *(_QWORD *)(v8 + 104);
  v10 = *(_QWORD *)(v8 + 112);
  sub_10001413C((_QWORD *)(v8 + 80), v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v11, (*(_BYTE *)(v8 + 65) & 1) == 0, v7);
  sub_1002DF740((uint64_t)v7);
  sub_1002DFB1C((uint64_t)v7);
  v12 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorCell, sub_1001C7250)+ 32);
  swift_release();
  v13 = *v7;
  v14 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x78);
  swift_beginAccess(v14, v114, 0, 0);
  v16 = *(void **)v14;
  v15 = (void *)*((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 2);
  v104 = v16;
  v105 = v15;
  *(_QWORD *)&v106 = v17;
  BYTE8(v106) = v13;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v17);
  TTRITableCellContent.state.setter(&v104);

  sub_1001C1BE0((uint64_t)v7, v18);
  v98 = (int *)v5;
  v19 = *(int *)(v5 + 24);
  v99 = v7;
  v20 = v7[v19];
  if (v20)
    sub_1001C1008(2u);
  else
    sub_1001C1750(2u);
  v21 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___timeOptionsCell, sub_1001C4BAC)+ 32);
  swift_release();
  v22 = (char *)v21 + *(_QWORD *)((swift_isaMask & *v21) + 0x78);
  swift_beginAccess(v22, v113, 0, 0);
  v23 = (void *)*((_QWORD *)v22 + 1);
  v25 = *((_QWORD *)v22 + 4);
  v24 = *((_QWORD *)v22 + 5);
  v26 = *((_QWORD *)v22 + 6);
  v27 = *((_QWORD *)v22 + 7);
  v28 = v22[65];
  v29 = *((_OWORD *)v22 + 1);
  v104 = *(id *)v22;
  v105 = v23;
  v106 = v29;
  v107 = v25;
  v108 = v24;
  v109 = v26;
  v110 = v27;
  v111 = v20;
  v112 = v28;
  sub_1000DDA1C(v104, v23, (void *)v29);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v25);
  TTRITableCellContent.state.setter(&v104);

  v30 = (uint64_t)v99;
  sub_1001C75C4((uint64_t)v99);
  sub_1001C7FD0(v30);
  sub_1002DF04C(v4);
  sub_1001C7A18(v4, v31);
  sub_10001F544((uint64_t)v4, type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel);
  v32 = *(_BYTE *)(v30 + v98[10]);
  v33 = v1;
  if (v32)
    sub_1001C1008(4u);
  else
    sub_1001C1750(4u);
  v34 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedOptionsCell, sub_1001C56F8)+ 32);
  swift_release();
  v35 = (char *)v34 + *(_QWORD *)((swift_isaMask & *v34) + 0x78);
  swift_beginAccess(v35, v103, 0, 0);
  v36 = (void *)*((_QWORD *)v35 + 1);
  v38 = *((_QWORD *)v35 + 4);
  v37 = *((_QWORD *)v35 + 5);
  v39 = *((_QWORD *)v35 + 6);
  v40 = *((_QWORD *)v35 + 7);
  v41 = v35[65];
  v42 = *((_OWORD *)v35 + 1);
  v104 = *(id *)v35;
  v105 = v36;
  v106 = v42;
  v107 = v38;
  v108 = v37;
  v109 = v39;
  v110 = v40;
  v111 = v32;
  v112 = v41;
  sub_1000DDA1C(v104, v36, (void *)v42);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v38);
  TTRITableCellContent.state.setter(&v104);

  v43 = v99[v98[9]];
  if (v43)
    sub_1001C1008(5u);
  else
    sub_1001C1750(5u);
  v44 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityOptionsCell, sub_1001C5190)+ 32);
  swift_release();
  v45 = (char *)v44 + *(_QWORD *)((swift_isaMask & *v44) + 0x78);
  swift_beginAccess(v45, v102, 0, 0);
  v46 = (void *)*((_QWORD *)v45 + 1);
  v48 = *((_QWORD *)v45 + 4);
  v47 = *((_QWORD *)v45 + 5);
  v49 = *((_QWORD *)v45 + 6);
  v50 = *((_QWORD *)v45 + 7);
  v51 = v45[65];
  v52 = *((_OWORD *)v45 + 1);
  v104 = *(id *)v45;
  v105 = v46;
  v106 = v52;
  v107 = v48;
  v108 = v47;
  v109 = v49;
  v110 = v50;
  v111 = v43;
  v112 = v51;
  sub_1000DDA1C(v104, v46, (void *)v52);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v48);
  TTRITableCellContent.state.setter(&v104);

  sub_1001C8670();
  v53 = &selRef_contact;
  v54 = objc_msgSend(v1, "view");
  if (!v54)
    goto LABEL_67;
  v55 = v54;
  v56 = LSApplicationWorkspace_ptr;
  v57 = objc_opt_self(UITableView);
  v58 = (unint64_t)objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v55, v57, 0, 0, 0), "numberOfSections");

  if ((v58 & 0x8000000000000000) != 0)
    goto LABEL_65;
  if (!v58)
  {
LABEL_59:
    v93 = objc_msgSend(v33, "navigationItem");
    v94 = objc_msgSend(v93, "rightBarButtonItem");

    v95 = (uint64_t)v99;
    if (v94)
    {
      objc_msgSend(v94, "setEnabled:", v99[v98[12]]);

    }
    sub_10001F544(v95, type metadata accessor for TTRSmartListFilterEditorViewModel);
    return;
  }
  v59 = 0;
  v97 = UIAccessibilityTraitHeader;
  v100 = v1;
  v101 = v58;
  while (1)
  {
    if (v59 == (char *)v58)
      goto LABEL_64;
    v60 = objc_msgSend(v33, v53[123]);
    if (!v60)
      goto LABEL_66;
    v61 = v60;
    v62 = objc_opt_self(v56[178]);
    v63 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v61, v62, 0, 0, 0), "headerViewForSection:", v59);

    if (v63)
      break;
LABEL_16:
    if (++v59 == (char *)v58)
      goto LABEL_59;
  }
  v64 = objc_msgSend(v63, "subviews");

  v65 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

  if (!((unint64_t)v66 >> 62))
  {
    v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v66);
    if (v67)
      goto LABEL_22;
    goto LABEL_14;
  }
  if (v66 < 0)
    v91 = v66;
  else
    v91 = v66 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v66);
  v67 = _CocoaArrayWrapper.endIndex.getter(v91);
  if (!v67)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v66, 2);
LABEL_15:
    v58 = v101;
    goto LABEL_16;
  }
LABEL_22:
  v68 = sub_100005ED8(0, (unint64_t *)&unk_10064AA80, UIListContentView_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v68);
  v70 = 4;
  while (1)
  {
    if ((v66 & 0xC000000000000001) != 0)
      v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70 - 4, v66);
    else
      v71 = *(id *)(v66 + 8 * v70);
    v72 = v71;
    v73 = v70 - 3;
    if (__OFADD__(v70 - 4, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    if (objc_msgSend(v71, "isKindOfClass:", ObjCClassFromMetadata))
      break;

    ++v70;
    if (v73 == v67)
    {
      swift_bridgeObjectRelease_n(v66, 2);
LABEL_42:
      v33 = v100;
      v53 = &selRef_contact;
      v56 = LSApplicationWorkspace_ptr;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n(v66, 2);
  v74 = objc_opt_self(UIListContentView);
  v75 = (void *)swift_dynamicCastObjCClass(v72, v74);
  if (!v75)
  {
LABEL_41:

    goto LABEL_42;
  }
  v76 = objc_msgSend(v75, "subviews");
  v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, v65);

  if ((unint64_t)v77 >> 62)
  {
    if (v77 < 0)
      v92 = v77;
    else
      v92 = v77 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v77);
    v78 = _CocoaArrayWrapper.endIndex.getter(v92);
    if (v78)
      goto LABEL_33;
    goto LABEL_40;
  }
  v78 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v77);
  if (!v78)
  {
LABEL_40:
    swift_bridgeObjectRelease_n(v77, 2);
    goto LABEL_41;
  }
LABEL_33:
  v79 = sub_100005ED8(0, &qword_10063F908, UILabel_ptr);
  v80 = swift_getObjCClassFromMetadata(v79);
  v81 = 4;
  while (1)
  {
    v82 = (v77 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v81 - 4, v77)
        : *(id *)(v77 + 8 * v81);
    v83 = v82;
    v84 = v81 - 3;
    if (__OFADD__(v81 - 4, 1))
      break;
    if (objc_msgSend(v82, "isKindOfClass:", v80))
    {
      swift_bridgeObjectRelease_n(v77, 2);
      v85 = objc_opt_self(UILabel);
      v86 = swift_dynamicCastObjCClass(v83, v85);
      v58 = v101;
      if (v86)
      {
        v87 = (void *)v86;
        v88 = v83;
        v89 = (unint64_t)objc_msgSend(v87, "accessibilityTraits");
        v90 = v97;
        if ((v97 & ~v89) == 0)
          v90 = 0;
        objc_msgSend(v87, "setAccessibilityTraits:", v90 | v89);

      }
      else
      {

      }
      v33 = v100;
      v53 = &selRef_contact;
      v56 = LSApplicationWorkspace_ptr;
      goto LABEL_16;
    }

    ++v81;
    if (v84 == v78)
      goto LABEL_40;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

void sub_1001C9F64()
{
  sub_1001C961C();
}

void sub_1001C9F84()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;
  _QWORD v8[8];

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "leftBarButtonItem");

  if (v2)
  {
    static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)(v8, v2, 0, 1);
    sub_1002E61A0((uint64_t)v8);
    sub_1000A2958((uint64_t)v8);

  }
  else
  {
    if (qword_10063D428 != -1)
      swift_once(&qword_10063D428, sub_1001BF378);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100012DC4(v3, (uint64_t)qword_10064A8D0);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Missing cancel button", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
}

uint64_t type metadata accessor for TTRISmartListFilterEditorViewController()
{
  return objc_opt_self(_TtC9Reminders39TTRISmartListFilterEditorViewController);
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.CenterItemID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISmartListFilterEditorViewController.Filter(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1001CA67C + 4 * byte_100527CEF[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1001CA6B0 + 4 * byte_100527CEA[v4]))();
}

uint64_t sub_1001CA6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CA6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CA6C0);
  return result;
}

uint64_t sub_1001CA6CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CA6D4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1001CA6D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CA6E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorViewController.Filter()
{
  return &type metadata for TTRISmartListFilterEditorViewController.Filter;
}

uint64_t sub_1001CA6FC()
{
  return sub_100023FEC(&qword_10064AA60, &qword_10064AA68, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1001CA72C()
{
  unint64_t result;

  result = qword_10064AA70;
  if (!qword_10064AA70)
  {
    result = swift_getWitnessTable(&unk_100527DC0, &type metadata for TTRISmartListFilterEditorViewController.Filter);
    atomic_store(result, (unint64_t *)&qword_10064AA70);
  }
  return result;
}

id sub_1001CA770()
{
  void *v0;
  id result;
  id v2;
  uint64_t v3;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_opt_self(UITableView);
    return (id)swift_dynamicCastObjCClassUnconditional(v2, v3, 0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001CA7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return TTRKeyboardAvoidance<>.shouldAvoidKeyboard.getter(ObjectType, a2);
}

uint64_t sub_1001CA7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return TTRKeyboardAvoidance<>.startAvoidingKeyboard()(ObjectType, a2);
}

uint64_t sub_1001CA81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v2, a2);
  return TTRKeyboardAvoidance<>.stopAvoidingKeyboard()(ObjectType, a2);
}

uint64_t sub_1001CA844(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v4, a4);
  return TTRKeyboardAvoidance<>.setKeyboardAvoidanceBottomInset(_:duration:)(ObjectType, a4, a1, a2);
}

void sub_1001CA884(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10039331C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1001CA8EC(v4);
  *a1 = v2;
}

void sub_1001CA8EC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  Swift::Int v21;
  _BYTE *v22;
  unsigned int v23;
  Swift::Int v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  Swift::Int v95;
  Swift::Int v96;
  uint64_t v97;
  unsigned __int8 *__dst;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v80 = 0;
      v81 = *v2;
      v82 = 1;
      while (1)
      {
        v83 = *(unsigned __int8 *)(v81 + v82);
        v84 = v80;
        do
        {
          v85 = *(unsigned __int8 *)(v81 + v84);
          if (v83 >= v85)
            break;
          if (!v81)
            goto LABEL_143;
          *(_BYTE *)(v81 + v84 + 1) = v85;
          *(_BYTE *)(v81 + v84--) = v83;
        }
        while (v84 != -1);
        ++v82;
        ++v80;
        if (v82 == v3)
          return;
      }
    }
    goto LABEL_139;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_148:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v95 = v4;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for TTRISmartListFilterEditorViewController.Filter);
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = (_QWORD *)v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  v9 = 0;
  v93 = v2;
  v10 = *v2;
  v11 = (char *)_swiftEmptyArrayStorage;
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(unsigned __int8 *)(v10 + v9);
      v15 = *(unsigned __int8 *)(v10 + v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(unsigned __int8 *)(v10 + v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_140;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_146;
              v20 = *(_BYTE *)(v10 + v19);
              *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_138;
      if (v9 - v13 < v95)
      {
        v21 = v13 + v95;
        if (__OFADD__(v13, v95))
          goto LABEL_141;
        if (v21 >= v3)
          v21 = v3;
        if (v21 < v13)
          goto LABEL_142;
        if (v9 != v21)
        {
          v22 = (_BYTE *)(v10 + v9);
          do
          {
            v23 = *(unsigned __int8 *)(v10 + v9);
            v24 = v13;
            v25 = v22;
            do
            {
              v26 = *(v25 - 1);
              if (v23 >= v26)
                break;
              if (!v10)
                goto LABEL_144;
              *v25 = v26;
              *--v25 = v23;
              ++v24;
            }
            while (v9 != v24);
            ++v9;
            ++v22;
          }
          while (v9 != v21);
          v9 = v21;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100392A60(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_100392A60((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
      break;
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v2 = v93;
      v8 = v94;
LABEL_104:
      v94 = v8;
      if (v12 < 2)
      {
LABEL_115:
        v79 = v11;
        goto LABEL_116;
      }
      v86 = *v2;
      while (1)
      {
        v87 = v12 - 2;
        if (v12 < 2)
          break;
        if (!v86)
          goto LABEL_147;
        v78 = v11;
        v88 = v11 + 32;
        v89 = *(_QWORD *)&v11[16 * v87 + 32];
        v90 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_1001CAF64((unsigned __int8 *)(v86 + v89), (unsigned __int8 *)(v86 + *(_QWORD *)&v88[16 * v12 - 16]), v86 + v90, __dst);
        if (v1)
          goto LABEL_95;
        if (v90 < v89)
          goto LABEL_135;
        if ((swift_isUniquelyReferenced_nonNull_native(v78) & 1) == 0)
          v78 = sub_100392EE4((uint64_t)v78);
        if (v87 >= *((_QWORD *)v78 + 2))
          goto LABEL_136;
        v91 = &v78[16 * v87 + 32];
        *(_QWORD *)v91 = v89;
        *((_QWORD *)v91 + 1) = v90;
        v92 = *((_QWORD *)v78 + 2);
        if (v12 > v92)
          goto LABEL_137;
        memmove(&v78[16 * v12 + 16], &v78[16 * v12 + 32], 16 * (v92 - v12));
        v11 = v78;
        *((_QWORD *)v78 + 2) = v92 - 1;
        v12 = v92 - 1;
        if (v92 <= 2)
          goto LABEL_115;
      }
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
  }
  while (1)
  {
    v31 = v12 - 1;
    if (v12 >= 4)
    {
      v36 = &v29[16 * v12];
      v37 = *((_QWORD *)v36 - 8);
      v38 = *((_QWORD *)v36 - 7);
      v42 = __OFSUB__(v38, v37);
      v39 = v38 - v37;
      if (v42)
        goto LABEL_122;
      v41 = *((_QWORD *)v36 - 6);
      v40 = *((_QWORD *)v36 - 5);
      v42 = __OFSUB__(v40, v41);
      v34 = v40 - v41;
      v35 = v42;
      if (v42)
        goto LABEL_123;
      v43 = v12 - 2;
      v44 = &v29[16 * v12 - 32];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      v42 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      if (v42)
        goto LABEL_125;
      v42 = __OFADD__(v34, v47);
      v48 = v34 + v47;
      if (v42)
        goto LABEL_128;
      if (v48 >= v39)
      {
        v66 = &v29[16 * v31];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v42 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v42)
          goto LABEL_132;
        v59 = v34 < v69;
        goto LABEL_84;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v60 = *((_QWORD *)v11 + 4);
        v61 = *((_QWORD *)v11 + 5);
        v42 = __OFSUB__(v61, v60);
        v53 = v61 - v60;
        v54 = v42;
        goto LABEL_78;
      }
      v33 = *((_QWORD *)v11 + 4);
      v32 = *((_QWORD *)v11 + 5);
      v42 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      v35 = v42;
    }
    if ((v35 & 1) != 0)
      goto LABEL_124;
    v43 = v12 - 2;
    v49 = &v29[16 * v12 - 32];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v52 = __OFSUB__(v50, v51);
    v53 = v50 - v51;
    v54 = v52;
    if (v52)
      goto LABEL_127;
    v55 = &v29[16 * v31];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    v42 = __OFSUB__(v56, v57);
    v58 = v56 - v57;
    if (v42)
      goto LABEL_130;
    if (__OFADD__(v53, v58))
      goto LABEL_131;
    if (v53 + v58 >= v34)
    {
      v59 = v34 < v58;
LABEL_84:
      if (v59)
        v31 = v43;
      goto LABEL_86;
    }
LABEL_78:
    if ((v54 & 1) != 0)
      goto LABEL_126;
    v62 = &v29[16 * v31];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v42 = __OFSUB__(v63, v64);
    v65 = v63 - v64;
    if (v42)
      goto LABEL_129;
    if (v65 < v53)
      goto LABEL_15;
LABEL_86:
    v70 = v31 - 1;
    if (v31 - 1 >= v12)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!v10)
      goto LABEL_145;
    v71 = &v29[16 * v70];
    v72 = *(_QWORD *)v71;
    v73 = v29;
    v74 = &v29[16 * v31];
    v75 = *((_QWORD *)v74 + 1);
    sub_1001CAF64((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, __dst);
    if (v1)
      break;
    if (v75 < v72)
      goto LABEL_119;
    if (v31 > *((_QWORD *)v11 + 2))
      goto LABEL_120;
    *(_QWORD *)v71 = v72;
    *(_QWORD *)&v73[16 * v70 + 8] = v75;
    v76 = *((_QWORD *)v11 + 2);
    if (v31 >= v76)
      goto LABEL_121;
    v12 = v76 - 1;
    memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
    v29 = v73;
    *((_QWORD *)v11 + 2) = v76 - 1;
    v10 = v97;
    if (v76 <= 2)
      goto LABEL_15;
  }
  v78 = v11;
LABEL_95:
  v79 = v78;
LABEL_116:
  swift_bridgeObjectRelease(v79);
  v94[2] = 0;
  swift_bridgeObjectRelease(v94);
}

uint64_t sub_1001CAF64(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t result;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v14 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          v16 = v15 + 1;
          v17 = v6 - 1;
          v18 = *(v6 - 1);
          if (*(v14 - 1) >= v18)
          {
            v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14)
              *v15 = *(v14 - 1);
            --v14;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v16 != v6 || v15 >= v6)
              *v15 = v18;
            v22 = --v6;
            if (v17 <= v7)
              goto LABEL_38;
          }
          --v15;
          if (v14 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        v11 = *v6;
        v12 = *v4;
        if (v11 >= v12)
        {
          if (v7 != v4)
            *v7 = v12;
          v21 = ++v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
            *v7 = v11;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v22 = v7;
    }
LABEL_38:
    sub_100392D30((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1001CB19C(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1003D8500(0, v1, 0);
    __asm { BR              X9 }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001CB33C()
{
  void *v0;
  BOOL v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22[3];

  v0 = sub_1001BFC80();
  v1 = sub_10037C230(0, (uint64_t)v0);
  swift_bridgeObjectRelease(v0);
  if (v1)
  {
    v2 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagOptionsCell, sub_1001C5F98);
    v3 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v3, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = v2;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  }
  else
  {
    v6 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v6, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = 0;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = 0;
  }
  swift_retain();
  v5[2] = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell, sub_1001C6508);
  v5[3] = &protocol witness table for TTRITableCell<A>;
  v5[4] = sub_1001C0814();
  v5[5] = &protocol witness table for TTRITableCell<A>;
  v22[0] = v4;
  v7 = sub_10002A750(&qword_10064AA98);
  v8 = sub_10002A750(&qword_10064AAA0);
  v9 = sub_100023FEC(&qword_10064AAA8, &qword_10064AA98, (uint64_t)&protocol conformance descriptor for [A]);
  v10 = Sequence.removingNils<A>()(v7, v8, v9);
  v11 = swift_bridgeObjectRelease(v4);
  v12 = type metadata accessor for TTRITableGroup(0, v11);
  v13 = swift_allocObject(v12, 97, 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 1;
  *(_QWORD *)(v13 + 40) = 0;
  swift_unknownObjectWeakInit(v13 + 32, 0);
  *(_QWORD *)(v13 + 88) = 0;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_BYTE *)(v13 + 96) = 2;
  *(_QWORD *)(v13 + 48) = v10;
  swift_beginAccess(v13 + 56, v22, 1, 0);
  v14 = *(_QWORD *)(v13 + 56);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 72) = 0;
  swift_bridgeObjectRetain(v10);
  sub_1001CB58C(v14, v15, v16);
  swift_beginAccess(v13 + 80, &v21, 1, 0);
  v17 = *(_QWORD *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 88) = 0;
  v19 = *(_BYTE *)(v13 + 96);
  *(_BYTE *)(v13 + 96) = 2;
  sub_1001CB59C(v17, v18, v19);
  swift_release();
  swift_bridgeObjectRelease(v10);
  return v13;
}

uint64_t sub_1001CB58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
    return swift_release(a3);
  return result;
}

uint64_t sub_1001CB59C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_release(a2);
  return result;
}

unint64_t sub_1001CB5B4()
{
  unint64_t result;

  result = qword_10064AAB8;
  if (!qword_10064AAB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.HashtagOptions, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
    atomic_store(result, (unint64_t *)&qword_10064AAB8);
  }
  return result;
}

uint64_t sub_1001CB5F8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CB61C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E3AAC);
}

uint64_t sub_1001CB63C()
{
  uint64_t v0;

  return sub_1001C69AC(v0);
}

uint64_t sub_1001CB644(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C6784(a1, v1);
}

uint64_t sub_1001CB64C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001C6804(a1, a2, v2);
}

void sub_1001CB654()
{
  uint64_t v0;

  sub_1001C68C0(v0);
}

uint64_t sub_1001CB65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v18[5];
  _OWORD v19[5];

  v0 = type metadata accessor for UIListContentConfiguration(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - v5;
  v7._object = (void *)0x8000000100569700;
  v7._countAndFlagsBits = 0xD00000000000001BLL;
  v8._countAndFlagsBits = 1936154964;
  v8._object = (void *)0xE400000000000000;
  v9._countAndFlagsBits = 0x6E207265746C6946;
  v9._object = (void *)0xEB00000000656D61;
  v10 = TTRLocalizedString(_:value:comment:)(v7, v8, v9);
  v11 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  UIListContentConfiguration.usingRoundedSystemFont()(v11);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  UIListContentConfiguration.text.setter(v10._countAndFlagsBits, v10._object);
  memset(v19, 0, 73);
  memset(v18, 0, 73);
  v13 = sub_10002A750(&qword_10064AAE0);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100520250;
  *(_QWORD *)(v14 + 32) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagsGroup, (uint64_t (*)(uint64_t))sub_1001CB33C);
  *(_QWORD *)(v14 + 40) = &protocol witness table for TTRITableGroup;
  v15 = type metadata accessor for TTRITableSection(0);
  swift_allocObject(v15, 217, 7);
  v16 = TTRITableSection.init(header:footer:items:)(v19, v18, v14);
  v12(v6, v0);
  return v16;
}

uint64_t sub_1001CB80C()
{
  void *v0;
  BOOL v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22[3];

  v0 = sub_1001BFC80();
  v1 = sub_10037C230(3u, (uint64_t)v0);
  swift_bridgeObjectRelease(v0);
  if (v1)
  {
    v2 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationOptionsCell, sub_1001C5AB4);
    v3 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v3, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = v2;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  }
  else
  {
    v6 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v6, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = 0;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = 0;
  }
  swift_retain();
  v5[2] = sub_1001C02F8();
  v5[3] = &protocol witness table for TTRITableCell<A>;
  v5[4] = sub_1001C042C();
  v5[5] = &protocol witness table for TTRITableCell<A>;
  v22[0] = v4;
  v7 = sub_10002A750(&qword_10064AA98);
  v8 = sub_10002A750(&qword_10064AAA0);
  v9 = sub_100023FEC(&qword_10064AAA8, &qword_10064AA98, (uint64_t)&protocol conformance descriptor for [A]);
  v10 = Sequence.removingNils<A>()(v7, v8, v9);
  v11 = swift_bridgeObjectRelease(v4);
  v12 = type metadata accessor for TTRITableGroup(0, v11);
  v13 = swift_allocObject(v12, 97, 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 1;
  *(_QWORD *)(v13 + 40) = 0;
  swift_unknownObjectWeakInit(v13 + 32, 0);
  *(_QWORD *)(v13 + 88) = 0;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_BYTE *)(v13 + 96) = 2;
  *(_QWORD *)(v13 + 48) = v10;
  swift_beginAccess(v13 + 56, v22, 1, 0);
  v14 = *(_QWORD *)(v13 + 56);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 72) = 0;
  swift_bridgeObjectRetain(v10);
  sub_1001CB58C(v14, v15, v16);
  swift_beginAccess(v13 + 80, &v21, 1, 0);
  v17 = *(_QWORD *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 88) = 0;
  v19 = *(_BYTE *)(v13 + 96);
  *(_BYTE *)(v13 + 96) = 2;
  sub_1001CB59C(v17, v18, v19);
  swift_release();
  swift_bridgeObjectRelease(v10);
  return v13;
}

uint64_t sub_1001CBA4C(uint64_t a1)
{
  return sub_1001CBA7C(a1, 5u, &OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityOptionsCell, sub_1001C5190);
}

uint64_t sub_1001CBA64(uint64_t a1)
{
  return sub_1001CBA7C(a1, 4u, &OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedOptionsCell, sub_1001C56F8);
}

uint64_t sub_1001CBA7C(uint64_t a1, unsigned __int8 a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v27;
  uint64_t v28[3];

  v7 = sub_1001BFC80();
  v8 = sub_10037C230(a2, (uint64_t)v7);
  swift_bridgeObjectRelease(v7);
  if (v8)
  {
    v9 = sub_1001C0D80(a3, a4);
    v10 = sub_10002A750(&qword_10064AA90);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100520250;
    *(_QWORD *)(v11 + 32) = v9;
    *(_QWORD *)(v11 + 40) = &protocol witness table for TTRITableCell<A>;
  }
  else
  {
    v12 = sub_10002A750(&qword_10064AA90);
    v11 = swift_allocObject(v12, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100520250;
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 40) = 0;
  }
  v28[0] = v11;
  swift_retain();
  v13 = sub_10002A750(&qword_10064AA98);
  v14 = sub_10002A750(&qword_10064AAA0);
  v15 = sub_100023FEC(&qword_10064AAA8, &qword_10064AA98, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = Sequence.removingNils<A>()(v13, v14, v15);
  v17 = swift_bridgeObjectRelease(v11);
  v18 = type metadata accessor for TTRITableGroup(0, v17);
  v19 = swift_allocObject(v18, 97, 7);
  *(_QWORD *)(v19 + 16) = 0;
  *(_BYTE *)(v19 + 24) = 1;
  *(_QWORD *)(v19 + 40) = 0;
  swift_unknownObjectWeakInit(v19 + 32, 0);
  *(_QWORD *)(v19 + 88) = 0;
  *(_OWORD *)(v19 + 72) = 0u;
  *(_OWORD *)(v19 + 56) = 0u;
  *(_BYTE *)(v19 + 96) = 2;
  *(_QWORD *)(v19 + 48) = v16;
  swift_beginAccess(v19 + 56, v28, 1, 0);
  v20 = *(_QWORD *)(v19 + 56);
  v21 = *(_QWORD *)(v19 + 64);
  v22 = *(_QWORD *)(v19 + 72);
  *(_QWORD *)(v19 + 56) = 0;
  *(_QWORD *)(v19 + 64) = 0;
  *(_QWORD *)(v19 + 72) = 0;
  swift_bridgeObjectRetain(v16);
  sub_1001CB58C(v20, v21, v22);
  swift_beginAccess(v19 + 80, &v27, 1, 0);
  v23 = *(_QWORD *)(v19 + 80);
  v24 = *(_QWORD *)(v19 + 88);
  *(_QWORD *)(v19 + 80) = 0;
  *(_QWORD *)(v19 + 88) = 0;
  v25 = *(_BYTE *)(v19 + 96);
  *(_BYTE *)(v19 + 96) = 2;
  sub_1001CB59C(v23, v24, v25);
  swift_release();
  swift_bridgeObjectRelease(v16);
  return v19;
}

uint64_t sub_1001CBCA0()
{
  void *v0;
  BOOL v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22[3];

  v0 = sub_1001BFC80();
  v1 = sub_10037C230(6u, (uint64_t)v0);
  swift_bridgeObjectRelease(v0);
  if (v1)
  {
    v2 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsOptionsCell, sub_1001C6ABC);
    v3 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v3, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = v2;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  }
  else
  {
    v6 = sub_10002A750(&qword_10064AA90);
    v4 = swift_allocObject(v6, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1005275C0;
    *(_QWORD *)(v4 + 32) = 0;
    v5 = (_QWORD *)(v4 + 32);
    *(_QWORD *)(v4 + 40) = 0;
  }
  swift_retain();
  v5[2] = sub_1001C0544();
  v5[3] = &protocol witness table for TTRITableCell<A>;
  v5[4] = sub_1001C068C();
  v5[5] = &protocol witness table for TTRITableCell<A>;
  v22[0] = v4;
  v7 = sub_10002A750(&qword_10064AA98);
  v8 = sub_10002A750(&qword_10064AAA0);
  v9 = sub_100023FEC(&qword_10064AAA8, &qword_10064AA98, (uint64_t)&protocol conformance descriptor for [A]);
  v10 = Sequence.removingNils<A>()(v7, v8, v9);
  v11 = swift_bridgeObjectRelease(v4);
  v12 = type metadata accessor for TTRITableGroup(0, v11);
  v13 = swift_allocObject(v12, 97, 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 1;
  *(_QWORD *)(v13 + 40) = 0;
  swift_unknownObjectWeakInit(v13 + 32, 0);
  *(_QWORD *)(v13 + 88) = 0;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_BYTE *)(v13 + 96) = 2;
  *(_QWORD *)(v13 + 48) = v10;
  swift_beginAccess(v13 + 56, v22, 1, 0);
  v14 = *(_QWORD *)(v13 + 56);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 72) = 0;
  swift_bridgeObjectRetain(v10);
  sub_1001CB58C(v14, v15, v16);
  swift_beginAccess(v13 + 80, &v21, 1, 0);
  v17 = *(_QWORD *)(v13 + 80);
  v18 = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 88) = 0;
  v19 = *(_BYTE *)(v13 + 96);
  *(_BYTE *)(v13 + 96) = 2;
  sub_1001CB59C(v17, v18, v19);
  swift_release();
  swift_bridgeObjectRelease(v10);
  return v13;
}

uint64_t sub_1001CBEE0()
{
  void *v0;
  BOOL v1;
  uint64_t v2;
  void *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v25;
  _QWORD *v26;

  v0 = sub_1001BFC80();
  v1 = sub_10037C230(1u, (uint64_t)v0);
  swift_bridgeObjectRelease(v0);
  if (v1)
    v2 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateOptionsCell, sub_1001C3E30);
  else
    v2 = 0;
  v3 = sub_1001BFC80();
  v4 = sub_10037C230(2u, (uint64_t)v3);
  swift_bridgeObjectRelease(v3);
  if (v4)
    v5 = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___timeOptionsCell, sub_1001C4BAC);
  else
    v5 = 0;
  v6 = sub_10002A750(&qword_10064AA90);
  v7 = swift_allocObject(v6, 192, 7);
  v8 = (_QWORD *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_100527EB0;
  if (v2)
    v9 = &protocol witness table for TTRITableCell<A>;
  else
    v9 = 0;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v9;
  swift_retain();
  v8[6] = sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1, (uint64_t)sub_1001CC358);
  v8[7] = &protocol witness table for TTRITableCell<A>;
  v8[8] = sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1, (uint64_t)sub_1001CC33C);
  v8[9] = &protocol witness table for TTRITableCell<A>;
  v8[10] = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell, sub_1001C4534);
  v8[11] = &protocol witness table for TTRITableCell<A>;
  v8[12] = sub_1001BFCCC(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2, (uint64_t)sub_1001CC314);
  v8[13] = &protocol witness table for TTRITableCell<A>;
  v8[14] = sub_1001BFE48(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell2, (uint64_t)sub_1001CC2F8);
  v8[15] = &protocol witness table for TTRITableCell<A>;
  v8[16] = sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1, (uint64_t)sub_1001CC2DC);
  v8[17] = &protocol witness table for TTRITableCell<A>;
  v8[18] = sub_1001BFFD0(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2, (uint64_t)sub_1001CC2C0);
  v8[19] = &protocol witness table for TTRITableCell<A>;
  v8[20] = sub_1001C017C();
  v8[21] = &protocol witness table for TTRITableCell<A>;
  if (v5)
    v10 = &protocol witness table for TTRITableCell<A>;
  else
    v10 = 0;
  v8[22] = v5;
  v8[23] = v10;
  v26 = v8;
  swift_retain();
  v11 = sub_10002A750(&qword_10064AA98);
  v12 = sub_10002A750(&qword_10064AAA0);
  v13 = sub_100023FEC(&qword_10064AAA8, &qword_10064AA98, (uint64_t)&protocol conformance descriptor for [A]);
  v14 = Sequence.removingNils<A>()(v11, v12, v13);
  v15 = swift_bridgeObjectRelease(v8);
  v16 = type metadata accessor for TTRITableGroup(0, v15);
  v17 = swift_allocObject(v16, 97, 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_BYTE *)(v17 + 24) = 1;
  *(_QWORD *)(v17 + 40) = 0;
  swift_unknownObjectWeakInit(v17 + 32, 0);
  *(_QWORD *)(v17 + 88) = 0;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_BYTE *)(v17 + 96) = 2;
  *(_QWORD *)(v17 + 48) = v14;
  swift_beginAccess(v17 + 56, &v26, 1, 0);
  v18 = *(_QWORD *)(v17 + 56);
  v19 = *(_QWORD *)(v17 + 64);
  v20 = *(_QWORD *)(v17 + 72);
  *(_QWORD *)(v17 + 56) = 0;
  *(_QWORD *)(v17 + 64) = 0;
  *(_QWORD *)(v17 + 72) = 0;
  swift_bridgeObjectRetain(v14);
  sub_1001CB58C(v18, v19, v20);
  swift_beginAccess(v17 + 80, &v25, 1, 0);
  v21 = *(_QWORD *)(v17 + 80);
  v22 = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v17 + 80) = 0;
  *(_QWORD *)(v17 + 88) = 0;
  v23 = *(_BYTE *)(v17 + 96);
  *(_BYTE *)(v17 + 96) = 2;
  sub_1001CB59C(v21, v22, v23);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v14);
  return v17;
}

unint64_t sub_1001CC1EC()
{
  unint64_t result;

  result = qword_10064AAF0;
  if (!qword_10064AAF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.DateOptions.Bare, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
    atomic_store(result, (unint64_t *)&qword_10064AAF0);
  }
  return result;
}

uint64_t sub_1001CC230(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E0364);
}

uint64_t sub_1001CC250()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CC274(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  __int128 v4;
  _OWORD v6[4];
  __int16 v7;

  v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  v3 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v3;
  v7 = *(_WORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  return v2(v6);
}

void sub_1001CC2B8(uint64_t a1)
{
  uint64_t v1;

  sub_1001C4ACC(a1, v1);
}

void sub_1001CC2C0(uint64_t a1)
{
  uint64_t v1;

  sub_1001C49C0(a1, v1, 1);
}

void sub_1001CC2DC(uint64_t a1)
{
  uint64_t v1;

  sub_1001C49C0(a1, v1, 0);
}

void sub_1001CC2F8(uint64_t a1)
{
  uint64_t v1;

  sub_1001C48C4(a1, v1, 1);
}

uint64_t sub_1001CC314()
{
  uint64_t v0;

  return sub_1001C484C(v0, (void (*)(uint64_t))sub_1002E58C4);
}

void sub_1001CC334(uint64_t a1)
{
  uint64_t v1;

  sub_1001C475C(a1, v1);
}

void sub_1001CC33C(uint64_t a1)
{
  uint64_t v1;

  sub_1001C48C4(a1, v1, 0);
}

uint64_t sub_1001CC358()
{
  uint64_t v0;

  return sub_1001C484C(v0, (void (*)(uint64_t))sub_1002E55D4);
}

uint64_t sub_1001CC378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v18[5];
  _OWORD v19[5];

  v0 = type metadata accessor for UIListContentConfiguration(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - v5;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  v7._object = (void *)0x8000000100563270;
  v8._object = (void *)0x8000000100563290;
  v9._countAndFlagsBits = 0x694620726568744FLL;
  v9._object = (void *)0xED0000737265746CLL;
  v8._countAndFlagsBits = 0xD000000000000019;
  v10 = TTRLocalizedString(_:value:comment:)(v7, v9, v8);
  v11 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  UIListContentConfiguration.usingRoundedSystemFont()(v11);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  UIListContentConfiguration.text.setter(v10._countAndFlagsBits, v10._object);
  memset(v19, 0, 73);
  memset(v18, 0, 73);
  v13 = sub_10002A750(&qword_10064AAE0);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100520250;
  *(_QWORD *)(v14 + 32) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup, (uint64_t (*)(uint64_t))sub_1001CBEE0);
  *(_QWORD *)(v14 + 40) = &protocol witness table for TTRITableGroup;
  v15 = type metadata accessor for TTRITableSection(0);
  swift_allocObject(v15, 217, 7);
  v16 = TTRITableSection.init(header:footer:items:)(v19, v18, v14);
  v12(v6, v0);
  return v16;
}

unint64_t sub_1001CC53C()
{
  unint64_t result;

  result = qword_10064AB38;
  if (!qword_10064AB38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.LocationOptions, &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions);
    atomic_store(result, (unint64_t *)&qword_10064AB38);
  }
  return result;
}

uint64_t sub_1001CC580(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E2CE4);
}

uint64_t sub_1001CC5A0()
{
  uint64_t v0;

  return sub_1001C5F28(v0);
}

uint64_t sub_1001CC5A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C5EA4(a1, v1);
}

unint64_t sub_1001CC5B0()
{
  unint64_t result;

  result = qword_10064AB68;
  if (!qword_10064AB68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.ListsOptions, &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions);
    atomic_store(result, (unint64_t *)&qword_10064AB68);
  }
  return result;
}

void sub_1001CC5F4(uint64_t a1)
{
  uint64_t v1;

  sub_1001C6EA4(a1, v1);
}

_QWORD *sub_1001CC5FC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1001CC7FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001CC828()
{
  uint64_t v0;

  sub_1001C7040(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001CC830()
{
  uint64_t v0;

  return sub_1001C6FAC(v0);
}

uint64_t sub_1001CC838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064AB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CC880(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRITableSectionHeaderFooter - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001CC8BC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRITableSectionHeaderFooter - 1) + 8))();
  return a1;
}

void sub_1001CC8F0()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController] = 0;
  v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_ttrAccessibilityShouldAnnounceOptionChanges] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___prioritySection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagsGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersGroup] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___documentationSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell2] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___includePastDueRemindersCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___timeOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationQuickPicksCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationDetailCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagToggleShowMoreCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsOptionsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listPopoverCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorCell] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRISmartListFilterEditorViewController.swift", 55, 2, 37, 0);
  __break(1u);
}

uint64_t sub_1001CCB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[80];
  _BYTE v18[80];
  _QWORD v19[10];

  v0 = type metadata accessor for UIListContentConfiguration(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v17[-v5];
  v7 = sub_1001C0944();
  v9 = v8;
  v10 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
  UIListContentConfiguration.usingRoundedSystemFont()(v10);
  v11 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v11(v3, v0);
  UIListContentConfiguration.text.setter(v7, v9);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)(v19, v3, 0, 1);
  sub_1001CC880((uint64_t)v19, (uint64_t)v18);
  memset(v17, 0, 73);
  v12 = sub_10002A750(&qword_10064AAE0);
  v13 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  *(_QWORD *)(v13 + 32) = sub_1001C0A0C();
  *(_QWORD *)(v13 + 40) = &protocol witness table for TTRITableGroup;
  v14 = type metadata accessor for TTRITableSection(0);
  swift_allocObject(v14, 217, 7);
  v15 = TTRITableSection.init(header:footer:items:)(v18, v17, v13);
  sub_1001CC8BC((uint64_t)v19);
  v11(v6, v0);
  return v15;
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t sub_1001CCD04(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C9430(a1, v1);
}

uint64_t sub_1001CCD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_1001CCD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

unint64_t sub_1001CCD78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064AB90;
  if (!qword_10064AB90)
  {
    v1 = type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRIHelpLinkHeaderFooterContentConfiguration, v1);
    atomic_store(result, (unint64_t *)&qword_10064AB90);
  }
  return result;
}

uint64_t sub_1001CCDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

unint64_t sub_1001CCDFC()
{
  unint64_t result;

  result = qword_10064ABA0;
  if (!qword_10064ABA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.PriorityOptions, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
    atomic_store(result, (unint64_t *)&qword_10064ABA0);
  }
  return result;
}

uint64_t sub_1001CCE40(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E26EC);
}

unint64_t sub_1001CCE60()
{
  unint64_t result;

  result = qword_10064ABC0;
  if (!qword_10064ABC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.FlaggedOptions, &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions);
    atomic_store(result, (unint64_t *)&qword_10064ABC0);
  }
  return result;
}

uint64_t sub_1001CCEA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E2A14);
}

uint64_t sub_1001CCEC4(__int128 *a1, uint64_t a2)
{
  initializeWithTake for TTRSmartListFilterEditorViewModel.ListsData(a2, a1);
  return a2;
}

uint64_t sub_1001CCF00(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 169) <= 1u)
    return *(unsigned __int8 *)(a1 + 169);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1001CCF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064ABD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CCF60(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(void **)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 136);
  v9 = *(void **)(a1 + 152);
  v10 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  sub_10002B764(v2, v3, v4, v5, v6, v7, v8);
  sub_1001CD04C(v20, v19, v18, v17, v16, v15, v14, v13, v12, *((void **)&v12 + 1), v9, v10);
  return a1;
}

id sub_1001CD04C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, void *a10, void *a11, char a12)
{
  id result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain(a2);
    sub_10002B764(a3, a4, a5, a6, a7, a8, a9 & 1);
    return sub_10002B7A0(a10, a11, a12 & 1);
  }
  return result;
}

uint64_t sub_1001CD0EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v12 = *(_OWORD *)(a1 + 112);
  v9 = *(void **)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  sub_1001CD04C(v15, v14, v4, v5, v6, v7, v8, v13, v12, *((void **)&v12 + 1), v9, v10);
  return a1;
}

void sub_1001CD1B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, void *a10, void *a11, char a12)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    sub_10002B328(a3, a4, a5, a6, a7, a8, a9 & 1);
    sub_10002B318(a10, a11, a12 & 1);
  }
}

uint64_t sub_1001CD250(uint64_t a1)
{
  sub_1001CD2B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_OWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(void **)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144),
    *(void **)(a1 + 152),
    *(_BYTE *)(a1 + 160));
  return a1;
}

void sub_1001CD2B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *a19, void *a20,char a21)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    sub_10002B328(a3, a4, a5, a6, a7, a8, a9 & 1);
    sub_1001CD1B0(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  }
}

id sub_1001CD3C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if (a5 < 0)
    return (id)swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a2);
  return a3;
}

void sub_1001CD3F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  swift_bridgeObjectRelease(a2);
  if ((a5 & 0x80) == 0)

}

unint64_t sub_1001CD440()
{
  unint64_t result;

  result = qword_10064ABE8;
  if (!qword_10064ABE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.TimeOptions, &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions);
    atomic_store(result, (unint64_t *)&qword_10064ABE8);
  }
  return result;
}

uint64_t sub_1001CD484(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C647C(a1, v1, (void (*)(uint64_t))sub_1002E2270);
}

uint64_t sub_1001CD4A4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(void **)(a1 + 88);
  v4 = *(void **)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(void **)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 136);
  v8 = *(_QWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 176);
  v15 = *(_QWORD *)(a1 + 192);
  v10 = *(_QWORD *)(a1 + 208);
  sub_1000DBB78(*(id *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v2);
  v11 = v3;
  v12 = v4;
  swift_bridgeObjectRetain(v5);
  v13 = v6;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v15);
  return a1;
}

unint64_t sub_1001CD574()
{
  unint64_t result;

  result = qword_10064AC20;
  if (!qword_10064AC20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSmartListFilterEditorViewModel.FilterOperationOptions, &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions);
    atomic_store(result, (unint64_t *)&qword_10064AC20);
  }
  return result;
}

uint64_t sub_1001CD5B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return sub_1001C753C(a1, a2, a3, a4 & 1, v4);
}

uint64_t sub_1001CD5C4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

void sub_1001CD5F4()
{
  sub_1001C961C();
}

uint64_t sub_1001CD63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064AC40);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064AC40);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNameViewController()
{
  return objc_opt_self(_TtC9Reminders50TTRIRemindersListEditableSectionNameViewController);
}

void sub_1001CD784(char *a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  char v5;
  uint64_t v6;
  char *v7;
  char v8[24];

  v3 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView) = a1;
  v4 = &a1[direct field offset for TTRIExpandingTextView.lineIndexWhereClippingBegins];
  swift_beginAccess(&a1[direct field offset for TTRIExpandingTextView.lineIndexWhereClippingBegins], v8, 0, 0);
  v5 = v4[8];
  v6 = v1
     + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins;
  *(_QWORD *)v6 = *(_QWORD *)v4;
  *(_BYTE *)(v6 + 8) = v5;
  v7 = a1;
  objc_msgSend(v7, "setDelegate:", v1);
  if (!v3 || (v3, v3 != v7))
    *(_BYTE *)(v1
             + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_needsLayoutEmptyTextView) = 1;
}

void sub_1001CD838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  double v14;
  NSString v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t inited;
  void *v23;
  NSString *v24;
  id v25;
  uint64_t v26;
  NSString *v27;
  id v28;
  unint64_t v29;
  id v30;
  NSString v31;
  Class isa;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  id v42;
  NSString v43;
  uint64_t v44;
  id v45;
  _BYTE v46[112];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - v8;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  if (!v10)
    return;
  v45 = v10;
  if ((objc_msgSend(v45, "isEditing") & 1) != 0)
  {

    return;
  }
  sub_1001CE5DC(a1, (uint64_t)v9);
  v11 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (v12(v9, 1, v11) == 1)
  {
    v13 = v45;
    sub_1001CE624((uint64_t)v9);
    v15 = 0;
  }
  else
  {
    v16 = *(_QWORD *)&v9[*(int *)(v11 + 20) + 8];
    v17 = v45;
    swift_bridgeObjectRetain(v16);
    sub_1001CE664((uint64_t)v9);
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  objc_msgSend(v45, "setText:", v15, v14);

  sub_1001CE5DC(a1, (uint64_t)v6);
  if (v12(v6, 1, v11) == 1)
  {
    sub_1001CE624((uint64_t)v6);
  }
  else
  {
    TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)(0);
    v19 = v18;
    sub_1001CE664((uint64_t)v6);
    if (v19)
    {
      v20 = objc_msgSend(v45, "font");
      if (!v20)
      {
        sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
        v20 = (id)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, 0, 1, 0);
      }
      v21 = sub_10002A750(&qword_10064BB40);
      inited = swift_initStackObject(v21, v46);
      *(_OWORD *)(inited + 16) = xmmword_1005201E0;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      v23 = (void *)objc_opt_self(UIColor);
      v24 = NSForegroundColorAttributeName;
      v25 = objc_msgSend(v23, "placeholderTextColor");
      v26 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
      *(_QWORD *)(inited + 40) = v25;
      *(_QWORD *)(inited + 64) = v26;
      *(_QWORD *)(inited + 72) = NSFontAttributeName;
      *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
      *(_QWORD *)(inited + 80) = v20;
      v27 = NSFontAttributeName;
      v28 = v20;
      v29 = sub_100350498(inited);
      v30 = objc_allocWithZone((Class)NSAttributedString);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
      type metadata accessor for Key(0);
      sub_1000D2BEC();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v33 = objc_msgSend(v30, "initWithString:attributes:", v31, isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

      objc_msgSend(v45, "setAttributedPlaceholder:", v33);
      goto LABEL_14;
    }
  }
  objc_msgSend(v45, "setAttributedPlaceholder:", 0);
LABEL_14:
  if (*(_BYTE *)(v2
                + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_needsLayoutEmptyTextView) == 1)
  {
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_needsLayoutEmptyTextView) = 0;
    v34 = objc_msgSend(v45, "text");
    if (!v34)
    {
      __break(1u);
      return;
    }
    v35 = v34;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    swift_bridgeObjectRelease(v38);
    v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0)
      v39 = v36 & 0xFFFFFFFFFFFFLL;
    if (!v39)
    {
      v40 = v45;
      v41 = String._bridgeToObjectiveC()();
      objc_msgSend(v40, "setText:", v41);

      objc_msgSend(v40, "layoutIfNeeded");
      v42 = v40;
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v42, "setText:", v43);

      return;
    }
  }

}

void sub_1001CDCDC(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(void);
  _QWORD *v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char v37[8];
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;

  v4 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  if (v4)
  {
    v5 = v3;
    v8 = a2 & 1;
    v9 = v4;
    if ((a3 & 1) == 0)
      TTRIExpandingTextView.forceContentOffset(_:)(0.0, 0.0);
    objc_msgSend(v9, "setScrollEnabled:", a3 & 1);
    if ((_DWORD)v8)
    {
      v10 = *(void (**)(void))((swift_isaMask & *v9) + 0x68);
      v11 = v9;
      v10();
      v13 = v12;

      if ((v13 & 1) == 0)
      {
        v14 = v11;
        v15 = ((uint64_t (*)(void))v10)();
        v17 = v16;

        v18 = v5
            + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins;
        *(_QWORD *)v18 = v15;
        *(_BYTE *)(v18 + 8) = v17 & 1;
      }
    }
    v19 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v9) + 0x70);
    v20 = v9;
    v19(a1, v8);

    if (qword_10063D430 != -1)
      swift_once(&qword_10063D430, sub_1001CD63C);
    v21 = type metadata accessor for Logger(0);
    sub_100012DC4(v21, (uint64_t)qword_10064AC40);
    v35 = v20;
    v22 = Logger.logObject.getter(v35);
    v23 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(32, -1);
      v25 = swift_slowAlloc(96, -1);
      v40 = v25;
      *(_DWORD *)v24 = 136315650;
      v38 = sub_100027E40(0xD000000000000049, 0x800000010056AA00, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v24 + 4, v24 + 12);
      *(_WORD *)(v24 + 12) = 2080;
      v26 = objc_msgSend(v35, "isScrollEnabled");
      v27 = v26 == 0;
      if (v26)
        v28 = 1702195828;
      else
        v28 = 0x65736C6166;
      if (v27)
        v29 = 0xE500000000000000;
      else
        v29 = 0xE400000000000000;
      v38 = sub_100027E40(v28, v29, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v24 + 14, v24 + 22);

      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v24 + 22) = 2080;
      v30 = &v35[direct field offset for TTRIExpandingTextView.lineIndexWhereClippingBegins];
      swift_beginAccess(&v35[direct field offset for TTRIExpandingTextView.lineIndexWhereClippingBegins], &v38, 0, 0);
      v37[0] = v30[8];
      v31 = sub_10002A750((uint64_t *)&unk_10064ACD0);
      v32 = Optional.descriptionOrNil.getter(v31);
      v34 = v33;
      v36 = sub_100027E40(v32, v33, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v24 + 24, v24 + 32);

      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s {isScrollEnabled: %s, lineIndexWhereClippingBegins: %s}", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy(v25, 3, &type metadata for Any[8]);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1001CE09C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "text");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

void sub_1001CE110()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  if (v1)
  {
    v2 = v1;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setText:", v3);

  }
}

id sub_1001CE1A0()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView);
  if (result)
    return objc_msgSend(result, "resignFirstResponder");
  return result;
}

void sub_1001CE214(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  NSString v17;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_presenter), a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 16))(ObjectType);
  v7 = objc_msgSend(a1, "textColor");
  v8 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousTextColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousTextColor) = v7;

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(a1, "setTextColor:", v9);

  if ((sub_100415E40() & 1) != 0)
  {
    v10 = objc_msgSend(a1, "text");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousText);
    v16 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousText
                    + 8);
    *v15 = v12;
    v15[1] = v14;
    swift_bridgeObjectRelease(v16);
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v17);

  }
}

void sub_1001CE4D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *Strong;
  id v9;

  v2 = v1;
  v3 = OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousTextColor;
  objc_msgSend(a1, "setTextColor:", *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousTextColor));
  v4 = *(void **)(v2 + v3);
  *(_QWORD *)(v2 + v3) = 0;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_presenter), v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 40))(ObjectType);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_ttriAccessibilityViewToFocusWhenEditingEnds);
  if (Strong)
  {
    v9 = Strong;
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, Strong);

  }
}

uint64_t sub_1001CE5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100654970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CE624(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100654970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001CE664(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1001CE6A0(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v8;

  v8 = sub_1001D5318(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease(a4);
  swift_release();
  sub_10003E230((uint64_t)a3);
  swift_release();
  return v8;
}

uint64_t sub_1001CE720(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  id v17;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3)
         : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v17 = v8;
      v11 = a1(&v17);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v13 & 1;
      }
      v12 = v11;

      if ((v12 & 1) == 0)
      {
        swift_bridgeObjectRelease(a3);
        v13 = 0;
        return v13 & 1;
      }
      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  v13 = 1;
  return v13 & 1;
}

uint64_t sub_1001CE850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064ACE0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064ACE0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001CE8E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for Calendar(0);
  v2 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - v13;
  v15 = a1[3];
  v16 = a1[4];
  sub_10001413C(a1, v15);
  v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 104))(v15, v16);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "date");

  static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v7, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100653A90);
    v22 = 0;
    return v22 & 1;
  }
  v21 = ((uint64_t (*)(char *, char *, uint64_t))v20)(v14, v7, v8);
  static Calendar.current.getter(v21);
  v22 = Calendar.isDateInToday(_:)(v14);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v22 & 1;
}

uint64_t sub_1001CEB04()
{
  id v0;
  char v1;

  v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  v1 = TTRUserDefaults.showingLargeAttachments(forType:)(1);

  return v1 & 1;
}

void sub_1001CEB40(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 1);

}

_UNKNOWN **sub_1001CEB8C()
{
  return &off_1005EA940;
}

uint64_t sub_1001CEB98()
{
  uint64_t v0;
  uint64_t result;

  result = 64;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount + 8) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount) <= 0)
      return 64;
    else
      return 65;
  }
  return result;
}

double sub_1001CEBC0@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  char v13;
  uint64_t v14;
  void *v15;
  double result;

  v5 = *v3;
  v6 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource);
  if (!v6)
  {
    v13 = 0;
LABEL_6:
    v14 = swift_allocObject(&unk_1005F5E78, 32, 7);
    *(_BYTE *)(v14 + 16) = v13 & 1;
    *(_QWORD *)(v14 + 24) = v5;
    v15 = sub_1001D591C;
    goto LABEL_7;
  }
  v7 = v3;
  v9 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource), a2);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 24);
  v12 = swift_unknownObjectRetain(v6);
  v13 = v11(ObjectType, v9, v12);
  swift_unknownObjectRelease(v6);
  if ((a1 & 1) == 0 || (v13 & 1) == 0)
    goto LABEL_6;
  v14 = swift_allocObject(&unk_1005F5EA0, 32, 7);
  *(_QWORD *)(v14 + 16) = v7;
  *(_QWORD *)(v14 + 24) = v5;
  swift_retain();
  v15 = sub_1001D594C;
LABEL_7:
  result = 0.0;
  *(_OWORD *)a3 = xmmword_100522BB0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = v14;
  return result;
}

void sub_1001CECD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v7 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_10064B688);
  v16.n128_f64[0] = __chkstk_darwin(v14);
  v17 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
  if (!v18)
  {
    v25 = 1;
LABEL_16:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v25, 1, v33, v16);
    return;
  }
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    v24 = swift_bridgeObjectRetain(v18);
    v26 = 1;
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v17, v26, 1, v10, v24);
    v27 = swift_bridgeObjectRelease(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v17, 1, v10, v27) == 1)
    {
      sub_1000073A0((uint64_t)v17, &qword_10064B688);
      v25 = 1;
    }
    else
    {
      sub_10002B1E8((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10001F544((uint64_t)v17, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      sub_10002B1E8((uint64_t)v6, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v25 = 0;
    }
    goto LABEL_16;
  }
  v28 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v10;
  v30 = v6;
  v31 = v7;
  v32 = a2;
  v20 = v18 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  swift_bridgeObjectRetain(v18);
  while (v19 <= *(_QWORD *)(v18 + 16))
  {
    --v19;
    v21 = v20 + *(_QWORD *)(v11 + 72) * v19;
    sub_10002B1E8(v21, (uint64_t)v13, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_10002B1E8((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (qword_10063D470 != -1)
      swift_once(&qword_10063D470, sub_1001D17D0);
    v22 = sub_100012DC4(v33, (uint64_t)qword_10064AD88);
    v23 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v9, v22);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F544((uint64_t)v13, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    if ((v23 & 1) == 0)
    {
      v17 = v28;
      sub_10002B1E8(v21, (uint64_t)v28, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v26 = 0;
      v7 = v31;
      a2 = v32;
      v10 = v29;
      v6 = v30;
      goto LABEL_13;
    }
    if (!v19)
    {
      v26 = 1;
      v7 = v31;
      a2 = v32;
      v10 = v29;
      v6 = v30;
      v17 = v28;
      goto LABEL_13;
    }
  }
  __break(1u);
}

uint64_t sub_1001CEFEC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    if (qword_10063D450 != -1)
      swift_once(&qword_10063D450, sub_1001D1790);
    v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v4 = v3;
    v5 = qword_10064AD28;
  }
  else
  {
    if (qword_10063D440 != -1)
      swift_once(&qword_10063D440, sub_1001D1770);
    v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v4 = v3;
    v5 = qword_10064ACF8;
  }
  v6 = sub_100012DC4(v3, (uint64_t)v5);
  sub_10002B1E8(v6, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 0, 1, v4);
}

double sub_1001CF0BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001D1844();
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  LODWORD(v4) = swift_getEnumCaseMultiPayload(v6, v4);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((_DWORD)v4 == 2)
  {
    v8 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(_QWORD *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = &off_1005F2998;
    v9 = sub_100028D70((_QWORD *)a2);
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)((char *)v9 + *(int *)(v8 + 20)) = v7;
    *((_BYTE *)v9 + *(int *)(v8 + 24)) = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001CF1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001D1844();
  sub_10000735C(a1, (uint64_t)v8, (uint64_t *)&unk_100640EB0);
  v10 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  result = sub_10000F614((uint64_t)v8, v11+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_childIndex) = a2;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability) = v9;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_1005F2830;
  *a3 = v11;
  return result;
}

uint64_t sub_1001CF2BC()
{
  return 0;
}

void sub_1001CF2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a1;
  v3 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v3);
  v52 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_10064B690);
  __chkstk_darwin(v5);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_10064B698);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  __chkstk_darwin(v7);
  v51 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v47 = (char *)&v42 - v10;
  v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v11);
  v48 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v54 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - v18;
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DateComponents(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = objc_msgSend(*(id *)(a2 + 16), "displayDate", v26);

  if (!v29)
  {
    v42 = v16;
    v43 = v19;
    v44 = v25;
    v45 = v24;
    v30 = type metadata accessor for TTRReminderEditor(0);
    Date.init()(v30);
    static TTRReminderEditor.todayDueDateComponents(now:)(v23);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    swift_retain();
    swift_retain();
    v31 = (uint64_t)v54;
    TTRMutableTreeStorage.parent(of:)(v56);
    swift_release();
    v32 = swift_release();
    v33 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v53 + 48))(v31, 1, v55, v32) != 1)
    {
      v37 = v31;
      v38 = (uint64_t)v43;
      sub_10001F580(v37, (uint64_t)v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v39 = v38;
      v40 = (uint64_t)v42;
      sub_10002B1E8(v39, (uint64_t)v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v41 = (char *)&loc_1001CF644 + dword_1001CF804[swift_getEnumCaseMultiPayload(v40, v33)];
      __asm { BR              X10 }
    }
    sub_1000073A0(v31, (uint64_t *)&unk_100640EB0);
    v34 = (uint64_t)v52;
    v36 = v44;
    v35 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v52, v28, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v35);
    TTRReminderEditor.edit(dueDateComponents:)(v34);
    sub_1000073A0(v34, &qword_100641728);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v35);
  }
}

void sub_1001CF70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  sub_10001F580(v0, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v10 = *(_QWORD *)(v9 - 176);
  sub_1001D1BAC(v1, v10);
  v11 = v1;
  v12 = v10;
  sub_10001F544(v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F544(*(_QWORD *)(v9 - 200), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7) == 1)
  {
    sub_1000073A0(v10, &qword_10064B690);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v13(v5, v12, v2);
    v13(v6, v5, v2);
    v13(v4, v6, v2);
  }
  JUMPOUT(0x1001CF690);
}

BOOL sub_1001CF834(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void (*v24)(char *, uint64_t);
  Swift::Bool v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v36;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
  if (v14)
  {
    v16 = v14;
    v17 = v15;
    v18 = swift_getObjectType(v14, v15);
    LOBYTE(v17) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 56))(a1, v18, v17);
    swift_unknownObjectRelease(v16);
    if ((v17 & 1) == 0)
      return 0;
  }
  v19 = a1[3];
  v20 = a1[4];
  sub_10001413C(a1, v19);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(v19, v20);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "date");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

    static Date.rem_startOfTomorrow.getter();
    LOBYTE(v23) = static Date.< infix(_:_:)(v10, v7);
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v7, v4);
    v24(v10, v4);

    if ((v23 & 1) != 0)
      return 1;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_10001413C(a1, v26);
  v28 = (void *)TTRReminderProtocol.mostRelevantAlarmLocationTrigger()(v26, v27);
  if (!v28)
    return 0;
  v29 = v28;
  v30 = objc_msgSend(v28, "structuredLocation");
  v31 = (void *)REMStructuredLocation.clCircularRegion.getter();

  v32 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_currentLocation);
  if (v32)
  {
    v33 = v32;
    v34 = (void *)REMStructuredLocation.clCircularRegion.getter();

    v25 = CLCircularRegion.overlaps(_:)((CLCircularRegion)v31);
  }
  else
  {
    v25 = 0;
  }

  return v25;
}

double sub_1001CFA5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_1001D1844();
  sub_100125824(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001CFAA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 0;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_1001CFB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 0;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

uint64_t sub_1001CFD90(void *a1, uint64_t a2, void *a3)
{
  return sub_1001D5648(a1, a3);
}

void *sub_1001CFD98()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList);
  v2 = v1;
  return v1;
}

uint64_t sub_1001CFDD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems);
  swift_bridgeObjectRetain(v6);
  v7 = sub_10037B2D0(a1, v6);
  swift_bridgeObjectRelease(v6);
  sub_10002B1E8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if ((v7 & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders);
    swift_beginAccess(v9, v13, 0, 0);
    v10 = *v9;
    swift_bridgeObjectRetain(*v9);
    v8 = sub_10037B2D0((uint64_t)v5, v10);
    swift_bridgeObjectRelease(v10);
  }
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return v8 & 1;
}

double sub_1001CFEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  char *v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  __int128 v129[2];
  _QWORD v130[5];

  v106 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v110 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v105 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v108 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v6);
  v107 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v115 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v114 = (char *)&v103 - v11;
  v123 = sub_10002A750(&qword_10064B6A8);
  __chkstk_darwin(v123);
  v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v122);
  v121 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v15);
  v112 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v17);
  v116 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v103 - v20;
  __chkstk_darwin(v22);
  v117 = (uint64_t)&v103 - v23;
  __chkstk_darwin(v24);
  v109 = (uint64_t)&v103 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v103 - v27;
  __chkstk_darwin(v29);
  v111 = (uint64_t)&v103 - v30;
  v31 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v113 = (uint64_t)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v128 = (char *)&v103 - v35;
  __chkstk_darwin(v36);
  v118 = (uint64_t)&v103 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v103 - v39;
  v41 = v1;
  sub_100471230(a1);
  v124 = a1;
  sub_10002B1E8(a1, (uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v40, v31);
  sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload != 4)
    return result;
  v119 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v120 = v41;
  v44 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v125 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v125(v28, 1, 1, v31);
  swift_retain();
  swift_retain();
  v45 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v28);
  swift_release();
  v103 = v28;
  sub_1000073A0((uint64_t)v28, (uint64_t *)&unk_100640EB0);
  v46 = v45[2];
  v126 = v31;
  v127 = v32;
  if (v46)
  {
    v47 = v45;
    v48 = v118;
    sub_10002B1E8((uint64_t)v45 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)), v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v49 = swift_getEnumCaseMultiPayload(v48, v31);
    sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v49)
    {
      v50 = swift_release();
    }
    else
    {
      swift_retain();
      v45 = sub_100393344((uint64_t)v45, v44);
      swift_bridgeObjectRelease(v47);
      swift_release_n(v44, 2);
    }
    v32 = v127;
  }
  else
  {
    swift_release();
    v50 = swift_bridgeObjectRelease(v45);
    v45 = _swiftEmptyArrayStorage;
  }
  v51 = v45[2];
  v52 = v117;
  if (!v51)
  {
    v77 = 1;
    v78 = v111;
    goto LABEL_23;
  }
  v53 = (uint64_t)v45 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  v118 = *(_QWORD *)(v32 + 72);
  v104 = v45;
  swift_bridgeObjectRetain(v45);
  v54 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
  v55 = (uint64_t)v128;
  while (1)
  {
    sub_10002B1E8(v53, v55, v54);
    v57 = v121;
    sub_10002B1E8(v55, v121, v54);
    v58 = v125;
    v59 = v126;
    v125((char *)v57, 0, 1, v126);
    swift_storeEnumTagMultiPayload(v57, v122, 0);
    swift_retain();
    sub_100383D24(v57, v52);
    sub_1000073A0(v57, &qword_10064B6B0);
    swift_release();
    v60 = v54;
    sub_10002B1E8(v124, (uint64_t)v21, v54);
    v58(v21, 0, 1, v59);
    v61 = (uint64_t)&v13[*(int *)(v123 + 48)];
    sub_10000735C(v52, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v21, v61, (uint64_t *)&unk_100640EB0);
    v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
    if (v62(v13, 1, v59) == 1)
      break;
    v63 = (uint64_t)v13;
    v64 = (uint64_t)v13;
    v65 = v116;
    sub_10000735C(v63, v116, (uint64_t *)&unk_100640EB0);
    if (v62((char *)v61, 1, v59) == 1)
    {
      v66 = v21;
      sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
      v67 = v117;
      sub_1000073A0(v117, (uint64_t *)&unk_100640EB0);
      sub_10001F544(v65, v54);
      v13 = (char *)v64;
      v52 = v67;
      v21 = v66;
      v55 = (uint64_t)v128;
      goto LABEL_11;
    }
    v68 = v113;
    v69 = sub_10001F580(v61, v113, v54);
    v70 = v114;
    v71 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v69);
    v72 = (uint64_t)v115;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v71);
    v73 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v70, v72);
    sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v74 = (uint64_t)v70;
    v54 = v60;
    sub_10001F544(v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v68, v60);
    v75 = v21;
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    v76 = v117;
    sub_1000073A0(v117, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v65, v60);
    sub_1000073A0(v64, (uint64_t *)&unk_100640EB0);
    v13 = (char *)v64;
    v52 = v76;
    v21 = v75;
    v55 = (uint64_t)v128;
    if ((v73 & 1) != 0)
      goto LABEL_21;
LABEL_12:
    sub_10001F544(v55, v54);
    v53 += v118;
    if (!--v51)
    {
      v45 = v104;
      v50 = swift_bridgeObjectRelease(v104);
      v77 = 1;
      v78 = v111;
      goto LABEL_22;
    }
  }
  sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v52, (uint64_t *)&unk_100640EB0);
  v56 = v62((char *)v61, 1, v59);
  v55 = (uint64_t)v128;
  if (v56 != 1)
  {
LABEL_11:
    sub_1000073A0((uint64_t)v13, &qword_10064B6A8);
    goto LABEL_12;
  }
  sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
LABEL_21:
  v45 = v104;
  swift_bridgeObjectRelease(v104);
  v78 = v111;
  sub_10001F580(v55, v111, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v77 = 0;
LABEL_22:
  v32 = v127;
LABEL_23:
  v79 = v126;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v125)(v78, v77, 1, v126, v50);
  swift_bridgeObjectRelease(v45);
  v80 = v109;
  sub_10000735C(v78, v109, (uint64_t *)&unk_100640EB0);
  v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v80, 1, v79);
  v82 = v110;
  v83 = (uint64_t)v112;
  if (v81 == 1)
  {
    sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
    v84 = v80;
    goto LABEL_25;
  }
  if (swift_getEnumCaseMultiPayload(v80, v79) != 1)
  {
    sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return result;
  }
  sub_10001F580(v80, v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v85 = v120;
  swift_beginAccess(v120 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders, v130, 33, 0);
  v86 = v107;
  sub_1000F4D80(v83, v107);
  sub_1000073A0(v86, &qword_100644980);
  swift_endAccess(v130);
  v87 = *(_QWORD *)(v85 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
  if (!v87)
  {
    sub_10001F544(v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v84 = v78;
LABEL_25:
    sub_1000073A0(v84, (uint64_t *)&unk_100640EB0);
    return result;
  }
  v88 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v108, 1, 1, v88);
  swift_bridgeObjectRetain(v87);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v89 = &_swiftEmptySetSingleton;
    goto LABEL_30;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v89 = v101;
    goto LABEL_44;
  }
  v89 = &_swiftEmptySetSingleton;
  v83 = (uint64_t)v112;
  v78 = v111;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_30;
LABEL_44:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v83 = (uint64_t)v112;
    v78 = v111;
LABEL_30:
    v90 = &_swiftEmptySetSingleton;
    v91 = (uint64_t)v103;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_31;
    goto LABEL_34;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v90 = v102;
  v83 = (uint64_t)v112;
  v78 = v111;
  v91 = (uint64_t)v103;
LABEL_31:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_34:
    v93 = &_swiftEmptySetSingleton;
    v95 = &_swiftEmptySetSingleton;
    v94 = (uint64_t)v105;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_35;
    goto LABEL_39;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v93 = v92;
  v94 = (uint64_t)v105;
LABEL_35:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v95 = v96;
  }
  else
  {
    v95 = &_swiftEmptySetSingleton;
  }
LABEL_39:
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v89, v90, v93, v95, &_swiftEmptySetSingleton);
  v97 = type metadata accessor for TodayViewReminderIDProvider();
  v98 = swift_allocObject(v97, 16, 7);
  v125((char *)v91, 1, 1, v126);
  v130[3] = v97;
  v130[4] = &off_1005F5D60;
  v130[0] = v98;
  sub_100010634((uint64_t)v130, (uint64_t)v129);
  v99 = swift_allocObject(&unk_1005F5E50, 72, 7);
  *(_QWORD *)(v99 + 16) = v87;
  sub_10002E37C(v129, v99 + 24);
  *(_QWORD *)(v99 + 64) = v120;
  swift_bridgeObjectRetain(v87);
  swift_retain();
  swift_retain();
  v100 = v108;
  sub_10047C8F8(1, v108, (uint64_t (*)(uint64_t))sub_1001D5A68, v99, v94, 0, v91);
  swift_release();
  sub_100027F10(v130);
  swift_bridgeObjectRelease(v87);
  sub_1000073A0(v91, (uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v94, v106);
  sub_1000073A0(v100, &qword_100649CA0);
  sub_10001F544(v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1001D0BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  _QWORD *v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120[2];
  _QWORD v121[5];
  char v122[8];

  v100 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v104 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10002A750(&qword_10064B6A0);
  __chkstk_darwin(v112);
  v118 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v108 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v9);
  v107 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v115 = (uint64_t)&v93 - v12;
  __chkstk_darwin(v13);
  v119 = (uint64_t)&v93 - v14;
  v15 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v15);
  v105 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v102 = (uint64_t)&v93 - v18;
  v113 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v106 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v116 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v117 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v93 - v23;
  __chkstk_darwin(v25);
  v103 = (uint64_t)&v93 - v26;
  v109 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v111 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v93 - v30;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders, v122, 0, 0);
  v33 = *v32;
  swift_bridgeObjectRetain(*v32);
  v114 = a1;
  LOBYTE(a1) = sub_10037B2D0(a1, v33);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
  if ((a1 & 1) != 0)
    return result;
  sub_10002B1E8(v114, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_beginAccess(v32, v121, 33, 0);
  sub_1004809A0((uint64_t)v31, (uint64_t)v28);
  sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_endAccess(v121);
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
  if (!v35)
    return result;
  v101 = v31;
  v94 = v1;
  v36 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v37 = v106;
  v38 = v35;
  v39 = v105;
  v40 = v113;
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
  v95(v105, 1, 1, v113);
  v97 = v38;
  swift_bridgeObjectRetain(v38);
  v96 = v36;
  swift_retain();
  swift_retain();
  v41 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v39);
  swift_release();
  sub_1000073A0(v39, (uint64_t *)&unk_100640EB0);
  if (v41[2])
  {
    sub_10002B1E8((uint64_t)v41 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v40);
    sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v43 = (uint64_t)v41;
      v44 = v96;
      swift_retain();
      v45 = sub_100393344(v43, v44);
      swift_bridgeObjectRelease(v43);
      swift_release();
      v41 = v45;
    }
    v46 = v106;
  }
  else
  {
    swift_bridgeObjectRelease(v41);
    v41 = _swiftEmptyArrayStorage;
    v46 = v37;
  }
  v47 = v41[2];
  v48 = v97;
  if (!v47)
  {
    v72 = 1;
    v73 = v102;
    goto LABEL_26;
  }
  v49 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v93 = v41;
  v50 = (uint64_t)v41 + v49;
  v110 = *(_QWORD *)(v46 + 72);
  v51 = &qword_100644980;
  v52 = v109;
  while (1)
  {
    v54 = v51;
    v55 = v117;
    sub_10002B1E8(v50, v117, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v56 = v55;
    v57 = v116;
    sub_10002B1E8(v56, v116, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v57, v40) == 1)
    {
      v58 = v108;
      sub_10001F580(v116, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v59 = v119;
      sub_10002B1E8(v58, v119, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v60 = v111;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
      v61(v59, 0, 1, v52);
    }
    else
    {
      sub_10001F544(v116, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v60 = v111;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
      v61(v119, 1, 1, v52);
    }
    v62 = v115;
    sub_10002B1E8(v114, v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v61(v62, 0, 1, v52);
    v63 = v118;
    v64 = v118 + *(int *)(v112 + 48);
    v51 = v54;
    sub_10000735C(v119, v118, v54);
    sub_10000735C(v62, v64, v54);
    v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
    if (v65(v63, 1, v52) == 1)
      break;
    v66 = v115;
    v67 = v118;
    v68 = v119;
    v69 = v107;
    sub_10000735C(v118, v107, v51);
    if (v65(v64, 1, v52) == 1)
    {
      sub_1000073A0(v66, v51);
      sub_1000073A0(v68, v51);
      sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v40 = v113;
      v52 = v109;
      goto LABEL_11;
    }
    v70 = (uint64_t)v101;
    sub_10001F580(v64, (uint64_t)v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v71 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v69, v70);
    sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v66, v51);
    sub_1000073A0(v68, v51);
    sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v67, v51);
    v40 = v113;
    v52 = v109;
    if ((v71 & 1) != 0)
      goto LABEL_24;
LABEL_12:
    sub_10001F544(v117, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v50 += v110;
    if (!--v47)
    {
      v72 = 1;
      v48 = v97;
      v73 = v102;
      goto LABEL_25;
    }
  }
  sub_1000073A0(v115, v54);
  sub_1000073A0(v119, v54);
  v53 = v65(v64, 1, v52);
  v40 = v113;
  if (v53 != 1)
  {
LABEL_11:
    sub_1000073A0(v118, &qword_10064B6A0);
    goto LABEL_12;
  }
  sub_1000073A0(v118, &qword_100644980);
LABEL_24:
  v73 = v102;
  sub_10001F580(v117, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v72 = 0;
  v48 = v97;
LABEL_25:
  v46 = v106;
  v41 = v93;
LABEL_26:
  v74 = v95;
  v95(v73, v72, 1, v40);
  swift_release();
  v75 = swift_bridgeObjectRelease(v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v46 + 48))(v73, 1, v40, v75) == 1)
  {
    swift_bridgeObjectRelease(v48);
    sub_1000073A0(v73, (uint64_t *)&unk_100640EB0);
    return result;
  }
  sub_10001F580(v73, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v76 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v104, 1, 1, v76);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v77 = &_swiftEmptySetSingleton;
    v78 = v94;
    goto LABEL_30;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v77 = v91;
    v78 = v94;
    goto LABEL_42;
  }
  v77 = &_swiftEmptySetSingleton;
  v78 = v94;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_30;
LABEL_42:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_30:
    v79 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_31;
    goto LABEL_33;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v79 = v92;
LABEL_31:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_33:
    v81 = &_swiftEmptySetSingleton;
    v82 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_34;
    goto LABEL_37;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v81 = v80;
LABEL_34:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v82 = v83;
  }
  else
  {
    v82 = &_swiftEmptySetSingleton;
  }
LABEL_37:
  v84 = (uint64_t)v98;
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v77, v79, v81, v82, &_swiftEmptySetSingleton);
  v85 = type metadata accessor for TodayViewReminderIDProvider();
  v86 = swift_allocObject(v85, 16, 7);
  v87 = v103;
  v88 = v105;
  sub_10002B1E8(v103, v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v74(v88, 0, 1, v113);
  v121[3] = v85;
  v121[4] = &off_1005F5D60;
  v121[0] = v86;
  sub_100010634((uint64_t)v121, (uint64_t)v120);
  v89 = swift_allocObject(&unk_1005F5E28, 72, 7);
  *(_QWORD *)(v89 + 16) = v48;
  sub_10002E37C(v120, v89 + 24);
  *(_QWORD *)(v89 + 64) = v78;
  swift_bridgeObjectRetain(v48);
  swift_retain();
  swift_retain();
  v90 = v104;
  sub_10047C8F8(1, v104, (uint64_t (*)(uint64_t))sub_1001D5A68, v89, v84, 0, v88);
  swift_release();
  sub_100027F10(v121);
  swift_bridgeObjectRelease(v48);
  sub_1000073A0(v88, (uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v84, v100);
  sub_1000073A0(v90, &qword_100649CA0);
  sub_10001F544(v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001D1770(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064ACF8, 5);
}

uint64_t sub_1001D1780(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD10, 6);
}

uint64_t sub_1001D1790(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD28, 7);
}

uint64_t sub_1001D17A0(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD40, 8);
}

uint64_t sub_1001D17B0(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD58, 9);
}

uint64_t sub_1001D17C0(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD70, 10);
}

uint64_t sub_1001D17D0(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064AD88, 11);
}

uint64_t sub_1001D17E0(uint64_t a1)
{
  return sub_1001D17F0(a1, qword_10064ADA0, 12);
}

uint64_t sub_1001D17F0(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  _BYTE *v6;

  v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  sub_100012DDC(v5, a2);
  v6 = (_BYTE *)sub_100012DC4(v5, (uint64_t)a2);
  *v6 = a3;
  return swift_storeEnumTagMultiPayload(v6, v5, 0);
}

uint64_t sub_1001D1844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = _s9Reminders30DragAndDropPresenterCapabilityCMa_1();
    v2 = swift_allocObject(v3, 56, 7);
    v4 = swift_weakInit(v2 + 48, 0);
    swift_weakAssign(v4, v0);
    v5 = (void *)REMSmartListTypeToday;
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_BYTE *)(v2 + 40) = 1;
    *(_QWORD *)(v2 + 24) = &off_1005F5D70;
    *(_QWORD *)(v2 + 32) = v5;
    swift_unknownObjectWeakAssign(v6, v0);
    *(_QWORD *)(v0 + v1) = v2;
    v7 = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001D190C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v32 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = 0;
  v11 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v10, v11, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = REMSmartListType.title.getter(REMSmartListTypeToday);
  v14 = v13;
  v31 = static TTRListColors.SmartList.today.getter();
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15);
  v19 = v18;
  if (v18)
    swift_unknownObjectRelease(v18);
  v20 = v19 != 0;
  if (!v14)
  {
    v14 = 0xE000000000000000;
    v12 = 0;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 56))(v33, ObjectType, v15);
  v21 = v33[3] != 0;
  sub_1000073A0((uint64_t)v33, &qword_100649FC0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount + 8))
    v22 = 0;
  else
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount);
  v23 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
  v24 = type metadata accessor for TTRTemplatePublicLinkData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 1, 1, v24);
  BYTE6(v29) = 1;
  WORD2(v29) = 257;
  LODWORD(v29) = 0;
  v28 = 0;
  v27 = 0;
  *(_WORD *)((char *)&v26 + 7) = 256;
  BYTE6(v26) = v21;
  WORD2(v26) = 0;
  BYTE3(v26) = v20;
  BYTE2(v26) = 0;
  LOWORD(v26) = 1;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v10, v12, v14, v31, 0, 1, 0, 3, v26, BYTE8(v26), v22, v27, 0, 0, v28, v7, v4, v29);
}

uint64_t sub_1001D1BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  v39 = a2;
  v3 = sub_10002A750(&qword_10064B6B8);
  __chkstk_darwin(v3);
  v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DateComponents(0);
  v38 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRReminderEditor(0);
  Date.init()(v15);
  static TTRReminderEditor.todayDueDateComponents(now:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (qword_10063D440 != -1)
    swift_once(&qword_10063D440, sub_1001D1770);
  v16 = sub_100012DC4(v5, (uint64_t)qword_10064ACF8);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v16, v7) & 1) != 0)
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v17 = 1;
LABEL_25:
    v28 = sub_10002A750(&qword_10064B698);
    v29 = *(int *)(v28 + 48);
    v30 = swift_beginAccess(v14, v40, 0, 0);
    v32 = v38;
    v31 = v39;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v38 + 16))(v39, v14, v12, v30);
    *(_BYTE *)(v31 + v29) = v17;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v31, 0, 1, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v12);
  }
  if (qword_10063D448 != -1)
    swift_once(&qword_10063D448, sub_1001D1780);
  v18 = sub_100012DC4(v5, (uint64_t)qword_10064AD10);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v18, v7) & 1) != 0)
    goto LABEL_11;
  if (qword_10063D450 != -1)
    swift_once(&qword_10063D450, sub_1001D1790);
  v19 = sub_100012DC4(v5, (uint64_t)qword_10064AD28);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v19, v7) & 1) != 0)
  {
LABEL_11:
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v17 = 0;
    goto LABEL_25;
  }
  if (qword_10063D458 != -1)
    swift_once(&qword_10063D458, sub_1001D17A0);
  v20 = sub_100012DC4(v5, (uint64_t)qword_10064AD40);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v20, v7) & 1) != 0)
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v21 = 0;
LABEL_24:
    v24 = REMLocalizedTimeOfDay.creationHour.getter(v21);
    v25 = v37;
    static TimeZone.current.getter();
    v26 = type metadata accessor for TimeZone(0);
    v17 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
    v27 = swift_beginAccess(v14, v40, 33, 0);
    DateComponents.timeZone.setter(v25, v27);
    DateComponents.hour.setter(v24, 0);
    DateComponents.minute.setter(0, 0);
    DateComponents.second.setter(0, 0);
    swift_endAccess(v40);
    goto LABEL_25;
  }
  if (qword_10063D460 != -1)
    swift_once(&qword_10063D460, sub_1001D17B0);
  v22 = sub_100012DC4(v5, (uint64_t)qword_10064AD58);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v22, v7) & 1) != 0)
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v21 = 2;
    goto LABEL_24;
  }
  if (qword_10063D468 != -1)
    swift_once(&qword_10063D468, sub_1001D17C0);
  v23 = sub_100012DC4(v5, (uint64_t)qword_10064AD70);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v23, v7) & 1) != 0)
  {
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v21 = 5;
    goto LABEL_24;
  }
  if (qword_10063D470 != -1)
    swift_once(&qword_10063D470, sub_1001D17D0);
  v34 = sub_100012DC4(v5, (uint64_t)qword_10064AD88);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v34, v7) & 1) == 0)
  {
    if (qword_10063D478 != -1)
      swift_once(&qword_10063D478, sub_1001D17E0);
    v35 = sub_100012DC4(v5, (uint64_t)qword_10064ADA0);
    static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v35, v7);
  }
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v36 = sub_10002A750(&qword_10064B698);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v39, 1, 1, v36);
  v32 = v38;
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v12);
}

uint64_t sub_1001D20EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability));
}

uint64_t sub_1001D2168()
{
  uint64_t v0;

  v0 = sub_10046B320();

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot));
  swift_release();
  return v0;
}

uint64_t sub_1001D21FC()
{
  uint64_t v0;

  v0 = sub_1001D2168();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001D221C()
{
  return type metadata accessor for TTRShowTodayViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowTodayViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10064AE20;
  if (!qword_10064AE20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowTodayViewModelSource);
  return result;
}

uint64_t sub_1001D2260(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = "\b";
  v2[1] = &unk_100527FC8;
  v2[2] = &unk_100527FE0;
  v2[3] = "\b";
  v2[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[6] = "\b";
  v2[7] = "\b";
  return swift_updateClassMetadata2(a1, 256, 8, v2, a1 + 1336);
}

void sub_1001D22C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v30;
  double v31;
  _QWORD *v32;
  double v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  double v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  BOOL v51;
  BOOL *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t Strong;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t ObjectType;
  void *v104;
  _QWORD v105[2];
  BOOL *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  uint64_t v120;
  __int128 v121[2];
  _QWORD v122[5];
  _BYTE v123[48];
  uint64_t v124;
  char v125[24];
  __int128 v126[4];
  int v127;
  char v128;
  __int16 v129;
  char v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int16 v134;

  v3 = v2;
  v116 = a2;
  v112 = *v3;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v117 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v7);
  v115 = (uint64_t)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v113 = *(_QWORD *)(v9 - 8);
  v114 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v108 = (char *)v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v109 = (char *)v105 - v16;
  v17 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v17);
  v19 = (char *)v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v120);
  v107 = (uint64_t)v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v106 = (BOOL *)v105 - v22;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)v105 - v25;
  v27 = OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList;
  v28 = *(void **)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList);
  v110 = v13;
  v111 = v12;
  if (v28)
  {
    v29 = objc_msgSend(v28, "sortingStyle", v24);
    v32 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter(v30, v31);
    if (v32)
    {
      v34 = v32;
      goto LABEL_6;
    }
    if (v29)
      goto LABEL_12;
LABEL_15:
    v43 = 1;
    v119 = 1;
    goto LABEL_18;
  }
  v35 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter(&selRef_supportsAttachments, v24);
  if (!v35)
    goto LABEL_15;
  v34 = v35;
  v29 = 0;
LABEL_6:
  v36 = objc_msgSend(v34, "sortingStyle");

  if (!v29)
  {
    if (v36)
    {

      v119 = 0;
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  if (!v36)
  {
LABEL_12:

    v119 = 0;
    goto LABEL_18;
  }
  v105[1] = a1;
  v118 = v11;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
    v119 = 1;
  else
    v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  v11 = v118;

  swift_bridgeObjectRelease(v39);
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v42).n128_u64[0];
LABEL_18:
  v44 = *(uint64_t *)((char *)v3 + v27);
  v45 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter((_QWORD *)v43, v33);

  v46 = (uint64_t)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, v125, 0, 0);
  sub_10002B1E8(v46, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload(v26, v120) == 1)
  {
    v48 = (_QWORD *)((v44 == 0) ^ (v45 != 0));
    if ((v44 == 0) == (v45 != 0))
    {
      v49 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter(v48, v47);
      v50 = v49;
      if (v49)

      v51 = v50 != 0;
      v52 = v106;
      *v106 = v51;
      swift_storeEnumTagMultiPayload(v52, v120, 1);
      v53 = (uint64_t)v52;
      v54 = v107;
      sub_10001F580(v53, v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
      swift_beginAccess(v46, v126, 33, 0);
      sub_1000B4098(v54, v46);
      swift_endAccess(v126);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  }
  v55 = REMRemindersListDataView.TodayGroupModel.todaySmartList.getter(v48, v47);
  v56 = *(void **)((char *)v3 + v27);
  *(uint64_t *)((char *)v3 + v27) = (uint64_t)v55;

  REMRemindersListDataView.TodayGroupModel.remindersCount.getter();
  v57 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v19, 1, v57);
  if (v59 == 1)
  {
    v60 = sub_1000073A0((uint64_t)v19, &qword_10063F008);
    v61 = 0;
  }
  else
  {
    v61 = REMRemindersListDataView.CountByCompleted.completed.getter();
    v60 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v19, v57);
  }
  v62 = (char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount;
  *(_QWORD *)v62 = v61;
  v62[8] = v59 == 1;
  v63 = REMRemindersListDataView.TodayGroupModel.currentLocation.getter(v60);
  v64 = *(void **)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_currentLocation);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_currentLocation) = v63;

  if ((v119 & 1) != 0)
  {
    v118 = v11;
    sub_1001D190C((uint64_t)v11);
    v65 = swift_allocObject(&unk_1005F5DD8, 24, 7);
    *(_QWORD *)(v65 + 16) = &_swiftEmptySetSingleton;
    if (*((_BYTE *)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) == 1)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_10048CBE4((uint64_t)_swiftEmptyArrayStorage);
        v66 = v104;
      }
      else
      {
        v66 = &_swiftEmptySetSingleton;
      }
    }
    else
    {
      v74 = (uint64_t *)((char *)v3
                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
      swift_beginAccess((char *)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, &v124, 0, 0);
      *(_QWORD *)&v126[0] = *v74;
      v75 = *(_QWORD *)&v126[0];
      swift_bridgeObjectRetain(*(_QWORD *)&v126[0]);
      v76 = sub_10002A750(&qword_10064B678);
      v77 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v78 = sub_1001D52C8();
      v79 = sub_10003E3B8();
      v66 = (void *)Sequence.compactMapToSet<A>(_:)(sub_10047AF9C, 0, v76, v77, v78, v79);
      swift_bridgeObjectRelease(v75);
    }
    v80 = sub_10002A750(&qword_10064B688);
    v81 = swift_allocBox(v80);
    v83 = v82;
    v84 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 1, 1, v84);
    *(_QWORD *)&v126[0] = 0;
    *((_QWORD *)&v126[0] + 1) = 0xE000000000000000;
    memset(&v126[1], 0, 48);
    v127 = 16777408;
    v128 = 3;
    v129 = *(_WORD *)&v123[37];
    v130 = v123[39];
    v131 = 0u;
    v132 = 0u;
    v133 = 0u;
    v134 = 255;
    v86 = REMRemindersListDataView.TodayGroupModel.groups.getter(v85);
    swift_retain();
    swift_bridgeObjectRetain(v66);
    swift_retain();
    v87 = sub_1001CE6A0(v86, v81, v126, (uint64_t)v66, v65, v112);
    swift_bridgeObjectRelease(v66);
    swift_bridgeObjectRelease(v86);
    v88 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
    *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot) = (uint64_t)v87;
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRelease(v88);
    swift_beginAccess(v65 + 16, v123, 0, 0);
    v89 = *(_QWORD *)(v65 + 16);
    v90 = *(uint64_t *)((char *)v3
                     + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems);
    *(uint64_t *)((char *)v3
               + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems) = v89;
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRelease(v90);
    swift_beginAccess((char *)v3 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders, v122, 33, 0);
    swift_bridgeObjectRetain(v89);
    sub_1000F71DC(v91);
    swift_endAccess(v122);
    swift_bridgeObjectRelease(v89);
    v92 = v115;
    sub_10002B1E8((uint64_t)v118, v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v113 + 56))(v92, 0, 1, v114);
    v93 = type metadata accessor for TodayViewReminderIDProvider();
    v94 = swift_allocObject(v93, 16, 7);
    v95 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v96 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v117, 1, 1, v95);
    v122[3] = v93;
    v122[4] = &off_1005F5D60;
    v122[0] = v94;
    sub_100010634((uint64_t)v122, (uint64_t)v121);
    v97 = swift_allocObject(&unk_1005F5E00, 72, 7);
    *(_QWORD *)(v97 + 16) = v87;
    sub_10002E37C(v121, v97 + 24);
    *(_QWORD *)(v97 + 64) = v3;
    swift_bridgeObjectRetain(v87);
    swift_retain();
    swift_retain();
    sub_10047C8F8(1, v92, (uint64_t (*)(uint64_t))sub_10003E360, v97, v116, 0, v96);
    swift_release();
    sub_100027F10(v122);
    swift_bridgeObjectRelease(v87);
    sub_1000073A0(v96, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v92, &qword_100649CA0);
    swift_release();
    v98 = (char *)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
    if (Strong)
    {
      v101 = Strong;
      v102 = *((_QWORD *)v98 + 1);
      ObjectType = swift_getObjectType(Strong, v100);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v102 + 104))(0, ObjectType, v102);
      swift_unknownObjectRelease(v101);
    }
    sub_10001F544((uint64_t)v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
    swift_release();
  }
  else
  {
    v67 = *(void **)((char *)v3 + v27);
    if (v67)
    {
      v68 = objc_msgSend(v67, "sortingStyle");
      v69 = v108;
      REMSortingStyle.dataViewSortingStyle.getter();

      v71 = (uint64_t)v109;
      v70 = v110;
      v72 = v69;
      v73 = v111;
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v72, v111);
    }
    else
    {
      v71 = (uint64_t)v109;
      TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(0);
      v70 = v110;
      v73 = v111;
    }
    sub_100474118(v71, 1);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v73);
  }
}

double sub_1001D2C8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  char v38;
  uint64_t v39;
  unint64_t i;
  uint64_t v41;
  id v42;
  char v43;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double result;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[24];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[4];
  _OWORD v74[6];
  _OWORD v75[2];
  _BYTE v76[144];

  v57 = a7;
  v65 = a5;
  v63 = a2;
  v64 = a1;
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v18 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v18);
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  v21 = (char *)&v51 - v20;
  v22 = *(_QWORD *)(a4 + 16);
  v58 = v14;
  if (v22)
  {
    v52 = v17;
    v53 = (char *)&v51 - v20;
    v54 = a3;
    v55 = a8;
    v23 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
    v24 = a4 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v25 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v26 = a6 & 0xC000000000000001;
    if (a6 < 0)
      v27 = a6;
    else
      v27 = a6 & 0xFFFFFFFFFFFFFF8;
    v28 = a6 + 56;
    v66 = *(_QWORD *)(v23 + 72);
    v67 = v25;
    v56 = a4;
    swift_bridgeObjectRetain(a4);
    v30 = 0;
    v61 = v24;
    v62 = v22;
    v59 = v27;
    v60 = a6 & 0xC000000000000001;
    do
    {
      v32 = REMRemindersListDataView.ReminderLite.objectID.getter(v29);
      v33 = (void *)v32;
      if (v26)
      {
        v31 = __CocoaSet.contains(_:)(v32, v27);

        if ((v31 & 1) == 0)
        {
          a4 = v56;
          swift_bridgeObjectRelease(v56);
          goto LABEL_18;
        }
      }
      else
      {
        if (!*(_QWORD *)(a6 + 16))
          goto LABEL_17;
        v34 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a6 + 40));
        v35 = -1 << *(_BYTE *)(a6 + 32);
        v36 = v34 & ~v35;
        if (((*(_QWORD *)(v28 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          goto LABEL_17;
        v37 = *(id *)(*(_QWORD *)(a6 + 48) + 8 * v36);
        v38 = static NSObject.== infix(_:_:)(v37, v33);

        if ((v38 & 1) == 0)
        {
          v39 = ~v35;
          for (i = v36 + 1; ; i = v41 + 1)
          {
            v41 = i & v39;
            if (((*(_QWORD *)(v28 + (((i & v39) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v39)) & 1) == 0)
              break;
            v42 = *(id *)(*(_QWORD *)(a6 + 48) + 8 * v41);
            v43 = static NSObject.== infix(_:_:)(v42, v33);

            if ((v43 & 1) != 0)
              goto LABEL_12;
          }
LABEL_17:
          a4 = v56;
          swift_bridgeObjectRelease(v56);

LABEL_18:
          v44 = 1;
          v45 = 1;
          goto LABEL_19;
        }
LABEL_12:

        v22 = v62;
        v27 = v59;
        v26 = v60;
      }
      ++v30;
    }
    while (v30 != v22);
    a4 = v56;
    swift_bridgeObjectRelease(v56);
    v45 = 0;
    v44 = 2;
LABEL_19:
    a3 = v54;
    a8 = v55;
    v17 = v52;
    v21 = v53;
  }
  else
  {
    v45 = 0;
    v44 = 2;
  }
  v46 = v64;
  *(_QWORD *)&v69 = v63;
  *((_QWORD *)&v69 + 1) = a3;
  v70 = 0u;
  v71 = 0u;
  v72 = 0u;
  LOWORD(v73[0]) = 448;
  BYTE2(v73[0]) = v44;
  *(_WORD *)((char *)v73 + 3) = 768;
  *(_OWORD *)((char *)v73 + 8) = 0u;
  *(_OWORD *)((char *)&v73[1] + 8) = 0u;
  *(_OWORD *)((char *)&v73[2] + 8) = 0u;
  BYTE8(v73[3]) = -1;
  BYTE9(v73[3]) = v45 ^ 1;
  sub_10002B1E8(v64, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v74[4] = v73[0];
  v74[5] = v73[1];
  v75[0] = v73[2];
  *(_OWORD *)((char *)v75 + 10) = *(_OWORD *)((char *)&v73[2] + 10);
  v74[0] = v69;
  v74[1] = v70;
  v74[2] = v71;
  v74[3] = v72;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v74);
  sub_10000F614((uint64_t)v74, (uint64_t)v76, &qword_100649B60);
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v17, v76, 1, v45 ^ 1u, 0, 0, 0, 0);
  if ((v65 & 1) != 0 && v45)
  {
    v47 = (uint64_t)v58;
    v48 = v57 + 16;
    sub_10002B1E8(v46, (uint64_t)v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    swift_beginAccess(v48, v68, 33, 0);
    swift_bridgeObjectRetain(a3);
    sub_10003E134((uint64_t)&v69);
    sub_1004809A0((uint64_t)v17, v47);
    swift_endAccess(v68);
    sub_10003E230((uint64_t)&v69);
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  }
  else
  {
    swift_bridgeObjectRetain(a3);
  }
  sub_10001F580((uint64_t)v21, a8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v49 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  *(_QWORD *)(a8 + *(int *)(v49 + 20)) = a4;
  *(_BYTE *)(a8 + *(int *)(v49 + 24)) = 0;
  *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  return result;
}

double sub_1001D30BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double result;
  _OWORD v23[6];
  _OWORD v24[2];
  _OWORD v25[6];
  _OWORD v26[2];
  _BYTE v27[128];
  uint64_t v28;
  _BYTE v29[128];
  _OWORD v30[6];
  _OWORD v31[2];
  _BYTE v32[128];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[3];

  v10 = a4[5];
  v37 = a4[4];
  v38 = v10;
  v39[0] = a4[6];
  *(_OWORD *)((char *)v39 + 10) = *(__int128 *)((char *)a4 + 106);
  v11 = a4[1];
  v33 = *a4;
  v34 = v11;
  v12 = a4[3];
  v35 = a4[2];
  v36 = v12;
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v16);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_projectBox(a3);
  swift_beginAccess(v19, &v28, 0, 0);
  v20 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {
    sub_1000D2B94(v30);
  }
  else
  {
    sub_10000F614(v19 + *(int *)(v16 + 20), (uint64_t)v30, &qword_100649B60);
    sub_100171C68((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
  }
  sub_10000F614((uint64_t)v30, (uint64_t)v32, &qword_100649B60);
  sub_10000F614((uint64_t)v32, (uint64_t)v27, &qword_100649B60);
  if (sub_100171C50((uint64_t)v27) == 1)
    goto LABEL_6;
  sub_10000F614((uint64_t)v32, (uint64_t)v25, &qword_100649B60);
  v30[4] = v25[4];
  v30[5] = v25[5];
  v31[0] = v26[0];
  *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v26 + 10);
  v30[0] = v25[0];
  v30[1] = v25[1];
  v30[2] = v25[2];
  v30[3] = v25[3];
  sub_10003E134((uint64_t)a4);
  sub_100171C68((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
  v21 = static TTRRemindersListViewModel.SectionHeaderTitle.__derived_struct_equals(_:_:)(v30, a4);
  sub_10003E230((uint64_t)a4);
  sub_100171C68((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
  sub_100171C68((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
  if ((v21 & 1) != 0)
  {
LABEL_6:
    sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000D2B94(v25);
    sub_10000F614((uint64_t)v25, (uint64_t)v29, &qword_100649B60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v15, v29, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    v23[4] = v37;
    v23[5] = v38;
    v24[0] = v39[0];
    *(_OWORD *)((char *)v24 + 10) = *(_OWORD *)((char *)v39 + 10);
    v23[0] = v33;
    v23[1] = v34;
    v23[2] = v35;
    v23[3] = v36;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v23);
    sub_10000F614((uint64_t)v23, (uint64_t)v29, &qword_100649B60);
    sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v15, v29, 1, 0, 0, 0, 0, 0);
    sub_10003E134((uint64_t)a4);
  }
  sub_10001F580((uint64_t)v18, a5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  *(_QWORD *)(a5 + *(int *)(v20 + 20)) = a2;
  *(_BYTE *)(a5 + *(int *)(v20 + 24)) = 0;
  *(_QWORD *)&result = swift_bridgeObjectRetain(a2).n128_u64[0];
  return result;
}

uint64_t sub_1001D3418@<X0>(uint64_t a1@<X1>, __int128 *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Swift::String v31;
  void *object;
  uint64_t v33;
  uint64_t v34;
  uint64_t countAndFlagsBits;
  void *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];

  v45 = a3;
  v46 = a4;
  v8 = sub_10002A750(&qword_10064B688);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_projectBox(a1);
  REMRemindersListDataView.TodayGroupModel.Group.groupType.getter();
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.today(_:))
  {
    if (qword_10063D440 != -1)
      swift_once(&qword_10063D440, sub_1001D1770);
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v19 = qword_10064ACF8;
LABEL_13:
    v20 = sub_100012DC4(v18, (uint64_t)v19);
    v21 = REMRemindersListDataView.TodayGroupModel.Group.reminders.getter();
    sub_1001D30BC(v20, v21, a1, a2, a5);
LABEL_14:
    swift_bridgeObjectRelease(v21);
    sub_10002B1E8(a5, (uint64_t)v11, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v22 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
    swift_beginAccess(v16, v47, 1, 0);
    return sub_1001D5494((uint64_t)v11, v16);
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.beforeToday(_:))
  {
    if (qword_10063D448 != -1)
      swift_once(&qword_10063D448, sub_1001D1780);
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v19 = qword_10064AD10;
    goto LABEL_13;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.todayAllDay(_:))
  {
    if (qword_10063D450 != -1)
      swift_once(&qword_10063D450, sub_1001D1790);
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v19 = qword_10064AD28;
    goto LABEL_13;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.morning(_:))
  {
    if (qword_10063D458 != -1)
      swift_once(&qword_10063D458, sub_1001D17A0);
    v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v25 = sub_100012DC4(v24, (uint64_t)qword_10064AD40);
    v26 = 0x800000010056AC60;
    v27 = 0x676E696E726F4DLL;
LABEL_19:
    v28 = 0xE700000000000000;
    v29 = 0xD000000000000022;
LABEL_24:
    v31 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v27, *(Swift::String *)(&v26 - 1));
    object = v31._object;
    v21 = REMRemindersListDataView.TodayGroupModel.Group.reminders.getter();
    v33 = a5;
    v34 = v25;
    countAndFlagsBits = v31._countAndFlagsBits;
    v36 = v31._object;
    v37 = v21;
    v38 = 1;
LABEL_25:
    sub_1001D2C8C(v34, countAndFlagsBits, (uint64_t)v36, v37, v38, v45, v46, v33);
    swift_bridgeObjectRelease(object);
    goto LABEL_14;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.afternoon(_:))
  {
    if (qword_10063D460 != -1)
      swift_once(&qword_10063D460, sub_1001D17B0);
    v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v25 = sub_100012DC4(v30, (uint64_t)qword_10064AD58);
    v29 = 0xD000000000000024;
    v26 = 0x800000010056AC30;
    v27 = 0x6F6F6E7265746641;
    v28 = 0xE90000000000006ELL;
    goto LABEL_24;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.tonight(_:))
  {
    if (qword_10063D468 != -1)
      swift_once(&qword_10063D468, sub_1001D17C0);
    v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v25 = sub_100012DC4(v39, (uint64_t)qword_10064AD70);
    v26 = 0x800000010056AC00;
    v27 = 0x746867696E6F54;
    goto LABEL_19;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.nearby(_:))
  {
    if (qword_10063D470 != -1)
      swift_once(&qword_10063D470, sub_1001D17D0);
    v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v41 = sub_100012DC4(v40, (uint64_t)qword_10064AD88);
    v42 = static TTRLocalizableStrings.TodayList.nearbySectionName.getter();
    object = v43;
    v21 = REMRemindersListDataView.TodayGroupModel.Group.reminders.getter();
    v33 = a5;
    v34 = v41;
    countAndFlagsBits = v42;
    v36 = object;
    v37 = v21;
    v38 = 0;
    goto LABEL_25;
  }
  if (v17 == enum case for REMRemindersListDataView.TodayGroupModel.Group.GroupType.empty(_:))
  {
    if (qword_10063D478 != -1)
      swift_once(&qword_10063D478, sub_1001D17E0);
    v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v19 = qword_10064ADA0;
    goto LABEL_13;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
  __break(1u);
  return result;
}

uint64_t sub_1001D3928(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  _QWORD v23[5];
  uint64_t v24;

  v3 = v2;
  v24 = a2;
  v5 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v5);
  v23[2] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v23[0] = *(_QWORD *)(v7 - 8);
  v23[1] = v7;
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v9);
  v10 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v10);
  v23[3] = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v23[4] = (char *)v23 - v13;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  sub_10001413C(a1, v18);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  if (v19)
  {
    v20 = (void *)v19;
    if (swift_weakLoadStrong(v3 + 48))
    {
      sub_10002B1E8(v24, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v21 = (char *)&loc_1001D3B28 + 4 * byte_100527F60[swift_getEnumCaseMultiPayload(v16, v14)];
      __asm { BR              X10 }
    }

  }
  return 0;
}

void sub_1001D3B7C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  _QWORD v41[4];

  *(_QWORD *)(v9 - 168) = v1;
  v10 = v3;
  v11 = *(_QWORD *)(v9 - 176);
  sub_10001F580(v10, v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v12 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, v9 - 104, 0, 0);
  sub_10002B1E8(v12, (uint64_t)v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload(v0, v5) == 1)
  {
    v13 = *v0;
  }
  else
  {
    v15 = *(_QWORD *)(v9 - 208);
    v14 = *(_QWORD *)(v9 - 200);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v4, v0, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v8, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v14);
    v16 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v4, v8);
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v18 = v8;
    v13 = v16;
    v17(v18, v14);
    v17(v4, v14);
  }
  v20 = *(_QWORD *)(v9 - 192);
  v19 = *(_QWORD *)(v9 - 184);
  Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (Strong)
  {
    v23 = Strong;
    v24 = *(_QWORD *)(v7 + 24);
    ObjectType = swift_getObjectType(Strong, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 16))(v7, v11, ObjectType, v24);
    swift_unknownObjectRelease(v23);
    v26 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) != 1)
    {
      sub_1000073A0(v20, &qword_1006436F0);
      if ((v13 & 1) != 0)
        goto LABEL_14;
      sub_10002B1E8(v11, v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v33 = sub_10002A750((uint64_t *)&unk_1006415A0);
      inited = swift_initStackObject(v33, v9 - 144);
      *(_OWORD *)(inited + 16) = xmmword_100521140;
      *(_QWORD *)(inited + 32) = v6;
      *(_QWORD *)(v9 - 152) = inited;
      specialized Array._endMutation()(inited);
      v35 = *(_QWORD *)(v9 - 152);
      v36 = swift_weakLoadStrong(*(_QWORD *)(v9 - 168));
      if (v36)
      {
        v37 = *(_QWORD *)(v36 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
        swift_bridgeObjectRetain(v37);
        v38 = v6;
        swift_release();
        if (v37)
        {
          __chkstk_darwin(v39);
          v41[2] = v37;
          v41[3] = v19;
          sub_1001CE720(sub_1001D5A6C, (uint64_t)v41, v35);

          swift_bridgeObjectRelease(v35);
          swift_bridgeObjectRelease(v37);
          swift_release();
LABEL_21:
          v11 = *(_QWORD *)(v9 - 176);
          goto LABEL_22;
        }
      }
      else
      {
        v40 = v6;
      }
      swift_bridgeObjectRelease(v35);
      swift_release();

      goto LABEL_21;
    }
  }
  else
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100012DC4(v27, (uint64_t)qword_1006476C0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.fault.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v20, 1, 1, v32);
  }
  sub_1000073A0(v20, &qword_1006436F0);
  if ((v13 & 1) != 0)
  {
LABEL_14:
    sub_10001F544(v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    swift_release();

    goto LABEL_23;
  }
  sub_10002B1E8(v11, v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_release();

LABEL_22:
  sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F544(v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
LABEL_23:
  JUMPOUT(0x1001D3B58);
}

void sub_1001D3F68(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  unsigned __int8 v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  int v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;

  v68 = a4;
  v67 = a3;
  v73 = a2;
  v74 = a5;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (uint64_t)&v66 - v10;
  v11 = sub_10002A750(&qword_10064B690);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_10064B698);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v69 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v66 - v18;
  v20 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  sub_1001D45FC(a1, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100649B50);
LABEL_22:
    v65 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v74, 1, 1, v65);
    return;
  }
  sub_10001F580((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  Strong = swift_weakLoadStrong(v5 + 48);
  if (!Strong)
  {
LABEL_21:
    sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    goto LABEL_22;
  }
  v28 = Strong;
  v29 = swift_weakLoadStrong(v5 + 48);
  if (v29)
  {
    v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot);
    swift_bridgeObjectRetain(v30);
    swift_release();
    if (v30)
    {
      v66 = v28;
      __chkstk_darwin(v31);
      *(&v66 - 2) = v30;
      *(&v66 - 1) = (uint64_t)v26;
      v32 = sub_1001CE720(sub_1001D58E8, (uint64_t)(&v66 - 4), v73);
      swift_bridgeObjectRelease(v30);
      if ((v32 & 1) != 0)
      {
        sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        swift_release();
        v33 = *(void **)(v5 + 32);
        v35 = v73;
        v34 = v74;
        *v74 = v73;
        v34[1] = v33;
        v36 = v67;
        v34[2] = v67;
        v37 = v68;
        *((_BYTE *)v34 + 24) = v68;
        v34[4] = 0;
        v38 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
        swift_storeEnumTagMultiPayload(v34, v38, 2);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v34, 0, 1, v38);
        swift_bridgeObjectRetain(v35);
        v39 = v33;
        sub_1000898F4(v36, v37);
        return;
      }
    }
  }
  sub_1001D1BAC((uint64_t)v26, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v13, &qword_10064B690);
    if (qword_10063D438 != -1)
      swift_once(&qword_10063D438, sub_1001CE850);
    v40 = type metadata accessor for Logger(0);
    sub_100012DC4(v40, (uint64_t)qword_10064ACE0);
    v41 = v72;
    v42 = sub_10000735C(v70, v72, (uint64_t *)&unk_100640EB0);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.fault.getter(v43);
    v45 = os_log_type_enabled(v43, v44);
    v46 = (uint64_t)v71;
    if (v45)
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = swift_slowAlloc(32, -1);
      v76 = v48;
      *(_DWORD *)v47 = 136315138;
      sub_10000735C(v41, v46, (uint64_t *)&unk_100640EB0);
      v49 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v46, 1, v49) == 1)
      {
        sub_1000073A0(v46, (uint64_t *)&unk_100640EB0);
        v50 = 0xEA0000000000746ELL;
        v51 = 0x65726170206C696ELL;
      }
      else
      {
        v63 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
        v51 = TTRTreeStorageItem.treeItemDescription.getter(v49, v63);
        v50 = v64;
        sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      v75 = sub_100027E40(v51, v50, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v47 + 4, v47 + 12);
      swift_bridgeObjectRelease(v50);
      sub_1000073A0(v41, (uint64_t *)&unk_100640EB0);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unable to fetch group due date components for %s", v47, 0xCu);
      swift_arrayDestroy(v48, 1, &type metadata for Any[8]);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      sub_1000073A0(v41, (uint64_t *)&unk_100640EB0);
    }
    goto LABEL_21;
  }
  sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_release();
  v52 = *(int *)(v14 + 48);
  v53 = type metadata accessor for DateComponents(0);
  v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32);
  v54(v19, v13, v53);
  v55 = v13[v52];
  v56 = sub_10002A750(&qword_10064A840);
  v58 = v73;
  v57 = v74;
  v59 = (char *)v74 + *(int *)(v56 + 48);
  *v74 = v73;
  v60 = v69;
  v54(v69, v19, v53);
  v54(v59, v60, v53);
  v61 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  if ((v55 & 1) != 0)
    v62 = 8;
  else
    v62 = 7;
  swift_storeEnumTagMultiPayload(v57, v61, v62);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v57, 0, 1, v61);
  swift_bridgeObjectRetain(v58);
}

uint64_t sub_1001D45FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - v13;
  sub_10000735C(a1, (uint64_t)v6, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v20 = (char *)&loc_1001D47F4 + 4 * byte_100527F6C[swift_getEnumCaseMultiPayload(v11, v7)];
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  if (qword_10063D438 != -1)
    swift_once(&qword_10063D438, sub_1001CE850);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_10064ACE0);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.fault.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to fetch group due date components from nil parent", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
}

uint64_t sub_1001D4A74(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v7 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  sub_10002A750(&qword_10064B688);
  __chkstk_darwin(a2);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  v47 = *(_QWORD *)(v17 + 16);
  if (v47)
  {
    v39 = v15;
    v40 = v13;
    v41 = a3;
    v42 = v3;
    v20 = *a1;
    v21 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v22 = *(_QWORD *)(v8 + 72);
    v38 = v17;
    swift_bridgeObjectRetain(v17);
    v23 = 0;
    v45 = v8;
    v46 = v7;
    v43 = v10;
    v44 = v19;
    v36 = v22;
    v37 = v21;
    while (1)
    {
      sub_10002B1E8(v21 + v22 * v23, (uint64_t)v10, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v24 = *(_QWORD *)(*(_QWORD *)&v10[*(int *)(v7 + 20)] + 16);
      if (v24)
        break;
LABEL_3:
      ++v23;
      sub_10001F544((uint64_t)v10, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      if (v23 == v47)
      {
        swift_bridgeObjectRelease(v38);
        v33 = 1;
        a3 = v41;
        v15 = v39;
        v13 = v40;
        goto LABEL_11;
      }
    }
    v25 = *(_QWORD *)&v10[*(int *)(v7 + 20)];
    v26 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
    v27 = v25 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v28 = *(_QWORD *)(v26 + 72);
    v48 = v25;
    v29 = swift_bridgeObjectRetain_n(v25, 2);
    while (1)
    {
      v30 = (void *)REMRemindersListDataView.ReminderLite.objectID.getter(v29);
      v31 = objc_msgSend(v20, "objectID");
      v32 = static NSObject.== infix(_:_:)(v30, v31);

      if ((v32 & 1) != 0)
        break;
      v27 += v28;
      if (!--v24)
      {
        swift_bridgeObjectRelease_n(v48, 2);
        v8 = v45;
        v7 = v46;
        v10 = v43;
        v19 = v44;
        v22 = v36;
        v21 = v37;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease_n(v48, 2);
    v19 = v44;
    sub_10001F580((uint64_t)v43, (uint64_t)v44, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v33 = 0;
    a3 = v41;
    v15 = v39;
    v13 = v40;
    v8 = v45;
    v7 = v46;
  }
  else
  {
    v33 = 1;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v19, v33, 1, v7);
  sub_10000735C((uint64_t)v19, (uint64_t)v15, &qword_10064B688);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v19, &qword_10064B688);
    v34 = 0;
  }
  else
  {
    sub_10001F580((uint64_t)v15, (uint64_t)v13, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v34 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v13, a3);
    sub_10001F544((uint64_t)v13, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v15 = v19;
  }
  sub_1000073A0((uint64_t)v15, &qword_10064B688);
  return v34 & 1;
}

uint64_t _s9Reminders30DragAndDropPresenterCapabilityCMa_1()
{
  return objc_opt_self(_TtC9RemindersP33_E97D5EEDB05546314786DBA2B6204EB230DragAndDropPresenterCapability);
}

uint64_t sub_1001D4DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  _BYTE v23[24];

  v1 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v23[-v6 - 8];
  v8 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, v23, 0, 0);
  sub_10002B1E8(v11, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v13 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    v13 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)(v7, v4);
    v14 = *(void (**)(char *, uint64_t))(v2 + 8);
    v14(v4, v1);
    v14(v7, v1);
  }
  v15 = v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource;
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource);
  if (v16)
  {
    v17 = *(_QWORD *)(v15 + 8);
    ObjectType = swift_getObjectType(v16, v12);
    v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 24);
    v20 = swift_unknownObjectRetain(v16);
    LOBYTE(v17) = v19(ObjectType, v17, v20);
    swift_unknownObjectRelease(v16);
    v13 |= v17;
  }
  return v13 & 1;
}

uint64_t sub_1001D4FB8@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v4 = sub_10002A750(&qword_10064B690);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_10064B698);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - v12;
  sub_1001D1BAC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_10064B690);
    v14 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    v16 = type metadata accessor for DateComponents(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
    v17(v13, v6, v16);
    v17(v10, v13, v16);
    v17(a2, v10, v16);
    v18 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload(a2, v18, 0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 0, 1, v18);
  }
}

uint64_t sub_1001D515C@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_1001D4FB8(a1, a2);
}

void sub_1001D5170()
{
  sub_1001D54DC();
}

uint64_t type metadata accessor for TodayViewReminderIDProvider()
{
  return objc_opt_self(_TtC9RemindersP33_E97D5EEDB05546314786DBA2B6204EB227TodayViewReminderIDProvider);
}

id sub_1001D519C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  id v11;

  v11 = a1;
  v3 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D470 != -1)
    swift_once(&qword_10063D470, sub_1001D17D0);
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_10064AD88);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(a2, v7) & 1) != 0)
  {
    sub_10002B1E8(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, v8, 1, v6);
  TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v11, v5);
  return v11;
}

uint64_t sub_1001D52A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001D52C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064B680;
  if (!qword_10064B680)
  {
    v1 = sub_10002CA5C(&qword_10064B678);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10064B680);
  }
  return result;
}

_QWORD *sub_1001D5318(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v7 = v6;
  v25 = a5;
  v26 = a6;
  v23 = a3;
  v24 = a4;
  v22 = a2;
  v9 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v27 = _swiftEmptyArrayStorage;
    sub_1003D83CC(0, v13, 0);
    v14 = v27;
    v15 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group(0) - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(_QWORD *)(v15 + 72);
    while (1)
    {
      sub_1001D3418(v22, v23, v24, v25, (uint64_t)v12);
      if (v7)
        break;
      v7 = 0;
      v27 = v14;
      v19 = v14[2];
      v18 = v14[3];
      if (v19 >= v18 >> 1)
      {
        sub_1003D83CC(v18 > 1, v19 + 1, 1);
        v14 = v27;
      }
      v14[2] = v19 + 1;
      sub_10001F580((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v16 += v17;
      if (!--v13)
        return v14;
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_1001D5494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064B688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1001D54DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_1001D559C + 4 * byte_100527F78[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1001D559C()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_1001D5648(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  Swift::Bool v27;
  __n128 v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::OpaquePointer_optional v34;

  v4 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v32 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DateComponents(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v31 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = type metadata accessor for TTRReminderEditor(0);
  v17 = sub_1000175C8((unint64_t *)&qword_100643728, (uint64_t (*)(uint64_t))&type metadata accessor for TTRReminderEditor, (uint64_t)&protocol conformance descriptor for TTRReminderEditor);
  v18 = TTRUndoableEditing.init(changeItem:undoManager:)(&v33, a1, 0, v16, v17);
  if (!a2)
    goto LABEL_5;
  v19 = a2;
  v20 = objc_msgSend(v19, "displayDate");
  if (!v20)
  {

LABEL_5:
    Date.init()(v18);
    static TTRReminderEditor.todayDueDateComponents(now:)(v9);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
    goto LABEL_6;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "date");
  v30 = v7;
  v23 = v22;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

  v24 = objc_msgSend(v21, "isAllDay");
  v25 = v31;
  static TTRReminderEditor.dueDateComponents(from:isAllDay:)(v9, v24);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v9, v30);
  DateComponents.rem_allDayDateComponents()(v26);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v10);
LABEL_6:
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  TTRReminderEditor.edit(dueDateComponents:)(v6);
  sub_1000073A0((uint64_t)v6, &qword_100641728);
  v34.value._rawValue = 0;
  v34.is_nil = 0;
  TTRReminderEditor.edit(recurrenceRules:shouldCopyRecurrenceEnd:)(v34, v27);
  v28 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v15, v10, v28);
}

uint64_t sub_1001D58E8(void **a1)
{
  uint64_t v1;

  return sub_1001D4A74(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1001D590C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D591C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001CEFEC(*(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1001D5928()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D594C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001CECD4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t storeEnumTagSinglePayload for TTRShowTodayViewModelSource.DateComponentEditType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001D59A0 + 4 * byte_100527F81[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001D59D4 + 4 * byte_100527F7C[v4]))();
}

uint64_t sub_1001D59D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D59DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D59E4);
  return result;
}

uint64_t sub_1001D59F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D59F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001D59FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D5A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRShowTodayViewModelSource.DateComponentEditType()
{
  return &type metadata for TTRShowTodayViewModelSource.DateComponentEditType;
}

unint64_t sub_1001D5A24()
{
  unint64_t result;

  result = qword_10064B6C0;
  if (!qword_10064B6C0)
  {
    result = swift_getWitnessTable(&unk_1005280C8, &type metadata for TTRShowTodayViewModelSource.DateComponentEditType);
    atomic_store(result, (unint64_t *)&qword_10064B6C0);
  }
  return result;
}

uint64_t sub_1001D5A6C(void **a1)
{
  return sub_1001D58E8(a1) & 1;
}

uint64_t sub_1001D5A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064B6D0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064B6D0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001D5B14(uint64_t a1)
{
  uint64_t MetatypeMetadata;
  uint64_t v3;

  v3 = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  return String.init<A>(describing:)(&v3, MetatypeMetadata);
}

void sub_1001D5B40(void *a1, char a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t MetatypeMetadata;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  _QWORD v52[3];
  _BYTE v53[8];
  uint64_t v54;
  _BYTE v55[24];
  uint64_t v56;
  uint64_t v57;

  v14 = a3 + 16;
  swift_beginAccess(a3 + 16, v55, 0, 0);
  Strong = swift_weakLoadStrong(v14);
  if (Strong)
  {
    *(_BYTE *)(Strong + 80) = 0;
    if ((a2 & 1) != 0)
    {
      swift_errorRetain(a1);
      if (qword_10063D480 != -1)
        swift_once(&qword_10063D480, sub_1001D5A84);
      v31 = type metadata accessor for Logger(0);
      sub_100012DC4(v31, (uint64_t)qword_10064B6D0);
      sub_1001D7008(a1, 1);
      v32 = a4;
      sub_1001D7008(a1, 1);
      v33 = v32;
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc(32, -1);
        v37 = (_QWORD *)swift_slowAlloc(8, -1);
        v51 = swift_slowAlloc(64, -1);
        v54 = v51;
        *(_DWORD *)v36 = 136315650;
        v56 = a8;
        MetatypeMetadata = swift_getMetatypeMetadata(a8);
        v39 = String.init<A>(describing:)(&v56, MetatypeMetadata);
        v41 = v40;
        v56 = sub_100027E40(v39, v40, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v36 + 4, v36 + 12);
        swift_bridgeObjectRelease(v41);
        *(_WORD *)(v36 + 12) = 2080;
        swift_getErrorValue(a1, v53, v52);
        v42 = Error.rem_errorDescription.getter(v52[1], v52[2]);
        v44 = v43;
        v56 = sub_100027E40(v42, v43, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v36 + 14, v36 + 22);
        swift_bridgeObjectRelease(v44);
        sub_1001D7014(a1, 1);
        sub_1001D7014(a1, 1);
        *(_WORD *)(v36 + 22) = 2112;
        v45 = objc_msgSend(v33, "objectID");
        v56 = (uint64_t)v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v36 + 24, v36 + 32);
        *v37 = v45;

        _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s Failed to created public template preview. {error: %s, templateID: %@}", (uint8_t *)v36, 0x20u);
        v46 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v37, 1, v46);
        swift_slowDealloc(v37, -1, -1);
        swift_arrayDestroy(v51, 2, &type metadata for Any[8]);
        swift_slowDealloc(v51, -1, -1);
        swift_slowDealloc(v36, -1, -1);
        swift_release();

        sub_1001D7014(a1, 1);
      }
      else
      {
        swift_release();
        sub_1001D7014(a1, 1);
        sub_1001D7014(a1, 1);
        swift_errorRelease(a1);

      }
    }
    else
    {
      v50 = a5 & 1;
      v16 = qword_10063D480;
      v49 = a1;
      if (v16 != -1)
        swift_once(&qword_10063D480, sub_1001D5A84);
      v17 = type metadata accessor for Logger(0);
      sub_100012DC4(v17, (uint64_t)qword_10064B6D0);
      v18 = a4;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v48 = a6;
        v21 = swift_slowAlloc(22, -1);
        v22 = (_QWORD *)swift_slowAlloc(8, -1);
        v47 = swift_slowAlloc(32, -1);
        v54 = v47;
        *(_DWORD *)v21 = 136315394;
        v56 = a8;
        v23 = swift_getMetatypeMetadata(a8);
        v24 = String.init<A>(describing:)(&v56, v23);
        v26 = v25;
        v56 = sub_100027E40(v24, v25, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v21 + 4, v21 + 12);
        *(_QWORD *)&v27 = swift_bridgeObjectRelease(v26).n128_u64[0];
        *(_WORD *)(v21 + 12) = 2112;
        v28 = objc_msgSend(v18, "objectID", v27);
        v56 = (uint64_t)v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v21 + 14, v21 + 22);
        *v22 = v28;

        _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Created public template preview. Will show preview. {templateID: %@}", (uint8_t *)v21, 0x16u);
        v29 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v22, 1, v29);
        swift_slowDealloc(v22, -1, -1);
        swift_arrayDestroy(v47, 1, &type metadata for Any[8]);
        swift_slowDealloc(v47, -1, -1);
        v30 = v21;
        a6 = v48;
        swift_slowDealloc(v30, -1, -1);

      }
      else
      {

      }
      sub_1001D60C4(v18, v49, v50, a6);
      swift_release();
      sub_1001D7014(a1, 0);
    }
  }
}

void sub_1001D60C4(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  void *Strong;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  unsigned int v45;
  id v46;
  _QWORD v47[5];
  _QWORD v48[5];

  v5 = v4;
  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (void **)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 64);
  if (Strong)
  {
    v46 = Strong;
    v14 = objc_msgSend(Strong, "presentingViewController");

    if (v14)
    {
      v45 = a3 & 1;
      v15 = type metadata accessor for TTRAttachmentThumbnailSizeProvider(0);
      v16 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
      v17 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v18 = static OS_dispatch_queue.main.getter(v17);
      v44 = a4;
      v19 = v18;
      type metadata accessor for RDIDispatchQueue(0);
      v20 = static RDIDispatchQueue.utilityQueue.getter();
      v21 = type metadata accessor for TTRThumbnailGenerator(0);
      v43 = a2;
      v22 = v21;
      swift_allocObject(v21, 32, 7);
      v23 = TTRThumbnailGenerator.init(queue:backgroundQueue:)(v19, v20);
      v48[3] = v22;
      v48[4] = &protocol witness table for TTRThumbnailGenerator;
      v48[0] = v23;
      v47[3] = v15;
      v47[4] = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
      v47[0] = v16;
      v24 = type metadata accessor for TTRAttachmentThumbnailsManager(0);
      swift_allocObject(v24, 120, 7);
      v25 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)(v47, v48);
      v26 = *(void **)(v5 + 16);
      v27 = (char *)v12 + v10[5];
      v28 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
      v29 = type metadata accessor for TTRIHashtagAssociationNoOpModuleInterface();
      v30 = swift_allocObject(v29, 16, 7);
      *v12 = v26;
      *(_QWORD *)((char *)v12 + v10[6]) = v25;
      v31 = (_QWORD *)((char *)v12 + v10[7]);
      *v31 = v30;
      v31[1] = (uint64_t)&off_1005F7BB0;
      *((_BYTE *)v12 + v10[8]) = 0;
      v32 = v26;
      swift_retain();
      v33 = objc_msgSend(a1, "name");
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v36 = v35;

      v37 = TTRPublicTemplateFallbackProperties.init(listName:listColor:)(v34, v36, objc_msgSend(a1, "color"));
      v39 = v38;
      v41 = v40;
      v42 = (void *)sub_100375648(v48, (uint64_t)v12, v45, v43, v37, v38, v40, v44);
      swift_bridgeObjectRelease(v39);

      sub_100027F10(v48);
      objc_msgSend(v46, "pushViewController:animated:", v42, 1);
      swift_release();

      sub_1001D7020((uint64_t)v12);
    }
    else
    {

    }
  }
}

void sub_1001D63C4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  objc_class *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  Class isa;
  Class v26;
  id v27;
  uint64_t v28;
  Class v29;
  uint64_t v31[3];
  objc_super v32;
  _QWORD v33[8];
  _OWORD v34[2];
  _BYTE v35[25];
  _OWORD v36[2];
  _OWORD v37[2];

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 24);
  if (Strong)
  {
    v10 = (void *)Strong;
    (*(void (**)(_QWORD *__return_ptr))(v2 + 32))(v33);
    sub_1000A25CC((uint64_t)v33, (uint64_t)v34);
    if ((~v35[8] & 0xFE) != 0)
    {
      v36[0] = v34[0];
      v36[1] = v34[1];
      v37[0] = *(_OWORD *)v35;
      *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)&v35[9];
      v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v11(v8, a1, v5);
      v12 = (objc_class *)type metadata accessor for TTRITemplateSharingRouter.ShareSheetItem(0);
      v13 = (char *)objc_allocWithZone(v12);
      v11(&v13[OBJC_IVAR____TtCC9Reminders25TTRITemplateSharingRouterP33_B88B83D8B282D69A84EFFB48896895C814ShareSheetItem_url], (uint64_t)v8, v5);
      *(_QWORD *)&v13[OBJC_IVAR____TtCC9Reminders25TTRITemplateSharingRouterP33_B88B83D8B282D69A84EFFB48896895C814ShareSheetItem_linkMetadata] = a2;
      v32.receiver = v13;
      v32.super_class = v12;
      v14 = a2;
      v15 = objc_msgSendSuper2(&v32, "init");
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v16 = sub_10002A750((uint64_t *)&unk_10064B8C0);
      v17 = swift_allocObject(v16, 64, 7);
      *(_OWORD *)(v17 + 16) = xmmword_100520250;
      *(_QWORD *)(v17 + 56) = v12;
      *(_QWORD *)(v17 + 32) = v15;
      v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v19 = swift_allocObject(v18, 40, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100521140;
      v20 = objc_allocWithZone((Class)type metadata accessor for TTRITemplateSharingRouter.CopyiCloudLinkActivity(0));
      v21 = v15;
      v22 = objc_msgSend(v20, "init");
      *(_QWORD *)(v19 + 32) = v22;
      v31[0] = v19;
      specialized Array._endMutation()(v22);
      v23 = v31[0];
      v24 = objc_allocWithZone((Class)UIActivityViewController);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
      sub_100005ED8(0, (unint64_t *)&unk_10064B8D0, UIActivity_ptr);
      v26 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v23);
      v27 = objc_msgSend(v24, "initWithActivityItems:applicationActivities:", isa, v26);

      if (qword_10063D380 != -1)
        swift_once(&qword_10063D380, sub_1000C0750);
      swift_beginAccess(&static TTRListSharingUtilities.excludedShareActivityTypes, v31, 0, 0);
      v28 = static TTRListSharingUtilities.excludedShareActivityTypes;
      type metadata accessor for ActivityType(0);
      swift_bridgeObjectRetain(v28);
      v29 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
      objc_msgSend(v27, "setExcludedActivityTypes:", v29);

      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v36);
      objc_msgSend(v10, "presentViewController:animated:completion:", v27, 1, 0);

      sub_1000A2668((uint64_t)v33);
    }

  }
}

uint64_t sub_1001D69F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_QWORD *)(a1 + 16))
  {
    sub_100028CFC(a1 + 32, (uint64_t)v11);
    v6 = type metadata accessor for URL(0);
    v7 = swift_dynamicCast(v5, v11, &type metadata for Any[8], v6, 6);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, v7 ^ 1u, 1, v6);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  v9 = v1
     + OBJC_IVAR____TtCC9Reminders25TTRITemplateSharingRouterP33_B88B83D8B282D69A84EFFB48896895C822CopyiCloudLinkActivity_urlToBeCopiedToPasteboard;
  swift_beginAccess(v9, v11, 33, 0);
  sub_1001BD464((uint64_t)v5, v9);
  return swift_endAccess(v11);
}

uint64_t sub_1001D6B5C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  _BYTE v21[24];
  char v22[24];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v21[-v6];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtCC9Reminders25TTRITemplateSharingRouterP33_B88B83D8B282D69A84EFFB48896895C822CopyiCloudLinkActivity_urlToBeCopiedToPasteboard];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC9Reminders25TTRITemplateSharingRouterP33_B88B83D8B282D69A84EFFB48896895C822CopyiCloudLinkActivity_urlToBeCopiedToPasteboard], v22, 0, 0);
  sub_1001D705C(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1001D70A4((uint64_t)v7);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
  v14 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v15 = sub_10002A750(&qword_10064B8E0);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v15, v17 + *(_QWORD *)(v9 + 72), v16 | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100520250;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(v18 + v17, v11, v8);
  v19 = sub_1001D70E4();
  UIPasteboard.setObjects<A>(_:)(v18, v8, v19);

  v20 = swift_bridgeObjectRelease(v18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v4, 1, 1, v8, v20);
  swift_beginAccess(v12, v21, 33, 0);
  sub_1001BD464((uint64_t)v4, v12);
  swift_endAccess(v21);
  objc_msgSend(v1, "activityDidFinish:", 1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001D6E44()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  swift_unknownObjectWeakDestroy(v0 + 64);
  swift_unknownObjectWeakDestroy(v0 + 72);
  return swift_deallocClassInstance(v0, 81, 7);
}

uint64_t type metadata accessor for TTRITemplateSharingRouter()
{
  return objc_opt_self(_TtC9Reminders25TTRITemplateSharingRouter);
}

uint64_t sub_1001D6EB8()
{
  return type metadata accessor for TTRITemplateSharingRouter.ShareSheetItem(0);
}

uint64_t type metadata accessor for TTRITemplateSharingRouter.ShareSheetItem(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10064B860, (uint64_t)&nominal type descriptor for TTRITemplateSharingRouter.ShareSheetItem);
}

uint64_t sub_1001D6ED4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001D6F4C()
{
  return type metadata accessor for TTRITemplateSharingRouter.CopyiCloudLinkActivity(0);
}

uint64_t type metadata accessor for TTRITemplateSharingRouter.CopyiCloudLinkActivity(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10064B8A0, (uint64_t)&nominal type descriptor for TTRITemplateSharingRouter.CopyiCloudLinkActivity);
}

void sub_1001D6F68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1001BA92C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

NSString sub_1001D6FD4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10064B6E8 = (uint64_t)result;
  return result;
}

id sub_1001D7008(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain();
  else
    return a1;
}

void sub_1001D7014(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

uint64_t sub_1001D7020(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D705C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D70A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001D70E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649EB0;
  if (!qword_100649EB0)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_100649EB0);
  }
  return result;
}

BOOL sub_1001D712C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL8 v8;
  _BYTE v10[32];

  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_QWORD *)(a1 + 16) != 1)
    return 0;
  sub_100028CFC(a1 + 32, (uint64_t)v10);
  v5 = type metadata accessor for URL(0);
  v6 = swift_dynamicCast(v4, v10, &type metadata for Any[8], v5, 6);
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, v6 ^ 1u, 1, v5);
  v8 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5) == 0;
  sub_1001D70A4((uint64_t)v4);
  return v8;
}

uint64_t sub_1001D7220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064B8E8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064B8E8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001D72B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_1000A25CC(a2, (uint64_t)(v3 + 10));
  v4 = type metadata accessor for MainActor(0);
  v3[21] = v4;
  v3[22] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[23] = v6;
  v3[24] = v7;
  return swift_task_switch(sub_1001D7334, v6, v7);
}

uint64_t sub_1001D7334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v19;

  if (qword_10063D490 != -1)
    swift_once(&qword_10063D490, sub_1001D7220);
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_10064B8E8);
  v4 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Templates List Delete Template", 30, 2, v4);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v1 + 104);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 96), v6);
  v8 = TTRTemplatesListInteractorType.template(with:)(v2, ObjectType, v5);
  *(_QWORD *)(v0 + 200) = v8;
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 168);
    v11 = swift_allocObject(&unk_1005F6280, 24, 7);
    swift_weakInit(v11 + 16, v10);
    v12 = swift_allocObject(&unk_1005F6280, 24, 7);
    swift_weakInit(v12 + 16, v10);
    v13 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
    *(_QWORD *)(v0 + 208) = swift_initStackObject(v13, v0 + 16);
    v14 = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_1001DAAF4, v11, &unk_10064BA28, v12, 2.0);
    *(_QWORD *)(v0 + 216) = v14;
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v10 + 152);
    *(_QWORD *)(v0 + 232) = static MainActor.shared.getter(v14);
    v16 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v15);
    *(_QWORD *)(v0 + 240) = v16;
    *(_QWORD *)(v0 + 248) = v17;
    return swift_task_switch(sub_1001D74FC, v16, v17);
  }
  else
  {
    v19 = swift_release();
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v19);
  }
}

uint64_t sub_1001D74FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0[25];
  v3 = v0[19];
  v2 = v0[20];
  v4 = (_QWORD *)swift_task_alloc(48);
  v0[32] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = &unk_10064BA38;
  v4[5] = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)[1]);
  v0[33] = v5;
  *v5 = v0;
  v5[1] = sub_1001D7588;
  return TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)(v1, v0[27], &unk_1006487E8, v4);
}

uint64_t sub_1001D7588(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 256);
  v3 = *(_QWORD *)(*v1 + 264);
  *(_BYTE *)(*v1 + 137) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1001D75E8, *(_QWORD *)(v2 + 240), *(_QWORD *)(v2 + 248));
}

uint64_t sub_1001D75E8()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001D7620, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t sub_1001D7620()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_release(v1);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 137));
}

uint64_t sub_1001D7668(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  id v10;
  _QWORD v11[5];
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    sub_100010634(result + 112, (uint64_t)v11);
    swift_release();
    v3 = sub_10001413C(v11, v11[3]);
    v5 = static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter(v4);
    v7 = v6;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v3 + 16);
    if (Strong)
    {
      v9 = Strong;
      v10 = Strong;
      sub_100375364(v5, v7, v9);
      swift_bridgeObjectRelease(v7);

    }
    else
    {
      swift_bridgeObjectRelease(v7);
    }
    return sub_100027F10(v11);
  }
  return result;
}

uint64_t sub_1001D7744(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[10] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[11] = v2;
  v1[12] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[13] = v4;
  v1[14] = v5;
  return swift_task_switch(sub_1001D77B4, v4, v5);
}

uint64_t sub_1001D77B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 80) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 88);
    sub_100010634(Strong + 112, v0 + 16);
    swift_release();
    v4 = sub_10001413C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 120) = *v4;
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v4);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v5);
    *(_QWORD *)(v0 + 136) = v6;
    *(_QWORD *)(v0 + 144) = v7;
    return swift_task_switch(sub_1001D7894, v6, v7);
  }
  else
  {
    v9 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
  }
}

uint64_t sub_1001D7894()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 32);
  return swift_task_switch(sub_10005F8C8, 0, 0);
}

uint64_t sub_1001D78B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = v4;
  v3[6] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[7] = v6;
  v3[8] = v7;
  return swift_task_switch(sub_1001D7928, v6, v7);
}

uint64_t sub_1001D7928()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = sub_10001413C((_QWORD *)(v0[4] + 112), *(_QWORD *)(v0[4] + 136));
  v0[9] = *v2;
  v3 = static MainActor.shared.getter(v2);
  v0[10] = v3;
  v0[11] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v4);
  v0[12] = v5;
  v0[13] = v6;
  return swift_task_switch(sub_1001D79A4, v5, v6);
}

uint64_t sub_1001D79A4()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 72) + 16);
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    *(_QWORD *)(v0 + 120) = v2;
    *v2 = v0;
    v2[1] = sub_1001D7A74;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 128, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    v4 = swift_release();
    *(_BYTE *)(v0 + 130) = 2;
    v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v0 + 40), &protocol witness table for MainActor, v4);
    return swift_task_switch(sub_1001D7B2C, v5, v6);
  }
}

uint64_t sub_1001D7A74()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));

  *(_BYTE *)(v1 + 129) = *(_BYTE *)(v1 + 128);
  return swift_task_switch(sub_1001D7ACC, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1001D7ACC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;

  v1 = swift_release();
  *(_BYTE *)(v0 + 130) = *(_BYTE *)(v0 + 129);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v0 + 40), &protocol witness table for MainActor, v1);
  return swift_task_switch(sub_1001D7B2C, v2, v3);
}

uint64_t sub_1001D7B2C()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001D7B64, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1001D7B64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 130));
}

void sub_1001D7B98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  if (qword_10063D490 != -1)
    swift_once(&qword_10063D490, sub_1001D7220);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_10064B8E8);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Templates List Done", 19, 2, v2);
  swift_bridgeObjectRelease(v2);
  if ((*(_BYTE *)(v0 + 176) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 48);
    if (Strong)
    {
      v4 = Strong;
      sub_1003F36D8();
      swift_unknownObjectRelease(v4);
    }
    else
    {
      sub_1001D9CF8();
      v5 = *sub_10001413C((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
      if (qword_10063D8A0 != -1)
        swift_once(&qword_10063D8A0, sub_1004FF1BC);
      sub_100012DC4(v1, (uint64_t)qword_100664F78);
      sub_1002EB4BC(0x6574616C706D6554, 0xEE007473694C2073);
      v6 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "presentingViewController");

        if (v8)
        {
          objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
    }
  }
}

uint64_t sub_1001D7D48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[10] = v3;
  v2[11] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  v2[12] = v5;
  v2[13] = v6;
  return swift_task_switch(sub_1001D7DB8, v5, v6);
}

uint64_t sub_1001D7DB8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = (void *)v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v4._object = (void *)0x800000010056B040;
  v5._countAndFlagsBits = 0x73694C20656D614ELL;
  v5._object = (void *)0xE900000000000074;
  v4._countAndFlagsBits = 0xD000000000000059;
  object = TTRLocalizedString(_:comment:)(v5, v4)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v7, 0, 1);
  v0[14] = v8;

  v9 = swift_allocObject(&unk_1005F6320, 24, 7);
  *(_QWORD *)(v9 + 16) = v2;
  v0[6] = sub_1001DAD38;
  v0[7] = v9;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000D4884;
  v0[5] = &unk_1005F6338;
  v10 = _Block_copy(v0 + 2);
  v11 = v2;
  objc_msgSend(v8, "addTextFieldWithConfigurationHandler:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  v12 = sub_10001413C((_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 136));
  v13 = sub_10002A750(&qword_100649EF0);
  v14 = swift_allocObject(v13, 96, 7);
  v0[15] = v14;
  *(_OWORD *)(v14 + 16) = xmmword_1005201E0;
  v15 = static TTRLocalizableStrings.Common.createButton.getter();
  *((_BYTE *)v0 + 200) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v15, v16, 0, v0 + 25, &type metadata for Bool);
  v18 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v17);
  *((_BYTE *)v0 + 201) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v18, v19, 1, (char *)v0 + 201, &type metadata for Bool);
  v20 = swift_allocObject(&unk_1005F6370, 24, 7);
  v0[16] = v20;
  *(_QWORD *)(v20 + 16) = v8;
  v0[17] = *v12;
  v0[18] = static MainActor.shared.getter(v8);
  v22 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v21);
  v0[19] = v22;
  v0[20] = v23;
  return swift_task_switch(sub_1001D7FEC, v22, v23);
}

uint64_t sub_1001D7FEC()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(v0[17] + 16);
  v0[21] = Strong;
  if (Strong)
  {
    v2 = v0[16];
    v3 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    v0[22] = v3;
    *v3 = v0;
    v3[1] = sub_1001D80BC;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)((char *)v0 + 202, v0[14], v0[15], sub_1001DAD40, v2, 1, &type metadata for Bool);
  }
  else
  {
    v5 = v0[15];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v5);
    return swift_task_switch(sub_1001D8368, v0[12], v0[13]);
  }
}

uint64_t sub_1001D80BC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 168);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));

  *(_BYTE *)(v1 + 203) = *(_BYTE *)(v1 + 202);
  return swift_task_switch(sub_1001D8114, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_1001D8114()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[15];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1001D8160, v0[12], v0[13]);
}

void sub_1001D8160()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::Bool isValid;
  __n128 v16;
  id v17;
  void *v18;
  _QWORD *v19;
  Swift::tuple_name_String_isValid_Bool v20;

  v1 = *(void **)(v0 + 112);
  if ((*(_BYTE *)(v0 + 203) & 1) == 0)
  {
    swift_release();

    *(_BYTE *)(*(_QWORD *)(v0 + 64) + 176) = 0;
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = objc_msgSend(*(id *)(v0 + 112), "textFields");
  if (!v2)
    goto LABEL_16;
  v3 = v2;
  v4 = sub_100005ED8(0, (unint64_t *)&qword_10065F350, UITextField_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_15;
  }
  if (v5 < 0)
    v11 = v5;
  else
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v5);
  if (!v12)
  {
LABEL_15:
    swift_bridgeObjectRelease(v5);
LABEL_16:
    v10 = 0xE000000000000000;
    goto LABEL_17;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "text", swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (!v8)
    goto LABEL_16;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

LABEL_17:
  v20 = String.validatedListName()();
  countAndFlagsBits = v20.name._countAndFlagsBits;
  object = v20.name._object;
  isValid = v20.isValid;
  swift_bridgeObjectRelease(v10);
  if (!isValid)
  {
    v16 = swift_bridgeObjectRelease(object);
    v17 = (id)_REMGetLocalizedString(49, v16);
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    object = v18;

  }
  *(_QWORD *)(v0 + 184) = object;
  v19 = (_QWORD *)swift_task_alloc(dword_10064BA64);
  *(_QWORD *)(v0 + 192) = v19;
  *v19 = v0;
  v19[1] = sub_1001D83A8;
  sub_1001D8638(*(_QWORD *)(v0 + 72), countAndFlagsBits, (uint64_t)object);
}

uint64_t sub_1001D8368()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 88));

  *(_BYTE *)(*(_QWORD *)(v0 + 64) + 176) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D83A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_1001D8368, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

void sub_1001D83FC(void *a1, void *a2)
{
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;

  objc_msgSend(a1, "setClearButtonMode:", 1);
  v4._object = (void *)0x800000010056B0F0;
  v5._countAndFlagsBits = 0x6D614E207473694CLL;
  v5._object = (void *)0xE900000000000065;
  v4._countAndFlagsBits = 0xD00000000000004FLL;
  object = TTRLocalizedString(_:comment:)(v5, v4)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(a1, "setPlaceholder:", v7);

  objc_msgSend(a1, "setReturnKeyType:", 9);
  objc_msgSend(a1, "setEnablesReturnKeyAutomatically:", 1);
  v8 = objc_msgSend(a2, "name");
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v8 = v11;
  }
  v12 = v8;
  objc_msgSend(a1, "setText:");

}

void sub_1001D8518(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = objc_msgSend(a1, "textFields");
  if (!v1)
    return;
  v2 = v1;
  v3 = sub_100005ED8(0, (unint64_t *)&qword_10065F350, UITextField_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
    if (v7)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease(v4);
    return;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
LABEL_7:
    v8 = v5;
    objc_msgSend(v5, "selectAll:", 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

    return;
  }
  __break(1u);
}

uint64_t sub_1001D8638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = v5;
  v6 = static MainActor.shared.getter(v5);
  v4[8] = v6;
  v4[9] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v7);
  v4[10] = v8;
  v4[11] = v9;
  return swift_task_switch(sub_1001D86B8, v8, v9);
}

uint64_t sub_1001D86B8()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;

  Strong = swift_unknownObjectWeakLoadStrong(v0[6] + 48);
  v0[12] = Strong;
  v2 = v0[7];
  if (Strong)
  {
    v0[13] = static MainActor.shared.getter(Strong);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
    v6 = v5;
    v0[14] = v4;
    v0[15] = v5;
    v7 = sub_1001D877C;
  }
  else
  {
    v8 = sub_10001413C((_QWORD *)(v0[6] + 112), *(_QWORD *)(v0[6] + 136));
    v0[22] = *v8;
    v0[23] = static MainActor.shared.getter(v8);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v9);
    v6 = v10;
    v0[24] = v4;
    v0[25] = v10;
    v7 = sub_1001D8A18;
  }
  return swift_task_switch(v7, v4, v6);
}

uint64_t sub_1001D877C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[7];
  v2 = sub_10001413C((_QWORD *)(v0[12] + 48), *(_QWORD *)(v0[12] + 72));
  v0[16] = *v2;
  v0[17] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  v0[18] = v4;
  v0[19] = v5;
  return swift_task_switch(sub_1001D87F4, v4, v5);
}

uint64_t sub_1001D87F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _QWORD *v6;

  if (qword_10063D2D0 != -1)
    swift_once(&qword_10063D2D0, sub_10005751C);
  v1 = v0[16];
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_10063F9B0);
  sub_1002EB4BC(0xD000000000000015, 0x80000001005624B0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong
    && (v4 = Strong,
        v5 = objc_msgSend(Strong, "presentingViewController"),
        v0[20] = v5,
        v4,
        v5))
  {
    v6 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[21] = v6;
    *v6 = v0;
    v6[1] = sub_1001D88F8;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_1001D8980, v0[14], v0[15]);
  }
}

uint64_t sub_1001D88F8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));

  return swift_task_switch(sub_1001D8948, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1001D8948()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001D8980, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_1001D8980()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001D89B8, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1001D89B8()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  swift_unknownObjectRelease(v0[12]);
  v1 = v0[7];
  v2 = swift_release();
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  v0[28] = v3;
  v0[29] = v4;
  return swift_task_switch(sub_1001D8C04, v3, v4);
}

uint64_t sub_1001D8A18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _QWORD *v6;

  if (qword_10063D8A0 != -1)
    swift_once(&qword_10063D8A0, sub_1004FF1BC);
  v1 = v0[22];
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100664F78);
  sub_1002EB4BC(0x6574616C706D6554, 0xEE007473694C2073);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong
    && (v4 = Strong,
        v5 = objc_msgSend(Strong, "presentingViewController"),
        v0[26] = v5,
        v4,
        v5))
  {
    v6 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[27] = v6;
    *v6 = v0;
    v6[1] = sub_1001D8B24;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_1001D8BAC, v0[10], v0[11]);
  }
}

uint64_t sub_1001D8B24()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));

  return swift_task_switch(sub_1001D8B74, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_1001D8B74()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001D8BAC, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1001D8BAC()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[7];
  v2 = swift_release();
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  v0[28] = v3;
  v0[29] = v4;
  return swift_task_switch(sub_1001D8C04, v3, v4);
}

uint64_t sub_1001D8C04()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  int *v9;
  _QWORD *v10;
  int *v12;

  v1 = v0[6];
  v2 = objc_allocWithZone((Class)TTRUndoManager);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithDebugIdentifier:", v3);
  v0[30] = v4;

  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  ObjectType = swift_getObjectType(v5, v7);
  v9 = *(int **)(v6 + 56);
  v12 = (int *)((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v0[31] = v10;
  *v10 = v0;
  v10[1] = sub_1001D8CE4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, id, uint64_t, uint64_t))v12)(v0[3], v0[4], v0[5], v4, ObjectType, v6);
}

uint64_t sub_1001D8CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  v3[32] = a1;
  v3[33] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001D8DE8;
  else
    v5 = sub_1001D8D4C;
  return swift_task_switch(v5, v3[28], v3[29]);
}

uint64_t sub_1001D8D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  v4 = *(void **)(v0 + 256);
  v5 = *(void **)(v0 + 240);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v7 + 40);
    ObjectType = swift_getObjectType(Strong, v3);
    (*(void (**)(uint64_t, _UNKNOWN **, void *, void *, uint64_t, uint64_t))(v8 + 8))(v7, &off_1005F61B0, v4, v5, ObjectType, v8);
    swift_unknownObjectRelease(v6);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D8DE8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 240);
  swift_release();

  if (qword_10063D490 != -1)
    swift_once(&qword_10063D490, sub_1001D7220);
  v2 = *(void **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_10064B8E8);
  v4 = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 264);
  v8 = *(void **)(v0 + 24);
  if (v6)
  {
    v14 = *(_QWORD *)(v0 + 264);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v11 = objc_msgSend(v8, "objectID");
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    *v10 = v11;
    v7 = v14;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRMTemplatesListPresenter: failed to create list using template {templateID: %@}", v9, 0xCu);
    v12 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {

  }
  swift_errorRelease(v7);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D8FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  _QWORD *v9;

  v8 = type metadata accessor for MainActor(0);
  v5[2] = v8;
  v5[3] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_10064BA5C);
  v5[4] = v9;
  *v9 = v5;
  v9[1] = sub_100133E54;
  return sub_1001D7D48(a4, a5);
}

uint64_t sub_1001D9020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(uint64_t, uint64_t);
  __n128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];

  v2 = v1;
  v4 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  __chkstk_darwin(v4);
  v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064A540);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  sub_10003E3B8();
  v13 = swift_bridgeObjectRetain(a1);
  OrderedSet.init(_:)(v13);
  v14 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v46 = v12;
  v14(v8, v12, v9);
  v48 = v10;
  v49 = v9;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v15 = v2 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply, v50, 33, 0);
  sub_10019FE0C((uint64_t)v8, v15);
  swift_endAccess(v50);
  v16 = *(_QWORD *)(v2 + 104);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 96), v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 24);
  v44 = ObjectType;
  v45 = v16;
  if (v19(ObjectType, v16))
    v21 = TTRTemplatesListViewModel.init(templates:)();
  else
    v21 = TTRTemplatesListViewModel.init(isPlaceholder:)(1, v20);
  v25 = v21;
  v26 = v22;
  v27 = v23;
  v28 = v24;
  v29 = v47;
  sub_10002B1E8(v15, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.OptimisticApply);
  v30 = TTRTemplatesListViewModel.applying(_:)(v29, v25, v26 & 1, v27, v28);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v25);
  sub_10001F544(v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.OptimisticApply);
  v37 = *(_QWORD *)(v2 + 64);
  v39 = *(_QWORD *)(v2 + 80);
  v38 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 64) = v30;
  *(_BYTE *)(v2 + 72) = v32 & 1;
  *(_QWORD *)(v2 + 80) = v34;
  *(_QWORD *)(v2 + 88) = v36;
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);
  v40 = swift_bridgeObjectRelease(v37);
  v41 = v46;
  (*(void (**)(char *, uint64_t, __n128))(v45 + 48))(v46, v44, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v41, v49);
}

id sub_1001D92B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  Class isa;
  id v42;
  void *v44;
  uint64_t v45;
  _QWORD aBlock[6];

  v3 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
  __chkstk_darwin(v3);
  v45 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 64);
  v13 = *(unsigned __int8 *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 80);
  v15 = *(_QWORD *)(v1 + 88);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  v16 = swift_bridgeObjectRetain(v15);
  v44 = a1;
  TTRTemplatesListViewModel.template(with:)(a1, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v14);
  v17 = swift_bridgeObjectRelease(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v17) == 1)
  {
    sub_1000073A0((uint64_t)v7, &qword_1006582E0);
    return 0;
  }
  sub_1001DAD48((uint64_t)v7, (uint64_t)v11);
  v18 = (uint64_t)&v11[*(int *)(v8 + 28)];
  v19 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v20 = *(_QWORD *)(v18 + *(int *)(v19 + 20));
  v21 = *(_QWORD *)TTRTemplatePublicLinkData.Capabilities.createLink.unsafeMutableAddressor(v19);
  v22 = v45;
  sub_10002B1E8(v18, v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
  v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23);
  v25 = (uint64_t)v11;
  if (v24 == 1)
  {
    if ((v21 & ~v20) != 0)
    {
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
      return 0;
    }
    static TTRLocalizableStrings.Templates.shareTemplate.getter();
  }
  else
  {
    v26 = sub_10001F544(v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
    static TTRLocalizableStrings.Templates.sendLink.getter(v26);
  }
  v28 = v27;
  v29 = swift_allocObject(&unk_1005F6280, 24, 7);
  swift_weakInit(v29 + 16, v1);
  v30 = swift_allocObject(&unk_1005F6398, 40, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_BYTE *)(v30 + 24) = v24 != 1;
  v31 = v44;
  *(_QWORD *)(v30 + 32) = v44;
  swift_retain();
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  aBlock[4] = sub_1001DADB8;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002B4CE4;
  aBlock[3] = &unk_1005F63B0;
  v34 = _Block_copy(aBlock);
  v35 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v33, v34);

  _Block_release(v34);
  swift_release();
  swift_release();
  v36 = objc_msgSend((id)objc_opt_self(UIColor), "ttr_systemBlueColor");
  objc_msgSend(v35, "setBackgroundColor:", v36);

  v37 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v38 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100521140;
  *(_QWORD *)(v38 + 32) = v35;
  aBlock[0] = v38;
  specialized Array._endMutation()(v38);
  v39 = aBlock[0];
  sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
  v40 = v35;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  v42 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  return v42;
}

uint64_t sub_1001D96E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, __n128), uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t Strong;
  __n128 v12;
  char v13;
  _BYTE v15[24];

  v10 = a5 + 16;
  swift_beginAccess(a5 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    if ((a6 & 1) != 0)
      v13 = 2;
    else
      v13 = 0;
    sub_1001D9778(v13, a7);
    v12 = swift_release();
  }
  return a3(Strong != 0, v12);
}

double sub_1001D9778(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  __n128 v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[80];

  v3 = v2;
  v6 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v6);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = __chkstk_darwin(v9);
  v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v3 + 176) & 1) == 0)
  {
    v15 = *(_QWORD *)(v3 + 104);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 96), v11);
    v17 = TTRTemplatesListInteractorType.template(with:)(a2, ObjectType, v15);
    if (v17)
    {
      v18 = (void *)v17;
      if (qword_10063D490 != -1)
        swift_once(&qword_10063D490, sub_1001D7220);
      v19 = sub_100012DC4(v9, (uint64_t)qword_10064B8E8);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v14, v19, v9);
      v20 = sub_10002A750((uint64_t *)&unk_100640F20);
      inited = swift_initStackObject(v20, v38);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      *(_QWORD *)(inited + 32) = 0x6E6F69746361;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = &type metadata for TTRTemplateSharingAction;
      *(_BYTE *)(inited + 48) = a1;
      v22 = sub_10002D32C(inited);
      sub_1000143B4((uint64_t)"Templates List Perform Sharing Action {action: %@}", 50, 2, v22);
      v23 = swift_bridgeObjectRelease(v22);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v14, v9, v23);
      v24 = objc_msgSend(v18, "objectID");
      v25 = sub_10001413C((_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 136));
      v26 = swift_allocObject(&unk_1005F6280, 24, 7);
      swift_weakInit(v26 + 16, v3);
      v27 = swift_allocObject(&unk_1005F62A8, 32, 7);
      *(_QWORD *)(v27 + 16) = v26;
      *(_QWORD *)(v27 + 24) = v24;
      Strong = swift_unknownObjectWeakLoadStrong(*v25 + 16);
      if (Strong)
      {
        v29 = (void *)Strong;
        swift_retain();
        v30 = v24;
        v31 = sub_1000CE22C(v18, (uint64_t)v29, (uint64_t)sub_1001DABD0, v27);
        v33 = v32;
        v34 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 1, 1, v34);
        type metadata accessor for MainActor(0);
        swift_unknownObjectRetain(v31);
        v36 = static MainActor.shared.getter(v35);
        v37 = swift_allocObject(&unk_1005F62D0, 49, 7);
        *(_QWORD *)(v37 + 16) = v36;
        *(_QWORD *)(v37 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v37 + 32) = v31;
        *(_QWORD *)(v37 + 40) = v33;
        *(_BYTE *)(v37 + 48) = a1;
        sub_100148368((uint64_t)v8, (uint64_t)&unk_10064BA40, v37);

        swift_release();
        swift_release();

        swift_release();
        swift_unknownObjectRelease(v31);
      }
      else
      {

        *(_QWORD *)&result = swift_release().n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1001D9A9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  __int128 v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  id v24;
  Class isa;
  id v26;
  __n128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[24];
  _OWORD v31[2];
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;

  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v30, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  v14 = 0uLL;
  if (!Strong)
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 254;
    v22 = 0uLL;
    goto LABEL_12;
  }
  v15 = swift_unknownObjectWeakLoadStrong(Strong + 16);
  swift_release();
  if (!v15)
  {
LABEL_11:
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 254;
    v22 = 0uLL;
    v14 = 0uLL;
    goto LABEL_12;
  }
  v16 = *(void **)(v15 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v16)
  {
    *(_QWORD *)&v31[0] = a2;
    v17 = v16;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v31);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_100646950);
LABEL_10:
      swift_unknownObjectRelease(v15);
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v23 = *(void **)(v15 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView);
    if (v23)
    {
      v24 = v23;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v26 = objc_msgSend(v24, "cellForItemAtIndexPath:", isa);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (!v26)
        goto LABEL_10;
      static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v31, v26, 3, 0, v27);
      v28 = v31[1];
      v29 = v31[0];
      v18 = v32;
      v21 = v33;
      v19 = v34;
      v20 = v35;
      swift_unknownObjectRelease(v15);

      v22 = v28;
      v14 = v29;
LABEL_12:
      *(_OWORD *)a3 = v14;
      *(_OWORD *)(a3 + 16) = v22;
      *(_QWORD *)(a3 + 32) = v18;
      *(_QWORD *)(a3 + 40) = v21;
      *(_QWORD *)(a3 + 48) = v19;
      *(_BYTE *)(a3 + 56) = v20;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1001D9CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v1 + 40);
    v14 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v22 = v3;
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    v16 = (_QWORD *)swift_allocObject(&unk_1005F6230, 40, 7);
    v16[2] = v12;
    v16[3] = v13;
    v16[4] = v1;
    aBlock[4] = sub_1001DA4C4;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006378;
    aBlock[3] = &unk_1005F6248;
    v17 = _Block_copy(aBlock);
    swift_unknownObjectRetain(v12);
    v18 = swift_retain();
    static DispatchQoS.unspecified.getter(v18);
    v23 = _swiftEmptyArrayStorage;
    v19 = sub_100005E90();
    v20 = sub_10002A750((uint64_t *)&unk_100640F40);
    v21 = sub_10002D190();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, v2, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v17);
    _Block_release(v17);
    swift_unknownObjectRelease(v12);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001D9F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_1000381C8(v0 + 48);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  sub_100027F10((_QWORD *)(v0 + 112));
  swift_release();

  swift_release();
  sub_10001F544(v0 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.OptimisticApply);

  return v0;
}

uint64_t sub_1001D9FA8()
{
  uint64_t v0;

  sub_1001D9F00();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001D9FCC()
{
  return type metadata accessor for TTRITemplatesListPresenter(0);
}

uint64_t type metadata accessor for TTRITemplatesListPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10064B938;
  if (!qword_10064B938)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRITemplatesListPresenter);
  return result;
}

uint64_t sub_1001DA010(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_100528270;
  v4[1] = &unk_100528270;
  v4[2] = &unk_100528270;
  v4[3] = &unk_100528288;
  v4[4] = &unk_1005282A0;
  v4[5] = &unk_1005282B8;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = &unk_1005282D0;
  result = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(result - 8) + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001DA0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  void *v11;
  _BYTE v13[24];

  v1 = sub_10002A750(&qword_10064A538);
  __chkstk_darwin(v1);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10002A750(&qword_10064A540);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004034AC((uint64_t)_swiftEmptyArrayStorage);
    v8 = v11;
  }
  else
  {
    v8 = &_swiftEmptySetSingleton;
  }
  TTRTemplatesListViewModel.OptimisticApply.init(templateOrdering:deletedTemplateIDs:)(v3, v8);
  v9 = v0 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply, v13, 33, 0);
  sub_1001DA470((uint64_t)v6, v9);
  swift_endAccess(v13);
  v10._object = (void *)0x80000001005682D0;
  v10._countAndFlagsBits = 0xD000000000000019;
  TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v10);
}

uint64_t sub_1001DA22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a2;
  swift_unknownObjectWeakAssign(v2 + 48, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1001DA25C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];
  uint64_t v14;
  char v15;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v4 = result;
    sub_100265A00((uint64_t)v13);
    v11 = v13[1];
    v12 = v13[0];
    v10 = v13[2];
    v5 = v14;
    v6 = v15;
    result = swift_unknownObjectRelease(v4);
    v8 = v11;
    v7 = v12;
    v9 = v10;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v9 = xmmword_1005229B0;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v6;
  return result;
}

uint64_t sub_1001DA300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v5[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v5[3] = v7;
  v8 = static MainActor.shared.getter(v7);
  v5[4] = v8;
  v5[5] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_10064BA64);
  v5[6] = v9;
  *v9 = v5;
  v9[1] = sub_1001DA388;
  return sub_1001D8638(a5, 0, 0);
}

uint64_t sub_1001DA388()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1001DA3F8, v3, v4);
}

uint64_t sub_1001DA3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = swift_release();
  *(_BYTE *)(v2 + 176) = 0;
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  return swift_task_switch(sub_100049824, v4, v5);
}

id sub_1001DA45C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_editorUndoManager);
}

uint64_t sub_1001DA470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DA4B4()
{
  return sub_100006B10((void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_1001DA4C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  ObjectType = swift_getObjectType(v3, a2);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v4 + 16))(v5, &off_1005F61B0, ObjectType, v4);
}

void sub_1001DA514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = *sub_10001413C((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v9 = (id)Strong;
    v3 = v1 + 24;
    v4 = swift_unknownObjectWeakLoadStrong(v1 + 24);
    if (v4)
    {
      v5 = (id)v4;
      v6 = objc_msgSend(v9, "presentedViewController");
      if (v6)
      {
        v7 = v6;

        if (v7 == v5)
        {
          swift_unknownObjectWeakAssign(v3, 0);
          objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
        }
      }

      v8 = v5;
    }
    else
    {
      v8 = v9;
    }

  }
}

void sub_1001DA5E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  if (qword_10063D490 != -1)
    swift_once(&qword_10063D490, sub_1001D7220);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_10064B8E8);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Templates List cancel", 21, 2, v2);
  swift_bridgeObjectRelease(v2);
  if ((*(_BYTE *)(v0 + 176) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 48);
    if (Strong)
    {
      v4 = Strong;
      sub_1003F36D8();
      swift_unknownObjectRelease(v4);
    }
    else
    {
      sub_1001D9CF8();
      v5 = *sub_10001413C((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
      if (qword_10063D8A0 != -1)
        swift_once(&qword_10063D8A0, sub_1004FF1BC);
      sub_100012DC4(v1, (uint64_t)qword_100664F78);
      sub_1002EB4BC(0x6574616C706D6554, 0xEE007473694C2073);
      v6 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "presentingViewController");

        if (v8)
        {
          objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
    }
  }
}

void sub_1001DA798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D490 != -1)
    swift_once(&qword_10063D490, sub_1001D7220);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_10064B8E8);
  v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Templates List Create List", 26, 2, v8);
  swift_bridgeObjectRelease(v8);
  if ((*(_BYTE *)(v1 + 176) & 1) == 0)
  {
    v10 = *(_QWORD *)(v1 + 104);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 96), v9);
    v12 = TTRTemplatesListInteractorType.template(with:)(a1, ObjectType, v10);
    if (v12)
    {
      v13 = (void *)v12;
      *(_BYTE *)(v2 + 176) = 1;
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
      type metadata accessor for MainActor(0);
      swift_retain();
      v15 = v13;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_1005F62F8, 48, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v2;
      v17[5] = v15;
      sub_100148368((uint64_t)v6, (uint64_t)&unk_10064BA50, (uint64_t)v17);
      swift_release();

    }
  }
}

void *sub_1001DA934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __n128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *result;
  void *v28;
  _BYTE v30[24];

  v1 = v0;
  v2 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply(0);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(v0 + 104);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 96), v6);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(ObjectType, v5))
    v9 = TTRTemplatesListViewModel.init(templates:)();
  else
    v9 = TTRTemplatesListViewModel.init(isPlaceholder:)(1, v8);
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = v1 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply, v30, 0, 0);
  sub_10002B1E8(v17, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.OptimisticApply);
  v18 = TTRTemplatesListViewModel.applying(_:)(v4, v13, v14 & 1, v15, v16);
  LOBYTE(v17) = v19;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.OptimisticApply);
  v24 = *(_QWORD *)(v1 + 64);
  v26 = *(_QWORD *)(v1 + 80);
  v25 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 64) = v18;
  *(_BYTE *)(v1 + 72) = v17 & 1;
  *(_QWORD *)(v1 + 80) = v21;
  *(_QWORD *)(v1 + 88) = v23;
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v24);
  result = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v28 = result;
    if (objc_msgSend(result, "isViewLoaded"))
    {
      sub_100264864();
      sub_100264568(1);
    }
    return (void *)swift_unknownObjectRelease(v28);
  }
  return result;
}

uint64_t sub_1001DAAD0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001DAAF4()
{
  uint64_t v0;

  return sub_1001D7668(v0);
}

uint64_t sub_1001DAAFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10064BA24);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_1001D7744(v0);
}

uint64_t sub_1001DAB44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_10064BA34);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1001345E4;
  return sub_1001D78B4(a1, a2, v2);
}

uint64_t sub_1001DABA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001DABD0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001D9A9C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1001DABD8()
{
  return sub_100006B10((void (*)(_QWORD))&_swift_unknownObjectRelease, 49);
}

uint64_t sub_1001DABE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_100665044);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10004A08C;
  return sub_1004FF24C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1001DAC68()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001DAC9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10064BA4C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_1001D8FAC(a1, v4, v5, v7, v6);
}

uint64_t sub_1001DAD14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001DAD38(void *a1)
{
  uint64_t v1;

  sub_1001D83FC(a1, *(void **)(v1 + 16));
}

void sub_1001DAD40()
{
  uint64_t v0;

  sub_1001D8518(*(void **)(v0 + 16));
}

uint64_t sub_1001DAD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DAD8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001DADB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, __n128), uint64_t a4)
{
  uint64_t v4;

  return sub_1001D96E0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:popoverAnchor:presentUIAlert:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  sub_1000A25CC(a3, (uint64_t)(v6 + 2));
  v7 = type metadata accessor for MainActor(0);
  v6[16] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v6[17] = v9;
  v6[18] = v10;
  return swift_task_switch(sub_1001DAE60, v9, v10);
}

uint64_t sub_1001DAE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 152) = v3;
  v4 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)[1]);
  *(_QWORD *)(v0 + 160) = v5;
  *v5 = v0;
  v5[1] = sub_1001DAEF0;
  return TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), &unk_1006487E8, v3);
}

uint64_t sub_1001DAEF0(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 152);
  v3 = *(_QWORD *)(*v1 + 160);
  *(_BYTE *)(*v1 + 73) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1001DAF50, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_1001DAF50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 73));
}

uint64_t sub_1001DAF84(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  *(_BYTE *)(v5 + 123) = a1;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 48) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 64) = v9;
  return swift_task_switch(sub_1001DAFF8, v8, v9);
}

uint64_t sub_1001DAFF8()
{
  uint64_t v0;
  unsigned int v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v38)(uint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(v0 + 123);
  if (v1 > 1)
  {
    v13 = *(int **)(v0 + 32);
    static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertTitle.getter();
    v15 = v14;
    static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertMessage.getter();
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v20 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v18, v19, 1);
    *(_QWORD *)(v0 + 96) = v20;

    v21 = sub_10002A750(&qword_100649EF0);
    v22 = swift_allocObject(v21, 64, 7);
    *(_QWORD *)(v0 + 104) = v22;
    *(_OWORD *)(v22 + 16) = xmmword_100520250;
    v23 = static TTRLocalizableStrings.Common.alertOKButton.getter();
    *(_BYTE *)(v0 + 120) = 1;
    TTRIValueBasedAlertAction.init(title:style:value:)(v23, v24, 1, v0 + 120, &type metadata for Bool);
    v38 = (uint64_t (*)(uint64_t, uint64_t))((char *)v13 + *v13);
    v25 = (_QWORD *)swift_task_alloc(v13[1]);
    *(_QWORD *)(v0 + 112) = v25;
    *v25 = v0;
    v25[1] = sub_1001DB350;
    v26 = (uint64_t)v20;
  }
  else
  {
    v2 = objc_msgSend(*(id *)(v0 + 16), "name");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = static TTRLocalizableStrings.Templates.deleteTemplateAlertTitle(templateName:)(v3, v5);
    v8 = v7;
    v9 = swift_bridgeObjectRelease(v5);
    if (v1 == 1)
    {
      v10 = static TTRLocalizableStrings.Templates.deleteTemplateWithPublicLinkAlertMessage.getter(v9);
      v12 = v11;
    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v27 = *(_QWORD *)(v0 + 24);
    v28 = *(int **)(v0 + 32);
    sub_1001DB3E4();
    sub_1000A6FE8(v27);
    v29 = UIAlertController.init(actionSheetOrAlertWithTitle:message:popoverAnchor:canCancel:)(v6, v8, v10, v12, v27, 1);
    *(_QWORD *)(v0 + 72) = v29;
    v30 = sub_10002A750(&qword_100649EF0);
    v22 = swift_allocObject(v30, 96, 7);
    *(_QWORD *)(v0 + 80) = v22;
    *(_OWORD *)(v22 + 16) = xmmword_1005201E0;
    v31 = static TTRLocalizableStrings.Common.alertDeleteButton.getter(v22);
    *(_BYTE *)(v0 + 121) = 1;
    TTRIValueBasedAlertAction.init(title:style:value:)(v31, v32, 2, v0 + 121, &type metadata for Bool);
    v34 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v33);
    *(_BYTE *)(v0 + 122) = 0;
    TTRIValueBasedAlertAction.init(title:style:value:)(v34, v35, 1, v0 + 122, &type metadata for Bool);
    v38 = (uint64_t (*)(uint64_t, uint64_t))((char *)v28 + *v28);
    v36 = (_QWORD *)swift_task_alloc(v28[1]);
    *(_QWORD *)(v0 + 88) = v36;
    *v36 = v0;
    v36[1] = sub_1001DB2AC;
    v26 = v29;
  }
  return v38(v26, v22);
}

uint64_t sub_1001DB2AC(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 88);
  *(_BYTE *)(*v1 + 124) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_1001DB30C, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1001DB30C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 124);
  v2 = *(_QWORD *)(v0 + 48);

  swift_release(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t sub_1001DB350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_1001DB3A4, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1001DB3A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);

  swift_release(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

unint64_t sub_1001DB3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641B28;
  if (!qword_100641B28)
  {
    v1 = objc_opt_self(UIAlertController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100641B28);
  }
  return result;
}

void sub_1001DB420()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _UNKNOWN **v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char **v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  NSString *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  NSString *v29;
  id v30;
  double v31;
  double v32;
  NSString *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  NSString *v38;
  id v39;
  NSString *v40;
  id v41;
  unint64_t v42;
  Class isa;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  char *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  id v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Class v84;
  id v85;
  char v86[152];
  unint64_t v87;
  char v88[56];

  v1 = (uint64_t)v0;
  TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)(0, v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging]);
  v3 = &off_10064B000;
  if (!v2)
  {
    v36 = 0;
    v10 = 0;
    goto LABEL_20;
  }
  v4 = v2;
  v5 = (void *)TTRRemindersListViewModel.EmptyListMessagingType.localizedSubtitle(currentLayout:)(v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_listLayout]);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_secondaryLabelColor;
  if (!v5)
    v7 = &selRef_tertiaryLabelColor;
  v8 = objc_msgSend(v6, *v7);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_titleLabel);
  v10 = v9;
  if (!v9)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v10, "setNumberOfLines:", 0);
    objc_msgSend(v10, "setTextAlignment:", 1);
  }
  v11 = v9;
  v12 = v10;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v12, "setText:", v13);

  v14 = v12;
  v15 = objc_msgSend((id)v1, "traitCollection");
  v16 = (void *)sub_1001DC4B4(v15, v5 != 0);

  objc_msgSend(v14, "setFont:", v16);
  objc_msgSend(v14, "setTextColor:", v8);
  if (!v5)
  {

    v36 = 0;
    goto LABEL_20;
  }
  v17 = objc_allocWithZone((Class)NSMutableAttributedString);
  v85 = v5;
  v18 = objc_msgSend(v17, "initWithAttributedString:");
  v19 = objc_msgSend((id)objc_opt_self(NSParagraphStyle), "defaultParagraphStyle");
  v20 = (void *)NSParagraphStyle.withMutations(_:)(sub_1001DC05C, 0);

  v21 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v21, v86);
  *(_OWORD *)(inited + 16) = xmmword_1005275C0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v23 = NSFontAttributeName;
  v24 = objc_msgSend((id)v1, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");

  if (v25 == (id)1)
  {
    v26 = objc_msgSend((id)v1, "traitCollection");
    v27 = objc_msgSend(v26, "preferredContentSizeCategory");

    v28 = (void *)objc_opt_self(UIScreen);
    v29 = UIContentSizeCategoryAccessibilityExtraLarge;
    v30 = objc_msgSend(v28, "mainScreen");
    objc_msgSend(v30, "bounds");
    v32 = v31;

    if (v32 == 568.0)
    {
      v33 = UIContentSizeCategoryAccessibilityMedium;

      v29 = v33;
    }
    v34 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v35 = static UIFont.roundedBodyFont(contentSizeCategory:maximumContentSizeCategory:weight:)(v27, v29, 0, 1);

    v3 = &off_10064B000;
  }
  else
  {
    v34 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v35 = static UIFont.roundedBodyFont.getter(v34);
  }
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v35;
  *(_QWORD *)(inited + 64) = v34;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v37 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 104) = v37;
  *(_QWORD *)(inited + 112) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 144) = sub_100005ED8(0, &qword_10064BB48, NSParagraphStyle_ptr);
  *(_QWORD *)(inited + 120) = v20;
  v38 = NSForegroundColorAttributeName;
  v39 = v8;
  v40 = NSParagraphStyleAttributeName;
  v41 = v20;
  v42 = sub_100350498(inited);
  type metadata accessor for Key(0);
  sub_1000D2BEC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v42);
  v44 = objc_msgSend(v18, "string");
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v47 = v46;

  v48 = String.fullNSRange.getter(v45, v47);
  v50 = v49;
  swift_bridgeObjectRelease(v47);
  objc_msgSend(v18, "addAttributes:range:", isa, v48, v50);

  v51 = (char *)v3[340];
  v52 = *(id *)&v51[v1];
  if (v52)
  {
    v53 = *(void **)&v51[v1];
    v36 = v52;
LABEL_18:
    v55 = v53;

    v56 = v52;
    v18 = v18;
    objc_msgSend(v56, "setAttributedText:", v18);

    goto LABEL_19;
  }
  v54 = sub_1001DC098(v1);
  v36 = v54;
  if (v54)
  {
    v52 = v54;
    v53 = 0;
    goto LABEL_18;
  }
LABEL_19:

LABEL_20:
  v57 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_titleLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_titleLabel) = v10;
  v58 = v10;

  v59 = (char *)v3[340];
  v60 = *(void **)&v59[v1];
  *(_QWORD *)&v59[v1] = v36;
  v61 = v36;

  v62 = sub_10002A750((uint64_t *)&unk_10064BB30);
  v63 = swift_initStackObject(v62, v88);
  *(_OWORD *)(v63 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v63 + 32) = v10;
  *(_QWORD *)(v63 + 40) = v36;
  v87 = v63;
  specialized Array._endMutation()(v63);
  v64 = v87;
  v87 = (unint64_t)_swiftEmptyArrayStorage;
  v65 = *(void **)(v64 + 32);
  if (!v65)
  {
    v72 = v58;
    v73 = v61;
    v71 = *(void **)(v64 + 40);
    if (!v71)
      goto LABEL_29;
    goto LABEL_26;
  }
  v66 = v65;
  v67 = v58;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
  v69 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v68 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
  specialized Array._endMutation()(v70);
  v71 = *(void **)(v64 + 40);
  if (v71)
  {
LABEL_26:
    v74 = v71;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
    v76 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v75 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v76 >= v75 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
    v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74);
    specialized Array._endMutation()(v77);
  }
LABEL_29:
  v78 = v87;
  swift_bridgeObjectRelease(v64);
  v79 = objc_msgSend((id)v1, "arrangedSubviews");
  if (!v79)
    goto LABEL_32;
  v80 = v79;
  v81 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v80, v81);

  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v82);
  LOBYTE(v80) = sub_100096708(v83, v78);
  swift_bridgeObjectRelease_n(v82, 2);
  swift_bridgeObjectRelease(v78);
  if ((v80 & 1) != 0)
  {

    swift_bridgeObjectRelease(v78);
  }
  else
  {
LABEL_32:
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v84 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v78);
    objc_msgSend((id)v1, "setArrangedSubviews:", v84);

  }
}

id sub_1001DBBF4(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListMessagingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(a1, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v5 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100521130;
  v6 = objc_msgSend(a1, "layoutMarginsGuide");
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v2, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(a1, "layoutMarginsGuide");
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(a1, "centerYAnchor");
  v15 = objc_msgSend(v2, "centerYAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v5 + 48) = v16;
  specialized Array._endMutation()(v17);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v3, "activateConstraints:", isa);

  return v2;
}

id sub_1001DBE64(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v6[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_listLayout] = 0;
  v6[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging] = 0x80;
  v12 = &v6[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_messagingViewDelegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_titleLabel] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_subtitleTextView] = 0;
  v19.receiver = v6;
  v19.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setAlignment:", 3);
  objc_msgSend(v13, "setDistribution:", 0);
  objc_msgSend(v13, "setSpacing:", 2.0);
  objc_msgSend(v13, "setAccessibilityContainerType:", 4);
  v14 = sub_10002A750(&qword_1006415F0);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v15 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v15 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v15 + 48) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v15 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  v16 = v13;
  v17 = UIView.registerForTraitChanges<A>(_:handler:)(v15, sub_1001DC494, 0, ObjectType);
  swift_unknownObjectRelease(v17);
  swift_bridgeObjectRelease(v15);

  return v16;
}

id sub_1001DC05C(void *a1)
{
  objc_msgSend(a1, "setLineBreakMode:", 0);
  return objc_msgSend(a1, "setAlignment:", 1);
}

id sub_1001DC098(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t inited;
  NSString *v9;
  id v10;
  unint64_t v11;
  Class isa;
  _BYTE v14[72];

  v2 = objc_msgSend(objc_allocWithZone((Class)UITextView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  objc_msgSend(v4, "setEditable:", 0);
  objc_msgSend(v4, "setTextContainerInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v6 = objc_msgSend(v4, "textContainer");
  objc_msgSend(v6, "setLineFragmentPadding:", 0.0);

  objc_msgSend(v4, "_setInteractiveTextSelectionDisabled:", 1);
  v7 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v7, v14);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v9 = NSForegroundColorAttributeName;
  v10 = objc_msgSend(v3, "linkColor");
  *(_QWORD *)(inited + 64) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_100350498(inited);
  type metadata accessor for Key(0);
  sub_1000D2BEC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v4, "setLinkTextAttributes:", isa);

  objc_msgSend(v4, "setScrollEnabled:", 0);
  objc_msgSend(v4, "setDelegate:", a1);
  return v4;
}

uint64_t type metadata accessor for TTRIRemindersListMessagingView()
{
  return objc_opt_self(_TtC9Reminders30TTRIRemindersListMessagingView);
}

void sub_1001DC494()
{
  sub_1001DB420();
}

uint64_t sub_1001DC4B4(void *a1, char a2)
{
  id v4;
  id v5;
  void *v6;
  NSString *v7;
  id v8;
  double v9;
  double v10;
  NSString *v11;
  uint64_t v12;
  id *v14;
  id v15;
  uint64_t v16;

  v4 = objc_msgSend(a1, "horizontalSizeClass");
  if ((unint64_t)v4 >= 2)
  {
    if (v4 == (id)2)
    {
      v14 = (id *)&UIFontTextStyleTitle3;
      if ((a2 & 1) == 0)
        v14 = (id *)&UIFontTextStyleLargeTitle;
      v15 = *v14;
      sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
      v16 = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(v15, 0, 1, 0);

      return v16;
    }
    else
    {
      sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
      return static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle3, 0, 1, 0);
    }
  }
  else
  {
    v5 = objc_msgSend(a1, "preferredContentSizeCategory");
    v6 = (void *)objc_opt_self(UIScreen);
    v7 = UIContentSizeCategoryAccessibilityExtraLarge;
    v8 = objc_msgSend(v6, "mainScreen");
    objc_msgSend(v8, "bounds");
    v10 = v9;

    if (v10 == 568.0)
    {
      v11 = UIContentSizeCategoryAccessibilityMedium;

      v7 = v11;
    }
    sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v12 = static UIFont.roundedCustomFont(textStyle:contentSizeCategory:maximumContentSizeCategory:weight:)(UIFontTextStyleTitle3, v5, v7, 0, 1);

    return v12;
  }
}

_BYTE *sub_1001DC68C(unsigned __int8 a1, _BYTE *a2, void *a3)
{
  int v5;
  _BYTE *v7;
  unsigned int v8;
  int v9;
  int v10;
  _BYTE *v12;
  _BYTE *v13;

  v5 = a1 >> 6;
  if (a1 != 128 || v5 != 2)
  {
    if (a2)
      v7 = a2;
    else
      v7 = sub_1001DBBF4(a3);
    v8 = v7[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging];
    v7[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging] = a1;
    if (v5)
    {
      if (v5 == 1)
      {
        v9 = v8 & 0xC0;
        v10 = (v8 ^ a1) & 0x3F;
        if (v9 != 64 || v10 != 0)
          goto LABEL_23;
        goto LABEL_21;
      }
      if (v8 != 128)
      {
LABEL_23:
        v13 = a2;
        sub_1001DB420();
        return v7;
      }
    }
    else if (v8 > 0x3F || ((((a1 & 1) == 0) ^ v8) & 1) == 0)
    {
      goto LABEL_23;
    }
LABEL_21:
    v12 = a2;
    return v7;
  }
  if (a2)
    objc_msgSend(a2, "removeFromSuperview");
  return 0;
}

void sub_1001DC76C()
{
  _BYTE *v0;
  char *v1;

  v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_listLayout] = 0;
  v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging] = 0x80;
  v1 = &v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_messagingViewDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_subtitleTextView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListMessagingView.swift", 46, 2, 78, 0);
  __break(1u);
}

uint64_t sub_1001DC814()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7[10];
  _OWORD v8[5];
  _OWORD v9[5];

  TTRRemindersListViewModel.EmptyListMessagingType.helpAnchor.getter(v7, *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_emptyListMessaging));
  sub_1001DC8D8((uint64_t)v7, (uint64_t)v8);
  if (*((_QWORD *)&v8[0] + 1) != 1)
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_messagingViewDelegate);
    if (Strong)
    {
      v3 = Strong;
      v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v2);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v4 + 816))(v9, ObjectType, v4);
      swift_unknownObjectRelease(v3);
    }
    sub_1001DC920(v7);
  }
  return 0;
}

uint64_t sub_1001DC8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064BB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1001DC920(uint64_t *a1)
{
  sub_1001DC968(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t sub_1001DC968(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 1)
  {
    sub_1001CCDC0(result, a2, a3, a4, a5, a6);
    return sub_100179CA0(a7, a8, a9, a10);
  }
  return result;
}

_BYTE *sub_1001DC9B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Subtasks;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t (*v24)(_QWORD);
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  void *v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  _QWORD *v41;
  _BYTE *v42;
  id v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  void (*v79)(void *, _UNKNOWN **, uint64_t, uint64_t);
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  void (*v84)(uint64_t, _UNKNOWN **);
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128);
  __n128 v95;
  _QWORD *v96;
  _BYTE v98[12];
  _BOOL4 v99;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  void (*v107)(_BYTE *, uint64_t);
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  __int128 v118;
  _OWORD v119[24];
  _QWORD v120[16];
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v109 = a1;
  v110 = a3;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4);
  v104 = &v98[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v108);
  v114 = &v98[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRListType.SortingCapability(0);
  v8 = __chkstk_darwin(v7);
  v106 = &v98[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v113 = &v98[-v10];
  Subtasks = type metadata accessor for REMRemindersListDataView.FetchSubtasks(0);
  v102 = *(_QWORD *)(Subtasks - 8);
  v103 = Subtasks;
  __chkstk_darwin(Subtasks);
  v105 = &v98[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v112 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v13 = *(_QWORD *)(v112 - 8);
  v14 = __chkstk_darwin(v112);
  v16 = &v98[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v111 = &v98[-v17];
  v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v18);
  v20 = &v98[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v21);
  v23 = (void **)&v98[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8((uint64_t)a2, (uint64_t)v23, v24);
  v120[0] = _swiftEmptyArrayStorage;
  v25 = sub_100080C90();
  v26 = sub_10002A750(&qword_100641278);
  v27 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v120, v26, v27, v18, v25);
  sub_100041F70(v23, (uint64_t)v20, (void *)1, (uint64_t)v120);
  v28 = (void *)TTRListType.PredefinedSmartListType.smartList(in:)(*a2, 3);
  if (v28)
  {
    *(_QWORD *)&v119[0] = sub_1000D39F0();
    *((_QWORD *)&v119[0] + 1) = &protocol witness table for REMSmartList;
    v29 = v28;
  }
  else
  {
    v29 = 0;
    v118 = 0u;
    v119[0] = 0u;
  }
  v99 = v28 != 0;
  v117 = v28;
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(3);
  v100 = v29;
  v30 = v111;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(&v117, v16);
  v31 = v112;
  v107 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v107(v16, v112);
  sub_1000073A0((uint64_t)&v117, &qword_100649C80);
  v101 = a2;
  v32 = (void *)*a2;
  v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
  v33(v16, v30, v31);
  v34 = v105;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v102 + 104))(v105, enum case for REMRemindersListDataView.FetchSubtasks.count(_:), v103);
  v35 = type metadata accessor for TTRShowFlaggedDataModelSource(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v36 = (_BYTE *)TTRShowFlaggedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:fetchSubtasks:)(v32, 0, v16, 1, v34);
  v33(v16, v30, v31);
  v37 = v113;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)(1, v99, v16);
  v38 = (void *)v120[0];
  v39 = v106;
  sub_10002B1E8((uint64_t)v37, (uint64_t)v106, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v40 = type metadata accessor for TTRShowFlaggedViewModelSource(0);
  v41 = (_QWORD *)swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v42 = v100;
  swift_retain(v36);
  v43 = v38;
  v44 = sub_1001DD2B4(v28, (uint64_t)v36, v43, (uint64_t)v39, v41);
  v105 = v42;

  v106 = v36;
  swift_release(v36);

  sub_10002B1E8((uint64_t)v101, (uint64_t)v23, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v120, (uint64_t)&v117);
  swift_retain(v44);
  sub_100042A94((uint64_t)v23, (uint64_t)&v117, v44, (uint64_t)&off_100609110, (uint64_t)v114);
  v45 = v104;
  sub_100042C0C((uint64_t)v104);
  v46 = type metadata accessor for TTRIRemindersCommonPresenter(0);
  v47 = *(unsigned int *)(v46 + 48);
  v48 = *(unsigned __int16 *)(v46 + 52);
  v103 = v46;
  v49 = swift_allocObject(v46, v47, v48);
  v50 = v110;
  swift_unknownObjectRetain(v110);
  v51 = (_QWORD *)sub_1002A70CC((uint64_t)v45, v50, v49);
  v52 = v51[18];
  ObjectType = swift_getObjectType(v51[17], v53);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 104))(ObjectType, v52);
  if (v55)
  {
    v57 = v55;
    v58 = v56;
    v59 = swift_getObjectType(v55, v56);
    LOBYTE(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_unknownObjectRelease(v57);
    LOBYTE(v55) = v58 & 1;
  }
  v60 = sub_100172EB4(v55, (uint64_t)v51);
  v104 = v61;
  v63 = v62;
  v65 = v64;
  v102 = swift_getObjectType(v62, v61);
  v51[3] = *(_QWORD *)(v65 + 8);
  v110 = v63;
  swift_unknownObjectWeakAssign(v51 + 2, v63);
  v66 = v51[18];
  v68 = swift_getObjectType(v51[17], v67);
  v69 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 104);
  swift_retain(v51);
  v70 = v60;
  v71 = v69(v68, v66);
  v73 = v71;
  if (v71)
  {
    v74 = v72;
    v75 = swift_getObjectType(v71, v72);
    LOBYTE(v74) = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 16))(v75, v74);
    swift_unknownObjectRelease(v73);
    v73 = v74 & 1;
  }
  v76 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v77 = v70;
  v78 = (void *)sub_1002A8974(v51, v70, v104, v73, 0, 1, 0, v76);
  swift_release(v51);

  v79 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v65 + 32);
  v80 = v78;
  v104 = v80;
  v79(v78, &off_1005FCD60, v102, v65);
  v81 = v120[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v120[0] + direct field offset for TTRRemindersListInteractor.delegate, &v116, 1, 0);
  *(_QWORD *)(v81 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v81, v51);
  v82 = v120[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v120[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v115, 1, 0);
  *(_QWORD *)(v82 + 8) = &protocol witness table for TTRShowFlaggedDataModelSource;
  v83 = v106;
  swift_unknownObjectWeakAssign(v82, v106);
  swift_unknownObjectWeakAssign(v120[3] + 16, v80);
  v84 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v83 + 392);
  v85 = swift_retain(v44);
  v84(v85, &off_1005F9230);
  swift_retain(v44);
  v86 = swift_retain(v51);
  sub_10048D4EC(v86, (uint64_t)&off_1005F30C0);
  swift_release(v44);
  swift_release(v51);
  v87 = v114;
  v88 = *(_QWORD *)&v114[*(int *)(v108 + 28)];
  *(_QWORD *)(v88 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v88 + 16, v51);
  sub_100028CFC((uint64_t)&v121, (uint64_t)&v117);
  *(_OWORD *)((char *)v119 + 8) = v122;
  *(_OWORD *)((char *)&v119[1] + 8) = v123;
  v89 = v122 + 32;
  *(_QWORD *)(v122 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v89, v51);
  sub_100027F10(&v117);
  sub_100028CFC((uint64_t)&v124, (uint64_t)&v117);
  v90 = v125;
  v91 = v126;
  *((_QWORD *)&v119[0] + 1) = v125;
  *(_QWORD *)&v119[1] = v126;
  v93 = swift_getObjectType(v125, v92);
  v94 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128))(v91 + 48);
  swift_retain(v51);
  v95 = swift_unknownObjectRetain(v90);
  v94(v51, &off_1005F2FF0, v93, v91, v95);
  swift_unknownObjectRelease(v90);
  sub_100027F10(&v117);
  v96 = v109;
  v109[3] = v103;
  v96[4] = &off_1005F6418;
  *v96 = v51;

  swift_release(v83);
  swift_release(v44);

  swift_unknownObjectRelease(v110);
  sub_10001F544((uint64_t)v87, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_10001F544((uint64_t)v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v107(v111, v112);
  sub_100043844((uint64_t)v120);
  return v104;
}

id TTRIShowFlaggedAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowFlaggedAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowFlaggedAssembly()
{
  return objc_opt_self(_TtC9Reminders23TTRIShowFlaggedAssembly);
}

id TTRIShowFlaggedAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowFlaggedAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001DD2B4(void *a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a4;
  v43 = *a5;
  v44 = type metadata accessor for REMAnalyticsEvent(0);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList;
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList) = 0;
  v19 = (char *)a5 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount;
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  *(_QWORD *)((char *)a5
            + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  v20 = *(void **)((char *)a5 + v18);
  *(_QWORD *)((char *)a5 + v18) = a1;
  v21 = a1;

  sub_10002B1E8(a4, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain(a2);
  v22 = sub_1002A8704(a2, (uint64_t)a3, (uint64_t)v17, (uint64_t)a5);
  swift_retain(v22);
  sub_100251528((uint64_t)v14);
  v23 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 0, 1, v23);
  sub_10046ADD4((uint64_t)v14);
  v24 = sub_1000073A0((uint64_t)v14, &qword_100649CA0);
  v25 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v24);
  type metadata accessor for REMAnalyticsManager(0);
  v26 = v25;
  v27 = static REMAnalyticsManager.shared.getter();
  v28 = sub_10002A750(&qword_100645348);
  v29 = &v11[*(int *)(v28 + 48)];
  v30 = &v11[*(int *)(v28 + 80)];
  v31 = enum case for REMRemindersOpenUserOperation.SmartListType.flagged(_:);
  v32 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v11, v31, v32);
  v33 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v34 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v11, v33, v34);
  *(_QWORD *)v29 = TTRUserDefaults.activitySessionId.getter(v35);
  *((_QWORD *)v29 + 1) = v36;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v30 = _typeName(_:qualified:)(v43, 0);
  *((_QWORD *)v30 + 1) = v37;
  v38 = v42;
  v39 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v11, enum case for REMAnalyticsEvent.openListUserOperation(_:), v44);
  REMAnalyticsManager.post(event:)(v11);

  swift_release(v27);
  swift_release(v22);
  sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  return v22;
}

uint64_t AnyListEntityID.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int EnumCaseMultiPayload;
  Swift::UInt v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SmartListType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001DD7E4(v2, (uint64_t)v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
      v16 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
      v16 = 2;
    }
    Hasher._combine(_:)(v16);
    v19 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    Hasher._combine(_:)(0);
    v17 = sub_1000175C8(&qword_10064BB98, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListType, (uint64_t)&protocol conformance descriptor for SmartListType);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t type metadata accessor for AnyListEntityID(uint64_t a1)
{
  uint64_t result;

  result = qword_10064BC38;
  if (!qword_10064BC38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnyListEntityID);
  return result;
}

uint64_t sub_1001DD7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnyListEntityID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Int AnyListEntityID.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  AnyListEntityID.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001DD86C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  AnyListEntityID.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t AnyListEntityID.entityIdentifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  __chkstk_darwin(v2);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v7 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SmartListType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v1;
  sub_1001DD7E4(v1, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload(v19, v17))
  {
    sub_1001DEF54((uint64_t)v19);
    v20 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:), v32);
    v22 = v33;
    v21 = v34;
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v6, enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:), v34);
    sub_1001DDB50((uint64_t)v9, (uint64_t)v6, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
    v24 = v36;
    REMNavigationSpecifier.url.getter(v23);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    v26 = URL.absoluteString.getter(v25);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v38);
  }
  else
  {
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    v26 = SmartListType.id.getter(v27);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v26;
}

uint64_t sub_1001DDB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  char *v19;
  void *v20;
  Class isa;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v43 = a1;
  v44 = a2;
  v46 = a3;
  v47 = type metadata accessor for REMNavigationSpecifier(0);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SmartListType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001DD7E4(v4, (uint64_t)v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if (!EnumCaseMultiPayload)
  {
    v22 = v43;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    if (v23 == enum case for SmartListType.today(_:))
    {
      v24 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
      v25 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v46, v22, v24);
      v26 = (unsigned int *)&enum case for REMNavigationSpecifier.today(_:);
    }
    else if (v23 == enum case for SmartListType.scheduled(_:))
    {
      v32 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
      v25 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v46, v22, v32);
      v26 = (unsigned int *)&enum case for REMNavigationSpecifier.scheduled(_:);
    }
    else if (v23 == enum case for SmartListType.all(_:))
    {
      v33 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
      v25 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v46, v22, v33);
      v26 = (unsigned int *)&enum case for REMNavigationSpecifier.allReminders(_:);
    }
    else if (v23 == enum case for SmartListType.flagged(_:))
    {
      v34 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
      v25 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v46, v22, v34);
      v26 = (unsigned int *)&enum case for REMNavigationSpecifier.flagged(_:);
    }
    else
    {
      if (v23 != enum case for SmartListType.assigned(_:))
      {
        v37 = v46;
        v36 = v47;
        v38 = v45;
        if (v23 == enum case for SmartListType.completed(_:))
        {
          v39 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v22, v39);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v37, enum case for REMNavigationSpecifier.completed(_:), v36);
        }
        else
        {
          v40 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
          v41 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v37, v40, v41);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v37, enum case for REMNavigationSpecifier.root(_:), v36);
          return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        }
      }
      v35 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
      v25 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v46, v22, v35);
      v26 = (unsigned int *)&enum case for REMNavigationSpecifier.assigned(_:);
    }
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v45 + 104))(v25, *v26, v47);
  }
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v17, v7);
    v19 = (char *)v6 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v20 = (void *)objc_opt_self(REMList);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v17, v7);
    v19 = (char *)v6 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v20 = (void *)objc_opt_self(REMSmartList);
  }
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v20, "objectIDWithUUID:", isa);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v6 = v27;
  v28 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v19, v44, v28);
  v29 = v45;
  v30 = v47;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v45 + 104))(v6, enum case for REMNavigationSpecifier.list(_:), v47);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v29 + 32))(v46, v6, v30);
}

uint64_t static AnyListEntityID.entityIdentifier(for:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  Swift::String v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id *v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v45;
  id v46;
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  id *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  unsigned int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id *v70;
  unsigned int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  id *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v88 = a3;
  v5 = type metadata accessor for UUID(0);
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  __chkstk_darwin(v5);
  v80 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_1006655A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for REMNavigationSpecifier(0);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v83 = (id *)((char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v84 = (char *)&v80 - v12;
  v13 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v86 = (char *)&v80 - v20;
  v94 = a1;
  v95 = a2;
  v92 = a1;
  v93 = a2;
  v90 = 0xD000000000000013;
  v91 = 0x800000010056B300;
  v21 = sub_1001DEF90();
  v22 = sub_1001DEFD4();
  v23 = swift_bridgeObjectRetain(a2);
  if ((BidirectionalCollection<>.starts<A>(with:)(&v90, &type metadata for String, &type metadata for String, v21, v22, v23) & 1) == 0)
  {
    v31 = v89;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease(a2);
  v94 = 0xD000000000000016;
  v95 = 0x800000010056B320;
  v92 = a1;
  v93 = a2;
  v90 = 46;
  v91 = 0xE100000000000000;
  v24 = sub_10001D7FC();
  v25 = StringProtocol.components<A>(separatedBy:)(&v90, &type metadata for String, &type metadata for String, v24, v24);
  v26 = v25;
  v27 = *(_QWORD *)(v25 + 16);
  if (!v27)
  {
    swift_bridgeObjectRelease(v25);
    v29 = 0;
    v30 = (void *)0xE000000000000000;
    goto LABEL_8;
  }
  v28 = v25 + 16 * v27;
  v29 = *(_QWORD *)(v28 + 16);
  v30 = *(void **)(v28 + 24);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v26);
  if (v29 != 7105633)
  {
LABEL_8:
    v31 = v89;
    goto LABEL_9;
  }
  v31 = v89;
  if (v30 == (void *)0xE300000000000000)
  {
    v29 = 0x6E696D65726C6C61;
    v32 = 0xE300000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v32);
    v30 = (void *)0xEC00000073726564;
    goto LABEL_12;
  }
LABEL_9:
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, 7105633, 0xE300000000000000, 0) & 1) != 0)
  {
    v29 = 0x6E696D65726C6C61;
    v32 = (unint64_t)v30;
    goto LABEL_11;
  }
LABEL_12:
  v33._countAndFlagsBits = v29;
  v33._object = v30;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v30);
  a1 = v94;
  a2 = v95;
LABEL_13:
  URL.init(string:)(a1, a2);
  v34 = swift_bridgeObjectRelease(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48))(v15, 1, v31, v34) == 1)
  {
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EE0);
    goto LABEL_20;
  }
  v35 = v86;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v86, v15, v31);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v35, v31);
  REMNavigationSpecifier.init(_:)(v18);
  v36 = v85;
  v37 = v87;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v9, 1, v87) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    sub_1000073A0((uint64_t)v9, &qword_1006655A0);
    goto LABEL_20;
  }
  v38 = v84;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v84, v9, v37);
  v39 = v83;
  (*(void (**)(id *, char *, uint64_t))(v36 + 16))(v83, v38, v37);
  v40 = (*(uint64_t (**)(id *, uint64_t))(v36 + 88))(v39, v37);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    (*(void (**)(id *, uint64_t))(v36 + 96))(v39, v37);

    v41 = (char *)v39 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v42 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
LABEL_19:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
    goto LABEL_20;
  }
  v45 = v40;
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v36 + 96))(v39, v37);
    v46 = *v39;
    v47 = (char *)v39 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v48 = v36;
    v49 = objc_msgSend(v46, "uuid");
    v50 = v80;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v51 = v88;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v88, v50, v82);
    v52 = type metadata accessor for AnyListEntityID(0);
    v53 = v51;
    v54 = v52;
    v55 = 1;
LABEL_26:
    swift_storeEnumTagMultiPayload(v53, v54, v55);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
    v60 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v47, v60);
  }
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v36 + 96))(v39, v37);
    v56 = *v39;
    v47 = (char *)v39 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v57 = v36;
    v58 = objc_msgSend(v56, "uuid");
    v59 = v80;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v51 = v88;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v88, v59, v82);
    v52 = type metadata accessor for AnyListEntityID(0);
    v53 = v51;
    v54 = v52;
    v55 = 2;
    goto LABEL_26;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
    goto LABEL_28;
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    (*(void (**)(id *, uint64_t))(v36 + 96))(v39, v37);

    v41 = (char *)v39 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v42 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:)
    || v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    (*(void (**)(id *, uint64_t))(v36 + 96))(v39, v37);

    v41 = (char *)v39 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v42 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
LABEL_28:
    v61 = *(void (**)(char *, uint64_t))(v36 + 8);
    v61(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v62 = v39;
    v63 = v37;
LABEL_29:
    v61((char *)v62, v63);
    goto LABEL_20;
  }
  if (v40 == enum case for REMNavigationSpecifier.today(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v36 + 8);
    v64(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v65 = (unsigned int *)&enum case for SmartListType.today(_:);
LABEL_44:
    v66 = *v65;
    v67 = type metadata accessor for SmartListType(0);
    v68 = v88;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v88, v66, v67);
    v69 = type metadata accessor for AnyListEntityID(0);
    swift_storeEnumTagMultiPayload(v68, v69, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
    v70 = v39;
    return ((uint64_t (*)(id *, uint64_t))v64)(v70, v37);
  }
  if (v40 == enum case for REMNavigationSpecifier.scheduled(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v36 + 8);
    v64(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v65 = (unsigned int *)&enum case for SmartListType.scheduled(_:);
    goto LABEL_44;
  }
  if (v40 == enum case for REMNavigationSpecifier.allReminders(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v36 + 8);
    v64(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v65 = (unsigned int *)&enum case for SmartListType.all(_:);
    goto LABEL_44;
  }
  if (v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v36 + 8);
    v64(v38, v37);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v31);
    v65 = (unsigned int *)&enum case for SmartListType.flagged(_:);
    goto LABEL_44;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
    goto LABEL_55;
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v85 + 8);
    v37 = v87;
    v64(v84, v87);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v86, v89);
    v71 = (unsigned int *)&enum case for SmartListType.assigned(_:);
LABEL_49:
    v72 = *v71;
    v73 = type metadata accessor for SmartListType(0);
    v74 = v88;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v88, v72, v73);
    v75 = type metadata accessor for AnyListEntityID(0);
    swift_storeEnumTagMultiPayload(v74, v75, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
    v70 = v83;
    return ((uint64_t (*)(id *, uint64_t))v64)(v70, v37);
  }
  if (v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:)
    || v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    goto LABEL_55;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
    v64 = *(void (**)(char *, uint64_t))(v85 + 8);
    v37 = v87;
    v64(v84, v87);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v86, v89);
    v71 = (unsigned int *)&enum case for SmartListType.completed(_:);
    goto LABEL_49;
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
LABEL_55:
    v61 = *(void (**)(char *, uint64_t))(v85 + 8);
    v76 = v87;
    v61(v84, v87);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v86, v89);
    v62 = v83;
    v63 = v76;
    goto LABEL_29;
  }
  v77 = enum case for REMNavigationSpecifier.newReminder(_:);
  v78 = *(void (**)(char *, uint64_t))(v85 + 8);
  v78(v84, v87);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v86, v89);
  if (v45 != v77)
  {
    v79 = type metadata accessor for AnyListEntityID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v88, 1, 1, v79);
    return ((uint64_t (*)(id *, uint64_t))v78)(v83, v87);
  }
LABEL_20:
  v43 = type metadata accessor for AnyListEntityID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v88, 1, 1, v43);
}

uint64_t _s9Reminders15AnyListEntityIDO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a2;
  v3 = type metadata accessor for UUID(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin(v3);
  v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v47 = (char *)&v46 - v6;
  v7 = type metadata accessor for SmartListType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - v18;
  v20 = sub_10002A750(&qword_10064BC70);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_1001DD7E4(a1, (uint64_t)v22);
  sub_1001DD7E4(v51, v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v11);
  if (!EnumCaseMultiPayload)
  {
    sub_1001DD7E4((uint64_t)v22, (uint64_t)v19);
    if (!swift_getEnumCaseMultiPayload(v24, v11))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v24, v7);
      v39 = sub_1000175C8(&qword_10064BC78, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListType, (uint64_t)&protocol conformance descriptor for SmartListType);
      dispatch thunk of RawRepresentable.rawValue.getter(&v54, v7, v39);
      dispatch thunk of RawRepresentable.rawValue.getter(&v52, v7, v39);
      v40 = v55;
      v41 = v53;
      if (v54 == v52 && v55 == v53)
      {
        swift_bridgeObjectRelease_n(v55, 2);
        v42 = *(void (**)(char *, uint64_t))(v8 + 8);
        v42(v10, v7);
        v42(v19, v7);
      }
      else
      {
        v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v52, v53, 0);
        swift_bridgeObjectRelease(v40);
        v44 = swift_bridgeObjectRelease(v41);
        v45 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
        v45(v10, v7, v44);
        ((void (*)(char *, uint64_t))v45)(v19, v7);
        if ((v43 & 1) == 0)
        {
          sub_1001DEF54((uint64_t)v22);
          goto LABEL_14;
        }
      }
      sub_1001DEF54((uint64_t)v22);
      v29 = 1;
      return v29 & 1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v7);
LABEL_13:
    sub_1000073A0((uint64_t)v22, &qword_10064BC70);
LABEL_14:
    v29 = 0;
    return v29 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1001DD7E4((uint64_t)v22, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload(v24, v11) == 2)
    {
      v34 = v48;
      v33 = v49;
      v35 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v48, v24, v50);
      v29 = static UUID.== infix(_:_:)(v13, v34);
      v30 = *(void (**)(char *, uint64_t))(v33 + 8);
      v30(v34, v35);
      v31 = v13;
      v32 = v35;
      goto LABEL_9;
    }
    v36 = *(void (**)(char *, uint64_t))(v49 + 8);
    v37 = v13;
    goto LABEL_12;
  }
  sub_1001DD7E4((uint64_t)v22, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v24, v11) != 1)
  {
    v36 = *(void (**)(char *, uint64_t))(v49 + 8);
    v37 = v16;
LABEL_12:
    v36(v37, v50);
    goto LABEL_13;
  }
  v26 = v49;
  v27 = v50;
  v28 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v47, v24, v50);
  v29 = static UUID.== infix(_:_:)(v16, v28);
  v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30(v28, v27);
  v31 = v16;
  v32 = v27;
LABEL_9:
  v30(v31, v32);
  sub_1001DEF54((uint64_t)v22);
  return v29 & 1;
}

uint64_t sub_1001DEF54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnyListEntityID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001DEF90()
{
  unint64_t result;

  result = qword_10064BBA0;
  if (!qword_10064BBA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10064BBA0);
  }
  return result;
}

unint64_t sub_1001DEFD4()
{
  unint64_t result;

  result = qword_10064BBA8;
  if (!qword_10064BBA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10064BBA8);
  }
  return result;
}

uint64_t sub_1001DF018()
{
  return sub_1000175C8(&qword_10064BBC0, type metadata accessor for AnyListEntityID, (uint64_t)&protocol conformance descriptor for AnyListEntityID);
}

uint64_t *initializeBufferWithCopyOfBuffer for AnyListEntityID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for SmartListType(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AnyListEntityID(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    v4 = type metadata accessor for UUID(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for SmartListType(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for AnyListEntityID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    v8 = type metadata accessor for UUID(0);
  else
    v8 = type metadata accessor for SmartListType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t assignWithCopy for AnyListEntityID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1001DEF54(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
      v8 = type metadata accessor for UUID(0);
    else
      v8 = type metadata accessor for SmartListType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t initializeWithTake for AnyListEntityID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    v8 = type metadata accessor for UUID(0);
  else
    v8 = type metadata accessor for SmartListType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t assignWithTake for AnyListEntityID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1001DEF54(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
      v8 = type metadata accessor for UUID(0);
    else
      v8 = type metadata accessor for SmartListType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1001DF400(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = type metadata accessor for SmartListType(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, &v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001DF480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064BC80);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064BC80);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1001DF54C()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 1.0, 8.0);
  objc_msgSend(v1, "setTableHeaderView:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView] = v1;
  v4 = v1;

  objc_msgSend(v0, "setView:", v4);
}

void sub_1001DF650(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  id v5;
  char **v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSString v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  NSString v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  Class isa;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  char *v55;
  void *v56;
  void *v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  id v63;
  id v64;
  _QWORD v65[3];
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  char v70;
  _QWORD v72[3];
  uint64_t v73;
  void *v74;
  char v75[64];
  objc_super v76;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v76.receiver = v3;
  v76.super_class = ObjectType;
  objc_msgSendSuper2(&v76, "viewDidLoad");
  v5 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v3, "didTapCancel:");
  v6 = &selRef_contact;
  v7 = objc_msgSend(v3, "navigationItem");
  objc_msgSend(v7, "setLeftBarButtonItem:", v5);

  static TTRLocalizableStrings.Common.continueButton.getter();
  v9 = v8;
  v73 = (uint64_t)ObjectType;
  v72[0] = v3;
  v10 = v3;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  if (ObjectType)
  {
    v12 = sub_10001413C(v72, v73);
    v13 = *((_QWORD *)ObjectType - 1);
    v14 = __chkstk_darwin(v12);
    v16 = (char *)&v72[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v13 + 16))(v16, v14);
    v17 = _bridgeAnythingToObjectiveC<A>(_:)(v16, ObjectType);
    v6 = &selRef_contact;
    (*(void (**)(char *, objc_class *))(v13 + 8))(v16, ObjectType);
    sub_100027F10(v72);
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v11, 2, v17, "didTapCommit:");

  swift_unknownObjectRelease(v17);
  v19 = objc_msgSend(v10, v6[54]);
  objc_msgSend(v19, "setRightBarButtonItem:", v18);

  v20 = objc_msgSend(v10, v6[54]);
  objc_msgSend(v20, "setLargeTitleDisplayMode:", 2);

  v21 = *(void **)&v10[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_cancelButton];
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_cancelButton] = v5;
  v22 = v5;

  v23 = *(void **)&v10[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_commitButton];
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_commitButton] = v18;
  v24 = v18;

  static TTRLocalizableStrings.Templates.showPreview.getter();
  v26 = v25;
  v73 = (uint64_t)ObjectType;
  v72[0] = v10;
  v27 = v10;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v29 = v73;
  if (v73)
  {
    v30 = sub_10001413C(v72, v73);
    v31 = *(_QWORD *)(v29 - 8);
    v32 = __chkstk_darwin(v30);
    v34 = (char *)&v72[-1] - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v31 + 16))(v34, v32);
    v35 = _bridgeAnythingToObjectiveC<A>(_:)(v34, v29);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v29);
    sub_100027F10(v72);
  }
  else
  {
    v35 = 0;
  }
  v36 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v28, 0, v35, "didTapShowPreview:");

  swift_unknownObjectRelease(v35);
  v37 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v38 = swift_allocObject(v37, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_10051FF90;
  v39 = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
  *(_QWORD *)(v38 + 32) = v39;
  *(_QWORD *)(v38 + 40) = v36;
  v72[0] = v38;
  specialized Array._endMutation()(v39);
  v40 = v72[0];
  sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  v41 = v36;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setToolbarItems:", isa, swift_bridgeObjectRelease(v40).n128_f64[0]);

  inited = swift_initStackObject(v37, v75);
  *(_OWORD *)(inited + 16) = xmmword_100520050;
  *(_QWORD *)(inited + 32) = sub_1001DFC58();
  *(_QWORD *)(inited + 40) = sub_1001DFD10();
  *(_QWORD *)(inited + 48) = sub_1001DFE14();
  v44 = sub_1001DFF18();
  *(_QWORD *)(inited + 56) = v44;
  v72[0] = inited;
  specialized Array._endMutation()(v44);
  v45 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView;
  v46 = *(void **)&v27[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView];
  if (!v46)
  {
    __break(1u);
    goto LABEL_15;
  }
  v47 = v72[0];
  v48 = v46;
  v49 = sub_1002DEA58(v47);
  swift_bridgeObjectRelease(v47);
  v73 = sub_100005ED8(0, (unint64_t *)&qword_100646410, UITableView_ptr);
  v74 = &protocol witness table for UITableView;
  v72[0] = v48;
  v50 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController(0));
  v51 = (char *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)(v72, v49, 6, 0);
  v52 = &v51[direct field offset for TTRITableDataController.customSectionSpacing];
  swift_beginAccess(&v51[direct field offset for TTRITableDataController.customSectionSpacing], v72, 1, 0);
  *(_QWORD *)v52 = 0x4030000000000000;
  v52[8] = 0;
  v53 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController;
  v54 = *(void **)&v27[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController];
  *(_QWORD *)&v27[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController] = v51;
  v55 = v51;

  v56 = *(void **)&v27[v45];
  if (!v56)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v56, "setDataSource:", v55);
  v57 = *(void **)&v27[v45];
  if (!v57)
  {
LABEL_16:
    __break(1u);
    return;
  }
  objc_msgSend(v57, "setDelegate:", v55);
  if (*(_QWORD *)&v27[v53])
  {
    __chkstk_darwin(*(unsigned __int8 *)(*(_QWORD *)&v27[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter]
                                       + 48));
    v65[2] = v27;
    v66 = v58;
    v67 = v59;
    v68 = v60;
    v69 = v61;
    v70 = v62;
    v64 = v63;
    TTRITableDataController.performBatchUpdates(by:updates:)(2, sub_1001E195C, v65);

  }
  else
  {

  }
}

uint64_t sub_1001DFC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[10];
  _OWORD v10[5];

  v1 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___imageSection;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___imageSection);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___imageSection);
  }
  else
  {
    v4 = v0;
    memset(v10, 0, 73);
    v5 = static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter();
    TTRITableSectionHeaderFooter.init(title:height:)(v9, v5);
    v6 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v6, 217, 7);
    v3 = TTRITableSection.init(header:footer:items:)(v10, v9, _swiftEmptyArrayStorage);
    v7 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_1001DFD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[10];
  _OWORD v10[5];

  v1 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeSection;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeSection))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeSection);
  }
  else
  {
    v3 = v0;
    memset(v10, 0, 73);
    v4 = static TTRLocalizableStrings.Templates.dateAndTimeLinkOptionDescription.getter();
    TTRITableSectionHeaderFooter.init(title:height:)(v9, v4);
    v5 = sub_10002A750(&qword_10064AAE0);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100520250;
    *(_QWORD *)(v6 + 32) = sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.dateAndTimeLinkOption.getter, (uint64_t)sub_1001E1994);
    *(_QWORD *)(v6 + 40) = &protocol witness table for TTRITableCell<A>;
    v7 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v7, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v10, v9, v6);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001DFE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[10];
  _OWORD v10[5];

  v1 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsSection;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsSection))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsSection);
  }
  else
  {
    v3 = v0;
    memset(v10, 0, 73);
    v4 = static TTRLocalizableStrings.Templates.tagsLinkOptionDescription.getter();
    TTRITableSectionHeaderFooter.init(title:height:)(v9, v4);
    v5 = sub_10002A750(&qword_10064AAE0);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100520250;
    *(_QWORD *)(v6 + 32) = sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.tagsLinkOption.getter, (uint64_t)sub_1001E198C);
    *(_QWORD *)(v6 + 40) = &protocol witness table for TTRITableCell<A>;
    v7 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v7, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v10, v9, v6);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001DFF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[10];
  _OWORD v10[5];

  v1 = OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsSection;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsSection))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsSection);
  }
  else
  {
    v3 = v0;
    memset(v10, 0, 73);
    v4 = static TTRLocalizableStrings.Templates.locationsLinkOptionDescription.getter();
    TTRITableSectionHeaderFooter.init(title:height:)(v9, v4);
    v5 = sub_10002A750(&qword_10064AAE0);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100520250;
    *(_QWORD *)(v6 + 32) = sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.locationsLinkOption.getter, (uint64_t)sub_1001E1984);
    *(_QWORD *)(v6 + 40) = &protocol witness table for TTRITableCell<A>;
    v7 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v7, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v10, v9, v6);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1001E0050(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  _QWORD v15[5];
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v16.receiver = v2;
  v16.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v16, "viewWillAppear:", a1 & 1);
  v6 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v5);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setToolbarHidden:animated:", 0, a1 & 1);

  }
  v8 = *(void **)&v2[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView];
  if (v8)
  {
    v15[3] = sub_100005ED8(0, (unint64_t *)&qword_100646410, UITableView_ptr);
    v15[4] = &protocol witness table for UITableView;
    v15[0] = v8;
    v9 = v8;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)(v15, a1 & 1);
    sub_100027F10(v15);
    TTRKeyboardAvoidance<>.startAvoidingKeyboard()(ObjectType, &off_1005F6488);
    v10 = *(unsigned __int8 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter]
                             + 48);
    v11 = objc_msgSend(v2, "navigationItem");
    TTRTemplateSharingViewModel.Purpose.viewTitle.getter(v10);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "setTitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001E0300(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "viewWillLayoutSubviews");
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_needsTableCellResize) == 1)
  {
    *((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_needsTableCellResize) = 0;
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1005F6560, 24, 7);
    *(_QWORD *)(v4 + 16) = v2;
    v5 = swift_allocObject(&unk_1005F6588, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1001E1ACC;
    *(_QWORD *)(v5 + 24) = v4;
    v9[4] = sub_10001B278;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10001B258;
    v9[3] = &unk_1005F65A0;
    v6 = _Block_copy(v9);
    v7 = v2;
    swift_retain();
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release().n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 146, 168, 40, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_1001E049C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  char *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  uint64_t inited;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  Swift::Int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  BOOL v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t);
  __int128 v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123[24];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _BYTE v127[25];
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133[24];
  char v134[40];

  v114 = type metadata accessor for UIListContentConfiguration(0);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v113 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v111 = (char *)&v108 - v8;
  sub_1001DFD10();
  v9 = (*(_QWORD *)TTRTemplateSharingTemplateContentAttributes.dateAndTime.unsafeMutableAddressor() & ~a3) != 0;
  TTRITableSection.isHidden.setter(v9);
  swift_release();
  v10 = sub_1001DFD10();
  swift_beginAccess(v10 + 200, v134, 0, 0);
  v11 = *(_BYTE *)(v10 + 200);
  swift_release();
  if ((v11 & 1) == 0)
  {
    v12 = *(id *)(sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.dateAndTimeLinkOption.getter, (uint64_t)sub_1001E1994)+ 32);
    swift_release();
    v13 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x78);
    swift_beginAccess(v13, v133, 0, 0);
    v14 = *(void **)v13;
    v15 = (void *)*((_QWORD *)v13 + 1);
    v17 = *((_QWORD *)v13 + 4);
    v16 = *((_QWORD *)v13 + 5);
    v18 = *((_QWORD *)v13 + 8);
    v19 = v13[73];
    v20 = v13[74];
    v21 = v13[75];
    v22 = v13[76];
    v23 = v13[77];
    v24 = *((_OWORD *)v13 + 1);
    v110 = *((_OWORD *)v13 + 3);
    *(_QWORD *)&v124 = v14;
    *((_QWORD *)&v124 + 1) = v15;
    v125 = v24;
    *(_QWORD *)&v126 = v17;
    *((_QWORD *)&v126 + 1) = v16;
    *(_OWORD *)v127 = v110;
    *(_QWORD *)&v127[16] = v18;
    v127[24] = BYTE1(a4) & 1;
    v128 = v19;
    v129 = v20;
    v130 = v21;
    v131 = v22;
    v132 = v23;
    sub_1000DDA1C(v14, v15, (void *)v24);
    v25 = v110;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v25);
    TTRITableCellContent.state.setter(&v124);

  }
  sub_1001DFE14();
  v26 = (*(_QWORD *)TTRTemplateSharingTemplateContentAttributes.tags.unsafeMutableAddressor() & ~a3) != 0;
  TTRITableSection.isHidden.setter(v26);
  swift_release();
  v27 = sub_1001DFE14();
  swift_beginAccess(v27 + 200, v123, 0, 0);
  v28 = *(_BYTE *)(v27 + 200);
  swift_release();
  if ((v28 & 1) == 0)
  {
    v29 = *(id *)(sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.tagsLinkOption.getter, (uint64_t)sub_1001E198C)+ 32);
    swift_release();
    v30 = (char *)v29 + *(_QWORD *)((swift_isaMask & *v29) + 0x78);
    swift_beginAccess(v30, &v122, 0, 0);
    v31 = *(void **)v30;
    v32 = (void *)*((_QWORD *)v30 + 1);
    v34 = *((_QWORD *)v30 + 4);
    v33 = *((_QWORD *)v30 + 5);
    v35 = *((_QWORD *)v30 + 8);
    v36 = v30[73];
    v37 = v30[74];
    v38 = v30[75];
    v39 = v30[76];
    v40 = v30[77];
    v41 = *((_OWORD *)v30 + 1);
    v110 = *((_OWORD *)v30 + 3);
    *(_QWORD *)&v124 = v31;
    *((_QWORD *)&v124 + 1) = v32;
    v125 = v41;
    *(_QWORD *)&v126 = v34;
    *((_QWORD *)&v126 + 1) = v33;
    *(_OWORD *)v127 = v110;
    *(_QWORD *)&v127[16] = v35;
    v127[24] = a4 & 1;
    v128 = v36;
    v129 = v37;
    v130 = v38;
    v131 = v39;
    v132 = v40;
    sub_1000DDA1C(v31, v32, (void *)v41);
    v42 = v110;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v42);
    TTRITableCellContent.state.setter(&v124);

  }
  sub_1001DFF18();
  v43 = (*(_QWORD *)TTRTemplateSharingTemplateContentAttributes.locations.unsafeMutableAddressor() & ~a3) != 0;
  TTRITableSection.isHidden.setter(v43);
  swift_release();
  v44 = sub_1001DFF18();
  swift_beginAccess(v44 + 200, &v121, 0, 0);
  v45 = *(_BYTE *)(v44 + 200);
  swift_release();
  if ((v45 & 1) == 0)
  {
    v46 = *(id *)(sub_1001E0D58(&OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsCell, (uint64_t (*)(void))&static TTRLocalizableStrings.Templates.locationsLinkOption.getter, (uint64_t)sub_1001E1984)+ 32);
    swift_release();
    v47 = (char *)v46 + *(_QWORD *)((swift_isaMask & *v46) + 0x78);
    swift_beginAccess(v47, &v120, 0, 0);
    v48 = *(void **)v47;
    v49 = (void *)*((_QWORD *)v47 + 1);
    v51 = *((_QWORD *)v47 + 4);
    v50 = *((_QWORD *)v47 + 5);
    v52 = *((_QWORD *)v47 + 8);
    v53 = v47[73];
    v54 = v47[74];
    v55 = v47[75];
    v56 = v47[76];
    v57 = v47[77];
    v58 = *((_OWORD *)v47 + 1);
    v110 = *((_OWORD *)v47 + 3);
    *(_QWORD *)&v124 = v48;
    *((_QWORD *)&v124 + 1) = v49;
    v125 = v58;
    *(_QWORD *)&v126 = v51;
    *((_QWORD *)&v126 + 1) = v50;
    *(_OWORD *)v127 = v110;
    *(_QWORD *)&v127[16] = v52;
    v127[24] = BYTE2(a4) & 1;
    v128 = v53;
    v129 = v54;
    v130 = v55;
    v131 = v56;
    v132 = v57;
    sub_1000DDA1C(v48, v49, (void *)v58);
    v59 = v110;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v59);
    TTRITableCellContent.state.setter(&v124);

  }
  sub_1001DFC58();
  v60 = (*(_QWORD *)TTRTemplateSharingTemplateContentAttributes.images.unsafeMutableAddressor() & ~a3) != 0;
  TTRITableSection.isHidden.setter(v60);
  swift_release();
  v61 = sub_10002A750((uint64_t *)&unk_1006415A0);
  inited = swift_initStackObject(v61, &v119);
  *(_OWORD *)(inited + 16) = xmmword_100521130;
  v63 = sub_1001DFD10();
  *(_QWORD *)(inited + 32) = v63;
  v64 = sub_1001DFE14();
  *(_QWORD *)(inited + 40) = v64;
  v65 = sub_1001DFF18();
  *(_QWORD *)(inited + 48) = v65;
  *(_QWORD *)&v124 = _swiftEmptyArrayStorage;
  swift_beginAccess(v63 + 200, &v118, 0, 0);
  if ((*(_BYTE *)(v63 + 200) & 1) == 0)
  {
    v66 = swift_retain();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v66);
    v67 = *(_QWORD *)(v124 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v67);
    v68 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v63);
    specialized ContiguousArray._endMutation()(v68);
  }
  swift_beginAccess(v64 + 200, &v117, 0, 0);
  if ((*(_BYTE *)(v64 + 200) & 1) == 0)
  {
    v69 = swift_retain();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v70 = *(_QWORD *)(v124 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v70);
    v71 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v64);
    specialized ContiguousArray._endMutation()(v71);
  }
  swift_beginAccess(v65 + 200, &v116, 0, 0);
  if ((*(_BYTE *)(v65 + 200) & 1) == 0)
  {
    v72 = swift_retain();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v73 = *(_QWORD *)(v124 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v73);
    v74 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v65);
    specialized ContiguousArray._endMutation()(v74);
  }
  swift_release();
  v75 = v124;
  v76 = (uint64_t)v124 < 0 || (v124 & 0x4000000000000000) != 0;
  if (v76)
    goto LABEL_26;
  v77 = *(_QWORD *)(v124 + 16);
  swift_retain();
  if (!v77)
    goto LABEL_27;
LABEL_18:
  if ((v75 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v75 + 16))
    {
      v78 = *(_QWORD *)(v75 + 32);
      swift_retain();
      goto LABEL_21;
    }
    __break(1u);
LABEL_52:
    __break(1u);
    return;
  }
  while (1)
  {
    v78 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
LABEL_21:
    swift_release();
    swift_beginAccess(v78 + 32, &v115, 0, 0);
    sub_1001CC838(v78 + 32, (uint64_t)&v124);
    if (*((_QWORD *)&v125 + 1))
    {
      swift_release();
      sub_1000073A0((uint64_t)&v124, &qword_10064AB88);
      if ((v77 & 0x8000000000000000) == 0)
        goto LABEL_28;
    }
    else
    {
      v79 = sub_1000073A0((uint64_t)&v124, &qword_10064AB88);
      v80 = v113;
      v81 = static UIListContentConfiguration.extraProminentInsetGroupedHeader()(v79);
      v82 = v111;
      UIListContentConfiguration.usingRoundedSystemFont()(v81);
      LODWORD(v110) = v76;
      v83 = v112;
      v109 = *(uint64_t (**)(char *, uint64_t))(v112 + 8);
      v84 = v114;
      v85 = v109(v80, v114);
      v86 = static TTRLocalizableStrings.Templates.includeText.getter(v85);
      UIListContentConfiguration.text.setter(v86, v87);
      v88 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
      v76 = v110;
      v88(v80, v82, v84);
      TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)(&v124, v80, 0, 1);
      TTRITableSection.header.setter(&v124);
      v89 = swift_release();
      ((void (*)(char *, uint64_t, __n128))v109)(v82, v84, v89);
      if ((v77 & 0x8000000000000000) == 0)
        goto LABEL_28;
    }
    __break(1u);
LABEL_26:
    v90 = swift_retain();
    v77 = _CocoaArrayWrapper.endIndex.getter(v90);
    if (v77)
      goto LABEL_18;
LABEL_27:
    swift_release();
LABEL_28:
    v91 = v77 >= 1 ? 1 : v77;
    if (v76)
      break;
    v95 = *(_QWORD *)(v75 + 16);
    if (v95 >= (unint64_t)v91)
      goto LABEL_35;
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
  }
  swift_bridgeObjectRetain(v75);
  v93 = _CocoaArrayWrapper.endIndex.getter(v92);
  swift_release();
  if (v93 < v91)
    goto LABEL_48;
  swift_bridgeObjectRetain(v75);
  v95 = _CocoaArrayWrapper.endIndex.getter(v94);
  swift_release();
LABEL_35:
  if (v95 < v77)
    goto LABEL_49;
  if ((v75 & 0xC000000000000001) != 0 && (unint64_t)v77 >= 2)
  {
    type metadata accessor for TTRITableSection(0);
    v96 = v91;
    do
    {
      v97 = v96 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v96);
      v96 = v97;
    }
    while (v77 != v97);
  }
  if (v76)
  {
    swift_bridgeObjectRetain(v75);
    v98 = _CocoaArrayWrapper.subscript.getter(v91, v77, v75);
    v100 = v99;
    v91 = v101;
    v103 = v102;
    swift_release_n(v75, 2);
    v75 = v98;
    v104 = __OFSUB__(v103 >> 1, v91);
    v106 = (v103 >> 1) - v91;
    v105 = (v106 < 0) ^ v104 | (v106 == 0);
    if (!v106)
      goto LABEL_47;
  }
  else
  {
    v100 = v75 + 32;
    v106 = v77 - v91;
    v105 = v77 <= v91;
    if (v77 == v91)
      goto LABEL_47;
  }
  if (v105)
    goto LABEL_52;
  v107 = v100 + 8 * v91;
  do
  {
    v107 += 8;
    v126 = 0u;
    memset(v127, 0, sizeof(v127));
    v124 = 0u;
    v125 = 0u;
    swift_retain();
    TTRITableSection.header.setter(&v124);
    swift_release();
    --v106;
  }
  while (v106);
LABEL_47:
  swift_unknownObjectRelease(v75);
}

uint64_t sub_1001E0D58(uint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[24];
  _QWORD v21[10];

  v4 = *a1;
  v5 = *(_QWORD *)(v3 + *a1);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v8 = v3;
    v9 = a2();
    WORD2(v19) = 0;
    LODWORD(v19) = 0;
    TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)(v21, 1, 0, 0, v9, v10, 0, 0, 0, 0, v19);
    v11 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent(0));
    v12 = TTRIToggleCellContent.init(state:)(v21);
    v13 = swift_allocObject(&unk_1005F64E8, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v8);
    v14 = (uint64_t *)(v12 + direct field offset for TTRIToggleCellContent.stateChangeBlock);
    swift_beginAccess(v12 + direct field offset for TTRIToggleCellContent.stateChangeBlock, v20, 1, 0);
    v15 = *v14;
    v16 = v14[1];
    *v14 = a3;
    v14[1] = v13;
    sub_1000381B8(v15, v16);
    v17 = sub_10002A750((uint64_t *)&unk_10064BD30);
    swift_allocObject(v17, 73, 7);
    v6 = TTRITableCell.init(_:)(v12);
    *(_QWORD *)(v8 + v4) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1001E1284(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  _BYTE *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  int v12;
  Swift::String v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_BYTE **)(result + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter);
    swift_unknownObjectRetain(v6);

    v7 = *(unsigned __int8 *)(a1 + 72);
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v8 = type metadata accessor for Logger(0);
    sub_100012DC4(v8, (uint64_t)qword_100640738);
    v9 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Template Sharing set include date and time", 42, 2, v9);
    swift_bridgeObjectRelease(v9);
    v10 = v6[64];
    v11 = v6[66];
    v12 = v6[65];
    v6[48] = v6[48];
    v6[64] = v10;
    v6[65] = v7;
    v6[66] = v11;
    if (v7 != v12)
    {
      v13._object = (void *)0x8000000100560820;
      v13._countAndFlagsBits = 0xD000000000000011;
      TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v13);
    }
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001E13B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  _BYTE *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  int v12;
  Swift::String v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_BYTE **)(result + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter);
    swift_unknownObjectRetain(v6);

    v7 = *(unsigned __int8 *)(a1 + 72);
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v8 = type metadata accessor for Logger(0);
    sub_100012DC4(v8, (uint64_t)qword_100640738);
    v9 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Template Sharing set include tags", 33, 2, v9);
    swift_bridgeObjectRelease(v9);
    v10 = v6[65];
    v11 = v6[66];
    v12 = v6[64];
    v6[48] = v6[48];
    v6[64] = v7;
    v6[65] = v10;
    v6[66] = v11;
    if (v7 != v12)
    {
      v13._object = (void *)0x8000000100560820;
      v13._countAndFlagsBits = 0xD000000000000011;
      TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v13);
    }
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001E14E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  _BYTE *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  int v12;
  Swift::String v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_BYTE **)(result + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter);
    swift_unknownObjectRetain(v6);

    v7 = *(unsigned __int8 *)(a1 + 72);
    if (qword_10063D2E8 != -1)
      swift_once(&qword_10063D2E8, sub_10005AF30);
    v8 = type metadata accessor for Logger(0);
    sub_100012DC4(v8, (uint64_t)qword_100640738);
    v9 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Template Sharing set include locations", 38, 2, v9);
    swift_bridgeObjectRelease(v9);
    v10 = v6[64];
    v11 = v6[65];
    v12 = v6[66];
    v6[48] = v6[48];
    v6[64] = v10;
    v6[65] = v11;
    v6[66] = v7;
    if (v7 != v12)
    {
      v13._object = (void *)0x8000000100560820;
      v13._countAndFlagsBits = 0xD000000000000011;
      TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v13);
    }
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t type metadata accessor for TTRITemplateSharingConfigurationViewController()
{
  return objc_opt_self(_TtC9Reminders46TTRITemplateSharingConfigurationViewController);
}

void sub_1001E174C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  _QWORD v15[3];
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_presenter];
    if (*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController])
    {
      v3 = __chkstk_darwin(*(unsigned __int8 *)(v2 + 48));
      v15[2] = v0;
      v16 = v3;
      v17 = v4;
      v18 = v5;
      v19 = v6;
      v20 = v7;
      v9 = v8;
      TTRITableDataController.performBatchUpdates(by:updates:)(1, sub_1001E195C, v15);

    }
    v10 = *(unsigned __int8 *)(v2 + 48);
    v11 = objc_msgSend(v1, "navigationItem");
    TTRTemplateSharingViewModel.Purpose.viewTitle.getter(v10);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v11, "setTitle:", v14);

  }
}

id sub_1001E1878()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView);
  if (result)
    return result;
  __break(1u);
  return result;
}

uint64_t sub_1001E1960()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E1984(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E14E4(a1, v1);
}

uint64_t sub_1001E198C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E13B4(a1, v1);
}

uint64_t sub_1001E1994(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E1284(a1, v1);
}

uint64_t sub_1001E19A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10064086C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10005B65C(a1, v4, v5, v6);
}

uint64_t sub_1001E1A10()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001E1A3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10064091C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10005B0F4(a1, v4, v5, v6);
}

uint64_t sub_1001E1AA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001E1ACC()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView);
  if (result)
    return objc_msgSend(result, "performBatchUpdates:completion:", 0, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E1AF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001E1B08()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v0 + 41))
    v1 = 256;
  else
    v1 = 0;
  v2 = v1 | *(unsigned __int8 *)(v0 + 40);
  if (*(_BYTE *)(v0 + 42))
    v3 = 0x10000;
  else
    v3 = 0;
  sub_1001E049C(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), v2 | v3);
}

void sub_1001E1B44()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_commitButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_tableDataController] = 0;
  v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController_needsTableCellResize] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___dateAndTimeSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___tagsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___locationsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders46TTRITemplateSharingConfigurationViewController____lazy_storage___imageSection] = 0;

  if (qword_10063D498 != -1)
    swift_once(&qword_10063D498, sub_1001DF480);
  v5 = sub_100012DC4(v1, (uint64_t)qword_10064BC80);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"init(coder:) has not been implemented", 37, 2uLL, v6, v7);
  __break(1u);
}

uint64_t sub_1001E1CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064BD50);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064BD50);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1001E1D90(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  objc_super v11;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (qword_10063D4A0 != -1)
    swift_once(&qword_10063D4A0, sub_1001E1CA8);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100012DC4(v5, (uint64_t)qword_10064BD50);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIWelcomeNavigationViewController dealloc", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v11.receiver = v3;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "dealloc");
}

uint64_t type metadata accessor for TTRIWelcomeNavigationViewController()
{
  return objc_opt_self(_TtC9Reminders35TTRIWelcomeNavigationViewController);
}

void sub_1001E2198()
{
  char *v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;

  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate]);
  swift_unknownObjectRelease(Strong);
  v2 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_tapGestureRecognizer;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_tapGestureRecognizer];
  if (Strong)
  {
    if (v3)
      return;
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTap:");
    objc_msgSend(v0, "addGestureRecognizer:", v4);
  }
  else
  {
    if (!v3)
      return;
    objc_msgSend(v0, "removeGestureRecognizer:");
    v4 = 0;
  }
  v5 = *(void **)&v0[v2];
  *(_QWORD *)&v0[v2] = v4;

}

_OWORD *sub_1001E2258(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t ObjectType;
  _OWORD *result;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  uint64_t v13;
  void *v14;
  UIFont v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  NSString *v26;
  NSString *v27;
  unint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  void *v56;
  int v57;
  id v58;
  uint64_t v59;
  void *v60;
  _OWORD *v61;
  void *v62;
  uint64_t v63;
  id v64;
  Class isa;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  NSArray v74;
  id v75;
  uint64_t v76;
  void *v77;
  _OWORD *v78;
  void *v79;
  uint64_t v80;
  id v81;
  Class v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  uint64_t v90;
  id v91;
  id v92;
  void *v93;
  objc_class *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  objc_class *v98;
  id v99;
  void *v100;
  void *v101;
  objc_super v102;
  uint64_t v103;
  _QWORD v104[16];
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _OWORD v111[2];
  _BYTE v112[128];
  _OWORD v113[4];
  __int128 v114;
  __int128 v115;
  _OWORD v116[2];

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  sub_10003E0EC((uint64_t)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title], (uint64_t)v112);
  sub_10003E0EC((uint64_t)v112, (uint64_t)v113);
  if (sub_100171C50((uint64_t)v113) != 1)
  {
    v109 = v114;
    v110 = v115;
    v111[0] = v116[0];
    *(_OWORD *)((char *)v111 + 10) = *(_OWORD *)((char *)v116 + 10);
    v105 = v113[0];
    v106 = v113[1];
    v107 = v113[2];
    v108 = v113[3];
    v94 = (objc_class *)ObjectType;
    if (BYTE2(v114))
    {
      if (BYTE2(v114) != 1)
      {
        v12 = (void *)objc_opt_self(UIColor);
        sub_10003E0EC((uint64_t)v112, (uint64_t)v104);
        sub_10003E134((uint64_t)v104);
        v7 = objc_msgSend(v12, "tertiaryLabelColor");
        v10 = objc_msgSend(v12, "tertiaryLabelColor");
        v11 = 1;
LABEL_10:
        if (BYTE1(v114))
        {
          if (BYTE1(v114) == 1)
          {
            v13 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
            v14 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, 0, 1, 0);
            v15.super.isa = UIFont.withBoldTrait()().super.isa;

            v101 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, 0, 1, 0);
            v16 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint];
            if (v16)
              objc_msgSend(v16, "setConstant:", 12.0);
            v17 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint];
            if (v17)
            {
              v18 = 12.0;
LABEL_28:
              objc_msgSend(v17, "setConstant:", v18);
            }
          }
          else
          {
            v13 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
            v21 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleHeadline, 0, 1, 0);
            v15.super.isa = UIFont.withBoldTrait()().super.isa;

            v101 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleHeadline, 0, 1, 0);
            v22 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint;
            v23 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint];
            if (v23)
            {
              v18 = 12.0;
              objc_msgSend(v23, "setConstant:", 12.0);
              v17 = *(void **)&v3[v22];
              if (v17)
                goto LABEL_28;
            }
          }
        }
        else
        {
          v13 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
          v19 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, 0, 1, 0);
          v15.super.isa = UIFont.withBoldTrait()().super.isa;

          v101 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, 0, 1, 0);
          v20 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint];
          if (v11)
          {
            if (v20)
              objc_msgSend(v20, "setConstant:", 11.0);
            v17 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint];
            if (v17)
            {
              v18 = 9.0;
              goto LABEL_28;
            }
          }
          else
          {
            if (v20)
              objc_msgSend(v20, "setConstant:", 14.0);
            v17 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint];
            if (v17)
            {
              v18 = 4.0;
              goto LABEL_28;
            }
          }
        }
        v24 = sub_10002A750(&qword_10064BB40);
        inited = swift_initStackObject(v24, &v103);
        *(_OWORD *)(inited + 16) = xmmword_1005201E0;
        *(_QWORD *)(inited + 32) = NSFontAttributeName;
        sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
        *(UIFont *)(inited + 40) = v15;
        *(_QWORD *)(inited + 64) = v13;
        *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
        *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
        *(_QWORD *)(inited + 80) = v7;
        v26 = NSFontAttributeName;
        v98 = v15.super.isa;
        v27 = NSForegroundColorAttributeName;
        v99 = v7;
        v28 = sub_100350498(inited);
        v29 = __chkstk_darwin(v28);
        v30 = TTRRemindersListViewModel.SectionHeaderTitle.attributedTitleText(baseAttributes:secondaryTextAttributes:)(v29);
        *(_QWORD *)&v31 = swift_bridgeObjectRelease(v28).n128_u64[0];
        v97 = (void *)v30;
        __chkstk_darwin(objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titleLabel], "setAttributedText:", v30, v31));
        v33 = __chkstk_darwin(v32);
        v34 = (void *)TTRRemindersListViewModel.SectionHeaderTitle.attributedSubtitleText(baseAttributes:secondaryTextAttributes:)(sub_1001E4884, v33);
        v100 = v34;
        if (v34)
        {
          v35 = v34;
          v36 = v10;
          v37 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel;
          v38 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel];
          if (v38)
          {
            v39 = v34;
            v10 = v36;
          }
          else
          {
            v44 = objc_allocWithZone((Class)UILabel);
            v42 = v35;
            v45 = objc_msgSend(v44, "init");
            v46 = *(void **)&v3[v37];
            *(_QWORD *)&v3[v37] = v45;

            v47 = *(void **)&v3[v37];
            if (!v47)
            {
              v10 = v36;
              goto LABEL_39;
            }
            v48 = v47;
            v49 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, *(_QWORD *)&UIFontWeightBold, 0, 0);
            objc_msgSend(v48, "setFont:", v49);

            v35 = v100;
            v38 = *(void **)&v3[v37];
            v10 = v36;
            if (!v38)
              goto LABEL_39;
          }
          v40 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer];
          v41 = v38;
          objc_msgSend(v40, "addArrangedSubview:", v41);
          objc_msgSend(v41, "setAttributedText:", v35);

          v42 = v35;
        }
        else
        {
          v43 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel;
          if (!*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel])
            goto LABEL_40;
          objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer], "removeArrangedSubview:");
          v42 = *(id *)&v3[v43];
          *(_QWORD *)&v3[v43] = 0;
        }
LABEL_39:

LABEL_40:
        v50 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer];
        v51 = *(_QWORD *)&v113[0] & 0xFFFFFFFFFFFFLL;
        if ((*((_QWORD *)&v113[0] + 1) & 0x2000000000000000) != 0)
          v51 = HIBYTE(*((_QWORD *)&v113[0] + 1)) & 0xFLL;
        objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer], "setHidden:", (v51 == 0) & BYTE3(v114));
        v52 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState;
        v53 = v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState];
        v54 = BYTE4(v114);
        if (v53 == 2)
        {
          if (BYTE4(v114) == 2)
            goto LABEL_65;
        }
        else
        {
          if (v53 == 3)
          {
            if (BYTE4(v114) == 3)
              goto LABEL_65;
LABEL_49:
            v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] = BYTE4(v114);
            if (v54 == 2)
              goto LABEL_54;
            goto LABEL_53;
          }
          if ((BYTE4(v114) & 0xFE) == 2)
            goto LABEL_49;
          if (((((v53 & 1) == 0) ^ BYTE4(v114)) & 1) != 0)
            goto LABEL_65;
        }
        v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] = BYTE4(v114);
LABEL_53:
        v102.receiver = v3;
        v102.super_class = v94;
        if ((objc_msgSendSuper2(&v102, "floating") & 1) == 0)
        {
          v55 = v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
LABEL_56:
          v56 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator];
          objc_msgSend(v56, "setHidden:", v55);
          sub_1001E3B50(0);
          v57 = v3[v52];
          if (v57 != 2)
          {
            if (v57 == 3)
            {
              TTRISeparator.dotted.setter(0);
              TTRISeparator.thickness.setter(0x4000000000000000, 0);
              v58 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
              TTRISeparator.backgroundColor.setter(v58);
              v95 = sub_10002A750((uint64_t *)&unk_1006415A0);
              result = (_OWORD *)swift_allocObject(v95, 40, 7);
              result[1] = xmmword_100521140;
              v59 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint;
              v60 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint];
              if (!v60)
              {
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
              v61 = result;
              v62 = (void *)objc_opt_self(NSLayoutConstraint);
              *((_QWORD *)v61 + 4) = v60;
              v104[0] = v61;
              specialized Array._endMutation()(v62);
              v63 = v104[0];
              sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
              v64 = v60;
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v62, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v63).n128_f64[0]);

              v66 = objc_msgSend(v56, "leadingAnchor");
              v67 = objc_msgSend(v3, "contentView");
              v68 = objc_msgSend(v67, "leadingAnchor");

              v69 = objc_msgSend(v66, "constraintEqualToAnchor:", v68);
              v70 = *(void **)&v3[v59];
              *(_QWORD *)&v3[v59] = v69;

              result = (_OWORD *)swift_allocObject(v95, 40, 7);
              result[1] = xmmword_100521140;
              v71 = *(void **)&v3[v59];
              if (!v71)
              {
LABEL_72:
                __break(1u);
                goto LABEL_73;
              }
              *((_QWORD *)result + 4) = v71;
              v104[0] = result;
              specialized Array._endMutation()(result);
              v72 = v104[0];
              v73 = v71;
              v74.super.isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v62, "activateConstraints:", v74.super.isa, swift_bridgeObjectRelease(v72).n128_f64[0]);
            }
            else
            {
              v93 = v50;
              TTRISeparator.dotted.setter(v57 & 1);
              TTRISeparator.thickness.setter(0, 1);
              v75 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
              TTRISeparator.backgroundColor.setter(v75);
              v96 = sub_10002A750((uint64_t *)&unk_1006415A0);
              result = (_OWORD *)swift_allocObject(v96, 40, 7);
              result[1] = xmmword_100521140;
              v76 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint;
              v77 = *(void **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint];
              if (!v77)
              {
LABEL_73:
                __break(1u);
                goto LABEL_74;
              }
              v78 = result;
              v79 = (void *)objc_opt_self(NSLayoutConstraint);
              *((_QWORD *)v78 + 4) = v77;
              v104[0] = v78;
              specialized Array._endMutation()(v79);
              v80 = v104[0];
              sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
              v81 = v77;
              v82 = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v79, "deactivateConstraints:", v82, swift_bridgeObjectRelease(v80).n128_f64[0]);

              v83 = objc_msgSend(v56, "leadingAnchor");
              v84 = objc_msgSend(v3, "contentView");
              v85 = objc_msgSend(v84, "layoutMarginsGuide");

              v86 = objc_msgSend(v85, "leadingAnchor");
              v87 = objc_msgSend(v83, "constraintEqualToAnchor:", v86);

              v88 = *(void **)&v3[v76];
              *(_QWORD *)&v3[v76] = v87;

              result = (_OWORD *)swift_allocObject(v96, 40, 7);
              result[1] = xmmword_100521140;
              v89 = *(void **)&v3[v76];
              if (!v89)
              {
LABEL_74:
                __break(1u);
                return result;
              }
              *((_QWORD *)result + 4) = v89;
              v104[0] = result;
              specialized Array._endMutation()(result);
              v90 = v104[0];
              v91 = v89;
              v74.super.isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v79, "activateConstraints:", v74.super.isa, swift_bridgeObjectRelease(v90).n128_f64[0]);
              v50 = v93;
            }

          }
LABEL_65:
          v92 = objc_msgSend(v50, "isHidden");
          result = *(_OWORD **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint];
          if (result)
          {
            objc_msgSend(result, "setActive:", v92 ^ 1);
            result = *(_OWORD **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_contentViewBottomToTopSeparatorBottomConstraint];
            if (result)
            {
              objc_msgSend(result, "setActive:", v92);
              sub_1001E3B50(0);

              return (_OWORD *)sub_100171C68((uint64_t)v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_71;
        }
LABEL_54:
        v55 = 1;
        goto LABEL_56;
      }
      v6 = (void *)objc_opt_self(UIColor);
      sub_10003E0EC((uint64_t)v112, (uint64_t)v104);
      sub_10003E134((uint64_t)v104);
      v7 = objc_msgSend(v6, "secondaryLabelColor");
      v8 = objc_msgSend(v6, "secondaryLabelColor");
    }
    else
    {
      v9 = (void *)objc_opt_self(UIColor);
      sub_10003E0EC((uint64_t)v112, (uint64_t)v104);
      sub_10003E134((uint64_t)v104);
      v7 = objc_msgSend(v9, "labelColor");
      v8 = objc_msgSend(v9, "secondaryLabelColor");
    }
    v10 = v8;
    v11 = 0;
    goto LABEL_10;
  }
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titleLabel], "setAttributedText:", 0);
  result = *(_OWORD **)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel];
  if (result)
    return objc_msgSend(result, "setAttributedText:", 0);
  return result;
}

uint64_t sub_1001E2EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _OWORD v9[6];
  _OWORD v10[2];
  _OWORD v11[6];
  _BYTE v12[26];
  _BYTE v13[128];
  _OWORD v14[6];
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[6];
  _OWORD v18[2];
  _BYTE v19[128];
  _BYTE v20[128];
  _BYTE v21[128];
  _BYTE v22[128];

  v3 = v1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title;
  sub_10003E0EC(v1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title, (uint64_t)v19);
  sub_10003E0EC(v3, (uint64_t)v20);
  sub_10003E0EC(a1, v3);
  sub_100171C68((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
  sub_100171C68(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
  sub_100171C68((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
  sub_10003E0EC(v3, (uint64_t)v21);
  sub_10003E0EC((uint64_t)v21, (uint64_t)v22);
  if (sub_100171C50((uint64_t)v22) != 1)
  {
    sub_10003E0EC((uint64_t)v19, (uint64_t)v13);
    if (sub_100171C50((uint64_t)v13) != 1)
    {
      sub_10003E0EC((uint64_t)v19, (uint64_t)v9);
      v14[4] = v9[4];
      v14[5] = v9[5];
      v15[0] = v10[0];
      *(_OWORD *)((char *)v15 + 10) = *(_OWORD *)((char *)v10 + 10);
      v14[0] = v9[0];
      v14[1] = v9[1];
      v14[2] = v9[2];
      v14[3] = v9[3];
      sub_10003E0EC((uint64_t)v21, (uint64_t)v11);
      v17[4] = v11[4];
      v17[5] = v11[5];
      v18[0] = *(_OWORD *)v12;
      *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)&v12[10];
      v17[0] = v11[0];
      v17[1] = v11[1];
      v17[2] = v11[2];
      v17[3] = v11[3];
      sub_100171C68((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
      sub_100171C68((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
      v7 = static TTRRemindersListViewModel.SectionHeaderTitle.__derived_struct_equals(_:_:)(v17, v14);
      sub_100171C68((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
      v5 = sub_100171C68((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
      if ((v7 & 1) != 0)
      {
LABEL_8:
        sub_100171C68(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
        v4 = v19;
        return sub_100171C68((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
      }
LABEL_7:
      sub_1001E2258(v5, v6);
      goto LABEL_8;
    }
LABEL_5:
    sub_10003E0EC((uint64_t)v21, (uint64_t)v14);
    sub_10003E0EC((uint64_t)v19, (uint64_t)&v16);
    sub_100171C68((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
    sub_100171C68((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
    v5 = sub_1001E478C((uint64_t)v14);
    goto LABEL_7;
  }
  sub_10003E0EC((uint64_t)v19, (uint64_t)v14);
  if (sub_100171C50((uint64_t)v14) != 1)
    goto LABEL_5;
  v4 = (_BYTE *)a1;
  return sub_100171C68((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
}

void sub_1001E3118(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  Class isa;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  NSString v31;
  id v32;
  char *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  void *v84;
  _QWORD *v85;
  id v86;
  id v87;
  Class v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  objc_class *ObjectType;
  objc_super v99;
  objc_super v100;
  _QWORD *v101;
  _OWORD v102[8];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = (uint64_t)&v2[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title];
  sub_1000D2B94(v102);
  sub_10003E0EC((uint64_t)v102, v6);
  v7 = &v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = 0;
  v9 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_contentViewBottomToTopSeparatorBottomConstraint] = 0;
  v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor] = 2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_tapGestureRecognizer] = 0;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v3;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titleLabel;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titleLabel] = v12;
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v14 = v12;
  v15 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleTitle2, *(_QWORD *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v14, "setFont:", v15);

  v16 = *(void **)&v3[v9];
  *(_QWORD *)&v3[v9] = 0;

  v97 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v17 = swift_allocObject(v97, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100521140;
  v18 = *(void **)&v11[v13];
  *(_QWORD *)(v17 + 32) = v18;
  v101 = (_QWORD *)v17;
  specialized Array._endMutation()(v17);
  v19 = objc_allocWithZone((Class)NUIContainerStackView);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v20 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v19, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v101).n128_f64[0]);

  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer] = v22;
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v22, "setAxis:", 1);
  objc_msgSend(v22, "setArrangedSubviewRemovalPolicy:", 2);
  objc_msgSend(v22, "setSpacing:", 4.0);
  v23 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator(0));
  v24 = (void *)TTRISeparator.init(axis:)(0);
  v25 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator] = v24;
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v26 = v24;
  TTRISeparator.thickness.setter(0x4000000000000000, 0);

  v27 = *(void **)&v11[v25];
  objc_msgSend(v27, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  TTRISeparator.backgroundColor.setter(objc_msgSend(v28, "tertiarySystemFillColor"));

  v11[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] = 3;
  if (a2)
  {
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  v100.receiver = v11;
  v100.super_class = ObjectType;
  v32 = objc_msgSendSuper2(&v100, "initWithReuseIdentifier:", v31, v30);

  v33 = (char *)v32;
  v34 = objc_msgSend(v33, "contentView");
  v35 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator;
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator]);

  v36 = objc_msgSend(v33, "contentView");
  v37 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer;
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer]);

  v38 = objc_msgSend(*(id *)&v33[v37], "topAnchor");
  v39 = objc_msgSend(v33, "contentView");
  v40 = objc_msgSend(v39, "topAnchor");

  v41 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v40, 14.0);
  v42 = *(void **)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint];
  v96 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint;
  *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint] = v41;

  v43 = objc_msgSend(*(id *)&v33[v35], "leadingAnchor");
  v44 = objc_msgSend(v33, "contentView");
  v45 = objc_msgSend(v44, "leadingAnchor");

  v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
  v47 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint;
  v48 = *(void **)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint];
  *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint] = v46;

  v49 = objc_msgSend(v33, "contentView");
  v50 = objc_msgSend(v49, "bottomAnchor");

  v51 = objc_msgSend(*(id *)&v33[v37], "bottomAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, 4.0);

  v53 = *(void **)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint];
  v95 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint;
  *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint] = v52;

  v54 = objc_msgSend(v33, "contentView");
  v55 = objc_msgSend(v54, "bottomAnchor");

  v56 = objc_msgSend(*(id *)&v33[v35], "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  v58 = *(void **)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_contentViewBottomToTopSeparatorBottomConstraint];
  *(_QWORD *)&v33[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_contentViewBottomToTopSeparatorBottomConstraint] = v57;

  v59 = swift_allocObject(v97, 88, 7);
  *(_OWORD *)(v59 + 16) = xmmword_100521BA0;
  v60 = *(void **)&v33[v47];
  if (!v60)
  {
    __break(1u);
    goto LABEL_13;
  }
  v61 = (_QWORD *)v59;
  *(_QWORD *)(v59 + 32) = v60;
  v62 = *(void **)&v33[v35];
  v63 = v60;
  v64 = objc_msgSend(v62, "trailingAnchor");
  v65 = objc_msgSend(v33, "contentView");
  v66 = objc_msgSend(v65, "trailingAnchor");

  v67 = objc_msgSend(v64, "constraintEqualToAnchor:", v66);
  v61[5] = v67;
  v68 = objc_msgSend(*(id *)&v33[v35], "topAnchor");
  v69 = objc_msgSend(v33, "contentView");
  v70 = objc_msgSend(v69, "topAnchor");

  v71 = objc_msgSend(v68, "constraintEqualToAnchor:", v70);
  v61[6] = v71;
  v72 = objc_msgSend(*(id *)&v33[v37], "leadingAnchor");
  v73 = objc_msgSend(v33, "contentView");
  v74 = objc_msgSend(v73, "layoutMarginsGuide");

  v75 = objc_msgSend(v74, "leadingAnchor");
  v76 = objc_msgSend(v72, "constraintEqualToAnchor:", v75);

  v61[7] = v76;
  v77 = objc_msgSend(v33, "contentView");
  v78 = objc_msgSend(v77, "layoutMarginsGuide");

  v79 = objc_msgSend(v78, "trailingAnchor");
  v80 = objc_msgSend(*(id *)&v33[v37], "trailingAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  v61[8] = v81;
  v82 = *(void **)&v33[v96];
  if (!v82)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v61[9] = v82;
  v83 = *(void **)&v33[v95];
  if (!v83)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v84 = (void *)objc_opt_self(NSLayoutConstraint);
  v61[10] = v83;
  v101 = v61;
  specialized Array._endMutation()(v84);
  v85 = v101;
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  v86 = v82;
  v87 = v83;
  v88 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v84, "activateConstraints:", v88, swift_bridgeObjectRelease(v85).n128_f64[0]);

  sub_1001E3B50(0);
  v89 = sub_10002A750(&qword_1006415F0);
  v90 = swift_allocObject(v89, 48, 7);
  *(_OWORD *)(v90 + 16) = xmmword_100520250;
  *(_QWORD *)(v90 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v90 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v91 = v33;
  v92 = UIView.registerForTraitChanges<A>(_:handler:)(v90, sub_1001E4894, 0, ObjectType);
  swift_unknownObjectRelease(v92);

  *(_QWORD *)&v93 = swift_bridgeObjectRelease(v90).n128_u64[0];
  if (v91[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
    || (v99.receiver = v91,
        v99.super_class = ObjectType,
        (objc_msgSendSuper2(&v99, "floating", v93) & 1) != 0))
  {
    v94 = 1;
  }
  else
  {
    v94 = v91[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
  }
  objc_msgSend(*(id *)&v33[v35], "setHidden:", v94, v95);
  sub_1001E3B50(0);

}

uint64_t sub_1001E3B50(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_10002A750(&qword_100641268);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesContainer], "isHidden", v4);
  if ((result & 1) != 0)
  {
    result = (uint64_t)objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator], "isHidden");
    v8 = result ^ 1;
    if ((a1 & 1) != 0)
    {
      v9 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor;
      goto LABEL_9;
    }
    v9 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor;
    v10 = v1[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor];
    if (v10 == 2 || ((((v10 & 1) == 0) ^ v8) & 1) == 0)
    {
LABEL_9:
      v1[v9] = v8;
      if ((result & 1) != 0)
      {
        static UIBackgroundConfiguration.clear()();
LABEL_12:
        v12 = type metadata accessor for UIBackgroundConfiguration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
        return UITableViewHeaderFooterView.backgroundConfiguration.setter(v6);
      }
LABEL_11:
      v11 = objc_msgSend(v1, "traitCollection");
      static TTRIRemindersListBackground.backgroundConfiguration(for:compatibleWith:)(1, v11);

      goto LABEL_12;
    }
  }
  else if ((a1 & 1) != 0
         || (v1[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor] & 1) == 0)
  {
    v1[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor] = 1;
    goto LABEL_11;
  }
  return result;
}

id sub_1001E3D7C(char a1, uint64_t a2)
{
  unsigned __int8 *v2;
  objc_class *ObjectType;
  unsigned int v5;
  id result;
  uint64_t v7;
  objc_super v8;
  objc_super v9;
  objc_super v10;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v11.receiver = v2;
  v11.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v11, "floating");
  v10.receiver = v2;
  v10.super_class = ObjectType;
  objc_msgSendSuper2(&v10, "setFloating:", a1 & 1);
  v9.receiver = v2;
  v9.super_class = ObjectType;
  result = objc_msgSendSuper2(&v9, "floating");
  if (v5 != (_DWORD)result)
  {
    if (v2[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
      || (v8.receiver = v2, v8.super_class = ObjectType, (objc_msgSendSuper2(&v8, "floating") & 1) != 0))
    {
      v7 = 1;
    }
    else
    {
      v7 = v2[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
    }
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator], "setHidden:", v7);
    return (id)sub_1001E3B50(0);
  }
  return result;
}

unint64_t sub_1001E3E60(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  id v7;
  id v8;
  NSString *v9;
  NSString *v10;
  uint64_t v12;

  v4 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v4, &v12);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v6 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = a2;
  v7 = a1;
  v8 = a2;
  v9 = NSFontAttributeName;
  v10 = NSForegroundColorAttributeName;
  return sub_100350498(inited);
}

unint64_t sub_1001E3F30(void *a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  NSString *v6;
  void *v7;
  Class isa;
  NSString *v9;
  uint64_t v11;

  v2 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v2, &v11);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v4 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v5 = a1;
  v6 = NSFontAttributeName;
  v7 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, 0, 1, 0);
  isa = UIFont.withBoldTrait()().super.isa;

  *(_QWORD *)(inited + 40) = isa;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v5;
  v9 = NSForegroundColorAttributeName;
  return sub_100350498(inited);
}

unint64_t sub_1001E4034(void *a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  NSString *v6;
  NSString *v7;
  uint64_t v9;

  v2 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v2, &v9);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v4 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v5 = a1;
  v6 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(UIFontTextStyleSubheadline, 0, 1, 0);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v5;
  v7 = NSForegroundColorAttributeName;
  return sub_100350498(inited);
}

uint64_t sub_1001E41BC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titleLabel), "text"));
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    v6 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_10001D840((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v6[2] = v8 + 1;
    v9 = &v6[2 * v8];
    v9[4] = v3;
    v9[5] = v5;
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v0
                                                  + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel);
  if (isUniquelyReferenced_nonNull_native)
  {
    isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend((id)isUniquelyReferenced_nonNull_native, "text");
    if (isUniquelyReferenced_nonNull_native)
    {
      v11 = (void *)isUniquelyReferenced_nonNull_native;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(isUniquelyReferenced_nonNull_native);
      v14 = v13;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001D840(0, v6[2] + 1, 1, v6);
        v6 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10001D840((_QWORD *)(v15 > 1), v16 + 1, 1, v6);
        v6 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v6[2] = v16 + 1;
      v17 = &v6[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
    }
  }
  if (v6[2])
  {
    v18 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(isUniquelyReferenced_nonNull_native);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain(v20);
    v21 = sub_10002A750(&qword_1006466D0);
    v22 = sub_1000923A8();
    v23 = BidirectionalCollection<>.joined(separator:)(v19, v20, v21, v22);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    return 0;
  }
  return v23;
}

uint64_t sub_1001E43BC(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t *Reminder;
  uint64_t v6;
  id v7;
  void *v8;
  _BYTE v10[128];
  objc_super v11;
  _BYTE v12[128];
  _BYTE v13[128];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  sub_10003E0EC((uint64_t)v2 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title, (uint64_t)v12);
  sub_10003E0EC((uint64_t)v12, (uint64_t)v13);
  if (sub_100171C50((uint64_t)v13) == 1 || v13[121] != 1)
  {
    v11.receiver = v2;
    v11.super_class = ObjectType;
    v7 = objc_msgSendSuper2(&v11, "accessibilityHint");
    if (v7)
    {
      v8 = v7;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_10003E0EC((uint64_t)v12, (uint64_t)v10);
    v4 = sub_10003E134((uint64_t)v10);
    Reminder = (uint64_t *)TTRAccesibility.RemindersList.Action.CreateReminderHint.unsafeMutableAddressor(v4);
    v6 = *Reminder;
    swift_bridgeObjectRetain(Reminder[1]);
    sub_100171C68((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
  }
  return v6;
}

uint64_t sub_1001E4634()
{
  return type metadata accessor for TTRIRemindersListSectionHeader(0);
}

uint64_t type metadata accessor for TTRIRemindersListSectionHeader(uint64_t a1)
{
  uint64_t result;

  result = qword_10064BE28;
  if (!qword_10064BE28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListSectionHeader);
  return result;
}

void sub_1001E4678(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = &unk_100528600;
  v4[1] = &unk_100528618;
  sub_1001E4738(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100528630;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_100528648;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = &unk_100528648;
    v4[8] = &unk_100528648;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = &unk_100528648;
    v4[11] = &unk_100528648;
    v4[12] = &unk_100528660;
    v4[13] = &unk_100528678;
    v4[14] = &unk_100528648;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_1001E4738(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10064BE38)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.SectionID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10064BE38);
  }
}

uint64_t sub_1001E478C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 128);
  v3 = *(void **)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v13 = *(_OWORD *)(a1 + 208);
  v14 = *(_OWORD *)(a1 + 192);
  v12 = *(_OWORD *)(a1 + 224);
  v9 = *(_QWORD *)(a1 + 240);
  v10 = *(_WORD *)(a1 + 248);
  sub_100171CCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_OWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_WORD *)(a1 + 120));
  sub_100171CCC(v15, v2, v3, v4, v5, v6, v7, v8, v14, *((void **)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

unint64_t sub_1001E487C()
{
  uint64_t v0;

  return sub_1001E3E60(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1001E4884()
{
  uint64_t v0;

  return sub_1001E3F30(*(void **)(v0 + 16));
}

unint64_t sub_1001E488C()
{
  uint64_t v0;

  return sub_1001E4034(*(void **)(v0 + 16));
}

uint64_t sub_1001E4894()
{
  return sub_1001E3B50(1);
}

void sub_1001E48B8()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _OWORD v5[8];

  v1 = &v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_title];
  sub_1000D2B94(v5);
  sub_10003E0EC((uint64_t)v5, v2);
  v3 = &v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_subtitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_titlesBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparatorLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_contentViewBottomToTopSeparatorBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_hasBackgroundColor] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_tapGestureRecognizer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListSectionHeader.swift", 46, 2, 117, 0);
  __break(1u);
}

uint64_t sub_1001E49E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100644980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E4A24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for Any[8]);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1001E4AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064BE40);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064BE40);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001E4B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v4 = v3;
  v27 = a3;
  v7 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10064BF18);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = static TTRIQuickEntryAssembly.fetchInitialListForReminderCreation(store:style:)(a1, 0);
  v28 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v14 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = sub_10002A750(&qword_10064BF20);
  v16 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v17 = sub_100023FEC(&qword_10064BF28, &qword_10064BF20, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v18 = sub_1000A2B9C();
  Publisher.receive<A>(on:options:)(&v28, v9, v15, v16, v17, v18);
  sub_1000A2BF4((uint64_t)v9);

  swift_release(v29);
  v19 = swift_allocObject(&unk_1005F6798, 24, 7);
  swift_weakInit(v19 + 16, v4);
  v20 = swift_allocObject(&unk_1005F67C0, 48, 7);
  *(_QWORD *)(v20 + 16) = v19;
  *(_BYTE *)(v20 + 24) = 0;
  v21 = v27;
  *(_QWORD *)(v20 + 32) = a2;
  *(_QWORD *)(v20 + 40) = v21;
  v22 = sub_100023FEC(&qword_10064BF30, &qword_10064BF18, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_unknownObjectRetain(a2);
  v23 = Publisher.sink(receiveCompletion:receiveValue:)(sub_1001E4DC4, 0, sub_1001E6070, v20, v10, v22);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v24 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 24) = v23;
  return swift_release(v24);
}

void sub_1001E4DC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;

  v1 = *a1;
  if (*a1)
  {
    swift_errorRetain(*a1);
    if (qword_10063D4A8 != -1)
      swift_once(&qword_10063D4A8, sub_1001E4AC8);
    v2 = type metadata accessor for Logger(0);
    sub_100012DC4(v2, (uint64_t)qword_10064BE40);
    swift_errorRetain(v1);
    v3 = swift_errorRetain(v1);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v14 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_getErrorValue(v1, v13, v12);
      v7 = Error.rem_errorDescription.getter(v12[1], v12[2]);
      v9 = v8;
      v11 = sub_100027E40(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v5 + 4, v5 + 12);
      swift_bridgeObjectRelease(v9);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Unable to present Quick Entry; fetchInitialListForReminderCreation failed {error: %s}",
        v5,
        0xCu);
      swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

      swift_errorRelease(v1);
    }
    else
    {
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
  }
}

void sub_1001E4FB8(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t ObjectType;
  _BYTE v27[24];

  v8 = *a1;
  v9 = *((unsigned __int8 *)a1 + 8);
  v10 = a1[2];
  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v13 = Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    if (v14)
    {
      v15 = (void *)v14;
      type metadata accessor for TTRQuickEntryReminderCreationInteractorCapability(0);
      v16 = (void *)static TTRQuickEntryReminderCreationInteractorCapability.createReminder(objectID:initialList:)(0, v8, v9, v10);
      v17 = (void *)static TTRIQuickEntryAssembly.createViewController(initialListForReminderCreation:reminderChangeItem:style:delegate:)(v8, v9, v10, v16, a3 & 1, a4, a5);
      v19 = v18;
      v21 = v20;
      v22 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
      swift_unknownObjectWeakAssign(v13 + 48, v22);
      v23 = objc_msgSend(v22, "presentationController");
      if (v23)
      {
        v25 = v23;
        ObjectType = swift_getObjectType(v19, v24);
        (*(void (**)(void *, uint64_t, uint64_t))(v21 + 72))(v25, ObjectType, v21);

      }
      objc_msgSend(v15, "presentViewController:animated:completion:", v22, 1, 0);
      swift_release(v13);

      swift_unknownObjectRelease(v19);
    }
    else
    {
      swift_release(v13);
    }
  }
}

void sub_1001E5150(char a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  if ((a1 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 48);
    if (Strong)
    {
      v3 = Strong;
      v4 = objc_msgSend(Strong, "presentingViewController");
      if (v4)
      {
        v10 = v4;
        v5 = objc_msgSend(v4, "presentedViewController");
        if (v5)
        {
          v6 = v5;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v7 = v3;
          v8 = v6;
          LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

          if ((v6 & 1) != 0)
            objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
        }

        v9 = v10;
      }
      else
      {
        v9 = v3;
      }

    }
  }
}

void sub_1001E5258(uint64_t a1, uint64_t a2, uint64_t countAndFlagsBits, void *a4, uint64_t a5, uint64_t a6)
{
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *object;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  uint64_t v34;
  NSString v35;
  void *v36;
  void *v37;
  id v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  id v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  void *v51;
  id v52;
  void *Strong;
  void *v54;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  void *v61;
  uint64_t (*v62)();
  uint64_t v63;

  v10._object = (void *)0x800000010056B950;
  v11._countAndFlagsBits = 0x9C80E2206E696F4ALL;
  v11._object = (void *)0xAE003F9D80E24025;
  v10._countAndFlagsBits = 0xD000000000000037;
  v12 = TTRLocalizedString(_:comment:)(v11, v10);
  v13 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100520250;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  v15 = sub_1000770A4();
  *(_QWORD *)(v14 + 64) = v15;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v12._countAndFlagsBits, v12._object, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v12._object);
  if (a4)
  {
    object = a4;
  }
  else
  {
    v19._countAndFlagsBits = 0xD000000000000067;
    v19._object = (void *)0x800000010056B990;
    v20._countAndFlagsBits = 0x656E6F656D6F53;
    v20._object = (void *)0xE700000000000000;
    v21 = TTRLocalizedString(_:comment:)(v20, v19);
    countAndFlagsBits = v21._countAndFlagsBits;
    object = v21._object;
  }
  swift_bridgeObjectRetain(a4);
  v22._countAndFlagsBits = 0xD00000000000004ALL;
  v23._object = (void *)0x800000010056BA00;
  v22._object = (void *)0x800000010056BA40;
  v23._countAndFlagsBits = 0x100000000000003BLL;
  v24 = TTRLocalizedString(_:comment:)(v23, v22);
  v25 = swift_allocObject(v13, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  *(_QWORD *)(v25 + 64) = v15;
  *(_QWORD *)(v25 + 32) = countAndFlagsBits;
  *(_QWORD *)(v25 + 40) = object;
  *(_QWORD *)(v25 + 96) = &type metadata for String;
  *(_QWORD *)(v25 + 104) = v15;
  *(_QWORD *)(v25 + 72) = a1;
  *(_QWORD *)(v25 + 80) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v24._countAndFlagsBits, v24._object, v25);
  v27 = v26;
  swift_bridgeObjectRelease(v24._object);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v30 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v29, 1);

  v31._countAndFlagsBits = 0xD000000000000036;
  v31._object = (void *)0x800000010056BA90;
  v32._countAndFlagsBits = 0x747065636341;
  v32._object = (void *)0xE600000000000000;
  v33 = TTRLocalizedString(_:comment:)(v32, v31)._object;
  v34 = swift_allocObject(&unk_1005F66A8, 32, 7);
  *(_QWORD *)(v34 + 16) = a5;
  *(_QWORD *)(v34 + 24) = a6;
  swift_retain(a6);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v62 = sub_1000B09F4;
  v63 = v34;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1000D4884;
  v61 = &unk_1005F66C0;
  v36 = _Block_copy(&aBlock);
  swift_release(v63);
  v37 = (void *)objc_opt_self(UIAlertAction);
  v38 = objc_msgSend(v37, "actionWithTitle:style:handler:", v35, 0, v36);
  _Block_release(v36);

  v39._object = (void *)0x800000010056BAD0;
  v40._countAndFlagsBits = 0x656E696C636544;
  v40._object = (void *)0xE700000000000000;
  v39._countAndFlagsBits = 0xD000000000000037;
  v41 = TTRLocalizedString(_:comment:)(v40, v39)._object;
  v42 = swift_allocObject(&unk_1005F66F8, 32, 7);
  *(_QWORD *)(v42 + 16) = a5;
  *(_QWORD *)(v42 + 24) = a6;
  swift_retain(a6);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v62 = sub_1000B094C;
  v63 = v42;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1000D4884;
  v61 = &unk_1005F6710;
  v44 = _Block_copy(&aBlock);
  v45 = objc_msgSend(v37, "actionWithTitle:style:handler:", v43, 2, v44, swift_release(v63).n128_f64[0]);
  _Block_release(v44);

  static TTRLocalizableStrings.Common.alertCancelButton.getter(v46);
  v48 = v47;
  v49 = swift_allocObject(&unk_1005F6748, 32, 7);
  *(_QWORD *)(v49 + 16) = a5;
  *(_QWORD *)(v49 + 24) = a6;
  swift_retain(a6);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  v62 = sub_1000B0970;
  v63 = v49;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1000D4884;
  v61 = &unk_1005F6760;
  v51 = _Block_copy(&aBlock);
  v52 = objc_msgSend(v37, "actionWithTitle:style:handler:", v50, 1, v51, swift_release(v63).n128_f64[0]);
  _Block_release(v51);

  objc_msgSend(v30, "addAction:", v38);
  objc_msgSend(v30, "addAction:", v45);
  objc_msgSend(v30, "addAction:", v52);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v57 + 16);
  if (Strong)
  {
    v54 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v30, 1, 0);

    v45 = v52;
    v52 = v54;
  }

}

void sub_1001E57E0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t Strong;
  void *v9;
  id v10;
  __n128 v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  id v19;
  uint64_t v20;
  Class isa;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  _QWORD aBlock[7];
  _BYTE v33[24];
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  _QWORD v40[5];
  unsigned __int8 v41;

  v3 = objc_msgSend(a1, "store");
  v4 = objc_msgSend(a1, "objectID");
  v34 = 0;
  v5 = objc_msgSend(v3, "fetchListWithObjectID:error:", v4, &v34);

  v6 = v34;
  if (v5)
  {
    v7 = v34;
    if (objc_msgSend(v5, "canBeShared") && (Strong = swift_unknownObjectWeakLoadStrong(v1 + 16)) != 0)
    {
      v9 = (void *)Strong;
      _s9Reminders23TTRListSharingUtilitiesC26addCKShareObserverIfNeeded3forySo7REMListC_tFZ_0(v5);
      v10 = objc_msgSend(v9, "view");
      if (v10)
      {
        v12 = v10;
        v31 = v9;
        static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(&v34, v10, 0, 1, v11);

        v13 = v34;
        v14 = v35;
        v15 = v36;
        v16 = v37;
        v17 = v38;
        v18 = v39;
        sub_1000A2644(v34, v35, v36, v37, v38, v39);
        v30 = _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(v5);
        v19 = objc_msgSend(objc_allocWithZone((Class)UIActivityViewController), "initWithActivityItemsConfiguration:", v30);
        if (qword_10063D380 != -1)
          swift_once(&qword_10063D380, sub_1000C0750);
        swift_beginAccess(&static TTRListSharingUtilities.excludedShareActivityTypes, v33, 0, 0);
        v20 = static TTRListSharingUtilities.excludedShareActivityTypes;
        type metadata accessor for ActivityType(0);
        swift_bridgeObjectRetain(v20);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v19, "setExcludedActivityTypes:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

        sub_1000A2644(v13, v14, v15, v16, v17, v18);
        v22 = objc_msgSend(v19, "popoverPresentationController");
        if (v22)
        {
          v23 = v22;
          v40[0] = v13;
          v40[1] = v14;
          v40[2] = v15;
          v40[3] = v16;
          v40[4] = v17;
          v41 = v18;
          sub_1000A2644(v13, v14, v15, v16, v17, v18);
          UIPopoverPresentationController.setPopoverAnchorSource(_:)(v40);

          sub_1000A2958((uint64_t)&v34);
          sub_1000A2958((uint64_t)&v34);

        }
        else
        {

          sub_1000A2958((uint64_t)&v34);
        }
        sub_1000A2958((uint64_t)&v34);
        v27 = swift_allocObject(&unk_1005F67E8, 24, 7);
        *(_QWORD *)(v27 + 16) = v5;
        aBlock[4] = sub_1001E60A4;
        aBlock[5] = v27;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001E4A24;
        aBlock[3] = &unk_1005F6800;
        v28 = _Block_copy(aBlock);
        v29 = v5;
        objc_msgSend(v19, "setCompletionWithItemsHandler:", v28, swift_release().n128_f64[0]);
        _Block_release(v28);
        objc_msgSend(v31, "presentViewController:animated:completion:", v19, 1, 0);

        sub_1000A2958((uint64_t)&v34);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
  else
  {
    v24 = v34;
    v25 = _convertNSErrorToError(_:)(v6);

    swift_willThrow(v26);
    swift_errorRelease(v25);
  }
}

void sub_1001E5BA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *oslog;
  _QWORD v19[3];
  _BYTE v20[8];
  uint64_t v21;
  uint64_t v22;

  if ((a2 & 1) == 0)
  {
    _s9Reminders23TTRListSharingUtilitiesC11cancelShare3forySo7REMListC_tFZ_0(a5);
    if (a4)
    {
      swift_errorRetain(a4);
      if (qword_10063D4A8 != -1)
        swift_once(&qword_10063D4A8, sub_1001E4AC8);
      v7 = type metadata accessor for Logger(0);
      sub_100012DC4(v7, (uint64_t)qword_10064BE40);
      swift_errorRetain(a4);
      swift_errorRetain(a4);
      v8 = a5;
      oslog = Logger.logObject.getter(v8);
      v9 = static os_log_type_t.error.getter(oslog);
      if (os_log_type_enabled(oslog, v9))
      {
        v10 = swift_slowAlloc(22, -1);
        v11 = (_QWORD *)swift_slowAlloc(8, -1);
        v12 = swift_slowAlloc(32, -1);
        v22 = v12;
        *(_DWORD *)v10 = 138412546;
        v13 = objc_msgSend(v8, "objectID");
        v21 = (uint64_t)v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v10 + 4, v10 + 12);
        *v11 = v13;

        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue(a4, v20, v19);
        v14 = Error.rem_errorDescription.getter(v19[1], v19[2]);
        v16 = v15;
        v21 = sub_100027E40(v14, v15, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v10 + 14, v10 + 22);
        swift_bridgeObjectRelease(v16);
        swift_errorRelease(a4);
        swift_errorRelease(a4);
        _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Share sheet failed, canceling the share request. {list.objectID: %@, error: %s}", (uint8_t *)v10, 0x16u);
        v17 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v11, 1, v17);
        swift_slowDealloc(v11, -1, -1);
        swift_arrayDestroy(v12, 1, &type metadata for Any[8]);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v10, -1, -1);

        swift_errorRelease(a4);
      }
      else
      {
        swift_errorRelease(a4);

        swift_errorRelease(a4);
        swift_errorRelease(a4);

      }
    }
  }
}

uint64_t sub_1001E5E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  *(_BYTE *)(v8 + 73) = a7;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 88) = a5;
  v9 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)a8;
  *(_OWORD *)(v8 + 128) = v9;
  v10 = *(_QWORD *)(a8 + 32);
  *(_BYTE *)(v8 + 74) = *(_BYTE *)(a8 + 40);
  v11 = *(_QWORD *)(a8 + 48);
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = v11;
  *(_BYTE *)(v8 + 75) = *(_BYTE *)(a8 + 56);
  return swift_task_switch(sub_1001E5E94, 0, 0);
}

uint64_t sub_1001E5E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  int *v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v3 = *(unsigned __int8 *)(v2 + 74);
  v5 = *(_QWORD *)(v2 + 144);
  v4 = *(_QWORD *)(v2 + 152);
  v14 = *(_OWORD *)(v2 + 112);
  v15 = *(_OWORD *)(v2 + 128);
  v6 = *(_BYTE *)(v2 + 73);
  v7 = *(_QWORD *)(v2 + 80);
  v8 = *(_BYTE *)(v2 + 75) & 1;
  v9 = *(_QWORD *)(v7 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v7 + 32), a2);
  *(_OWORD *)(v2 + 16) = v14;
  *(_OWORD *)(v2 + 32) = v15;
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_BYTE *)(v2 + 72) = v8;
  v11 = *(int **)(v9 + 16);
  *(_QWORD *)&v15 = (char *)v11 + *v11;
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v2 + 160) = v12;
  *v12 = v2;
  v12[1] = sub_1001E5F78;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))v15)(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), v6 & 1, v2 + 16, *(_QWORD *)(v2 + 104), ObjectType, v9);
}

uint64_t sub_1001E5F78()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1001E5FC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectWeakDestroy(v0 + 48);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t sub_1001E5FFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E6020()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E6044()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001E6070(uint64_t *a1)
{
  uint64_t v1;

  sub_1001E4FB8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1001E6080()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001E60A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1001E5BA8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1001E60CC()
{
  return 258;
}

uint64_t sub_1001E60D4()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001E6118()
{
  return type metadata accessor for TTRIShowSearchResultViewModelSource(0);
}

uint64_t type metadata accessor for TTRIShowSearchResultViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10064BF60;
  if (!qword_10064BF60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowSearchResultViewModelSource);
  return result;
}

uint64_t sub_1001E615C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1408);
}

id sub_1001E6190(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  objc_class *ObjectType;
  _QWORD *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(a3, a2);
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController] = 0;
  a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeSection] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell] = 0;
  v7 = &a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter];
  *v7 = a1;
  v7[1] = &off_1005F81E8;
  *(_QWORD *)&a3[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_localUndoManager] = a2;
  v9.receiver = a3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_1001E6284(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  __n128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v26;
  _QWORD v27[5];
  _OWORD v28[8];
  __int16 v29;
  _OWORD v30[8];
  __int16 v31;
  _OWORD v32[8];
  __int16 v33;

  v27[3] = type metadata accessor for TTRITemplateSavingRouter();
  v27[4] = &off_1006046E8;
  v27[0] = a2;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16, 0);
  *(_QWORD *)(a4 + 40) = 0;
  v8 = swift_unknownObjectWeakInit(a4 + 32, 0);
  TTRTemplateSavingViewModel.init()(v28, v8);
  v9 = v28[7];
  *(_OWORD *)(a4 + 144) = v28[6];
  *(_OWORD *)(a4 + 160) = v9;
  *(_WORD *)(a4 + 176) = v29;
  v10 = v28[3];
  *(_OWORD *)(a4 + 80) = v28[2];
  *(_OWORD *)(a4 + 96) = v10;
  v11 = v28[5];
  *(_OWORD *)(a4 + 112) = v28[4];
  *(_OWORD *)(a4 + 128) = v11;
  v13 = v28[0];
  v12 = v28[1];
  *(_QWORD *)(a4 + 184) = a1;
  *(_QWORD *)(a4 + 192) = &protocol witness table for TTRTemplateSavingInteractor;
  *(_OWORD *)(a4 + 48) = v13;
  *(_OWORD *)(a4 + 64) = v12;
  sub_100010634((uint64_t)v27, a4 + 200);
  *(_QWORD *)(a4 + 240) = a3;
  v14 = type metadata accessor for TTRMainActorDeferredAction(0);
  swift_allocObject(v14, 48, 7);
  swift_retain();
  v15 = a3;
  v16 = TTRMainActorDeferredAction.init()(v15);
  *(_QWORD *)(a4 + 248) = v16;
  swift_beginAccess(v16 + 16, &v26, 1, 0);
  *(_QWORD *)(v16 + 24) = &off_1005F81C0;
  swift_unknownObjectWeakAssign(v16 + 16, a4);
  sub_10023A808((uint64_t)v30);
  swift_release();

  sub_100027F10(v27);
  v17 = *(_OWORD *)(a4 + 160);
  v32[6] = *(_OWORD *)(a4 + 144);
  v32[7] = v17;
  v33 = *(_WORD *)(a4 + 176);
  v18 = *(_OWORD *)(a4 + 96);
  v32[2] = *(_OWORD *)(a4 + 80);
  v32[3] = v18;
  v19 = *(_OWORD *)(a4 + 128);
  v32[4] = *(_OWORD *)(a4 + 112);
  v32[5] = v19;
  v20 = *(_OWORD *)(a4 + 64);
  v32[0] = *(_OWORD *)(a4 + 48);
  v32[1] = v20;
  v21 = v30[5];
  *(_OWORD *)(a4 + 112) = v30[4];
  *(_OWORD *)(a4 + 128) = v21;
  v22 = v30[7];
  *(_OWORD *)(a4 + 144) = v30[6];
  *(_OWORD *)(a4 + 160) = v22;
  *(_WORD *)(a4 + 176) = v31;
  v23 = v30[3];
  *(_OWORD *)(a4 + 80) = v30[2];
  *(_OWORD *)(a4 + 96) = v23;
  v24 = v30[1];
  *(_OWORD *)(a4 + 48) = v30[0];
  *(_OWORD *)(a4 + 64) = v24;
  sub_1001E6758((uint64_t)v32);
  return a4;
}

id sub_1001E6438(void *a1, char a2, void *a3)
{
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  char *v31;
  uint64_t v33;
  char *v34;
  _QWORD v35[6];

  v5 = a2 & 1;
  v6 = objc_allocWithZone((Class)TTRUndoManager);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithDebugIdentifier:", v7);

  v9 = type metadata accessor for TTRTemplateSavingInteractor(0);
  swift_allocObject(v9, 106, 7);
  v10 = a1;
  v11 = v8;
  v12 = TTRTemplateSavingInteractor.init(sourceList:undoManager:completedReminderCountState:)(a1, v5, v11, 0, 256);
  v13 = type metadata accessor for TTRITemplateSavingRouter();
  v14 = swift_allocObject(v13, 40, 7);
  swift_unknownObjectWeakInit(v14 + 16, 0);
  swift_unknownObjectWeakInit(v14 + 24, 0);
  *(_QWORD *)(v14 + 32) = a3;
  v35[3] = v13;
  v35[4] = &off_1006046E8;
  v35[0] = v14;
  v15 = type metadata accessor for TTRITemplateSavingPresenter();
  v16 = swift_allocObject(v15, 256, 7);
  v17 = sub_100028D48((uint64_t)v35, v13);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  v21 = *v19;
  v34 = a3;
  v22 = v11;
  swift_retain();
  swift_retain();
  v23 = sub_1001E6284(v12, v21, v22, v16);
  sub_100027F10(v35);
  v24 = objc_allocWithZone((Class)type metadata accessor for TTRITemplateSavingViewController());
  v25 = v22;
  v26 = swift_retain();
  v27 = sub_1001E6190(v26, (uint64_t)v25, v24);
  v28 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v27);
  swift_beginAccess(v12 + 16, v35, 1, 0);
  *(_QWORD *)(v12 + 24) = &off_1005F81D8;
  swift_unknownObjectWeakAssign(v12 + 16, v23);
  *(_QWORD *)(v23 + 24) = &off_1005FCB30;
  swift_unknownObjectWeakAssign(v23 + 16, v27);
  swift_unknownObjectWeakAssign(v14 + 16, v27);
  swift_unknownObjectWeakAssign(v14 + 24, v28);
  objc_msgSend(v28, "setModalPresentationStyle:", 2);
  v29 = objc_msgSend(v28, "presentationController");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "setDelegate:", v27);

  }
  if (a3)
  {
    v31 = &v34[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presentee];
    *((_QWORD *)v31 + 1) = &off_1005FCAE0;
    swift_unknownObjectWeakAssign(v31, v27);
  }
  TTRTemplateSavingInteractor.start()();
  swift_release();
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_1001E6758(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v12;
  id v13;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 88);
  v10 = *(void **)(a1 + 96);
  v13 = *(id *)(a1 + 104);
  v12 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  sub_10002B328(v3, v4, v5, v6, v7, v8, v9);
  sub_10002B318(v10, v13, v12);
  return a1;
}

uint64_t type metadata accessor for PPTScroll_AccountsList()
{
  return objc_opt_self(PPTScroll_AccountsList);
}

uint64_t type metadata accessor for PPTScroll_AccountsListGlitch()
{
  return objc_opt_self(PPTScroll_AccountsListGlitch);
}

uint64_t type metadata accessor for PPTScroll_RemindersList()
{
  return objc_opt_self(PPTScroll_RemindersList);
}

uint64_t type metadata accessor for PPTScroll_RemindersListGlitch()
{
  return objc_opt_self(PPTScroll_RemindersListGlitch);
}

uint64_t type metadata accessor for PPTNavigation_List_Simple()
{
  return objc_opt_self(PPTNavigation_List_Simple);
}

uint64_t type metadata accessor for PPTNavigation_List_MixedContent()
{
  return objc_opt_self(PPTNavigation_List_MixedContent);
}

uint64_t type metadata accessor for PPTNavigation_Smartlist_All()
{
  return objc_opt_self(PPTNavigation_SmartList_All);
}

uint64_t type metadata accessor for PPTNavigation_SmartList_Today()
{
  return objc_opt_self(PPTNavigation_SmartList_Today);
}

uint64_t type metadata accessor for PPTNavigation_SmartList_Flagged()
{
  return objc_opt_self(PPTNavigation_SmartList_Flagged);
}

uint64_t type metadata accessor for PPTNavigation_SmartList_Scheduled()
{
  return objc_opt_self(PPTNavigation_SmartList_Scheduled);
}

uint64_t type metadata accessor for PPTNavigation_ReminderDetails()
{
  return objc_opt_self(PPTNavigation_ReminderDetails);
}

uint64_t type metadata accessor for PPTTask_CreateReminder()
{
  return objc_opt_self(PPTTask_CreateReminder);
}

uint64_t type metadata accessor for PPTTask_ModifyReminder()
{
  return objc_opt_self(PPTTask_ModifyReminder);
}

uint64_t type metadata accessor for PPTTask_MarkAsCompleted()
{
  return objc_opt_self(PPTTask_MarkAsCompleted);
}

uint64_t type metadata accessor for PPTEnd_To_End_Responsiveness()
{
  return objc_opt_self(E2EResponsiveness);
}

uint64_t sub_1001E6A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064C788);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064C788);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1001E6AEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  if (Strong)
  {
    v4 = Strong;
    swift_unknownObjectRetain(Strong);
    v6 = sub_100418BAC(v5, (uint64_t)&off_1006032B8, a1);
    v8 = v7;
    swift_unknownObjectRelease(v4);
    swift_unknownObjectRelease(v8);
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "navigationController");

      if (v11)
      {
        objc_msgSend(v11, "pushViewController:animated:", v6, 1);

      }
    }

    swift_unknownObjectRelease(v4);
  }
  else
  {
    if (qword_10063D4B0 != -1)
      swift_once(&qword_10063D4B0, sub_1001E6A5C);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100012DC4(v12, (uint64_t)qword_10064C788);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "Expect non-nil moduleDelegate", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

uint64_t sub_1001E6C68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  sub_1000381C8(v0 + 24);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TTRIWelcomeRouter()
{
  return objc_opt_self(_TtC9Reminders17TTRIWelcomeRouter);
}

uint64_t sub_1001E6CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064C850);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064C850);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1001E6D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v0 + 25) & 1) != 0)
  {
    if (qword_10063D4B8 != -1)
      swift_once(&qword_10063D4B8, sub_1001E6CB4);
    v5 = type metadata accessor for Logger(0);
    sub_100012DC4(v5, (uint64_t)qword_10064C850);
    sub_1001EA884(v0);
    sub_1001EA884(v0);
    sub_1001EA884(v0);
    sub_1001EA884(v0);
    sub_1001EA884(v0);
    v6 = sub_1001EA884(v0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      type = v8;
      v9 = swift_slowAlloc(32, -1);
      v45 = swift_slowAlloc(96, -1);
      v48 = v45;
      *(_DWORD *)v9 = 136315650;
      swift_bridgeObjectRetain(v3);
      v11 = Array.description.getter(v10, &type metadata for String);
      v13 = v12;
      swift_bridgeObjectRelease(v3);
      v47 = sub_100027E40(v11, v13, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v13);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain(v2);
      v15 = Array.description.getter(v14, &type metadata for String);
      v16 = v4;
      v18 = v17;
      swift_bridgeObjectRelease(v2);
      v47 = sub_100027E40(v15, v18, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v9 + 14, v9 + 22);
      swift_bridgeObjectRelease(v18);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      *(_WORD *)(v9 + 22) = 2080;
      swift_bridgeObjectRetain(v16);
      v20 = Array.description.getter(v19, &type metadata for String);
      v22 = v21;
      swift_bridgeObjectRelease(v16);
      v47 = sub_100027E40(v20, v22, &v48);
      v4 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v9 + 24, v9 + 32);
      swift_bridgeObjectRelease(v22);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      _os_log_impl((void *)&_mh_execute_header, v7, type, "AboutYourDevices shouldn't be shown when eligibleForAutoUpgrade=true. {upgradableDevices: %s, unsupportedDevices: %s, participants: %s}", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy(v45, 3, &type metadata for Any[8]);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
      sub_1001EA8E8(v1);
    }

  }
  v48 = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  sub_1004507EC(v23);
  v24 = *(_QWORD *)(v48 + 16);
  swift_bridgeObjectRelease(v48);
  v25 = *(_QWORD *)(v4 + 16);
  if (v24)
    return 2 * (v25 != 0);
  if (v25)
    return 1;
  if (qword_10063D4B8 != -1)
    swift_once(&qword_10063D4B8, sub_1001E6CB4);
  v27 = type metadata accessor for Logger(0);
  sub_100012DC4(v27, (uint64_t)qword_10064C850);
  sub_1001EA884(v1);
  sub_1001EA884(v1);
  sub_1001EA884(v1);
  sub_1001EA884(v1);
  sub_1001EA884(v1);
  v28 = sub_1001EA884(v1);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.fault.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(32, -1);
    v46 = swift_slowAlloc(96, -1);
    v48 = v46;
    *(_DWORD *)v31 = 136315650;
    swift_bridgeObjectRetain(v3);
    v33 = Array.description.getter(v32, &type metadata for String);
    v35 = v34;
    swift_bridgeObjectRelease(v3);
    v47 = sub_100027E40(v33, v35, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v35);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain(v2);
    v37 = Array.description.getter(v36, &type metadata for String);
    v39 = v38;
    swift_bridgeObjectRelease(v2);
    v47 = sub_100027E40(v37, v39, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 14, v31 + 22);
    swift_bridgeObjectRelease(v39);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    *(_WORD *)(v31 + 22) = 2080;
    swift_bridgeObjectRetain(v4);
    v41 = Array.description.getter(v40, &type metadata for String);
    v43 = v42;
    swift_bridgeObjectRelease(v4);
    v47 = sub_100027E40(v41, v43, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 24, v31 + 32);
    swift_bridgeObjectRelease(v43);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "AboutYourDevices shouldn't be shown when hasDevicesIssues=false and hasSharedListsIssues=false. {upgradableDevices: %s, unsupportedDevices: %s, participants: %s}", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy(v46, 3, &type metadata for Any[8]);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
    sub_1001EA8E8(v1);
  }

  return 0;
}

void sub_1001E7484()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  NSString v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = objc_msgSend(v1, "systemVersion");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend((id)objc_opt_self(HLPHelpViewController), "helpViewControllerWithIdentifier:version:", v5, v6);

  if (v7)
  {
    objc_msgSend(v7, "setShowTopicViewOnLoad:", 1);
    objc_msgSend(v7, "setDisplayHelpTopicsOnly:", 1);
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setSelectedHelpTopicID:", v8);

    oslog = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v7);
    objc_msgSend(v7, "setModalPresentationStyle:", 2);
    objc_msgSend(v0, "presentViewController:animated:completion:", oslog, 1, 0);

  }
  else
  {
    if (qword_10063D4B8 != -1)
      swift_once(&qword_10063D4B8, sub_1001E6CB4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100012DC4(v9, (uint64_t)qword_10064C850);
    oslog = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Unable to create HLPHelpViewController", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
  }

}

void sub_1001E7748(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  Swift::String v14;
  Swift::String v15;
  void *object;
  NSString v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  _BYTE v28[32];

  sub_100028CFC(a1, (uint64_t)v28);
  v2 = sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
  if (swift_dynamicCast(&v27, v28, &type metadata for Any[8], v2, 6))
  {
    v3 = v27;
    v4 = objc_msgSend(v27, "titleLabel");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "text");

      if (v6)
      {
        v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v9 = v8;

        if ((objc_msgSend((id)objc_opt_self(MFMailComposeViewController), "canSendMail") & 1) != 0)
        {
          v10 = objc_msgSend(objc_allocWithZone((Class)MFMailComposeViewController), "init");
          objc_msgSend(v10, "setMailComposeDelegate:", v1);
          v11 = sub_10002A750((uint64_t *)&unk_100654F80);
          v12 = swift_allocObject(v11, 48, 7);
          *(_OWORD *)(v12 + 16) = xmmword_100520250;
          *(_QWORD *)(v12 + 32) = v7;
          *(_QWORD *)(v12 + 40) = v9;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v10, "setToRecipients:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

          v14._countAndFlagsBits = 0xD000000000000040;
          v15._object = (void *)0x800000010056C5F0;
          v14._object = (void *)0x800000010056C610;
          v15._countAndFlagsBits = 0xD00000000000001ELL;
          object = TTRLocalizedString(_:comment:)(v15, v14)._object;
          v17 = String._bridgeToObjectiveC()();
          objc_msgSend(v10, "setSubject:", v17, swift_bridgeObjectRelease(object).n128_f64[0]);

          v18._countAndFlagsBits = 0xD00000000000003FLL;
          v19._object = (void *)0x800000010056C660;
          v18._object = (void *)0x800000010056C710;
          v19._countAndFlagsBits = 0x10000000000000ACLL;
          v20 = TTRLocalizedString(_:comment:)(v19, v18)._object;
          v21 = String._bridgeToObjectiveC()();
          objc_msgSend(v10, "setMessageBody:isHTML:", v21, 0, swift_bridgeObjectRelease(v20).n128_f64[0]);

          objc_msgSend(v1, "presentViewController:animated:completion:", v10, 1, 0);
          return;
        }
        swift_bridgeObjectRelease(v9);
        if (qword_10063D4B8 != -1)
          swift_once(&qword_10063D4B8, sub_1001E6CB4);
        v22 = type metadata accessor for Logger(0);
        v23 = sub_100012DC4(v22, (uint64_t)qword_10064C850);
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Mail services are not available, unable to send email.", v26, 2u);
          swift_slowDealloc(v26, -1, -1);
        }

      }
    }

  }
}

void sub_1001E7ABC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  char **v44;
  void *v45;
  void *v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  id v51;
  NSString v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  void *object;
  uint64_t inited;
  void *v60;
  id v61;
  unint64_t v62;
  id v63;
  NSString v64;
  Class isa;
  id v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  Swift::String v81;
  Swift::String v82;
  void *v83;
  NSString v84;
  id v85;
  uint64_t v86;
  void *v87;
  void *v88;
  void *v89;
  id v90;
  Swift::String v91;
  Swift::String v92;
  void *v93;
  NSString v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSString v106;
  id v107;
  id v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  Swift::String v113;
  Swift::String v114;
  void *v115;
  NSString v116;
  id v117;
  id v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  NSString v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  Swift::String v129;
  Swift::String v130;
  void *v131;
  uint64_t v132;
  id v133;
  unint64_t v134;
  id v135;
  NSString v136;
  Class v137;
  id v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  id v144;
  id v145;
  uint64_t v146;
  void *v147;
  void *v148;
  id v149;
  id v150;
  uint64_t v151;
  void *v152;
  void *v153;
  id v154;
  Swift::String v155;
  Swift::String v156;
  void *v157;
  id v158;
  uint64_t v159;
  void *v160;
  void *v161;
  void *v162;
  id v163;
  Swift::String v164;
  Swift::String v165;
  void *v166;
  void *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  uint64_t v175;
  Class v176;
  id v177;
  void *v178;
  void *v179;
  void *v180;
  char **v181;
  void *v182;
  id v183;
  id v184;
  void *v185;
  void *v186;
  id v187;
  Swift::String v188;
  Swift::String v189;
  NSString v190;
  id v191;
  uint64_t v192;
  void *v193;
  void *v194;
  void *v195;
  id v196;
  Swift::String v197;
  Swift::String v198;
  NSString v199;
  void *v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  id v204;
  Class v205;
  id v206;
  uint64_t v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  id v213;
  double v214;
  CGFloat v215;
  double v216;
  CGFloat v217;
  double v218;
  CGFloat v219;
  double v220;
  CGFloat v221;
  double v222;
  char **v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  id v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  unint64_t v234;
  id v235;
  void *v236;
  double v237;
  uint64_t v238;
  id v239;
  uint64_t v240;
  id v241;
  void *v242;
  double v243;
  uint64_t v244;
  id v245;
  uint64_t v246;
  unint64_t v247;
  id i;
  void *v249;
  double v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  id v254;
  void *v255;
  double v256;
  uint64_t v257;
  id v258;
  uint64_t v259;
  id v260;
  void *v261;
  uint64_t v262;
  id v263;
  void *v264;
  uint64_t v265;
  void *v266;
  id v267;
  id v268;
  id v269;
  id v270;
  void *v271;
  id v272;
  id v273;
  id v274;
  id v275;
  void *v276;
  id v277;
  id v278;
  id v279;
  id v280;
  void *v281;
  id v282;
  id v283;
  id v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  void *v288;
  Class v289;
  id v290;
  uint64_t v291;
  id v292;
  void *v293;
  uint64_t v294;
  Swift::String v295;
  Swift::String v296;
  Swift::String v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  NSString *v303;
  id v304;
  unint64_t v305;
  id v306;
  NSString v307;
  Class v308;
  id v309;
  id v310;
  id v311;
  void *v312;
  id v313;
  uint64_t v314;
  uint64_t v315;
  char **v316;
  _QWORD *v317;
  id v318;
  Swift::String v319;
  Swift::String v320;
  void *v321;
  NSString v322;
  id v323;
  Swift::String v324;
  Swift::String v325;
  void *v326;
  NSString v327;
  id v328;
  id v329;
  uint64_t v330;
  uint64_t v331;
  NSString *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  void *v337;
  id v338;
  char **v339;
  void *v340;
  void *v341;
  int v342;
  uint64_t v343;
  uint64_t v344;
  NSString *v345;
  void *v346;
  void *v347;
  uint64_t v348;
  id v349;
  uint64_t v350;
  unint64_t v351;
  _QWORD *v352;
  UIAccessibilityTraits v353;
  _QWORD *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  id v359;
  id v360;
  char **v361;
  uint64_t v362;
  char *v363;
  char v364[72];
  char v365[40];
  char v366[72];
  uint64_t v367;
  char v368[40];
  char v369[72];
  objc_super v370;
  id v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  char v375;
  _QWORD *v376;
  _QWORD *v377;
  _QWORD *v378;
  CGRect v379;

  v3 = v2;
  v370.receiver = v2;
  v370.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v370, "viewDidLoad");
  v4 = *(_QWORD **)&v2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_presenter];
  v5 = (void *)v4[6];
  v6 = v4[7];
  v7 = v4[8];
  v8 = v4[9];
  v9 = v4[10];
  v10 = v4[11];
  v11 = v4[12];
  if (v5)
  {
    v12 = v4[9] & 1;
    v13 = (v8 >> 8) & 1;
    v14 = v5;
    v15 = v6;
    v16 = v7;
    v17 = (_QWORD *)v9;
    v18 = (_QWORD *)v10;
    v19 = (_QWORD *)v11;
  }
  else
  {
    v357 = v4[12];
    v359 = (id)v4[11];
    v362 = v4[10];
    v20 = v4[9];
    v21 = v4[8];
    v22 = v4[7];
    if (qword_10063D7B8 != -1)
      swift_once(&qword_10063D7B8, sub_100416D54);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100012DC4(v23, (uint64_t)qword_10065BF48);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Should not enter TTRIAboutYourDevicesPresenter if there's no eligible account", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    v14 = objc_msgSend((id)objc_opt_self(REMAccount), "newObjectID");
    v15 = 0;
    LODWORD(v12) = 0;
    LODWORD(v13) = 0;
    v17 = _swiftEmptyArrayStorage;
    v16 = 0xE000000000000000;
    v18 = _swiftEmptyArrayStorage;
    v19 = _swiftEmptyArrayStorage;
    v5 = 0;
    v6 = v22;
    v7 = v21;
    v8 = v20;
    v10 = (uint64_t)v359;
    v9 = v362;
    v11 = v357;
  }
  v352 = v17;
  v371 = v14;
  v372 = v15;
  v373 = v16;
  v374 = v12;
  v375 = v13;
  v376 = v17;
  v377 = v18;
  v378 = v19;
  v342 = v12;
  v28 = (_DWORD)v13 == 0;
  v29 = 256;
  if (v28)
    v29 = 0;
  v30 = v29 | v12;
  v31 = &v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel];
  v360 = *(id *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel];
  v363 = v3;
  v32 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel + 16];
  v358 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel + 8];
  v33 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel + 24];
  v34 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel + 32];
  v35 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel + 40];
  v36 = *((_QWORD *)v31 + 6);
  *(_QWORD *)v31 = v14;
  *((_QWORD *)v31 + 1) = v15;
  v333 = v15;
  *((_QWORD *)v31 + 2) = v16;
  *((_QWORD *)v31 + 3) = v30;
  *((_QWORD *)v31 + 4) = v17;
  *((_QWORD *)v31 + 5) = v18;
  *((_QWORD *)v31 + 6) = v19;
  sub_1000B02B0(v5, v6, v7, v8, v9, v10, v11);
  v37 = v14;
  v351 = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  v355 = (uint64_t)v18;
  swift_bridgeObjectRetain(v18);
  v354 = v19;
  swift_bridgeObjectRetain(v19);
  sub_1000B0308(v360, v358, v32, v33, v34, v35, v36);
  v38 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v39 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_titleLabel;
  v40 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_titleLabel];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_titleLabel] = v38;

  v41 = (void *)objc_opt_self(UIFont);
  v42 = objc_msgSend(v41, "systemFontOfSize:weight:", 34.0, UIFontWeightBold);
  v43 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleTitle1);
  v44 = (char **)objc_msgSend(v43, "scaledFontForFont:", v42);

  v45 = *(void **)&v363[v39];
  if (!v45)
  {
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  v341 = v37;
  objc_msgSend(v45, "setFont:", v44);
  v46 = *(void **)&v363[v39];
  if (!v46)
  {
LABEL_191:
    __break(1u);
    goto LABEL_192;
  }
  v339 = v44;
  v340 = v42;
  v361 = (char **)v41;
  objc_msgSend(v46, "setNumberOfLines:", 0);
  v47._countAndFlagsBits = 0xD00000000000001FLL;
  v48._countAndFlagsBits = 0xD000000000000022;
  v47._object = (void *)0x800000010056BE70;
  v48._object = (void *)0x800000010056BE90;
  v49 = TTRLocalizedString(_:comment:)(v47, v48);
  v344 = v39;
  v50 = *(void **)&v363[v39];
  if (!v50)
  {
LABEL_192:
    __break(1u);
    goto LABEL_193;
  }
  v51 = v50;
  v52 = String._bridgeToObjectiveC()();
  objc_msgSend(v51, "setText:", v52, swift_bridgeObjectRelease(v49._object).n128_f64[0]);

  v53._countAndFlagsBits = 0xD00000000000006CLL;
  v54._object = (void *)0x800000010056BEC0;
  v53._object = (void *)0x800000010056BEE0;
  v54._countAndFlagsBits = 0xD00000000000001ELL;
  v55 = TTRLocalizedString(_:comment:)(v54, v53);
  v56._countAndFlagsBits = 0xD00000000000005ALL;
  v56._object = (void *)0x800000010056BF50;
  v57._countAndFlagsBits = 0x6E6174726F706D49;
  v57._object = (void *)0xEA00000000003A74;
  object = TTRLocalizedString(_:comment:)(v57, v56)._object;
  v350 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v350, v369);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v60 = (void *)objc_opt_self(UIColor);
  v345 = NSForegroundColorAttributeName;
  v349 = v60;
  v61 = objc_msgSend(v60, "ttr_systemRedColor");
  v348 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v348;
  *(_QWORD *)(inited + 40) = v61;
  v62 = sub_100350498(inited);
  v63 = objc_allocWithZone((Class)NSAttributedString);
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0);
  sub_1000D2BEC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v66 = objc_msgSend(v63, "initWithString:attributes:", v64, isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

  sub_100005ED8(0, &qword_1006452E0, NSAttributedString_ptr);
  v67 = sub_100350498((uint64_t)_swiftEmptyArrayStorage);
  v356 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v68 = swift_initStackObject(v356, v368);
  *(_OWORD *)(v68 + 16) = xmmword_100521140;
  *(_QWORD *)(v68 + 32) = v66;
  v367 = v68;
  specialized Array._endMutation()(v68);
  v338 = v66;
  v69 = static NSAttributedString.formattedString(format:formatAttributes:attributedStringsToInsert:)(v55._countAndFlagsBits, v55._object, v67, v367);
  swift_bridgeObjectRelease(v367);
  swift_bridgeObjectRelease(v55._object);
  swift_bridgeObjectRelease(v67);
  v70 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v44 = v361;
  v71 = objc_msgSend(v361, "_preferredFontForTextStyle:variant:", UIFontTextStyleBody, 1024);
  objc_msgSend(v70, "setFont:", v71);

  objc_msgSend(v70, "setNumberOfLines:", 0);
  v72 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceSubtitle;
  v73 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceSubtitle];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceSubtitle] = v70;

  v74 = *(void **)&v363[v72];
  if (!v74)
  {
LABEL_193:
    __break(1u);
    goto LABEL_194;
  }
  v336 = v72;
  v337 = (void *)v69;
  objc_msgSend(v74, "setAttributedText:", v69);
  v75 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v76 = objc_msgSend(v361, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v75, "setFont:", v76);

  objc_msgSend(v75, "setNumberOfLines:", 0);
  v77 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceExplanation;
  v78 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceExplanation];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceExplanation] = v75;

  v335 = v77;
  v79 = *(void **)&v363[v77];
  if (!v79)
  {
LABEL_194:
    __break(1u);
    goto LABEL_195;
  }
  v80 = v79;
  v81._countAndFlagsBits = 0x100000000000008FLL;
  v82._countAndFlagsBits = 0xD000000000000048;
  v81._object = (void *)0x800000010056BFB0;
  v82._object = (void *)0x800000010056C040;
  v83 = TTRLocalizedString(_:comment:)(v81, v82)._object;
  v84 = String._bridgeToObjectiveC()();
  objc_msgSend(v80, "setText:", v84, swift_bridgeObjectRelease(v83).n128_f64[0]);

  v85 = sub_1001EA3F8();
  v86 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceLearnMore;
  v87 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceLearnMore];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceLearnMore] = v85;

  v88 = *(void **)&v363[v86];
  if (!v88)
  {
LABEL_195:
    __break(1u);
    goto LABEL_196;
  }
  objc_msgSend(v88, "addTarget:action:forControlEvents:", v363, "didTapDevicesLearnMore:", 64);
  v89 = *(void **)&v363[v86];
  if (!v89)
  {
LABEL_196:
    __break(1u);
    goto LABEL_197;
  }
  v90 = v89;
  v91._countAndFlagsBits = 0xD000000000000058;
  v91._object = (void *)0x800000010056C090;
  v92._countAndFlagsBits = 0x6F4D206E7261654CLL;
  v92._object = (void *)0xAD0000A680E26572;
  v93 = TTRLocalizedString(_:comment:)(v92, v91)._object;
  v94 = String._bridgeToObjectiveC()();
  objc_msgSend(v90, "setTitle:forState:", v94, 0, swift_bridgeObjectRelease(v93).n128_f64[0]);

  v343 = v86;
  v95 = *(void **)&v363[v86];
  if (!v95)
  {
LABEL_197:
    __break(1u);
    goto LABEL_198;
  }
  v353 = UIAccessibilityTraitLink;
  objc_msgSend(v95, "setAccessibilityTraits:");
  v96 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v97 = objc_msgSend(v361, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v96, "setFont:", v97);

  objc_msgSend(v96, "setNumberOfLines:", 0);
  v98 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceList;
  v99 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceList];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceList] = v96;

  v334 = v98;
  v100 = *(void **)&v363[v98];
  if (!v100)
  {
LABEL_198:
    __break(1u);
    goto LABEL_199;
  }
  v367 = (uint64_t)v352;
  swift_bridgeObjectRetain(v352);
  v101 = v100;
  v102 = sub_10002A750(&qword_1006466D0);
  v103 = sub_1000923A8();
  BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v102, v103);
  v105 = v104;
  swift_bridgeObjectRelease(v352);
  v106 = String._bridgeToObjectiveC()();
  objc_msgSend(v101, "setText:", v106, swift_bridgeObjectRelease(v105).n128_f64[0]);

  v107 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v108 = objc_msgSend(v361, "_preferredFontForTextStyle:variant:", UIFontTextStyleBody, 1024);
  objc_msgSend(v107, "setFont:", v108);

  objc_msgSend(v107, "setNumberOfLines:", 0);
  v109 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedSubtitle;
  v110 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedSubtitle];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedSubtitle] = v107;

  v331 = v109;
  v111 = *(void **)&v363[v109];
  if (!v111)
  {
LABEL_199:
    __break(1u);
    goto LABEL_200;
  }
  v112 = v111;
  v113._countAndFlagsBits = 0x1000000000000057;
  v114._object = (void *)0x800000010056C0F0;
  v113._object = (void *)0x800000010056C120;
  v114._countAndFlagsBits = 0x1000000000000021;
  v115 = TTRLocalizedString(_:comment:)(v114, v113)._object;
  v116 = String._bridgeToObjectiveC()();
  objc_msgSend(v112, "setText:", v116, swift_bridgeObjectRelease(v115).n128_f64[0]);

  v117 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v118 = objc_msgSend(v361, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v117, "setFont:", v118);

  objc_msgSend(v117, "setNumberOfLines:", 0);
  v119 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedDeviceList;
  v120 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedDeviceList];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedDeviceList] = v117;

  v330 = v119;
  v121 = *(void **)&v363[v119];
  if (!v121)
  {
LABEL_200:
    __break(1u);
    goto LABEL_201;
  }
  v367 = v355;
  swift_bridgeObjectRetain(v355);
  v122 = v121;
  BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v102, v103);
  v124 = v123;
  swift_bridgeObjectRelease(v355);
  v125 = String._bridgeToObjectiveC()();
  objc_msgSend(v122, "setText:", v125, swift_bridgeObjectRelease(v124).n128_f64[0]);

  v126._countAndFlagsBits = 0xD000000000000020;
  v127._countAndFlagsBits = 0xD000000000000072;
  v126._object = (void *)0x800000010056C180;
  v127._object = (void *)0x800000010056C1B0;
  v128 = TTRLocalizedString(_:comment:)(v126, v127);
  v129._countAndFlagsBits = 0xD000000000000058;
  v129._object = (void *)0x800000010056C230;
  v130._countAndFlagsBits = 0x6E6174726F706D49;
  v130._object = (void *)0xEA00000000003A74;
  v131 = TTRLocalizedString(_:comment:)(v130, v129)._object;
  v132 = swift_initStackObject(v350, v366);
  *(_OWORD *)(v132 + 16) = xmmword_100520250;
  *(_QWORD *)(v132 + 32) = v345;
  v332 = v345;
  v133 = objc_msgSend(v349, "ttr_systemRedColor");
  *(_QWORD *)(v132 + 64) = v348;
  *(_QWORD *)(v132 + 40) = v133;
  v134 = sub_100350498(v132);
  v135 = objc_allocWithZone((Class)NSAttributedString);
  v136 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v131);
  v137 = Dictionary._bridgeToObjectiveC()().super.isa;
  v138 = objc_msgSend(v135, "initWithString:attributes:", v136, v137, swift_bridgeObjectRelease(v134).n128_f64[0]);

  v139 = sub_100350498((uint64_t)_swiftEmptyArrayStorage);
  v140 = swift_initStackObject(v356, v365);
  *(_OWORD *)(v140 + 16) = xmmword_100521140;
  *(_QWORD *)(v140 + 32) = v138;
  v367 = v140;
  specialized Array._endMutation()(v140);
  v141 = v367;
  v142 = v138;
  v143 = static NSAttributedString.formattedString(format:formatAttributes:attributedStringsToInsert:)(v128._countAndFlagsBits, v128._object, v139, v141);
  swift_bridgeObjectRelease(v141);
  swift_bridgeObjectRelease(v128._object);
  swift_bridgeObjectRelease(v139);
  v144 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v145 = objc_msgSend(v361, "_preferredFontForTextStyle:variant:", UIFontTextStyleBody, 1024);
  v44 = &selRef_supportsAttachments;
  objc_msgSend(v144, "setFont:", v145);

  objc_msgSend(v144, "setNumberOfLines:", 0);
  v146 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle;
  v147 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle] = v144;

  v148 = *(void **)&v363[v146];
  if (!v148)
  {
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  objc_msgSend(v148, "setAttributedText:", v143);
  v149 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v150 = objc_msgSend(v361, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v149, "setFont:", v150);

  objc_msgSend(v149, "setNumberOfLines:", 0);
  v151 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation;
  v152 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation] = v149;

  v153 = *(void **)&v363[v151];
  if (!v153)
  {
LABEL_202:
    __break(1u);
    goto LABEL_203;
  }
  v154 = v153;
  v155._countAndFlagsBits = 0x100000000000007DLL;
  v156._countAndFlagsBits = 0xD00000000000004DLL;
  v155._object = (void *)0x800000010056C290;
  v156._object = (void *)0x800000010056C310;
  v157 = TTRLocalizedString(_:comment:)(v155, v156)._object;
  v44 = (char **)String._bridgeToObjectiveC()();
  objc_msgSend(v154, "setText:", v44, swift_bridgeObjectRelease(v157).n128_f64[0]);

  v158 = sub_1001EA3F8();
  v159 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore;
  v160 = *(void **)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore];
  *(_QWORD *)&v363[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore] = v158;

  v161 = *(void **)&v363[v159];
  if (!v161)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  objc_msgSend(v161, "addTarget:action:forControlEvents:", v363, "didTapSharedListsLearnMore:", 64);
  v162 = *(void **)&v363[v159];
  if (!v162)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  v163 = v162;
  v164._countAndFlagsBits = 0xD00000000000005DLL;
  v164._object = (void *)0x800000010056C360;
  v165._countAndFlagsBits = 0x6F4D206E7261654CLL;
  v165._object = (void *)0xAD0000A680E26572;
  v166 = TTRLocalizedString(_:comment:)(v165, v164)._object;
  v44 = (char **)String._bridgeToObjectiveC()();
  objc_msgSend(v163, "setTitle:forState:", v44, 0, swift_bridgeObjectRelease(v166).n128_f64[0]);

  v167 = *(void **)&v363[v159];
  if (!v167)
  {
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  objc_msgSend(v167, "setAccessibilityTraits:", v353);
  v168 = v363;
  swift_bridgeObjectRetain(v354);
  v170 = (uint64_t)sub_1001EA598(v169, (uint64_t)v168);
  swift_bridgeObjectRelease(v354);

  v347 = (void *)v143;
  if ((unint64_t)v170 >> 62)
  {
    if (v170 < 0)
      v230 = v170;
    else
      v230 = v170 & 0xFFFFFFFFFFFFFF8;
    v172 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    swift_bridgeObjectRetain(v170);
    v173 = _bridgeCocoaArray<A>(_:)(v230, v172);
    swift_bridgeObjectRelease(v170);
  }
  else
  {
    swift_bridgeObjectRetain(v170);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v171);
    v172 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v173 = v170;
  }
  swift_bridgeObjectRelease(v170);
  v174 = objc_allocWithZone((Class)UIStackView);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v175 = v172;
  v176 = Array._bridgeToObjectiveC()().super.isa;
  v177 = objc_msgSend(v174, "initWithArrangedSubviews:", v176, swift_bridgeObjectRelease(v173).n128_f64[0]);

  v44 = (char **)OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients;
  v178 = *(void **)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients];
  *(_QWORD *)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients] = v177;

  v179 = *(char **)((char *)v44 + (_QWORD)v168);
  if (!v179)
    goto LABEL_206;
  v346 = v142;
  objc_msgSend(v179, "setAxis:", 1);
  v180 = *(char **)((char *)v44 + (_QWORD)v168);
  if (!v180)
  {
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  v181 = &selRef_supportsAttachments;
  objc_msgSend(v180, "setAlignment:", 1);
  v182 = *(char **)((char *)v44 + (_QWORD)v168);
  if (!v182)
  {
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  objc_msgSend(v182, "setSpacing:", 6.0);
  v183 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v184 = objc_msgSend(v361, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v183, "setFont:", v184);

  objc_msgSend(v183, "setNumberOfLines:", 0);
  v44 = (char **)OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLabel;
  v185 = *(void **)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLabel];
  *(_QWORD *)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLabel] = v183;

  v186 = *(char **)((char *)v44 + (_QWORD)v168);
  if (!v186)
  {
LABEL_209:
    __break(1u);
    goto LABEL_210;
  }
  v187 = v186;
  v188._countAndFlagsBits = 0x1000000000000053;
  v189._countAndFlagsBits = 0xD000000000000062;
  v188._object = (void *)0x800000010056C3C0;
  v189._object = (void *)0x800000010056C420;
  v44 = (char **)TTRLocalizedString(_:comment:)(v188, v189)._object;
  v190 = String._bridgeToObjectiveC()();
  objc_msgSend(v187, "setText:", v190, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v191 = sub_1001EA3F8();
  v192 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLearnMore;
  v193 = *(void **)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLearnMore];
  *(_QWORD *)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLearnMore] = v191;

  v194 = *(void **)&v168[v192];
  if (!v194)
  {
LABEL_210:
    __break(1u);
    goto LABEL_211;
  }
  objc_msgSend(v194, "addTarget:action:forControlEvents:", v168, "didTapMacOSUnavailableLearnMore:", 64);
  v195 = *(void **)&v168[v192];
  if (!v195)
  {
LABEL_211:
    __break(1u);
    goto LABEL_212;
  }
  v196 = v195;
  v197._countAndFlagsBits = 0xD00000000000005FLL;
  v197._object = (void *)0x800000010056C490;
  v198._countAndFlagsBits = 0x6F4D206E7261654CLL;
  v198._object = (void *)0xAD0000A680E26572;
  v44 = (char **)TTRLocalizedString(_:comment:)(v198, v197)._object;
  v199 = String._bridgeToObjectiveC()();
  objc_msgSend(v196, "setTitle:forState:", v199, 0, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v200 = *(void **)&v168[v192];
  if (!v200)
  {
LABEL_212:
    __break(1u);
    goto LABEL_213;
  }
  objc_msgSend(v200, "setAccessibilityTraits:", v353);
  v201 = swift_allocObject(v356, 40, 7);
  *(_OWORD *)(v201 + 16) = xmmword_100521140;
  v202 = *(void **)&v363[v344];
  if (!v202)
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  *(_QWORD *)(v201 + 32) = v202;
  v367 = v201;
  specialized Array._endMutation()(v201);
  v203 = v367;
  v44 = (char **)objc_allocWithZone((Class)UIStackView);
  v204 = v202;
  v205 = Array._bridgeToObjectiveC()().super.isa;
  v206 = objc_msgSend(v44, "initWithArrangedSubviews:", v205, swift_bridgeObjectRelease(v203).n128_f64[0]);

  v207 = OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_pageStackView;
  v208 = *(void **)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_pageStackView];
  *(_QWORD *)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_pageStackView] = v206;

  v209 = *(void **)&v168[v207];
  if (!v209)
  {
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  objc_msgSend(v209, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v210 = *(void **)&v168[v207];
  if (!v210)
  {
LABEL_215:
    __break(1u);
    goto LABEL_216;
  }
  objc_msgSend(v210, "setAxis:", 1);
  v211 = *(void **)&v168[v207];
  if (!v211)
  {
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
    goto LABEL_223;
  }
  objc_msgSend(v211, "setAlignment:", 1);
  v44 = *(char ***)&v168[v207];
  if (!v44)
    goto LABEL_217;
  v212 = (void *)objc_opt_self(UIScreen);
  v44 = v44;
  v213 = objc_msgSend(v212, "mainScreen");
  objc_msgSend(v213, "bounds");
  v215 = v214;
  v217 = v216;
  v219 = v218;
  v221 = v220;

  v379.origin.x = v215;
  v379.origin.y = v217;
  v379.size.width = v219;
  v379.size.height = v221;
  if (CGRectGetHeight(v379) > 568.0)
    v222 = 15.0;
  else
    v222 = 11.0;
  v223 = &selRef_supportsAttachments;
  v224 = objc_msgSend(v44, "arrangedSubviews");
  v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v224, v175);

  if ((unint64_t)v225 >> 62)
  {
    if (v225 < 0)
      v231 = v225;
    else
      v231 = v225 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v225);
    v226 = _CocoaArrayWrapper.endIndex.getter(v231);
    swift_bridgeObjectRelease(v225);
    if (v226)
    {
LABEL_46:
      v227 = v226 - 1;
      if (__OFSUB__(v226, 1))
      {
        __break(1u);
      }
      else if ((v225 & 0xC000000000000001) == 0)
      {
        if ((v227 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v227 < *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v228 = *(id *)(v225 + 8 * v227 + 32);
LABEL_51:
          v229 = v228;
          swift_bridgeObjectRelease(v225);
          objc_msgSend(v44, "setCustomSpacing:afterView:", v229, v222);

          goto LABEL_61;
        }
        __break(1u);
        goto LABEL_75;
      }
      v228 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v227, v225);
      goto LABEL_51;
    }
  }
  else
  {
    v226 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v226)
      goto LABEL_46;
  }
  swift_bridgeObjectRelease(v225);
LABEL_61:
  if (sub_1001E6D44() == 1)
    goto LABEL_148;
  if (!*(_QWORD *)&v363[v336])
  {
LABEL_223:

    __break(1u);
    goto LABEL_224;
  }
  v181 = &selRef_supportsAttachments;
  objc_msgSend(v44, "addArrangedSubview:");
  v232 = objc_msgSend(v44, "arrangedSubviews");
  v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v232, v175);

  if (!((unint64_t)v225 >> 62))
  {
    v233 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v233)
      goto LABEL_65;
    goto LABEL_79;
  }
LABEL_75:
  if (v225 < 0)
    v238 = v225;
  else
    v238 = v225 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v225);
  v233 = _CocoaArrayWrapper.endIndex.getter(v238);
  swift_bridgeObjectRelease(v225);
  if (v233)
  {
LABEL_65:
    v234 = v233 - 1;
    if (__OFSUB__(v233, 1))
    {
      __break(1u);
    }
    else if ((v225 & 0xC000000000000001) == 0)
    {
      if ((v234 & 0x8000000000000000) != 0)
      {
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
      if (v234 >= *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_109:
        __break(1u);
        goto LABEL_110;
      }
      v235 = *(id *)(v225 + 8 * v234 + 32);
      goto LABEL_70;
    }
    v235 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v234, v225);
LABEL_70:
    v236 = v235;
    swift_bridgeObjectRelease(v225);
    objc_msgSend(v44, "setCustomSpacing:afterView:", v236, 6.0);

    goto LABEL_80;
  }
LABEL_79:
  *(_QWORD *)&v237 = swift_bridgeObjectRelease(v225).n128_u64[0];
LABEL_80:
  if (!*(_QWORD *)&v363[v335])
  {
LABEL_224:

    __break(1u);
    goto LABEL_225;
  }
  objc_msgSend(v44, "addArrangedSubview:", v237);
  if (!*(_QWORD *)&v363[v343])
  {
LABEL_225:

    __break(1u);
    goto LABEL_226;
  }
  objc_msgSend(v44, "addArrangedSubview:");
  v239 = objc_msgSend(v44, "arrangedSubviews");
  v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v239, v175);

  if ((unint64_t)v225 >> 62)
  {
    if (v225 < 0)
      v244 = v225;
    else
      v244 = v225 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v225);
    v240 = _CocoaArrayWrapper.endIndex.getter(v244);
    swift_bridgeObjectRelease(v225);
    if (v240)
      goto LABEL_84;
  }
  else
  {
    v240 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v240)
    {
LABEL_84:
      v234 = v240 - 1;
      if (!__OFSUB__(v240, 1))
      {
        if ((v225 & 0xC000000000000001) == 0)
        {
          if ((v234 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v234 < *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v241 = *(id *)(v225 + 8 * v234 + 32);
LABEL_89:
            v242 = v241;
            swift_bridgeObjectRelease(v225);
            objc_msgSend(v44, "setCustomSpacing:afterView:", v242, 22.0);

            goto LABEL_95;
          }
          __break(1u);
          goto LABEL_127;
        }
LABEL_110:
        v241 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v234, v225);
        goto LABEL_89;
      }
      __break(1u);
      goto LABEL_108;
    }
  }
  *(_QWORD *)&v243 = swift_bridgeObjectRelease(v225).n128_u64[0];
LABEL_95:
  if (*(_QWORD *)&v363[v334])
  {
    objc_msgSend(v44, "addArrangedSubview:", v243);
    if (!*(_QWORD *)(v355 + 16))
      goto LABEL_134;
    v245 = objc_msgSend(v44, "arrangedSubviews");
    v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v245, v175);

    if ((unint64_t)v225 >> 62)
    {
      if (v225 < 0)
        v251 = v225;
      else
        v251 = v225 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v225);
      v246 = _CocoaArrayWrapper.endIndex.getter(v251);
      swift_bridgeObjectRelease(v225);
      if (v246)
        goto LABEL_99;
    }
    else
    {
      v246 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v246)
      {
LABEL_99:
        v247 = v246 - 1;
        if (__OFSUB__(v246, 1))
          goto LABEL_178;
        if ((v225 & 0xC000000000000001) != 0)
          goto LABEL_179;
        if ((v247 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_181;
        }
        if (v247 >= *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_182;
        for (i = *(id *)(v225 + 8 * v247 + 32);
              ;
              i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v247, v225))
        {
          v249 = i;
          swift_bridgeObjectRelease(v225);
          objc_msgSend(v44, "setCustomSpacing:afterView:", v249, 22.0);

LABEL_116:
          if (!*(_QWORD *)&v363[v331])
            goto LABEL_227;
          objc_msgSend(v44, v181[10], v250);
          v252 = objc_msgSend(v44, v223[67]);
          v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v252, v175);

          if ((unint64_t)v225 >> 62)
          {
LABEL_127:
            if (v225 < 0)
              v257 = v225;
            else
              v257 = v225 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v225);
            v253 = _CocoaArrayWrapper.endIndex.getter(v257);
            swift_bridgeObjectRelease(v225);
            if (v253)
            {
LABEL_119:
              v247 = v253 - 1;
              if (__OFSUB__(v253, 1))
              {
LABEL_181:
                __break(1u);
LABEL_182:
                __break(1u);
              }
              else if ((v225 & 0xC000000000000001) == 0)
              {
                if ((v247 & 0x8000000000000000) != 0)
                {
                  __break(1u);
LABEL_185:
                  __break(1u);
                  goto LABEL_186;
                }
                if (v247 >= *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_185;
                v254 = *(id *)(v225 + 8 * v247 + 32);
                goto LABEL_124;
              }
              v254 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v247, v225);
LABEL_124:
              v255 = v254;
              swift_bridgeObjectRelease(v225);
              objc_msgSend(v44, "setCustomSpacing:afterView:", v255, 6.0);

              goto LABEL_132;
            }
          }
          else
          {
            v253 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v253)
              goto LABEL_119;
          }
          *(_QWORD *)&v256 = swift_bridgeObjectRelease(v225).n128_u64[0];
LABEL_132:
          if (!*(_QWORD *)&v363[v330])
            goto LABEL_228;
          objc_msgSend(v44, v181[10], v256);
LABEL_134:
          if (sub_1001E6D44() == 2)
          {
            v258 = objc_msgSend(v44, v223[67]);
            v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v258, v175);

            if (!((unint64_t)v225 >> 62))
            {
              v259 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v259)
                goto LABEL_137;
LABEL_147:
              swift_bridgeObjectRelease(v225);
LABEL_148:
              sub_1001E9F24(v44, (uint64_t)v168);
              goto LABEL_149;
            }
            if (v225 < 0)
              v262 = v225;
            else
              v262 = v225 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v225);
            v259 = _CocoaArrayWrapper.endIndex.getter(v262);
            swift_bridgeObjectRelease(v225);
            if (!v259)
              goto LABEL_147;
LABEL_137:
            v247 = v259 - 1;
            if (!__OFSUB__(v259, 1))
            {
              if ((v225 & 0xC000000000000001) == 0)
              {
                if ((v247 & 0x8000000000000000) != 0)
                {
                  __break(1u);
LABEL_189:
                  __break(1u);
                  goto LABEL_190;
                }
                if (v247 >= *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_189;
                v260 = *(id *)(v225 + 8 * v247 + 32);
                goto LABEL_142;
              }
LABEL_187:
              v260 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v247, v225);
LABEL_142:
              v261 = v260;
              swift_bridgeObjectRelease(v225);
              objc_msgSend(v44, "setCustomSpacing:afterView:", v261, 22.0);

              goto LABEL_148;
            }
LABEL_186:
            __break(1u);
            goto LABEL_187;
          }
LABEL_149:
          v263 = objc_msgSend(v168, "contentView");
          if (!*(_QWORD *)&v168[v207])
            goto LABEL_218;
          v264 = v263;
          objc_msgSend(v263, "addSubview:");

          v265 = swift_allocObject(v356, 64, 7);
          *(_OWORD *)(v265 + 16) = xmmword_100520050;
          v266 = *(void **)&v168[v207];
          if (!v266)
            goto LABEL_219;
          v267 = objc_msgSend(v266, "leadingAnchor");
          v268 = objc_msgSend(v168, "contentView");
          v269 = objc_msgSend(v268, "leadingAnchor");

          v223 = &selRef_contact;
          v270 = objc_msgSend(v267, "constraintEqualToAnchor:", v269);

          *(_QWORD *)(v265 + 32) = v270;
          v271 = *(void **)&v168[v207];
          if (!v271)
            goto LABEL_220;
          v272 = objc_msgSend(v271, "trailingAnchor");
          v273 = objc_msgSend(v168, "contentView");
          v274 = objc_msgSend(v273, "trailingAnchor");

          v275 = objc_msgSend(v272, "constraintEqualToAnchor:", v274);
          *(_QWORD *)(v265 + 40) = v275;
          v276 = *(void **)&v168[v207];
          if (!v276)
            goto LABEL_221;
          v277 = objc_msgSend(v276, "topAnchor");
          v278 = objc_msgSend(v168, "contentView");
          v279 = objc_msgSend(v278, "topAnchor");

          v280 = objc_msgSend(v277, "constraintEqualToAnchor:", v279);
          *(_QWORD *)(v265 + 48) = v280;
          v281 = *(void **)&v168[v207];
          if (!v281)
            goto LABEL_222;
          v282 = objc_msgSend(v281, "bottomAnchor");
          v283 = objc_msgSend(v168, "contentView");
          v284 = objc_msgSend(v283, "bottomAnchor");

          v285 = objc_msgSend(v282, "constraintEqualToAnchor:", v284);
          *(_QWORD *)(v265 + 56) = v285;
          v367 = v265;
          specialized Array._endMutation()(v286);
          v287 = v367;
          v288 = (void *)objc_opt_self(NSLayoutConstraint);
          sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
          v289 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v288, "activateConstraints:", v289, swift_bridgeObjectRelease(v287).n128_f64[0]);

          v207 = v355;
          v181 = (char **)0xD00000000000001ELL;
          if (!v342)
            goto LABEL_169;
          v290 = objc_msgSend(v44, "arrangedSubviews", swift_bridgeObjectRetain(v351).n128_f64[0]);
          v225 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v290, v175);

          if ((unint64_t)v225 >> 62)
          {
            if (v225 < 0)
              v294 = v225;
            else
              v294 = v225 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v225);
            v291 = _CocoaArrayWrapper.endIndex.getter(v294);
            swift_bridgeObjectRelease(v225);
            if (!v291)
            {
LABEL_167:
              swift_bridgeObjectRelease(v225);
              goto LABEL_168;
            }
          }
          else
          {
            v291 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v291)
              goto LABEL_167;
          }
          v247 = v291 - 1;
          if (__OFSUB__(v291, 1))
          {
            __break(1u);
LABEL_175:
            v292 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v247, v225);
            goto LABEL_162;
          }
          if ((v225 & 0xC000000000000001) != 0)
            goto LABEL_175;
          if ((v247 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v247 < *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v292 = *(id *)(v225 + 8 * v247 + 32);
LABEL_162:
            v293 = v292;
            swift_bridgeObjectRelease(v225);
            objc_msgSend(v44, "setCustomSpacing:afterView:", v293, 22.0);

LABEL_168:
            v295._countAndFlagsBits = 0xD000000000000091;
            v296._object = (void *)0x800000010056C530;
            v295._object = (void *)0x800000010056C550;
            v296._countAndFlagsBits = 0xD00000000000001ELL;
            v297 = TTRLocalizedString(_:comment:)(v296, v295);
            v298 = sub_10002A750((uint64_t *)&unk_100640FD0);
            v299 = swift_allocObject(v298, 72, 7);
            *(_OWORD *)(v299 + 16) = xmmword_100520250;
            *(_QWORD *)(v299 + 56) = &type metadata for String;
            *(_QWORD *)(v299 + 64) = sub_1000770A4();
            *(_QWORD *)(v299 + 32) = v333;
            *(_QWORD *)(v299 + 40) = v351;
            String.init(format:_:)(v297._countAndFlagsBits, v297._object, v299);
            v301 = v300;
            swift_bridgeObjectRelease(v297._object);
            v302 = swift_initStackObject(v350, v364);
            *(_OWORD *)(v302 + 16) = xmmword_100520250;
            *(_QWORD *)(v302 + 32) = v332;
            v303 = v332;
            v304 = objc_msgSend(v349, "secondaryLabelColor");
            *(_QWORD *)(v302 + 64) = v348;
            *(_QWORD *)(v302 + 40) = v304;
            v305 = sub_100350498(v302);
            v306 = objc_allocWithZone((Class)NSAttributedString);
            v307 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v301);
            v308 = Dictionary._bridgeToObjectiveC()().super.isa;
            v309 = objc_msgSend(v306, "initWithString:attributes:", v307, v308, swift_bridgeObjectRelease(v305).n128_f64[0]);

            v310 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
            v311 = objc_msgSend(v361, "_preferredFontForTextStyle:variant:", UIFontTextStyleBody, 1024);
            objc_msgSend(v310, "setFont:", v311);

            objc_msgSend(v310, "setNumberOfLines:", 0);
            objc_msgSend(v310, "setAttributedText:", v309);
            v312 = *(void **)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_accountBeingUpgradedHint];
            *(_QWORD *)&v168[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_accountBeingUpgradedHint] = v310;
            v313 = v310;

            objc_msgSend(v44, "addArrangedSubview:", v313);
LABEL_169:
            v367 = (uint64_t)v352;
            swift_bridgeObjectRetain(v352);
            swift_bridgeObjectRetain(v355);
            sub_1004507EC(v314);
            v315 = *(_QWORD *)(v367 + 16);
            swift_bridgeObjectRelease(v367);
            if (v315 || v354[2])
            {
              v316 = &selRef_linkButton;
              v317 = OBLinkTrayButton_ptr;
            }
            else
            {
              v316 = &selRef_boldButton;
              v317 = OBBoldTrayButton_ptr;
            }
            v318 = objc_msgSend((id)objc_opt_self(*v317), *v316);
            v319._countAndFlagsBits = 0xD000000000000017;
            v319._object = (void *)0x800000010056C4F0;
            v320._countAndFlagsBits = 0x4E20657461647055;
            v320._object = (void *)0xEA0000000000776FLL;
            v321 = TTRLocalizedString(_:comment:)(v320, v319)._object;
            v322 = String._bridgeToObjectiveC()();
            objc_msgSend(v318, "setTitle:forState:", v322, 0, swift_bridgeObjectRelease(v321).n128_f64[0]);

            objc_msgSend(v318, "addTarget:action:forControlEvents:", v168, "didTapUpgradeButton:", 64);
            v323 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
            v324._countAndFlagsBits = 0xD000000000000019;
            v324._object = (void *)0x800000010056C510;
            v325._countAndFlagsBits = 0x4C20657461647055;
            v325._object = (void *)0xEC00000072657461;
            v326 = TTRLocalizedString(_:comment:)(v325, v324)._object;
            v327 = String._bridgeToObjectiveC()();
            objc_msgSend(v323, "setTitle:forState:", v327, 0, swift_bridgeObjectRelease(v326).n128_f64[0]);

            objc_msgSend(v323, "addTarget:action:forControlEvents:", v168, "didTapLaterButton:", 64);
            v367 = (uint64_t)v352;
            swift_bridgeObjectRetain(v352);
            swift_bridgeObjectRetain(v355);
            sub_1004507EC(v355);
            v328 = objc_msgSend(v168, "buttonTray", swift_bridgeObjectRelease(v367).n128_f64[0]);
            objc_msgSend(v328, "addButton:", v318);

            v329 = objc_msgSend(v168, "buttonTray");
            objc_msgSend(v329, "addButton:", v323);
            swift_bridgeObjectRelease(v354);
            swift_bridgeObjectRelease(v355);
            swift_bridgeObjectRelease(v352);
            swift_bridgeObjectRelease(v351);

            return;
          }
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          ;
        }
      }
    }
    *(_QWORD *)&v250 = swift_bridgeObjectRelease(v225).n128_u64[0];
    goto LABEL_116;
  }
LABEL_226:

  __break(1u);
LABEL_227:

  __break(1u);
LABEL_228:

  __break(1u);
}

void sub_1001E9F24(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  double v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  uint64_t v18;

  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(a1, "addArrangedSubview:");
  v4 = objc_msgSend(a1, "arrangedSubviews");
  v5 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v12 = v6;
    else
      v12 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v6);
    if (v7)
    {
LABEL_4:
      v8 = v7 - 1;
      if (__OFSUB__(v7, 1))
      {
        __break(1u);
      }
      else if ((v6 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        if (v8 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v9 = *(id *)(v6 + 8 * v8 + 32);
        goto LABEL_9;
      }
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
LABEL_9:
      v10 = v9;
      swift_bridgeObjectRelease(v6);
      objc_msgSend(a1, "setCustomSpacing:afterView:", v10, 6.0);

      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v6).n128_u64[0];
LABEL_15:
  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(a1, "addArrangedSubview:", v11);
  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  objc_msgSend(a1, "addArrangedSubview:");
  v13 = objc_msgSend(a1, "arrangedSubviews");
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v5);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v18 = v5;
    else
      v18 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v14 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v5);
    if (v14)
    {
LABEL_19:
      v8 = v14 - 1;
      if (!__OFSUB__(v14, 1))
      {
        if ((v5 & 0xC000000000000001) == 0)
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v8 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v15 = *(id *)(v5 + 8 * v8 + 32);
LABEL_24:
            v16 = v15;
            swift_bridgeObjectRelease(v5);
            objc_msgSend(a1, "setCustomSpacing:afterView:", v16, 22.0);

            goto LABEL_30;
          }
          __break(1u);
          goto LABEL_40;
        }
LABEL_37:
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
        goto LABEL_24;
      }
      goto LABEL_35;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_19;
  }
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(v5).n128_u64[0];
LABEL_30:
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients))
  {
    objc_msgSend(a1, "addArrangedSubview:", v17);
    return;
  }
LABEL_43:
  __break(1u);
}

uint64_t type metadata accessor for TTRIAboutYourDevicesViewController()
{
  return objc_opt_self(_TtC9Reminders34TTRIAboutYourDevicesViewController);
}

ValueMetadata *type metadata accessor for TTRIAboutYourDevicesViewController.ViewModel()
{
  return &type metadata for TTRIAboutYourDevicesViewController.ViewModel;
}

id sub_1001EA3F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;

  v0 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIButton.Configuration(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  static UIButton.Configuration.plain()(v7);
  UIButton.Configuration.contentInsets.setter(0.01, 0.01, 0.01, 0.01);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  UIButton.configuration.setter(v2);
  v8 = objc_msgSend(v7, "titleLabel");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v9, "setFont:", v10);

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

_QWORD *sub_1001EA598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *result;
  void *v12;
  uint64_t *v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  UIFontTextStyle v27;
  UIAccessibilityTraits v28;
  const char *v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v33 = a2;
  v4 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v4);
  v32 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v10)
  {
    v26 = v2;
    v35 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    v12 = (void *)objc_opt_self(UIButton);
    v29 = "didTapSharedListsParticipant:";
    v30 = v12;
    v27 = UIFontTextStyleBody;
    v28 = UIAccessibilityTraitLink;
    v13 = (uint64_t *)(a1 + 40);
    v31 = v9;
    do
    {
      v18 = *v13;
      v34 = *(v13 - 1);
      *(_QWORD *)&v19 = swift_bridgeObjectRetain(v18).n128_u64[0];
      v20 = objc_msgSend(v30, "buttonWithType:", 1, v19);
      static UIButton.Configuration.plain()(v20);
      UIButton.Configuration.contentInsets.setter(0.01, 0.01, 0.01, 0.01);
      v21 = v32;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v32, v9, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      UIButton.configuration.setter(v21);
      v22 = objc_msgSend(v20, "titleLabel");
      if (v22)
      {
        v23 = v22;
        v24 = (void *)objc_opt_self(UIFont);
        v25 = objc_msgSend(v24, "preferredFontForTextStyle:", v27);
        objc_msgSend(v23, "setFont:", v25);

      }
      v13 += 2;
      v9 = v31;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
      objc_msgSend(v20, "addTarget:action:forControlEvents:", v33, v29, 64);
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setTitle:forState:", v14, 0);

      objc_msgSend(v20, "setAccessibilityTraits:", v28);
      swift_bridgeObjectRelease(v18);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = v35[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v20);
      specialized ContiguousArray._endMutation()(v17);
      --v10;
    }
    while (v10);
    return v35;
  }
  return result;
}

uint64_t sub_1001EA884(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(id *)a1;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t sub_1001EA8E8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);

  return a1;
}

void sub_1001EA948(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  _QWORD v8[6];

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v3 = static TTRUserDefaults.WelcomeScreenVersion.current.getter();
  TTRUserDefaults.lastSeenWelcomeScreenVersion.setter(v3);

  v4 = sub_10001413C((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  Strong = swift_unknownObjectWeakLoadStrong(*v4 + 16);
  if (Strong)
  {
    v6 = (void *)Strong;
    v8[4] = sub_1001EAA38;
    v8[5] = a1;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100006378;
    v8[3] = &unk_1005F6AE8;
    v7 = _Block_copy(v8);
    swift_retain_n(a1, 2);
    objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    swift_release();

  }
}

uint8_t *sub_1001EAA38()
{
  uint64_t v0;

  return sub_10035E484(v0);
}

uint64_t sub_1001EAA40(uint64_t a1)
{
  sub_1000B02B0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t sub_1001EAA74(uint64_t a1)
{
  sub_1000B0308(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t destroy for TTRIGroupMembershipViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s9Reminders28TTRIGroupMembershipViewModelVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for TTRIGroupMembershipViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for TTRIGroupMembershipViewModel(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel()
{
  return &type metadata for TTRIGroupMembershipViewModel;
}

_QWORD *sub_1001EABB0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = a1;
  sub_1003D8268(0, v1, 0);
  result = (_QWORD *)sub_1001EBC40(v2);
  v5 = (uint64_t)result;
  v6 = 0;
  v7 = v2 + 64;
  v29 = v2 + 80;
  v30 = v1;
  v32 = v2 + 64;
  v33 = v2;
  v31 = v4;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v2 + 32))
  {
    v10 = (unint64_t)v5 >> 6;
    if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(v2 + 36) != v4)
      goto LABEL_29;
    v11 = *(_QWORD *)(v2 + 56) + 112 * v5;
    v12 = *(_QWORD *)(v11 + 8);
    if (v12 == 2
      || (*(_BYTE *)(v11 + 88) & 1) != 0
      || (v13 = *(_QWORD *)(v11 + 48), v13 == 2)
      || (*(_BYTE *)(v11 + 104) & 1) != 0)
    {
      v26 = sub_1001EDE98();
      v27 = swift_allocError(&type metadata for TTRIGroupMembershipViewModel.Diff.DiffError, v26, 0, 0);
      *v28 = 5;
      swift_willThrow(v27);
      swift_release(_swiftEmptyArrayStorage);
      return _swiftEmptyArrayStorage;
    }
    v34 = v6;
    v14 = *(_QWORD *)(v11 + 40);
    v16 = *(_QWORD *)(v11 + 56);
    v15 = *(void **)(v11 + 64);
    v17 = *(_BYTE *)(v11 + 72);
    v35 = *(_QWORD *)(v11 + 80);
    v36 = *(_QWORD *)(v11 + 96);
    v39 = *(_QWORD *)(v11 + 16);
    v40 = *(_QWORD *)v11;
    v38 = *(void **)(v11 + 24);
    v37 = *(_BYTE *)(v11 + 32);
    sub_1001EDEDC(*(_QWORD *)v11, v12, v39, v38);
    v41 = v14;
    result = (_QWORD *)sub_1001EDEDC(v14, v13, v16, v15);
    v19 = _swiftEmptyArrayStorage[2];
    v18 = _swiftEmptyArrayStorage[3];
    if (v19 >= v18 >> 1)
      result = (_QWORD *)sub_1003D8268(v18 > 1, v19 + 1, 1);
    _swiftEmptyArrayStorage[2] = v19 + 1;
    v20 = &_swiftEmptyArrayStorage[12 * v19];
    v20[4] = v40;
    v20[5] = v12;
    v20[6] = v39;
    v20[7] = v38;
    *((_BYTE *)v20 + 64) = v37;
    v20[9] = v35;
    v20[10] = v41;
    v20[11] = v13;
    v20[12] = v16;
    v20[13] = v15;
    *((_BYTE *)v20 + 112) = v17;
    v20[15] = v36;
    v2 = v33;
    v8 = 1 << *(_BYTE *)(v33 + 32);
    if (v5 >= v8)
      goto LABEL_30;
    v7 = v32;
    v21 = *(_QWORD *)(v32 + 8 * v10);
    if ((v21 & (1 << v5)) == 0)
      goto LABEL_31;
    v4 = v31;
    if (*(_DWORD *)(v33 + 36) != v31)
      goto LABEL_32;
    v22 = v21 & (-2 << (v5 & 0x3F));
    if (v22)
    {
      v8 = __clz(__rbit64(v22)) | v5 & 0xFFFFFFFFFFFFFFC0;
      v9 = v30;
    }
    else
    {
      v23 = v10 + 1;
      v24 = (unint64_t)(v8 + 63) >> 6;
      v9 = v30;
      if (v10 + 1 < v24)
      {
        v25 = *(_QWORD *)(v32 + 8 * v23);
        if (v25)
        {
LABEL_24:
          v8 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v10)
          {
            v25 = *(_QWORD *)(v29 + 8 * v10++);
            if (v25)
            {
              v23 = v10 + 1;
              goto LABEL_24;
            }
          }
        }
      }
    }
    v6 = v34 + 1;
    v5 = v8;
    if (v34 + 1 == v9)
      return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1001EAEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064C998);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064C998);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1001EAF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  char v15;

  v2 = v1;
  sub_100056B1C(v2, (uint64_t)&v11);
  v4 = v12;
  if (v12 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else if (v12)
  {
    v5 = v11;
    v6 = v13;
    v7 = v14;
    v8 = v15 & 1;
    Hasher._combine(_:)(2uLL);
    v9 = v7;
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v5, v4);
    Hasher._combine(_:)(v6 & 1);
    v10 = v9;
    TTRListOrCustomSmartListChangeItem.hash(into:)(a1, v7, v8);
    swift_bridgeObjectRelease(v4);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1001EB034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD v9[9];
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  char v14;

  Hasher.init(_seed:)(v9, 0);
  sub_100056B1C(v0, (uint64_t)&v10);
  v1 = v11;
  if (v11 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else if (v11)
  {
    v2 = v10;
    v3 = v12;
    v4 = v13;
    v5 = v14 & 1;
    Hasher._combine(_:)(2uLL);
    v6 = v4;
    swift_bridgeObjectRetain(v1);
    String.hash(into:)(v9, v2, v1);
    Hasher._combine(_:)(v3 & 1);
    v7 = v6;
    TTRListOrCustomSmartListChangeItem.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1001EB130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _BYTE v18[40];
  _BYTE v19[40];
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  char v29;

  v2 = v1;
  sub_100056B1C(v2, (uint64_t)v19);
  sub_100056B1C((uint64_t)v19, (uint64_t)&v20);
  v4 = v21;
  if (v21 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else if (v21)
  {
    v5 = v20;
    v6 = v22;
    v7 = v23;
    v8 = v24 & 1;
    Hasher._combine(_:)(2uLL);
    sub_100056B58((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A54);
    v9 = v7;
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v5, v4);
    Hasher._combine(_:)(v6 & 1);
    v10 = v9;
    TTRListOrCustomSmartListChangeItem.hash(into:)(a1, v7, v8);
    swift_bridgeObjectRelease(v4);

    sub_100056B58((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A84);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(_QWORD *)(v2 + 40));
  sub_100056B1C(v2 + 48, (uint64_t)v18);
  sub_100056B1C((uint64_t)v18, (uint64_t)&v25);
  v11 = v26;
  if (v26 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else if (v26)
  {
    v12 = v25;
    v13 = v27;
    v14 = v28;
    v15 = v29 & 1;
    Hasher._combine(_:)(2uLL);
    sub_100056B58((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A54);
    v16 = v14;
    swift_bridgeObjectRetain(v11);
    String.hash(into:)(a1, v12, v11);
    Hasher._combine(_:)(v13 & 1);
    v17 = v16;
    TTRListOrCustomSmartListChangeItem.hash(into:)(a1, v14, v15);
    swift_bridgeObjectRelease(v11);

    sub_100056B58((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100056A84);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(_QWORD *)(v2 + 88));
}

Swift::Int sub_1001EB318()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_100056B1C(v0, (uint64_t)v2);
  return sub_1001EB034();
}

void sub_1001EB34C(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];

  sub_100056B1C(v1, (uint64_t)v3);
  sub_1001EAF54(a1);
}

Swift::Int sub_1001EB388(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  Swift::UInt v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v12[9];

  v3 = *v1;
  v2 = v1[1];
  v5 = v1[2];
  v4 = (void *)v1[3];
  v6 = *((_BYTE *)v1 + 32);
  Hasher.init(_seed:)(v12, a1);
  if (v2)
  {
    if (v2 != 1)
    {
      v8 = v6 & 1;
      Hasher._combine(_:)(2uLL);
      v9 = v4;
      swift_bridgeObjectRetain(v2);
      String.hash(into:)(v12, v3, v2);
      Hasher._combine(_:)(v5 & 1);
      v10 = v9;
      TTRListOrCustomSmartListChangeItem.hash(into:)(v12, v4, v8);
      swift_bridgeObjectRelease(v2);

      return Hasher._finalize()();
    }
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

uint64_t sub_1001EB468(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_100056B1C(a1, (uint64_t)v4);
  sub_100056B1C(a2, (uint64_t)v5);
  return sub_1001EBFA8((uint64_t)v4, (uint64_t)v5) & 1;
}

Swift::Int sub_1001EB4B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt8 v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((_BYTE *)v0 + 16);
  v4 = (void *)v0[3];
  v5 = *((unsigned __int8 *)v0 + 32);
  Hasher.init(_seed:)(v8, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  Hasher._combine(_:)(v3);
  v6 = v4;
  TTRListOrCustomSmartListChangeItem.hash(into:)(v8, v4, v5);

  return Hasher._finalize()();
}

void sub_1001EB54C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt8 v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  v6 = (void *)v1[3];
  v7 = *((unsigned __int8 *)v1 + 32);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  Hasher._combine(_:)(v5);
  v8 = v6;
  TTRListOrCustomSmartListChangeItem.hash(into:)(a1, v6, v7);

}

Swift::Int sub_1001EB5E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt8 v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  v5 = (void *)v1[3];
  v6 = *((unsigned __int8 *)v1 + 32);
  Hasher.init(_seed:)(v9, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v9, v2, v3);
  swift_bridgeObjectRelease(v3);
  Hasher._combine(_:)(v4);
  v7 = v5;
  TTRListOrCustomSmartListChangeItem.hash(into:)(v9, v5, v6);

  return Hasher._finalize()();
}

uint64_t sub_1001EB678(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = a1[3];
  v8 = *((unsigned __int8 *)a1 + 32);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(unsigned __int8 *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(unsigned __int8 *)(a2 + 32);
  if (v4 == *(_QWORD *)a2 && v5 == v9)
  {
    if (v6 == v10)
      return static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v7, v8, v11, v12);
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v9, 0) & 1) != 0
         && ((v6 ^ v10) & 1) == 0)
  {
    return static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v7, v8, v11, v12);
  }
  return 0;
}

Swift::Int sub_1001EB71C()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _QWORD v5[9];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = v0[3];
  v8 = v0[2];
  v9 = v1;
  v2 = v0[5];
  v10 = v0[4];
  v11 = v2;
  v3 = v0[1];
  v6 = *v0;
  v7 = v3;
  Hasher.init(_seed:)(v5, 0);
  sub_1001EB130((uint64_t)v5);
  return Hasher._finalize()();
}

void sub_1001EB778(uint64_t a1)
{
  sub_1001EB130(a1);
}

Swift::Int sub_1001EB7B8(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD v6[9];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1[3];
  v9 = v1[2];
  v10 = v2;
  v3 = v1[5];
  v11 = v1[4];
  v12 = v3;
  v4 = v1[1];
  v7 = *v1;
  v8 = v4;
  Hasher.init(_seed:)(v6, a1);
  sub_1001EB130((uint64_t)v6);
  return Hasher._finalize()();
}

BOOL sub_1001EB810(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1001EBCC8((uint64_t)v9, (uint64_t)v10);
}

_QWORD *sub_1001EB868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  _QWORD *v14;
  int64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[8];
  uint64_t v30;

  sub_100056B1C(a1, (uint64_t)v29);
  if (v30 == 1)
  {
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain(a3);
      sub_1003D823C(0, v15, 0);
      v26 = a3;
      v16 = (_BYTE *)(a3 + 64);
      do
      {
        v17 = *((_QWORD *)v16 - 3);
        v28 = *((_QWORD *)v16 - 4);
        v18 = *(v16 - 16);
        v19 = (void *)*((_QWORD *)v16 - 1);
        v20 = *v16;
        v22 = _swiftEmptyArrayStorage[2];
        v21 = _swiftEmptyArrayStorage[3];
        swift_bridgeObjectRetain(v17);
        v23 = v19;
        if (v22 >= v21 >> 1)
          sub_1003D823C(v21 > 1, v22 + 1, 1);
        _swiftEmptyArrayStorage[2] = v22 + 1;
        v24 = &_swiftEmptyArrayStorage[5 * v22];
        v24[4] = v28;
        v24[5] = v17;
        v24[6] = v18;
        v24[7] = v19;
        *((_BYTE *)v24 + 64) = v20;
        v16 += 40;
        --v15;
      }
      while (v15);
      goto LABEL_14;
    }
  }
  else if (!v30)
  {
    v5 = *(_QWORD *)(a2 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain(a2);
      sub_1003D823C(0, v5, 0);
      v26 = a2;
      v6 = (_BYTE *)(a2 + 64);
      do
      {
        v7 = *((_QWORD *)v6 - 3);
        v27 = *((_QWORD *)v6 - 4);
        v8 = *(v6 - 16);
        v9 = (void *)*((_QWORD *)v6 - 1);
        v10 = *v6;
        v12 = _swiftEmptyArrayStorage[2];
        v11 = _swiftEmptyArrayStorage[3];
        swift_bridgeObjectRetain(v7);
        v13 = v9;
        if (v12 >= v11 >> 1)
          sub_1003D823C(v11 > 1, v12 + 1, 1);
        _swiftEmptyArrayStorage[2] = v12 + 1;
        v14 = &_swiftEmptyArrayStorage[5 * v12];
        v14[4] = v27;
        v14[5] = v7;
        v14[6] = v8;
        v14[7] = v9;
        *((_BYTE *)v14 + 64) = v10;
        v6 += 40;
        --v5;
      }
      while (v5);
LABEL_14:
      swift_bridgeObjectRelease(v26);
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001EBA50()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;

  sub_100056B1C(v0, (uint64_t)&v12);
  v1 = v13;
  if (v13 == (void *)1)
    return 0xD000000000000010;
  if (!v13)
    return 0x65537265626D656DLL;
  v3 = v12;
  v4 = v14;
  v5 = v15 & 1;
  v6 = v14;
  swift_bridgeObjectRetain(v1);
  v7 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v4, v5);
  v8 = objc_msgSend(v7, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  v10._countAndFlagsBits = 539831584;
  v10._object = (void *)0xE400000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRetain(v1);
  v11._countAndFlagsBits = v3;
  v11._object = v1;
  String.append(_:)(v11);

  swift_bridgeObjectRelease_n(v1, 2);
  return v9;
}

uint64_t sub_1001EBB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  _BYTE v12[40];

  sub_100056B1C(a1, (uint64_t)v12);
  sub_100056B1C(a2, (uint64_t)&v11);
  v3 = sub_1001EBA50();
  v5 = v4;
  v7 = sub_1001EBA50();
  v8 = v6;
  if (v3 == v7 && v5 == v6)
  {
    v9 = 1;
    v8 = v5;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v6, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v8);
  return v9 & 1;
}

uint64_t sub_1001EBC40(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

BOOL sub_1001EBCC8(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  char v6;
  int v7;
  void *v8;
  char v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  id v13;
  id v14;
  char v15;
  int v16;
  void *v17;
  char v18;
  int v19;
  void *v20;
  char v21;
  char v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  _BYTE v27[40];
  _BYTE v28[40];
  _BYTE v29[40];
  _BYTE v30[40];
  __int128 v31;
  unsigned __int8 v32;
  void *v33;
  char v34;
  __int128 v35;
  __int128 v36;
  unsigned __int8 v37;
  void *v38;
  char v39;
  __int128 v40;
  unsigned __int8 v41;
  void *v42;
  char v43;
  __int128 v44;
  __int128 v45;
  unsigned __int8 v46;
  void *v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  sub_100056B1C(a1, (uint64_t)v30);
  sub_100056B1C(a2, (uint64_t)v29);
  sub_100056B1C((uint64_t)v30, (uint64_t)&v31);
  if (*((_QWORD *)&v31 + 1) == 1)
  {
    sub_100056B1C((uint64_t)v29, (uint64_t)&v36);
    if (*((_QWORD *)&v36 + 1) != 1)
      return 0;
  }
  else if (*((_QWORD *)&v31 + 1))
  {
    v35 = v31;
    v4 = v32;
    v5 = v33;
    v6 = v34;
    sub_100056B1C((uint64_t)v29, (uint64_t)&v36);
    if (*((_QWORD *)&v36 + 1) < 2uLL)
      return 0;
    v7 = v37;
    v8 = v38;
    v9 = v39;
    v51 = v36;
    v52 = v35;
    if (v35 != v36)
    {
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, *((_QWORD *)&v35 + 1), v36, *((_QWORD *)&v36 + 1), 0);
      result = 0;
      if ((v10 & 1) == 0)
        return result;
    }
    if (((v4 ^ v7) & 1) != 0)
      return 0;
    v12 = v9 & 1;
    sub_1001EF324((uint64_t)&v52);
    v13 = v5;
    sub_1001EF324((uint64_t)&v51);
    v14 = v8;
    v15 = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v5, v6 & 1, v8, v12);
    sub_100056AB8((uint64_t)&v51);

    sub_100056AB8((uint64_t)&v52);
    if ((v15 & 1) == 0)
      return 0;
  }
  else
  {
    sub_100056B1C((uint64_t)v29, (uint64_t)&v36);
    if (*((_QWORD *)&v36 + 1))
      return 0;
  }
  if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    return 0;
  sub_100056B1C(a1 + 48, (uint64_t)v28);
  sub_100056B1C(a2 + 48, (uint64_t)v27);
  sub_100056B1C((uint64_t)v28, (uint64_t)&v40);
  if (*((_QWORD *)&v40 + 1) == 1)
  {
    sub_100056B1C((uint64_t)v27, (uint64_t)&v45);
    if (*((_QWORD *)&v45 + 1) == 1)
      return *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88);
    return 0;
  }
  if (!*((_QWORD *)&v40 + 1))
  {
    sub_100056B1C((uint64_t)v27, (uint64_t)&v45);
    if (!*((_QWORD *)&v45 + 1))
      return *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88);
    return 0;
  }
  v44 = v40;
  v16 = v41;
  v17 = v42;
  v18 = v43;
  sub_100056B1C((uint64_t)v27, (uint64_t)&v45);
  if (*((_QWORD *)&v45 + 1) < 2uLL)
    return 0;
  v19 = v46;
  v20 = v47;
  v21 = v48;
  v49 = v45;
  v50 = v44;
  if (v44 == v45
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, *((_QWORD *)&v44 + 1), v45, *((_QWORD *)&v45 + 1), 0),
        result = 0,
        (v22 & 1) != 0))
  {
    if (((v16 ^ v19) & 1) == 0)
    {
      v23 = v21 & 1;
      sub_1001EF324((uint64_t)&v50);
      v24 = v17;
      sub_1001EF324((uint64_t)&v49);
      v25 = v20;
      v26 = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v17, v18 & 1, v20, v23);
      sub_100056AB8((uint64_t)&v49);

      sub_100056AB8((uint64_t)&v50);
      if ((v26 & 1) != 0)
        return *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001EBFA8(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  char v6;
  int v7;
  void *v8;
  char v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  __int128 v14;
  unsigned __int8 v15;
  void *v16;
  char v17;
  __int128 v18;
  unsigned __int8 v19;
  void *v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  sub_100056B1C(a1, (uint64_t)&v18);
  if (*((_QWORD *)&v18 + 1) == 1)
  {
    sub_100056B1C(a2, (uint64_t)&v14);
    if (*((_QWORD *)&v14 + 1) == 1)
      return 1;
  }
  else if (*((_QWORD *)&v18 + 1))
  {
    v22 = v18;
    v4 = v19;
    v5 = v20;
    v6 = v21;
    sub_100056B1C(a2, (uint64_t)&v14);
    if (*((_QWORD *)&v14 + 1) >= 2uLL)
    {
      v7 = v15;
      v8 = v16;
      v9 = v17;
      v23 = v22;
      v24 = v14;
      if ((v22 == v14
         || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, *((_QWORD *)&v22 + 1), v14, *((_QWORD *)&v14 + 1), 0) & 1) != 0)
        && ((v4 ^ v7) & 1) == 0)
      {
        v10 = v9 & 1;
        sub_1001EF324((uint64_t)&v23);
        v11 = v5;
        sub_1001EF324((uint64_t)&v24);
        v12 = v8;
        v13 = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v5, v6 & 1, v8, v10);
        sub_100056AB8((uint64_t)&v24);

        sub_100056AB8((uint64_t)&v23);
        if ((v13 & 1) != 0)
          return 1;
      }
    }
  }
  else
  {
    sub_100056B1C(a2, (uint64_t)&v14);
    if (!*((_QWORD *)&v14 + 1))
      return 1;
  }
  return 0;
}

void sub_1001EC0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = -(uint64_t)v3;
  v7 = _swiftEmptyArrayStorage;
  v21 = a1 + 64;
  v22 = *(_QWORD *)(a1 + 16);
  do
  {
    v23 = v7;
    if (v4 <= v3)
      v8 = v3;
    else
      v8 = v4;
    v9 = -(uint64_t)v8;
    for (i = (_BYTE *)(v5 + 40 * v4++); ; i += 40)
    {
      if (v9 + v4 == 1)
      {
        __break(1u);
        return;
      }
      v12 = *((_QWORD *)i - 4);
      v11 = *((_QWORD *)i - 3);
      v14 = *((_QWORD *)i - 2);
      v13 = *((_QWORD *)i - 1);
      v15 = a2;
      v16 = *i;
      if (!v11)
        break;
      if (v11 == 1)
      {
        v15 = a3;
        break;
      }
LABEL_7:
      ++v4;
      if (v6 + v4 == 1)
        return;
    }
    if (!*(_QWORD *)(v15 + 16))
    {
      sub_100056A84(*((_QWORD *)i - 4), *((_QWORD *)i - 3), *((_QWORD *)i - 2), *((void **)i - 1));
      goto LABEL_7;
    }
    v7 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
    {
      sub_1003D823C(0, v23[2] + 1, 1);
      v7 = v23;
    }
    v18 = v7[2];
    v17 = v7[3];
    v19 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      sub_1003D823C(v17 > 1, v18 + 1, 1);
      v19 = v18 + 1;
      v7 = v23;
    }
    v7[2] = v19;
    v20 = &v7[5 * v18];
    v20[4] = v12;
    v20[5] = v11;
    v20[6] = v14;
    v20[7] = v13;
    *((_BYTE *)v20 + 64) = v16;
    v5 = v21;
    v3 = v22;
  }
  while (v6 + v4);
}

uint64_t sub_1001EC294(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __n128 v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  void *v66;
  unint64_t v67;
  uint64_t v68;
  void *v69;
  int v70;
  unint64_t v71;
  void *v72;
  void *v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  int v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  unint64_t v95;
  id v96;
  unint64_t v97;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  _QWORD *v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  id v115;
  unint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  void *v121;
  _QWORD *v122;
  uint64_t v123;
  id v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  void *v130;
  int v131;
  uint64_t v132;
  unint64_t v133;
  void *v134;
  void *v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  void *v141;
  int v142;
  unint64_t v143;
  uint64_t v144;
  void *v145;
  void *v146;
  _QWORD *v147;
  uint64_t v148;
  id v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  int v156;
  unint64_t v157;
  unint64_t v158;
  id v159;
  uint64_t v160;
  void *v161;
  int v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  int v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  void *v178;
  id v179;
  id v180;
  _QWORD *v181;
  void *v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  _BOOL8 v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  void *v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  void *v201;
  uint64_t v202;
  unint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  id v207;
  _QWORD *v208;
  void *v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  void *v213;
  char v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  _BOOL8 v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  void *v229;
  char v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  id v240;
  _QWORD *v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  _BYTE *v245;
  unint64_t v246;
  uint64_t v247;
  _BYTE *v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  _QWORD *v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  void *v256;
  unint64_t v257;
  uint64_t v258;
  _BYTE *v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t result;
  unint64_t v264;
  uint64_t v265;
  _BYTE *v266;
  _QWORD *v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  id v271;
  uint64_t v272;
  uint64_t v273;
  void (*v274)(_QWORD, uint64_t, uint64_t);
  void (**v275)(char *, char *, uint64_t, __n128);
  uint64_t v276;
  id v277;
  unint64_t v278;
  unint64_t v279;
  _QWORD v280[3];
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  _QWORD *v288;
  int v289;
  uint64_t v290;
  uint64_t v291;
  int v292;
  unint64_t v293;
  id v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  id v299;
  id v300;
  uint64_t v301;
  unint64_t v302;
  void *v303;
  unint64_t v304;
  void *v305;
  id v306;
  uint64_t v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  void (*v312)(char *, char *, uint64_t, __n128);
  void *v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  id v317;
  uint64_t v318;
  char *v319;
  unsigned int v320;
  void *v321;
  unint64_t v322;
  uint64_t v323;
  char v324[4];
  _QWORD *v325;
  uint64_t v326;
  char v327[8];
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  char v331[8];
  _QWORD *v332;

  v282 = type metadata accessor for Logger(0);
  v281 = *(_QWORD *)(v282 - 8);
  v9 = __chkstk_darwin(v282);
  v280[2] = (char *)v280 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v280[1] = (char *)v280 - v11;
  v12 = sub_10002A750(&qword_10064C9B0);
  v310 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v311 = (char *)v280 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  sub_1001EC0FC((uint64_t)&off_1005EA4C0, a1, a2);
  v15 = v14;
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  swift_arrayDestroy(&unk_1005EA4E0, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  sub_1001EC0FC((uint64_t)&off_1005EA530, (uint64_t)a3, a4);
  v17 = v16;
  v283 = v4;
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a3);
  swift_arrayDestroy(&unk_1005EA550, 2, &type metadata for TTRIGroupMembershipViewModel.Item);
  v290 = a1;
  v328 = a1;
  v329 = a2;
  v291 = a2;
  v325 = a3;
  v326 = a4;
  v18 = TTRCheapTreeDiff<A>(source:target:sourceChildrenGetter:targetChildrenGetter:contentEqualityChecker:)(v15, v17, sub_1001EDE58, v327, sub_1001EDE58, v324, 0, 0, &type metadata for TTRIGroupMembershipViewModel.Item, &off_1005F6BA8);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v17);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease(v18);
    v243 = sub_1001EDE98();
    v244 = swift_allocError(&type metadata for TTRIGroupMembershipViewModel.Diff.DiffError, v243, 0, 0);
    *v245 = 0;
    swift_willThrow(v244);
    return (uint64_t)a3;
  }
  v20 = 0;
  v332 = &_swiftEmptyDictionarySingleton;
  v21 = v18 + 32;
  v308 = enum case for ExtendedPatch.insertion<A>(_:);
  v292 = enum case for ExtendedPatch.deletion<A>(_:);
  v289 = enum case for ExtendedPatch.move<A>(_:);
  v307 = v12;
  v22 = v311;
  v23 = v310;
  v286 = v18;
  v285 = v19;
  v284 = v18 + 32;
  while (1)
  {
    if (v20 >= *(_QWORD *)(v18 + 16))
    {
LABEL_105:
      __break(1u);
LABEL_106:
      v269 = sub_100017648();
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v269);
      __break(1u);
LABEL_107:
      sub_1001EDEDC(v323, v15, v318, (void *)v18);
      v270 = qword_10063D4C0;
      swift_bridgeObjectRetain(v15);
      v271 = (id)v18;
      if (v270 != -1)
        swift_once(&qword_10063D4C0, sub_1001EAEC4);
      v272 = v282;
      v273 = sub_100012DC4(v282, (uint64_t)qword_10064C998);
      v274 = *(void (**)(_QWORD, uint64_t, uint64_t))(v281 + 16);
      v275 = &v312;
LABEL_113:
      v274(*(v275 - 32), v273, v272);
      v278 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v279 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1002EB23C((uint64_t)"Requested child of list", 23, 2uLL, v278, v279);
      __break(1u);
LABEL_114:
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v12, v12);
      __break(1u);
      return result;
    }
    v27 = v21 + 48 * v20;
    v15 = *(_QWORD *)(v27 + 8);
    a3 = *(_QWORD **)(v27 + 40);
    if (v15 == 2)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v27 + 40));
      swift_bridgeObjectRelease(v18);
      v264 = sub_1001EDE98();
      v265 = swift_allocError(&type metadata for TTRIGroupMembershipViewModel.Diff.DiffError, v264, 0, 0);
      *v266 = 1;
      swift_willThrow(v265);
LABEL_84:
      v251 = a3;
      goto LABEL_87;
    }
    v28 = a3[2];
    if (v28)
      break;
LABEL_4:
    if (++v20 == v19)
    {
      swift_bridgeObjectRelease(v18);
      swift_beginAccess(&v332, v331, 0, 0);
      v267 = v332;
      swift_bridgeObjectRetain(v332);
      a3 = sub_1001EABB0(v268);
      swift_bridgeObjectRelease(v267);
      swift_bridgeObjectRelease(v332);
      return (uint64_t)a3;
    }
  }
  v287 = v20;
  v323 = *(_QWORD *)v27;
  v29 = v323;
  v30 = *(_QWORD *)(v27 + 16);
  v18 = *(_QWORD *)(v27 + 24);
  v320 = *(unsigned __int8 *)(v27 + 32);
  v319 = (char *)a3 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  v288 = a3;
  swift_bridgeObjectRetain(a3);
  sub_1001EDEDC(v29, v15, v30, (void *)v18);
  sub_1001EDEDC(v29, v15, v30, (void *)v18);
  v31 = v319;
  v32 = swift_bridgeObjectRetain(v288);
  v309 = *(_QWORD *)(v23 + 72);
  v312 = *(void (**)(char *, char *, uint64_t, __n128))(v23 + 16);
  v321 = (void *)v18;
  v322 = v15;
  v318 = v30;
  v312(v22, v31, v12, v32);
  while (1)
  {
    v50 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v22, v12);
    v316 = v28;
    v319 = v31;
    if (v50 == v308)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v22, v12);
      v52 = *((_QWORD *)v22 + 1);
      v51 = *((_QWORD *)v22 + 2);
      v54 = *((_QWORD *)v22 + 3);
      v53 = (void *)*((_QWORD *)v22 + 4);
      v55 = v22[40];
      if (v51 < 2)
      {
        sub_100056A84(*((_QWORD *)v22 + 1), *((_QWORD *)v22 + 2), *((_QWORD *)v22 + 3), v53);
        swift_bridgeObjectRelease(v286);
        a3 = v288;
        swift_bridgeObjectRelease(v288);
        v246 = sub_1001EDE98();
        v247 = swift_allocError(&type metadata for TTRIGroupMembershipViewModel.Diff.DiffError, v246, 0, 0);
        *v248 = 3;
        swift_willThrow(v247);
        v249 = v323;
        v250 = v318;
        sub_1001EDEEC(v323, v15, v318, (void *)v18);
        sub_1001EDEEC(v249, v15, v250, (void *)v18);
        goto LABEL_84;
      }
      v299 = *(id *)v22;
      v295 = v55;
      v56 = v55 & 1;
      v57 = (uint64_t)v53;
      v58 = v53;
      swift_bridgeObjectRetain(v51);
      v296 = v57;
      v59 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v57, v56);
      swift_beginAccess(&v332, v331, 32, 0);
      v60 = v332;
      v61 = v332[2];
      v298 = v52;
      v297 = v54;
      v294 = v58;
      v293 = v51;
      v306 = v59;
      if (v61)
      {
        v62 = v59;
        v63 = sub_1002AA364((uint64_t)v62);
        if ((v64 & 1) != 0)
        {
          v65 = v60[7] + 112 * v63;
          v66 = *(void **)v65;
          v67 = *(_QWORD *)(v65 + 8);
          v68 = *(_QWORD *)(v65 + 16);
          v69 = *(void **)(v65 + 24);
          v70 = *(unsigned __int8 *)(v65 + 32);
          v72 = *(void **)(v65 + 40);
          v71 = *(_QWORD *)(v65 + 48);
          v74 = *(_QWORD *)(v65 + 56);
          v73 = *(void **)(v65 + 64);
          v75 = *(unsigned __int8 *)(v65 + 72);
          v301 = *(_QWORD *)(v65 + 80);
          LODWORD(v300) = *(unsigned __int8 *)(v65 + 88);
          v317 = v66;
          v76 = v67;
          v314 = v68;
          v313 = v69;
          LODWORD(v315) = v70;
          sub_1001EDEDC((uint64_t)v66, v67, v68, v69);
          v305 = v72;
          v77 = (uint64_t)v72;
          v78 = v71;
          v304 = v74;
          v79 = v74;
          v80 = v73;
          v81 = v73;
          v82 = v75;
          sub_1001EDEDC(v77, v71, v79, v81);
        }
        else
        {
          v301 = 0;
          v317 = 0;
          v314 = 0;
          v313 = 0;
          LODWORD(v315) = 0;
          v305 = 0;
          v304 = 0;
          v80 = 0;
          v82 = 0;
          LODWORD(v300) = 1;
          v76 = 2;
          v78 = 2;
        }
        LODWORD(v302) = v82;
        v303 = v80;

        v18 = (uint64_t)v317;
        v88 = v314;
        v89 = v313;
        v90 = v78;
      }
      else
      {
        v301 = 0;
        v18 = 0;
        v88 = 0;
        v89 = 0;
        LODWORD(v315) = 0;
        v305 = 0;
        v304 = 0;
        v303 = 0;
        LODWORD(v302) = 0;
        LODWORD(v300) = 1;
        v76 = 2;
        v90 = 2;
      }
      swift_endAccess(v331);
      v91 = v322;
      v92 = v318;
      v93 = v321;
      sub_100056A54(v323, v322, v318, v321);
      sub_1001EDEEC((uint64_t)v305, v90, v304, v303);
      swift_beginAccess(&v332, v331, 33, 0);
      v94 = v306;
      v317 = (id)v18;
      v306 = (id)v76;
      v95 = v76;
      v96 = v94;
      v314 = v88;
      v313 = v89;
      sub_1001EDEDC(v18, v95, v88, v89);
      v97 = v91;
      v12 = v92;
      sub_1001EDEDC(v323, v97, v92, v93);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v332);
      v99 = v332;
      v330 = v332;
      v332 = (_QWORD *)0x8000000000000000;
      v15 = sub_1002AA364((uint64_t)v96);
      v101 = v99[2];
      v102 = (v100 & 1) == 0;
      v103 = v101 + v102;
      if (__OFADD__(v101, v102))
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      v18 = v100;
      if (v99[3] >= v103)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1002AEE64();
      }
      else
      {
        sub_100458810(v103, isUniquelyReferenced_nonNull_native);
        v104 = sub_1002AA364((uint64_t)v96);
        if ((v18 & 1) != (v105 & 1))
          goto LABEL_106;
        v15 = v104;
      }
      v106 = v330;
      v305 = v96;
      if ((v18 & 1) != 0)
      {
        v33 = v330[7] + 112 * v15;
        v34 = *(_QWORD *)(v33 + 40);
        v35 = *(_QWORD *)(v33 + 48);
        v36 = *(_QWORD *)(v33 + 56);
        v37 = *(void **)(v33 + 64);
        sub_1001EDEEC(*(_QWORD *)v33, *(_QWORD *)(v33 + 8), *(_QWORD *)(v33 + 16), *(void **)(v33 + 24));
        v38 = v318;
        sub_1001EDEEC(v34, v35, v36, v37);
        v39 = (unint64_t)v306;
        *(_QWORD *)v33 = v317;
        *(_QWORD *)(v33 + 8) = v39;
        v18 = v314;
        v40 = v313;
        *(_QWORD *)(v33 + 16) = v314;
        *(_QWORD *)(v33 + 24) = v40;
        *(_BYTE *)(v33 + 32) = v315;
        v41 = v322;
        v42 = v323;
        *(_QWORD *)(v33 + 40) = v323;
        *(_QWORD *)(v33 + 48) = v41;
        v43 = v321;
        *(_QWORD *)(v33 + 56) = v38;
        *(_QWORD *)(v33 + 64) = v43;
        *(_BYTE *)(v33 + 72) = v320;
        *(_QWORD *)(v33 + 80) = v301;
        *(_BYTE *)(v33 + 88) = (_BYTE)v300;
        *(_QWORD *)(v33 + 96) = v299;
        *(_BYTE *)(v33 + 104) = 0;
      }
      else
      {
        v330[(v15 >> 6) + 8] |= 1 << v15;
        *(_QWORD *)(v106[6] + 8 * v15) = v96;
        v107 = v106[7] + 112 * v15;
        v108 = (unint64_t)v306;
        *(_QWORD *)v107 = v317;
        *(_QWORD *)(v107 + 8) = v108;
        v18 = v314;
        v40 = v313;
        *(_QWORD *)(v107 + 16) = v314;
        *(_QWORD *)(v107 + 24) = v40;
        *(_BYTE *)(v107 + 32) = v315;
        v109 = v322;
        *(_QWORD *)(v107 + 40) = v323;
        *(_QWORD *)(v107 + 48) = v109;
        v110 = v321;
        *(_QWORD *)(v107 + 56) = v12;
        *(_QWORD *)(v107 + 64) = v110;
        v111 = v12;
        v12 = v320;
        *(_BYTE *)(v107 + 72) = v320;
        *(_QWORD *)(v107 + 80) = v301;
        *(_BYTE *)(v107 + 88) = (_BYTE)v300;
        *(_QWORD *)(v107 + 96) = v299;
        *(_BYTE *)(v107 + 104) = 0;
        v112 = v106[2];
        v113 = __OFADD__(v112, 1);
        v114 = v112 + 1;
        if (v113)
          goto LABEL_93;
        v106[2] = v114;
        v39 = v108;
        v115 = v96;
        v38 = v111;
        v42 = v323;
      }
      v44 = v332;
      v332 = v106;
      v45 = v305;
      v46 = v42;

      swift_bridgeObjectRelease(v44);
      swift_endAccess(v331);
      sub_1001EDEEC((uint64_t)v317, v39, v18, v40);
      v47 = v46;
      v18 = (uint64_t)v321;
      v15 = v322;
      sub_1001EDEEC(v47, v322, v38, v321);

      v48 = v293;
      swift_bridgeObjectRelease(v293);

      sub_100056A84(v298, v48, v297, (void *)v296);
LABEL_11:
      v12 = v307;
      v22 = v311;
      v23 = v310;
      goto LABEL_12;
    }
    if (v50 == v292)
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v22, v12);
      v83 = *(_QWORD *)v22;
      if (v15)
      {
        if (v15 != 1)
        {
          sub_1001EDEDC(v323, v15, v318, (void *)v18);
          v276 = qword_10063D4C0;
          swift_bridgeObjectRetain(v15);
          v277 = (id)v18;
          if (v276 != -1)
            swift_once(&qword_10063D4C0, sub_1001EAEC4);
          v272 = v282;
          v273 = sub_100012DC4(v282, (uint64_t)qword_10064C998);
          v274 = *(void (**)(_QWORD, uint64_t, uint64_t))(v281 + 16);
          v275 = (void (**)(char *, char *, uint64_t, __n128))&v311;
          goto LABEL_113;
        }
        if ((v83 & 0x8000000000000000) != 0)
          goto LABEL_96;
        v84 = v291;
        if (v83 >= *(_QWORD *)(v291 + 16))
          goto LABEL_97;
      }
      else
      {
        if ((v83 & 0x8000000000000000) != 0)
          goto LABEL_95;
        v84 = v290;
        if (v83 >= *(_QWORD *)(v290 + 16))
          goto LABEL_98;
      }
      v116 = v84 + 40 * v83;
      v117 = *(unsigned __int8 *)(v116 + 64);
      v118 = *(void **)(v116 + 56);
      v119 = *(void **)(v116 + 40);
      swift_bridgeObjectRetain(v119);
      v120 = v118;
      v121 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v118, v117);
      swift_beginAccess(&v332, v331, 32, 0);
      v122 = v332;
      v123 = v332[2];
      v300 = v119;
      v299 = v120;
      v303 = (void *)v83;
      if (v123)
      {
        v315 = (unint64_t)v121;
        v124 = v121;
        v125 = sub_1002AA364((uint64_t)v124);
        if ((v126 & 1) != 0)
        {
          v127 = v122[7] + 112 * v125;
          v128 = *(_QWORD *)(v127 + 8);
          v305 = *(void **)v127;
          v129 = *(_QWORD *)(v127 + 16);
          v130 = *(void **)(v127 + 24);
          v131 = *(unsigned __int8 *)(v127 + 32);
          v132 = *(_QWORD *)(v127 + 40);
          v133 = *(_QWORD *)(v127 + 48);
          v135 = *(void **)(v127 + 56);
          v134 = *(void **)(v127 + 64);
          v136 = *(unsigned __int8 *)(v127 + 72);
          v302 = *(_QWORD *)(v127 + 96);
          LODWORD(v301) = *(unsigned __int8 *)(v127 + 104);
          v137 = v128;
          v298 = v129;
          v15 = (unint64_t)v130;
          LODWORD(v304) = v131;
          sub_1001EDEDC((uint64_t)v305, v128, v129, v130);
          v314 = v132;
          v138 = v132;
          v139 = v133;
          v140 = v133;
          v317 = v135;
          v141 = v134;
          v142 = v136;
          sub_1001EDEDC(v138, v140, (uint64_t)v135, v134);
        }
        else
        {
          v302 = 0;
          v314 = 0;
          v317 = 0;
          v141 = 0;
          v142 = 0;
          v305 = 0;
          v298 = 0;
          v15 = 0;
          LODWORD(v304) = 0;
          LODWORD(v301) = 1;
          v139 = 2;
          v137 = 2;
        }
        LODWORD(v306) = v142;
        v313 = v141;

        v172 = v318;
        v170 = v139;
        v121 = (void *)v315;
        v169 = v298;
        v171 = v137;
      }
      else
      {
        v302 = 0;
        v314 = 0;
        v317 = 0;
        v313 = 0;
        LODWORD(v306) = 0;
        v305 = 0;
        v169 = 0;
        v15 = 0;
        LODWORD(v304) = 0;
        LODWORD(v301) = 1;
        v170 = 2;
        v171 = 2;
        v172 = v318;
      }
      v315 = v170;
      swift_endAccess(v331);
      v177 = v322;
      v176 = v323;
      v178 = v321;
      sub_100056A54(v323, v322, v172, v321);
      sub_1001EDEEC((uint64_t)v305, v171, v169, (void *)v15);
      swift_beginAccess(&v332, v331, 33, 0);
      v179 = v121;
      sub_1001EDEDC(v176, v177, v172, v178);
      v12 = v314;
      v180 = v317;
      sub_1001EDEDC(v314, v315, (uint64_t)v317, v313);
      v18 = swift_isUniquelyReferenced_nonNull_native(v332);
      v181 = v332;
      v330 = v332;
      v332 = (_QWORD *)0x8000000000000000;
      v182 = v179;
      v184 = sub_1002AA364((uint64_t)v179);
      v185 = v181[2];
      v186 = (v183 & 1) == 0;
      v187 = v185 + v186;
      if (__OFADD__(v185, v186))
        goto LABEL_92;
      v15 = v183;
      if (v181[3] >= v187)
      {
        v190 = v323;
        if ((v18 & 1) == 0)
          sub_1002AEE64();
      }
      else
      {
        sub_100458810(v187, v18);
        v188 = sub_1002AA364((uint64_t)v182);
        v190 = v323;
        if ((v15 & 1) != (v189 & 1))
          goto LABEL_106;
        v184 = v188;
      }
      v191 = v330;
      v305 = v182;
      v317 = v180;
      if ((v15 & 1) != 0)
      {
        v192 = v330[7] + 112 * v184;
        v193 = *(_QWORD *)(v192 + 40);
        v194 = *(_QWORD *)(v192 + 48);
        v195 = *(_QWORD *)(v192 + 56);
        v196 = *(void **)(v192 + 64);
        v197 = v180;
        sub_1001EDEEC(*(_QWORD *)v192, *(_QWORD *)(v192 + 8), *(_QWORD *)(v192 + 16), *(void **)(v192 + 24));
        sub_1001EDEEC(v193, v194, v195, v196);
        v18 = (uint64_t)v321;
        v15 = v322;
        *(_QWORD *)v192 = v190;
        *(_QWORD *)(v192 + 8) = v15;
        v198 = v190;
        v199 = v318;
        *(_QWORD *)(v192 + 16) = v318;
        *(_QWORD *)(v192 + 24) = v18;
        *(_BYTE *)(v192 + 32) = v320;
        v200 = v315;
        *(_QWORD *)(v192 + 40) = v314;
        *(_QWORD *)(v192 + 48) = v200;
        *(_QWORD *)(v192 + 56) = v197;
        v201 = v313;
        *(_QWORD *)(v192 + 64) = v313;
        *(_BYTE *)(v192 + 72) = (_BYTE)v306;
        *(_QWORD *)(v192 + 80) = v303;
        *(_BYTE *)(v192 + 88) = 0;
        *(_QWORD *)(v192 + 96) = v302;
        *(_BYTE *)(v192 + 104) = v301;
      }
      else
      {
        v330[(v184 >> 6) + 8] |= 1 << v184;
        *(_QWORD *)(v191[6] + 8 * v184) = v182;
        v202 = v191[7] + 112 * v184;
        v18 = (uint64_t)v321;
        v15 = v322;
        *(_QWORD *)v202 = v190;
        *(_QWORD *)(v202 + 8) = v15;
        *(_QWORD *)(v202 + 16) = v318;
        *(_QWORD *)(v202 + 24) = v18;
        *(_BYTE *)(v202 + 32) = v320;
        v203 = v315;
        *(_QWORD *)(v202 + 40) = v12;
        *(_QWORD *)(v202 + 48) = v203;
        v204 = v313;
        *(_QWORD *)(v202 + 56) = v180;
        *(_QWORD *)(v202 + 64) = v204;
        *(_BYTE *)(v202 + 72) = (_BYTE)v306;
        *(_QWORD *)(v202 + 80) = v303;
        *(_BYTE *)(v202 + 88) = 0;
        *(_QWORD *)(v202 + 96) = v302;
        *(_BYTE *)(v202 + 104) = v301;
        v205 = v191[2];
        v113 = __OFADD__(v205, 1);
        v206 = v205 + 1;
        if (v113)
          goto LABEL_99;
        v191[2] = v206;
        v207 = v182;
        v198 = v190;
        v199 = v318;
        v201 = v313;
        v314 = v12;
      }
      v208 = v332;
      v332 = v191;
      v209 = v305;
      v210 = v198;

      swift_bridgeObjectRelease(v208);
      swift_endAccess(v331);
      sub_1001EDEEC(v210, v15, v199, (void *)v18);
      sub_1001EDEEC(v314, v315, (uint64_t)v317, v201);

      swift_bridgeObjectRelease(v300);
      goto LABEL_11;
    }
    if (v50 != v289)
      break;
    (*(void (**)(char *, uint64_t))(v23 + 96))(v22, v12);
    v86 = *(_QWORD *)v22;
    v85 = (void *)*((_QWORD *)v22 + 1);
    sub_100056A84(*((_QWORD *)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((void **)v22 + 5));
    if (v15)
    {
      if (v15 != 1)
        goto LABEL_107;
      if ((v86 & 0x8000000000000000) != 0)
        goto LABEL_100;
      v87 = v291;
      if (v86 >= *(_QWORD *)(v291 + 16))
        goto LABEL_103;
    }
    else
    {
      if ((v86 & 0x8000000000000000) != 0)
        goto LABEL_101;
      v87 = v290;
      if (v86 >= *(_QWORD *)(v290 + 16))
        goto LABEL_102;
    }
    v303 = v85;
    v143 = v87 + 40 * v86;
    v144 = *(unsigned __int8 *)(v143 + 64);
    v145 = *(void **)(v143 + 56);
    v301 = *(_QWORD *)(v143 + 40);
    swift_bridgeObjectRetain(v301);
    v300 = v145;
    v146 = (void *)TTRListOrCustomSmartListChangeItem.objectID.getter(v145, v144);
    swift_beginAccess(&v332, v331, 32, 0);
    v147 = v332;
    v148 = v332[2];
    v302 = v86;
    v317 = v146;
    if (v148)
    {
      v149 = v146;
      v150 = sub_1002AA364((uint64_t)v149);
      if ((v151 & 1) != 0)
      {
        v152 = v147[7] + 112 * v150;
        v153 = *(_QWORD *)(v152 + 8);
        v154 = *(_QWORD *)(v152 + 16);
        v155 = *(void **)(v152 + 24);
        v156 = *(unsigned __int8 *)(v152 + 32);
        v157 = *(_QWORD *)(v152 + 40);
        v158 = *(_QWORD *)(v152 + 48);
        v159 = v149;
        v160 = *(_QWORD *)(v152 + 56);
        v161 = *(void **)(v152 + 64);
        v162 = *(unsigned __int8 *)(v152 + 72);
        v299 = *(id *)v152;
        v296 = v153;
        v298 = v154;
        v297 = (uint64_t)v155;
        LODWORD(v313) = v156;
        sub_1001EDEDC((uint64_t)v299, v153, v154, v155);
        v315 = v157;
        v163 = v157;
        v164 = v158;
        v314 = v160;
        v165 = v160;
        v149 = v159;
        v166 = v161;
        v167 = v161;
        v168 = v162;
        sub_1001EDEDC(v163, v158, v165, v167);
      }
      else
      {
        v315 = 0;
        v314 = 0;
        v166 = 0;
        v168 = 0;
        v299 = 0;
        v298 = 0;
        v297 = 0;
        LODWORD(v313) = 0;
        v164 = 2;
        v296 = 2;
      }
      v304 = v164;
      v305 = v166;
      LODWORD(v306) = v168;

      v173 = (uint64_t)v299;
      v174 = v298;
      v18 = v297;
      v175 = v296;
    }
    else
    {
      v315 = 0;
      v314 = 0;
      v305 = 0;
      LODWORD(v306) = 0;
      v173 = 0;
      v174 = 0;
      v18 = 0;
      LODWORD(v313) = 0;
      v304 = 2;
      v175 = 2;
    }
    swift_endAccess(v331);
    v211 = v322;
    v12 = v323;
    v212 = v318;
    v213 = v321;
    v214 = v320;
    sub_100056A54(v323, v322, v318, v321);
    sub_1001EDEEC(v173, v175, v174, (void *)v18);
    sub_100056A54(v12, v211, v212, v213);
    sub_1001EDEEC(v315, v304, v314, v305);
    swift_beginAccess(&v332, v331, 33, 0);
    v15 = (unint64_t)v317;
    sub_1001EDEDC(v12, v211, v212, v213);
    sub_1001EDEDC(v12, v211, v212, v213);
    v215 = swift_isUniquelyReferenced_nonNull_native(v332);
    v216 = v332;
    v330 = v332;
    v332 = (_QWORD *)0x8000000000000000;
    v218 = sub_1002AA364(v15);
    v219 = v216[2];
    v220 = (v217 & 1) == 0;
    v221 = v219 + v220;
    if (__OFADD__(v219, v220))
      goto LABEL_94;
    v18 = v217;
    if (v216[3] >= v221)
    {
      v12 = v307;
      if ((v215 & 1) != 0)
      {
        v224 = v330;
        if ((v217 & 1) == 0)
          goto LABEL_79;
      }
      else
      {
        sub_1002AEE64();
        v224 = v330;
        if ((v18 & 1) == 0)
          goto LABEL_79;
      }
    }
    else
    {
      sub_100458810(v221, v215);
      v222 = sub_1002AA364(v15);
      v12 = v307;
      if ((v18 & 1) != (v223 & 1))
        goto LABEL_106;
      v218 = v222;
      v224 = v330;
      if ((v18 & 1) == 0)
      {
LABEL_79:
        v224[(v218 >> 6) + 8] |= 1 << v218;
        *(_QWORD *)(v224[6] + 8 * v218) = v15;
        v234 = v224[7] + 112 * v218;
        v235 = v322;
        v236 = v323;
        *(_QWORD *)v234 = v323;
        *(_QWORD *)(v234 + 8) = v235;
        v237 = v318;
        v18 = (uint64_t)v321;
        *(_QWORD *)(v234 + 16) = v318;
        *(_QWORD *)(v234 + 24) = v18;
        *(_BYTE *)(v234 + 32) = v214;
        *(_QWORD *)(v234 + 40) = v236;
        *(_QWORD *)(v234 + 48) = v235;
        *(_QWORD *)(v234 + 56) = v237;
        *(_QWORD *)(v234 + 64) = v18;
        *(_BYTE *)(v234 + 72) = v214;
        *(_QWORD *)(v234 + 80) = v302;
        *(_BYTE *)(v234 + 88) = 0;
        *(_QWORD *)(v234 + 96) = v303;
        *(_BYTE *)(v234 + 104) = 0;
        v238 = v224[2];
        v113 = __OFADD__(v238, 1);
        v239 = v238 + 1;
        if (v113)
          goto LABEL_104;
        v224[2] = v239;
        v240 = (id)v15;
        v232 = v322;
        v233 = v318;
        goto LABEL_81;
      }
    }
    v225 = v224[7] + 112 * v218;
    v226 = *(_QWORD *)(v225 + 40);
    v227 = *(_QWORD *)(v225 + 48);
    v228 = *(_QWORD *)(v225 + 56);
    v229 = *(void **)(v225 + 64);
    sub_1001EDEEC(*(_QWORD *)v225, *(_QWORD *)(v225 + 8), *(_QWORD *)(v225 + 16), *(void **)(v225 + 24));
    v230 = v320;
    sub_1001EDEEC(v226, v227, v228, v229);
    v232 = v322;
    v231 = v323;
    *(_QWORD *)v225 = v323;
    *(_QWORD *)(v225 + 8) = v232;
    v233 = v318;
    v18 = (uint64_t)v321;
    *(_QWORD *)(v225 + 16) = v318;
    *(_QWORD *)(v225 + 24) = v18;
    *(_BYTE *)(v225 + 32) = v230;
    *(_QWORD *)(v225 + 40) = v231;
    *(_QWORD *)(v225 + 48) = v232;
    *(_QWORD *)(v225 + 56) = v233;
    *(_QWORD *)(v225 + 64) = v18;
    *(_BYTE *)(v225 + 72) = v230;
    *(_QWORD *)(v225 + 80) = v302;
    *(_BYTE *)(v225 + 88) = 0;
    *(_QWORD *)(v225 + 96) = v303;
    *(_BYTE *)(v225 + 104) = 0;
LABEL_81:
    v241 = v332;
    v332 = v224;

    swift_bridgeObjectRelease(v241);
    swift_endAccess(v331);
    v242 = v323;
    sub_1001EDEEC(v323, v232, v233, (void *)v18);
    sub_1001EDEEC(v242, v232, v233, (void *)v18);

    swift_bridgeObjectRelease(v301);
    v22 = v311;
    v23 = v310;
    v15 = v232;
LABEL_12:
    v31 = &v319[v309];
    v28 = v316 - 1;
    if (v316 == 1)
    {
      v24 = v288;
      swift_bridgeObjectRelease(v288);
      v25 = v323;
      v26 = v318;
      sub_1001EDEEC(v323, v15, v318, (void *)v18);
      sub_1001EDEEC(v25, v15, v26, (void *)v18);
      swift_bridgeObjectRelease(v24);
      v18 = v286;
      v19 = v285;
      v20 = v287;
      v21 = v284;
      goto LABEL_4;
    }
    v312(v22, v31, v12, v49);
  }
  if (v50 != enum case for ExtendedPatch.update<A>(_:))
    goto LABEL_114;
  swift_bridgeObjectRelease(v286);
  v252 = v288;
  swift_bridgeObjectRelease(v288);
  (*(void (**)(char *, uint64_t))(v23 + 96))(v22, v12);
  v253 = *((_QWORD *)v22 + 6);
  v254 = *((_QWORD *)v22 + 7);
  v255 = *((_QWORD *)v22 + 8);
  v256 = (void *)*((_QWORD *)v22 + 9);
  sub_100056A84(*((_QWORD *)v22 + 1), *((_QWORD *)v22 + 2), *((_QWORD *)v22 + 3), *((void **)v22 + 4));
  sub_100056A84(v253, v254, v255, v256);
  v257 = sub_1001EDE98();
  v258 = swift_allocError(&type metadata for TTRIGroupMembershipViewModel.Diff.DiffError, v257, 0, 0);
  *v259 = 4;
  swift_willThrow(v258);
  v260 = v322;
  v261 = v323;
  v262 = v318;
  a3 = v321;
  sub_1001EDEEC(v323, v322, v318, v321);
  sub_1001EDEEC(v261, v260, v262, a3);
  v251 = v252;
LABEL_87:
  swift_bridgeObjectRelease(v251);
  swift_bridgeObjectRelease(v332);
  return (uint64_t)a3;
}

uint64_t sub_1001EDC24(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1001EC294(a1, a2, a3, a4);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a3);
  return v8;
}

_QWORD *sub_1001EDE5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[40];

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_100056B1C(a1, (uint64_t)v5);
  return sub_1001EB868((uint64_t)v5, v2, v3);
}

unint64_t sub_1001EDE98()
{
  unint64_t result;

  result = qword_10064C9B8;
  if (!qword_10064C9B8)
  {
    result = swift_getWitnessTable(&unk_100528DAC, &type metadata for TTRIGroupMembershipViewModel.Diff.DiffError);
    atomic_store(result, (unint64_t *)&qword_10064C9B8);
  }
  return result;
}

uint64_t sub_1001EDEDC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 != 2)
    return sub_100056A54(a1, a2, a3, a4);
  return a1;
}

void sub_1001EDEEC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 != 2)
    sub_100056A84(a1, a2, a3, a4);
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRIGroupMembershipViewModel.Diff(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for TTRIGroupMembershipViewModel.Diff(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *initializeWithTake for TTRWelcomeContentStyle(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *assignWithTake for TTRIGroupMembershipViewModel.Diff(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_1001EE040(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.Diff()
{
  return &type metadata for TTRIGroupMembershipViewModel.Diff;
}

void destroy for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 2)
  {
    swift_bridgeObjectRelease(v2);

  }
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 2)
  {
    swift_bridgeObjectRelease(v3);

  }
}

uint64_t initializeWithCopy for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  void *v6;
  char v7;
  id v8;
  unint64_t v9;
  __int128 v10;
  void *v11;
  char v12;
  id v13;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 >= 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(void **)(a2 + 24);
    v7 = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = v7;
    swift_bridgeObjectRetain(v4);
    v8 = v6;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  if (v9 >= 2)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v11 = *(void **)(a2 + 72);
    v12 = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v11;
    *(_BYTE *)(a1 + 80) = v12;
    swift_bridgeObjectRetain(v9);
    v13 = v11;
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  uint64_t v14;
  void *v15;
  char v16;
  void *v17;
  id v18;
  _OWORD *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  id v30;
  uint64_t v31;
  void *v32;
  char v33;
  void *v34;
  id v35;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *((_QWORD *)a2 + 1);
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v14 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v4);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v15 = (void *)*((_QWORD *)a2 + 3);
      v16 = *((_BYTE *)a2 + 32);
      v17 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 32) = v16;
      v18 = v15;

    }
    else
    {
      sub_1001EE36C(a1);
      v8 = *((_BYTE *)a2 + 32);
      v9 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v5 >= 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v10 = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v10;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v11 = (void *)*((_QWORD *)a2 + 3);
    v12 = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v12;
    swift_bridgeObjectRetain(v10);
    v13 = v11;
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v7;
  }
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  v19 = (_OWORD *)(a1 + 48);
  v20 = a2 + 3;
  v21 = *(_QWORD *)(a1 + 56);
  v22 = *((_QWORD *)a2 + 7);
  if (v21 >= 2)
  {
    if (v22 >= 2)
    {
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      v31 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v21);
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      v32 = (void *)*((_QWORD *)a2 + 9);
      v33 = *((_BYTE *)a2 + 80);
      v34 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = v32;
      *(_BYTE *)(a1 + 80) = v33;
      v35 = v32;

    }
    else
    {
      sub_1001EE36C(a1 + 48);
      v25 = *((_BYTE *)a2 + 80);
      v26 = a2[4];
      *v19 = *v20;
      *(_OWORD *)(a1 + 64) = v26;
      *(_BYTE *)(a1 + 80) = v25;
    }
  }
  else if (v22 >= 2)
  {
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    v27 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v27;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v28 = (void *)*((_QWORD *)a2 + 9);
    v29 = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 72) = v28;
    *(_BYTE *)(a1 + 80) = v29;
    swift_bridgeObjectRetain(v27);
    v30 = v28;
  }
  else
  {
    v23 = *v20;
    v24 = a2[4];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *v19 = v23;
    *(_OWORD *)(a1 + 64) = v24;
  }
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  return a1;
}

uint64_t sub_1001EE36C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  return a1;
}

__n128 initializeWithTake for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  char v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  char v12;
  void *v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 2)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 2)
  {
    sub_1001EE36C(a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v7;

LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 56);
  if (v9 >= 2)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if (v10 >= 2)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v10;
      swift_bridgeObjectRelease(v9);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v12 = *(_BYTE *)(a2 + 80);
      v13 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = v12;

      goto LABEL_11;
    }
    sub_1001EE36C(a1 + 48);
  }
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_11:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff.Move(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff.Move(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.Diff.Move()
{
  return &type metadata for TTRIGroupMembershipViewModel.Diff.Move;
}

void destroy for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 3)
  {
    swift_bridgeObjectRelease(v2);

  }
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 3)
  {
    swift_bridgeObjectRelease(v3);

  }
}

uint64_t initializeWithCopy for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  void *v6;
  char v7;
  id v8;
  unint64_t v9;
  __int128 v10;
  void *v11;
  char v12;
  id v13;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 <= 2)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(void **)(a2 + 24);
    v7 = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = v7;
    swift_bridgeObjectRetain(v4);
    v8 = v6;
  }
  v9 = *(_QWORD *)(a2 + 48);
  if (v9 <= 2)
  {
    v10 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v11 = *(void **)(a2 + 64);
    v12 = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = v12;
    swift_bridgeObjectRetain(v9);
    v13 = v11;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  char v10;
  id v11;
  char v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  char v22;
  id v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  char v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  char v36;
  void *v37;
  id v38;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *((_QWORD *)a2 + 1);
  if (v4 == 2)
  {
    if (v5 <= 2)
    {
LABEL_3:
      v6 = *a2;
      v7 = a2[1];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)a1 = v6;
      *(_OWORD *)(a1 + 16) = v7;
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  if (v5 == 2)
  {
    sub_1001EE904(a1);
LABEL_11:
    v12 = *((_BYTE *)a2 + 32);
    v13 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 32) = v12;
    goto LABEL_12;
  }
  if (v4 < 2)
  {
    if (v5 < 2)
      goto LABEL_3;
LABEL_8:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = (void *)*((_QWORD *)a2 + 3);
    v10 = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    swift_bridgeObjectRetain(v8);
    v11 = v9;
    goto LABEL_12;
  }
  if (v5 < 2)
  {
    sub_1001EE36C(a1);
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v29 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v30 = (void *)*((_QWORD *)a2 + 3);
  v31 = *((_BYTE *)a2 + 32);
  v32 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v30;
  *(_BYTE *)(a1 + 32) = v31;
  v33 = v30;

LABEL_12:
  v14 = (_OWORD *)(a1 + 40);
  v15 = (__int128 *)((char *)a2 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *((_QWORD *)a2 + 6);
  if (v16 != 2)
  {
    if (v17 == 2)
    {
      sub_1001EE904(a1 + 40);
    }
    else
    {
      if (v16 < 2)
      {
        if (v17 < 2)
          goto LABEL_14;
LABEL_19:
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v20 = *((_QWORD *)a2 + 6);
        *(_QWORD *)(a1 + 48) = v20;
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        v21 = (void *)*((_QWORD *)a2 + 8);
        v22 = *((_BYTE *)a2 + 72);
        *(_QWORD *)(a1 + 64) = v21;
        *(_BYTE *)(a1 + 72) = v22;
        swift_bridgeObjectRetain(v20);
        v23 = v21;
        goto LABEL_23;
      }
      if (v17 >= 2)
      {
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v34 = *((_QWORD *)a2 + 6);
        *(_QWORD *)(a1 + 48) = v34;
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRelease(v16);
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        v35 = (void *)*((_QWORD *)a2 + 8);
        v36 = *((_BYTE *)a2 + 72);
        v37 = *(void **)(a1 + 64);
        *(_QWORD *)(a1 + 64) = v35;
        *(_BYTE *)(a1 + 72) = v36;
        v38 = v35;

        goto LABEL_23;
      }
      sub_1001EE36C(a1 + 40);
    }
    v24 = *((_BYTE *)a2 + 72);
    v25 = *(__int128 *)((char *)a2 + 56);
    *v14 = *v15;
    *(_OWORD *)(a1 + 56) = v25;
    *(_BYTE *)(a1 + 72) = v24;
    goto LABEL_23;
  }
  if (v17 > 2)
    goto LABEL_19;
LABEL_14:
  v18 = *v15;
  v19 = *(__int128 *)((char *)a2 + 56);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *v14 = v18;
  *(_OWORD *)(a1 + 56) = v19;
LABEL_23:
  v26 = *((_QWORD *)a2 + 10);
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v26;
  v27 = *((_QWORD *)a2 + 12);
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v27;
  return a1;
}

uint64_t sub_1001EE904(uint64_t a1)
{
  destroy for TTRIGroupMembershipViewModel.Item(a1);
  return a1;
}

__n128 initializeWithTake for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  char v11;
  void *v12;
  char v13;
  void *v14;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v4 == 2)
    goto LABEL_7;
  if (v5 == 2)
  {
    sub_1001EE904(a1);
LABEL_7:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    goto LABEL_8;
  }
  if (v4 < 2)
    goto LABEL_7;
  if (v5 < 2)
  {
    sub_1001EE36C(a1);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 32);
  v12 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v11;

LABEL_8:
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 48);
  if (v7 != 2)
  {
    if (v8 == 2)
    {
      sub_1001EE904(a1 + 40);
    }
    else if (v7 >= 2)
    {
      if (v8 >= 2)
      {
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v8;
        swift_bridgeObjectRelease(v7);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v13 = *(_BYTE *)(a2 + 72);
        v14 = *(void **)(a1 + 64);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_BYTE *)(a1 + 72) = v13;

        goto LABEL_15;
      }
      sub_1001EE36C(a1 + 40);
    }
  }
  v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
LABEL_15:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff.PartialMove(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.Diff.PartialMove()
{
  return &type metadata for TTRIGroupMembershipViewModel.Diff.PartialMove;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PriorityOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.Diff.DiffError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001EEC84 + 4 * byte_100528B95[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001EECB8 + 4 * byte_100528B90[v4]))();
}

uint64_t sub_1001EECB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EECC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001EECC8);
  return result;
}

uint64_t sub_1001EECD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001EECDCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001EECE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EECE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.Diff.DiffError()
{
  return &type metadata for TTRIGroupMembershipViewModel.Diff.DiffError;
}

void destroy for TTRIGroupMembershipViewModel.Item(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);

  }
}

uint64_t initializeWithCopy for TTRIGroupMembershipViewModel.Item(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  char v5;
  id v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v4 = *(void **)(a2 + 24);
    v5 = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_BYTE *)(a1 + 32) = v5;
    swift_bridgeObjectRetain(v3);
    v6 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for TTRIGroupMembershipViewModel.Item(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  char v13;
  id v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *((_QWORD *)a2 + 1);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v11;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v12 = (void *)*((_QWORD *)a2 + 3);
      v13 = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v12;
      *(_BYTE *)(a1 + 32) = v13;
      swift_bridgeObjectRetain(v11);
      v14 = v12;
      return a1;
    }
LABEL_7:
    v15 = *a2;
    v16 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v15;
    *(_OWORD *)(a1 + 16) = v16;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v7 = (void *)*((_QWORD *)a2 + 3);
  v8 = *((_BYTE *)a2 + 32);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v10 = v7;

  return a1;
}

__n128 initializeWithTake for TTRIGroupMembershipViewModel.List(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIGroupMembershipViewModel.Item(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  __int128 v8;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);

LABEL_5:
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v6;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewModel.Item(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1001EEFFC(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.Item()
{
  return &type metadata for TTRIGroupMembershipViewModel.Item;
}

void destroy for TTRIGroupMembershipViewModel.List(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for TTRIGroupMembershipViewModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain(v3);
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRIGroupMembershipViewModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v9 = v6;

  return a1;
}

uint64_t assignWithTake for TTRIGroupMembershipViewModel.List(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 32);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v6;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIGroupMembershipViewModel.List(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIGroupMembershipViewModel.List(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupMembershipViewModel.List()
{
  return &type metadata for TTRIGroupMembershipViewModel.List;
}

unint64_t sub_1001EF208()
{
  unint64_t result;

  result = qword_10064C9C0;
  if (!qword_10064C9C0)
  {
    result = swift_getWitnessTable(&unk_100528C0C, &type metadata for TTRIGroupMembershipViewModel.List);
    atomic_store(result, (unint64_t *)&qword_10064C9C0);
  }
  return result;
}

unint64_t sub_1001EF250()
{
  unint64_t result;

  result = qword_10064C9C8;
  if (!qword_10064C9C8)
  {
    result = swift_getWitnessTable(&unk_100528C74, &type metadata for TTRIGroupMembershipViewModel.Item);
    atomic_store(result, (unint64_t *)&qword_10064C9C8);
  }
  return result;
}

unint64_t sub_1001EF298()
{
  unint64_t result;

  result = qword_10064C9D0;
  if (!qword_10064C9D0)
  {
    result = swift_getWitnessTable(&unk_100528D1C, &type metadata for TTRIGroupMembershipViewModel.Diff.DiffError);
    atomic_store(result, (unint64_t *)&qword_10064C9D0);
  }
  return result;
}

unint64_t sub_1001EF2E0()
{
  unint64_t result;

  result = qword_10064C9D8;
  if (!qword_10064C9D8)
  {
    result = swift_getWitnessTable(&unk_100528D44, &type metadata for TTRIGroupMembershipViewModel.Diff.Move);
    atomic_store(result, (unint64_t *)&qword_10064C9D8);
  }
  return result;
}

uint64_t sub_1001EF324(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1001EF350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v43)(char *);
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  unsigned int v50;
  void (*v51)(char *);
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a1;
  v54 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v52 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v9);
  v53 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppIntentsDependencyKey(0);
  v12 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v18 = sub_10002A750(&qword_10064CA58);
  v19 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  v57 = v19;
  __chkstk_darwin(v18);
  v55 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v59 = (char *)&v43 - v22;
  v46 = sub_10002A750(&qword_10063D900);
  v50 = enum case for AppIntentsDependencyKey.remStore(_:);
  v51 = (void (*)(char *))v12[13];
  v51(v17);
  v49 = (void (*)(char *, char *, uint64_t))v12[2];
  v49(v14, v17, v11);
  v48 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(&v60, v14, v11, v48);
  v47 = (void (*)(char *, uint64_t))v12[1];
  v47(v17, v11);
  v45 = type metadata accessor for AppDependencyManager(0);
  v23 = ((uint64_t (*)(void))static AppDependencyManager.shared.getter)();
  v24 = AppDependency.__allocating_init(key:manager:)(&v60, v23);
  LOBYTE(v60) = 1;
  v61 = v24;
  v25 = v8;
  v26 = String.LocalizationValue.init(stringLiteral:)(0x4C2064656E6E6950, 0xEC00000073747369);
  static Locale.current.getter(v26);
  v44 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v43 = *(void (**)(char *))(v1 + 104);
  v27 = v52;
  v28 = v54;
  v43(v52);
  v29 = v53;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v25, 0x6E65746E49707041, 0xEA00000000007374, v5, v27, 0, 0, 256);
  v30 = sub_1001F03F8();
  AppShortcutOptionsCollection.init(_:title:systemImageName:)(&v60, v29, 0x7061687372616567, 0xEE006C6C69662E65, &type metadata for AnyListEntityQuery, v30);
  ((void (*)(char *, _QWORD, uint64_t))v51)(v17, v50, v11);
  v49(v14, v17, v11);
  AnyHashable.init<A>(_:)(&v60, v14, v11, v48);
  v31 = ((uint64_t (*)(char *, uint64_t))v47)(v17, v11);
  v32 = static AppDependencyManager.shared.getter(v31);
  v33 = AppDependency.__allocating_init(key:manager:)(&v60, v32);
  LOBYTE(v60) = 2;
  v61 = v33;
  v34 = String.LocalizationValue.init(stringLiteral:)(0x737473694C20794DLL, 0xE800000000000000);
  static Locale.current.getter(v34);
  ((void (*)(char *, _QWORD, uint64_t))v43)(v27, v44, v28);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v25, 0x6E65746E49707041, 0xEA00000000007374, v5, v27, 0, 0, 256);
  v35 = v55;
  AppShortcutOptionsCollection.init(_:title:systemImageName:)(&v60, v29, 0x6D756E2E7473696CLL, 0xEB00000000726562, &type metadata for AnyListEntityQuery, v30);
  v36 = type metadata accessor for AnyListEntity(0);
  v37 = sub_1000175C8(&qword_10064CA48, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  v38 = sub_1001F03AC();
  v39 = v59;
  v40 = v56;
  static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A, B>(_:_:)(v59, v35, v36, v56, v56, v37, v38, v38);
  v41 = *(void (**)(char *, uint64_t))(v57 + 8);
  v41(v35, v40);
  return ((uint64_t (*)(char *, uint64_t))v41)(v39, v40);
}

ValueMetadata *type metadata accessor for TTRAppShortcutsProvider()
{
  return &type metadata for TTRAppShortcutsProvider;
}

uint64_t sub_1001EF890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  Swift::String v54;
  Swift::String v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  Swift::String v63;
  Swift::String v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t OpaqueTypeConformance2;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  void (*v79)(char *);
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, _QWORD, uint64_t);
  unsigned int v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  __int128 v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD v102[6];
  uint64_t v103;

  v0 = sub_10002A750(&qword_10064C9E0);
  __chkstk_darwin(v0);
  v94 = (char *)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10002A750(&qword_10064C9E8);
  __chkstk_darwin(v92);
  v91 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10002A750(&qword_10064C9F0);
  __chkstk_darwin(v3);
  v93 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_10064C9F8);
  __chkstk_darwin(v5);
  v95 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10002A750(&qword_10064CA00);
  __chkstk_darwin(v89);
  v88 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v87 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v84 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v97 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v96 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = __chkstk_darwin(v13);
  v101 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for AppShortcutPhraseToken(0, v14);
  v16 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_10064CA08);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v78 - v24;
  v100 = type metadata accessor for AppShortcut(0, v23);
  v86 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10002A750(&qword_10064CA10);
  v28 = *(_QWORD *)(sub_10002A750(&qword_10064CA18) - 8);
  v80 = *(_QWORD *)(v28 + 72);
  v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80)) + 2 * v80, *(unsigned __int8 *)(v28 + 80) | 7);
  v90 = xmmword_1005201E0;
  v85 = v29;
  *(_OWORD *)(v29 + 16) = xmmword_1005201E0;
  v30 = sub_1001F02FC();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenNewReminderAppIntent, v30);
  v31._countAndFlagsBits = 0xD00000000000001ALL;
  v31._object = (void *)0x800000010056C770;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = enum case for AppShortcutPhraseToken.applicationName(_:);
  v33 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v83 = enum case for AppShortcutPhraseToken.applicationName(_:);
  v34 = v78;
  v33(v18, enum case for AppShortcutPhraseToken.applicationName(_:), v78);
  v82 = v33;
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v18, v19);
  v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  v35(v18, v34);
  v81 = v35;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v36);
  AppShortcutPhrase.init(stringInterpolation:)(v25, &type metadata for OpenNewReminderAppIntent, v30);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for OpenNewReminderAppIntent, v30);
  v37._object = (void *)0x800000010056C790;
  v37._countAndFlagsBits = 0xD000000000000019;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v37);
  v33(v18, v32, v34);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v18, v19);
  v35(v18, v34);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v38);
  AppShortcutPhrase.init(stringInterpolation:)(v21, &type metadata for OpenNewReminderAppIntent, v30);
  v39 = v96;
  v40 = String.LocalizationValue.init(stringLiteral:)(0x696D65522077654ELL, 0xEC0000007265646ELL);
  v41 = v97;
  static Locale.current.getter(v40);
  LODWORD(v80) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v79 = *(void (**)(char *))(v87 + 104);
  v42 = v84;
  v79(v84);
  v43 = v101;
  v44 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v39, 0x6E65746E49707041, 0xEA00000000007374, v41, v42, 0, 0, 256);
  v45 = v98;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)(v44, v85, v43, 1937075312, 0xE400000000000000, &type metadata for OpenNewReminderAppIntent, v30);
  v87 = static AppShortcutsBuilder.buildExpression(_:)(v45);
  v86 = *(_QWORD *)(v86 + 8);
  ((void (*)(char *, uint64_t))v86)(v45, v100);
  v103 = _s9Reminders20OpenAnyListAppIntentVACycfC_0();
  v46 = sub_10002A750(&qword_10064CA28);
  v47 = *(_QWORD *)(sub_10002A750(&qword_10064CA30) - 8);
  v85 = swift_allocObject(v46, ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72), *(unsigned __int8 *)(v47 + 80) | 7);
  *(_OWORD *)(v85 + 16) = xmmword_100520250;
  v48 = sub_1001F0340();
  v49 = v88;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for OpenAnyListAppIntent, v48);
  v50._countAndFlagsBits = 0x206E65704FLL;
  v50._object = (void *)0xE500000000000000;
  v51 = v89;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v50);
  KeyPath = swift_getKeyPath(&unk_100528E38);
  v53 = sub_10002A750(&qword_10064CA40);
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v51, v53);
  swift_release();
  v54._countAndFlagsBits = 544106784;
  v54._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v54);
  v82(v18, v83, v34);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v18, v51);
  v81(v18, v34);
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v55);
  AppShortcutPhrase.init(stringInterpolation:)(v49, &type metadata for OpenAnyListAppIntent, v48);
  v56 = v96;
  v57 = String.LocalizationValue.init(stringLiteral:)(0x73694C206E65704FLL, 0xE900000000000074);
  v58 = v97;
  static Locale.current.getter(v57);
  ((void (*)(char *, _QWORD, uint64_t))v79)(v42, v80, v99);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E65746E49707041, 0xEA00000000007374, v58, v42, 0, 0, 256);
  v99 = swift_getKeyPath(&unk_100528E38);
  v59 = type metadata accessor for AnyListEntity(0);
  v60 = sub_10002A750(&qword_10063D8F0);
  v61 = sub_1000175C8(&qword_10064CA48, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  v62 = v91;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenAnyListAppIntent, v59, v60, v53, v48, v61);
  v63._countAndFlagsBits = 0x206E65704FLL;
  v63._object = (void *)0xE500000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v63);
  swift_getKeyPath(&unk_100528E38);
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v64);
  v65 = v94;
  AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)(v62, &type metadata for OpenAnyListAppIntent, v59, v60, v53, v48, v61);
  v66 = v93;
  AppShortcutParameterPresentationSummary.init(_:table:)(v65, "AppIntents", 10, 2, &type metadata for OpenAnyListAppIntent, v59, v60, v53, v48, v61);
  v67 = sub_10002A750(&qword_10064CA50);
  v68 = sub_10002CA5C(&qword_10064CA58);
  v69 = sub_1001F03AC();
  v102[0] = v59;
  v102[1] = v68;
  v102[2] = v68;
  v102[3] = v61;
  v102[4] = v69;
  v102[5] = v69;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v102, &opaque type descriptor for <<opaque return type of static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A, B>(_:_:)>>, 1);
  v71 = v95;
  AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)(v99, v66, sub_1001EF350, 0, v53, v67, v48, OpaqueTypeConformance2);
  v72 = v98;
  AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)(&v103, v85, v101, 0x6C75622E7473696CLL, 0xEB0000000074656CLL, v71, &type metadata for OpenAnyListAppIntent, v59, v60, v53, v48, v61);
  v73 = static AppShortcutsBuilder.buildExpression(_:)(v72);
  ((void (*)(char *, uint64_t))v86)(v72, v100);
  v74 = sub_10002A750(&qword_10064CA68);
  v75 = swift_allocObject(v74, 48, 7);
  *(_OWORD *)(v75 + 16) = v90;
  *(_QWORD *)(v75 + 32) = v87;
  *(_QWORD *)(v75 + 40) = v73;
  v76 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v75);
  return v76;
}

unint64_t sub_1001F02FC()
{
  unint64_t result;

  result = qword_10064CA20;
  if (!qword_10064CA20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNewReminderAppIntent, &type metadata for OpenNewReminderAppIntent);
    atomic_store(result, (unint64_t *)&qword_10064CA20);
  }
  return result;
}

unint64_t sub_1001F0340()
{
  unint64_t result;

  result = qword_10064CA38;
  if (!qword_10064CA38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAnyListAppIntent, &type metadata for OpenAnyListAppIntent);
    atomic_store(result, (unint64_t *)&qword_10064CA38);
  }
  return result;
}

uint64_t sub_1001F0384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001F03AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064CA60;
  if (!qword_10064CA60)
  {
    v1 = sub_10002CA5C(&qword_10064CA58);
    result = swift_getWitnessTable(&protocol conformance descriptor for AppShortcutOptionsCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10064CA60);
  }
  return result;
}

unint64_t sub_1001F03F8()
{
  unint64_t result;

  result = qword_10064CA70;
  if (!qword_10064CA70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyListEntityQuery, &type metadata for AnyListEntityQuery);
    atomic_store(result, (unint64_t *)&qword_10064CA70);
  }
  return result;
}

uint64_t sub_1001F043C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _BYTE v17[24];

  v3 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
  swift_beginAccess(v9, v17, 0, 0);
  sub_10000735C(v9, (uint64_t)v5, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000F614((uint64_t)v5, (uint64_t)v8, (uint64_t *)&unk_100646F40);
    }
    else
    {
      v12 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    }
  }
  else
  {
    sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v11 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) == 1)
  {
    result = sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100646F40);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_QWORD *)(a1 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = &protocol witness table for TTRRemindersListViewModel.Reminder;
    v15 = sub_100028D70((_QWORD *)a1);
    return sub_10001F580((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return result;
}

uint64_t sub_1001F0614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064CA78);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064CA78);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1001F06A4(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver] = 0;
  v13 = &v6[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
  v14 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = sub_10002A750((uint64_t *)&unk_1006572F0);
  swift_storeEnumTagMultiPayload(v13, v15, 1);
  v16 = OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_roundedCorners;
  v17 = v6;
  *(_QWORD *)&v6[v16] = *(_QWORD *)TTRRectCorners.allCorners.unsafeMutableAddressor();
  v18 = &v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v19 = &v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_notesModule];
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *((_OWORD *)v19 + 2) = 0u;
  v20 = &v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule];
  *((_OWORD *)v20 + 1) = 0u;
  *((_OWORD *)v20 + 2) = 0u;
  *(_OWORD *)v20 = 0u;
  *(_QWORD *)&v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement] = 0;

  v23.receiver = v17;
  v23.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  TTRIRemindersListReminderCellAccessibilityElementContaining.ttriCreateReminderAccessibilityElement()();
  sub_1001F081C();

  return v21;
}

uint64_t sub_1001F081C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_10002A750(&qword_100641268);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIBackgroundConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  v10 = sub_10002A750(&qword_10064CBC8);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver) = TTRViewModelObserver.init(didReceiveNewValue:)(sub_1001FAB38, v9);
  swift_release();
  sub_1001F1AA0();
  v11 = static UIBackgroundConfiguration.clear()();
  UIBackgroundConfiguration.cornerRadius.setter(v11, 12.0);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  UIBackgroundConfiguration.strokeColor.setter(v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  UICollectionViewCell.backgroundConfiguration.setter(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1001F09D0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = &v2[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver] = 0;
  v7 = &v2[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
  v8 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = sub_10002A750((uint64_t *)&unk_1006572F0);
  swift_storeEnumTagMultiPayload(v7, v9, 1);
  v10 = OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_roundedCorners;
  v11 = v3;
  *(_QWORD *)&v3[v10] = *(_QWORD *)TTRRectCorners.allCorners.unsafeMutableAddressor();
  v12 = &v11[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  v13 = &v11[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_notesModule];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  v14 = &v11[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule];
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *(_OWORD *)v14 = 0u;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement] = 0;

  v19.receiver = v11;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, "initWithCoder:", a1);
  v16 = v15;
  if (v15)
  {
    v17 = v15;
    TTRIRemindersListReminderCellAccessibilityElementContaining.ttriCreateReminderAccessibilityElement()();
    sub_1001F081C();

  }
  return v16;
}

uint64_t sub_1001F0B5C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  id v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  double v34;
  char v35;
  double v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  int v45;
  id v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  char *v55;
  Class isa;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  objc_class *ObjectType;
  char *v64;
  uint64_t v65;
  _QWORD aBlock[6];
  objc_super v67;

  v3 = v2;
  v65 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for UICellConfigurationState.DropState(0);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  __chkstk_darwin(v4);
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICellConfigurationState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100641268);
  __chkstk_darwin(v10);
  v62 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - v13;
  v15 = type metadata accessor for UIBackgroundConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.backgroundConfiguration.getter(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    static UIBackgroundConfiguration.clear()();
    v20 = sub_1000073A0((uint64_t)v14, &qword_100641268);
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  }
  v21 = UIBackgroundConfiguration.customView.getter(v20);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = type metadata accessor for TTRIBoardReminderCellBackgroundStrokeView();
    v24 = (char *)swift_dynamicCastClass(v22, v23);
    if (v24)
      goto LABEL_10;

  }
  v59 = v3;
  v25 = type metadata accessor for TTRIBoardReminderCellBackgroundStrokeView();
  v26 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)), "init");
  objc_msgSend(v26, "setAutoresizingMask:", 18);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v27 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v28 = *(void **)&v26[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor];
  *(_QWORD *)&v26[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor] = v27;
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v29 = v27;
  v30 = static NSObject.== infix(_:_:)(v29, v28);

  if ((v30 & 1) == 0)
    objc_msgSend(v26, "setNeedsLayout");

  v24 = v26;
  UIBackgroundConfiguration.customView.setter(v26);
  v3 = v59;
LABEL_10:
  v31 = v65;
  v32 = UICellConfigurationState.isHighlighted.getter();
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v31, v6);
  if ((v32 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v34 = 1.5;
  }
  else
  {
    v35 = UICellConfigurationState.isSelected.getter(v33);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v34 = 0.0;
    if ((v35 & 1) != 0)
      v34 = 1.5;
  }
  v36 = *(double *)&v24[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth];
  *(double *)&v24[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth] = v34;
  v37 = v61;
  if (v34 != v36)
    objc_msgSend(v24, "setNeedsLayout");
  v38 = objc_msgSend(v3, "traitCollection");
  v39 = (void *)UITraitCollection.modifyingTraits(_:)(sub_1001F1134, 0);

  v40 = (void *)objc_opt_self(UIColor);
  v41 = objc_msgSend(v40, "secondarySystemBackgroundColor");
  v59 = v39;
  v42 = objc_msgSend(v41, "resolvedColorWithTraitCollection:", v39);

  v43 = v64;
  UICellConfigurationState.cellDropState.getter();
  v44 = v60;
  v45 = (*(uint64_t (**)(char *, uint64_t))(v60 + 88))(v43, v37);
  if (v45 == enum case for UICellConfigurationState.DropState.none(_:)
    || v45 == enum case for UICellConfigurationState.DropState.notTargeted(_:))
  {
    v46 = v42;
  }
  else if (v45 == enum case for UICellConfigurationState.DropState.targeted(_:))
  {
    v46 = objc_msgSend(v40, "systemFillColor");
  }
  else
  {
    v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v46 = v42;
    v47(v64, v37);
  }
  if ((UICellConfigurationState.isFocused.getter() & 1) != 0)
  {
    v48 = swift_allocObject(&unk_1005F7380, 24, 7);
    *(_QWORD *)(v48 + 16) = v46;
    v49 = v3;
    v50 = objc_allocWithZone((Class)UIColor);
    aBlock[4] = sub_1001FAB30;
    aBlock[5] = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001F8558;
    aBlock[3] = &unk_1005F7398;
    v51 = _Block_copy(aBlock);
    v52 = v46;
    v53 = v50;
    v3 = v49;
    v54 = objc_msgSend(v53, "initWithDynamicProvider:", v51);
    _Block_release(v51);
    swift_release();
  }
  else
  {
    v54 = v46;
  }
  UIBackgroundConfiguration.backgroundColor.setter(v54);
  v55 = v62;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v62, v19, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v55, 0, 1, v15);
  UICollectionViewCell.backgroundConfiguration.setter(v55);
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v67.receiver = v3;
  v67.super_class = ObjectType;
  objc_msgSendSuper2(&v67, "_bridgedUpdateConfigurationUsingState:", isa);

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1001F1134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_100028D48(a1, v1);
  return UIMutableTraits.accessibilityContrast.setter(0, v1, v2);
}

void sub_1001F1170(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v5 = objc_msgSend(v4, "resolvedColorWithTraitCollection:", a1);

  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.15);
  v7 = objc_msgSend(a2, "resolvedColorWithTraitCollection:", a1);
  v8 = objc_msgSend(v7, "_colorBlendedWithColor:", v6);

  if (v8)
  else
    __break(1u);
}

id sub_1001F12F8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id result;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750((uint64_t *)&unk_1006572F0);
  v6 = __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16.receiver = v3;
  v16.super_class = ObjectType;
  result = objc_msgSendSuper2(&v16, "prepareForReuse", v6);
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver])
  {
    swift_retain();
    TTRViewModelObserver.unsubscribe()();
    swift_release();
    v10 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
    swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v15, 33, 0);
    sub_10000735C(v10, (uint64_t)v8, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v5);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006572F0);
        return (id)swift_endAccess(v15);
      }
      sub_1000073A0(v10, (uint64_t *)&unk_1006572F0);
      v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
    }
    else
    {
      sub_1000073A0(v10, (uint64_t *)&unk_1006572F0);
      sub_10001F580((uint64_t)v8, v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      v12 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload(v10, v5, 1);
    return (id)swift_endAccess(v15);
  }
  __break(1u);
  return result;
}

double sub_1001F15C0(double a1, double a2, float a3, float a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  int v19;
  float v20;

  v5 = v4;
  v20 = a3;
  v19 = 1112014848;
  type metadata accessor for UILayoutPriority(0);
  v11 = v10;
  v12 = sub_1000175C8(&qword_10064CBC0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  if ((dispatch thunk of static Comparable.< infix(_:_:)(&v19, &v20, v11, v12) & 1) == 0)
    a1 = 0.0;
  v20 = a4;
  v19 = 1112014848;
  if ((dispatch thunk of static Comparable.< infix(_:_:)(&v19, &v20, v11, v12) & 1) == 0)
    a2 = 0.0;
  v13 = objc_msgSend(v5, "contentView");
  *(float *)&v14 = a3;
  *(float *)&v15 = a4;
  objc_msgSend(v13, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", a1, a2, v14, v15);
  v17 = v16;

  return v17;
}

void sub_1001F17B8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1005F7308, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005F7330, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1001FAAE0;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_10001B278;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001B258;
  v7[3] = &unk_1005F7348;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 133, 164, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1001F1920()
{
  uint64_t result;

  type metadata accessor for TTRCounterBasedIdentifierGenerator(0);
  result = TTRCounterBasedIdentifierGenerator.__allocating_init()();
  qword_10064CA90 = result;
  return result;
}

void sub_1001F1950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState, v11, 33, 0);
    sub_10000735C(v8, (uint64_t)v5, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_1006572F0);
    }
    else
    {
      sub_1000073A0(v8, (uint64_t *)&unk_1006572F0);
      v10 = *(int *)(sub_10002A750(&qword_10064CB50) + 48);
      sub_10001F580((uint64_t)v5, v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      *(_BYTE *)(v8 + v10) = 0;
      swift_storeEnumTagMultiPayload(v8, v3, 0);
    }
    swift_endAccess(v11);
    sub_1001F1AA0();

  }
}

void sub_1001F1AA0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t ObjectType;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  char v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, _UNKNOWN **, uint64_t, uint64_t, __n128);
  char *v122;
  __n128 v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE v151[24];
  __int128 v152;
  __int128 v153;
  __int128 v154;
  char v155[24];
  char v156[24];
  char v157[24];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v142 = (uint64_t)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v147 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v5);
  v143 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v140 = (uint64_t)&v136 - v8;
  v9 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v10 = *(_QWORD *)(v9 - 8);
  v148 = v9;
  v149 = v10;
  __chkstk_darwin(v9);
  v145 = (uint64_t)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v137 = (uint64_t)&v136 - v13;
  v150 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v150);
  v144 = (uint64_t)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v136 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v136 - v19;
  v21 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v141 = (uint64_t)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v136 - v25;
  v27 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v27);
  v29 = (char *)&v136 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v136 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v136 - v34;
  v146 = v1;
  v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver];
  if (v36)
  {
    v37 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 88);
    swift_beginAccess(v37, v157, 0, 0);
    sub_10000735C(v37, (uint64_t)v35, &qword_10064CB28);
    sub_10000735C((uint64_t)v35, (uint64_t)v32, &qword_10064CB28);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v38(v32, 1, v21) == 1)
    {
      sub_1000073A0((uint64_t)v32, &qword_10064CB28);
      v39 = v146;
    }
    else
    {
      sub_10001F580((uint64_t)v32, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      v40 = v26[*(int *)(v21 + 32)];
      sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      v39 = v146;
      if ((v40 & 1) != 0)
      {
        v41 = 1;
        goto LABEL_7;
      }
    }
    v41 = 0;
LABEL_7:
    objc_msgSend(v39, "setTintAdjustmentMode:", v41);
    v42 = (uint64_t)&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
    swift_beginAccess(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v156, 0, 0);
    sub_10000735C(v42, (uint64_t)v20, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v150);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1000073A0((uint64_t)v20, (uint64_t *)&unk_1006572F0);
    }
    else
    {
      v44 = v20[*(int *)(sub_10002A750(&qword_10064CB50) + 48)];
      sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      if ((v44 & 1) != 0)
      {
        v45 = 0;
        v46 = (uint64_t)v147;
        v47 = (uint64_t)v143;
        goto LABEL_25;
      }
    }
    Strong = swift_unknownObjectWeakLoadStrong(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate]);
    if (Strong)
    {
      v49 = Strong;
      sub_10000735C((uint64_t)v35, (uint64_t)v29, &qword_10064CB28);
      if (v38(v29, 1, v21) == 1)
      {
        swift_unknownObjectRelease(v49);
        sub_1000073A0((uint64_t)v29, &qword_10064CB28);
      }
      else
      {
        v50 = v35;
        v51 = (uint64_t)v29;
        v52 = v141;
        sub_10001F580(v51, v141, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
        v53 = swift_unknownObjectWeakLoadStrong(v49 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
        v54 = v148;
        if (v53)
        {
          v55 = v53;
          v56 = v140;
          sub_100368A54(v52, v140);
          swift_unknownObjectRelease(v55);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v56, 1, v54) != 1)
          {
            v57 = v56;
            v58 = v137;
            sub_10001F580(v57, v137, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
            swift_beginAccess(v42, &v152, 33, 0);
            sub_1000073A0(v42, (uint64_t *)&unk_1006572F0);
            v45 = 1;
            v59 = *(int *)(sub_10002A750(&qword_10064CB50) + 48);
            sub_10002B1E8(v58, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
            *(_BYTE *)(v42 + v59) = 1;
            swift_storeEnumTagMultiPayload(v42, v150, 0);
            swift_endAccess(&v152);
            swift_unknownObjectRelease(v49);
            sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
            sub_10001F544(v141, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
            v46 = (uint64_t)v147;
            v35 = v50;
            v47 = (uint64_t)v143;
            goto LABEL_26;
          }
        }
        else
        {
          v56 = v140;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v140, 1, 1, v148);
        }
        sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
        swift_unknownObjectRelease(v49);
        sub_1000073A0(v56, (uint64_t *)&unk_100646F40);
        v35 = v50;
      }
    }
    swift_beginAccess(v42, &v152, 33, 0);
    sub_10000735C(v42, (uint64_t)v17, (uint64_t *)&unk_1006572F0);
    v60 = swift_getEnumCaseMultiPayload(v17, v150);
    if (v60)
    {
      v46 = (uint64_t)v147;
      v47 = (uint64_t)v143;
      if (v60 == 1)
      {
        sub_1000073A0(v42, (uint64_t *)&unk_1006572F0);
        swift_storeEnumTagMultiPayload(v42, v150, 2);
        sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006572F0);
      }
    }
    else
    {
      sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      v46 = (uint64_t)v147;
      v47 = (uint64_t)v143;
    }
    swift_endAccess(&v152);
    v45 = 1;
LABEL_25:
    v54 = v148;
LABEL_26:
    v61 = v42;
    v62 = v144;
    sub_10000735C(v61, v144, (uint64_t *)&unk_1006572F0);
    v63 = swift_getEnumCaseMultiPayload(v62, v150);
    if (v63)
    {
      v64 = v149;
      if (v63 == 1)
        sub_10000F614(v62, v47, (uint64_t *)&unk_100646F40);
      else
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v47, 1, 1, v54);
    }
    else
    {
      sub_10001F580(v62, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      v64 = v149;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v149 + 56))(v47, 0, 1, v54);
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v47, 1, v54) == 1)
    {
      sub_1000073A0(v47, (uint64_t *)&unk_100646F40);
      *((_QWORD *)&v153 + 1) = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
      *(_QWORD *)&v154 = sub_1000175C8(&qword_10064CB30, type metadata accessor for TTRIBoardReminderCellContentConfiguration, (uint64_t)&unk_1005388C8);
      v65 = sub_100028D70(&v152);
      sub_1004AA0B0((uint64_t)v65);
      v66 = (uint64_t)v35;
      UICollectionViewCell.contentConfiguration.setter(&v152);
LABEL_81:
      sub_1001F9F44();
      sub_1000073A0(v66, &qword_10064CB28);
      return;
    }
    v67 = v145;
    sub_10001F580(v47, v145, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_10002B1E8(v67, v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v68 = swift_unknownObjectWeakLoadStrong(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate]);
    if (!v68)
    {
LABEL_80:
      *((_QWORD *)&v153 + 1) = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
      *(_QWORD *)&v154 = sub_1000175C8(&qword_10064CB30, type metadata accessor for TTRIBoardReminderCellContentConfiguration, (uint64_t)&unk_1005388C8);
      v134 = sub_100028D70(&v152);
      v135 = v145;
      v66 = (uint64_t)v35;
      sub_1001F2820(v145, v45, (uint64_t)v35, (uint64_t)v134);
      UICollectionViewCell.contentConfiguration.setter(&v152);
      sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      goto LABEL_81;
    }
    v69 = v68;
    v150 = (uint64_t)v35;
    v70 = &v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule];
    v72 = swift_beginAccess(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule], v155, 0, 0);
    v73 = *(_QWORD *)v70;
    if (*(_QWORD *)v70)
    {
      v74 = *((_QWORD *)v70 + 1);
      ObjectType = swift_getObjectType(*(_QWORD *)v70, v71);
      v76 = swift_unknownObjectRetain(v73);
      TTRIReminderCellTitleModuleInterface.item.getter(ObjectType, v74, v76);
      swift_unknownObjectRelease(v73);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v138 + 56))(v142, 1, 1, v139, v72);
    }
    v77 = v69 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate;
    v78 = swift_unknownObjectWeakLoadStrong(v69 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
    if (v78)
    {
      v80 = v78;
      v81 = *(_QWORD *)(v78 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
      v82 = swift_getObjectType(*(_QWORD *)(v78 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v79);
      v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 + 8) + 224);
      v84 = v142;
      v85 = v83(v46, v142, v82);
      swift_unknownObjectRelease(v80);
      sub_1000073A0(v84, (uint64_t *)&unk_100640EB0);
      if ((v85 & 1) != 0)
      {
        v86 = (char *)swift_unknownObjectWeakLoadStrong(v77);
        if (v86)
        {
          v87 = v86;
          v88 = *(_QWORD *)&v86[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
          v89 = *(_QWORD *)&v86[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
          v90 = objc_msgSend(v86, "parentViewController");
          v92 = v90;
          if (v90)
          {
            v93 = swift_getObjectType(v90, v91);
            v94 = swift_conformsToProtocol2(v93, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
            if (v94)
              v95 = v94;
            else
              v95 = 0;
            if (v94)
              v96 = v92;
            else
              v96 = 0;
            if (v96)
            {
              v92 = *(void **)(v95 + 32);
            }
            else
            {

              v92 = 0;
            }
          }
          else
          {
            v96 = 0;
          }
          v97 = swift_getObjectType(v88, v91);
          (*(void (**)(__int128 *__return_ptr, char *, void *, void *, char *, uint64_t))(*(_QWORD *)(v89 + 8)
                                                                                                  + 232))(&v152, v147, v96, v92, v87, v97);
          swift_unknownObjectRelease(v87);
          swift_unknownObjectRelease(v96);
          v39 = v146;
        }
        else
        {
          v153 = 0u;
          v154 = 0u;
          v152 = 0u;
        }
        swift_beginAccess(v70, v151, 33, 0);
        sub_100041F2C((uint64_t)&v152, (uint64_t)v70, &qword_10064CB38);
        swift_endAccess(v151);
        v99 = *(_QWORD *)v70;
        if (*(_QWORD *)v70)
        {
          v100 = *((_QWORD *)v70 + 1);
          v101 = swift_getObjectType(*(_QWORD *)v70, v98);
          v102 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v100 + 24);
          swift_unknownObjectRetain(v99);
          v103 = v39;
          v102(v39, &off_1005F6FE8, v101, v100);
          swift_unknownObjectRelease(v99);
        }
        v104 = (char *)swift_unknownObjectWeakLoadStrong(v77);
        if (v104)
        {
          v105 = v104;
          v106 = *(_QWORD *)&v104[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
          v107 = *(_QWORD *)&v104[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
          v108 = objc_msgSend(v104, "parentViewController");
          v110 = v108;
          if (v108)
          {
            v111 = swift_getObjectType(v108, v109);
            v112 = swift_conformsToProtocol2(v111, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
            if (v112)
              v113 = v112;
            else
              v113 = 0;
            if (v112)
              v114 = v110;
            else
              v114 = 0;
            v46 = (uint64_t)v147;
            if (v114)
            {
              v110 = *(void **)(v113 + 24);
            }
            else
            {

              v110 = 0;
            }
          }
          else
          {
            v114 = 0;
            v46 = (uint64_t)v147;
          }
          v115 = swift_getObjectType(v106, v109);
          (*(void (**)(__int128 *__return_ptr, uint64_t, void *, void *, char *, uint64_t))(*(_QWORD *)(v107 + 8) + 240))(&v152, v46, v114, v110, v105, v115);
          swift_unknownObjectRelease(v105);
          swift_unknownObjectRelease(v114);
        }
        else
        {
          v153 = 0u;
          v154 = 0u;
          v152 = 0u;
          v46 = (uint64_t)v147;
        }
        v116 = &v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_notesModule];
        swift_beginAccess(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_notesModule], v151, 33, 0);
        sub_100041F2C((uint64_t)&v152, (uint64_t)v116, &qword_10064CB40);
        swift_endAccess(v151);
        v118 = *(_QWORD *)v116;
        if (*(_QWORD *)v116)
        {
          v119 = *((_QWORD *)v116 + 1);
          v120 = swift_getObjectType(v118, v117);
          v121 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, __n128))(v119 + 40);
          v122 = v39;
          v123 = swift_unknownObjectRetain(v118);
          v121(v39, &off_1005F6FD0, v120, v119, v123);
          swift_unknownObjectRelease(v118);
        }
        v124 = sub_10022B08C(v46);
        if (v124)
        {
          v127 = v124;
          v128 = v125;
          v129 = v126;
          *((_QWORD *)&v154 + 1) = type metadata accessor for TTRIReminderCellAutoCompleteViewController();
          *((_QWORD *)&v152 + 1) = v129;
          *(_QWORD *)&v153 = v127;
          *(_QWORD *)&v152 = v128;
          v130 = &v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule];
          swift_beginAccess(&v39[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule], v151, 33, 0);
          swift_unknownObjectRetain(v128);
          v131 = v127;
          sub_100041F2C((uint64_t)&v152, (uint64_t)v130, &qword_10064CB48);
          swift_endAccess(v151);
          v132 = *(_QWORD *)v130;
          if (*(_QWORD *)v130)
          {
            *(_QWORD *)(v132 + 40) = &off_1005F6FC0;
            swift_unknownObjectWeakAssign(v132 + 32, v39);
          }
          swift_unknownObjectRelease(v69);

          v133 = v128;
        }
        else
        {
          v133 = v69;
        }
        swift_unknownObjectRelease(v133);
        v45 = 1;
        goto LABEL_79;
      }
    }
    else
    {
      sub_1000073A0(v142, (uint64_t *)&unk_100640EB0);
    }
    swift_unknownObjectRelease(v69);
LABEL_79:
    v35 = (char *)v150;
    goto LABEL_80;
  }
  __break(1u);
}

uint64_t sub_1001F2820@<X0>(Swift::Int a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  char v30;
  int v31;
  BOOL v32;
  int v33;
  id *v34;
  id v35;
  uint64_t v36;
  NSString *v37;
  uint64_t v38;
  int v39;
  id v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _BYTE *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  Swift::Int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  Swift::Int v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  _OWORD v149[2];
  uint64_t v150;
  _OWORD v151[2];
  uint64_t v152;
  _OWORD v153[2];
  uint64_t v154;
  _OWORD v155[3];
  _OWORD v156[3];
  _OWORD v157[2];
  __int16 v158;
  _BYTE v159[240];

  v145 = a1;
  LODWORD(v147) = a2;
  v139 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  __chkstk_darwin(v139);
  v143 = (uint64_t)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10002A750(&qword_10064CB58);
  __chkstk_darwin(v140);
  v141 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v136 = *((_QWORD *)v142 - 1);
  __chkstk_darwin(v142);
  v137 = v8;
  v138 = (uint64_t)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064CB60);
  __chkstk_darwin(v9);
  v135 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_10064CB68);
  __chkstk_darwin(v11);
  v13 = (_BYTE **)((char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v14);
  v16 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v135 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v135 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v135 - v24;
  sub_1004AA0B0(a4);
  v144 = a3;
  sub_10000735C(a3, (uint64_t)v25, &qword_10064CB28);
  v26 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  if (v27(v25, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v25, &qword_10064CB28);
    v28 = 0;
  }
  else
  {
    v28 = v25[*(int *)(v26 + 24)];
    sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  }
  *(_BYTE *)a4 = v28;
  v29 = v144;
  sub_10000735C(v144, (uint64_t)v22, &qword_10064CB28);
  if (v27(v22, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v22, &qword_10064CB28);
    v30 = 0;
  }
  else
  {
    v31 = v22[*(int *)(v26 + 20) + 8];
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    v32 = v31 == 3;
    v29 = v144;
    v30 = v32;
  }
  *(_BYTE *)(a4 + 2) = v30;
  sub_10000735C(v29, (uint64_t)v19, &qword_10064CB28);
  if (v27(v19, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v19, &qword_10064CB28);
    sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  }
  else
  {
    v33 = v19[*(int *)(v26 + 20) + 8];
    sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    if (v33 == 3)
    {
      v34 = (id *)&UIFontTextStyleSubheadline;
      goto LABEL_14;
    }
  }
  v34 = (id *)&UIFontTextStyleBody;
LABEL_14:
  v35 = *v34;
  v36 = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(v35, 0, 1, 0);

  *(_QWORD *)(a4 + 8) = v36;
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v37 = UIFontTextStyleSubheadline;
  v38 = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(v37, 0, 1, 0);

  *(_QWORD *)(a4 + 16) = v38;
  sub_10000735C(v29, (uint64_t)v16, &qword_10064CB28);
  if (v27(v16, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_10064CB28);
  }
  else
  {
    v39 = v16[*(int *)(v26 + 20) + 8];
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    if (v39 == 3)
      goto LABEL_18;
  }
  v37 = UIFontTextStyleBody;
LABEL_18:
  v40 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", v37);

  *(_QWORD *)(a4 + 24) = v40;
  v41 = v147 & 1;
  v43 = v145;
  v42 = v146;
  sub_1001F7290(v145, v29, v147 & 1, v13);
  v44 = (int *)type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  sub_100041F2C((uint64_t)v13, a4 + v44[17], &qword_10064CB68);
  v45 = v135;
  sub_1001F7614(v43, v29, v41, v135);
  sub_100041F2C((uint64_t)v45, a4 + v44[18], &qword_10064CB60);
  v46 = sub_1001F8A34(v43);
  v47 = v44[24];

  *(_QWORD *)(a4 + v47) = v46;
  v48 = sub_1001F8FAC(v43);
  v50 = v49;

  *(_QWORD *)(a4 + 80) = v48;
  *(_QWORD *)(a4 + 88) = v50;
  v51 = sub_1001F92DC(v43);
  v53 = v52;
  v54 = (uint64_t *)(a4 + v44[20]);
  swift_bridgeObjectRelease(v54[1]);
  *v54 = v51;
  v54[1] = v53;
  v55 = v142;
  v56 = *(_QWORD *)(v43 + v142[16]);
  v57 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v57 + 16, v42);
  v59 = *(_QWORD *)(a4 + 256);
  v58 = *(_QWORD *)(a4 + 264);
  v60 = *(_QWORD *)(a4 + 272);
  *(_QWORD *)(a4 + 256) = v56;
  *(_QWORD *)(a4 + 264) = sub_1001FA2BC;
  *(_QWORD *)(a4 + 272) = v57;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v59);
  sub_1000381B8(v58, v60);
  *(_BYTE *)(a4 + v44[21]) = *(_BYTE *)(v43 + v55[25]) & 1;
  v61 = *(void **)(v43 + v55[19]);
  v147 = v44;
  v62 = v44[19];
  v63 = *(void **)(a4 + v62);
  v64 = v61;

  *(_QWORD *)(a4 + v62) = v61;
  v65 = (uint64_t *)(v43 + v55[30]);
  v66 = v65[1];
  if (v66)
    v67 = *v65;
  else
    v67 = 0;
  v68 = (_QWORD *)(a4 + v147[23]);
  v69 = v68[1];
  swift_bridgeObjectRetain(v66);
  swift_bridgeObjectRelease(v69);
  *v68 = v67;
  v68[1] = v66;
  v70 = swift_allocObject(&unk_1005F70D8, 24, 7);
  v71 = v146;
  swift_unknownObjectWeakInit(v70 + 16, v146);
  v72 = v142;
  v73 = v145;
  v74 = v145 + v142[22];
  v75 = *(_QWORD *)v74;
  v76 = *(unsigned __int8 *)(v74 + 8);
  v77 = *(unsigned __int8 *)(v145 + v142[23]);
  v78 = objc_opt_self(UIColor);
  swift_retain();
  v79 = (void *)v78;
  v80 = v71;
  TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCount:displayStyle:tintColor:onSubtaskCountPressed:)(v149, v75, v76, v77, objc_msgSend(v79, "tintColor"), sub_1001FA2C4, v70);
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a4 + 152));

  v81 = sub_1000381B8(*(_QWORD *)(a4 + 168), *(_QWORD *)(a4 + 176));
  v82 = v149[1];
  *(_OWORD *)(a4 + 144) = v149[0];
  *(_OWORD *)(a4 + 160) = v82;
  *(_QWORD *)(a4 + 176) = v150;
  v83 = TTRRemindersListViewModel.Reminder.priorityLevelDisplayString.getter(v81);
  v85 = v84;
  v86 = v147;
  v87 = (uint64_t *)(a4 + v147[22]);
  swift_bridgeObjectRelease(v87[1]);
  *v87 = v83;
  v87[1] = v85;
  v88 = sub_1001F9548(v73);
  v89 = v86[25];
  swift_bridgeObjectRelease(*(_QWORD *)(a4 + v89));
  *(_QWORD *)(a4 + v89) = v88;
  sub_10000F614(v73 + v72[33], (uint64_t)v159, &qword_10064A848);
  sub_1001F7AF0((uint64_t)v159, (uint64_t)v151);
  v90 = a4 + v86[26];

  swift_bridgeObjectRelease(*(_QWORD *)(v90 + 16));
  sub_1000381B8(*(_QWORD *)(v90 + 24), *(_QWORD *)(v90 + 32));
  *(_QWORD *)(v90 + 32) = v152;
  v91 = v151[1];
  *(_OWORD *)v90 = v151[0];
  *(_OWORD *)(v90 + 16) = v91;
  v92 = v73 + v72[37];
  v93 = *(void **)v92;
  if (*(_QWORD *)v92)
  {
    v95 = *(_QWORD *)(v92 + 8);
    v94 = *(_QWORD *)(v92 + 16);
    swift_bridgeObjectRetain(v94);
    v96 = v93;
  }
  else
  {
    v95 = 0;
    v94 = 0;
  }
  v97 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v97 + 16, v80);
  TTRBoardReminderCellAppLinkConfiguration.init(icon:name:onAppLinkPress:)(v153, v93, v95, v94, sub_1001FA2E4, v97);
  v98 = a4 + v147[27];

  swift_bridgeObjectRelease(*(_QWORD *)(v98 + 16));
  sub_1000381B8(*(_QWORD *)(v98 + 24), *(_QWORD *)(v98 + 32));
  v99 = v153[1];
  *(_OWORD *)v98 = v153[0];
  *(_OWORD *)(v98 + 16) = v99;
  *(_QWORD *)(v98 + 32) = v154;
  v100 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, v80);
  v101 = v145;
  v102 = v138;
  sub_10002B1E8(v145, v138, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  v103 = *(unsigned __int8 *)(v136 + 80);
  v104 = (v103 + 24) & ~v103;
  v105 = v104 + v137;
  v142 = (int *)(v103 | 7);
  v106 = swift_allocObject(&unk_1005F72B8, v104 + v137, v103 | 7);
  *(_QWORD *)(v106 + 16) = v100;
  sub_10001F580(v102, v106 + v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  swift_retain();
  v107 = v144;
  sub_1001F9878(v101, v144, (uint64_t)sub_1001FA308, v106, v155);
  swift_release();
  v108 = v146;
  swift_release();

  sub_1000381B8(*(_QWORD *)(a4 + 64), *(_QWORD *)(a4 + 72));
  v109 = v155[1];
  *(_OWORD *)(a4 + 32) = v155[0];
  *(_OWORD *)(a4 + 48) = v109;
  *(_OWORD *)(a4 + 64) = v155[2];
  v110 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16, v108);
  swift_retain();
  sub_1001F9A08(v107, v101, (uint64_t)sub_1001FA314, v110, v156);
  swift_release_n(v110, 2);

  sub_1000381B8(*(_QWORD *)(a4 + 128), *(_QWORD *)(a4 + 136));
  v111 = v156[1];
  *(_OWORD *)(a4 + 96) = v156[0];
  *(_OWORD *)(a4 + 112) = v111;
  *(_OWORD *)(a4 + 128) = v156[2];
  v112 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v112 + 16, v108);
  sub_10002B1E8(v101, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  v113 = swift_allocObject(&unk_1005F72E0, v105, v142);
  *(_QWORD *)(v113 + 16) = v112;
  sub_10001F580(v102, v113 + v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  swift_retain();
  sub_1001F9B70(v107, v101, (uint64_t)sub_1001FA980, v113, (uint64_t)v157);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(a4 + 192));
  sub_1000381B8(*(_QWORD *)(a4 + 200), *(_QWORD *)(a4 + 208));
  v114 = v157[1];
  *(_OWORD *)(a4 + 184) = v157[0];
  *(_OWORD *)(a4 + 200) = v114;
  *(_WORD *)(a4 + 216) = v158;
  v115 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16, v108);
  swift_retain();
  LOBYTE(v107) = sub_1001F9CF4(v107, v101, (uint64_t)sub_1001FA9CC, v115);
  v117 = v116;
  v119 = v118;
  v121 = v120;
  swift_release_n(v115, 2);

  sub_1000381B8(*(_QWORD *)(a4 + 240), *(_QWORD *)(a4 + 248));
  *(_BYTE *)(a4 + 224) = v107;
  *(_QWORD *)(a4 + 232) = v117;
  *(_QWORD *)(a4 + 240) = v119;
  *(_QWORD *)(a4 + 248) = v121;
  v122 = v143;
  sub_10002B1E8(v101, v143, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v123 = v139;
  *(_BYTE *)(v122 + *(int *)(v139 + 20)) = 0;
  v124 = (_QWORD *)(v122 + *(int *)(v123 + 24));
  *v124 = 0;
  v124[1] = 0;
  *(_QWORD *)(v122 + *(int *)(v123 + 28)) = _swiftEmptyArrayStorage;
  if (qword_10063D4D0 != -1)
    swift_once(&qword_10063D4D0, sub_1001F1920);
  v145 = TTRCounterBasedIdentifierGenerator.allocID()();
  v125 = (uint64_t *)(v108 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule);
  swift_beginAccess(v108 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule, &v148, 0, 0);
  v126 = *v125;
  if (*v125)
  {
    v146 = v125[1];
    swift_unknownObjectRetain(v126);
  }
  else
  {
    v146 = 0;
  }
  v127 = v140;
  v128 = v141;
  v129 = (uint64_t)&v141[*(int *)(v140 + 28)];
  v130 = sub_10002A750(&qword_10064CB70);
  v131 = *(int *)(v130 + 48);
  v132 = v143;
  sub_10002B1E8(v143, v129, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
  *(_QWORD *)(v129 + v131) = v145;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v129, 0, 1, v130);
  *((_BYTE *)v128 + *(int *)(v127 + 32)) = 1;
  v133 = v146;
  *v128 = v126;
  v128[1] = v133;
  sub_10001F544(v132, type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
  return sub_100041F2C((uint64_t)v128, a4 + v147[28], &qword_10064CB58);
}

uint64_t sub_1001F3544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  _BYTE v16[24];

  v1 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
  swift_beginAccess(v11, v16, 0, 0);
  sub_10000735C(v11, (uint64_t)v3, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_10000F614((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100646F40);
    else
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100646F40);
    return 0;
  }
  else
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v13 = protocol witness table for TTRRemindersListViewModel.Reminder[3](v7);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return v13;
}

_QWORD *sub_1001F3844()
{
  char *v0;
  char v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void **v6;
  __n128 v7;
  void *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];
  _BYTE v19[32];
  _BYTE v20[24];
  __int128 v21;
  _QWORD v22[4];

  sub_1001F3A28();
  if ((v1 & 1) != 0)
  {
    v2 = objc_msgSend(v0, "contentView");
    v3 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      sub_1003F56C8();
      v5 = v4;

    }
    else
    {

      return 0;
    }
  }
  else
  {
    v21 = xmmword_100520250;
    v6 = (void **)&v0[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement];
    v7 = swift_beginAccess(v6, v20, 0, 0);
    v8 = *v6;
    if (v8)
    {
      v9 = type metadata accessor for TTRIRemindersListReminderCellAccessibilityElement(0, v7);
    }
    else
    {
      v9 = 0;
      v22[1] = 0;
      v22[2] = 0;
    }
    v22[0] = v8;
    v22[3] = v9;
    v10 = v8;
    sub_10000735C((uint64_t)v22, (uint64_t)v19, &qword_100640E50);
    sub_10000F614((uint64_t)v19, (uint64_t)&v16, &qword_100640E50);
    if (v17)
    {
      sub_100028D38(&v16, v18);
      sub_100028D38(v18, &v16);
      v5 = _swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        v5 = sub_100456BA8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
        v5 = sub_100456BA8((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      v5[2] = v12 + 1;
      sub_100028D38(&v16, &v5[4 * v12 + 4]);
    }
    else
    {
      sub_1000073A0((uint64_t)&v16, &qword_100640E50);
      v5 = _swiftEmptyArrayStorage;
    }
    v13 = v21;
    v14 = sub_10002A750(&qword_100640E50);
    swift_arrayDestroy(v22, v13, v14);
  }
  return v5;
}

void sub_1001F3A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v16[24];

  v1 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver);
  if (v8)
  {
    v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 88);
    swift_beginAccess(v9, v16, 0, 0);
    sub_10000735C(v9, (uint64_t)v3, &qword_10064CB28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1000073A0((uint64_t)v3, &qword_10064CB28);
      if (qword_10063D4C8 != -1)
        swift_once(&qword_10063D4C8, sub_1001F0614);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_100012DC4(v10, (uint64_t)qword_10064CA78);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.fault.getter(v12);
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "No intermediate view model found when trying to check for editing subviews", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

    }
    else
    {
      sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001F3C20(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  unsigned __int8 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  char v33[24];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v11 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v30 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellConfigurationState(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v3, "_bridgedConfigurationState", v15);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v18);

  LOBYTE(v18) = UICellConfigurationState.isEditing.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) == 0)
  {
    v20 = objc_msgSend(v3, "contentView");
    v21 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    if (swift_dynamicCastClass(v20, v21))
    {
      if (!UIAccessibilityIsVoiceOverRunning() && !UIAccessibilityIsSwitchControlRunning())
      {
        sub_1003F59C4();
        v19 = v25;

        return v19 & 1;
      }
      v22 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
      swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v33, 0, 0);
      sub_10000735C(v22, (uint64_t)v7, (uint64_t *)&unk_1006572F0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
      if (EnumCaseMultiPayload)
      {
        v24 = v31;
        if (EnumCaseMultiPayload == 1)
          sub_10000F614((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_100646F40);
        else
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v31);
      }
      else
      {
        sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        v24 = v31;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v31);
      }
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v24) == 1)
      {

        sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100646F40);
      }
      else
      {
        v26 = (uint64_t)v10;
        v27 = v30;
        sub_10001F580(v26, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        sub_1001F3F3C(v27, 1);

        sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      }
    }
    else
    {

    }
    v19 = 0;
    return v19 & 1;
  }
  v32.receiver = v3;
  v32.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v32, "accessibilityActivate");
  return v19 & 1;
}

void sub_1001F3F3C(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(v8 + 24));
  if (v9 == 2)
  {
    v27 = objc_msgSend(v2, "contentView");
    v17 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    v18 = swift_dynamicCastClass(v27, v17);
    if ((a2 & 1) != 0)
    {
      if (v18)
        sub_1003F59C4();
    }
    else if (v18)
    {
      sub_1003F61D4(0, v19);
    }

  }
  else if (v9 == 3)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate]);
    if (Strong)
    {
      v11 = Strong;
      v12 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (v12)
      {
        v14 = v12;
        v15 = *(_QWORD *)(v12 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v12 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v13);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 + 8) + 48))(a1, ObjectType);
        swift_unknownObjectRelease(v11);
        swift_unknownObjectRelease(v14);
      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
  }
  else
  {
    v20 = v8;
    sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v21 = *(unsigned __int8 *)(a1 + *(int *)(v20 + 32));
    v22 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate]);
    if (v22)
    {
      v23 = v22;
      v24 = swift_unknownObjectWeakLoadStrong(v22 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (v24)
      {
        v25 = v24;
        sub_10036E434((uint64_t)v7, v21 ^ 1u);
        swift_unknownObjectRelease(v23);
        v23 = v25;
      }
      swift_unknownObjectRelease(v23);
    }
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
}

unint64_t sub_1001F4284(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  NSString v42;
  void *v43;
  id v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  NSString v55;
  void *v56;
  id v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __n128 v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  NSString v83;
  void *v84;
  id v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  NSString v101;
  void *v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  _BOOL4 v110;
  BOOL v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  _BOOL4 v115;
  unint64_t v116;
  void *v117;
  uint64_t v118;
  id v119;
  NSString v120;
  void *v121;
  id v122;
  id v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  id v140;
  NSString v141;
  void *v142;
  id v143;
  id v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  NSString v179;
  void *v180;
  id v181;
  id v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  id v191;
  NSString v192;
  void *v193;
  id v194;
  id v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t *v209;
  __n128 v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  NSString v220;
  void *v221;
  id v222;
  id v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  id v229;
  void *v230;
  id v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  id v237;
  uint64_t v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t ObjectType;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  void **v252;
  uint64_t v253;
  uint64_t (*v254)(uint64_t, void *);
  void *v255;
  void *v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  _QWORD v260[3];
  uint64_t v261;
  uint64_t v262;
  _QWORD v263[29];
  __int128 v264;
  uint64_t (*v265)(uint64_t, void *);
  void *v266;
  uint64_t (*v267)(uint64_t);
  uint64_t v268;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v245 = type metadata accessor for URL(0);
  v251 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v246 = (char *)&v235 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v250 = (char *)&v235 - v6;
  v247 = v7;
  __chkstk_darwin(v8);
  v249 = (char *)&v235 - v9;
  v10 = type metadata accessor for TTRRemindersListViewModel.LinkAttachment(0);
  v11 = *(_QWORD *)(v10 - 8);
  v240 = v10;
  v241 = v11;
  __chkstk_darwin(v10);
  v248 = (uint64_t)&v235 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v13);
  v244 = (char *)&v235 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v243 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  *(_QWORD *)&v239 = (char *)&v235 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v235 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v20);
  v22 = (char *)&v235 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UICellConfigurationState(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v235 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F3A28();
  v27 = 0;
  if ((v28 & 1) != 0)
    return v27;
  v29 = objc_msgSend(v3, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v29);

  LOBYTE(v29) = UICellConfigurationState.isEditing.getter();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if ((v29 & 1) != 0)
    return 0;
  v30 = (uint64_t)&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], &v259, 0, 0);
  sub_10000735C(v30, (uint64_t)v19, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000F614((uint64_t)v19, (uint64_t)v22, (uint64_t *)&unk_100646F40);
    }
    else
    {
      v33 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v22, 1, 1, v33);
    }
  }
  else
  {
    sub_10001F580((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v32 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 0, 1, v32);
  }
  v34 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v22, 1, v34) == 1)
  {
    sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100646F40);
    return 0;
  }
  v266 = (void *)v34;
  v267 = (uint64_t (*)(uint64_t))protocol witness table for TTRRemindersListViewModel.Reminder;
  v35 = sub_100028D70(&v264);
  sub_10001F580((uint64_t)v22, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  sub_10002E37C(&v264, (uint64_t)v260);
  sub_10001413C(v260, v261);
  if ((((uint64_t (*)(uint64_t, uint64_t (**)(uint64_t)))protocol witness table for TTRRemindersListViewModel.Reminder[2])(v34, protocol witness table for TTRRemindersListViewModel.Reminder) & 0x100000000) == 0)
  {
    sub_100027F10(v260);
    return 0;
  }
  v258 = (unint64_t)_swiftEmptyArrayStorage;
  v37 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.EditTitle.unsafeMutableAddressor() + 8);
  v38 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  swift_bridgeObjectRetain(v37);
  v238 = v38;
  v39 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6C69636E6570, 0xE600000000000000);
  v40 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v3);
  v41 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  v267 = sub_1001F88D8;
  v268 = v40;
  *(_QWORD *)&v264 = _NSConcreteStackBlock;
  *((_QWORD *)&v264 + 1) = 1107296256;
  v265 = sub_100341638;
  v266 = &unk_1005F70F0;
  v43 = _Block_copy(&v264);
  v44 = objc_msgSend(v41, "initWithName:image:actionHandler:", v42, v39, v43);

  _Block_release(v43);
  swift_release();
  swift_release();
  v45 = v44;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
  v47 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v46 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v47 >= v46 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
  v237 = v45;
  v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
  specialized Array._endMutation()(v48);
  v49 = v261;
  v50 = v262;
  sub_10001413C(v260, v261);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 208))(v49, v50) & 1) != 0)
  {
    v51 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.EnterDetail.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v51);
    v52 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x7269632E6F666E69, 0xEB00000000656C63);
    v53 = swift_allocObject(&unk_1005F70D8, 24, 7);
    swift_unknownObjectWeakInit(v53 + 16, v3);
    v54 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v51);
    v267 = sub_1001F8A10;
    v268 = v53;
    *(_QWORD *)&v264 = _NSConcreteStackBlock;
    *((_QWORD *)&v264 + 1) = 1107296256;
    v265 = sub_100341638;
    v266 = &unk_1005F7280;
    v56 = _Block_copy(&v264);
    v57 = objc_msgSend(v54, "initWithName:image:actionHandler:", v55, v52, v56);

    _Block_release(v56);
    swift_release();
    swift_release();
    v58 = v57;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
    v60 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v59 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v60 >= v59 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
    v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
    specialized Array._endMutation()(v61);

  }
  v62 = objc_msgSend(v3, "contentView");
  v63 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  v64 = swift_dynamicCastClass(v62, v63);
  if (v64)
  {
    v65 = v64;
    v66 = v261;
    v67 = v262;
    sub_10001413C(v260, v261);
    v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v67 + 96))(v66, v67);
    if (!v68)
      goto LABEL_26;
    v69 = v68;
    v70 = objc_msgSend(v68, "string");

    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v73 = v72;

    v74 = swift_bridgeObjectRelease(v73);
    v75 = HIBYTE(v73) & 0xF;
    if ((v73 & 0x2000000000000000) == 0)
      v75 = v71 & 0xFFFFFFFFFFFFLL;
    if (v75)
    {
      v76 = 0xD000000000000014;
      v77 = 0x800000010056C8D0;
      v78 = TTRAccesibility.RemindersList.Action.EditNote.unsafeMutableAddressor(v74);
    }
    else
    {
LABEL_26:
      v77 = 0xE900000000000074;
      v76 = 0x7865742E65746F6ELL;
      v78 = TTRAccesibility.RemindersList.Action.AddNote.unsafeMutableAddressor();
    }
    v79 = *(_QWORD *)(v78 + 8);
    swift_bridgeObjectRetain(v79);
    v80 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(v76, v77);
    swift_bridgeObjectRelease(v77);
    v81 = swift_allocObject(&unk_1005F7240, 24, 7);
    swift_unknownObjectWeakInit(v81 + 16, v65);
    v82 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    v83 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v79);
    v267 = sub_1001F8A08;
    v268 = v81;
    *(_QWORD *)&v264 = _NSConcreteStackBlock;
    *((_QWORD *)&v264 + 1) = 1107296256;
    v265 = sub_100341638;
    v266 = &unk_1005F7258;
    v84 = _Block_copy(&v264);
    v85 = objc_msgSend(v82, "initWithName:image:actionHandler:", v83, v80, v84);

    _Block_release(v84);
    swift_release();
    swift_release();
    v86 = v85;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86);
    v88 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v87 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v88 >= v87 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
    v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v86);
    specialized Array._endMutation()(v89);

  }
  v90 = v261;
  v91 = v262;
  sub_10001413C(v260, v261);
  v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 144))(v90, v91);
  if ((v93 & 1) == 0 && v92 >= 1)
  {
    v94 = v261;
    v95 = v262;
    sub_10001413C(v260, v261);
    v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 160))(v94, v95);
    if (v96 != 2)
    {
      if ((v96 & 1) != 0)
      {
        v108 = sub_1001F5B44();
        if (v108)
        {
          if (v108 == 1)
          {
            v109 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.ExpandSubtasks.unsafeMutableAddressor() + 8);
            swift_bridgeObjectRetain(v109);
            v110 = UIAccessibilityButtonShapesEnabled();
            v111 = !v110;
            if (v110)
              v112 = 0xD00000000000001BLL;
            else
              v112 = 0x2E6E6F7276656863;
            v113 = 0x8000000100562390;
            v114 = 0xEF64726177726F66;
          }
          else
          {
            v109 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.CollapseSubtasks.unsafeMutableAddressor() + 8);
            swift_bridgeObjectRetain(v109);
            v115 = UIAccessibilityButtonShapesEnabled();
            v111 = !v115;
            if (v115)
              v112 = 0xD000000000000018;
            else
              v112 = 0x2E6E6F7276656863;
            v113 = 0x800000010056C8B0;
            v114 = 0xEC0000006E776F64;
          }
          if (v111)
            v116 = v114;
          else
            v116 = v113;
          v117 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(v112, v116);
          swift_bridgeObjectRelease(v116);
          v118 = swift_allocObject(&unk_1005F70D8, 24, 7);
          swift_unknownObjectWeakInit(v118 + 16, v3);
          v119 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          v120 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v109);
          v267 = sub_1001F8A00;
          v268 = v118;
          *(_QWORD *)&v264 = _NSConcreteStackBlock;
          *((_QWORD *)&v264 + 1) = 1107296256;
          v265 = sub_100341638;
          v266 = &unk_1005F7208;
          v121 = _Block_copy(&v264);
          v122 = objc_msgSend(v119, "initWithName:image:actionHandler:", v120, v117, v121);

          _Block_release(v121);
          swift_release();
          swift_release();
          v123 = v122;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v123);
          v125 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v124 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v125 >= v124 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v124 > 1, v125 + 1, 1);
          v126 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v123);
          specialized Array._endMutation()(v126);

        }
      }
      else
      {
        v97 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.ShowSubtasksInList.unsafeMutableAddressor() + 8);
        swift_bridgeObjectRetain(v97);
        v98 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
        v99 = swift_allocObject(&unk_1005F70D8, 24, 7);
        swift_unknownObjectWeakInit(v99 + 16, v3);
        v100 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
        swift_retain();
        v101 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v97);
        v267 = sub_1001F89DC;
        v268 = v99;
        *(_QWORD *)&v264 = _NSConcreteStackBlock;
        *((_QWORD *)&v264 + 1) = 1107296256;
        v265 = sub_100341638;
        v266 = &unk_1005F71E0;
        v102 = _Block_copy(&v264);
        v103 = objc_msgSend(v100, "initWithName:image:actionHandler:", v101, v98, v102);

        _Block_release(v102);
        swift_release();
        swift_release();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
        v106 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v105 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v106 >= v105 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
        v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v103);
        specialized Array._endMutation()(v107);
      }
    }
  }
  v127 = v261;
  v128 = v262;
  sub_10001413C(v260, v261);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v128 + 240))(v263, v127, v128);
  sub_1001BDA40((uint64_t)v263);
  sub_10000F614((uint64_t)v263, (uint64_t)&v264, &qword_10064A848);
  if (sub_1001F88E0((uint64_t *)&v264) != 1)
  {
    UICollectionViewCell.contentConfiguration.getter(&v252, v129);
    if (v255)
    {
      v130 = sub_10002A750(&qword_10064CB18);
      v131 = (uint64_t)v244;
      v132 = swift_dynamicCast(v244, &v252, v130, v15, 6);
      v133 = v243;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v243 + 56))(v131, v132 ^ 1u, 1, v15);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v131, 1, v15) != 1)
      {
        v134 = v131;
        v135 = v239;
        sub_10001F580(v134, v239, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
        if ((TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(v15, &off_1006615B8) & 1) != 0)
        {
          v136 = v135;
        }
        else
        {
          v137 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.AssignmentDetail.unsafeMutableAddressor() + 8);
          swift_bridgeObjectRetain(v137);
          v138 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x662E6E6F73726570, 0xEB000000006C6C69);
          v139 = swift_allocObject(&unk_1005F70D8, 24, 7);
          swift_unknownObjectWeakInit(v139 + 16, v3);
          v140 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          v141 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v137);
          v256 = sub_1001F89D4;
          v257 = v139;
          v252 = _NSConcreteStackBlock;
          v253 = 1107296256;
          v254 = sub_100341638;
          v255 = &unk_1005F71B8;
          v142 = _Block_copy(&v252);
          v143 = objc_msgSend(v140, "initWithName:image:actionHandler:", v141, v138, v142);

          _Block_release(v142);
          swift_release();
          swift_release();
          v144 = v143;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v144);
          v146 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v145 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v146 >= v145 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v145 > 1, v146 + 1, 1);
          v147 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v146, v144);
          specialized Array._endMutation()(v147);

          v136 = v239;
        }
        sub_10001F544(v136, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
        goto LABEL_64;
      }
    }
    else
    {
      sub_1000073A0((uint64_t)&v252, &qword_100654980);
      v131 = (uint64_t)v244;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v243 + 56))(v244, 1, 1, v15);
    }
    sub_1000073A0(v131, &qword_10064CB10);
  }
LABEL_64:
  v148 = v261;
  v149 = v262;
  sub_10001413C(v260, v261);
  v150 = (*(uint64_t (**)(uint64_t, uint64_t))(v149 + 104))(v148, v149);
  if (v150)
  {
    v235 = v3;
    v236 = v150;
    v151 = *(_QWORD *)(v150 + 16);
    v152 = v245;
    v153 = v249;
    v154 = v250;
    if (v151)
    {
      v240 = v248 + *(int *)(v240 + 20);
      v155 = v236 + ((*(unsigned __int8 *)(v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80));
      v241 = *(_QWORD *)(v241 + 72);
      v239 = xmmword_100520250;
      v156 = v251;
      do
      {
        v244 = (char *)v155;
        v245 = v151;
        v157 = v248;
        sub_10002B1E8(v155, v248, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
        v158 = *(void (**)(char *, uint64_t, uint64_t))(v251 + 16);
        v158(v153, v240, v152);
        v159 = sub_10001F544(v157, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
        v160 = URL.domain.getter(v159);
        v162 = v161;
        v163 = ((uint64_t (*)(char *, char *, uint64_t))v158)(v154, v153, v152);
        if (!v162)
        {
          v160 = URL.absoluteString.getter(v163);
          v162 = v164;
        }
        v243 = *(_QWORD *)(v156 + 8);
        v165 = ((uint64_t (*)(char *, uint64_t))v243)(v154, v152);
        v166 = (uint64_t *)TTRAccesibility.RemindersList.Action.OpenLinkFormat.unsafeMutableAddressor(v165);
        v168 = *v166;
        v167 = v166[1];
        v169 = sub_10002A750((uint64_t *)&unk_100640FD0);
        v170 = swift_allocObject(v169, 72, 7);
        *(_OWORD *)(v170 + 16) = v239;
        *(_QWORD *)(v170 + 56) = &type metadata for String;
        *(_QWORD *)(v170 + 64) = sub_1000770A4();
        *(_QWORD *)(v170 + 32) = v160;
        *(_QWORD *)(v170 + 40) = v162;
        swift_bridgeObjectRetain(v167);
        String.init(format:_:)(v168, v167, v170);
        v172 = v171;
        swift_bridgeObjectRelease(v167);
        v173 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x697261666173, 0xE600000000000000);
        v174 = v246;
        v153 = v249;
        v158(v246, (uint64_t)v249, v152);
        v175 = *(unsigned __int8 *)(v156 + 80);
        v176 = (v175 + 16) & ~v175;
        v177 = swift_allocObject(&unk_1005F7178, v176 + v247, v175 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v156 + 32))(v177 + v176, v174, v152);
        v178 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
        v179 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v172);
        v256 = sub_1001F8998;
        v257 = v177;
        v252 = _NSConcreteStackBlock;
        v253 = 1107296256;
        v254 = sub_100341638;
        v255 = &unk_1005F7190;
        v180 = _Block_copy(&v252);
        v181 = objc_msgSend(v178, "initWithName:image:actionHandler:", v179, v173, v180);

        _Block_release(v180);
        swift_release();
        v182 = v181;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v182);
        v184 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v183 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v184 >= v183 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v183 > 1, v184 + 1, 1);
        v185 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v184, v182);
        specialized Array._endMutation()(v185);

        ((void (*)(char *, uint64_t))v243)(v153, v152);
        v155 = (uint64_t)&v244[v241];
        v151 = v245 - 1;
        v154 = v250;
      }
      while (v245 != 1);
    }
    swift_bridgeObjectRelease(v236);
    v3 = v235;
  }
  v186 = v261;
  v187 = v262;
  sub_10001413C(v260, v261);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v187 + 136))(v186, v187) >= 1)
  {
    v188 = *(_QWORD *)(TTRAccesibility.RemindersList.Action.PreviewImages.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v188);
    v189 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6F746F6870, 0xE500000000000000);
    v190 = swift_allocObject(&unk_1005F70D8, 24, 7);
    swift_unknownObjectWeakInit(v190 + 16, v3);
    v191 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    v192 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v188);
    v256 = sub_1001F8930;
    v257 = v190;
    v252 = _NSConcreteStackBlock;
    v253 = 1107296256;
    v254 = sub_100341638;
    v255 = &unk_1005F7140;
    v193 = _Block_copy(&v252);
    v194 = objc_msgSend(v191, "initWithName:image:actionHandler:", v192, v189, v193);

    _Block_release(v193);
    swift_release();
    swift_release();
    v195 = v194;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v195);
    v197 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v196 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v197 >= v196 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v196 > 1, v197 + 1, 1);
    v198 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v197, v195);
    specialized Array._endMutation()(v198);

  }
  v199 = v261;
  v200 = v262;
  sub_10001413C(v260, v261);
  v201 = (*(uint64_t (**)(uint64_t, uint64_t))(v200 + 224))(v199, v200);
  if (v201)
  {
    v204 = (void *)v201;
    v205 = v203;
    if (v203)
    {
      v206 = v202;
      v207 = v3;
      v208 = v203;
    }
    else
    {
      v207 = v3;
      v209 = (uint64_t *)TTRAccesibility.RemindersList.Action.GoToAppSourceUnknownApp.unsafeMutableAddressor();
      v206 = *v209;
      v208 = v209[1];
      swift_bridgeObjectRetain(v208);
    }
    v210 = swift_bridgeObjectRetain(v205);
    v211 = (uint64_t *)TTRAccesibility.RemindersList.Action.GoToAppSourceFormat.unsafeMutableAddressor(v210);
    v212 = *v211;
    v213 = v211[1];
    v214 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v215 = swift_allocObject(v214, 72, 7);
    *(_OWORD *)(v215 + 16) = xmmword_100520250;
    *(_QWORD *)(v215 + 56) = &type metadata for String;
    *(_QWORD *)(v215 + 64) = sub_1000770A4();
    *(_QWORD *)(v215 + 32) = v206;
    *(_QWORD *)(v215 + 40) = v208;
    swift_bridgeObjectRetain(v213);
    String.init(format:_:)(v212, v213, v215);
    v217 = v216;
    swift_bridgeObjectRelease(v213);
    v218 = swift_allocObject(&unk_1005F70D8, 24, 7);
    swift_unknownObjectWeakInit(v218 + 16, v207);
    v219 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    v220 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v217);
    v256 = sub_1001F890C;
    v257 = v218;
    v252 = _NSConcreteStackBlock;
    v253 = 1107296256;
    v254 = sub_100341638;
    v255 = &unk_1005F7118;
    v221 = _Block_copy(&v252);
    v222 = objc_msgSend(v219, "initWithName:actionHandler:", v220, v221);

    _Block_release(v221);
    swift_release();
    swift_release();
    v223 = v222;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v223);
    v225 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v224 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v225 >= v224 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v224 > 1, v225 + 1, 1);
    v226 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v225, v223);
    specialized Array._endMutation()(v226);
    swift_bridgeObjectRelease(v205);

    v3 = v207;
  }
  v227 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
  v228 = swift_allocObject(&unk_1005F70D8, 24, 7);
  swift_unknownObjectWeakInit(v228 + 16, v3);
  v229 = v227;
  swift_retain();
  v230 = (void *)TTRIRemindersListReminderCellAccessibilityElementContaining.moveToSuggestedSectionAccessibilityAction(viewModel:image:mainHandler:)(v260, v229, sub_1001F8904, v228, ObjectType, &off_1005F7060);

  swift_release_n(v228, 2);
  if (v230)
  {
    v231 = v230;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v231);
    v233 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v232 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v233 >= v232 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v232 > 1, v233 + 1, 1);
    v234 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v233, v231);
    specialized Array._endMutation()(v234);

  }
  v27 = v258;
  sub_100027F10(v260);
  return v27;
}

uint64_t sub_1001F5A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  v4 = Strong;
  if (Strong)
  {
    v5 = objc_msgSend(Strong, "contentView");
    v6 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    v7 = swift_dynamicCastClass(v5, v6);

    if (v7)
    {
      sub_1003F59C4();
      LOBYTE(v4) = v8;
    }
    else
    {
      LOBYTE(v4) = 0;
    }

  }
  return v4 & 1;
}

uint64_t sub_1001F5AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  char v6;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1003F5AB0();
    v6 = v5;

  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1001F5B44()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  _QWORD v13[5];

  v0 = sub_10002A750(&qword_10064CB10);
  __chkstk_darwin(v0);
  v2 = (char *)&v13[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter(v13, v5);
  if (!v13[3])
  {
    sub_1000073A0((uint64_t)v13, &qword_100654980);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_10;
  }
  v8 = sub_10002A750(&qword_10064CB18);
  v9 = swift_dynamicCast(v2, v13, v8, v3, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, v9 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_10:
    sub_1000073A0((uint64_t)v2, &qword_10064CB10);
    return 0;
  }
  sub_10001F580((uint64_t)v2, (uint64_t)v7, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  if ((v7[112] & 1) != 0 || !*((_QWORD *)v7 + 13))
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    return 0;
  }
  v10 = v7[96];
  sub_10001F544((uint64_t)v7, type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  if (v10 == 2)
    return 0;
  if ((v10 & 1) != 0)
    return 2;
  else
    return 1;
}

uint64_t sub_1001F5CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t Strong;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (Strong)
    {
      v6 = Strong;
      sub_10011E600((uint64_t)v4);
      sub_1001F1AA0();

      swift_unknownObjectRelease(v6);
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_1001F5D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return 0;
  v4 = (void *)Strong;
  v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v4, "contentView");
    v8 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    if (swift_dynamicCastClass(v7, v8))
    {
      v9 = sub_1003F79F8();
      sub_10011E970((uint64_t)v4, (uint64_t)v9);

      swift_unknownObjectRelease(v6);
      v10 = 1;
    }
    else
    {

      swift_unknownObjectRelease(v6);
      v10 = 0;
    }
    v4 = v7;
  }
  else
  {
    v10 = 0;
  }

  return v10;
}

id sub_1001F5E88()
{
  void *v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSURL *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  Class isa;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  v5 = objc_msgSend(v1, "canOpenURL:", v3);

  if ((_DWORD)v5)
  {
    v6 = objc_msgSend(v0, "sharedApplication");
    URL._bridgeToObjectiveC()(v7);
    v9 = v8;
    v10 = sub_100350BFC((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1000175C8(&qword_100642D50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051FEC4);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "openURL:options:completionHandler:", v9, isa, 0, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  return v5;
}

uint64_t sub_1001F5FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  id v30;
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  uint64_t (**v34)(uint64_t);
  _QWORD v35[5];
  _BYTE v36[24];

  v3 = sub_10002A750(&qword_100649E58);
  __chkstk_darwin(v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (id *)&v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v13);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v36, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v17 = (char *)result;
    Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (!Strong)
    {

      return 0;
    }
    v19 = Strong;
    v20 = (uint64_t)&v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v31, 0, 0);
    sub_10000735C(v20, (uint64_t)v12, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_10000F614((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_100646F40);
      }
      else
      {
        v23 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 1, 1, v23);
      }
    }
    else
    {
      sub_10001F580((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      v22 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 0, 1, v22);
    }
    v24 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v15, 1, v24) == 1)
    {
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100646F40);

      swift_unknownObjectRelease(v19);
      return 0;
    }
    v33 = v24;
    v34 = protocol witness table for TTRRemindersListViewModel.Reminder;
    v25 = sub_100028D70(&v32);
    sub_10001F580((uint64_t)v15, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_10002E37C(&v32, (uint64_t)v35);
    sub_10001413C(v35, v35[3]);
    v26 = ((uint64_t (*)(uint64_t, uint64_t (**)(uint64_t)))protocol witness table for TTRRemindersListViewModel.Reminder[14])(v24, protocol witness table for TTRRemindersListViewModel.Reminder);
    if (!v26)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_17:

      swift_unknownObjectRelease(v19);
      sub_1000073A0((uint64_t)v5, &qword_100649E58);
      sub_100027F10(v35);
      return 0;
    }
    v27 = v26;
    if (*(_QWORD *)(v26 + 16))
    {
      sub_10002B1E8(v26 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      v28 = 0;
    }
    else
    {
      v28 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v28, 1, v6);
    v29 = swift_bridgeObjectRelease(v27);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v29) == 1)
      goto LABEL_17;
    sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
    v30 = *v9;
    sub_10011EB00((uint64_t)v17, (uint64_t)v30, 0, 0);

    swift_unknownObjectRelease(v19);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
    sub_100027F10(v35);
    return 1;
  }
  return result;
}

uint64_t sub_1001F63A8(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t Strong;
  uint64_t v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (void *)result;
    Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (Strong)
    {
      v8 = Strong;
      a3(v6);

      swift_unknownObjectRelease(v8);
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_1001F6438(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "contentView");
  v5 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  v6 = swift_dynamicCastClass(v4, v5);
  v7 = v6 != 0;

  if (!v6)
  {
LABEL_6:

    return v7;
  }
  v8 = v6 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess(v6 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &v14, 0, 0);
  v9 = type metadata accessor for TTRIBoardReminderCellContentConfiguration(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if ((_DWORD)result != 1)
  {
    v11 = *(void (**)(uint64_t))(v8 + 200);
    if (v11)
    {
      v12 = *(_QWORD *)(v8 + 208);
      v13 = swift_retain();
      v11(v13);
      sub_1000381B8((uint64_t)v11, v12);
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F669C()
{
  return type metadata accessor for TTRIBoardReminderCell(0);
}

uint64_t type metadata accessor for TTRIBoardReminderCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10064CAF8;
  if (!qword_10064CAF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIBoardReminderCell);
  return result;
}

void sub_1001F66E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100528ED8;
  v4[1] = &unk_100528EF0;
  sub_1001F677C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100528F08;
    v4[5] = &unk_100528F08;
    v4[6] = &unk_100528F08;
    v4[7] = &unk_100528EF0;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_1001F677C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10064CB08)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.Reminder(255);
    v3 = type metadata accessor for TTRRemindersListCellViewModelState(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10064CB08);
  }
}

uint64_t sub_1001F67D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  char v13;
  _BYTE v16[24];

  v1 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
  swift_beginAccess(v11, v16, 0, 0);
  sub_10000735C(v11, (uint64_t)v3, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_10000F614((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100646F40);
    else
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100646F40);
    v13 = 0;
  }
  else
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v13 = protocol witness table for TTRRemindersListViewModel.Reminder[5](v7);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return v13 & 1;
}

uint64_t sub_1001F69CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[24];

  v1 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v30 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
  if (!Strong)
    return 0;
  v31 = Strong;
  v18 = v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
  swift_beginAccess(v18, v32, 0, 0);
  sub_10000735C(v18, (uint64_t)v3, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_10000F614((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100646F40);
    else
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100646F40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_10:
    swift_unknownObjectRelease(v31);
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  protocol witness table for TTRRemindersListViewModel.Reminder[1](v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_10;
  v22 = v30;
  sub_10001F580((uint64_t)v13, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v23 = v31;
  v24 = swift_unknownObjectWeakLoadStrong(v31 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (v24)
  {
    v26 = v24;
    v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v25);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 + 8) + 920))(v22, ObjectType);
    swift_unknownObjectRelease(v23);
    swift_unknownObjectRelease(v26);
  }
  else
  {
    swift_unknownObjectRelease(v23);
    v20 = 0;
  }
  sub_10001F544(v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v20;
}

uint64_t sub_1001F6D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  int EnumCaseMultiPayload;
  char v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v1 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v33 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v34 = (uint64_t)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
  if (Strong)
  {
    v35 = Strong;
    v20 = v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
    swift_beginAccess(v20, v36, 0, 0);
    sub_10000735C(v20, (uint64_t)v3, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_10000F614((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100646F40);
      else
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    else
    {
      sub_10001F580((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100646F40);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_11:
      swift_unknownObjectRelease(v35);
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
      v22 = 0;
      return v22 & 1;
    }
    sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    protocol witness table for TTRRemindersListViewModel.Reminder[1](v7);
    v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
    v23(v15, 0, 1, v16);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      goto LABEL_11;
    v24 = (uint64_t)v15;
    v25 = v34;
    sub_10001F580(v24, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = swift_unknownObjectWeakLoadStrong(v35 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
    if (v26)
    {
      v27 = v26;
      v28 = v33;
      sub_10002B1E8(v25, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v23((char *)v28, 0, 1, v16);
      v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v27 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v30);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 + 8) + 928))(v28, ObjectType);
      swift_unknownObjectRelease(v27);
      sub_1000073A0(v28, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v22 = 0;
    }
    swift_unknownObjectRelease(v35);
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

void *sub_1001F7158()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1001F71A4(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1001F71F4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_customAccessibilityElement, a1, 33, 0);
  return j__swift_endAccess_0;
}

id sub_1001F7240()
{
  void *v0;

  return objc_msgSend(v0, "isEditing");
}

id sub_1001F7260()
{
  void *v0;

  return objc_msgSend(v0, "isSelected");
}

uint64_t sub_1001F7290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  id *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v40[24];

  v5 = v4;
  v10 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v10);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v14 = __chkstk_darwin(v13);
  v16 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v17 = type metadata accessor for TTRReminderCellTitleViewModel(0, v14);
  __chkstk_darwin(v17);
  v19 = &v40[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v20 = sub_10002A750(&qword_10064CBB0);
  __chkstk_darwin(v20);
  v22 = &v40[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v23);
  v25 = &v40[-v24 - 8];
  if ((a3 & 1) == 0)
  {
    v27 = sub_10002A750(&qword_10064CBB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
    goto LABEL_11;
  }
  sub_10002B1E8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  sub_10000735C(a2, (uint64_t)v12, &qword_10064CB28);
  v26 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v12, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_10064CB28);
    sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
LABEL_7:
    v29 = (id *)&UIFontTextStyleBody;
    goto LABEL_8;
  }
  v28 = v12[*(int *)(v26 + 20) + 8];
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  if (v28 != 3)
    goto LABEL_7;
  v29 = (id *)&UIFontTextStyleSubheadline;
LABEL_8:
  v30 = *v29;
  v31 = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(v30, 0, 1, 0);

  TTRReminderCellTitleViewModel.init(reminder:font:)(v16, v31);
  v32 = sub_10002A750(&qword_10064CBB8);
  v33 = *(int *)(v32 + 48);
  sub_10002B1E8((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
  if (qword_10063D4D0 != -1)
    swift_once(&qword_10063D4D0, sub_1001F1920);
  sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderCellTitleViewModel);
  *(_QWORD *)&v22[v33] = TTRCounterBasedIdentifierGenerator.allocID()();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 0, 1, v32);
  sub_10000F614((uint64_t)v22, (uint64_t)v25, &qword_10064CBB0);
LABEL_11:
  v34 = (uint64_t *)(v5 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule);
  swift_beginAccess(v5 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule, v40, 0, 0);
  v35 = *v34;
  if (*v34)
  {
    v36 = v34[1];
    swift_unknownObjectRetain(v35);
  }
  else
  {
    v36 = 0;
  }
  *a4 = v35;
  a4[1] = v36;
  v37 = sub_10002A750(&qword_10064CB68);
  return sub_10000F614((uint64_t)v25, (uint64_t)a4 + *(int *)(v37 + 28), &qword_10064CBB0);
}

uint64_t sub_1001F7614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  _BOOL4 IsBoldTextEnabled;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  void *v37;
  id v38;
  NSString *v39;
  NSString *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE v52[4];
  unsigned int v53;
  id v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  int v58;
  _BYTE *v59;
  _BYTE v60[64];
  _BYTE v61[24];

  v58 = a3;
  v59 = a4;
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = __chkstk_darwin(v7);
  v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for TTRIReminderCellNotesViewModel(0, v8);
  __chkstk_darwin(v11);
  v57 = &v52[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10002A750(&qword_10064CB98);
  __chkstk_darwin(v13);
  v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v52[-v17];
  v19 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  __chkstk_darwin(v19);
  v21 = &v52[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v22);
  v24 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000735C(a2, (uint64_t)v24, &qword_10064CB28);
  v25 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    sub_1000073A0((uint64_t)v24, &qword_10064CB28);
    sub_10002B1E8(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  else
  {
    v26 = v24[*(int *)(v25 + 28)];
    sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    sub_10002B1E8(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    if ((v26 & 1) != 0)
    {
      LODWORD(v27) = 0;
      goto LABEL_8;
    }
  }
  v28 = *(void **)&v21[v19[14]];
  if (v28)
    LODWORD(v27) = (uint64_t)objc_msgSend(v28, "length") < 1;
  else
    LODWORD(v27) = 1;
LABEL_8:
  sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  if ((v58 & 1) != 0)
  {
    v58 = v27;
    IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    v30 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v55 = v18;
    v56 = v4;
    if (IsBoldTextEnabled)
      v31 = static UIFont.roundedHeadlineFont.getter(v30);
    else
      v31 = static UIFont.roundedSubheadlineFont.getter(v30);
    v33 = (void *)v31;
    sub_10002B1E8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v53 = *(unsigned __int8 *)(a1 + v19[6] + 2);
    v34 = *(void **)(a1 + v19[14]);
    v35 = sub_10002A750(&qword_10064CBA8);
    inited = swift_initStackObject(v35, v60);
    *(_OWORD *)(inited + 16) = xmmword_1005201E0;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)(inited + 48) = NSForegroundColorAttributeName;
    v37 = (void *)objc_opt_self(UIColor);
    v38 = v34;
    v39 = NSFontAttributeName;
    v54 = v33;
    v40 = NSForegroundColorAttributeName;
    *(_QWORD *)(inited + 56) = objc_msgSend(v37, "secondaryLabelColor");
    v41 = sub_100351070(inited);
    v42 = *(_QWORD *)(a1 + v19[34] + 8);
    v43 = (uint64_t)v57;
    TTRIReminderCellNotesViewModel.init(item:allowsEditing:notes:baseTextStyles:inlineHashtagVisibility:supportsStyling:)(v10, v53, v34, v41, v42, *(unsigned __int8 *)(a1 + v19[35]));
    v27 = sub_10002A750(&qword_10064CBA0);
    v44 = *(int *)(v27 + 48);
    sub_10002B1E8(v43, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIReminderCellNotesViewModel);
    v45 = qword_10063D4D0;
    swift_bridgeObjectRetain(v42);
    if (v45 != -1)
      swift_once(&qword_10063D4D0, sub_1001F1920);

    sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRIReminderCellNotesViewModel);
    *(_QWORD *)&v15[v44] = TTRCounterBasedIdentifierGenerator.allocID()();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 0, 1, v27);
    v18 = v55;
    sub_10000F614((uint64_t)v15, (uint64_t)v55, &qword_10064CB98);
    v4 = v56;
    LOBYTE(v27) = v58;
  }
  else
  {
    v32 = sub_10002A750(&qword_10064CBA0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 1, 1, v32);
  }
  v46 = (uint64_t *)(v4 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_notesModule);
  swift_beginAccess(v46, v61, 0, 0);
  v47 = *v46;
  if (*v46)
  {
    v48 = v46[1];
    swift_unknownObjectRetain(v47);
  }
  else
  {
    v48 = 0;
  }
  v49 = v59;
  *v59 = v27;
  *((_QWORD *)v49 + 1) = v47;
  *((_QWORD *)v49 + 2) = v48;
  v50 = sub_10002A750(&qword_10064CB60);
  return sub_10000F614((uint64_t)v18, (uint64_t)&v49[*(int *)(v50 + 40)], &qword_10064CB98);
}

double sub_1001F7AF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  double result;
  __int128 v14;
  _OWORD v15[14];
  _OWORD v16[2];
  uint64_t v17;
  char v18;
  _BYTE v19[9];
  _OWORD v20[14];
  uint64_t v21;
  _OWORD v22[14];
  uint64_t v23;
  _BYTE v24[224];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  id v40;
  _BYTE v41[232];

  v3 = v2;
  sub_10000F614(a1, (uint64_t)v19, &qword_10064A848);
  sub_10000F614((uint64_t)v19, (uint64_t)v41, &qword_10064A848);
  sub_10000F614(a1, (uint64_t)v20, &qword_10064A848);
  if (sub_1001F88E0((uint64_t *)v20) == 1)
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
  }
  else
  {
    v22[12] = v20[12];
    v22[13] = v20[13];
    v23 = v21;
    v22[8] = v20[8];
    v22[9] = v20[9];
    v22[10] = v20[10];
    v22[11] = v20[11];
    v22[4] = v20[4];
    v22[5] = v20[5];
    v22[6] = v20[6];
    v22[7] = v20[7];
    v22[0] = v20[0];
    v22[1] = v20[1];
    v22[2] = v20[2];
    v22[3] = v20[3];
    sub_10000F614((uint64_t)v22, (uint64_t)v24, (uint64_t *)&unk_100649F30);
    sub_10000F614((uint64_t)v24, (uint64_t)&v39, (uint64_t *)&unk_100649F30);
    if (sub_100076D84(&v39) == 1)
    {
      v8 = 0;
    }
    else
    {
      v8 = v40;
      v9 = v40;
    }
    sub_10000F614((uint64_t)v41, (uint64_t)v16, &qword_10064A848);
    if ((v18 & 2) != 0
      && (sub_10000F614((uint64_t)v16, (uint64_t)v15, (uint64_t *)&unk_100649F30),
          sub_100076D84((uint64_t *)v15) != 1))
    {
      v35 = v15[10];
      v36 = v15[11];
      v37 = v15[12];
      v38 = v15[13];
      v31 = v15[6];
      v32 = v15[7];
      v33 = v15[8];
      v34 = v15[9];
      v27 = v15[2];
      v28 = v15[3];
      v29 = v15[4];
      v30 = v15[5];
      v25 = v15[0];
      v26 = v15[1];
      v6 = TTRAssignment.originatorString.getter();
      v7 = v10;
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
  }
  v11 = swift_allocObject(&unk_1005F70D8, 24, 7);
  v12 = swift_unknownObjectWeakInit(v11 + 16, v3);
  TTRBoardReminderCellAssigneeConfiguration.init(contact:name:onAssigneePress:)(v16, v8, v6, v7, sub_1001FAA1C, v11, v12);
  result = *(double *)v16;
  v14 = v16[1];
  *(_OWORD *)a2 = v16[0];
  *(_OWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 32) = v17;
  return result;
}

void sub_1001F7D70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1001F3F3C(a2, 0);

  }
}

uint64_t sub_1001F7DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  char v26[24];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v26, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v8 = (char *)result;
    sub_10002B1E8(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v9 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 144));
    v10 = v9[1];
    if (v10 >= 2)
    {
      v16 = *v9;
      Strong = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate]);
      if (Strong)
      {
        v18 = Strong;
        v19 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
        if (v19)
        {
          v21 = v19;
          v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
          ObjectType = swift_getObjectType(*(_QWORD *)(v19 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v20);
          (*(void (**)(char *, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 888))(v6, v16, v10, ObjectType);

          swift_unknownObjectRelease(v18);
          v24 = v21;
        }
        else
        {

          v24 = v18;
        }
        swift_unknownObjectRelease(v24);
      }
      else
      {

      }
    }
    else
    {
      if (qword_10063D4C8 != -1)
        swift_once(&qword_10063D4C8, sub_1001F0614);
      v11 = type metadata accessor for Logger(0);
      v12 = sub_100012DC4(v11, (uint64_t)qword_10064CA78);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.fault.getter(v13);
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Should not be able to trigger didPressSuggestedSectionFor as button should be hidden when no suggestion available", v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }

    }
    return sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

void sub_1001F7FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (v6)
    {
      v7 = v6;
      sub_10011E970((uint64_t)v5, a1);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

void sub_1001F8080(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (v6)
    {
      v7 = v6;
      a2(v5);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

void sub_1001F8108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate);
    if (v10)
    {
      v11 = v10;
      sub_10011EB00((uint64_t)v9, a1, a2, a3);

      swift_unknownObjectRelease(v11);
    }
    else
    {

    }
  }
}

uint64_t sub_1001F81B0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  char v7;

  v1 = objc_msgSend(v0, "contentView");
  v2 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  result = swift_dynamicCastClass(v1, v2);
  if (!result)
  {

    return 0;
  }
  if (*(_QWORD *)(result + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    v7 = 4;
    __chkstk_darwin(result);
    v6[2] = v4;
    swift_retain();
    v5 = TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)(&v7, sub_1001F8550, v6);

    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F8290()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "contentView");
  v2 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  if (swift_dynamicCastClass(v1, v2))
  {
    sub_1003F6118();
    v4 = v3;

  }
  else
  {

    return 0;
  }
  return v4;
}

void sub_1001F82FC(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = objc_msgSend(v1, "contentView");
  v3 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  if (swift_dynamicCastClass(v5, v3))
    sub_1003F61D4(a1 & 1, v4);

}

uint64_t sub_1001F8364@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v6[40];

  swift_getObjectType(a2, a2);
  sub_1001F85A8(a1);
  return sub_10000F614((uint64_t)v6, a3, (uint64_t *)&unk_1006547A0);
}

uint64_t sub_1001F83D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  _BYTE v13[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule);
  swift_beginAccess(v5, v13, 0, 0);
  v6 = *v5;
  if (!*v5)
    goto LABEL_6;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 16);
  if (!Strong)
    goto LABEL_6;
  v8 = Strong;
  v9 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack);
  if (!v9)
  {
    swift_unknownObjectRelease(Strong);
LABEL_6:
    v11 = 0;
    return v11 & 1;
  }
  swift_unknownObjectRetain(v6);
  v10 = v9;
  v11 = TTRIRemindersListCellAutoCompleteSuggestionsStackView.handleIfNecessary(_:for:)(a1, a2);
  swift_unknownObjectRelease(v6);
  swift_unknownObjectRelease(v8);

  return v11 & 1;
}

void sub_1001F8498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  _BYTE v11[24];

  v9 = (_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_autoCompleteModule);
  swift_beginAccess(v9, v11, 0, 0);
  v10 = *v9;
  if (*v9)
  {
    swift_unknownObjectRetain(*v9);
    sub_100239888(a5, a3, a4);
    swift_unknownObjectRelease(v10);
  }
}

void *sub_1001F8524()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id sub_1001F8550()
{
  uint64_t v0;

  return sub_1003F83AC(*(void **)(v0 + 16));
}

id sub_1001F8558(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

void sub_1001F85A8(char a1)
{
  __asm { BR              X10 }
}

id sub_1001F85F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  objc_msgSend(v29, "bounds");
  result = objc_msgSend(v30, "convertRect:fromCoordinateSpace:", v29, v31, v32, v33, v34);
  *(_QWORD *)v28 = v36;
  *(_QWORD *)(v28 + 8) = v37;
  *(_QWORD *)(v28 + 16) = v38;
  *(_QWORD *)(v28 + 24) = v39;
  *(_BYTE *)(v28 + 32) = 0;
  return result;
}

uint64_t sub_1001F88B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F88D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F5A3C(a1, v1);
}

uint64_t sub_1001F88E0(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1001F8904()
{
  uint64_t v0;

  return sub_1001F6438(v0);
}

uint64_t sub_1001F890C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F63A8(a1, v1, (void (*)(void *))sub_10011E964) & 1;
}

uint64_t sub_1001F8930(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F5FB4(a1, v1);
}

uint64_t sub_1001F8938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

id sub_1001F8998()
{
  type metadata accessor for URL(0);
  return sub_1001F5E88();
}

uint64_t sub_1001F89D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F5D84(a1, v1);
}

uint64_t sub_1001F89DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F63A8(a1, v1, (void (*)(void *))sub_10011E7C0) & 1;
}

uint64_t sub_1001F8A00(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F5CEC(a1, v1);
}

uint64_t sub_1001F8A08(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F5AE4(a1, v1);
}

uint64_t sub_1001F8A10(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F63A8(a1, v1, (void (*)(void *))sub_10011E7CC) & 1;
}

void *sub_1001F8A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  void *v34;
  NSString *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char **v40;
  id v41;
  uint64_t v42;
  NSString *v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  unsigned int (*v67)(uint64_t *, uint64_t, uint64_t);
  uint64_t v68;
  char v69[64];
  char v70[72];
  char v71[72];

  v2 = sub_10002A750(&qword_10064A7B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - v6;
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v64 - v9);
  v11 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v68 = a1 + *(int *)(v11 + 44);
  sub_10000735C(v68, (uint64_t)v10, &qword_10064A7B8);
  v12 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  v67 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  v13 = "onPresentee";
  if (v67(v10, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_10064A7B8);
    v14 = (uint64_t *)(a1 + *(int *)(v11 + 116));
    v15 = *v14;
    v16 = v14[1];
LABEL_6:
    if (v16)
    {
      v27 = swift_bridgeObjectRetain(v16);
      v28 = static TTRLocalizableStrings.Common.recurrenceFormat.getter(v27);
      v22 = v29;
      v30 = sub_10002A750((uint64_t *)&unk_100640FD0);
      v24 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_100520250;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      *(_QWORD *)(v24 + 64) = sub_1000770A4();
      *(_QWORD *)(v24 + 32) = v15;
      *(_QWORD *)(v24 + 40) = v16;
      v26 = v28;
      goto LABEL_8;
    }
    v65 = v15;
    v17 = 0;
    goto LABEL_11;
  }
  v18 = *v10;
  v17 = v10[1];
  swift_bridgeObjectRetain(v17);
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
  v19 = (uint64_t *)(a1 + *(int *)(v11 + 116));
  v15 = *v19;
  v16 = v19[1];
  if (!v17)
    goto LABEL_6;
  if (v16)
  {
    v20 = swift_bridgeObjectRetain(v19[1]);
    *(_QWORD *)&v66 = static TTRLocalizableStrings.Common.dueDateAndRecurrenceFormat.getter(v20);
    v22 = v21;
    v23 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v24 = swift_allocObject(v23, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    v25 = sub_1000770A4();
    *(_QWORD *)(v24 + 32) = v18;
    *(_QWORD *)(v24 + 40) = v17;
    *(_QWORD *)(v24 + 96) = &type metadata for String;
    *(_QWORD *)(v24 + 104) = v25;
    v13 = "TTRITemplateSavingDismissAnimationPresentee" + 32;
    *(_QWORD *)(v24 + 64) = v25;
    *(_QWORD *)(v24 + 72) = v15;
    *(_QWORD *)(v24 + 80) = v16;
    v26 = v66;
LABEL_8:
    v65 = static String.localizedStringWithFormat(_:_:)(v26, v22, v24);
    v17 = v31;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v24);
    goto LABEL_11;
  }
  v65 = v18;
LABEL_11:
  v32 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v32, v71);
  v66 = *((_OWORD *)v13 + 37);
  *(_OWORD *)(inited + 16) = v66;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v34 = (void *)objc_opt_self(UIColor);
  v35 = NSForegroundColorAttributeName;
  v36 = objc_msgSend(v34, "secondaryLabelColor");
  v37 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v37;
  *(_QWORD *)(inited + 40) = v36;
  v38 = sub_100350498(inited);
  sub_10000735C(v68, (uint64_t)v7, &qword_10064A7B8);
  if (v67((uint64_t *)v7, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v7, &qword_10064A7B8);
  }
  else
  {
    v39 = v7[*(int *)(v12 + 28)];
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
    if ((v39 & 1) != 0)
    {
      v40 = &selRef_ttr_systemRedColor;
      goto LABEL_16;
    }
  }
  v40 = &selRef_secondaryLabelColor;
LABEL_16:
  v41 = objc_msgSend(v34, *v40);
  v42 = swift_initStackObject(v32, v70);
  *(_OWORD *)(v42 + 16) = v66;
  *(_QWORD *)(v42 + 64) = v37;
  *(_QWORD *)(v42 + 32) = v35;
  *(_QWORD *)(v42 + 40) = v41;
  v43 = v35;
  v44 = v41;
  v45 = sub_100350498(v42);
  sub_10000735C(v68, (uint64_t)v4, &qword_10064A7B8);
  if (v67((uint64_t *)v4, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_10064A7B8);
    v46 = 0;
    v47 = 0;
    v48 = v65;
  }
  else
  {
    v49 = v4[*(int *)(v12 + 28)];
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
    v48 = v65;
    if ((v49 & 1) != 0 && UIAccessibilityShouldDifferentiateWithoutColor())
    {
      v50 = (uint64_t *)TTRAccesibility.ImagePlaceholders.DifferentiateWithoutColors_Overdue.unsafeMutableAddressor();
      v46 = *v50;
      v47 = v50[1];
      swift_bridgeObjectRetain(v47);
    }
    else
    {
      v46 = 0;
      v47 = 0;
    }
  }
  type metadata accessor for TTRRemindersListViewModel(0);
  v51 = (void *)static TTRRemindersListViewModel.reminderDescription(baseAttributes:dateAttributes:listNameToShow:subtaskString:dateString:recurrenceString:assignmentString:ttrAccessibilityOverdueIconString:)(v38, v45, 0, 0, 0, 0, v48, v17, 0, 0, 0, 0, v46, v47);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v17);
  if (v47)
  {
    swift_bridgeObjectRelease(v47);
    if (v51)
    {
      v52 = sub_10002A750(&qword_10064CB90);
      v53 = swift_initStackObject(v52, v69);
      *(_OWORD *)(v53 + 16) = v66;
      v54 = v51;
      v55 = (uint64_t *)TTRAccesibility.ImagePlaceholders.DifferentiateWithoutColors_Overdue.unsafeMutableAddressor();
      v57 = *v55;
      v56 = v55[1];
      *(_QWORD *)(v53 + 32) = v57;
      *(_QWORD *)(v53 + 40) = v56;
      v58 = swift_bridgeObjectRetain(v56);
      v59 = (uint64_t *)TTRAccesibility.DifferentiateWithoutColorsIcons.OverdueReminder.unsafeMutableAddressor(v58);
      v61 = *v59;
      v60 = v59[1];
      *(_QWORD *)(v53 + 48) = v61;
      *(_QWORD *)(v53 + 56) = v60;
      swift_bridgeObjectRetain(v60);
      v62 = sub_100350F50(v53);
      v51 = (void *)NSAttributedString.replacePlaceholdersWithSymbols(placeholderToSymbolNames:tintColor:)((Swift::OpaquePointer)v62, (UIColor)v44);

      swift_bridgeObjectRelease(v62);
    }
  }

  return v51;
}

uint64_t sub_1001F8FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSString *v10;
  void *v11;
  id v12;
  NSString v13;
  uint64_t v14;
  uint64_t inited;
  NSString *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  NSString *v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  _BYTE v34[72];
  _BYTE v35[80];
  UIColor_optional v36;

  v1 = a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 48);
  v2 = *(_QWORD *)(v1 + 24);
  if (!v2)
    return TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)(0, 0);
  v3 = *(void **)v1;
  v4 = *(void **)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v30 = v5;
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v32 = v4;
  v33 = v3;
  sub_1001FAA24(v3, v4, v5, v2, v7, v6);
  v10 = UIFontTextStyleSubheadline;
  v11 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)(v10, 0, 1, 0);

  v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v11, 1);
  v13 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v13, v12);

  sub_100005ED8(0, &qword_1006452E0, NSAttributedString_ptr);
  v14 = sub_10002A750(&qword_10064BB40);
  inited = swift_initStackObject(v14, v35);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v11;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v6);
  v16 = NSFontAttributeName;
  v17 = v11;
  v18 = sub_100350498(inited);
  v19 = swift_initStackObject(v14, v34);
  *(_OWORD *)(v19 + 16) = xmmword_100520250;
  *(_QWORD *)(v19 + 64) = v9;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = v17;
  v20 = v17;
  v21 = v16;
  v22 = sub_100350498(v19);
  v23 = (void *)static NSAttributedString.formattedString(format:formatAttributes:content:contentAttributes:)(v30, v2, v18, v7, v6, v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  if ((v8 & 1) != 0)
  {
    v24 = (void *)objc_opt_self(UIColor);
    v25 = v23;
    v36.value.super.isa = (Class)objc_msgSend(v24, "secondaryLabelColor");
    isa = v36.value.super.isa;
    v23 = (void *)NSAttributedString.addingStrikethrough(color:)(v36);

  }
  v27 = v23;
  v28 = TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)(v31, v23);

  sub_1001FAA70(v33, v32, v30, v2, v7, v6);
  return v28;
}

uint64_t sub_1001F92DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;

  v2 = type metadata accessor for REMHashtagLabelCollection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 136) + 16);
  swift_bridgeObjectRetain(v32);
  v6 = sub_10002A750(&qword_10064CB80);
  v7 = sub_100023FEC(&qword_10064CB88, &qword_10064CB80, (uint64_t)&protocol conformance descriptor for [A]);
  v8 = REMHashtagLabelCollection.init<A>(hashtags:)(&v32, v6, v7);
  v9 = REMHashtagLabelCollection.labels.getter(v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v32 = (_QWORD *)v9;
  v10 = sub_10002A750(&qword_1006466D0);
  v11 = sub_100023FEC((unint64_t *)&qword_100654F90, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = static REMHashtagLabelCollection.sortedLabels<A>(from:)(&v32, v10, v11);
  swift_bridgeObjectRelease(v9);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v34 = _swiftEmptyArrayStorage;
    sub_1003D7FFC(0, v13, 0);
    v14 = v34;
    v15 = (_QWORD *)(v12 + 40);
    do
    {
      v16 = *(v15 - 1);
      v17 = (void *)*v15;
      v18 = swift_bridgeObjectRetain(*v15);
      v19 = static String.hashtagTokenDefaultPrefix.getter(v18);
      v21 = v20;
      v32 = (_QWORD *)v19;
      v33 = v20;
      swift_bridgeObjectRetain(v20);
      v22._countAndFlagsBits = v16;
      v22._object = v17;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v21);
      v23 = v32;
      v24 = v33;
      v34 = v14;
      v26 = v14[2];
      v25 = v14[3];
      if (v26 >= v25 >> 1)
      {
        sub_1003D7FFC(v25 > 1, v26 + 1, 1);
        v14 = v34;
      }
      v15 += 2;
      v14[2] = v26 + 1;
      v27 = &v14[2 * v26];
      v27[4] = v23;
      v27[5] = v24;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v14 = _swiftEmptyArrayStorage;
  }
  v32 = v14;
  v28 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v10, v28);
  swift_bridgeObjectRelease(v14);
  return v29;
}

_QWORD *sub_1001F9548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v2 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_10064CB78);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment(0, v5);
  v8 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v32 = (uint64_t)&v30 - v11;
  v34 = type metadata accessor for TTRRemindersListViewModel.LinkAttachment(0);
  v12 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 60));
  if (!v15)
    return _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
    return _swiftEmptyArrayStorage;
  v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v33 = *(_QWORD *)(v12 + 72);
  v31 = v15;
  swift_bridgeObjectRetain_n(v15, 2);
  v18 = _swiftEmptyArrayStorage;
  do
  {
    sub_10002B1E8(v17, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
    v19 = v34;
    v20 = v37;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v37, &v14[*(int *)(v34 + 20)], v39);
    v21 = *(void **)v14;
    v22 = *(void **)&v14[*(int *)(v19 + 24)];
    TTRBoardReminderCellURLConfiguration.Attachment.init(url:attachmentID:metadata:)(v20, *(_QWORD *)v14, v22);
    v23 = v36;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v36);
    v24 = v22;
    v25 = v21;
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v23) == 1)
    {
      sub_1000073A0((uint64_t)v7, &qword_10064CB78);
    }
    else
    {
      v26 = v32;
      sub_10001F580((uint64_t)v7, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
      sub_10001F580(v26, v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v18 = (_QWORD *)sub_100456B94(0, v18[2] + 1, 1, (unint64_t)v18);
      v28 = v18[2];
      v27 = v18[3];
      if (v28 >= v27 >> 1)
        v18 = (_QWORD *)sub_100456B94(v27 > 1, v28 + 1, 1, (unint64_t)v18);
      v18[2] = v28 + 1;
      sub_10001F580(v35, (uint64_t)v18+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
    }
    v17 += v33;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease_n(v31, 2);
  return v18;
}

double sub_1001F9878@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  const UIFontTextStyle *v18;
  id v19;
  __int128 v20;
  double result;
  _OWORD v22[2];
  __int128 v23;

  v10 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v14 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 32));
  v15 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 24));
  sub_10000735C(a2, (uint64_t)v12, &qword_10064CB28);
  v16 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v12, 1, v16) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_10064CB28);
LABEL_5:
    v18 = &UIFontTextStyleBody;
    goto LABEL_6;
  }
  v17 = v12[*(int *)(v16 + 20) + 8];
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  if (v17 != 3)
    goto LABEL_5;
  v18 = &UIFontTextStyleSubheadline;
LABEL_6:
  v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", *v18);
  sub_100053DE4(a3, a4);
  TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)(v22, v14, 0, v15, v19, a3, a4);
  v20 = v22[1];
  *a5 = v22[0];
  a5[1] = v20;
  result = *(double *)&v23;
  a5[2] = v23;
  return result;
}

double sub_1001F9A08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  char *v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  __int128 v21;
  double result;
  _OWORD v23[2];
  __int128 v24;

  v10 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v12, &qword_10064CB28);
  v13 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_10064CB28);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v16 = &v12[*(int *)(v13 + 20)];
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
    if ((v18 & 0xFE) == 2)
      v14 = 0;
    else
      v14 = v17;
    v15 = (v18 & 0xFE) != 2 && (v18 & 1) == 0;
  }
  v19 = *(void **)(a2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 80));
  v20 = v19;
  sub_100053DE4(a3, a4);
  TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)(v23, v15, v14, 0, v19, a3, a4);
  v21 = v23[1];
  *a5 = v23[0];
  a5[1] = v21;
  result = *(double *)&v24;
  a5[2] = v24;
  return result;
}

uint64_t sub_1001F9B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;

  v10 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0;
  v15 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 144));
  v16 = v15[1];
  if (v16 >= 2)
  {
    v17 = *v15;
    v13 = v15[2];
    v14 = v15[3];
    if (v14)
    {
      sub_1001FA9EC(*v15, v15[1], v15[2], v15[3]);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      sub_1001FA9EC(*v15, v15[1], v15[2], 0);
      v13 = v17;
      v14 = v16;
    }
  }
  sub_10000735C(a1, (uint64_t)v12, &qword_10064CB28);
  v18 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_10064CB28);
    v19 = 2;
  }
  else
  {
    v19 = v12[*(int *)(v18 + 28)];
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  }
  result = sub_100053DE4(a3, a4);
  *(_QWORD *)a5 = v13;
  *(_QWORD *)(a5 + 8) = v14;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = v19;
  *(_BYTE *)(a5 + 33) = 2;
  return result;
}

uint64_t sub_1001F9CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  int v21;
  char v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v32;
  uint64_t v33;

  v8 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_10064CB28);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  sub_10000735C(a1, (uint64_t)&v32 - v15, &qword_10064CB28);
  v17 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  v19 = v18(v16, 1, v17);
  v33 = a3;
  v20 = a4;
  if (v19 == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_10064CB28);
    v21 = 0;
  }
  else
  {
    v21 = v16[*(int *)(v17 + 28)];
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  }
  v22 = *(_BYTE *)(a2 + *(int *)(v8 + 24) + 2);
  sub_10002B1E8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  if ((v22 & 1) == 0)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
LABEL_12:
    v28 = 3;
    v26 = v20;
    v27 = v33;
    goto LABEL_13;
  }
  v23 = v10[*(int *)(v8 + 24)];
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  if (v23 == 2)
    v24 = v21;
  else
    v24 = 1;
  if (v24 != 1)
    goto LABEL_12;
  sub_10000735C(a1, (uint64_t)v13, &qword_10064CB28);
  v25 = v18(v13, 1, v17);
  v26 = v20;
  v27 = v33;
  if (v25 == 1)
  {
    sub_1000073A0((uint64_t)v13, &qword_10064CB28);
    v28 = 5;
  }
  else
  {
    v28 = v13[*(int *)(v17 + 36)];
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
  }
LABEL_13:
  v29 = *(void **)(a2 + *(int *)(v8 + 80));
  v30 = v29;
  sub_100053DE4(v27, v26);
  return TTRBoardReminderCellInfoButtonConfiguration.init(infoButtonState:tintColor:onInfoPressed:)(v28, v29, v27, v26);
}

uint64_t sub_1001F9F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];

  v0 = type metadata accessor for AppEntityID(0);
  v31 = *(_QWORD *)(v0 - 8);
  v32 = v0;
  __chkstk_darwin(v0);
  v30 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v33);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMFeatureFlags(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v15 + 104))(v18, enum case for REMFeatureFlags.viewAnnotation(_:), v14, v16);
  v20 = REMFeatureFlags.isEnabled.getter(v19);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if ((v20 & 1) != 0)
  {
    v22 = v34 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
    swift_beginAccess(v34 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState, v35, 0, 0);
    sub_10000735C(v22, (uint64_t)v6, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v33);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_10000F614((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_100646F40);
      else
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    else
    {
      sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      return sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100646F40);
    }
    else
    {
      sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      v24 = protocol witness table for TTRRemindersListViewModel.Reminder[1](v10);
      v25 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v24);
      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      result = sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      if (v25)
      {
        v26 = type metadata accessor for ReminderEntity(0);
        v27 = v25;
        v28 = v30;
        AppEntityID.init(objectID:)(v27);
        v29 = sub_1000175C8((unint64_t *)&unk_1006547C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReminderEntity, (uint64_t)&protocol conformance descriptor for ReminderEntity);
        UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v26, v28, v26, v29);

        return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v28, v32);
      }
    }
  }
  return result;
}

void sub_1001FA2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001F8108(a1, a2, a3, v3);
}

void sub_1001FA2C4()
{
  uint64_t v0;

  sub_1001F8080(v0, (void (*)(void *))sub_10011E7C0);
}

void sub_1001FA2E4()
{
  uint64_t v0;

  sub_1001F8080(v0, (void (*)(void *))sub_10011E964);
}

uint64_t sub_1001FA308()
{
  return sub_1001FA98C((uint64_t (*)(_QWORD, uint64_t))sub_1001F7D70);
}

void sub_1001FA314()
{
  uint64_t v0;

  sub_1001F8080(v0, (void (*)(void *))sub_10011E600);
}

uint64_t sub_1001FA338()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id *v32;
  char *v33;
  uint64_t v34;
  id *v35;
  id v36;
  char *v37;
  char *v38;
  unint64_t v39;
  char *v40;

  v1 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
  {
    case 0u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v9))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v10 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v4, v10);
          break;
        default:
          break;
      }
LABEL_24:
      v24 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v25 = (char *)v6 + *(int *)(v24 + 20);
      v26 = *((_QWORD *)v25 + 1);
      if (v26)
      {
        swift_bridgeObjectRelease(v26);
        sub_10003E2EC(*((void **)v25 + 2), *((_QWORD *)v25 + 3), *((_QWORD *)v25 + 4), *((_QWORD *)v25 + 5), *((_QWORD *)v25 + 6), *((_QWORD *)v25 + 7), v25[64]);
        v27 = v25[120];
        if (v27 != 255)
          sub_10002B328(*((void **)v25 + 9), *((_QWORD *)v25 + 10), *((_QWORD *)v25 + 11), *((_QWORD *)v25 + 12), *((_QWORD *)v25 + 13), *((_QWORD *)v25 + 14), v27 & 1);
      }
      v16 = *(id *)((char *)v6 + *(int *)(v24 + 44));
      goto LABEL_28;
    case 2u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_43;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_43;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v14))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_43:
            v16 = *v11;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v15 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v16 = (id)v6[2];
      goto LABEL_28;
    case 6u:
      v16 = (id)*v6;
      goto LABEL_28;
    case 7u:
      v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v0 + v4, 1, v17))
      {
        swift_bridgeObjectRelease(*v6);
        v18 = (char *)v6 + *(int *)(v17 + 20);
        v19 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = (char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (!v21)
        goto LABEL_29;
      swift_bridgeObjectRelease(v21);
      v16 = (id)*((_QWORD *)v20 + 2);
LABEL_28:

LABEL_29:
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[9] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[10] + 8));
      v28 = (char *)v6 + v1[11];
      v29 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
      {
        swift_bridgeObjectRelease(*((_QWORD *)v28 + 1));
        v30 = &v28[*(int *)(v29 + 20)];
        v31 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      }
      v32 = (id *)((char *)v6 + v1[12]);
      if (v32[3])
      {

        swift_bridgeObjectRelease(v32[3]);
        swift_bridgeObjectRelease(v32[5]);
      }

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[15]));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[16]));

      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[29] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[30] + 8));
      v33 = (char *)v6 + v1[31];
      v34 = *((_QWORD *)v33 + 1);
      if (v34)
      {
        swift_bridgeObjectRelease(v34);

      }
      v35 = (id *)((char *)v6 + v1[33]);
      if ((unint64_t)*v35 >= 2)
      {

        swift_bridgeObjectRelease(v35[3]);
        swift_bridgeObjectRelease(v35[5]);
        swift_bridgeObjectRelease(v35[7]);
        swift_bridgeObjectRelease(v35[9]);
        swift_bridgeObjectRelease(v35[11]);

        v36 = v35[14];
        if (v36)
        {

          swift_bridgeObjectRelease(v35[17]);
          swift_bridgeObjectRelease(v35[19]);
          swift_bridgeObjectRelease(v35[21]);
          swift_bridgeObjectRelease(v35[23]);
          swift_bridgeObjectRelease(v35[25]);

        }
      }
      v37 = (char *)v6 + v1[34];
      swift_bridgeObjectRelease(*((_QWORD *)v37 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v37 + 2));
      v38 = (char *)v6 + v1[36];
      v39 = *((_QWORD *)v38 + 1);
      if (v39 >= 2)
      {
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(*((_QWORD *)v38 + 3));
      }
      v40 = (char *)v6 + v1[37];
      if (*(_QWORD *)v40)
      {

        swift_bridgeObjectRelease(*((_QWORD *)v40 + 2));
      }
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[38] + 8));

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 8u:
      v22 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v0 + v4, 1, v22))
      {
        v23 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v0 + v4, v23);
      }
      goto LABEL_29;
    case 9u:
      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v15 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v11, v15);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

uint64_t sub_1001FA980()
{
  return sub_1001FA98C(sub_1001F7DCC);
}

uint64_t sub_1001FA98C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

void sub_1001FA9CC()
{
  uint64_t v0;

  sub_1001F8080(v0, (void (*)(void *))sub_10011E7CC);
}

uint64_t sub_1001FA9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

void sub_1001FAA1C(uint64_t a1)
{
  uint64_t v1;

  sub_1001F7FF4(a1, v1);
}

id sub_1001FAA24(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;
  id v9;

  if (a4)
  {
    v9 = result;
    v8 = a2;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    return v9;
  }
  return result;
}

void sub_1001FAA70(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);

  }
}

uint64_t sub_1001FAABC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001FAAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  objc_super v5;

  v3 = *(void **)(v2 + 16);
  v5.receiver = v3;
  v5.super_class = (Class)swift_getObjectType(v3, a2);
  return objc_msgSendSuper2(&v5, "invalidateIntrinsicContentSize");
}

uint64_t sub_1001FAB20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001FAB30(uint64_t a1)
{
  uint64_t v1;

  sub_1001F1170(a1, *(void **)(v1 + 16));
}

void sub_1001FAB38(uint64_t a1)
{
  uint64_t v1;

  sub_1001F1950(a1, v1);
}

uint64_t sub_1001FAB9C()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for TTRIReminderPrintingPresenter()
{
  return objc_opt_self(_TtC9Reminders29TTRIReminderPrintingPresenter);
}

uint64_t sub_1001FABF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = sub_10002A750(&qword_10064CC80);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_10064CC88);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v16 = Strong;
    v42 = v11;
    v17 = *(_QWORD *)(v0 + 24);
    v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v19 = objc_msgSend(v18, "userInterfaceLayoutDirection");

    Date.init()(v20);
    TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration.init(isRightToLeft:timestamp:)(v19 == (id)1, v7);
    v21 = TTRReminderPrintingPresenterCapability.fetchAndGenerateHTML(configuration:)(v10);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration);
    v43 = v21;
    v22 = swift_allocObject(&unk_1005F7428, 32, 7);
    *(_QWORD *)(v22 + 16) = v16;
    *(_QWORD *)(v22 + 24) = v17;
    swift_unknownObjectRetain(v16);
    v40 = static Subscribers.Demand.unlimited.getter(v23);
    v24 = sub_10002A750(&qword_10064CCA0);
    v25 = sub_10002A750(&qword_10064CC90);
    v26 = sub_10002A750(&qword_100642D88);
    v41 = v12;
    v27 = v26;
    v28 = sub_100023FEC(&qword_10064CCA8, &qword_10064CCA0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v29 = sub_100023FEC(&qword_100642D98, &qword_100642D88, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.flatMap<A, B>(maxPublishers:_:)(v40, sub_1001FB204, v22, v24, v25, v27, v28, v29);
    swift_release();
    swift_release();
    v30 = sub_100023FEC(&qword_10064CCB0, &qword_10064CC88, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    v31 = v42;
    v32 = Publisher.eraseToAnyPublisher()(v42, v30);
    swift_unknownObjectRelease(v16);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v31);
  }
  else
  {
    v33 = (void *)objc_opt_self(REMError);
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v33, "internalErrorWithDebugDescription:", v34);

    v43 = (uint64_t)v35;
    v36 = sub_10002A750(&qword_10064CC90);
    v37 = sub_10002A750((uint64_t *)&unk_100649C60);
    Fail.init(error:)(&v43, v36, v37, &protocol self-conformance witness table for Error);
    v38 = sub_100023FEC(&qword_10064CC98, &qword_10064CC80, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v32 = Publisher.eraseToAnyPublisher()(v1, v38);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v32;
}

uint64_t sub_1001FAFA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25[2];
  uint64_t v26;
  _QWORD v27[5];

  v4 = sub_10002A750(&qword_10064CCB8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10064CCC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(v8 + 48);
  v15 = (__int128 *)&v10[v14];
  v16 = a1 + v14;
  sub_1001FB20C(a1, (uint64_t)v10);
  sub_100010634(v16, (uint64_t)v15);
  sub_1001FB250((uint64_t)v10, (uint64_t)v13);
  sub_10002E37C(v15, (uint64_t)v27);
  v26 = sub_1004AED9C((uint64_t)v13);
  sub_100010634((uint64_t)v27, (uint64_t)v25);
  v17 = swift_allocObject(&unk_1005F7450, 56, 7);
  sub_10002E37C(v25, v17 + 16);
  v18 = sub_10002A750(&qword_10064CCC8);
  v19 = sub_10002A750(&qword_10064CC90);
  v20 = sub_100023FEC(&qword_10064CCD0, &qword_10064CCC8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_1001FB2B8, v17, v18, v19, v20);
  swift_release();
  swift_release();
  v21 = sub_100023FEC(&qword_10064CCD8, &qword_10064CCB8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v22 = Publisher.eraseToAnyPublisher()(v4, v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100027F10(v27);
  result = sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersPrintingHTMLResult);
  *a2 = v22;
  return result;
}

uint64_t sub_1001FB1E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FB204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001FAFA4(a1, a2);
}

uint64_t sub_1001FB20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FB250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersPrintingHTMLResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FB294()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

id sub_1001FB2B8@<X0>(id *a1@<X0>, id *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v4 = *a1;
  *a2 = *a1;
  sub_100010634(v2 + 16, (uint64_t)(a2 + 1));
  return v4;
}

uint64_t sub_1001FB2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064CCE0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064CCE0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_UNKNOWN **sub_1001FB380()
{
  return &off_1005EA990;
}

uint64_t sub_1001FB38C()
{
  return 128;
}

uint64_t sub_1001FB394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_OWORD *)a1 = xmmword_100522BB0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = sub_1002030A4;
  *(_QWORD *)(a1 + 32) = v1;
  return swift_retain();
}

double sub_1001FB3BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  LODWORD(v5) = swift_getEnumCaseMultiPayload(v7, v5);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((_DWORD)v5 == 2)
  {
    v8 = type metadata accessor for MoveSubject(0);
    *(_QWORD *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = &off_1005F7580;
    v9 = sub_100028D70((_QWORD *)a2);
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)((char *)v9 + *(int *)(v8 + 20)) = v2;
    *((_BYTE *)v9 + *(int *)(v8 + 24)) = 0;
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001FB4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_10064D3B8);
  __chkstk_darwin(v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  sub_1001FB610((uint64_t)v6);
  v10 = type metadata accessor for RemindersInsertionRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    result = sub_1000073A0((uint64_t)v9, &qword_10064D3B8);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)(a2 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = v10;
    *(_QWORD *)(a2 + 32) = &off_1005F75A0;
    v12 = sub_100028D70((_QWORD *)a2);
    return sub_10001F580((uint64_t)v9, (uint64_t)v12, type metadata accessor for RemindersInsertionRequest);
  }
  return result;
}

void sub_1001FB610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RemindersInsertionRequest(0);
  __chkstk_darwin(v5);
  sub_10002B1E8(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v6 = (char *)sub_1001FB6EC + 4 * byte_100529050[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1001FB6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v0, 1, 1, v1);
}

void sub_1001FB74C()
{
  uint64_t v0;

  swift_release(v0);
  JUMPOUT(0x1001FB710);
}

void sub_1001FB764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10001F580(v3, v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v6 + *(int *)(v1 + 20)) = v5;
  *(_QWORD *)(v6 + *(int *)(v1 + 24)) = v4;
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580(v6, v0, type metadata accessor for RemindersInsertionRequest);
  JUMPOUT(0x1001FB718);
}

uint64_t sub_1001FB7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  _QWORD v23[2];

  v23[1] = a2;
  v5 = sub_10002A750(&qword_10064D3B8);
  __chkstk_darwin(v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v23 - v16;
  sub_10000735C(a1, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v18 = (uint64_t *)&unk_100640EB0;
    v19 = (uint64_t)v10;
LABEL_5:
    result = sub_1000073A0(v19, v18);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_QWORD *)(a3 + 32) = 0;
    return result;
  }
  sub_10001F580((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  sub_1001FB610((uint64_t)v14);
  v20 = type metadata accessor for RemindersInsertionRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v7, 1, v20) == 1)
  {
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = &qword_10064D3B8;
    v19 = (uint64_t)v7;
    goto LABEL_5;
  }
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = &off_1005F75A0;
  v22 = sub_100028D70((_QWORD *)a3);
  sub_10001F580((uint64_t)v7, (uint64_t)v22, type metadata accessor for RemindersInsertionRequest);
  return sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1001FB9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for AttributeMatchingRequest(0);
  a3[3] = v7;
  a3[4] = &off_1005F75C8;
  v8 = sub_100028D70(a3);
  sub_10000735C(a1, (uint64_t)v8, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)((char *)v8 + *(int *)(v7 + 20)) = a2;
  *(_QWORD *)((char *)v8 + *(int *)(v7 + 24)) = v3;
  return swift_retain();
}

void sub_1001FBA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v3 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  v9 = type metadata accessor for DateComponents(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(*(id *)(a2 + 16), "displayDate", v17);

  if (!v20)
  {
    v28 = v5;
    v29 = a2;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v30);
    swift_release();
    swift_release();
    v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
    {
      v22 = (uint64_t *)&unk_100640EB0;
      v23 = (uint64_t)v15;
LABEL_4:
      sub_1000073A0(v23, v22);
      return;
    }
    if (swift_getEnumCaseMultiPayload(v15, v21) == 1)
    {
      sub_10001F580((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1001FDEF8((uint64_t)v19);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v22 = &qword_100641728;
        v23 = (uint64_t)v8;
        goto LABEL_4;
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v26 = (uint64_t)v28;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v12, v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
      TTRReminderEditor.edit(dueDateComponents:)(v26);
      sub_1000073A0(v26, &qword_100641728);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v24 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
      v25 = (uint64_t)v19;
    }
    else
    {
      v24 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
      v25 = (uint64_t)v15;
    }
    sub_10001F544(v25, v24);
  }
}

uint64_t sub_1001FBD44(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    v10 = swift_getObjectType(v6, v7);
    LOBYTE(v9) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 56))(a1, v10, v9);
    swift_unknownObjectRelease(v8);
    if ((v9 & 1) == 0)
      return 0;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_10001413C(a1, v11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
  if (result)
  {

    return 1;
  }
  return result;
}

uint64_t sub_1001FBDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems);
  swift_bridgeObjectRetain(v6);
  v7 = sub_10037B2D0(a1, v6);
  swift_bridgeObjectRelease(v6);
  sub_10002B1E8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if ((v7 & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders);
    swift_beginAccess(v9, v13, 0, 0);
    v10 = *v9;
    swift_bridgeObjectRetain(*v9);
    v8 = sub_10037B2D0((uint64_t)v5, v10);
    swift_bridgeObjectRelease(v10);
  }
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return v8 & 1;
}

uint64_t sub_1001FBF08()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 1;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_1001FBF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr);
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 1;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

double sub_1001FC1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  char *v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  __int128 v129[2];
  _QWORD v130[5];

  v106 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v110 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v105 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v108 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v6);
  v107 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v115 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v114 = (char *)&v103 - v11;
  v123 = sub_10002A750(&qword_10064B6A8);
  __chkstk_darwin(v123);
  v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v122);
  v121 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v15);
  v112 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v17);
  v116 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v103 - v20;
  __chkstk_darwin(v22);
  v117 = (uint64_t)&v103 - v23;
  __chkstk_darwin(v24);
  v109 = (uint64_t)&v103 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v103 - v27;
  __chkstk_darwin(v29);
  v111 = (uint64_t)&v103 - v30;
  v31 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v113 = (uint64_t)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v128 = (char *)&v103 - v35;
  __chkstk_darwin(v36);
  v118 = (uint64_t)&v103 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v103 - v39;
  v41 = v1;
  sub_100471230(a1);
  v124 = a1;
  sub_10002B1E8(a1, (uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v40, v31);
  sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload != 4)
    return result;
  v119 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v120 = v41;
  v44 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v125 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v125(v28, 1, 1, v31);
  swift_retain();
  swift_retain();
  v45 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v28);
  swift_release();
  v103 = v28;
  sub_1000073A0((uint64_t)v28, (uint64_t *)&unk_100640EB0);
  v46 = v45[2];
  v126 = v31;
  v127 = v32;
  if (v46)
  {
    v47 = v45;
    v48 = v118;
    sub_10002B1E8((uint64_t)v45 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)), v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v49 = swift_getEnumCaseMultiPayload(v48, v31);
    sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v49)
    {
      v50 = swift_release();
    }
    else
    {
      swift_retain();
      v45 = sub_100393344((uint64_t)v45, v44);
      swift_bridgeObjectRelease(v47);
      swift_release_n(v44, 2);
    }
    v32 = v127;
  }
  else
  {
    swift_release();
    v50 = swift_bridgeObjectRelease(v45);
    v45 = _swiftEmptyArrayStorage;
  }
  v51 = v45[2];
  v52 = v117;
  if (!v51)
  {
    v77 = 1;
    v78 = v111;
    goto LABEL_23;
  }
  v53 = (uint64_t)v45 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  v118 = *(_QWORD *)(v32 + 72);
  v104 = v45;
  swift_bridgeObjectRetain(v45);
  v54 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
  v55 = (uint64_t)v128;
  while (1)
  {
    sub_10002B1E8(v53, v55, v54);
    v57 = v121;
    sub_10002B1E8(v55, v121, v54);
    v58 = v125;
    v59 = v126;
    v125((char *)v57, 0, 1, v126);
    swift_storeEnumTagMultiPayload(v57, v122, 0);
    swift_retain();
    sub_100383D24(v57, v52);
    sub_1000073A0(v57, &qword_10064B6B0);
    swift_release();
    v60 = v54;
    sub_10002B1E8(v124, (uint64_t)v21, v54);
    v58(v21, 0, 1, v59);
    v61 = (uint64_t)&v13[*(int *)(v123 + 48)];
    sub_10000735C(v52, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v21, v61, (uint64_t *)&unk_100640EB0);
    v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
    if (v62(v13, 1, v59) == 1)
      break;
    v63 = (uint64_t)v13;
    v64 = (uint64_t)v13;
    v65 = v116;
    sub_10000735C(v63, v116, (uint64_t *)&unk_100640EB0);
    if (v62((char *)v61, 1, v59) == 1)
    {
      v66 = v21;
      sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
      v67 = v117;
      sub_1000073A0(v117, (uint64_t *)&unk_100640EB0);
      sub_10001F544(v65, v54);
      v13 = (char *)v64;
      v52 = v67;
      v21 = v66;
      v55 = (uint64_t)v128;
      goto LABEL_11;
    }
    v68 = v113;
    v69 = sub_10001F580(v61, v113, v54);
    v70 = v114;
    v71 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v69);
    v72 = (uint64_t)v115;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v71);
    v73 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v70, v72);
    sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v74 = (uint64_t)v70;
    v54 = v60;
    sub_10001F544(v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v68, v60);
    v75 = v21;
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    v76 = v117;
    sub_1000073A0(v117, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v65, v60);
    sub_1000073A0(v64, (uint64_t *)&unk_100640EB0);
    v13 = (char *)v64;
    v52 = v76;
    v21 = v75;
    v55 = (uint64_t)v128;
    if ((v73 & 1) != 0)
      goto LABEL_21;
LABEL_12:
    sub_10001F544(v55, v54);
    v53 += v118;
    if (!--v51)
    {
      v45 = v104;
      v50 = swift_bridgeObjectRelease(v104);
      v77 = 1;
      v78 = v111;
      goto LABEL_22;
    }
  }
  sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v52, (uint64_t *)&unk_100640EB0);
  v56 = v62((char *)v61, 1, v59);
  v55 = (uint64_t)v128;
  if (v56 != 1)
  {
LABEL_11:
    sub_1000073A0((uint64_t)v13, &qword_10064B6A8);
    goto LABEL_12;
  }
  sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
LABEL_21:
  v45 = v104;
  swift_bridgeObjectRelease(v104);
  v78 = v111;
  sub_10001F580(v55, v111, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v77 = 0;
LABEL_22:
  v32 = v127;
LABEL_23:
  v79 = v126;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v125)(v78, v77, 1, v126, v50);
  swift_bridgeObjectRelease(v45);
  v80 = v109;
  sub_10000735C(v78, v109, (uint64_t *)&unk_100640EB0);
  v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v80, 1, v79);
  v82 = v110;
  v83 = (uint64_t)v112;
  if (v81 == 1)
  {
    sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
    v84 = v80;
    goto LABEL_25;
  }
  if (swift_getEnumCaseMultiPayload(v80, v79) != 1)
  {
    sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return result;
  }
  sub_10001F580(v80, v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v85 = v120;
  swift_beginAccess(v120 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders, v130, 33, 0);
  v86 = v107;
  sub_1000F4D80(v83, v107);
  sub_1000073A0(v86, &qword_100644980);
  swift_endAccess(v130);
  v87 = *(_QWORD *)(v85 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot);
  if (!v87)
  {
    sub_10001F544(v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v84 = v78;
LABEL_25:
    sub_1000073A0(v84, (uint64_t *)&unk_100640EB0);
    return result;
  }
  v88 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v108, 1, 1, v88);
  swift_bridgeObjectRetain(v87);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v89 = &_swiftEmptySetSingleton;
    goto LABEL_30;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v89 = v101;
    goto LABEL_44;
  }
  v89 = &_swiftEmptySetSingleton;
  v83 = (uint64_t)v112;
  v78 = v111;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_30;
LABEL_44:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v83 = (uint64_t)v112;
    v78 = v111;
LABEL_30:
    v90 = &_swiftEmptySetSingleton;
    v91 = (uint64_t)v103;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_31;
    goto LABEL_34;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v90 = v102;
  v83 = (uint64_t)v112;
  v78 = v111;
  v91 = (uint64_t)v103;
LABEL_31:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_34:
    v93 = &_swiftEmptySetSingleton;
    v95 = &_swiftEmptySetSingleton;
    v94 = (uint64_t)v105;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_35;
    goto LABEL_39;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v93 = v92;
  v94 = (uint64_t)v105;
LABEL_35:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v95 = v96;
  }
  else
  {
    v95 = &_swiftEmptySetSingleton;
  }
LABEL_39:
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v89, v90, v93, v95, &_swiftEmptySetSingleton);
  v97 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v98 = swift_allocObject(v97, 16, 7);
  v125((char *)v91, 1, 1, v126);
  v130[3] = v97;
  v130[4] = &off_100604210;
  v130[0] = v98;
  sub_100010634((uint64_t)v130, (uint64_t)v129);
  v99 = swift_allocObject(&unk_1005F7568, 72, 7);
  *(_QWORD *)(v99 + 16) = v87;
  sub_10002E37C(v129, v99 + 24);
  *(_QWORD *)(v99 + 64) = v120;
  swift_bridgeObjectRetain(v87);
  swift_retain();
  swift_retain();
  v100 = v108;
  sub_10047C8F8(1, v108, (uint64_t (*)(uint64_t))sub_1001D5A68, v99, v94, 0, v91);
  swift_release();
  sub_100027F10(v130);
  swift_bridgeObjectRelease(v87);
  sub_1000073A0(v91, (uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v94, v106);
  sub_1000073A0(v100, &qword_100649CA0);
  sub_10001F544(v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1001FCEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  _QWORD *v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120[2];
  _QWORD v121[5];
  char v122[8];

  v100 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v104 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10002A750(&qword_10064B6A0);
  __chkstk_darwin(v112);
  v118 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v108 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v9);
  v107 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v115 = (uint64_t)&v93 - v12;
  __chkstk_darwin(v13);
  v119 = (uint64_t)&v93 - v14;
  v15 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v15);
  v105 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v102 = (uint64_t)&v93 - v18;
  v113 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v106 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v116 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v117 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v93 - v23;
  __chkstk_darwin(v25);
  v103 = (uint64_t)&v93 - v26;
  v109 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v111 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v93 - v30;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders, v122, 0, 0);
  v33 = *v32;
  swift_bridgeObjectRetain(*v32);
  v114 = a1;
  LOBYTE(a1) = sub_10037B2D0(a1, v33);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
  if ((a1 & 1) != 0)
    return result;
  sub_10002B1E8(v114, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_beginAccess(v32, v121, 33, 0);
  sub_1004809A0((uint64_t)v31, (uint64_t)v28);
  sub_10001F544((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_endAccess(v121);
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot);
  if (!v35)
    return result;
  v101 = v31;
  v94 = v1;
  v36 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v37 = v106;
  v38 = v35;
  v39 = v105;
  v40 = v113;
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
  v95(v105, 1, 1, v113);
  v97 = v38;
  swift_bridgeObjectRetain(v38);
  v96 = v36;
  swift_retain();
  swift_retain();
  v41 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v39);
  swift_release();
  sub_1000073A0(v39, (uint64_t *)&unk_100640EB0);
  if (v41[2])
  {
    sub_10002B1E8((uint64_t)v41 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v40);
    sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v43 = (uint64_t)v41;
      v44 = v96;
      swift_retain();
      v45 = sub_100393344(v43, v44);
      swift_bridgeObjectRelease(v43);
      swift_release();
      v41 = v45;
    }
    v46 = v106;
  }
  else
  {
    swift_bridgeObjectRelease(v41);
    v41 = _swiftEmptyArrayStorage;
    v46 = v37;
  }
  v47 = v41[2];
  v48 = v97;
  if (!v47)
  {
    v72 = 1;
    v73 = v102;
    goto LABEL_26;
  }
  v49 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v93 = v41;
  v50 = (uint64_t)v41 + v49;
  v110 = *(_QWORD *)(v46 + 72);
  v51 = &qword_100644980;
  v52 = v109;
  while (1)
  {
    v54 = v51;
    v55 = v117;
    sub_10002B1E8(v50, v117, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v56 = v55;
    v57 = v116;
    sub_10002B1E8(v56, v116, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v57, v40) == 1)
    {
      v58 = v108;
      sub_10001F580(v116, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v59 = v119;
      sub_10002B1E8(v58, v119, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v60 = v111;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
      v61(v59, 0, 1, v52);
    }
    else
    {
      sub_10001F544(v116, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v60 = v111;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
      v61(v119, 1, 1, v52);
    }
    v62 = v115;
    sub_10002B1E8(v114, v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v61(v62, 0, 1, v52);
    v63 = v118;
    v64 = v118 + *(int *)(v112 + 48);
    v51 = v54;
    sub_10000735C(v119, v118, v54);
    sub_10000735C(v62, v64, v54);
    v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
    if (v65(v63, 1, v52) == 1)
      break;
    v66 = v115;
    v67 = v118;
    v68 = v119;
    v69 = v107;
    sub_10000735C(v118, v107, v51);
    if (v65(v64, 1, v52) == 1)
    {
      sub_1000073A0(v66, v51);
      sub_1000073A0(v68, v51);
      sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v40 = v113;
      v52 = v109;
      goto LABEL_11;
    }
    v70 = (uint64_t)v101;
    sub_10001F580(v64, (uint64_t)v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v71 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v69, v70);
    sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v66, v51);
    sub_1000073A0(v68, v51);
    sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0(v67, v51);
    v40 = v113;
    v52 = v109;
    if ((v71 & 1) != 0)
      goto LABEL_24;
LABEL_12:
    sub_10001F544(v117, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v50 += v110;
    if (!--v47)
    {
      v72 = 1;
      v48 = v97;
      v73 = v102;
      goto LABEL_25;
    }
  }
  sub_1000073A0(v115, v54);
  sub_1000073A0(v119, v54);
  v53 = v65(v64, 1, v52);
  v40 = v113;
  if (v53 != 1)
  {
LABEL_11:
    sub_1000073A0(v118, &qword_10064B6A0);
    goto LABEL_12;
  }
  sub_1000073A0(v118, &qword_100644980);
LABEL_24:
  v73 = v102;
  sub_10001F580(v117, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v72 = 0;
  v48 = v97;
LABEL_25:
  v46 = v106;
  v41 = v93;
LABEL_26:
  v74 = v95;
  v95(v73, v72, 1, v40);
  swift_release();
  v75 = swift_bridgeObjectRelease(v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v46 + 48))(v73, 1, v40, v75) == 1)
  {
    swift_bridgeObjectRelease(v48);
    sub_1000073A0(v73, (uint64_t *)&unk_100640EB0);
    return result;
  }
  sub_10001F580(v73, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v76 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v104, 1, 1, v76);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v77 = &_swiftEmptySetSingleton;
    v78 = v94;
    goto LABEL_30;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v77 = v91;
    v78 = v94;
    goto LABEL_42;
  }
  v77 = &_swiftEmptySetSingleton;
  v78 = v94;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    goto LABEL_30;
LABEL_42:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_30:
    v79 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_31;
    goto LABEL_33;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v79 = v92;
LABEL_31:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
LABEL_33:
    v81 = &_swiftEmptySetSingleton;
    v82 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_34;
    goto LABEL_37;
  }
  sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
  v81 = v80;
LABEL_34:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10048D964((uint64_t)_swiftEmptyArrayStorage);
    v82 = v83;
  }
  else
  {
    v82 = &_swiftEmptySetSingleton;
  }
LABEL_37:
  v84 = (uint64_t)v98;
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)(v77, v79, v81, v82, &_swiftEmptySetSingleton);
  v85 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v86 = swift_allocObject(v85, 16, 7);
  v87 = v103;
  v88 = v105;
  sub_10002B1E8(v103, v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v74(v88, 0, 1, v113);
  v121[3] = v85;
  v121[4] = &off_100604210;
  v121[0] = v86;
  sub_100010634((uint64_t)v121, (uint64_t)v120);
  v89 = swift_allocObject(&unk_1005F7540, 72, 7);
  *(_QWORD *)(v89 + 16) = v48;
  sub_10002E37C(v120, v89 + 24);
  *(_QWORD *)(v89 + 64) = v78;
  swift_bridgeObjectRetain(v48);
  swift_retain();
  swift_retain();
  v90 = v104;
  sub_10047C8F8(1, v104, (uint64_t (*)(uint64_t))sub_1001D5A68, v89, v84, 0, v88);
  swift_release();
  sub_100027F10(v121);
  swift_bridgeObjectRelease(v48);
  sub_1000073A0(v88, (uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v84, v100);
  sub_1000073A0(v90, &qword_100649CA0);
  sub_10001F544(v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001FDA8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v11 = static Locale.current.getter(v10);
  static Calendar.current.getter(v11);
  v12 = type metadata accessor for TTRShowScheduledSectionHeaderTitleFormatter(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  result = TTRShowScheduledSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)(v5, v2, 1, v8);
  qword_10064CCF8 = result;
  return result;
}

uint64_t sub_1001FDBBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD v46[5];

  v45 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v44 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = 1;
  v9 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v8, v9, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v41 = REMSmartListType.title.getter(REMSmartListTypeScheduled);
  v11 = v10;
  v42 = static TTRListColors.SmartList.scheduled.getter();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v16 = v15(ObjectType, v12);
  v17 = v16;
  if (v16)
    swift_unknownObjectRelease(v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12);
  v19 = v18;
  if (v18)
    swift_unknownObjectRelease(v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 56))(v46, ObjectType, v12);
  v20 = v46[3];
  sub_1000073A0((uint64_t)v46, &qword_100649FC0);
  v21 = v15(ObjectType, v12);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    v25 = swift_getObjectType(v21, v22);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v40 = 0;
  }
  v26 = v19 != 0;
  v27 = 0xE000000000000000;
  if (v11)
    v27 = v11;
  v39 = v27;
  if (v11)
    v28 = v41;
  else
    v28 = 0;
  v29 = v20 != 0;
  v30 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_hasDefaultNewReminderButton);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_completedRemindersCount + 8))
    v31 = 0;
  else
    v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_completedRemindersCount);
  v32 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v33 = v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v43, 1, 1, v32);
  v34 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v35 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v44, 1, 1, v34);
  BYTE6(v38) = 0;
  WORD2(v38) = 1;
  LODWORD(v38) = 0;
  HIBYTE(v37) = v40 & 1;
  BYTE6(v37) = v29;
  WORD2(v37) = 0;
  BYTE3(v37) = v26;
  BYTE2(v37) = 0;
  BYTE1(v37) = v17 != 0;
  LOBYTE(v37) = 1;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v8, v28, v39, v42, 0, 1, 0, 3, v37, v30, v31, 0, 0, 0, 0, v33, v35, v38);
}

void sub_1001FDEF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v2 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for Date(0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  sub_10002B1E8(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v8 = (char *)sub_1001FE024 + 4 * byte_10052905C[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1001FE024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(v5, v4, v2);
  v7(v1, v5, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v2) == 1)
  {
    sub_1000073A0(v1, (uint64_t *)&unk_100653A90);
    v8 = type metadata accessor for DateComponents(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v0, 1, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v1, v2);
    type metadata accessor for TTRReminderEditor(0);
    static TTRReminderEditor.dueDateComponents(from:isAllDay:)(v3, 1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v2);
    v10 = type metadata accessor for DateComponents(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v0, 0, 1, v10);
  }
}

double sub_1001FE148()
{
  uint64_t v0;
  double result;

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID, &qword_100644980);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot)).n128_u64[0];
  return result;
}

uint64_t sub_1001FE19C()
{
  uint64_t v0;

  v0 = sub_10046B320();
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID, &qword_100644980);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001FE214()
{
  return type metadata accessor for TTRShowScheduledViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowScheduledViewModelSource(uint64_t a1)
{
  return sub_100007328(a1, qword_10064CD60, (uint64_t)&nominal type descriptor for TTRShowScheduledViewModelSource);
}

void sub_1001FE230(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_1005298C0;
  v4[1] = &unk_1005298D8;
  v4[2] = &unk_1005298F0;
  sub_100005494(319, (unint64_t *)&qword_10064BE38, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_100529908;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 1336);
  }
}

void sub_1001FE2E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  int v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void (*v103)(uint64_t, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(uint64_t, char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t Strong;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t ObjectType;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  int v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  char *v157;
  char *v158;
  char *v159;
  int v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  _QWORD v181[5];
  char v182[8];
  char v183[8];
  char v184[8];
  char v185[8];
  char v186[8];
  char v187[8];

  v144 = a2;
  v165 = *v2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v145 = (char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v5);
  v143 = (uint64_t)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v175);
  v152 = (uint64_t)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for Date(0);
  v179 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v159 = (char *)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v10 = __chkstk_darwin(v9);
  v154 = (uint64_t)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0, v10);
  v177 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v157 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v158 = (char *)&v138 - v14;
  v15 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v15);
  v162 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v174 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v147 = (uint64_t)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v155 = (uint64_t)&v138 - v19;
  __chkstk_darwin(v20);
  v153 = (char *)&v138 - v21;
  v23 = __chkstk_darwin(v22);
  v161 = (char *)&v138 - v24;
  v25 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(0, v23);
  v176 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v138 - v29;
  v142 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v149 = (uint64_t)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10002A750(&qword_10063F008);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMRemindersListDataView.ScheduledDateBucketsModel.remindersCount.getter(v33);
  v36 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
  if (v38 == 1)
  {
    sub_1000073A0((uint64_t)v35, &qword_10063F008);
    v39 = 0;
  }
  else
  {
    v39 = REMRemindersListDataView.CountByCompleted.completed.getter();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  }
  v40 = v164;
  v41 = v164 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_completedRemindersCount;
  *(_QWORD *)v41 = v39;
  *(_BYTE *)(v41 + 8) = v38 == 1;
  v42 = v149;
  sub_1001FDBBC(v149);
  v43 = swift_allocObject(&unk_1005F74A0, 24, 7);
  v171 = v43;
  *(_QWORD *)(v43 + 16) = _swiftEmptyArrayStorage;
  v140 = (uint64_t *)(v43 + 16);
  v44 = swift_allocObject(&unk_1005F74C8, 24, 7);
  v170 = v44;
  *(_QWORD *)(v44 + 16) = &_swiftEmptySetSingleton;
  v151 = (uint64_t *)(v44 + 16);
  if (*(_BYTE *)(v40 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) != 1)
  {
    v46 = (uint64_t *)(v40 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
    swift_beginAccess(v40 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements, v187, 0, 0);
    v47 = *v46;
    v181[0] = v47;
    swift_bridgeObjectRetain(v47);
    v48 = sub_10002A750(&qword_10064B678);
    v49 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v50 = sub_100023FEC((unint64_t *)&qword_10064B680, &qword_10064B678, (uint64_t)&protocol conformance descriptor for [A]);
    v51 = sub_10003E3B8();
    v167 = (void *)Sequence.compactMapToSet<A>(_:)(sub_10047AF9C, 0, v48, v49, v50, v51);
    swift_bridgeObjectRelease(v47);
    v45 = v169;
    goto LABEL_8;
  }
  v45 = v169;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v167 = &_swiftEmptySetSingleton;
LABEL_8:
    v52 = v175;
    goto LABEL_9;
  }
  v136 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
  v52 = v175;
  if (v136)
  {
    sub_10048CBE4((uint64_t)_swiftEmptyArrayStorage);
    v167 = v137;
  }
  else
  {
    v167 = &_swiftEmptySetSingleton;
  }
LABEL_9:
  v53 = v174;
  v163 = swift_allocBox(v52);
  v55 = v54;
  v146 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  v146(v54, 1, 1, v166);
  v56 = swift_allocObject(&unk_1005F74F0, 17, 7);
  v168 = v56;
  *(_BYTE *)(v56 + 16) = 1;
  v57 = v56 + 16;
  v58 = REMRemindersListDataView.ScheduledDateBucketsModel.buckets.getter();
  v59 = v58;
  v60 = *(_QWORD *)(v58 + 16);
  if (v60)
  {
    v61 = v176;
    v62 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    v138 = v58;
    v63 = v58 + v62;
    swift_beginAccess(v57, v186, 1, 0);
    v148 = v55;
    v64 = swift_beginAccess(v55, v185, 1, 0);
    LODWORD(v174) = enum case for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.pastDue(_:);
    v160 = enum case for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.nextFiveDays(_:);
    v156 = enum case for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.day(_:);
    v150 = enum case for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.month(_:);
    v139 = enum case for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.year(_:);
    v173 = *(_QWORD *)(v61 + 72);
    v172 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v65 = v177;
    v66 = v57;
    v67 = v166;
    v175 = v66;
    while (1)
    {
      v68 = v172;
      ((void (*)(char *, unint64_t, uint64_t, __n128))v172)(v30, v63, v25, v64);
      v68(v27, v30, v25);
      v69 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v27, v25);
      if (v69 == (_DWORD)v174)
        break;
      if (v69 == v160)
      {
        (*(void (**)(char *, uint64_t))(v61 + 96))(v27, v25);
        v79 = sub_10002A750(&qword_10064D3B0);
        swift_bridgeObjectRelease(*(_QWORD *)&v27[*(int *)(v79 + 48)]);
        if (qword_10063D4D8 != -1)
          swift_once(&qword_10063D4D8, sub_1001FB2F0);
        v80 = type metadata accessor for Logger(0);
        v81 = sub_100012DC4(v80, (uint64_t)qword_10064CCE0);
        v82 = Logger.logObject.getter(v81);
        v83 = static os_log_type_t.fault.getter(v82);
        if (os_log_type_enabled(v82, v83))
        {
          v84 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v84 = 0;
          _os_log_impl((void *)&_mh_execute_header, v82, v83, "iOS and macOS do not support the Next Five Days section", v84, 2u);
          v85 = v84;
          v45 = v169;
          swift_slowDealloc(v85, -1, -1);
        }

        v61 = v176;
        (*(void (**)(char *, uint64_t))(v176 + 8))(v30, v25);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v27, v178);
        goto LABEL_28;
      }
      if (v69 == v156)
      {
        (*(void (**)(char *, uint64_t))(v61 + 96))(v27, v25);
        v86 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 32))(v157, v27, v45);
        v87 = (uint64_t)v153;
        REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter(v86);
        v88 = swift_storeEnumTagMultiPayload(v87, v67, 4);
        v89 = REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter(v88);
        v90 = v154;
        sub_1001FF7F4((uint64_t)v30, v87, v89, 1, (uint64_t)v167, v168, v171, v170, v154);
        swift_bridgeObjectRelease(v89);
        v91 = sub_10001F544(v90, type metadata accessor for TTRRemindersListTreeViewModel.Section);
        v92 = v159;
        v93 = REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter(v91);
        v94 = Date.rem_isToday.getter(v93);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v92, v178);
        if ((v94 & 1) != 0)
        {
          v95 = v152;
          sub_10002B1E8(v87, v152, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          v146(v95, 0, 1, v166);
          sub_100041F2C(v95, v148, &qword_100644980);
          v96 = v147;
          sub_10002B1E8(v87, v147, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          swift_beginAccess(v151, v181, 33, 0);
          v97 = v155;
          sub_1004809A0(v155, v96);
          swift_endAccess(v181);
          sub_10001F544(v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        }
        sub_10001F544(v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v65 = v177;
        (*(void (**)(char *, uint64_t))(v177 + 8))(v157, v45);
        v61 = v176;
        (*(void (**)(char *, uint64_t))(v176 + 8))(v30, v25);
        v67 = v166;
        goto LABEL_29;
      }
      if (v69 == v150)
      {
        (*(void (**)(char *, uint64_t))(v61 + 96))(v27, v25);
        v99 = *(_QWORD *)&v27[*(int *)(sub_10002A750(&qword_10064D3B0) + 48)];
        v100 = v179;
        v101 = v159;
        v102 = v178;
        (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v159, v27, v178);
        v103 = *(void (**)(uint64_t, char *, uint64_t))(v100 + 16);
        v104 = v155;
        v103(v155, v101, v102);
        swift_storeEnumTagMultiPayload(v104, v67, 5);
        sub_1001FFDE0((uint64_t)v30, v104, v99, 1, (uint64_t)v167, v168, v171, v170, v163, v164);
        swift_bridgeObjectRelease(v99);
        sub_10001F544(v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v45 = v169;
        v61 = v176;
        v65 = v177;
        v105 = v102;
        v98 = (_BYTE *)v175;
        (*(void (**)(char *, uint64_t))(v179 + 8))(v159, v105);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v25);
        goto LABEL_30;
      }
      if (v69 != v139)
      {
        _diagnoseUnexpectedEnumCase<A>(type:)(v25, v25);
        __break(1u);
        return;
      }
      (*(void (**)(char *, uint64_t))(v61 + 96))(v27, v25);
      v106 = *(_QWORD *)&v27[*(int *)(sub_10002A750(&qword_10064D3B0) + 48)];
      v107 = v179;
      v108 = v159;
      v109 = v178;
      (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v159, v27, v178);
      v110 = *(void (**)(uint64_t, char *, uint64_t))(v107 + 16);
      v111 = v155;
      v110(v155, v108, v109);
      swift_storeEnumTagMultiPayload(v111, v67, 6);
      sub_1001FFDE0((uint64_t)v30, v111, v106, 1, (uint64_t)v167, v168, v171, v170, v163, v164);
      swift_bridgeObjectRelease(v106);
      sub_10001F544(v111, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v61 = v176;
      (*(void (**)(char *, uint64_t))(v179 + 8))(v108, v109);
LABEL_27:
      (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v25);
      v45 = v169;
LABEL_28:
      v65 = v177;
LABEL_29:
      v98 = (_BYTE *)v175;
LABEL_30:
      *v98 = 0;
      v63 += v173;
      if (!--v60)
      {
        swift_bridgeObjectRelease(v167);
        swift_bridgeObjectRelease(v138);
        v42 = v149;
        v112 = v164;
        v55 = v148;
        goto LABEL_38;
      }
    }
    (*(void (**)(char *, uint64_t))(v61 + 96))(v27, v25);
    v70 = *(_QWORD *)v27;
    if (*(_QWORD *)(*(_QWORD *)v27 + 16))
    {
      v71 = v158;
      v72 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v65 + 16))(v158, v70 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80)), v45);
      v73 = (uint64_t)v162;
      REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter(v72);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v71, v45);
      v74 = v179;
      v75 = v178;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v179 + 56))(v73, 0, 1, v178);
      v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v73, 1, v75);
      v77 = v164;
      if ((_DWORD)v76 != 1)
      {
        v78 = (uint64_t)v161;
        (*(void (**)(char *, uint64_t, uint64_t))(v179 + 32))(v161, v73, v178);
LABEL_26:
        v67 = v166;
        swift_storeEnumTagMultiPayload(v78, v166, 2);
        sub_1001FFDE0((uint64_t)v30, v78, v70, 0, (uint64_t)v167, v168, v171, v170, v163, v77);
        swift_bridgeObjectRelease(v70);
        sub_10001F544(v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v61 = v176;
        goto LABEL_27;
      }
    }
    else
    {
      v73 = (uint64_t)v162;
      v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56))(v162, 1, 1, v178);
      v77 = v164;
    }
    v78 = (uint64_t)v161;
    Date.init()(v76);
    sub_1000073A0(v73, (uint64_t *)&unk_100653A90);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease(v167);
  swift_bridgeObjectRelease(v59);
  v112 = v164;
LABEL_38:
  v113 = v140;
  swift_beginAccess(v140, v184, 0, 0);
  v114 = *v113;
  v115 = *(_QWORD *)(v112 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot);
  *(_QWORD *)(v112 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot) = *v113;
  swift_bridgeObjectRetain(v114);
  swift_bridgeObjectRelease(v115);
  swift_beginAccess(v55, v183, 0, 0);
  v116 = v55;
  v117 = v152;
  sub_10000735C(v116, v152, &qword_100644980);
  v118 = v112 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID;
  swift_beginAccess(v112 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID, v181, 33, 0);
  sub_100041F2C(v117, v118, &qword_100644980);
  swift_endAccess(v181);
  v119 = v151;
  swift_beginAccess(v151, v182, 0, 0);
  v120 = *v119;
  v121 = *(_QWORD *)(v112
                   + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems);
  *(_QWORD *)(v112
            + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems) = v120;
  swift_bridgeObjectRetain(v120);
  swift_bridgeObjectRelease(v121);
  swift_beginAccess(v112 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders, v181, 33, 0);
  swift_bridgeObjectRetain(v120);
  sub_1000F71DC(v122);
  swift_endAccess(v181);
  swift_bridgeObjectRelease(v120);
  v123 = v143;
  sub_10002B1E8(v42, v143, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v123, 0, 1, v142);
  v124 = *v113;
  v125 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v126 = swift_allocObject(v125, 16, 7);
  v127 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v128 = (uint64_t)v145;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v145, 1, 1, v127);
  v181[3] = v125;
  v181[4] = &off_100604210;
  v181[0] = v126;
  sub_100010634((uint64_t)v181, (uint64_t)&v180);
  v129 = swift_allocObject(&unk_1005F7518, 72, 7);
  *(_QWORD *)(v129 + 16) = v124;
  sub_10002E37C(&v180, v129 + 24);
  *(_QWORD *)(v129 + 64) = v112;
  swift_bridgeObjectRetain_n(v124, 2);
  swift_retain();
  swift_retain();
  sub_10047C8F8(1, v123, (uint64_t (*)(uint64_t))sub_10003E360, v129, v144, 0, v128);
  swift_release();
  sub_100027F10(v181);
  swift_bridgeObjectRelease(v124);
  sub_1000073A0(v128, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v123, &qword_100649CA0);
  swift_release();
  v130 = v112 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v112 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v133 = Strong;
    v134 = *(_QWORD *)(v130 + 8);
    ObjectType = swift_getObjectType(Strong, v132);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 104))(1, ObjectType, v134);
    swift_unknownObjectRelease(v133);
  }
  sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1001FF60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  unint64_t i;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v5 = a2 & 0xC000000000000001;
  v6 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v6 = a2;
  v26 = v6;
  v7 = a2 + 56;
  v24 = a1;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  v25 = v2;
  while (1)
  {
    v11 = REMRemindersListDataView.ReminderLite.objectID.getter(v8);
    v12 = (void *)v11;
    if (!v5)
    {
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_16;
      v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
      v14 = -1 << *(_BYTE *)(a2 + 32);
      v15 = v13 & ~v14;
      if (((*(_QWORD *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_16;
      v16 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, v12);

      if ((v17 & 1) == 0)
      {
        v18 = ~v14;
        for (i = v15 + 1; ; i = v20 + 1)
        {
          v20 = i & v18;
          if (((*(_QWORD *)(v7 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0)
            break;
          v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
          v22 = static NSObject.== infix(_:_:)(v21, v12);

          if ((v22 & 1) != 0)
            goto LABEL_11;
        }
LABEL_16:
        swift_bridgeObjectRelease(v24);

        return 1;
      }
LABEL_11:

      v2 = v25;
      v5 = a2 & 0xC000000000000001;
      goto LABEL_6;
    }
    v10 = __CocoaSet.contains(_:)(v11, v26);

    if ((v10 & 1) == 0)
      break;
LABEL_6:
    if (++v9 == v2)
    {
      swift_bridgeObjectRelease(v24);
      return 0;
    }
  }
  swift_bridgeObjectRelease(v24);
  return 1;
}

uint64_t sub_1001FF7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  Swift::Int v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  unint64_t i;
  uint64_t v45;
  id v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[24];
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[2];
  _OWORD v94[6];
  _OWORD v95[2];
  _OWORD v96[6];
  _OWORD v97[2];
  _BYTE v98[144];

  v73 = a1;
  v75 = a9;
  v74 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v76 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v80 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v17);
  v70 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v77 = (uint64_t)&v65 - v20;
  v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v21);
  v81 = (uint64_t)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a3 + 16);
  v78 = a3;
  v79 = v23;
  v84 = a5;
  if (v23)
  {
    v65 = a6;
    v66 = a7;
    v67 = a4;
    v68 = a2;
    v69 = a8;
    v24 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
    v25 = a3 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v26 = a5 & 0xC000000000000001;
    if (a5 < 0)
      v27 = a5;
    else
      v27 = a5 & 0xFFFFFFFFFFFFFF8;
    v28 = a5 + 56;
    v29 = *(_QWORD *)(v24 + 72);
    v82 = v27;
    v83 = v29;
    swift_bridgeObjectRetain(a3);
    v31 = 0;
    v32 = a5;
    v33 = a5 & 0xC000000000000001;
    v34 = v79;
    v71 = v26;
    v72 = v25;
    do
    {
      v36 = REMRemindersListDataView.ReminderLite.objectID.getter(v30);
      v37 = (void *)v36;
      if (v33)
      {
        v35 = __CocoaSet.contains(_:)(v36, v82);

        if ((v35 & 1) == 0)
        {
          swift_bridgeObjectRelease(v78);
          goto LABEL_18;
        }
      }
      else
      {
        if (!*(_QWORD *)(v32 + 16))
          goto LABEL_17;
        v38 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v32 + 40));
        v39 = -1 << *(_BYTE *)(v32 + 32);
        v40 = v38 & ~v39;
        if (((*(_QWORD *)(v28 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
          goto LABEL_17;
        v41 = *(id *)(*(_QWORD *)(v32 + 48) + 8 * v40);
        v42 = static NSObject.== infix(_:_:)(v41, v37);

        if ((v42 & 1) == 0)
        {
          v43 = ~v39;
          for (i = v40 + 1; ; i = v45 + 1)
          {
            v45 = i & v43;
            if (((*(_QWORD *)(v28 + (((i & v43) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v43)) & 1) == 0)
              break;
            v46 = *(id *)(*(_QWORD *)(v84 + 48) + 8 * v45);
            v47 = static NSObject.== infix(_:_:)(v46, v37);

            if ((v47 & 1) != 0)
              goto LABEL_12;
          }
LABEL_17:
          swift_bridgeObjectRelease(v78);

LABEL_18:
          v48 = 0;
          goto LABEL_19;
        }
LABEL_12:

        v32 = v84;
        v34 = v79;
        v33 = v71;
      }
      ++v31;
    }
    while (v31 != v34);
    swift_bridgeObjectRelease(v78);
    v48 = 1;
LABEL_19:
    a2 = v68;
    a8 = v69;
    LOBYTE(a4) = v67;
    a6 = v65;
    a7 = v66;
  }
  else
  {
    v48 = 1;
  }
  v49 = a6 + 16;
  v50 = (unint64_t *)(a7 + 16);
  if (qword_10063D4E0 != -1)
    swift_once(&qword_10063D4E0, sub_1001FDA8C);
  swift_beginAccess(v49, &v86, 0, 0);
  v52 = __chkstk_darwin(v51);
  *(&v65 - 2) = v84;
  TTRShowScheduledSectionHeaderTitleFormatter.title(for:isFirst:hasVisibleReminders:)(v96, v73, v52);
  v91 = v96[4];
  v92 = v96[5];
  v93[0] = v97[0];
  *(_OWORD *)((char *)v93 + 10) = *(_OWORD *)((char *)v97 + 10);
  v87 = v96[0];
  v88 = v96[1];
  v89 = v96[2];
  v90 = v96[3];
  v53 = v77;
  sub_10002B1E8(a2, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v94[4] = v91;
  v94[5] = v92;
  v95[0] = v93[0];
  *(_OWORD *)((char *)v95 + 10) = *(_OWORD *)((char *)v93 + 10);
  v94[0] = v87;
  v94[1] = v88;
  v94[2] = v89;
  v94[3] = v90;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v94);
  sub_10000F614((uint64_t)v94, (uint64_t)v98, &qword_100649B60);
  v54 = v81;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v53, v98, 1, v48, 0, 0, 0, 0);
  v55 = v54;
  v56 = v75;
  sub_10002B1E8(v55, v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v57 = v74;
  v58 = v78;
  *(_QWORD *)(v56 + *(int *)(v74 + 20)) = v78;
  *(_BYTE *)(v56 + *(int *)(v57 + 24)) = 0;
  sub_10002B1E8(v56, v80, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  swift_beginAccess(v50, v85, 33, 0);
  v59 = *v50;
  swift_bridgeObjectRetain(v58);
  sub_10003E134((uint64_t)v96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v59);
  *v50 = v59;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v59 = sub_100455348(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
    *v50 = v59;
  }
  v62 = *(_QWORD *)(v59 + 16);
  v61 = *(_QWORD *)(v59 + 24);
  if (v62 >= v61 >> 1)
  {
    v59 = sub_100455348(v61 > 1, v62 + 1, 1, v59);
    *v50 = v59;
  }
  *(_QWORD *)(v59 + 16) = v62 + 1;
  sub_10001F580(v80, v59+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v62, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  swift_endAccess(v85);
  if (v48 & 1 | ((a4 & 1) == 0))
  {
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    return sub_10003E230((uint64_t)v96);
  }
  else
  {
    v64 = v70;
    sub_10002B1E8(a2, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    swift_beginAccess(a8 + 16, v85, 33, 0);
    sub_1004809A0(v53, v64);
    swift_endAccess(v85);
    sub_10003E230((uint64_t)v96);
    sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  }
}

uint64_t sub_1001FFDE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t, __n128);
  __n128 v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];

  v43 = a8;
  v44 = (char *)a1;
  v46 = a2;
  v47 = a6;
  v14 = sub_10002A750(&qword_100644980);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0, v15);
  v18 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  __chkstk_darwin(v21);
  v45 = (uint64_t)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a3 + 16);
  v42 = a3;
  v25 = v18;
  if (v24)
    v26 = (_QWORD *)REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter(v22);
  else
    v26 = _swiftEmptyArrayStorage;
  v27 = v45;
  v28 = a7;
  v29 = a7;
  v30 = v43;
  sub_1001FF7F4((uint64_t)v44, v46, (uint64_t)v26, a4 & 1, a5, v47, v28, v43, v45);
  swift_bridgeObjectRelease(v26);
  if (v24 >= 2)
  {
    v44 = v17;
    v47 = a9;
    v31 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    LODWORD(v46) = a4;
    v32 = a5;
    v33 = *(_QWORD *)(v25 + 72);
    v34 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v25 + 16);
    v35 = swift_bridgeObjectRetain(v42);
    v36 = v24 - 1;
    v38 = v37 + v33 + v31;
    v39 = v41;
    do
    {
      v34(v20, v38, v39, v35);
      sub_10020284C((uint64_t)v20, v46 & 1, v32, v29, v30, v47);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v39);
      v38 += v33;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease(v42);
    v17 = v44;
    v27 = v45;
  }
  if ((*(_BYTE *)(v27 + *(int *)(type metadata accessor for TTRRemindersListViewModel.SectionHeader(0) + 28)) & 1) == 0)
  {
    swift_beginAccess(a10 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders, v48, 33, 0);
    sub_1000F4D80(v27, (uint64_t)v17);
    sub_1000073A0((uint64_t)v17, &qword_100644980);
    swift_endAccess(v48);
  }
  return sub_10001F544(v27, type metadata accessor for TTRRemindersListTreeViewModel.Section);
}

void sub_100200070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MoveSubject(0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_100200138 + 4 * byte_100529066[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100200138()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

uint64_t sub_1002001E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v6;
  id v8;
  uint64_t v9;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  v6 = 0;
  if ((EnumCaseMultiPayload - 2) >= 8)
  {
    if ((EnumCaseMultiPayload - 10) < 2)
      return v6;
    if (EnumCaseMultiPayload)
    {
      v6 = REMSmartListTypeScheduled;
      v8 = REMSmartListTypeScheduled;
    }
  }
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v6;
}

uint64_t sub_1002002C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a1;
  v48 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v43 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v46 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - v7;
  v47 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v47);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v43 - v12;
  v14 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10002A750(&qword_100647B00);
  v17 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v44 = (uint64_t)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RemindersInsertionRequest(0);
  v20 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v19 + 24))
                  + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  sub_10002B1E8(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v45 = v2;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v22 = v48;
  v21(v8, 0, 1, v48);
  v23 = *(_QWORD *)(v1 + *(int *)(v19 + 20));
  v21(v10, 1, 1, v22);
  swift_retain();
  sub_100041F2C((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&v10[*(int *)(v47 + 36)] = v23;
  sub_10000F614((uint64_t)v10, (uint64_t)v13, &qword_100654860);
  v24 = *(_QWORD *)(v20 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v20 + 24), v25);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 24))(v13, 1, ObjectType, v24);
  v28 = v27;
  if (*(_QWORD *)(v27 + 16))
  {
    sub_10000735C(v27 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v16, &qword_100647B00);
    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  v30 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v29, 1, v49);
  swift_release();
  swift_bridgeObjectRelease(v28);
  sub_1000073A0((uint64_t)v13, &qword_100654860);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v30) == 1)
  {
    v31 = &qword_100647AF8;
    v32 = (uint64_t)v16;
LABEL_8:
    sub_1000073A0(v32, v31);
    v35 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v50, 1, 1, v35);
  }
  v33 = v44;
  sub_10000F614((uint64_t)v16, v44, &qword_100647B00);
  v34 = v46;
  sub_10000735C(v33, v46, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v34, 1, v22) == 1)
  {
    sub_1000073A0(v33, &qword_100647B00);
    v31 = (uint64_t *)&unk_100640EB0;
    v32 = v34;
    goto LABEL_8;
  }
  v37 = v43;
  sub_10001F580(v34, v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v38 = sub_10002A750(&qword_100641750);
  v39 = *(int *)(v38 + 48);
  v40 = v37;
  v41 = v50;
  sub_10001F580(v40, v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v42 = *(_QWORD *)(v33 + *(int *)(v30 + 36));
  sub_1000073A0(v33, &qword_100647B00);
  *(_QWORD *)(v41 + v39) = v42;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v41, 0, 1, v38);
}

void sub_1002006F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  char *v15;
  _QWORD v16[6];

  v2 = v1;
  v16[1] = a1;
  v3 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for DateComponents(0);
  v5 = *(_QWORD *)(v4 - 8);
  v16[2] = v4;
  v16[3] = v5;
  __chkstk_darwin(v4);
  v16[0] = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v9 = sub_10002A750(&qword_10064B6B8);
  __chkstk_darwin(v9);
  v10 = sub_10002A750(&qword_10064D588);
  __chkstk_darwin(v10);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[4] = v2;
  sub_10002B1E8(v2, (uint64_t)v13, v14);
  v15 = (char *)sub_1002008CC + 4 * byte_10052906A[swift_getEnumCaseMultiPayload(v13, v11)];
  __asm { BR              X10 }
}

uint64_t sub_1002008CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v5 = type metadata accessor for Calendar(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
  v7 = type metadata accessor for RemindersInsertionPlan(0);
  v0[3] = v7;
  v0[4] = &off_1005F75F0;
  v8 = sub_100028D70(v0);
  v20 = 1;
  v19 = 1;
  v18 = 1;
  v17 = 1;
  v16 = 1;
  v15 = 1;
  v14 = 1;
  v13 = 1;
  v12 = 1;
  v11 = 1;
  v10 = 1;
  ((void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char, _QWORD, char))DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:))(v2, v3, 0, 1, 0, 1, 0, 1, 0, v10, 0, v11, 0, v12, 0, v13, 0, v14, 0,
    v15,
    0,
    v16,
    0,
    v17,
    0,
    v18,
    0,
    v19,
    0,
    v20);
  result = sub_10002B1E8(*(_QWORD *)(v4 - 96), (uint64_t)v8 + *(int *)(v7 + 28), type metadata accessor for RemindersInsertionRequest);
  v8[1] = _swiftEmptyArrayStorage;
  *(_BYTE *)v8 = 1;
  return result;
}

void sub_100200A20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;

  sub_10001F580(v1, v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  type metadata accessor for RemindersInsertionRequest(0);
  sub_1001FDEF8(v4);
  v9 = *(_QWORD *)(v7 - 112);
  v8 = *(_QWORD *)(v7 - 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v2, 1, v9) == 1)
  {
    sub_1000073A0(v2, &qword_100641728);
    v10 = type metadata accessor for Calendar(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
    v11 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
    v12 = *(_QWORD *)(v7 - 128);
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v3, v6, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1);
    sub_10001F544(v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v13 = v8;
    v14 = type metadata accessor for RemindersInsertionPlan(0);
    v0[3] = v14;
    v0[4] = &off_1005F75F0;
    v15 = (char *)sub_100028D70(v0);
    sub_10002B1E8(*(_QWORD *)(v7 - 96), (uint64_t)&v15[*(int *)(v14 + 28)], type metadata accessor for RemindersInsertionRequest);
    *((_QWORD *)v15 + 1) = _swiftEmptyArrayStorage;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(&v15[*(int *)(v14 + 24)], v12, v9);
    *v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v2, v9);
    v16 = *(_QWORD *)(v7 - 120);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_QWORD *)(v16 + 32);
      swift_bridgeObjectRetain(*(_QWORD *)(v7 - 120));
      v19 = v17 - 1;
      do
      {
        v20 = v19;
        v21 = sub_100200CD8(v18, v5);
        if (v21)
          break;
        v19 = v20 - 1;
        v18 += 5;
      }
      while (v20);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v21 = 0;
    }
    sub_10001F544(v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v22 = type metadata accessor for RemindersInsertionPlan(0);
    v0[3] = v22;
    v0[4] = &off_1005F75F0;
    v23 = (char *)sub_100028D70(v0);
    v24 = *(_QWORD *)(v7 - 104);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(&v23[*(int *)(v22 + 24)], v5, v9);
    sub_10002B1E8(*(_QWORD *)(v7 - 96), (uint64_t)&v23[*(int *)(v22 + 28)], type metadata accessor for RemindersInsertionRequest);
    *((_QWORD *)v23 + 1) = v16;
    *v23 = v21;
    v25 = *(void (**)(uint64_t, uint64_t, __n128))(v24 + 8);
    v26 = swift_bridgeObjectRetain(v16);
    v25(v5, v9, v26);
  }
  JUMPOUT(0x100200A00);
}

BOOL sub_100200CD8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  _BOOL4 v38;
  int v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a2;
  v3 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - v7;
  v9 = type metadata accessor for DateComponents(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v60 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v61 = (char *)&v58 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - v18;
  __chkstk_darwin(v20);
  v62 = (char *)&v58 - v21;
  v22 = a1[3];
  v23 = a1[4];
  sub_10001413C(a1, v22);
  v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_7:
    sub_1000073A0((uint64_t)v8, &qword_100641728);
    return 0;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "dueDateComponents");

  if (v26)
  {
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, v27, 1, v9);
  sub_10000F614((uint64_t)v5, (uint64_t)v8, &qword_100641728);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_7;
  v29 = v62;
  v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v62, v8, v9);
  v31 = v63;
  v32 = DateComponents.year.getter(v30);
  v34 = v33;
  v35 = DateComponents.year.getter(v32);
  v38 = (v36 & 1) == 0 && v32 == v35;
  if ((v34 & 1) != 0)
    v39 = v36 & 1;
  else
    v39 = v38;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v40(v19, v31, v9);
  v41 = ((uint64_t (*)(char *, char *, uint64_t))v40)(v16, v29, v9);
  if (!v39)
  {
    v47 = *(void (**)(char *, uint64_t))(v10 + 8);
    v47(v16, v9);
    v47(v19, v9);
    v50 = v60;
    v49 = v61;
LABEL_25:
    v40(v49, v63, v9);
    v40(v50, (uint64_t)v29, v9);
    goto LABEL_26;
  }
  v59 = DateComponents.month.getter(v41);
  v43 = v42;
  v44 = DateComponents.month.getter(v59);
  v46 = v45;
  v47 = *(void (**)(char *, uint64_t))(v10 + 8);
  v47(v16, v9);
  v47(v19, v9);
  if ((v43 & 1) != 0)
  {
    if ((v46 & 1) != 0)
    {
      v49 = v61;
      v40(v61, v63, v9);
      v50 = v60;
      v29 = v62;
      v51 = ((uint64_t (*)(char *, char *, uint64_t))v40)(v60, v62, v9);
      goto LABEL_28;
    }
    goto LABEL_24;
  }
  v48 = v59;
  if ((v46 & 1) != 0)
  {
LABEL_24:
    v50 = v60;
    v49 = v61;
    v29 = v62;
    goto LABEL_25;
  }
  v49 = v61;
  v40(v61, v63, v9);
  v50 = v60;
  v29 = v62;
  v51 = ((uint64_t (*)(char *, char *, uint64_t))v40)(v60, v62, v9);
  if (v48 != v44)
  {
LABEL_26:
    v47(v50, v9);
    v47(v49, v9);
    v47(v29, v9);
    return 0;
  }
LABEL_28:
  v64 = DateComponents.day.getter(v51);
  v53 = v52;
  v54 = DateComponents.day.getter(v64);
  v56 = v55;
  v47(v50, v9);
  v47(v49, v9);
  v47(v29, v9);
  if ((v53 & 1) != 0)
    return v56 & 1;
  return (v56 & 1) == 0 && v64 == v54;
}

_QWORD *sub_10020112C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _QWORD v11[5];
  __int128 v12;
  _BYTE v13[25];
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v14 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v1);
    sub_1003D852C(0, v2, 0);
    v4 = v1 + 32;
    v3 = _swiftEmptyArrayStorage;
    do
    {
      sub_100010634(v4, (uint64_t)v11);
      sub_100010634((uint64_t)v11, (uint64_t)&v12);
      v13[24] = 1;
      sub_100027F10(v11);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_1003D852C(0, v3[2] + 1, 1);
        v3 = v14;
      }
      v6 = v3[2];
      v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_1003D852C(v5 > 1, v6 + 1, 1);
        v3 = v14;
      }
      v3[2] = v6 + 1;
      v7 = &v3[6 * v6];
      v8 = v12;
      v9 = *(_OWORD *)v13;
      *(_OWORD *)((char *)v7 + 57) = *(_OWORD *)&v13[9];
      v7[2] = v8;
      v7[3] = v9;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v1);
  }
  return v3;
}

uint64_t sub_10020125C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  uint64_t v38;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - v8;
  v10 = *(_QWORD *)(v0 + 8);
  v38 = v10;
  swift_bridgeObjectRetain(v10);
  v11 = sub_10002A750(&qword_100647B10);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = sub_100023FEC(&qword_100647B18, &qword_100647B10, (uint64_t)&protocol conformance descriptor for [A]);
  v14 = Sequence.completeCompactMap<A>(_:)(sub_100201748, 0, v11, v12, v13);
  swift_bridgeObjectRelease(v10);
  if (!v14)
    return 0;
  v15 = v0 + *(int *)(type metadata accessor for RemindersInsertionPlan(0) + 28);
  v16 = type metadata accessor for RemindersInsertionRequest(0);
  v17 = *(_QWORD *)(v15 + *(int *)(v16 + 24));
  v37[1] = 0;
  v18 = v14;
  v19 = *(_QWORD *)(v17 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  sub_10002B1E8(v15, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v20 = v9;
  v21 = v4;
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v22(v3, 0, 1, v12);
  v23 = *(_QWORD *)(v15 + *(int *)(v16 + 20));
  v22(v6, 1, 1, v12);
  v24 = v21;
  v25 = (uint64_t)v20;
  v26 = v19;
  v27 = v18;
  swift_retain();
  sub_100041F2C((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&v6[*(int *)(v24 + 36)] = v23;
  sub_10000F614((uint64_t)v6, v25, &qword_100654860);
  v38 = v18;
  v28 = sub_10002A750(&qword_100649DF0);
  v29 = sub_10002A750(&qword_1006445E0);
  v30 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  v31 = Sequence.completeCompactMap<A>(_:)(sub_1000B5FC4, v26, v28, v29, v30);
  if (v31)
  {
    v32 = v31;
    sub_10002A750(&qword_1006445E8);
    v33 = sub_100023FEC(&qword_1006445F0, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v34 = sub_100023FEC(&qword_1006445F8, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v35 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)(v32, v25, v24, v33, v34);
    swift_bridgeObjectRelease(v27);
    swift_release();
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    swift_release();
    v35 = 0;
  }
  sub_1000073A0(v25, &qword_100654860);
  return v35;
}

uint64_t sub_1002015A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v23 = (unint64_t)_swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + 32;
    swift_bridgeObjectRetain(v4);
    do
    {
      sub_100010634(v6, (uint64_t)v20);
      v8 = v21;
      v9 = v22;
      sub_10001413C(v20, v21);
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      v11 = sub_100027F10(v20);
      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v7);
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    v14 = (_QWORD *)v23;
  }
  else
  {
    swift_bridgeObjectRetain(v4);
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v4);
  v15 = (char *)a1 + *(int *)(sub_10002A750(&qword_10064A840) + 48);
  *a1 = v14;
  v16 = v2 + *(int *)(type metadata accessor for RemindersInsertionPlan(0) + 24);
  v17 = type metadata accessor for DateComponents(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  swift_storeEnumTagMultiPayload(a1, v18, 8);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
}

uint64_t sub_100201748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  _BYTE v18[40];

  v4 = sub_10002A750(&qword_10064D628);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for MoveSubject(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100010634(a1, (uint64_t)v18);
  v11 = sub_10002A750(&qword_100647B38);
  v12 = swift_dynamicCast(v6, v18, v11, v7, 6);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if ((v12 & 1) != 0)
  {
    v13(v6, 0, 1, v7);
    sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for MoveSubject);
    sub_10002B1E8((uint64_t)v10, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v10, type metadata accessor for MoveSubject);
    v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_1000073A0((uint64_t)v6, &qword_10064D628);
    v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t TTRSmartListFilterEditorViewModel.filterOperationOptions.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_100201900(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[24];

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v54 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100647AE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100647AE8);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v16);
  v56 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  sub_10001413C(a1, v19);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
  v21 = (void *)v20(v19, v18);

  if (!v21)
    return 0;
  sub_100201EB0((uint64_t)v12);
  v22 = sub_10002A750(&qword_100647AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_100647AE0);
    return 0;
  }
  v53 = (uint64_t)&v12[*(int *)(v22 + 48)];
  v23 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10001F580((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  sub_10001F580(v53, v23, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v24 = (uint64_t)&v15[*(int *)(v13 + 48)];
  v25 = v56;
  sub_10001F580((uint64_t)v15, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  sub_10001F544(v24, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v26 = v20(v19, v18);
  if (!v26)
  {
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 0;
  }
  v27 = (void *)v26;
  v53 = *(int *)(type metadata accessor for AttributeMatchingRequest(0) + 24);
  v28 = *(_QWORD **)(*(_QWORD *)(v55 + v53) + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_retain();
  v29 = objc_msgSend(v27, "objectID");
  swift_beginAccess(v28 + 12, v59, 32, 0);
  v30 = v28[12];
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_12;
  v31 = v29;
  v32 = sub_1002AA364((uint64_t)v31);
  if ((v33 & 1) == 0)
  {

LABEL_12:
    swift_endAccess(v59);
    swift_release();
    v39 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v32);
  swift_endAccess(v59);
  swift_bridgeObjectRetain(v34);

  swift_retain();
  v35 = v31;
  v36 = sub_10003D6CC(v34, v28, (uint64_t)v35);
  v25 = v56;
  v37 = (_QWORD *)v36;
  swift_bridgeObjectRelease(v34);
  v38 = v28;
  v39 = v37;
  swift_release_n(v38, 2);

LABEL_13:
  v42 = v58;

  v43 = v39[2];
  if (v43)
  {
    v51 = v27;
    v44 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) - 8);
    v45 = v39;
    v46 = (uint64_t)v39 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v47 = *(_QWORD *)(v44 + 72);
    v50 = v45;
    swift_bridgeObjectRetain(v45);
    v52 = v4;
    do
    {
      sub_10002B1E8(v46, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      swift_storeEnumTagMultiPayload(v4, v42, 2);
      swift_retain();
      swift_retain();
      TTRMutableTreeStorage.parent(of:)(v4);
      swift_release();
      v42 = v58;
      swift_release();
      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v7, 1, v42) == 1)
      {
        sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
      }
      else if (swift_getEnumCaseMultiPayload(v7, v42) == 1)
      {
        v48 = v54;
        sub_10001F580((uint64_t)v7, v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v49 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v48, v56);
        v4 = v52;
        sub_10001F544(v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if ((v49 & 1) != 0)
        {

          v39 = v50;
          swift_bridgeObjectRelease(v50);
          v40 = 0;
          goto LABEL_24;
        }
      }
      else
      {
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      v46 += v47;
      --v43;
    }
    while (v43);

    v39 = v50;
    swift_bridgeObjectRelease(v50);
    v40 = 1;
LABEL_24:
    v25 = v56;
  }
  else
  {

    v40 = 1;
  }
  sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_bridgeObjectRelease(v39);
  return v40;
}

uint64_t sub_100201EB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v2 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for DateComponents(0);
  v5 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v34 - v20;
  sub_100202400((uint64_t)v12);
  v22 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) != 1)
  {
    sub_10001F580((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v15, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v16);
    if ((EnumCaseMultiPayload - 2) >= 8)
    {
      if ((EnumCaseMultiPayload - 10) < 2)
      {
        v18 = v21;
        goto LABEL_6;
      }
      if (EnumCaseMultiPayload)
      {
        sub_10001F580((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        type metadata accessor for AttributeMatchingRequest(0);
        sub_1001FDEF8((uint64_t)v9);
        sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v28 = v35;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v35) != 1)
        {
          v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
          v30 = v34;
          v29(v34, v4, v28);
          v31 = sub_10002A750(&qword_100647AF0);
          v32 = a1 + *(int *)(v31 + 48);
          sub_10002B1E8((uint64_t)v9, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v29((char *)v32, v30, v28);
          v33 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
          swift_storeEnumTagMultiPayload(v32, v33, 0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
        }
        sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v23 = &qword_100641728;
        v24 = (uint64_t)v4;
        goto LABEL_3;
      }
    }
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_6:
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_7;
  }
  v23 = &qword_100641740;
  v24 = (uint64_t)v12;
LABEL_3:
  sub_1000073A0(v24, v23);
LABEL_7:
  v26 = sub_10002A750(&qword_100647AF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);
}

uint64_t sub_100202268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_10002A750(&qword_100647AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100647AE8);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100201EB0((uint64_t)v4);
  v8 = sub_10002A750(&qword_100647AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100647AE0);
    v9 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    v11 = (uint64_t)&v4[*(int *)(v8 + 48)];
    v12 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F580(v11, v12, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    sub_10001F580((uint64_t)&v7[*(int *)(v5 + 48)], a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v13 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
}

uint64_t sub_100202400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v46 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v42 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - v11;
  v13 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10002A750(&qword_100647B00);
  v16 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AttributeMatchingRequest(0);
  v19 = *(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v18 + 24))
                  + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  v20 = *(_QWORD *)(v1 + *(int *)(v18 + 20));
  v44 = v5;
  v45 = v4;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v22 = 1;
  v21(v9, 1, 1, v4);
  swift_retain();
  sub_1000B5F7C(v1, (uint64_t)v9);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = v20;
  sub_10000F614((uint64_t)v9, (uint64_t)v12, &qword_100654860);
  v23 = *(_QWORD *)(v19 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v19 + 24), v24);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 24))(v12, 1, ObjectType, v23);
  v27 = v26;
  if (*(_QWORD *)(v26 + 16))
  {
    sub_10000735C(v26 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v15, &qword_100647B00);
    v22 = 0;
  }
  v28 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v15, v22, 1, v47);
  swift_release();
  swift_bridgeObjectRelease(v27);
  sub_1000073A0((uint64_t)v12, &qword_100654860);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v28) == 1)
  {
    v29 = &qword_100647AF8;
    v30 = (uint64_t)v15;
LABEL_7:
    sub_1000073A0(v30, v29);
    v33 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v48, 1, 1, v33);
  }
  v31 = v43;
  sub_10000F614((uint64_t)v15, v43, &qword_100647B00);
  v32 = v46;
  sub_10000735C(v31, v46, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v32, 1, v45) == 1)
  {
    sub_1000073A0(v31, &qword_100647B00);
    v29 = (uint64_t *)&unk_100640EB0;
    v30 = v32;
    goto LABEL_7;
  }
  v35 = v42;
  sub_10001F580(v32, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v36 = sub_10002A750(&qword_100641750);
  v37 = *(int *)(v36 + 48);
  v38 = v35;
  v39 = v48;
  sub_10001F580(v38, v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v40 = *(_QWORD *)(v31 + *(int *)(v28 + 36));
  sub_1000073A0(v31, &qword_100647B00);
  *(_QWORD *)(v39 + v37) = v40;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v39, 0, 1, v36);
}

uint64_t sub_1002027D0()
{
  uint64_t v0;
  id v1;

  v0 = REMSmartListTypeScheduled;
  v1 = REMSmartListTypeScheduled;
  return v0;
}

uint64_t sub_10020280C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100202830()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100202844(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FF60C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10020284C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  void *v64;
  Swift::Int v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  char v69;
  uint64_t v70;
  id v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  _BYTE v111[24];
  _OWORD v112[6];
  _OWORD v113[2];
  _BYTE v114[128];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[2];
  _OWORD v122[6];
  _OWORD v123[3];

  v98 = a6;
  v93 = a5;
  v110 = a3;
  LODWORD(v102) = a2;
  v8 = sub_10002A750(&qword_100644980);
  v9 = __chkstk_darwin(v8);
  v96 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0, v9);
  v104 = *(_QWORD *)(v11 - 8);
  v105 = v11;
  __chkstk_darwin(v11);
  v106 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v101 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v100 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v88 - v15;
  v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v17);
  v109 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v95 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v91 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v88 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v88 - v24;
  v26 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = (unint64_t *)(a4 + 16);
  v94 = swift_projectBox(v98);
  v108 = v29;
  v30 = REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter();
  if (qword_10063D4E0 != -1)
    v30 = swift_once(&qword_10063D4E0, sub_1001FDA8C);
  v31 = __chkstk_darwin(v30);
  *(&v88 - 2) = v110;
  TTRShowScheduledSectionHeaderTitleFormatter.title(for:hasVisibleReminders:)(v112, a1, sub_1002181F4, v31);
  v119 = v112[4];
  v120 = v112[5];
  v121[0] = v113[0];
  *(_OWORD *)((char *)v121 + 10) = *(_OWORD *)((char *)v113 + 10);
  v115 = v112[0];
  v116 = v112[1];
  v117 = v112[2];
  v118 = v112[3];
  v97 = v27;
  v98 = v26;
  v32 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v33 = v108;
  v32(v25, v108, v26);
  swift_storeEnumTagMultiPayload(v25, v107, 4);
  sub_10002B1E8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v122[4] = v119;
  v122[5] = v120;
  v123[0] = v121[0];
  *(_OWORD *)((char *)v123 + 10) = *(_OWORD *)((char *)v121 + 10);
  v122[0] = v115;
  v122[1] = v116;
  v122[2] = v117;
  v122[3] = v118;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v122);
  sub_10000F614((uint64_t)v122, (uint64_t)v114, &qword_100649B60);
  v34 = (uint64_t)v109;
  v92 = v22;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v22, v114, 1, 0, 0, 0, 0, 0);
  sub_10002B1E8(v34, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v35 = sub_10003E134((uint64_t)v112);
  v36 = a1;
  v37 = REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter(v35);
  v38 = v99;
  v39 = (uint64_t)v100;
  *(_QWORD *)&v16[*(int *)(v99 + 20)] = v37;
  v16[*(int *)(v38 + 24)] = 0;
  sub_10002B1E8((uint64_t)v16, v39, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  v40 = v103;
  swift_beginAccess(v103, v111, 33, 0);
  v41 = *v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
  *v40 = v41;
  v43 = (uint64_t)v16;
  v44 = (uint64_t)v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v41 = sub_100455348(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
    *v40 = v41;
  }
  v46 = *(_QWORD *)(v41 + 16);
  v45 = *(_QWORD *)(v41 + 24);
  v47 = v110;
  if (v46 >= v45 >> 1)
  {
    v41 = sub_100455348(v45 > 1, v46 + 1, 1, v41);
    *v103 = v41;
  }
  *(_QWORD *)(v41 + 16) = v46 + 1;
  sub_10001F580(v39, v41+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(_QWORD *)(v101 + 72) * v46, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  swift_endAccess(v111);
  v49 = v104;
  v48 = v105;
  v50 = v106;
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 16))(v106, v36, v105);
  if ((v102 & 1) == 0)
  {
    v73 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v50, v48);
    v75 = v97;
    v74 = v98;
    goto LABEL_31;
  }
  v52 = REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter(v51);
  v53 = v52;
  v100 = *(char **)(v52 + 16);
  if (!v100)
  {
    v76 = swift_bridgeObjectRelease(v52);
    v77 = (uint64_t)v109;
LABEL_26:
    v73 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v106, v48, v76);
    v75 = v97;
    v74 = v98;
    goto LABEL_32;
  }
  v89 = v44;
  v90 = v43;
  v88 = v93 + 16;
  v54 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
  v55 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v93 = v53;
  v56 = v53 + v55;
  v57 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v58 = 0;
  v59 = v47 & 0xFFFFFFFFFFFFFF8;
  if (v47 < 0)
    v59 = v47;
  v101 = v59;
  v60 = v47 + 56;
  v102 = *(_QWORD *)(v54 + 72);
  v103 = (unint64_t *)(v47 & 0xC000000000000001);
  v61 = v100;
  v99 = v56;
  while (1)
  {
    v63 = REMRemindersListDataView.ReminderLite.objectID.getter(v57);
    v64 = (void *)v63;
    if (!v103)
      break;
    v62 = __CocoaSet.contains(_:)(v63, v101);

    if ((v62 & 1) == 0)
    {
      swift_bridgeObjectRelease(v93);
      goto LABEL_29;
    }
LABEL_13:
    if ((char *)++v58 == v61)
    {
      v76 = swift_bridgeObjectRelease(v93);
      v44 = v89;
      v43 = v90;
      v77 = (uint64_t)v109;
      v49 = v104;
      v48 = v105;
      goto LABEL_26;
    }
  }
  if (!*(_QWORD *)(v47 + 16)
    || (v65 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v47 + 40)),
        v66 = -1 << *(_BYTE *)(v47 + 32),
        v67 = v65 & ~v66,
        ((*(_QWORD *)(v60 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0))
  {
    swift_bridgeObjectRelease(v93);

LABEL_29:
    v44 = v89;
    v43 = v90;
    v79 = v104;
    v78 = v105;
    v80 = v106;
    v75 = v97;
    v74 = v98;
    goto LABEL_30;
  }
  v68 = *(id *)(*(_QWORD *)(v47 + 48) + 8 * v67);
  v69 = static NSObject.== infix(_:_:)(v68, v64);

  if ((v69 & 1) != 0)
  {
LABEL_21:

    v33 = v108;
    v61 = v100;
    goto LABEL_13;
  }
  v70 = ~v66;
  while (1)
  {
    v67 = (v67 + 1) & v70;
    if (((*(_QWORD *)(v60 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
      break;
    v71 = *(id *)(*(_QWORD *)(v47 + 48) + 8 * v67);
    v72 = static NSObject.== infix(_:_:)(v71, v64);

    if ((v72 & 1) != 0)
      goto LABEL_21;
  }
  swift_bridgeObjectRelease(v93);

  v44 = v89;
  v43 = v90;
  v79 = v104;
  v78 = v105;
  v80 = v106;
  v75 = v97;
  v74 = v98;
  v33 = v108;
LABEL_30:
  v81 = (uint64_t)v91;
  v82 = (uint64_t)v92;
  v83 = v88;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v78);
  sub_10002B1E8(v44, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_beginAccess(v83, v111, 33, 0);
  sub_1004809A0(v82, v81);
  swift_endAccess(v111);
  v73 = sub_10001F544(v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_31:
  v77 = (uint64_t)v109;
LABEL_32:
  v84 = Date.rem_isToday.getter(v73);
  sub_10003E230((uint64_t)v112);
  sub_10001F544(v43, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v74);
  if ((v84 & 1) == 0)
    return sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v85 = v96;
  sub_10001F580(v44, v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v85, 0, 1, v107);
  v86 = v94;
  swift_beginAccess(v94, v111, 1, 0);
  return sub_100041F2C(v85, v86, &qword_100644980);
}

uint64_t type metadata accessor for AttributeMatchingRequest(uint64_t a1)
{
  return sub_100007328(a1, qword_10064D548, (uint64_t)&nominal type descriptor for AttributeMatchingRequest);
}

uint64_t type metadata accessor for RemindersInsertionRequest(uint64_t a1)
{
  return sub_100007328(a1, qword_10064D4B0, (uint64_t)&nominal type descriptor for RemindersInsertionRequest);
}

uint64_t type metadata accessor for MoveSubject(uint64_t a1)
{
  return sub_100007328(a1, qword_10064D418, (uint64_t)&nominal type descriptor for MoveSubject);
}

uint64_t sub_1002030A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10000735C(v3, a1, &qword_100644980);
}

char *sub_1002030FC(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v190;
  void *v191;
  uint64_t v192;
  void *v193;
  char *v194;
  uint64_t v195;
  char v196;
  unsigned __int8 v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v7;
        v201 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *(_QWORD *)a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *a2;
            *(_QWORD *)a1 = *a2;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *a2;
            *(_QWORD *)a1 = *a2;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = &a1[v105];
        v107 = (char *)a2 + v105;
        v108 = *(uint64_t *)((char *)a2 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v195 = *((_QWORD *)v107 + 7);
          v190 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v195, v190);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v195;
          v106[64] = v190;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v196 = v114 & 1;
            v120 = *((_QWORD *)v107 + 10);
            v191 = (void *)*((_QWORD *)v107 + 9);
            v121 = *((_QWORD *)v107 + 11);
            v122 = *((_QWORD *)v107 + 12);
            v123 = *((_QWORD *)v107 + 13);
            v124 = *((_QWORD *)v107 + 14);
            sub_10002B764(v191, v120, v121, v122, v123, v124, v114 & 1);
            *((_QWORD *)v106 + 9) = v191;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v121;
            *((_QWORD *)v106 + 12) = v122;
            *((_QWORD *)v106 + 13) = v123;
            *((_QWORD *)v106 + 14) = v124;
            v106[120] = v196;
          }
          v119 = v199;
          v6 = v201;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        a1[v104[6]] = *((_BYTE *)a2 + v104[6]);
        a1[v104[7]] = *((_BYTE *)a2 + v104[7]);
        a1[v104[8]] = *((_BYTE *)a2 + v104[8]);
        a1[v104[9]] = *((_BYTE *)a2 + v104[9]);
        a1[v104[10]] = *((_BYTE *)a2 + v104[10]);
        v125 = v104[11];
        v126 = *(char **)((char *)a2 + v125);
        *(_QWORD *)&a1[v125] = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v200 = v7;
        v202 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *(_QWORD *)a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *a2;
            *(_QWORD *)a1 = *a2;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *a2;
            *(_QWORD *)a1 = *a2;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = &a1[v138];
        v140 = (char *)a2 + v138;
        v141 = *(uint64_t *)((char *)a2 + v138 + 8);
        if (v141)
        {
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v146 = *((_QWORD *)v140 + 6);
          v192 = *((_QWORD *)v140 + 7);
          v197 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v146, v192, v197);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v146;
          *((_QWORD *)v139 + 7) = v192;
          v139[64] = v197;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v147 = v140[120];
          if (v147 == 255)
          {
            v148 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v148;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v198 = v147 & 1;
            v153 = *((_QWORD *)v140 + 10);
            v193 = (void *)*((_QWORD *)v140 + 9);
            v154 = *((_QWORD *)v140 + 11);
            v155 = *((_QWORD *)v140 + 12);
            v156 = *((_QWORD *)v140 + 13);
            v157 = *((_QWORD *)v140 + 14);
            sub_10002B764(v193, v153, v154, v155, v156, v157, v147 & 1);
            *((_QWORD *)v139 + 9) = v193;
            *((_QWORD *)v139 + 10) = v153;
            *((_QWORD *)v139 + 11) = v154;
            *((_QWORD *)v139 + 12) = v155;
            *((_QWORD *)v139 + 13) = v156;
            *((_QWORD *)v139 + 14) = v157;
            v139[120] = v198;
          }
          v152 = v200;
          v6 = v202;
          v139[121] = v140[121];
        }
        else
        {
          v149 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v149;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v150 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v150;
          v151 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v151;
          v152 = v7;
        }
        a1[v137[6]] = *((_BYTE *)a2 + v137[6]);
        a1[v137[7]] = *((_BYTE *)a2 + v137[7]);
        a1[v137[8]] = *((_BYTE *)a2 + v137[8]);
        a1[v137[9]] = *((_BYTE *)a2 + v137[9]);
        a1[v137[10]] = *((_BYTE *)a2 + v137[10]);
        v158 = v137[11];
        v159 = *(char **)((char *)a2 + v158);
        *(_QWORD *)&a1[v158] = v159;
        v160 = v159;
        v50 = a1;
        v51 = v152;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)&a1[v22];
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v23, v24, v161);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v23, v24, v162);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v24;
              *v23 = *v24;
              v167 = v166;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *a2;
        *(_QWORD *)a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)&a1[v31];
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v32, v33, v170);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v32, v33, v171);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v32, v33, v187);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v33;
              *v32 = *v33;
              v175 = v174;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *a2;
        *(_QWORD *)a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)&a1[v40];
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v41, v42, v178);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v41, v42, v179);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v42;
              *v41 = *v42;
              v184 = v183;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        *((_QWORD *)a1 + 2) = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *a2;
        *(_QWORD *)a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v194 = &a1[v81];
          v82 = (char *)a2 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v194, v82, v83, v86);
          v7 = v84;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = &a1[v87];
        v89 = (char **)((char *)a2 + v87);
        v90 = v89[1];
        if (v90)
        {
          *(_QWORD *)v88 = *v89;
          *((_QWORD *)v88 + 1) = v90;
          v91 = (void *)v89[2];
          *((_QWORD *)v88 + 2) = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          *((_QWORD *)v88 + 2) = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          a1[*(int *)(v62 + 20)] = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&a1[*(int *)(v94 + 20)] = *(char **)((char *)a2 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = &a1[v56];
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v188 = *(int *)(v6 + 24);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(char **)((char *)a2 + *(int *)(v6 + 20));
    a1[v188] = *((_BYTE *)a2 + v188);
  }
  swift_retain();
  return a1;
}

double sub_1002040F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  double result;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v3))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v4))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v5 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          break;
      }
LABEL_24:
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v20 = (char *)a1 + *(int *)(v19 + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (v21)
      {
        swift_bridgeObjectRelease(v21);
        sub_10003E2EC(*((void **)v20 + 2), *((_QWORD *)v20 + 3), *((_QWORD *)v20 + 4), *((_QWORD *)v20 + 5), *((_QWORD *)v20 + 6), *((_QWORD *)v20 + 7), v20[64]);
        v22 = v20[120];
        if (v22 != 255)
          sub_10002B328(*((void **)v20 + 9), *((_QWORD *)v20 + 10), *((_QWORD *)v20 + 11), *((_QWORD *)v20 + 12), *((_QWORD *)v20 + 13), *((_QWORD *)v20 + 14), v22 & 1);
      }
      v11 = *(id *)((char *)a1 + *(int *)(v19 + 44));
      goto LABEL_28;
    case 2u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v9))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v11 = *v6;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v10 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v11 = (id)a1[2];
      goto LABEL_28;
    case 6u:
      v11 = (id)*a1;
      goto LABEL_28;
    case 7u:
      v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12))
      {
        swift_bridgeObjectRelease(*a1);
        v13 = (char *)a1 + *(int *)(v12 + 20);
        v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v16 = *((_QWORD *)v15 + 1);
      if (!v16)
        goto LABEL_29;
      swift_bridgeObjectRelease(v16);
      v11 = (id)*((_QWORD *)v15 + 2);
LABEL_28:

LABEL_29:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    case 8u:
      v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a1, 1, v17))
      {
        v18 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
      }
      goto LABEL_29;
    case 9u:
      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v10 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1002044B0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  id v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  int v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v194;
  char v195;
  void **v196;
  char *v197;
  void **v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v200 = v6;
      v202 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        v198 = a2;
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v112 = *((_QWORD *)v105 + 7);
        v194 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v112, v194);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v112;
        v104[64] = v194;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v113 = v105[120];
        if (v113 == 255)
        {
          v114 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v114;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v195 = v113 & 1;
          v120 = (void *)*((_QWORD *)v105 + 9);
          v119 = *((_QWORD *)v105 + 10);
          v121 = *((_QWORD *)v105 + 11);
          v122 = *((_QWORD *)v105 + 12);
          v123 = *((_QWORD *)v105 + 13);
          v124 = *((_QWORD *)v105 + 14);
          sub_10002B764(v120, v119, v121, v122, v123, v124, v113 & 1);
          *((_QWORD *)v104 + 9) = v120;
          *((_QWORD *)v104 + 10) = v119;
          *((_QWORD *)v104 + 11) = v121;
          *((_QWORD *)v104 + 12) = v122;
          *((_QWORD *)v104 + 13) = v123;
          *((_QWORD *)v104 + 14) = v124;
          v104[120] = v195;
        }
        v118 = v200;
        a3 = v202;
        v104[121] = v105[121];
        a2 = v198;
      }
      else
      {
        v115 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v115;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v116 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v116;
        v117 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v117;
        v118 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v125 = v102[11];
      v126 = *(void **)((char *)a2 + v125);
      *(void **)((char *)a1 + v125) = v126;
      v127 = v126;
      v48 = a1;
      v49 = v118;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v201 = v6;
      v203 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v128 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v129 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v131 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v132 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v133 = *a2;
          *a1 = *a2;
          v134 = v133;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v135 = *a2;
          *a1 = *a2;
          v136 = v135;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v138 = v137[5];
      v139 = (char *)a1 + v138;
      v140 = (char *)a2 + v138;
      v141 = *(uint64_t *)((char *)a2 + v138 + 8);
      if (v141)
      {
        v196 = a1;
        v199 = a2;
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v141;
        v142 = (void *)*((_QWORD *)v140 + 2);
        v143 = *((_QWORD *)v140 + 3);
        v144 = *((_QWORD *)v140 + 4);
        v145 = *((_QWORD *)v140 + 5);
        v147 = *((_QWORD *)v140 + 6);
        v146 = *((_QWORD *)v140 + 7);
        v148 = v140[64];
        swift_bridgeObjectRetain(v141);
        sub_10003E1F0(v142, v143, v144, v145, v147, v146, v148);
        *((_QWORD *)v139 + 2) = v142;
        *((_QWORD *)v139 + 3) = v143;
        *((_QWORD *)v139 + 4) = v144;
        *((_QWORD *)v139 + 5) = v145;
        *((_QWORD *)v139 + 6) = v147;
        *((_QWORD *)v139 + 7) = v146;
        v139[64] = v148;
        *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
        v149 = v140[120];
        if (v149 == 255)
        {
          v150 = *(_OWORD *)(v140 + 88);
          *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
          *(_OWORD *)(v139 + 88) = v150;
          *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
          v139[120] = v140[120];
        }
        else
        {
          v155 = (void *)*((_QWORD *)v140 + 9);
          v156 = *((_QWORD *)v140 + 10);
          v157 = *((_QWORD *)v140 + 11);
          v158 = *((_QWORD *)v140 + 12);
          v159 = *((_QWORD *)v140 + 13);
          v160 = *((_QWORD *)v140 + 14);
          v161 = v149 & 1;
          sub_10002B764(v155, v156, v157, v158, v159, v160, v149 & 1);
          *((_QWORD *)v139 + 9) = v155;
          *((_QWORD *)v139 + 10) = v156;
          *((_QWORD *)v139 + 11) = v157;
          *((_QWORD *)v139 + 12) = v158;
          *((_QWORD *)v139 + 13) = v159;
          *((_QWORD *)v139 + 14) = v160;
          v139[120] = v161;
        }
        v154 = v201;
        a3 = v203;
        v139[121] = v140[121];
        a1 = v196;
        a2 = v199;
      }
      else
      {
        v151 = *((_OWORD *)v140 + 5);
        *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
        *((_OWORD *)v139 + 5) = v151;
        *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
        *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
        v152 = *((_OWORD *)v140 + 1);
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *((_OWORD *)v139 + 1) = v152;
        v153 = *((_OWORD *)v140 + 3);
        *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
        *((_OWORD *)v139 + 3) = v153;
        v154 = v6;
      }
      *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
      *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
      *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
      *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
      *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
      v162 = v137[11];
      v163 = *(void **)((char *)a2 + v162);
      *(void **)((char *)a1 + v162) = v163;
      v164 = v163;
      v48 = a1;
      v49 = v154;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v21, v22, v165);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v21, v22, v166);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v21, v22, v167);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v21, v22, v168);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v21, v22, v169);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v170 = *v22;
            *v21 = *v22;
            v171 = v170;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v172 = *v22;
            *v21 = *v22;
            v173 = v172;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v30, v31, v174);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v30, v31, v175);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v30, v31, v176);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v191 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v30, v31, v191);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v30, v31, v177);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v178 = *v31;
            *v30 = *v31;
            v179 = v178;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v180 = *v31;
            *v30 = *v31;
            v181 = v180;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v39, v40, v182);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v39, v40, v183);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v39, v40, v184);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v39, v40, v185);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v39, v40, v186);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v187 = *v40;
            *v39 = *v40;
            v188 = v187;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v189 = *v40;
            *v39 = *v40;
            v190 = v189;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v197 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v197, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v192 = *(int *)(a3 + 24);
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v192) = *((_BYTE *)a2 + v192);
  swift_retain();
  return a1;
}

void **sub_100205468(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  unsigned __int8 v200;
  void *v201;
  uint64_t v202;
  char v203;
  char *v204;
  uint64_t v205;
  char v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v208 = v6;
        v210 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v205 = *((_QWORD *)v106 + 7);
          v200 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v205, v200);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v205;
          v105[64] = v200;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v206 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v201 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v201, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v201;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v206;
          }
          v123 = v208;
          a3 = v210;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v209 = v6;
        v211 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v207 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v202 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v202, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v202;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v203 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v203;
          }
          v162 = v209;
          a3 = v211;
          v143[121] = v144[121];
          v141 = v207;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v204 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v204, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1002064A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v105) = *((_BYTE *)a2 + v105);
  return a1;
}

_QWORD *sub_100207014(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100207BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100207BB0);
}

uint64_t sub_100207BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100207C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100207C38);
}

uint64_t sub_100207C38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100207CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020C894(a1, a2, a3, (uint64_t)&value witness table for Builtin.NativeObject + 64, (uint64_t)&unk_1005298C0);
}

char *sub_100207CC8(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v190;
  void *v191;
  uint64_t v192;
  void *v193;
  char *v194;
  uint64_t v195;
  char v196;
  unsigned __int8 v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v7;
        v201 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *(_QWORD *)a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *a2;
            *(_QWORD *)a1 = *a2;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *a2;
            *(_QWORD *)a1 = *a2;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = &a1[v105];
        v107 = (char *)a2 + v105;
        v108 = *(uint64_t *)((char *)a2 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v195 = *((_QWORD *)v107 + 7);
          v190 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v195, v190);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v195;
          v106[64] = v190;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v196 = v114 & 1;
            v120 = *((_QWORD *)v107 + 10);
            v191 = (void *)*((_QWORD *)v107 + 9);
            v121 = *((_QWORD *)v107 + 11);
            v122 = *((_QWORD *)v107 + 12);
            v123 = *((_QWORD *)v107 + 13);
            v124 = *((_QWORD *)v107 + 14);
            sub_10002B764(v191, v120, v121, v122, v123, v124, v114 & 1);
            *((_QWORD *)v106 + 9) = v191;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v121;
            *((_QWORD *)v106 + 12) = v122;
            *((_QWORD *)v106 + 13) = v123;
            *((_QWORD *)v106 + 14) = v124;
            v106[120] = v196;
          }
          v119 = v199;
          v6 = v201;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        a1[v104[6]] = *((_BYTE *)a2 + v104[6]);
        a1[v104[7]] = *((_BYTE *)a2 + v104[7]);
        a1[v104[8]] = *((_BYTE *)a2 + v104[8]);
        a1[v104[9]] = *((_BYTE *)a2 + v104[9]);
        a1[v104[10]] = *((_BYTE *)a2 + v104[10]);
        v125 = v104[11];
        v126 = *(char **)((char *)a2 + v125);
        *(_QWORD *)&a1[v125] = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v200 = v7;
        v202 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *(_QWORD *)a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *a2;
            *(_QWORD *)a1 = *a2;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *a2;
            *(_QWORD *)a1 = *a2;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = &a1[v138];
        v140 = (char *)a2 + v138;
        v141 = *(uint64_t *)((char *)a2 + v138 + 8);
        if (v141)
        {
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v146 = *((_QWORD *)v140 + 6);
          v192 = *((_QWORD *)v140 + 7);
          v197 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v146, v192, v197);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v146;
          *((_QWORD *)v139 + 7) = v192;
          v139[64] = v197;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v147 = v140[120];
          if (v147 == 255)
          {
            v148 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v148;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v198 = v147 & 1;
            v153 = *((_QWORD *)v140 + 10);
            v193 = (void *)*((_QWORD *)v140 + 9);
            v154 = *((_QWORD *)v140 + 11);
            v155 = *((_QWORD *)v140 + 12);
            v156 = *((_QWORD *)v140 + 13);
            v157 = *((_QWORD *)v140 + 14);
            sub_10002B764(v193, v153, v154, v155, v156, v157, v147 & 1);
            *((_QWORD *)v139 + 9) = v193;
            *((_QWORD *)v139 + 10) = v153;
            *((_QWORD *)v139 + 11) = v154;
            *((_QWORD *)v139 + 12) = v155;
            *((_QWORD *)v139 + 13) = v156;
            *((_QWORD *)v139 + 14) = v157;
            v139[120] = v198;
          }
          v152 = v200;
          v6 = v202;
          v139[121] = v140[121];
        }
        else
        {
          v149 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v149;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v150 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v150;
          v151 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v151;
          v152 = v7;
        }
        a1[v137[6]] = *((_BYTE *)a2 + v137[6]);
        a1[v137[7]] = *((_BYTE *)a2 + v137[7]);
        a1[v137[8]] = *((_BYTE *)a2 + v137[8]);
        a1[v137[9]] = *((_BYTE *)a2 + v137[9]);
        a1[v137[10]] = *((_BYTE *)a2 + v137[10]);
        v158 = v137[11];
        v159 = *(char **)((char *)a2 + v158);
        *(_QWORD *)&a1[v158] = v159;
        v160 = v159;
        v50 = a1;
        v51 = v152;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)&a1[v22];
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v23, v24, v161);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v23, v24, v162);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v24;
              *v23 = *v24;
              v167 = v166;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *a2;
        *(_QWORD *)a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)&a1[v31];
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v32, v33, v170);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v32, v33, v171);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v32, v33, v187);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v33;
              *v32 = *v33;
              v175 = v174;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *a2;
        *(_QWORD *)a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)&a1[v40];
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v41, v42, v178);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v41, v42, v179);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v42;
              *v41 = *v42;
              v184 = v183;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        *((_QWORD *)a1 + 2) = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *a2;
        *(_QWORD *)a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v194 = &a1[v81];
          v82 = (char *)a2 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v194, v82, v83, v86);
          v7 = v84;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = &a1[v87];
        v89 = (char **)((char *)a2 + v87);
        v90 = v89[1];
        if (v90)
        {
          *(_QWORD *)v88 = *v89;
          *((_QWORD *)v88 + 1) = v90;
          v91 = (void *)v89[2];
          *((_QWORD *)v88 + 2) = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          *((_QWORD *)v88 + 2) = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          a1[*(int *)(v62 + 20)] = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&a1[*(int *)(v94 + 20)] = *(char **)((char *)a2 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = &a1[v56];
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v188 = *(int *)(v6 + 24);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(char **)((char *)a2 + *(int *)(v6 + 20));
    *(_QWORD *)&a1[v188] = *(char **)((char *)a2 + v188);
  }
  swift_retain();
  return a1;
}

double sub_100208CC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  double result;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v3))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v4))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v5 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          break;
      }
LABEL_24:
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v20 = (char *)a1 + *(int *)(v19 + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (v21)
      {
        swift_bridgeObjectRelease(v21);
        sub_10003E2EC(*((void **)v20 + 2), *((_QWORD *)v20 + 3), *((_QWORD *)v20 + 4), *((_QWORD *)v20 + 5), *((_QWORD *)v20 + 6), *((_QWORD *)v20 + 7), v20[64]);
        v22 = v20[120];
        if (v22 != 255)
          sub_10002B328(*((void **)v20 + 9), *((_QWORD *)v20 + 10), *((_QWORD *)v20 + 11), *((_QWORD *)v20 + 12), *((_QWORD *)v20 + 13), *((_QWORD *)v20 + 14), v22 & 1);
      }
      v11 = *(id *)((char *)a1 + *(int *)(v19 + 44));
      goto LABEL_28;
    case 2u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v9))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v11 = *v6;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v10 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v11 = (id)a1[2];
      goto LABEL_28;
    case 6u:
      v11 = (id)*a1;
      goto LABEL_28;
    case 7u:
      v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12))
      {
        swift_bridgeObjectRelease(*a1);
        v13 = (char *)a1 + *(int *)(v12 + 20);
        v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v16 = *((_QWORD *)v15 + 1);
      if (!v16)
        goto LABEL_29;
      swift_bridgeObjectRelease(v16);
      v11 = (id)*((_QWORD *)v15 + 2);
LABEL_28:

LABEL_29:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    case 8u:
      v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a1, 1, v17))
      {
        v18 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
      }
      goto LABEL_29;
    case 9u:
      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v10 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_10020907C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  id v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  int v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v194;
  char v195;
  void **v196;
  char *v197;
  void **v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v200 = v6;
      v202 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        v198 = a2;
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v112 = *((_QWORD *)v105 + 7);
        v194 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v112, v194);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v112;
        v104[64] = v194;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v113 = v105[120];
        if (v113 == 255)
        {
          v114 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v114;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v195 = v113 & 1;
          v120 = (void *)*((_QWORD *)v105 + 9);
          v119 = *((_QWORD *)v105 + 10);
          v121 = *((_QWORD *)v105 + 11);
          v122 = *((_QWORD *)v105 + 12);
          v123 = *((_QWORD *)v105 + 13);
          v124 = *((_QWORD *)v105 + 14);
          sub_10002B764(v120, v119, v121, v122, v123, v124, v113 & 1);
          *((_QWORD *)v104 + 9) = v120;
          *((_QWORD *)v104 + 10) = v119;
          *((_QWORD *)v104 + 11) = v121;
          *((_QWORD *)v104 + 12) = v122;
          *((_QWORD *)v104 + 13) = v123;
          *((_QWORD *)v104 + 14) = v124;
          v104[120] = v195;
        }
        v118 = v200;
        a3 = v202;
        v104[121] = v105[121];
        a2 = v198;
      }
      else
      {
        v115 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v115;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v116 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v116;
        v117 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v117;
        v118 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v125 = v102[11];
      v126 = *(void **)((char *)a2 + v125);
      *(void **)((char *)a1 + v125) = v126;
      v127 = v126;
      v48 = a1;
      v49 = v118;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v201 = v6;
      v203 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v128 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v129 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v131 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v132 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v133 = *a2;
          *a1 = *a2;
          v134 = v133;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v135 = *a2;
          *a1 = *a2;
          v136 = v135;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v138 = v137[5];
      v139 = (char *)a1 + v138;
      v140 = (char *)a2 + v138;
      v141 = *(uint64_t *)((char *)a2 + v138 + 8);
      if (v141)
      {
        v196 = a1;
        v199 = a2;
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v141;
        v142 = (void *)*((_QWORD *)v140 + 2);
        v143 = *((_QWORD *)v140 + 3);
        v144 = *((_QWORD *)v140 + 4);
        v145 = *((_QWORD *)v140 + 5);
        v147 = *((_QWORD *)v140 + 6);
        v146 = *((_QWORD *)v140 + 7);
        v148 = v140[64];
        swift_bridgeObjectRetain(v141);
        sub_10003E1F0(v142, v143, v144, v145, v147, v146, v148);
        *((_QWORD *)v139 + 2) = v142;
        *((_QWORD *)v139 + 3) = v143;
        *((_QWORD *)v139 + 4) = v144;
        *((_QWORD *)v139 + 5) = v145;
        *((_QWORD *)v139 + 6) = v147;
        *((_QWORD *)v139 + 7) = v146;
        v139[64] = v148;
        *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
        v149 = v140[120];
        if (v149 == 255)
        {
          v150 = *(_OWORD *)(v140 + 88);
          *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
          *(_OWORD *)(v139 + 88) = v150;
          *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
          v139[120] = v140[120];
        }
        else
        {
          v155 = (void *)*((_QWORD *)v140 + 9);
          v156 = *((_QWORD *)v140 + 10);
          v157 = *((_QWORD *)v140 + 11);
          v158 = *((_QWORD *)v140 + 12);
          v159 = *((_QWORD *)v140 + 13);
          v160 = *((_QWORD *)v140 + 14);
          v161 = v149 & 1;
          sub_10002B764(v155, v156, v157, v158, v159, v160, v149 & 1);
          *((_QWORD *)v139 + 9) = v155;
          *((_QWORD *)v139 + 10) = v156;
          *((_QWORD *)v139 + 11) = v157;
          *((_QWORD *)v139 + 12) = v158;
          *((_QWORD *)v139 + 13) = v159;
          *((_QWORD *)v139 + 14) = v160;
          v139[120] = v161;
        }
        v154 = v201;
        a3 = v203;
        v139[121] = v140[121];
        a1 = v196;
        a2 = v199;
      }
      else
      {
        v151 = *((_OWORD *)v140 + 5);
        *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
        *((_OWORD *)v139 + 5) = v151;
        *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
        *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
        v152 = *((_OWORD *)v140 + 1);
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *((_OWORD *)v139 + 1) = v152;
        v153 = *((_OWORD *)v140 + 3);
        *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
        *((_OWORD *)v139 + 3) = v153;
        v154 = v6;
      }
      *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
      *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
      *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
      *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
      *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
      v162 = v137[11];
      v163 = *(void **)((char *)a2 + v162);
      *(void **)((char *)a1 + v162) = v163;
      v164 = v163;
      v48 = a1;
      v49 = v154;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v21, v22, v165);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v21, v22, v166);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v21, v22, v167);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v21, v22, v168);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v21, v22, v169);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v170 = *v22;
            *v21 = *v22;
            v171 = v170;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v172 = *v22;
            *v21 = *v22;
            v173 = v172;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v30, v31, v174);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v30, v31, v175);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v30, v31, v176);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v191 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v30, v31, v191);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v30, v31, v177);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v178 = *v31;
            *v30 = *v31;
            v179 = v178;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v180 = *v31;
            *v30 = *v31;
            v181 = v180;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v39, v40, v182);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v39, v40, v183);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v39, v40, v184);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v39, v40, v185);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v39, v40, v186);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v187 = *v40;
            *v39 = *v40;
            v188 = v187;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v189 = *v40;
            *v39 = *v40;
            v190 = v189;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v197 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v197, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v192 = *(int *)(a3 + 24);
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *(void **)((char *)a1 + v192) = *(void **)((char *)a2 + v192);
  swift_retain();
  return a1;
}

void **sub_10020A034(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  unsigned __int8 v200;
  void *v201;
  uint64_t v202;
  char v203;
  char *v204;
  uint64_t v205;
  char v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v208 = v6;
        v210 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v205 = *((_QWORD *)v106 + 7);
          v200 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v205, v200);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v205;
          v105[64] = v200;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v206 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v201 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v201, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v201;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v206;
          }
          v123 = v208;
          a3 = v210;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v209 = v6;
        v211 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v207 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v202 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v202, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v202;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v203 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v203;
          }
          v162 = v209;
          a3 = v211;
          v143[121] = v144[121];
          v141 = v207;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v204 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v204, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_10020B074(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);
  return a1;
}

_QWORD *sub_10020BBE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v105 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);
  swift_release();
  return a1;
}

