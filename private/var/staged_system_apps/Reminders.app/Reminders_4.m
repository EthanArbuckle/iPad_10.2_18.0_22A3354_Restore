uint64_t sub_10020C76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020C778);
}

uint64_t sub_10020C778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10020C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020C800);
}

uint64_t sub_10020C800(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_10020C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020C894(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64, (uint64_t)&value witness table for Builtin.NativeObject + 64);
}

uint64_t sub_10020C894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  unint64_t v9;
  _QWORD v10[3];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v9 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(result - 8) + 64;
    v10[1] = a4;
    v10[2] = a5;
    swift_initStructMetadata(a1, 256, 3, v10, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_10020C910(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(void **, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void **v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(void **, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void **v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(void **, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  uint64_t v189;
  unsigned __int8 v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  void *v196;
  char *v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v202 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 1u:
              v12 = *a2;
              *(_QWORD *)a1 = *a2;
              v13 = v12;
              v14 = a1;
              v15 = v11;
              v16 = 1;
              goto LABEL_45;
            case 2u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
              v14 = a1;
              v15 = v11;
              v16 = 2;
              goto LABEL_45;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
              v14 = a1;
              v15 = v11;
              v16 = 3;
              goto LABEL_45;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
              v14 = a1;
              v15 = v11;
              v16 = 4;
              goto LABEL_45;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
              v14 = a1;
              v15 = v11;
              v16 = 5;
              goto LABEL_45;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
              v14 = a1;
              v15 = v11;
              v16 = 6;
              goto LABEL_45;
            case 8u:
              v101 = *a2;
              *(_QWORD *)a1 = *a2;
              v102 = v101;
              v14 = a1;
              v15 = v11;
              v16 = 8;
              goto LABEL_45;
            case 9u:
              v103 = *a2;
              *(_QWORD *)a1 = *a2;
              v104 = v103;
              v14 = a1;
              v15 = v11;
              v16 = 9;
LABEL_45:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v105 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v106 = v105[5];
          v107 = &a1[v106];
          v108 = (char *)a2 + v106;
          v109 = *(uint64_t *)((char *)a2 + v106 + 8);
          if (v109)
          {
            *(_QWORD *)v107 = *(_QWORD *)v108;
            *((_QWORD *)v107 + 1) = v109;
            v110 = (void *)*((_QWORD *)v108 + 2);
            v111 = *((_QWORD *)v108 + 3);
            v112 = *((_QWORD *)v108 + 4);
            v184 = *((_QWORD *)v108 + 5);
            v193 = *((_QWORD *)v108 + 7);
            v198 = *((_QWORD *)v108 + 6);
            v188 = v108[64];
            swift_bridgeObjectRetain(v109);
            sub_10003E1F0(v110, v111, v112, v184, v198, v193, v188);
            *((_QWORD *)v107 + 2) = v110;
            *((_QWORD *)v107 + 3) = v111;
            *((_QWORD *)v107 + 4) = v112;
            *((_QWORD *)v107 + 5) = v184;
            *((_QWORD *)v107 + 6) = v198;
            *((_QWORD *)v107 + 7) = v193;
            v107[64] = v188;
            *(_DWORD *)(v107 + 65) = *(_DWORD *)(v108 + 65);
            v113 = v108[120];
            if (v113 == 255)
            {
              v114 = *(_OWORD *)(v108 + 88);
              *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
              *(_OWORD *)(v107 + 88) = v114;
              *(_OWORD *)(v107 + 104) = *(_OWORD *)(v108 + 104);
              v107[120] = v108[120];
            }
            else
            {
              v199 = v113 & 1;
              v118 = *((_QWORD *)v108 + 10);
              v119 = *((_QWORD *)v108 + 11);
              v120 = *((_QWORD *)v108 + 12);
              v189 = *((_QWORD *)v108 + 13);
              v194 = (void *)*((_QWORD *)v108 + 9);
              v185 = *((_QWORD *)v108 + 14);
              sub_10002B764(v194, v118, v119, v120, v189, v185, v113 & 1);
              *((_QWORD *)v107 + 9) = v194;
              *((_QWORD *)v107 + 10) = v118;
              *((_QWORD *)v107 + 11) = v119;
              *((_QWORD *)v107 + 12) = v120;
              *((_QWORD *)v107 + 13) = v189;
              *((_QWORD *)v107 + 14) = v185;
              v107[120] = v199;
            }
            v107[121] = v108[121];
          }
          else
          {
            v115 = *((_OWORD *)v108 + 5);
            *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
            *((_OWORD *)v107 + 5) = v115;
            *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
            *(_OWORD *)(v107 + 106) = *(_OWORD *)(v108 + 106);
            v116 = *((_OWORD *)v108 + 1);
            *(_OWORD *)v107 = *(_OWORD *)v108;
            *((_OWORD *)v107 + 1) = v116;
            v117 = *((_OWORD *)v108 + 3);
            *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
            *((_OWORD *)v107 + 3) = v117;
          }
          a1[v105[6]] = *((_BYTE *)a2 + v105[6]);
          a1[v105[7]] = *((_BYTE *)a2 + v105[7]);
          a1[v105[8]] = *((_BYTE *)a2 + v105[8]);
          a1[v105[9]] = *((_BYTE *)a2 + v105[9]);
          a1[v105[10]] = *((_BYTE *)a2 + v105[10]);
          v121 = v105[11];
          v122 = *(char **)((char *)a2 + v121);
          *(_QWORD *)&a1[v121] = v122;
          v123 = v122;
          v124 = a1;
          v125 = v7;
          v126 = 0;
          goto LABEL_69;
        case 1u:
          v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v202 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v17))
          {
            case 1u:
              v18 = *a2;
              *(_QWORD *)a1 = *a2;
              v19 = v18;
              v20 = a1;
              v21 = v17;
              v22 = 1;
              goto LABEL_61;
            case 2u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
              v20 = a1;
              v21 = v17;
              v22 = 2;
              goto LABEL_61;
            case 3u:
              v128 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
              v20 = a1;
              v21 = v17;
              v22 = 3;
              goto LABEL_61;
            case 4u:
              v129 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
              v20 = a1;
              v21 = v17;
              v22 = 4;
              goto LABEL_61;
            case 5u:
              v130 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
              v20 = a1;
              v21 = v17;
              v22 = 5;
              goto LABEL_61;
            case 6u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
              v20 = a1;
              v21 = v17;
              v22 = 6;
              goto LABEL_61;
            case 8u:
              v132 = *a2;
              *(_QWORD *)a1 = *a2;
              v133 = v132;
              v20 = a1;
              v21 = v17;
              v22 = 8;
              goto LABEL_61;
            case 9u:
              v134 = *a2;
              *(_QWORD *)a1 = *a2;
              v135 = v134;
              v20 = a1;
              v21 = v17;
              v22 = 9;
LABEL_61:
              swift_storeEnumTagMultiPayload(v20, v21, v22);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
              break;
          }
          v136 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v137 = v136[5];
          v138 = &a1[v137];
          v139 = (char *)a2 + v137;
          v140 = *(uint64_t *)((char *)a2 + v137 + 8);
          if (v140)
          {
            *(_QWORD *)v138 = *(_QWORD *)v139;
            *((_QWORD *)v138 + 1) = v140;
            v141 = (void *)*((_QWORD *)v139 + 2);
            v142 = *((_QWORD *)v139 + 3);
            v143 = *((_QWORD *)v139 + 4);
            v186 = *((_QWORD *)v139 + 5);
            v195 = *((_QWORD *)v139 + 7);
            v200 = *((_QWORD *)v139 + 6);
            v190 = v139[64];
            swift_bridgeObjectRetain(v140);
            sub_10003E1F0(v141, v142, v143, v186, v200, v195, v190);
            *((_QWORD *)v138 + 2) = v141;
            *((_QWORD *)v138 + 3) = v142;
            *((_QWORD *)v138 + 4) = v143;
            *((_QWORD *)v138 + 5) = v186;
            *((_QWORD *)v138 + 6) = v200;
            *((_QWORD *)v138 + 7) = v195;
            v138[64] = v190;
            *(_DWORD *)(v138 + 65) = *(_DWORD *)(v139 + 65);
            v144 = v139[120];
            if (v144 == 255)
            {
              v145 = *(_OWORD *)(v139 + 88);
              *(_OWORD *)(v138 + 72) = *(_OWORD *)(v139 + 72);
              *(_OWORD *)(v138 + 88) = v145;
              *(_OWORD *)(v138 + 104) = *(_OWORD *)(v139 + 104);
              v138[120] = v139[120];
            }
            else
            {
              v201 = v144 & 1;
              v149 = *((_QWORD *)v139 + 10);
              v150 = *((_QWORD *)v139 + 11);
              v151 = *((_QWORD *)v139 + 12);
              v191 = *((_QWORD *)v139 + 13);
              v196 = (void *)*((_QWORD *)v139 + 9);
              v187 = *((_QWORD *)v139 + 14);
              sub_10002B764(v196, v149, v150, v151, v191, v187, v144 & 1);
              *((_QWORD *)v138 + 9) = v196;
              *((_QWORD *)v138 + 10) = v149;
              *((_QWORD *)v138 + 11) = v150;
              *((_QWORD *)v138 + 12) = v151;
              *((_QWORD *)v138 + 13) = v191;
              *((_QWORD *)v138 + 14) = v187;
              v138[120] = v201;
            }
            v138[121] = v139[121];
          }
          else
          {
            v146 = *((_OWORD *)v139 + 5);
            *((_OWORD *)v138 + 4) = *((_OWORD *)v139 + 4);
            *((_OWORD *)v138 + 5) = v146;
            *((_OWORD *)v138 + 6) = *((_OWORD *)v139 + 6);
            *(_OWORD *)(v138 + 106) = *(_OWORD *)(v139 + 106);
            v147 = *((_OWORD *)v139 + 1);
            *(_OWORD *)v138 = *(_OWORD *)v139;
            *((_OWORD *)v138 + 1) = v147;
            v148 = *((_OWORD *)v139 + 3);
            *((_OWORD *)v138 + 2) = *((_OWORD *)v139 + 2);
            *((_OWORD *)v138 + 3) = v148;
          }
          a1[v136[6]] = *((_BYTE *)a2 + v136[6]);
          a1[v136[7]] = *((_BYTE *)a2 + v136[7]);
          a1[v136[8]] = *((_BYTE *)a2 + v136[8]);
          a1[v136[9]] = *((_BYTE *)a2 + v136[9]);
          a1[v136[10]] = *((_BYTE *)a2 + v136[10]);
          v152 = v136[11];
          v153 = *(char **)((char *)a2 + v152);
          *(_QWORD *)&a1[v152] = v153;
          v154 = v153;
          v124 = a1;
          v125 = v7;
          v126 = 1;
LABEL_69:
          swift_storeEnumTagMultiPayload(v124, v125, v126);
          v8 = v202;
          break;
        case 2u:
          v203 = v8;
          v23 = *a2;
          *(_QWORD *)a1 = *a2;
          v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v25 = (void **)&a1[v24];
          v26 = (void **)((char *)a2 + v24);
          v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v28 = *(_QWORD *)(v27 - 8);
          v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
          v30 = v23;
          if (v29(v26, 1, v27))
          {
            v31 = sub_10002A750(&qword_100644980);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v26, v27))
            {
              case 1u:
                v67 = *v26;
                *v25 = *v26;
                v68 = v67;
                v69 = v25;
                v70 = v27;
                v71 = 1;
                goto LABEL_78;
              case 2u:
                v155 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v25, v26, v155);
                v69 = v25;
                v70 = v27;
                v71 = 2;
                goto LABEL_78;
              case 3u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v25, v26, v156);
                v69 = v25;
                v70 = v27;
                v71 = 3;
                goto LABEL_78;
              case 4u:
                v157 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v25, v26, v157);
                v69 = v25;
                v70 = v27;
                v71 = 4;
                goto LABEL_78;
              case 5u:
                v158 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v25, v26, v158);
                v69 = v25;
                v70 = v27;
                v71 = 5;
                goto LABEL_78;
              case 6u:
                v159 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v25, v26, v159);
                v69 = v25;
                v70 = v27;
                v71 = 6;
                goto LABEL_78;
              case 8u:
                v160 = *v26;
                *v25 = *v26;
                v161 = v160;
                v69 = v25;
                v70 = v27;
                v71 = 8;
                goto LABEL_78;
              case 9u:
                v162 = *v26;
                *v25 = *v26;
                v163 = v162;
                v69 = v25;
                v70 = v27;
                v71 = 9;
LABEL_78:
                swift_storeEnumTagMultiPayload(v69, v70, v71);
                break;
              default:
                memcpy(v25, v26, *(_QWORD *)(v28 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          }
          v8 = v203;
          v52 = a1;
          v53 = v7;
          v54 = 2;
          goto LABEL_103;
        case 3u:
          v204 = v8;
          v32 = *a2;
          *(_QWORD *)a1 = *a2;
          v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v34 = (void **)&a1[v33];
          v35 = (void **)((char *)a2 + v33);
          v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v37 = *(_QWORD *)(v36 - 8);
          v38 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48);
          v39 = v32;
          if (v38(v35, 1, v36))
          {
            v40 = sub_10002A750(&qword_100644980);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
            v8 = v204;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v35, v36))
            {
              case 1u:
                v72 = *v35;
                *v34 = *v35;
                v73 = v72;
                v74 = v34;
                v75 = v36;
                v76 = 1;
                goto LABEL_100;
              case 2u:
                v164 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v34, v35, v164);
                v74 = v34;
                v75 = v36;
                v76 = 2;
                goto LABEL_100;
              case 3u:
                v165 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v34, v35, v165);
                v74 = v34;
                v75 = v36;
                v76 = 3;
                goto LABEL_100;
              case 4u:
                v166 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v34, v35, v166);
                v74 = v34;
                v75 = v36;
                v76 = 4;
                goto LABEL_100;
              case 5u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v34, v35, v181);
                v74 = v34;
                v75 = v36;
                v76 = 5;
                goto LABEL_100;
              case 6u:
                v167 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v34, v35, v167);
                v74 = v34;
                v75 = v36;
                v76 = 6;
                goto LABEL_100;
              case 8u:
                v168 = *v35;
                *v34 = *v35;
                v169 = v168;
                v74 = v34;
                v75 = v36;
                v76 = 8;
                goto LABEL_100;
              case 9u:
                v170 = *v35;
                *v34 = *v35;
                v171 = v170;
                v74 = v34;
                v75 = v36;
                v76 = 9;
LABEL_100:
                swift_storeEnumTagMultiPayload(v74, v75, v76);
                break;
              default:
                memcpy(v34, v35, *(_QWORD *)(v37 + 64));
                break;
            }
            v8 = v204;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          v52 = a1;
          v53 = v7;
          v54 = 3;
          goto LABEL_103;
        case 4u:
          v205 = v8;
          v41 = *a2;
          *(_QWORD *)a1 = *a2;
          v42 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v43 = (void **)&a1[v42];
          v44 = (void **)((char *)a2 + v42);
          v45 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v46 = *(_QWORD *)(v45 - 8);
          v47 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v46 + 48);
          v48 = v41;
          if (v47(v44, 1, v45))
          {
            v49 = sub_10002A750(&qword_100644980);
            memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v44, v45))
            {
              case 1u:
                v77 = *v44;
                *v43 = *v44;
                v78 = v77;
                v79 = v43;
                v80 = v45;
                v81 = 1;
                goto LABEL_96;
              case 2u:
                v172 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v43, v44, v172);
                v79 = v43;
                v80 = v45;
                v81 = 2;
                goto LABEL_96;
              case 3u:
                v173 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v43, v44, v173);
                v79 = v43;
                v80 = v45;
                v81 = 3;
                goto LABEL_96;
              case 4u:
                v174 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v43, v44, v174);
                v79 = v43;
                v80 = v45;
                v81 = 4;
                goto LABEL_96;
              case 5u:
                v175 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v43, v44, v175);
                v79 = v43;
                v80 = v45;
                v81 = 5;
                goto LABEL_96;
              case 6u:
                v176 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v43, v44, v176);
                v79 = v43;
                v80 = v45;
                v81 = 6;
                goto LABEL_96;
              case 8u:
                v177 = *v44;
                *v43 = *v44;
                v178 = v177;
                v79 = v43;
                v80 = v45;
                v81 = 8;
                goto LABEL_96;
              case 9u:
                v179 = *v44;
                *v43 = *v44;
                v180 = v179;
                v79 = v43;
                v80 = v45;
                v81 = 9;
LABEL_96:
                swift_storeEnumTagMultiPayload(v79, v80, v81);
                break;
              default:
                memcpy(v43, v44, *(_QWORD *)(v46 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          }
          v8 = v205;
          v52 = a1;
          v53 = v7;
          v54 = 4;
          goto LABEL_103;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v50 = a2[2];
          *((_QWORD *)a1 + 2) = v50;
          v51 = v50;
          v52 = a1;
          v53 = v7;
          v54 = 5;
          goto LABEL_103;
        case 6u:
          v62 = *a2;
          *(_QWORD *)a1 = *a2;
          v63 = v62;
          v52 = a1;
          v53 = v7;
          v54 = 6;
          goto LABEL_103;
        case 7u:
          v55 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v56 = *(_QWORD *)(v55 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v56 + 48))(a2, 1, v55))
          {
            v57 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
          }
          else
          {
            v82 = *a2;
            *(_QWORD *)a1 = *a2;
            v83 = *(int *)(v55 + 20);
            v192 = (char *)a2 + v83;
            v197 = &a1[v83];
            v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v85 = v8;
            v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
            v87 = swift_bridgeObjectRetain(v82);
            v86(v197, v192, v84, v87);
            v8 = v85;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(a1, 0, 1, v55);
          }
          v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v89 = &a1[v88];
          v90 = (char **)((char *)a2 + v88);
          v91 = v90[1];
          if (v91)
          {
            *(_QWORD *)v89 = *v90;
            *((_QWORD *)v89 + 1) = v91;
            v92 = (void *)v90[2];
            *((_QWORD *)v89 + 2) = v92;
            swift_bridgeObjectRetain(v91);
            v93 = v92;
          }
          else
          {
            *(_OWORD *)v89 = *(_OWORD *)v90;
            *((_QWORD *)v89 + 2) = v90[2];
          }
          v52 = a1;
          v53 = v7;
          v54 = 7;
          goto LABEL_103;
        case 8u:
          v64 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v65 + 48))(a2, 1, v64))
          {
            v66 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            a1[*(int *)(v64 + 20)] = *((_BYTE *)a2 + *(int *)(v64 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v64);
          }
          v95 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v95 + 20)] = *(char **)((char *)a2 + *(int *)(v95 + 20));
          v52 = a1;
          v53 = v7;
          v54 = 8;
          goto LABEL_103;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v58 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v59 = &a1[v58];
          v60 = (char *)a2 + v58;
          v61 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
          v52 = a1;
          v53 = v7;
          v54 = 9;
LABEL_103:
          swift_storeEnumTagMultiPayload(v52, v53, v54);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v182 = *(int *)(a3 + 24);
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(char **)((char *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)&a1[v182] = *(char **)((char *)a2 + v182);
  }
  swift_retain();
  return a1;
}

double sub_10020D988(id *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    switch(swift_getEnumCaseMultiPayload(a1, v2))
    {
      case 0u:
        v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v4))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_25;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_26;
        }
        goto LABEL_26;
      case 1u:
        v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v5))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_25:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v6 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
            break;
          default:
            break;
        }
LABEL_26:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v20 = (char *)a1 + *(int *)(v19 + 20);
        v21 = *((_QWORD *)v20 + 1);
        if (v21)
        {
          swift_bridgeObjectRelease(v21);
          sub_10003E2EC(*((void **)v20 + 2), *((_QWORD *)v20 + 3), *((_QWORD *)v20 + 4), *((_QWORD *)v20 + 5), *((_QWORD *)v20 + 6), *((_QWORD *)v20 + 7), v20[64]);
          v22 = v20[120];
          if (v22 != 255)
            sub_10002B328(*((void **)v20 + 9), *((_QWORD *)v20 + 10), *((_QWORD *)v20 + 11), *((_QWORD *)v20 + 12), *((_QWORD *)v20 + 13), *((_QWORD *)v20 + 14), v22 & 1);
        }

        break;
      case 2u:

        v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload(v7, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_30;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_13;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 3u:

        v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload(v7, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_30;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_13;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 4u:

        v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload(v7, v10))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_30:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_13:
              v11 = type metadata accessor for Date(0);
              goto LABEL_23;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 5u:

        break;
      case 6u:

        break;
      case 7u:
        v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12))
        {
          swift_bridgeObjectRelease(*a1);
          v13 = (char *)a1 + *(int *)(v12 + 20);
          v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
        v15 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v16 = *((_QWORD *)v15 + 1);
        if (v16)
        {
          swift_bridgeObjectRelease(v16);

        }
        break;
      case 8u:
        v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a1, 1, v17))
        {
          v18 = type metadata accessor for Date(0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
        }
        break;
      case 9u:
        v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v11 = type metadata accessor for AnyTip(0);
LABEL_23:
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v7, v11);
        break;
      default:
        break;
    }
  }
LABEL_2:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void **sub_10020DD78(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  void **v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void *v132;
  id v133;
  int *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  void *v192;
  unsigned __int8 v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v201 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 1u:
            v10 = *a2;
            *a1 = *a2;
            v11 = v10;
            v12 = a1;
            v13 = v9;
            v14 = 1;
            goto LABEL_43;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v12 = a1;
            v13 = v9;
            v14 = 2;
            goto LABEL_43;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v12 = a1;
            v13 = v9;
            v14 = 3;
            goto LABEL_43;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v12 = a1;
            v13 = v9;
            v14 = 4;
            goto LABEL_43;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v12 = a1;
            v13 = v9;
            v14 = 5;
            goto LABEL_43;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v12 = a1;
            v13 = v9;
            v14 = 6;
            goto LABEL_43;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v12 = a1;
            v13 = v9;
            v14 = 8;
            goto LABEL_43;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v12 = a1;
            v13 = v9;
            v14 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v12, v13, v14);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        v107 = *(uint64_t *)((char *)a2 + v104 + 8);
        if (v107)
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v184 = *((_QWORD *)v106 + 5);
          v191 = *((_QWORD *)v106 + 7);
          v196 = *((_QWORD *)v106 + 6);
          v186 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v184, v196, v191, v186);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v184;
          *((_QWORD *)v105 + 6) = v196;
          *((_QWORD *)v105 + 7) = v191;
          v105[64] = v186;
          *(_DWORD *)(v105 + 65) = *(_DWORD *)(v106 + 65);
          v111 = v106[120];
          if (v111 == 255)
          {
            v112 = *(_OWORD *)(v106 + 88);
            *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
            *(_OWORD *)(v105 + 88) = v112;
            *(_OWORD *)(v105 + 104) = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
          }
          else
          {
            v197 = v111 & 1;
            v116 = *((_QWORD *)v106 + 10);
            v117 = *((_QWORD *)v106 + 11);
            v118 = *((_QWORD *)v106 + 12);
            v187 = *((_QWORD *)v106 + 13);
            v192 = (void *)*((_QWORD *)v106 + 9);
            v185 = *((_QWORD *)v106 + 14);
            sub_10002B764(v192, v116, v117, v118, v187, v185, v111 & 1);
            *((_QWORD *)v105 + 9) = v192;
            *((_QWORD *)v105 + 10) = v116;
            *((_QWORD *)v105 + 11) = v117;
            *((_QWORD *)v105 + 12) = v118;
            *((_QWORD *)v105 + 13) = v187;
            *((_QWORD *)v105 + 14) = v185;
            v105[120] = v197;
          }
          v105[121] = v106[121];
        }
        else
        {
          v113 = *((_OWORD *)v106 + 5);
          *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
          *((_OWORD *)v105 + 5) = v113;
          *((_OWORD *)v105 + 6) = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          v114 = *((_OWORD *)v106 + 1);
          *(_OWORD *)v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v114;
          v115 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v115;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v119 = v103[11];
        v120 = *(void **)((char *)a2 + v119);
        *(void **)((char *)a1 + v119) = v120;
        v121 = v120;
        v122 = a1;
        v123 = v6;
        v124 = 0;
        goto LABEL_67;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v200 = a3;
        v201 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v125 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(a1, a2, v125);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v126 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v127 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v130 = *a2;
            *a1 = *a2;
            v131 = v130;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v132 = *a2;
            *a1 = *a2;
            v133 = v132;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v134 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v135 = v134[5];
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        v138 = *(uint64_t *)((char *)a2 + v135 + 8);
        if (v138)
        {
          *(_QWORD *)v136 = *(_QWORD *)v137;
          *((_QWORD *)v136 + 1) = v138;
          v139 = (void *)*((_QWORD *)v137 + 2);
          v140 = *((_QWORD *)v137 + 3);
          v142 = *((_QWORD *)v137 + 4);
          v141 = *((_QWORD *)v137 + 5);
          v188 = *((_QWORD *)v137 + 6);
          v198 = *((_QWORD *)v137 + 7);
          v193 = v137[64];
          swift_bridgeObjectRetain(v138);
          sub_10003E1F0(v139, v140, v142, v141, v188, v198, v193);
          *((_QWORD *)v136 + 2) = v139;
          *((_QWORD *)v136 + 3) = v140;
          *((_QWORD *)v136 + 4) = v142;
          *((_QWORD *)v136 + 5) = v141;
          *((_QWORD *)v136 + 6) = v188;
          *((_QWORD *)v136 + 7) = v198;
          v136[64] = v193;
          *(_DWORD *)(v136 + 65) = *(_DWORD *)(v137 + 65);
          v143 = v137[120];
          if (v143 == 255)
          {
            v144 = *(_OWORD *)(v137 + 88);
            *(_OWORD *)(v136 + 72) = *(_OWORD *)(v137 + 72);
            *(_OWORD *)(v136 + 88) = v144;
            *(_OWORD *)(v136 + 104) = *(_OWORD *)(v137 + 104);
            v136[120] = v137[120];
          }
          else
          {
            v199 = v143 & 1;
            v149 = (void *)*((_QWORD *)v137 + 9);
            v148 = *((_QWORD *)v137 + 10);
            v150 = *((_QWORD *)v137 + 11);
            v151 = *((_QWORD *)v137 + 12);
            v189 = *((_QWORD *)v137 + 14);
            v194 = *((_QWORD *)v137 + 13);
            sub_10002B764(v149, v148, v150, v151, v194, v189, v143 & 1);
            *((_QWORD *)v136 + 9) = v149;
            *((_QWORD *)v136 + 10) = v148;
            *((_QWORD *)v136 + 11) = v150;
            *((_QWORD *)v136 + 12) = v151;
            *((_QWORD *)v136 + 13) = v194;
            *((_QWORD *)v136 + 14) = v189;
            v136[120] = v199;
          }
          a3 = v200;
          v136[121] = v137[121];
        }
        else
        {
          v145 = *((_OWORD *)v137 + 5);
          *((_OWORD *)v136 + 4) = *((_OWORD *)v137 + 4);
          *((_OWORD *)v136 + 5) = v145;
          *((_OWORD *)v136 + 6) = *((_OWORD *)v137 + 6);
          *(_OWORD *)(v136 + 106) = *(_OWORD *)(v137 + 106);
          v146 = *((_OWORD *)v137 + 1);
          *(_OWORD *)v136 = *(_OWORD *)v137;
          *((_OWORD *)v136 + 1) = v146;
          v147 = *((_OWORD *)v137 + 3);
          *((_OWORD *)v136 + 2) = *((_OWORD *)v137 + 2);
          *((_OWORD *)v136 + 3) = v147;
        }
        *((_BYTE *)a1 + v134[6]) = *((_BYTE *)a2 + v134[6]);
        *((_BYTE *)a1 + v134[7]) = *((_BYTE *)a2 + v134[7]);
        *((_BYTE *)a1 + v134[8]) = *((_BYTE *)a2 + v134[8]);
        *((_BYTE *)a1 + v134[9]) = *((_BYTE *)a2 + v134[9]);
        *((_BYTE *)a1 + v134[10]) = *((_BYTE *)a2 + v134[10]);
        v152 = v134[11];
        v153 = *(void **)((char *)a2 + v152);
        *(void **)((char *)a1 + v152) = v153;
        v154 = v153;
        v122 = a1;
        v123 = v6;
        v124 = 1;
LABEL_67:
        swift_storeEnumTagMultiPayload(v122, v123, v124);
        v7 = v201;
        break;
      case 2u:
        v202 = v7;
        v21 = *a2;
        *a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)((char *)a1 + v22);
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_76;
            case 2u:
              v155 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v23, v24, v155);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_76;
            case 3u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v23, v24, v156);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_76;
            case 4u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v23, v24, v157);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_76;
            case 5u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v23, v24, v158);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_76;
            case 6u:
              v159 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v23, v24, v159);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_76;
            case 8u:
              v160 = *v24;
              *v23 = *v24;
              v161 = v160;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_76;
            case 9u:
              v162 = *v24;
              *v23 = *v24;
              v163 = v162;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_76:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v7 = v202;
        v50 = a1;
        v51 = v6;
        v52 = 2;
        goto LABEL_101;
      case 3u:
        v203 = v7;
        v30 = *a2;
        *a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)((char *)a1 + v31);
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          v7 = v203;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_98;
            case 2u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v32, v33, v164);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_98;
            case 3u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v32, v33, v165);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_98;
            case 4u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v32, v33, v166);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_98;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v32, v33, v181);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_98;
            case 6u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v32, v33, v167);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_98;
            case 8u:
              v168 = *v33;
              *v32 = *v33;
              v169 = v168;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_98;
            case 9u:
              v170 = *v33;
              *v32 = *v33;
              v171 = v170;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_98:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          v7 = v203;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v6;
        v52 = 3;
        goto LABEL_101;
      case 4u:
        v204 = v7;
        v39 = *a2;
        *a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)((char *)a1 + v40);
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_94;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v41, v42, v172);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_94;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v41, v42, v173);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_94;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v41, v42, v174);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_94;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v41, v42, v175);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_94;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v41, v42, v176);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_94;
            case 8u:
              v177 = *v42;
              *v41 = *v42;
              v178 = v177;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_94;
            case 9u:
              v179 = *v42;
              *v41 = *v42;
              v180 = v179;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v7 = v204;
        v50 = a1;
        v51 = v6;
        v52 = 4;
        goto LABEL_101;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        a1[2] = v48;
        v49 = v48;
        v50 = a1;
        v51 = v6;
        v52 = 5;
        goto LABEL_101;
      case 6u:
        v60 = *a2;
        *a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v6;
        v52 = 6;
        goto LABEL_101;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v190 = (char *)a2 + v81;
          v195 = (char *)a1 + v81;
          v82 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v83 = v7;
          v84 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v82 - 8) + 16);
          v85 = swift_bridgeObjectRetain(v80);
          v84(v195, v190, v82, v85);
          v7 = v83;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v87 = (void **)((char *)a1 + v86);
        v88 = (void **)((char *)a2 + v86);
        v89 = v88[1];
        if (v89)
        {
          *v87 = *v88;
          v87[1] = v89;
          v90 = (void *)v88[2];
          v87[2] = v90;
          swift_bridgeObjectRetain(v89);
          v91 = v90;
        }
        else
        {
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v87[2] = v88[2];
        }
        v50 = a1;
        v51 = v6;
        v52 = 7;
        goto LABEL_101;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v62 + 20)) = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v50 = a1;
        v51 = v6;
        v52 = 8;
        goto LABEL_101;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v6;
        v52 = 9;
LABEL_101:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v182 = *(int *)(a3 + 24);
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *(void **)((char *)a1 + v182) = *(void **)((char *)a2 + v182);
  swift_retain();
  return a1;
}

void **sub_10020EDCC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void **v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(void **, uint64_t, uint64_t);
  id v105;
  uint64_t v106;
  void *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  id v117;
  void **v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t, __n128);
  __n128 v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void *v141;
  id v142;
  __int128 v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  void *v224;
  id v225;
  int *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void *v257;
  id v258;
  void *v259;
  id v260;
  int *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  void *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  id v332;
  void *v333;
  id v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  id v341;
  void *v342;
  id v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  id v350;
  void *v351;
  id v352;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  id v378;
  void *v379;
  id v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  int *v385;
  int *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unsigned __int8 v391;
  uint64_t v392;
  unsigned __int8 v393;
  uint64_t v394;
  int *v395;
  int *v396;
  char *v397;
  char *v398;
  uint64_t v399;
  char v400;
  uint64_t v401;
  char v402;
  unsigned __int8 v403;
  char v404;
  unsigned __int8 v405;
  char v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v407 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 1u:
              v12 = *a2;
              *a1 = *a2;
              v13 = v12;
              v14 = a1;
              v15 = v11;
              v16 = 1;
              goto LABEL_80;
            case 2u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
              v14 = a1;
              v15 = v11;
              v16 = 2;
              goto LABEL_80;
            case 3u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v14 = a1;
              v15 = v11;
              v16 = 3;
              goto LABEL_80;
            case 4u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v14 = a1;
              v15 = v11;
              v16 = 4;
              goto LABEL_80;
            case 5u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v14 = a1;
              v15 = v11;
              v16 = 5;
              goto LABEL_80;
            case 6u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v14 = a1;
              v15 = v11;
              v16 = 6;
              goto LABEL_80;
            case 8u:
              v187 = *a2;
              *a1 = *a2;
              v188 = v187;
              v14 = a1;
              v15 = v11;
              v16 = 8;
              goto LABEL_80;
            case 9u:
              v189 = *a2;
              *a1 = *a2;
              v190 = v189;
              v14 = a1;
              v15 = v11;
              v16 = 9;
LABEL_80:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v191 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v192 = v191[5];
          v193 = (char *)a1 + v192;
          v194 = (char *)a2 + v192;
          if (*(void **)((char *)a2 + v192 + 8))
          {
            v385 = v191;
            *(_QWORD *)v193 = *(_QWORD *)v194;
            v195 = *((_QWORD *)v194 + 1);
            *((_QWORD *)v193 + 1) = v195;
            v196 = (void *)*((_QWORD *)v194 + 2);
            v197 = *((_QWORD *)v194 + 3);
            v198 = *((_QWORD *)v194 + 4);
            v381 = *((_QWORD *)v194 + 5);
            v199 = *((_QWORD *)v194 + 6);
            v399 = *((_QWORD *)v194 + 7);
            v391 = v194[64];
            swift_bridgeObjectRetain(v195);
            sub_10003E1F0(v196, v197, v198, v381, v199, v399, v391);
            *((_QWORD *)v193 + 2) = v196;
            *((_QWORD *)v193 + 3) = v197;
            *((_QWORD *)v193 + 4) = v198;
            *((_QWORD *)v193 + 5) = v381;
            *((_QWORD *)v193 + 6) = v199;
            *((_QWORD *)v193 + 7) = v399;
            v193[64] = v391;
            v193[65] = v194[65];
            v193[66] = v194[66];
            v193[67] = v194[67];
            v193[68] = v194[68];
            v200 = v194[120];
            if (v200 == 255)
            {
              v201 = *(_OWORD *)(v194 + 72);
              v202 = *(_OWORD *)(v194 + 88);
              v203 = *(_OWORD *)(v194 + 104);
              v193[120] = v194[120];
              *(_OWORD *)(v193 + 88) = v202;
              *(_OWORD *)(v193 + 104) = v203;
              *(_OWORD *)(v193 + 72) = v201;
            }
            else
            {
              v400 = v200 & 1;
              v210 = (void *)*((_QWORD *)v194 + 9);
              v392 = *((_QWORD *)v194 + 10);
              v211 = *((_QWORD *)v194 + 11);
              v212 = *((_QWORD *)v194 + 12);
              v213 = *((_QWORD *)v194 + 13);
              v382 = *((_QWORD *)v194 + 14);
              sub_10002B764(v210, v392, v211, v212, v213, v382, v200 & 1);
              *((_QWORD *)v193 + 9) = v210;
              *((_QWORD *)v193 + 10) = v392;
              *((_QWORD *)v193 + 11) = v211;
              *((_QWORD *)v193 + 12) = v212;
              *((_QWORD *)v193 + 13) = v213;
              *((_QWORD *)v193 + 14) = v382;
              v193[120] = v400;
            }
            a3 = v407;
            v193[121] = v194[121];
            v191 = v385;
          }
          else
          {
            v204 = *(_OWORD *)v194;
            v205 = *((_OWORD *)v194 + 1);
            v206 = *((_OWORD *)v194 + 3);
            *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
            *((_OWORD *)v193 + 3) = v206;
            *(_OWORD *)v193 = v204;
            *((_OWORD *)v193 + 1) = v205;
            v207 = *((_OWORD *)v194 + 4);
            v208 = *((_OWORD *)v194 + 5);
            v209 = *((_OWORD *)v194 + 6);
            *(_OWORD *)(v193 + 106) = *(_OWORD *)(v194 + 106);
            *((_OWORD *)v193 + 5) = v208;
            *((_OWORD *)v193 + 6) = v209;
            *((_OWORD *)v193 + 4) = v207;
          }
          *((_BYTE *)a1 + v191[6]) = *((_BYTE *)a2 + v191[6]);
          *((_BYTE *)a1 + v191[7]) = *((_BYTE *)a2 + v191[7]);
          *((_BYTE *)a1 + v191[8]) = *((_BYTE *)a2 + v191[8]);
          *((_BYTE *)a1 + v191[9]) = *((_BYTE *)a2 + v191[9]);
          *((_BYTE *)a1 + v191[10]) = *((_BYTE *)a2 + v191[10]);
          v214 = v191[11];
          v215 = *(void **)((char *)a2 + v214);
          *(void **)((char *)a1 + v214) = v215;
          v216 = v215;
          v59 = a1;
          v60 = v6;
          v61 = 0;
          goto LABEL_169;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v409 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 1u:
              v25 = *a2;
              *a1 = *a2;
              v26 = v25;
              v27 = a1;
              v28 = v24;
              v29 = 1;
              goto LABEL_96;
            case 2u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v27 = a1;
              v28 = v24;
              v29 = 2;
              goto LABEL_96;
            case 3u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v27 = a1;
              v28 = v24;
              v29 = 3;
              goto LABEL_96;
            case 4u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v27 = a1;
              v28 = v24;
              v29 = 4;
              goto LABEL_96;
            case 5u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
              v27 = a1;
              v28 = v24;
              v29 = 5;
              goto LABEL_96;
            case 6u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v27 = a1;
              v28 = v24;
              v29 = 6;
              goto LABEL_96;
            case 8u:
              v222 = *a2;
              *a1 = *a2;
              v223 = v222;
              v27 = a1;
              v28 = v24;
              v29 = 8;
              goto LABEL_96;
            case 9u:
              v224 = *a2;
              *a1 = *a2;
              v225 = v224;
              v27 = a1;
              v28 = v24;
              v29 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v27, v28, v29);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v226 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v227 = v226[5];
          v228 = (char *)a1 + v227;
          v229 = (char *)a2 + v227;
          if (*(void **)((char *)a2 + v227 + 8))
          {
            v386 = v226;
            *(_QWORD *)v228 = *(_QWORD *)v229;
            v230 = *((_QWORD *)v229 + 1);
            *((_QWORD *)v228 + 1) = v230;
            v231 = (void *)*((_QWORD *)v229 + 2);
            v232 = *((_QWORD *)v229 + 3);
            v233 = *((_QWORD *)v229 + 4);
            v383 = *((_QWORD *)v229 + 5);
            v234 = *((_QWORD *)v229 + 6);
            v401 = *((_QWORD *)v229 + 7);
            v393 = v229[64];
            swift_bridgeObjectRetain(v230);
            sub_10003E1F0(v231, v232, v233, v383, v234, v401, v393);
            *((_QWORD *)v228 + 2) = v231;
            *((_QWORD *)v228 + 3) = v232;
            *((_QWORD *)v228 + 4) = v233;
            *((_QWORD *)v228 + 5) = v383;
            *((_QWORD *)v228 + 6) = v234;
            *((_QWORD *)v228 + 7) = v401;
            v228[64] = v393;
            v228[65] = v229[65];
            v228[66] = v229[66];
            v228[67] = v229[67];
            v228[68] = v229[68];
            v235 = v229[120];
            if (v235 == 255)
            {
              v236 = *(_OWORD *)(v229 + 72);
              v237 = *(_OWORD *)(v229 + 88);
              v238 = *(_OWORD *)(v229 + 104);
              v228[120] = v229[120];
              *(_OWORD *)(v228 + 88) = v237;
              *(_OWORD *)(v228 + 104) = v238;
              *(_OWORD *)(v228 + 72) = v236;
            }
            else
            {
              v402 = v235 & 1;
              v245 = (void *)*((_QWORD *)v229 + 9);
              v394 = *((_QWORD *)v229 + 10);
              v246 = *((_QWORD *)v229 + 11);
              v247 = *((_QWORD *)v229 + 12);
              v248 = *((_QWORD *)v229 + 13);
              v384 = *((_QWORD *)v229 + 14);
              sub_10002B764(v245, v394, v246, v247, v248, v384, v235 & 1);
              *((_QWORD *)v228 + 9) = v245;
              *((_QWORD *)v228 + 10) = v394;
              *((_QWORD *)v228 + 11) = v246;
              *((_QWORD *)v228 + 12) = v247;
              *((_QWORD *)v228 + 13) = v248;
              *((_QWORD *)v228 + 14) = v384;
              v228[120] = v402;
            }
            a3 = v409;
            v228[121] = v229[121];
            v226 = v386;
          }
          else
          {
            v239 = *(_OWORD *)v229;
            v240 = *((_OWORD *)v229 + 1);
            v241 = *((_OWORD *)v229 + 3);
            *((_OWORD *)v228 + 2) = *((_OWORD *)v229 + 2);
            *((_OWORD *)v228 + 3) = v241;
            *(_OWORD *)v228 = v239;
            *((_OWORD *)v228 + 1) = v240;
            v242 = *((_OWORD *)v229 + 4);
            v243 = *((_OWORD *)v229 + 5);
            v244 = *((_OWORD *)v229 + 6);
            *(_OWORD *)(v228 + 106) = *(_OWORD *)(v229 + 106);
            *((_OWORD *)v228 + 5) = v243;
            *((_OWORD *)v228 + 6) = v244;
            *((_OWORD *)v228 + 4) = v242;
          }
          *((_BYTE *)a1 + v226[6]) = *((_BYTE *)a2 + v226[6]);
          *((_BYTE *)a1 + v226[7]) = *((_BYTE *)a2 + v226[7]);
          *((_BYTE *)a1 + v226[8]) = *((_BYTE *)a2 + v226[8]);
          *((_BYTE *)a1 + v226[9]) = *((_BYTE *)a2 + v226[9]);
          *((_BYTE *)a1 + v226[10]) = *((_BYTE *)a2 + v226[10]);
          v249 = v226[11];
          v250 = *(void **)((char *)a2 + v249);
          *(void **)((char *)a1 + v249) = v250;
          v251 = v250;
          v59 = a1;
          v60 = v6;
          v61 = 1;
          goto LABEL_169;
        case 2u:
          v410 = a3;
          v30 = *a2;
          *a1 = *a2;
          v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v32 = (void **)((char *)a1 + v31);
          v33 = (void **)((char *)a2 + v31);
          v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
          v37 = v30;
          if (v36(v33, 1, v34))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            a3 = v410;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v33, v34))
            {
              case 1u:
                v116 = *v33;
                *v32 = *v33;
                v117 = v116;
                v118 = v32;
                v119 = v34;
                v120 = 1;
                goto LABEL_144;
              case 2u:
                v326 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v32, v33, v326);
                v118 = v32;
                v119 = v34;
                v120 = 2;
                goto LABEL_144;
              case 3u:
                v327 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v32, v33, v327);
                v118 = v32;
                v119 = v34;
                v120 = 3;
                goto LABEL_144;
              case 4u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v32, v33, v328);
                v118 = v32;
                v119 = v34;
                v120 = 4;
                goto LABEL_144;
              case 5u:
                v329 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v32, v33, v329);
                v118 = v32;
                v119 = v34;
                v120 = 5;
                goto LABEL_144;
              case 6u:
                v330 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v32, v33, v330);
                v118 = v32;
                v119 = v34;
                v120 = 6;
                goto LABEL_144;
              case 8u:
                v331 = *v33;
                *v32 = *v33;
                v332 = v331;
                v118 = v32;
                v119 = v34;
                v120 = 8;
                goto LABEL_144;
              case 9u:
                v333 = *v33;
                *v32 = *v33;
                v334 = v333;
                v118 = v32;
                v119 = v34;
                v120 = 9;
LABEL_144:
                swift_storeEnumTagMultiPayload(v118, v119, v120);
                break;
              default:
                memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                break;
            }
            a3 = v410;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          v59 = a1;
          v60 = v6;
          v61 = 2;
          goto LABEL_169;
        case 3u:
          v411 = a3;
          v39 = *a2;
          *a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (void **)((char *)a1 + v40);
          v42 = (void **)((char *)a2 + v40);
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
          v46 = v39;
          if (v45(v42, 1, v43))
          {
            v47 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
            a3 = v411;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 1u:
                v121 = *v42;
                *v41 = *v42;
                v122 = v121;
                v123 = v41;
                v124 = v43;
                v125 = 1;
                goto LABEL_155;
              case 2u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v41, v42, v335);
                v123 = v41;
                v124 = v43;
                v125 = 2;
                goto LABEL_155;
              case 3u:
                v336 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v336 - 8) + 16))(v41, v42, v336);
                v123 = v41;
                v124 = v43;
                v125 = 3;
                goto LABEL_155;
              case 4u:
                v337 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v41, v42, v337);
                v123 = v41;
                v124 = v43;
                v125 = 4;
                goto LABEL_155;
              case 5u:
                v338 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v41, v42, v338);
                v123 = v41;
                v124 = v43;
                v125 = 5;
                goto LABEL_155;
              case 6u:
                v339 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v41, v42, v339);
                v123 = v41;
                v124 = v43;
                v125 = 6;
                goto LABEL_155;
              case 8u:
                v340 = *v42;
                *v41 = *v42;
                v341 = v340;
                v123 = v41;
                v124 = v43;
                v125 = 8;
                goto LABEL_155;
              case 9u:
                v342 = *v42;
                *v41 = *v42;
                v343 = v342;
                v123 = v41;
                v124 = v43;
                v125 = 9;
LABEL_155:
                swift_storeEnumTagMultiPayload(v123, v124, v125);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            a3 = v411;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v59 = a1;
          v60 = v6;
          v61 = 3;
          goto LABEL_169;
        case 4u:
          v412 = a3;
          v48 = *a2;
          *a1 = *a2;
          v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v50 = (void **)((char *)a1 + v49);
          v51 = (void **)((char *)a2 + v49);
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v53 = *(_QWORD *)(v52 - 8);
          v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
          v55 = v48;
          if (v54(v51, 1, v52))
          {
            v56 = sub_10002A750(&qword_100644980);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
            a3 = v412;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v51, v52))
            {
              case 1u:
                v126 = *v51;
                *v50 = *v51;
                v127 = v126;
                v128 = v50;
                v129 = v52;
                v130 = 1;
                goto LABEL_166;
              case 2u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v50, v51, v344);
                v128 = v50;
                v129 = v52;
                v130 = 2;
                goto LABEL_166;
              case 3u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v50, v51, v345);
                v128 = v50;
                v129 = v52;
                v130 = 3;
                goto LABEL_166;
              case 4u:
                v346 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v50, v51, v346);
                v128 = v50;
                v129 = v52;
                v130 = 4;
                goto LABEL_166;
              case 5u:
                v347 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v50, v51, v347);
                v128 = v50;
                v129 = v52;
                v130 = 5;
                goto LABEL_166;
              case 6u:
                v348 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v50, v51, v348);
                v128 = v50;
                v129 = v52;
                v130 = 6;
                goto LABEL_166;
              case 8u:
                v349 = *v51;
                *v50 = *v51;
                v350 = v349;
                v128 = v50;
                v129 = v52;
                v130 = 8;
                goto LABEL_166;
              case 9u:
                v351 = *v51;
                *v50 = *v51;
                v352 = v351;
                v128 = v50;
                v129 = v52;
                v130 = 9;
LABEL_166:
                swift_storeEnumTagMultiPayload(v128, v129, v130);
                break;
              default:
                memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                break;
            }
            a3 = v412;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v59 = a1;
          v60 = v6;
          v61 = 4;
          goto LABEL_169;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v57 = a2[2];
          a1[2] = v57;
          v58 = v57;
          v59 = a1;
          v60 = v6;
          v61 = 5;
          goto LABEL_169;
        case 6u:
          v69 = *a2;
          *a1 = *a2;
          v70 = v69;
          v59 = a1;
          v60 = v6;
          v61 = 6;
          goto LABEL_169;
        case 7u:
          v413 = a3;
          v62 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
          {
            v64 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            v131 = *a2;
            *a1 = *a2;
            v132 = *(int *)(v62 + 20);
            v133 = (char *)a1 + v132;
            v397 = (char *)a2 + v132;
            v134 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v135 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v134 - 8) + 16);
            v136 = swift_bridgeObjectRetain(v131);
            v135(v133, v397, v134, v136);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
          }
          v137 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v138 = (void **)((char *)a1 + v137);
          v139 = (void **)((char *)a2 + v137);
          a3 = v413;
          if (v139[1])
          {
            *v138 = *v139;
            v140 = v139[1];
            v138[1] = v140;
            v141 = (void *)v139[2];
            v138[2] = v141;
            swift_bridgeObjectRetain(v140);
            v142 = v141;
          }
          else
          {
            v143 = *(_OWORD *)v139;
            v138[2] = v139[2];
            *(_OWORD *)v138 = v143;
          }
          v59 = a1;
          v60 = v6;
          v61 = 7;
          goto LABEL_169;
        case 8u:
          v71 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v72 + 48))(a2, 1, v71))
          {
            v73 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v149 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
            *((_BYTE *)a1 + *(int *)(v71 + 20)) = *((_BYTE *)a2 + *(int *)(v71 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v72 + 56))(a1, 0, 1, v71);
          }
          v150 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v150 + 20)) = *(void **)((char *)a2 + *(int *)(v150 + 20));
          v59 = a1;
          v60 = v6;
          v61 = 8;
          goto LABEL_169;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v65 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v66 = (char *)a1 + v65;
          v67 = (char *)a2 + v65;
          v68 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
          v59 = a1;
          v60 = v6;
          v61 = 9;
LABEL_169:
          swift_storeEnumTagMultiPayload(v59, v60, v61);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_171;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EB0) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v17);
    goto LABEL_171;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v408 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v18))
        {
          case 1u:
            v19 = *a2;
            *a1 = *a2;
            v20 = v19;
            v21 = a1;
            v22 = v18;
            v23 = 1;
            goto LABEL_112;
          case 2u:
            v252 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(a1, a2, v252);
            v21 = a1;
            v22 = v18;
            v23 = 2;
            goto LABEL_112;
          case 3u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(a1, a2, v253);
            v21 = a1;
            v22 = v18;
            v23 = 3;
            goto LABEL_112;
          case 4u:
            v254 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(a1, a2, v254);
            v21 = a1;
            v22 = v18;
            v23 = 4;
            goto LABEL_112;
          case 5u:
            v255 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(a1, a2, v255);
            v21 = a1;
            v22 = v18;
            v23 = 5;
            goto LABEL_112;
          case 6u:
            v256 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(a1, a2, v256);
            v21 = a1;
            v22 = v18;
            v23 = 6;
            goto LABEL_112;
          case 8u:
            v257 = *a2;
            *a1 = *a2;
            v258 = v257;
            v21 = a1;
            v22 = v18;
            v23 = 8;
            goto LABEL_112;
          case 9u:
            v259 = *a2;
            *a1 = *a2;
            v260 = v259;
            v21 = a1;
            v22 = v18;
            v23 = 9;
LABEL_112:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v261 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v262 = v261[5];
        v263 = (char *)a1 + v262;
        v264 = (char *)a2 + v262;
        if (*(void **)((char *)a2 + v262 + 8))
        {
          v395 = v261;
          *(_QWORD *)v263 = *(_QWORD *)v264;
          v265 = *((_QWORD *)v264 + 1);
          *((_QWORD *)v263 + 1) = v265;
          v266 = (void *)*((_QWORD *)v264 + 2);
          v267 = *((_QWORD *)v264 + 3);
          v268 = *((_QWORD *)v264 + 4);
          v269 = *((_QWORD *)v264 + 5);
          v270 = *((_QWORD *)v264 + 7);
          v387 = *((_QWORD *)v264 + 6);
          v403 = v264[64];
          swift_bridgeObjectRetain(v265);
          sub_10003E1F0(v266, v267, v268, v269, v387, v270, v403);
          *((_QWORD *)v263 + 2) = v266;
          *((_QWORD *)v263 + 3) = v267;
          *((_QWORD *)v263 + 4) = v268;
          *((_QWORD *)v263 + 5) = v269;
          *((_QWORD *)v263 + 6) = v387;
          *((_QWORD *)v263 + 7) = v270;
          v263[64] = v403;
          v263[65] = v264[65];
          v263[66] = v264[66];
          v263[67] = v264[67];
          v263[68] = v264[68];
          v271 = v264[120];
          if (v271 == 255)
          {
            v272 = *(_OWORD *)(v264 + 72);
            v273 = *(_OWORD *)(v264 + 88);
            v274 = *(_OWORD *)(v264 + 104);
            v263[120] = v264[120];
            *(_OWORD *)(v263 + 88) = v273;
            *(_OWORD *)(v263 + 104) = v274;
            *(_OWORD *)(v263 + 72) = v272;
          }
          else
          {
            v404 = v271 & 1;
            v281 = (void *)*((_QWORD *)v264 + 9);
            v282 = *((_QWORD *)v264 + 10);
            v283 = *((_QWORD *)v264 + 11);
            v284 = *((_QWORD *)v264 + 12);
            v285 = *((_QWORD *)v264 + 13);
            v388 = *((_QWORD *)v264 + 14);
            sub_10002B764(v281, v282, v283, v284, v285, v388, v271 & 1);
            *((_QWORD *)v263 + 9) = v281;
            *((_QWORD *)v263 + 10) = v282;
            *((_QWORD *)v263 + 11) = v283;
            *((_QWORD *)v263 + 12) = v284;
            *((_QWORD *)v263 + 13) = v285;
            *((_QWORD *)v263 + 14) = v388;
            v263[120] = v404;
          }
          a3 = v408;
          v263[121] = v264[121];
          v261 = v395;
        }
        else
        {
          v275 = *(_OWORD *)v264;
          v276 = *((_OWORD *)v264 + 1);
          v277 = *((_OWORD *)v264 + 3);
          *((_OWORD *)v263 + 2) = *((_OWORD *)v264 + 2);
          *((_OWORD *)v263 + 3) = v277;
          *(_OWORD *)v263 = v275;
          *((_OWORD *)v263 + 1) = v276;
          v278 = *((_OWORD *)v264 + 4);
          v279 = *((_OWORD *)v264 + 5);
          v280 = *((_OWORD *)v264 + 6);
          *(_OWORD *)(v263 + 106) = *(_OWORD *)(v264 + 106);
          *((_OWORD *)v263 + 5) = v279;
          *((_OWORD *)v263 + 6) = v280;
          *((_OWORD *)v263 + 4) = v278;
        }
        *((_BYTE *)a1 + v261[6]) = *((_BYTE *)a2 + v261[6]);
        *((_BYTE *)a1 + v261[7]) = *((_BYTE *)a2 + v261[7]);
        *((_BYTE *)a1 + v261[8]) = *((_BYTE *)a2 + v261[8]);
        *((_BYTE *)a1 + v261[9]) = *((_BYTE *)a2 + v261[9]);
        *((_BYTE *)a1 + v261[10]) = *((_BYTE *)a2 + v261[10]);
        v286 = v261[11];
        v287 = *(void **)((char *)a2 + v286);
        *(void **)((char *)a1 + v286) = v287;
        v288 = v287;
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v414 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v74))
        {
          case 1u:
            v75 = *a2;
            *a1 = *a2;
            v76 = v75;
            v77 = a1;
            v78 = v74;
            v79 = 1;
            goto LABEL_128;
          case 2u:
            v289 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
            v77 = a1;
            v78 = v74;
            v79 = 2;
            goto LABEL_128;
          case 3u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
            v77 = a1;
            v78 = v74;
            v79 = 3;
            goto LABEL_128;
          case 4u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(a1, a2, v291);
            v77 = a1;
            v78 = v74;
            v79 = 4;
            goto LABEL_128;
          case 5u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(a1, a2, v292);
            v77 = a1;
            v78 = v74;
            v79 = 5;
            goto LABEL_128;
          case 6u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(a1, a2, v293);
            v77 = a1;
            v78 = v74;
            v79 = 6;
            goto LABEL_128;
          case 8u:
            v294 = *a2;
            *a1 = *a2;
            v295 = v294;
            v77 = a1;
            v78 = v74;
            v79 = 8;
            goto LABEL_128;
          case 9u:
            v296 = *a2;
            *a1 = *a2;
            v297 = v296;
            v77 = a1;
            v78 = v74;
            v79 = 9;
LABEL_128:
            swift_storeEnumTagMultiPayload(v77, v78, v79);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
            break;
        }
        v298 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v299 = v298[5];
        v300 = (char *)a1 + v299;
        v301 = (char *)a2 + v299;
        if (*(void **)((char *)a2 + v299 + 8))
        {
          v396 = v298;
          *(_QWORD *)v300 = *(_QWORD *)v301;
          v302 = *((_QWORD *)v301 + 1);
          *((_QWORD *)v300 + 1) = v302;
          v303 = (void *)*((_QWORD *)v301 + 2);
          v304 = *((_QWORD *)v301 + 3);
          v305 = *((_QWORD *)v301 + 4);
          v306 = *((_QWORD *)v301 + 5);
          v307 = *((_QWORD *)v301 + 7);
          v389 = *((_QWORD *)v301 + 6);
          v405 = v301[64];
          swift_bridgeObjectRetain(v302);
          sub_10003E1F0(v303, v304, v305, v306, v389, v307, v405);
          *((_QWORD *)v300 + 2) = v303;
          *((_QWORD *)v300 + 3) = v304;
          *((_QWORD *)v300 + 4) = v305;
          *((_QWORD *)v300 + 5) = v306;
          *((_QWORD *)v300 + 6) = v389;
          *((_QWORD *)v300 + 7) = v307;
          v300[64] = v405;
          v300[65] = v301[65];
          v300[66] = v301[66];
          v300[67] = v301[67];
          v300[68] = v301[68];
          v308 = v301[120];
          if (v308 == 255)
          {
            v309 = *(_OWORD *)(v301 + 72);
            v310 = *(_OWORD *)(v301 + 88);
            v311 = *(_OWORD *)(v301 + 104);
            v300[120] = v301[120];
            *(_OWORD *)(v300 + 88) = v310;
            *(_OWORD *)(v300 + 104) = v311;
            *(_OWORD *)(v300 + 72) = v309;
          }
          else
          {
            v406 = v308 & 1;
            v318 = (void *)*((_QWORD *)v301 + 9);
            v319 = *((_QWORD *)v301 + 10);
            v320 = *((_QWORD *)v301 + 11);
            v321 = *((_QWORD *)v301 + 12);
            v322 = *((_QWORD *)v301 + 13);
            v390 = *((_QWORD *)v301 + 14);
            sub_10002B764(v318, v319, v320, v321, v322, v390, v308 & 1);
            *((_QWORD *)v300 + 9) = v318;
            *((_QWORD *)v300 + 10) = v319;
            *((_QWORD *)v300 + 11) = v320;
            *((_QWORD *)v300 + 12) = v321;
            *((_QWORD *)v300 + 13) = v322;
            *((_QWORD *)v300 + 14) = v390;
            v300[120] = v406;
          }
          a3 = v414;
          v300[121] = v301[121];
          v298 = v396;
        }
        else
        {
          v312 = *(_OWORD *)v301;
          v313 = *((_OWORD *)v301 + 1);
          v314 = *((_OWORD *)v301 + 3);
          *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
          *((_OWORD *)v300 + 3) = v314;
          *(_OWORD *)v300 = v312;
          *((_OWORD *)v300 + 1) = v313;
          v315 = *((_OWORD *)v301 + 4);
          v316 = *((_OWORD *)v301 + 5);
          v317 = *((_OWORD *)v301 + 6);
          *(_OWORD *)(v300 + 106) = *(_OWORD *)(v301 + 106);
          *((_OWORD *)v300 + 5) = v316;
          *((_OWORD *)v300 + 6) = v317;
          *((_OWORD *)v300 + 4) = v315;
        }
        *((_BYTE *)a1 + v298[6]) = *((_BYTE *)a2 + v298[6]);
        *((_BYTE *)a1 + v298[7]) = *((_BYTE *)a2 + v298[7]);
        *((_BYTE *)a1 + v298[8]) = *((_BYTE *)a2 + v298[8]);
        *((_BYTE *)a1 + v298[9]) = *((_BYTE *)a2 + v298[9]);
        *((_BYTE *)a1 + v298[10]) = *((_BYTE *)a2 + v298[10]);
        v323 = v298[11];
        v324 = *(void **)((char *)a2 + v323);
        *(void **)((char *)a1 + v323) = v324;
        v325 = v324;
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        v80 = *a2;
        *a1 = *a2;
        v81 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v82 = (void **)((char *)a1 + v81);
        v83 = (void **)((char *)a2 + v81);
        v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
        v87 = v80;
        if (v86(v83, 1, v84))
        {
          v88 = sub_10002A750(&qword_100644980);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v83, v84))
          {
            case 1u:
              v151 = *v83;
              *v82 = *v83;
              v152 = v151;
              v153 = v82;
              v154 = v84;
              v155 = 1;
              goto LABEL_180;
            case 2u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v82, v83, v354);
              v153 = v82;
              v154 = v84;
              v155 = 2;
              goto LABEL_180;
            case 3u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v82, v83, v355);
              v153 = v82;
              v154 = v84;
              v155 = 3;
              goto LABEL_180;
            case 4u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v82, v83, v356);
              v153 = v82;
              v154 = v84;
              v155 = 4;
              goto LABEL_180;
            case 5u:
              v357 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v82, v83, v357);
              v153 = v82;
              v154 = v84;
              v155 = 5;
              goto LABEL_180;
            case 6u:
              v358 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v82, v83, v358);
              v153 = v82;
              v154 = v84;
              v155 = 6;
              goto LABEL_180;
            case 8u:
              v359 = *v83;
              *v82 = *v83;
              v360 = v359;
              v153 = v82;
              v154 = v84;
              v155 = 8;
              goto LABEL_180;
            case 9u:
              v361 = *v83;
              *v82 = *v83;
              v362 = v361;
              v153 = v82;
              v154 = v84;
              v155 = 9;
LABEL_180:
              swift_storeEnumTagMultiPayload(v153, v154, v155);
              break;
            default:
              memcpy(v82, v83, *(_QWORD *)(v85 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        v89 = *a2;
        *a1 = *a2;
        v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v91 = (void **)((char *)a1 + v90);
        v92 = (void **)((char *)a2 + v90);
        v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v94 = *(_QWORD *)(v93 - 8);
        v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
        v96 = v89;
        if (v95(v92, 1, v93))
        {
          v97 = sub_10002A750(&qword_100644980);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v92, v93))
          {
            case 1u:
              v156 = *v92;
              *v91 = *v92;
              v157 = v156;
              v158 = v91;
              v159 = v93;
              v160 = 1;
              goto LABEL_191;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v91, v92, v363);
              v158 = v91;
              v159 = v93;
              v160 = 2;
              goto LABEL_191;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v91, v92, v364);
              v158 = v91;
              v159 = v93;
              v160 = 3;
              goto LABEL_191;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v91, v92, v365);
              v158 = v91;
              v159 = v93;
              v160 = 4;
              goto LABEL_191;
            case 5u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v91, v92, v366);
              v158 = v91;
              v159 = v93;
              v160 = 5;
              goto LABEL_191;
            case 6u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v91, v92, v367);
              v158 = v91;
              v159 = v93;
              v160 = 6;
              goto LABEL_191;
            case 8u:
              v368 = *v92;
              *v91 = *v92;
              v369 = v368;
              v158 = v91;
              v159 = v93;
              v160 = 8;
              goto LABEL_191;
            case 9u:
              v370 = *v92;
              *v91 = *v92;
              v371 = v370;
              v158 = v91;
              v159 = v93;
              v160 = 9;
LABEL_191:
              swift_storeEnumTagMultiPayload(v158, v159, v160);
              break;
            default:
              memcpy(v91, v92, *(_QWORD *)(v94 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        v98 = *a2;
        *a1 = *a2;
        v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v100 = (void **)((char *)a1 + v99);
        v101 = (void **)((char *)a2 + v99);
        v102 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v103 = *(_QWORD *)(v102 - 8);
        v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48);
        v105 = v98;
        if (v104(v101, 1, v102))
        {
          v106 = sub_10002A750(&qword_100644980);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v101, v102))
          {
            case 1u:
              v161 = *v101;
              *v100 = *v101;
              v162 = v161;
              v163 = v100;
              v164 = v102;
              v165 = 1;
              goto LABEL_202;
            case 2u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v100, v101, v372);
              v163 = v100;
              v164 = v102;
              v165 = 2;
              goto LABEL_202;
            case 3u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v100, v101, v373);
              v163 = v100;
              v164 = v102;
              v165 = 3;
              goto LABEL_202;
            case 4u:
              v374 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v100, v101, v374);
              v163 = v100;
              v164 = v102;
              v165 = 4;
              goto LABEL_202;
            case 5u:
              v375 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v100, v101, v375);
              v163 = v100;
              v164 = v102;
              v165 = 5;
              goto LABEL_202;
            case 6u:
              v376 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v100, v101, v376);
              v163 = v100;
              v164 = v102;
              v165 = 6;
              goto LABEL_202;
            case 8u:
              v377 = *v101;
              *v100 = *v101;
              v378 = v377;
              v163 = v100;
              v164 = v102;
              v165 = 8;
              goto LABEL_202;
            case 9u:
              v379 = *v101;
              *v100 = *v101;
              v380 = v379;
              v163 = v100;
              v164 = v102;
              v165 = 9;
LABEL_202:
              swift_storeEnumTagMultiPayload(v163, v164, v165);
              break;
            default:
              memcpy(v100, v101, *(_QWORD *)(v103 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v107 = a2[2];
        a1[2] = v107;
        v108 = v107;
        swift_storeEnumTagMultiPayload(a1, v6, 5);
        break;
      case 6u:
        v144 = *a2;
        *a1 = *a2;
        v145 = v144;
        swift_storeEnumTagMultiPayload(a1, v6, 6);
        break;
      case 7u:
        v109 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
        {
          v111 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v166 = *a2;
          *a1 = *a2;
          v167 = *(int *)(v109 + 20);
          v398 = (char *)a1 + v167;
          v168 = (char *)a2 + v167;
          v169 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v170 = a3;
          v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v169 - 8) + 16);
          v172 = swift_bridgeObjectRetain(v166);
          v171(v398, v168, v169, v172);
          a3 = v170;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
        }
        v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v174 = (void **)((char *)a1 + v173);
        v175 = (void **)((char *)a2 + v173);
        if (v175[1])
        {
          *v174 = *v175;
          v176 = v175[1];
          v174[1] = v176;
          v177 = (void *)v175[2];
          v174[2] = v177;
          swift_bridgeObjectRetain(v176);
          v178 = v177;
        }
        else
        {
          v179 = *(_OWORD *)v175;
          v174[2] = v175[2];
          *(_OWORD *)v174 = v179;
        }
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v146 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v147 = *(_QWORD *)(v146 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v147 + 48))(a2, 1, v146))
        {
          v148 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          v180 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(a1, a2, v180);
          *((_BYTE *)a1 + *(int *)(v146 + 20)) = *((_BYTE *)a2 + *(int *)(v146 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v147 + 56))(a1, 0, 1, v146);
        }
        v181 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v181 + 20)) = *(void **)((char *)a2 + *(int *)(v181 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v112 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v17 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
LABEL_171:
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_100210E9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  _OWORD *v86;
  _OWORD *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 2u:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
            v11 = a1;
            v12 = v9;
            v13 = 2;
            goto LABEL_35;
          case 3u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
            v11 = a1;
            v12 = v9;
            v13 = 3;
            goto LABEL_35;
          case 4u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v11 = a1;
            v12 = v9;
            v13 = 4;
            goto LABEL_35;
          case 5u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v11 = a1;
            v12 = v9;
            v13 = 5;
            goto LABEL_35;
          case 6u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v11 = a1;
            v12 = v9;
            v13 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
            break;
        }
        v72 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v73 = v72[5];
        v74 = (_OWORD *)((char *)a1 + v73);
        v75 = (_OWORD *)((char *)a2 + v73);
        v76 = v75[3];
        v74[2] = v75[2];
        v74[3] = v76;
        v77 = v75[1];
        *v74 = *v75;
        v74[1] = v77;
        *(_OWORD *)((char *)v74 + 106) = *(_OWORD *)((char *)v75 + 106);
        v78 = v75[6];
        v79 = v75[4];
        v74[5] = v75[5];
        v74[6] = v78;
        v74[4] = v79;
        *((_BYTE *)a1 + v72[6]) = *((_BYTE *)a2 + v72[6]);
        *((_BYTE *)a1 + v72[7]) = *((_BYTE *)a2 + v72[7]);
        *((_BYTE *)a1 + v72[8]) = *((_BYTE *)a2 + v72[8]);
        *((_BYTE *)a1 + v72[9]) = *((_BYTE *)a2 + v72[9]);
        *((_BYTE *)a1 + v72[10]) = *((_BYTE *)a2 + v72[10]);
        *(_QWORD *)((char *)a1 + v72[11]) = *(_QWORD *)((char *)a2 + v72[11]);
        v47 = a1;
        v48 = v6;
        v49 = 0;
        goto LABEL_67;
      case 1u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 2u:
            v15 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
            v16 = a1;
            v17 = v14;
            v18 = 2;
            goto LABEL_42;
          case 3u:
            v80 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
            v16 = a1;
            v17 = v14;
            v18 = 3;
            goto LABEL_42;
          case 4u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v16 = a1;
            v17 = v14;
            v18 = 4;
            goto LABEL_42;
          case 5u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v16 = a1;
            v17 = v14;
            v18 = 5;
            goto LABEL_42;
          case 6u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v16 = a1;
            v17 = v14;
            v18 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v85 = v84[5];
        v86 = (_OWORD *)((char *)a1 + v85);
        v87 = (_OWORD *)((char *)a2 + v85);
        v88 = v87[3];
        v86[2] = v87[2];
        v86[3] = v88;
        v89 = v87[1];
        *v86 = *v87;
        v86[1] = v89;
        *(_OWORD *)((char *)v86 + 106) = *(_OWORD *)((char *)v87 + 106);
        v90 = v87[6];
        v91 = v87[4];
        v86[5] = v87[5];
        v86[6] = v90;
        v86[4] = v91;
        *((_BYTE *)a1 + v84[6]) = *((_BYTE *)a2 + v84[6]);
        *((_BYTE *)a1 + v84[7]) = *((_BYTE *)a2 + v84[7]);
        *((_BYTE *)a1 + v84[8]) = *((_BYTE *)a2 + v84[8]);
        *((_BYTE *)a1 + v84[9]) = *((_BYTE *)a2 + v84[9]);
        *((_BYTE *)a1 + v84[10]) = *((_BYTE *)a2 + v84[10]);
        *(_QWORD *)((char *)a1 + v84[11]) = *(_QWORD *)((char *)a2 + v84[11]);
        v47 = a1;
        v48 = v6;
        v49 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          v24 = sub_10002A750(&qword_100644980);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v21, v22))
          {
            case 2u:
              v50 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v20, v21, v50);
              v51 = v20;
              v52 = v22;
              v53 = 2;
              goto LABEL_49;
            case 3u:
              v92 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v20, v21, v92);
              v51 = v20;
              v52 = v22;
              v53 = 3;
              goto LABEL_49;
            case 4u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v20, v21, v93);
              v51 = v20;
              v52 = v22;
              v53 = 4;
              goto LABEL_49;
            case 5u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v20, v21, v94);
              v51 = v20;
              v52 = v22;
              v53 = 5;
              goto LABEL_49;
            case 6u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v20, v21, v95);
              v51 = v20;
              v52 = v22;
              v53 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v51, v52, v53);
              break;
            default:
              memcpy(v20, v21, *(_QWORD *)(v23 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v47 = a1;
        v48 = v6;
        v49 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_10002A750(&qword_100644980);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v27, v28))
          {
            case 2u:
              v54 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v26, v27, v54);
              v55 = v26;
              v56 = v28;
              v57 = 2;
              goto LABEL_57;
            case 3u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v26, v27, v96);
              v55 = v26;
              v56 = v28;
              v57 = 3;
              goto LABEL_57;
            case 4u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v26, v27, v97);
              v55 = v26;
              v56 = v28;
              v57 = 4;
              goto LABEL_57;
            case 5u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v26, v27, v98);
              v55 = v26;
              v56 = v28;
              v57 = 5;
              goto LABEL_57;
            case 6u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v26, v27, v99);
              v55 = v26;
              v56 = v28;
              v57 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v55, v56, v57);
              break;
            default:
              memcpy(v26, v27, *(_QWORD *)(v29 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v47 = a1;
        v48 = v6;
        v49 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 2u:
              v58 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v32, v33, v58);
              swift_storeEnumTagMultiPayload(v32, v34, 2);
              break;
            case 3u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v32, v33, v100);
              swift_storeEnumTagMultiPayload(v32, v34, 3);
              break;
            case 4u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v32, v33, v101);
              swift_storeEnumTagMultiPayload(v32, v34, 4);
              break;
            case 5u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v32, v33, v102);
              swift_storeEnumTagMultiPayload(v32, v34, 5);
              break;
            case 6u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v32, v33, v103);
              swift_storeEnumTagMultiPayload(v32, v34, 6);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v47 = a1;
        v48 = v6;
        v49 = 4;
        goto LABEL_67;
      case 7u:
        v37 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
        {
          v39 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v59 = *(int *)(v37 + 20);
          v60 = (char *)a1 + v59;
          v61 = (char *)a2 + v59;
          v62 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        v63 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        *(_OWORD *)v64 = *(_OWORD *)v65;
        *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
        v47 = a1;
        v48 = v6;
        v49 = 7;
        goto LABEL_67;
      case 8u:
        v40 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
        {
          v42 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v66 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
          *((_BYTE *)a1 + *(int *)(v40 + 20)) = *((_BYTE *)a2 + *(int *)(v40 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
        }
        v67 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v67 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v67 + 20));
        v47 = a1;
        v48 = v6;
        v49 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v43 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        v47 = a1;
        v48 = v6;
        v49 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v47, v48, v49);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v104 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v104) = *(_QWORD *)((char *)a2 + v104);
  return a1;
}

_QWORD *sub_100211A74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  _OWORD *v118;
  _OWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  _OWORD *v175;
  _OWORD *v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 2u:
              v12 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
              v13 = a1;
              v14 = v11;
              v15 = 2;
              goto LABEL_57;
            case 3u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(a1, a2, v112);
              v13 = a1;
              v14 = v11;
              v15 = 3;
              goto LABEL_57;
            case 4u:
              v113 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
              v13 = a1;
              v14 = v11;
              v15 = 4;
              goto LABEL_57;
            case 5u:
              v114 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(a1, a2, v114);
              v13 = a1;
              v14 = v11;
              v15 = 5;
              goto LABEL_57;
            case 6u:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(a1, a2, v115);
              v13 = a1;
              v14 = v11;
              v15 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v116 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v117 = v116[5];
          v118 = (_OWORD *)((char *)a1 + v117);
          v119 = (_OWORD *)((char *)a2 + v117);
          v120 = v119[3];
          v118[2] = v119[2];
          v118[3] = v120;
          v121 = v119[1];
          *v118 = *v119;
          v118[1] = v121;
          *(_OWORD *)((char *)v118 + 106) = *(_OWORD *)((char *)v119 + 106);
          v122 = v119[6];
          v123 = v119[4];
          v118[5] = v119[5];
          v118[6] = v122;
          v118[4] = v123;
          *((_BYTE *)a1 + v116[6]) = *((_BYTE *)a2 + v116[6]);
          *((_BYTE *)a1 + v116[7]) = *((_BYTE *)a2 + v116[7]);
          *((_BYTE *)a1 + v116[8]) = *((_BYTE *)a2 + v116[8]);
          *((_BYTE *)a1 + v116[9]) = *((_BYTE *)a2 + v116[9]);
          *((_BYTE *)a1 + v116[10]) = *((_BYTE *)a2 + v116[10]);
          *(_QWORD *)((char *)a1 + v116[11]) = *(_QWORD *)((char *)a2 + v116[11]);
          v55 = a1;
          v56 = v6;
          v57 = 0;
          goto LABEL_114;
        case 1u:
          v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v22))
          {
            case 2u:
              v23 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
              v24 = a1;
              v25 = v22;
              v26 = 2;
              goto LABEL_64;
            case 3u:
              v124 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(a1, a2, v124);
              v24 = a1;
              v25 = v22;
              v26 = 3;
              goto LABEL_64;
            case 4u:
              v125 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(a1, a2, v125);
              v24 = a1;
              v25 = v22;
              v26 = 4;
              goto LABEL_64;
            case 5u:
              v126 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(a1, a2, v126);
              v24 = a1;
              v25 = v22;
              v26 = 5;
              goto LABEL_64;
            case 6u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
              v24 = a1;
              v25 = v22;
              v26 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v24, v25, v26);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
              break;
          }
          v128 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v129 = v128[5];
          v130 = (_OWORD *)((char *)a1 + v129);
          v131 = (_OWORD *)((char *)a2 + v129);
          v132 = v131[3];
          v130[2] = v131[2];
          v130[3] = v132;
          v133 = v131[1];
          *v130 = *v131;
          v130[1] = v133;
          *(_OWORD *)((char *)v130 + 106) = *(_OWORD *)((char *)v131 + 106);
          v134 = v131[6];
          v135 = v131[4];
          v130[5] = v131[5];
          v130[6] = v134;
          v130[4] = v135;
          *((_BYTE *)a1 + v128[6]) = *((_BYTE *)a2 + v128[6]);
          *((_BYTE *)a1 + v128[7]) = *((_BYTE *)a2 + v128[7]);
          *((_BYTE *)a1 + v128[8]) = *((_BYTE *)a2 + v128[8]);
          *((_BYTE *)a1 + v128[9]) = *((_BYTE *)a2 + v128[9]);
          *((_BYTE *)a1 + v128[10]) = *((_BYTE *)a2 + v128[10]);
          *(_QWORD *)((char *)a1 + v128[11]) = *(_QWORD *)((char *)a2 + v128[11]);
          v55 = a1;
          v56 = v6;
          v57 = 1;
          goto LABEL_114;
        case 2u:
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          {
            v32 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 2u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v28, v29, v91);
                v92 = v28;
                v93 = v30;
                v94 = 2;
                goto LABEL_95;
              case 3u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v28, v29, v181);
                v92 = v28;
                v93 = v30;
                v94 = 3;
                goto LABEL_95;
              case 4u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v28, v29, v182);
                v92 = v28;
                v93 = v30;
                v94 = 4;
                goto LABEL_95;
              case 5u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v28, v29, v183);
                v92 = v28;
                v93 = v30;
                v94 = 5;
                goto LABEL_95;
              case 6u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v28, v29, v184);
                v92 = v28;
                v93 = v30;
                v94 = 6;
LABEL_95:
                swift_storeEnumTagMultiPayload(v92, v93, v94);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v55 = a1;
          v56 = v6;
          v57 = 2;
          goto LABEL_114;
        case 3u:
          *a1 = *a2;
          v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v35, v36))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v34, v35, v95);
                v96 = v34;
                v97 = v36;
                v98 = 2;
                goto LABEL_103;
              case 3u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v34, v35, v185);
                v96 = v34;
                v97 = v36;
                v98 = 3;
                goto LABEL_103;
              case 4u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v34, v35, v186);
                v96 = v34;
                v97 = v36;
                v98 = 4;
                goto LABEL_103;
              case 5u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v34, v35, v187);
                v96 = v34;
                v97 = v36;
                v98 = 5;
                goto LABEL_103;
              case 6u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v34, v35, v188);
                v96 = v34;
                v97 = v36;
                v98 = 6;
LABEL_103:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v34, v35, *(_QWORD *)(v37 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          v55 = a1;
          v56 = v6;
          v57 = 3;
          goto LABEL_114;
        case 4u:
          *a1 = *a2;
          v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          {
            v44 = sub_10002A750(&qword_100644980);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v41, v42))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v40, v41, v99);
                v100 = v40;
                v101 = v42;
                v102 = 2;
                goto LABEL_111;
              case 3u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v40, v41, v189);
                v100 = v40;
                v101 = v42;
                v102 = 3;
                goto LABEL_111;
              case 4u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v40, v41, v190);
                v100 = v40;
                v101 = v42;
                v102 = 4;
                goto LABEL_111;
              case 5u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v40, v41, v191);
                v100 = v40;
                v101 = v42;
                v102 = 5;
                goto LABEL_111;
              case 6u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v40, v41, v192);
                v100 = v40;
                v101 = v42;
                v102 = 6;
LABEL_111:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v40, v41, *(_QWORD *)(v43 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          }
          v55 = a1;
          v56 = v6;
          v57 = 4;
          goto LABEL_114;
        case 7u:
          v45 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            v47 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v103 = *(int *)(v45 + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
          v55 = a1;
          v56 = v6;
          v57 = 7;
          goto LABEL_114;
        case 8u:
          v48 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v49 = *(_QWORD *)(v48 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48))(a2, 1, v48))
          {
            v50 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
            *((_BYTE *)a1 + *(int *)(v48 + 20)) = *((_BYTE *)a2 + *(int *)(v48 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(a1, 0, 1, v48);
          }
          v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
          v55 = a1;
          v56 = v6;
          v57 = 8;
          goto LABEL_114;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v51 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          v55 = a1;
          v56 = v6;
          v57 = 9;
LABEL_114:
          swift_storeEnumTagMultiPayload(v55, v56, v57);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_116;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EB0) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v16);
    goto LABEL_116;
  }
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v17))
        {
          case 2u:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
            v19 = a1;
            v20 = v17;
            v21 = 2;
            goto LABEL_81;
          case 3u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
            v19 = a1;
            v20 = v17;
            v21 = 3;
            goto LABEL_81;
          case 4u:
            v158 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
            v19 = a1;
            v20 = v17;
            v21 = 4;
            goto LABEL_81;
          case 5u:
            v159 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
            v19 = a1;
            v20 = v17;
            v21 = 5;
            goto LABEL_81;
          case 6u:
            v160 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
            v19 = a1;
            v20 = v17;
            v21 = 6;
LABEL_81:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            break;
        }
        v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v162 = v161[5];
        v163 = (_OWORD *)((char *)a1 + v162);
        v164 = (_OWORD *)((char *)a2 + v162);
        v165 = v164[3];
        v163[2] = v164[2];
        v163[3] = v165;
        v166 = v164[1];
        *v163 = *v164;
        v163[1] = v166;
        *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
        v167 = v164[6];
        v168 = v164[4];
        v163[5] = v164[5];
        v163[6] = v167;
        v163[4] = v168;
        *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
        *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
        *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
        *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
        *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
        *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v58 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v58))
        {
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
            v60 = a1;
            v61 = v58;
            v62 = 2;
            goto LABEL_88;
          case 3u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
            v60 = a1;
            v61 = v58;
            v62 = 3;
            goto LABEL_88;
          case 4u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
            v60 = a1;
            v61 = v58;
            v62 = 4;
            goto LABEL_88;
          case 5u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
            v60 = a1;
            v61 = v58;
            v62 = 5;
            goto LABEL_88;
          case 6u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
            v60 = a1;
            v61 = v58;
            v62 = 6;
LABEL_88:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
            break;
        }
        v173 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v174 = v173[5];
        v175 = (_OWORD *)((char *)a1 + v174);
        v176 = (_OWORD *)((char *)a2 + v174);
        v177 = v176[3];
        v175[2] = v176[2];
        v175[3] = v177;
        v178 = v176[1];
        *v175 = *v176;
        v175[1] = v178;
        *(_OWORD *)((char *)v175 + 106) = *(_OWORD *)((char *)v176 + 106);
        v179 = v176[6];
        v180 = v176[4];
        v175[5] = v176[5];
        v175[6] = v179;
        v175[4] = v180;
        *((_BYTE *)a1 + v173[6]) = *((_BYTE *)a2 + v173[6]);
        *((_BYTE *)a1 + v173[7]) = *((_BYTE *)a2 + v173[7]);
        *((_BYTE *)a1 + v173[8]) = *((_BYTE *)a2 + v173[8]);
        *((_BYTE *)a1 + v173[9]) = *((_BYTE *)a2 + v173[9]);
        *((_BYTE *)a1 + v173[10]) = *((_BYTE *)a2 + v173[10]);
        *(_QWORD *)((char *)a1 + v173[11]) = *(_QWORD *)((char *)a2 + v173[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        *a1 = *a2;
        v63 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_10002A750(&qword_100644980);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v65, v66))
          {
            case 2u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v64, v65, v136);
              v137 = v64;
              v138 = v66;
              v139 = 2;
              goto LABEL_122;
            case 3u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v64, v65, v195);
              v137 = v64;
              v138 = v66;
              v139 = 3;
              goto LABEL_122;
            case 4u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v64, v65, v196);
              v137 = v64;
              v138 = v66;
              v139 = 4;
              goto LABEL_122;
            case 5u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v64, v65, v197);
              v137 = v64;
              v138 = v66;
              v139 = 5;
              goto LABEL_122;
            case 6u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v64, v65, v198);
              v137 = v64;
              v138 = v66;
              v139 = 6;
LABEL_122:
              swift_storeEnumTagMultiPayload(v137, v138, v139);
              break;
            default:
              memcpy(v64, v65, *(_QWORD *)(v67 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        *a1 = *a2;
        v69 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_10002A750(&qword_100644980);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v71, v72))
          {
            case 2u:
              v140 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v70, v71, v140);
              v141 = v70;
              v142 = v72;
              v143 = 2;
              goto LABEL_130;
            case 3u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v70, v71, v199);
              v141 = v70;
              v142 = v72;
              v143 = 3;
              goto LABEL_130;
            case 4u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v70, v71, v200);
              v141 = v70;
              v142 = v72;
              v143 = 4;
              goto LABEL_130;
            case 5u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v70, v71, v201);
              v141 = v70;
              v142 = v72;
              v143 = 5;
              goto LABEL_130;
            case 6u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v70, v71, v202);
              v141 = v70;
              v142 = v72;
              v143 = 6;
LABEL_130:
              swift_storeEnumTagMultiPayload(v141, v142, v143);
              break;
            default:
              memcpy(v70, v71, *(_QWORD *)(v73 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        *a1 = *a2;
        v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          v80 = sub_10002A750(&qword_100644980);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v77, v78))
          {
            case 2u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v76, v77, v144);
              v145 = v76;
              v146 = v78;
              v147 = 2;
              goto LABEL_138;
            case 3u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v76, v77, v203);
              v145 = v76;
              v146 = v78;
              v147 = 3;
              goto LABEL_138;
            case 4u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v76, v77, v204);
              v145 = v76;
              v146 = v78;
              v147 = 4;
              goto LABEL_138;
            case 5u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v76, v77, v205);
              v145 = v76;
              v146 = v78;
              v147 = 5;
              goto LABEL_138;
            case 6u:
              v206 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v76, v77, v206);
              v145 = v76;
              v146 = v78;
              v147 = 6;
LABEL_138:
              swift_storeEnumTagMultiPayload(v145, v146, v147);
              break;
            default:
              memcpy(v76, v77, *(_QWORD *)(v79 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 7u:
        v81 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
        {
          v83 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v148 = *(int *)(v81 + 20);
          v149 = (char *)a1 + v148;
          v150 = (char *)a2 + v148;
          v151 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
        }
        v152 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v153 = (char *)a1 + v152;
        v154 = (char *)a2 + v152;
        *(_OWORD *)v153 = *(_OWORD *)v154;
        *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v84 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(a2, 1, v84))
        {
          v86 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v155 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
          *((_BYTE *)a1 + *(int *)(v84 + 20)) = *((_BYTE *)a2 + *(int *)(v84 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(a1, 0, 1, v84);
        }
        v156 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v156 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v156 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v87 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        v90 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v16 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
LABEL_116:
  v193 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v193) = *(_QWORD *)((char *)a2 + v193);
  swift_release();
  return a1;
}

uint64_t sub_1002131A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002131B0);
}

uint64_t sub_1002131B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100213230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021323C);
}

uint64_t sub_10021323C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10002A750((uint64_t *)&unk_100640EB0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1002132B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100005494(319, (unint64_t *)&qword_1006539D0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t type metadata accessor for RemindersInsertionPlan(uint64_t a1)
{
  return sub_100007328(a1, qword_10064D5E8, (uint64_t)&nominal type descriptor for RemindersInsertionPlan);
}

uint64_t *sub_100213360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  void **v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void **v51;
  void **v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(void **, uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t, __n128);
  __n128 v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  id v111;
  void *v112;
  id v113;
  int *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  id v146;
  void *v147;
  id v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  id v198;
  void *v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  unsigned __int8 v204;
  char v205;
  unsigned __int8 v206;
  char v207;
  void **v208;
  void **v209;
  char *v210;
  void **v211;
  void **v212;
  uint64_t v213;
  uint64_t v214;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    a1[1] = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for DateComponents(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    v14 = *(int *)(a3 + 28);
    v15 = (void **)((char *)v4 + v14);
    v16 = (void **)((char *)a2 + v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v16, v17))
    {
      case 0u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v213 = v17;
        switch(swift_getEnumCaseMultiPayload(v16, v18))
        {
          case 1u:
            v19 = *v16;
            *v15 = *v16;
            v20 = v19;
            v21 = v15;
            v22 = v18;
            v23 = 1;
            goto LABEL_43;
          case 2u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v15, v16, v105);
            v21 = v15;
            v22 = v18;
            v23 = 2;
            goto LABEL_43;
          case 3u:
            v106 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v15, v16, v106);
            v21 = v15;
            v22 = v18;
            v23 = 3;
            goto LABEL_43;
          case 4u:
            v107 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v15, v16, v107);
            v21 = v15;
            v22 = v18;
            v23 = 4;
            goto LABEL_43;
          case 5u:
            v108 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v15, v16, v108);
            v21 = v15;
            v22 = v18;
            v23 = 5;
            goto LABEL_43;
          case 6u:
            v109 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v15, v16, v109);
            v21 = v15;
            v22 = v18;
            v23 = 6;
            goto LABEL_43;
          case 8u:
            v110 = *v16;
            *v15 = *v16;
            v111 = v110;
            v21 = v15;
            v22 = v18;
            v23 = 8;
            goto LABEL_43;
          case 9u:
            v112 = *v16;
            *v15 = *v16;
            v113 = v112;
            v21 = v15;
            v22 = v18;
            v23 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v114 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v115 = v114[5];
        v116 = (char *)v15 + v115;
        v117 = (char *)v16 + v115;
        v118 = *(uint64_t *)((char *)v16 + v115 + 8);
        if (v118)
        {
          v208 = v16;
          v211 = v15;
          *(_QWORD *)v116 = *(_QWORD *)v117;
          *((_QWORD *)v116 + 1) = v118;
          v119 = (void *)*((_QWORD *)v117 + 2);
          v120 = *((_QWORD *)v117 + 3);
          v121 = *((_QWORD *)v117 + 4);
          v122 = *((_QWORD *)v117 + 5);
          v123 = *((_QWORD *)v117 + 6);
          v124 = *((_QWORD *)v117 + 7);
          v204 = v117[64];
          swift_bridgeObjectRetain(v118);
          sub_10003E1F0(v119, v120, v121, v122, v123, v124, v204);
          *((_QWORD *)v116 + 2) = v119;
          *((_QWORD *)v116 + 3) = v120;
          *((_QWORD *)v116 + 4) = v121;
          *((_QWORD *)v116 + 5) = v122;
          *((_QWORD *)v116 + 6) = v123;
          *((_QWORD *)v116 + 7) = v124;
          v116[64] = v204;
          *(_DWORD *)(v116 + 65) = *(_DWORD *)(v117 + 65);
          v125 = v117[120];
          if (v125 == 255)
          {
            v126 = *(_OWORD *)(v117 + 88);
            *(_OWORD *)(v116 + 72) = *(_OWORD *)(v117 + 72);
            *(_OWORD *)(v116 + 88) = v126;
            *(_OWORD *)(v116 + 104) = *(_OWORD *)(v117 + 104);
            v116[120] = v117[120];
          }
          else
          {
            v205 = v125 & 1;
            v132 = (void *)*((_QWORD *)v117 + 9);
            v131 = *((_QWORD *)v117 + 10);
            v133 = *((_QWORD *)v117 + 11);
            v134 = *((_QWORD *)v117 + 12);
            v136 = *((_QWORD *)v117 + 13);
            v135 = *((_QWORD *)v117 + 14);
            sub_10002B764(v132, v131, v133, v134, v136, v135, v125 & 1);
            *((_QWORD *)v116 + 9) = v132;
            *((_QWORD *)v116 + 10) = v131;
            *((_QWORD *)v116 + 11) = v133;
            *((_QWORD *)v116 + 12) = v134;
            *((_QWORD *)v116 + 13) = v136;
            *((_QWORD *)v116 + 14) = v135;
            v116[120] = v205;
          }
          v15 = v211;
          v130 = v213;
          v116[121] = v117[121];
          v16 = v208;
        }
        else
        {
          v127 = *((_OWORD *)v117 + 5);
          *((_OWORD *)v116 + 4) = *((_OWORD *)v117 + 4);
          *((_OWORD *)v116 + 5) = v127;
          *((_OWORD *)v116 + 6) = *((_OWORD *)v117 + 6);
          *(_OWORD *)(v116 + 106) = *(_OWORD *)(v117 + 106);
          v128 = *((_OWORD *)v117 + 1);
          *(_OWORD *)v116 = *(_OWORD *)v117;
          *((_OWORD *)v116 + 1) = v128;
          v129 = *((_OWORD *)v117 + 3);
          *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
          *((_OWORD *)v116 + 3) = v129;
          v130 = v17;
        }
        *((_BYTE *)v15 + v114[6]) = *((_BYTE *)v16 + v114[6]);
        *((_BYTE *)v15 + v114[7]) = *((_BYTE *)v16 + v114[7]);
        *((_BYTE *)v15 + v114[8]) = *((_BYTE *)v16 + v114[8]);
        *((_BYTE *)v15 + v114[9]) = *((_BYTE *)v16 + v114[9]);
        *((_BYTE *)v15 + v114[10]) = *((_BYTE *)v16 + v114[10]);
        v137 = v114[11];
        v138 = *(void **)((char *)v16 + v137);
        *(void **)((char *)v15 + v137) = v138;
        v139 = v138;
        v60 = v15;
        v61 = v130;
        v62 = 0;
        goto LABEL_100;
      case 1u:
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v214 = v17;
        switch(swift_getEnumCaseMultiPayload(v16, v25))
        {
          case 1u:
            v26 = *v16;
            *v15 = *v16;
            v27 = v26;
            v28 = v15;
            v29 = v25;
            v30 = 1;
            goto LABEL_59;
          case 2u:
            v140 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v15, v16, v140);
            v28 = v15;
            v29 = v25;
            v30 = 2;
            goto LABEL_59;
          case 3u:
            v141 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v15, v16, v141);
            v28 = v15;
            v29 = v25;
            v30 = 3;
            goto LABEL_59;
          case 4u:
            v142 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v15, v16, v142);
            v28 = v15;
            v29 = v25;
            v30 = 4;
            goto LABEL_59;
          case 5u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v15, v16, v143);
            v28 = v15;
            v29 = v25;
            v30 = 5;
            goto LABEL_59;
          case 6u:
            v144 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v15, v16, v144);
            v28 = v15;
            v29 = v25;
            v30 = 6;
            goto LABEL_59;
          case 8u:
            v145 = *v16;
            *v15 = *v16;
            v146 = v145;
            v28 = v15;
            v29 = v25;
            v30 = 8;
            goto LABEL_59;
          case 9u:
            v147 = *v16;
            *v15 = *v16;
            v148 = v147;
            v28 = v15;
            v29 = v25;
            v30 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v28, v29, v30);
            break;
          default:
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            break;
        }
        v149 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v150 = v149[5];
        v151 = (char *)v15 + v150;
        v152 = (char *)v16 + v150;
        v153 = *(uint64_t *)((char *)v16 + v150 + 8);
        if (v153)
        {
          v209 = v16;
          v212 = v15;
          *(_QWORD *)v151 = *(_QWORD *)v152;
          *((_QWORD *)v151 + 1) = v153;
          v154 = (void *)*((_QWORD *)v152 + 2);
          v155 = *((_QWORD *)v152 + 3);
          v156 = *((_QWORD *)v152 + 4);
          v157 = *((_QWORD *)v152 + 5);
          v158 = *((_QWORD *)v152 + 6);
          v159 = *((_QWORD *)v152 + 7);
          v206 = v152[64];
          swift_bridgeObjectRetain(v153);
          sub_10003E1F0(v154, v155, v156, v157, v158, v159, v206);
          *((_QWORD *)v151 + 2) = v154;
          *((_QWORD *)v151 + 3) = v155;
          *((_QWORD *)v151 + 4) = v156;
          *((_QWORD *)v151 + 5) = v157;
          *((_QWORD *)v151 + 6) = v158;
          *((_QWORD *)v151 + 7) = v159;
          v151[64] = v206;
          *(_DWORD *)(v151 + 65) = *(_DWORD *)(v152 + 65);
          v160 = v152[120];
          if (v160 == 255)
          {
            v161 = *(_OWORD *)(v152 + 88);
            *(_OWORD *)(v151 + 72) = *(_OWORD *)(v152 + 72);
            *(_OWORD *)(v151 + 88) = v161;
            *(_OWORD *)(v151 + 104) = *(_OWORD *)(v152 + 104);
            v151[120] = v152[120];
          }
          else
          {
            v207 = v160 & 1;
            v167 = (void *)*((_QWORD *)v152 + 9);
            v166 = *((_QWORD *)v152 + 10);
            v168 = *((_QWORD *)v152 + 11);
            v169 = *((_QWORD *)v152 + 12);
            v171 = *((_QWORD *)v152 + 13);
            v170 = *((_QWORD *)v152 + 14);
            sub_10002B764(v167, v166, v168, v169, v171, v170, v160 & 1);
            *((_QWORD *)v151 + 9) = v167;
            *((_QWORD *)v151 + 10) = v166;
            *((_QWORD *)v151 + 11) = v168;
            *((_QWORD *)v151 + 12) = v169;
            *((_QWORD *)v151 + 13) = v171;
            *((_QWORD *)v151 + 14) = v170;
            v151[120] = v207;
          }
          v15 = v212;
          v165 = v214;
          v151[121] = v152[121];
          v16 = v209;
        }
        else
        {
          v162 = *((_OWORD *)v152 + 5);
          *((_OWORD *)v151 + 4) = *((_OWORD *)v152 + 4);
          *((_OWORD *)v151 + 5) = v162;
          *((_OWORD *)v151 + 6) = *((_OWORD *)v152 + 6);
          *(_OWORD *)(v151 + 106) = *(_OWORD *)(v152 + 106);
          v163 = *((_OWORD *)v152 + 1);
          *(_OWORD *)v151 = *(_OWORD *)v152;
          *((_OWORD *)v151 + 1) = v163;
          v164 = *((_OWORD *)v152 + 3);
          *((_OWORD *)v151 + 2) = *((_OWORD *)v152 + 2);
          *((_OWORD *)v151 + 3) = v164;
          v165 = v17;
        }
        *((_BYTE *)v15 + v149[6]) = *((_BYTE *)v16 + v149[6]);
        *((_BYTE *)v15 + v149[7]) = *((_BYTE *)v16 + v149[7]);
        *((_BYTE *)v15 + v149[8]) = *((_BYTE *)v16 + v149[8]);
        *((_BYTE *)v15 + v149[9]) = *((_BYTE *)v16 + v149[9]);
        *((_BYTE *)v15 + v149[10]) = *((_BYTE *)v16 + v149[10]);
        v172 = v149[11];
        v173 = *(void **)((char *)v16 + v172);
        *(void **)((char *)v15 + v172) = v173;
        v174 = v173;
        v60 = v15;
        v61 = v165;
        v62 = 1;
        goto LABEL_100;
      case 2u:
        v31 = *v16;
        *v15 = *v16;
        v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v33 = (void **)((char *)v15 + v32);
        v34 = (void **)((char *)v16 + v32);
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
        v38 = v31;
        if (v37(v34, 1, v35))
        {
          v39 = sub_10002A750(&qword_100644980);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v34, v35))
          {
            case 1u:
              v75 = *v34;
              *v33 = *v34;
              v76 = v75;
              v77 = v33;
              v78 = v35;
              v79 = 1;
              goto LABEL_75;
            case 2u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v33, v34, v175);
              v77 = v33;
              v78 = v35;
              v79 = 2;
              goto LABEL_75;
            case 3u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v33, v34, v176);
              v77 = v33;
              v78 = v35;
              v79 = 3;
              goto LABEL_75;
            case 4u:
              v177 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v33, v34, v177);
              v77 = v33;
              v78 = v35;
              v79 = 4;
              goto LABEL_75;
            case 5u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v33, v34, v178);
              v77 = v33;
              v78 = v35;
              v79 = 5;
              goto LABEL_75;
            case 6u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v33, v34, v179);
              v77 = v33;
              v78 = v35;
              v79 = 6;
              goto LABEL_75;
            case 8u:
              v180 = *v34;
              *v33 = *v34;
              v181 = v180;
              v77 = v33;
              v78 = v35;
              v79 = 8;
              goto LABEL_75;
            case 9u:
              v182 = *v34;
              *v33 = *v34;
              v183 = v182;
              v77 = v33;
              v78 = v35;
              v79 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v60 = v15;
        v61 = v17;
        v62 = 2;
        goto LABEL_100;
      case 3u:
        v40 = *v16;
        *v15 = *v16;
        v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v42 = (void **)((char *)v15 + v41);
        v43 = (void **)((char *)v16 + v41);
        v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
        v47 = v40;
        if (v46(v43, 1, v44))
        {
          v48 = sub_10002A750(&qword_100644980);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v43, v44))
          {
            case 1u:
              v80 = *v43;
              *v42 = *v43;
              v81 = v80;
              v82 = v42;
              v83 = v44;
              v84 = 1;
              goto LABEL_97;
            case 2u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v42, v43, v184);
              v82 = v42;
              v83 = v44;
              v84 = 2;
              goto LABEL_97;
            case 3u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v42, v43, v185);
              v82 = v42;
              v83 = v44;
              v84 = 3;
              goto LABEL_97;
            case 4u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v42, v43, v186);
              v82 = v42;
              v83 = v44;
              v84 = 4;
              goto LABEL_97;
            case 5u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v42, v43, v201);
              v82 = v42;
              v83 = v44;
              v84 = 5;
              goto LABEL_97;
            case 6u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v42, v43, v187);
              v82 = v42;
              v83 = v44;
              v84 = 6;
              goto LABEL_97;
            case 8u:
              v188 = *v43;
              *v42 = *v43;
              v189 = v188;
              v82 = v42;
              v83 = v44;
              v84 = 8;
              goto LABEL_97;
            case 9u:
              v190 = *v43;
              *v42 = *v43;
              v191 = v190;
              v82 = v42;
              v83 = v44;
              v84 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v82, v83, v84);
              break;
            default:
              memcpy(v42, v43, *(_QWORD *)(v45 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        v60 = v15;
        v61 = v17;
        v62 = 3;
        goto LABEL_100;
      case 4u:
        v49 = *v16;
        *v15 = *v16;
        v50 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v51 = (void **)((char *)v15 + v50);
        v52 = (void **)((char *)v16 + v50);
        v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v54 + 48);
        v56 = v49;
        if (v55(v52, 1, v53))
        {
          v57 = sub_10002A750(&qword_100644980);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v52, v53))
          {
            case 1u:
              v85 = *v52;
              *v51 = *v52;
              v86 = v85;
              v87 = v51;
              v88 = v53;
              v89 = 1;
              goto LABEL_93;
            case 2u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v51, v52, v192);
              v87 = v51;
              v88 = v53;
              v89 = 2;
              goto LABEL_93;
            case 3u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v51, v52, v193);
              v87 = v51;
              v88 = v53;
              v89 = 3;
              goto LABEL_93;
            case 4u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v51, v52, v194);
              v87 = v51;
              v88 = v53;
              v89 = 4;
              goto LABEL_93;
            case 5u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v51, v52, v195);
              v87 = v51;
              v88 = v53;
              v89 = 5;
              goto LABEL_93;
            case 6u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v51, v52, v196);
              v87 = v51;
              v88 = v53;
              v89 = 6;
              goto LABEL_93;
            case 8u:
              v197 = *v52;
              *v51 = *v52;
              v198 = v197;
              v87 = v51;
              v88 = v53;
              v89 = 8;
              goto LABEL_93;
            case 9u:
              v199 = *v52;
              *v51 = *v52;
              v200 = v199;
              v87 = v51;
              v88 = v53;
              v89 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v87, v88, v89);
              break;
            default:
              memcpy(v51, v52, *(_QWORD *)(v54 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        v60 = v15;
        v61 = v17;
        v62 = 4;
        goto LABEL_100;
      case 5u:
        *v15 = *v16;
        *((_BYTE *)v15 + 8) = *((_BYTE *)v16 + 8);
        *(_WORD *)((char *)v15 + 9) = *(_WORD *)((char *)v16 + 9);
        v58 = v16[2];
        v15[2] = v58;
        v59 = v58;
        v60 = v15;
        v61 = v17;
        v62 = 5;
        goto LABEL_100;
      case 6u:
        v70 = *v16;
        *v15 = *v16;
        v71 = v70;
        v60 = v15;
        v61 = v17;
        v62 = 6;
        goto LABEL_100;
      case 7u:
        v63 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(v16, 1, v63))
        {
          v65 = sub_10002A750(&qword_100644600);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v90 = *v16;
          *v15 = *v16;
          v91 = *(int *)(v63 + 20);
          v210 = (char *)v15 + v91;
          v92 = (char *)v16 + v91;
          v93 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v94 = v17;
          v95 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v93 - 8) + 16);
          v96 = swift_bridgeObjectRetain(v90);
          v95(v210, v92, v93, v96);
          v17 = v94;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(v15, 0, 1, v63);
        }
        v97 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v98 = (void **)((char *)v15 + v97);
        v99 = (void **)((char *)v16 + v97);
        v100 = v99[1];
        if (v100)
        {
          *v98 = *v99;
          v98[1] = v100;
          v101 = (void *)v99[2];
          v98[2] = v101;
          swift_bridgeObjectRetain(v100);
          v102 = v101;
        }
        else
        {
          *(_OWORD *)v98 = *(_OWORD *)v99;
          v98[2] = v99[2];
        }
        v60 = v15;
        v61 = v17;
        v62 = 7;
        goto LABEL_100;
      case 8u:
        v72 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v73 + 48))(v16, 1, v72))
        {
          v74 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          v103 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v15, v16, v103);
          *((_BYTE *)v15 + *(int *)(v72 + 20)) = *((_BYTE *)v16 + *(int *)(v72 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v73 + 56))(v15, 0, 1, v72);
        }
        v104 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v15 + *(int *)(v104 + 20)) = *(void **)((char *)v16 + *(int *)(v104 + 20));
        v60 = v15;
        v61 = v17;
        v62 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)v15 = *(_BYTE *)v16;
        v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v67 = (char *)v15 + v66;
        v68 = (char *)v16 + v66;
        v69 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        v60 = v15;
        v61 = v17;
        v62 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v60, v61, v62);
        break;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        break;
    }
    v202 = type metadata accessor for RemindersInsertionRequest(0);
    *(void **)((char *)v15 + *(int *)(v202 + 20)) = *(void **)((char *)v16 + *(int *)(v202 + 20));
    *(void **)((char *)v15 + *(int *)(v202 + 24)) = *(void **)((char *)v16 + *(int *)(v202 + 24));
  }
  swift_retain();
  return v4;
}

double sub_1002143B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v6, v7))
  {
    case 0u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v6, v8))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v6, v9))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v10 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
          break;
        default:
          break;
      }
LABEL_24:
      v24 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v25 = (char *)v6 + *(int *)(v24 + 20);
      v26 = *((_QWORD *)v25 + 1);
      if (v26)
      {
        swift_bridgeObjectRelease(v26);
        sub_10003E2EC(*((void **)v25 + 2), *((_QWORD *)v25 + 3), *((_QWORD *)v25 + 4), *((_QWORD *)v25 + 5), *((_QWORD *)v25 + 6), *((_QWORD *)v25 + 7), v25[64]);
        v27 = v25[120];
        if (v27 != 255)
          sub_10002B328(*((void **)v25 + 9), *((_QWORD *)v25 + 10), *((_QWORD *)v25 + 11), *((_QWORD *)v25 + 12), *((_QWORD *)v25 + 13), *((_QWORD *)v25 + 14), v27 & 1);
      }
      v16 = *(id *)((char *)v6 + *(int *)(v24 + 44));
      goto LABEL_28;
    case 2u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v11, v14))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v16 = *v11;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v15 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v16 = (id)v6[2];
      goto LABEL_28;
    case 6u:
      v16 = (id)*v6;
      goto LABEL_28;
    case 7u:
      v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17))
      {
        swift_bridgeObjectRelease(*v6);
        v18 = (char *)v6 + *(int *)(v17 + 20);
        v19 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = (char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (!v21)
        goto LABEL_29;
      swift_bridgeObjectRelease(v21);
      v16 = (id)*((_QWORD *)v20 + 2);
LABEL_28:

LABEL_29:
      type metadata accessor for RemindersInsertionRequest(0);
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    case 8u:
      v22 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v6, 1, v22))
      {
        v23 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v6, v23);
      }
      goto LABEL_29;
    case 9u:
      v11 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v15 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v11, v15);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

uint64_t sub_1002147AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  void **v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(void **, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(void **, uint64_t, uint64_t);
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void **v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(void **, uint64_t, uint64_t);
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  void **v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t, __n128);
  __n128 v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned __int8 v123;
  int v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  id v146;
  void *v147;
  id v148;
  int *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160;
  int v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  id v183;
  void *v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  id v191;
  void *v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  id v200;
  void *v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  void **v206;
  void **v207;
  char *v208;
  void **v209;
  void **v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v5 = a1;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DateComponents(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (void **)(v5 + v13);
  v15 = (void **)(a2 + v13);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v15, v16))
  {
    case 0u:
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v211 = v16;
      v213 = v5;
      switch(swift_getEnumCaseMultiPayload(v15, v17))
      {
        case 1u:
          v18 = *v15;
          *v14 = *v15;
          v19 = v18;
          v20 = v14;
          v21 = v17;
          v22 = 1;
          goto LABEL_41;
        case 2u:
          v103 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v14, v15, v103);
          v20 = v14;
          v21 = v17;
          v22 = 2;
          goto LABEL_41;
        case 3u:
          v104 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v14, v15, v104);
          v20 = v14;
          v21 = v17;
          v22 = 3;
          goto LABEL_41;
        case 4u:
          v105 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v14, v15, v105);
          v20 = v14;
          v21 = v17;
          v22 = 4;
          goto LABEL_41;
        case 5u:
          v106 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v14, v15, v106);
          v20 = v14;
          v21 = v17;
          v22 = 5;
          goto LABEL_41;
        case 6u:
          v107 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v14, v15, v107);
          v20 = v14;
          v21 = v17;
          v22 = 6;
          goto LABEL_41;
        case 8u:
          v108 = *v15;
          *v14 = *v15;
          v109 = v108;
          v20 = v14;
          v21 = v17;
          v22 = 8;
          goto LABEL_41;
        case 9u:
          v110 = *v15;
          *v14 = *v15;
          v111 = v110;
          v20 = v14;
          v21 = v17;
          v22 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v112 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v113 = v112[5];
      v114 = (char *)v14 + v113;
      v115 = (char *)v15 + v113;
      v116 = *(uint64_t *)((char *)v15 + v113 + 8);
      if (v116)
      {
        v206 = v15;
        v209 = v14;
        *(_QWORD *)v114 = *(_QWORD *)v115;
        *((_QWORD *)v114 + 1) = v116;
        v117 = (void *)*((_QWORD *)v115 + 2);
        v118 = *((_QWORD *)v115 + 3);
        v119 = *((_QWORD *)v115 + 4);
        v120 = *((_QWORD *)v115 + 5);
        v121 = *((_QWORD *)v115 + 6);
        v122 = *((_QWORD *)v115 + 7);
        v123 = v115[64];
        swift_bridgeObjectRetain(v116);
        sub_10003E1F0(v117, v118, v119, v120, v121, v122, v123);
        *((_QWORD *)v114 + 2) = v117;
        *((_QWORD *)v114 + 3) = v118;
        *((_QWORD *)v114 + 4) = v119;
        *((_QWORD *)v114 + 5) = v120;
        *((_QWORD *)v114 + 6) = v121;
        *((_QWORD *)v114 + 7) = v122;
        v114[64] = v123;
        *(_DWORD *)(v114 + 65) = *(_DWORD *)(v115 + 65);
        v124 = v115[120];
        if (v124 == 255)
        {
          v125 = *(_OWORD *)(v115 + 88);
          *(_OWORD *)(v114 + 72) = *(_OWORD *)(v115 + 72);
          *(_OWORD *)(v114 + 88) = v125;
          *(_OWORD *)(v114 + 104) = *(_OWORD *)(v115 + 104);
          v114[120] = v115[120];
        }
        else
        {
          v130 = (void *)*((_QWORD *)v115 + 9);
          v131 = *((_QWORD *)v115 + 10);
          v132 = *((_QWORD *)v115 + 11);
          v133 = *((_QWORD *)v115 + 12);
          v134 = *((_QWORD *)v115 + 13);
          v135 = *((_QWORD *)v115 + 14);
          v136 = v124 & 1;
          sub_10002B764(v130, v131, v132, v133, v134, v135, v124 & 1);
          *((_QWORD *)v114 + 9) = v130;
          *((_QWORD *)v114 + 10) = v131;
          *((_QWORD *)v114 + 11) = v132;
          *((_QWORD *)v114 + 12) = v133;
          *((_QWORD *)v114 + 13) = v134;
          *((_QWORD *)v114 + 14) = v135;
          v114[120] = v136;
        }
        v129 = v211;
        v5 = v213;
        v114[121] = v115[121];
        v15 = v206;
        v14 = v209;
      }
      else
      {
        v126 = *((_OWORD *)v115 + 5);
        *((_OWORD *)v114 + 4) = *((_OWORD *)v115 + 4);
        *((_OWORD *)v114 + 5) = v126;
        *((_OWORD *)v114 + 6) = *((_OWORD *)v115 + 6);
        *(_OWORD *)(v114 + 106) = *(_OWORD *)(v115 + 106);
        v127 = *((_OWORD *)v115 + 1);
        *(_OWORD *)v114 = *(_OWORD *)v115;
        *((_OWORD *)v114 + 1) = v127;
        v128 = *((_OWORD *)v115 + 3);
        *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
        *((_OWORD *)v114 + 3) = v128;
        v129 = v16;
      }
      *((_BYTE *)v14 + v112[6]) = *((_BYTE *)v15 + v112[6]);
      *((_BYTE *)v14 + v112[7]) = *((_BYTE *)v15 + v112[7]);
      *((_BYTE *)v14 + v112[8]) = *((_BYTE *)v15 + v112[8]);
      *((_BYTE *)v14 + v112[9]) = *((_BYTE *)v15 + v112[9]);
      *((_BYTE *)v14 + v112[10]) = *((_BYTE *)v15 + v112[10]);
      v137 = v112[11];
      v138 = *(void **)((char *)v15 + v137);
      *(void **)((char *)v14 + v137) = v138;
      v139 = v138;
      v58 = v14;
      v59 = v129;
      v60 = 0;
      goto LABEL_98;
    case 1u:
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v212 = v16;
      v214 = v5;
      switch(swift_getEnumCaseMultiPayload(v15, v23))
      {
        case 1u:
          v24 = *v15;
          *v14 = *v15;
          v25 = v24;
          v26 = v14;
          v27 = v23;
          v28 = 1;
          goto LABEL_57;
        case 2u:
          v140 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v14, v15, v140);
          v26 = v14;
          v27 = v23;
          v28 = 2;
          goto LABEL_57;
        case 3u:
          v141 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v14, v15, v141);
          v26 = v14;
          v27 = v23;
          v28 = 3;
          goto LABEL_57;
        case 4u:
          v142 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v14, v15, v142);
          v26 = v14;
          v27 = v23;
          v28 = 4;
          goto LABEL_57;
        case 5u:
          v143 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v14, v15, v143);
          v26 = v14;
          v27 = v23;
          v28 = 5;
          goto LABEL_57;
        case 6u:
          v144 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v14, v15, v144);
          v26 = v14;
          v27 = v23;
          v28 = 6;
          goto LABEL_57;
        case 8u:
          v145 = *v15;
          *v14 = *v15;
          v146 = v145;
          v26 = v14;
          v27 = v23;
          v28 = 8;
          goto LABEL_57;
        case 9u:
          v147 = *v15;
          *v14 = *v15;
          v148 = v147;
          v26 = v14;
          v27 = v23;
          v28 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v26, v27, v28);
          break;
        default:
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          break;
      }
      v149 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v150 = v149[5];
      v151 = (char *)v14 + v150;
      v152 = (char *)v15 + v150;
      v153 = *(uint64_t *)((char *)v15 + v150 + 8);
      if (v153)
      {
        v207 = v15;
        v210 = v14;
        *(_QWORD *)v151 = *(_QWORD *)v152;
        *((_QWORD *)v151 + 1) = v153;
        v154 = (void *)*((_QWORD *)v152 + 2);
        v155 = *((_QWORD *)v152 + 3);
        v156 = *((_QWORD *)v152 + 4);
        v157 = *((_QWORD *)v152 + 5);
        v159 = *((_QWORD *)v152 + 6);
        v158 = *((_QWORD *)v152 + 7);
        v160 = v152[64];
        swift_bridgeObjectRetain(v153);
        sub_10003E1F0(v154, v155, v156, v157, v159, v158, v160);
        *((_QWORD *)v151 + 2) = v154;
        *((_QWORD *)v151 + 3) = v155;
        *((_QWORD *)v151 + 4) = v156;
        *((_QWORD *)v151 + 5) = v157;
        *((_QWORD *)v151 + 6) = v159;
        *((_QWORD *)v151 + 7) = v158;
        v151[64] = v160;
        *(_DWORD *)(v151 + 65) = *(_DWORD *)(v152 + 65);
        v161 = v152[120];
        if (v161 == 255)
        {
          v162 = *(_OWORD *)(v152 + 88);
          *(_OWORD *)(v151 + 72) = *(_OWORD *)(v152 + 72);
          *(_OWORD *)(v151 + 88) = v162;
          *(_OWORD *)(v151 + 104) = *(_OWORD *)(v152 + 104);
          v151[120] = v152[120];
        }
        else
        {
          v167 = (void *)*((_QWORD *)v152 + 9);
          v168 = *((_QWORD *)v152 + 10);
          v169 = *((_QWORD *)v152 + 11);
          v170 = *((_QWORD *)v152 + 12);
          v171 = *((_QWORD *)v152 + 13);
          v172 = *((_QWORD *)v152 + 14);
          v173 = v161 & 1;
          sub_10002B764(v167, v168, v169, v170, v171, v172, v161 & 1);
          *((_QWORD *)v151 + 9) = v167;
          *((_QWORD *)v151 + 10) = v168;
          *((_QWORD *)v151 + 11) = v169;
          *((_QWORD *)v151 + 12) = v170;
          *((_QWORD *)v151 + 13) = v171;
          *((_QWORD *)v151 + 14) = v172;
          v151[120] = v173;
        }
        v166 = v212;
        v5 = v214;
        v151[121] = v152[121];
        v15 = v207;
        v14 = v210;
      }
      else
      {
        v163 = *((_OWORD *)v152 + 5);
        *((_OWORD *)v151 + 4) = *((_OWORD *)v152 + 4);
        *((_OWORD *)v151 + 5) = v163;
        *((_OWORD *)v151 + 6) = *((_OWORD *)v152 + 6);
        *(_OWORD *)(v151 + 106) = *(_OWORD *)(v152 + 106);
        v164 = *((_OWORD *)v152 + 1);
        *(_OWORD *)v151 = *(_OWORD *)v152;
        *((_OWORD *)v151 + 1) = v164;
        v165 = *((_OWORD *)v152 + 3);
        *((_OWORD *)v151 + 2) = *((_OWORD *)v152 + 2);
        *((_OWORD *)v151 + 3) = v165;
        v166 = v16;
      }
      *((_BYTE *)v14 + v149[6]) = *((_BYTE *)v15 + v149[6]);
      *((_BYTE *)v14 + v149[7]) = *((_BYTE *)v15 + v149[7]);
      *((_BYTE *)v14 + v149[8]) = *((_BYTE *)v15 + v149[8]);
      *((_BYTE *)v14 + v149[9]) = *((_BYTE *)v15 + v149[9]);
      *((_BYTE *)v14 + v149[10]) = *((_BYTE *)v15 + v149[10]);
      v174 = v149[11];
      v175 = *(void **)((char *)v15 + v174);
      *(void **)((char *)v14 + v174) = v175;
      v176 = v175;
      v58 = v14;
      v59 = v166;
      v60 = 1;
      goto LABEL_98;
    case 2u:
      v29 = *v15;
      *v14 = *v15;
      v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v31 = (void **)((char *)v14 + v30);
      v32 = (void **)((char *)v15 + v30);
      v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48);
      v36 = v29;
      if (v35(v32, 1, v33))
      {
        v37 = sub_10002A750(&qword_100644980);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v32, v33))
        {
          case 1u:
            v73 = *v32;
            *v31 = *v32;
            v74 = v73;
            v75 = v31;
            v76 = v33;
            v77 = 1;
            goto LABEL_73;
          case 2u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v31, v32, v177);
            v75 = v31;
            v76 = v33;
            v77 = 2;
            goto LABEL_73;
          case 3u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v31, v32, v178);
            v75 = v31;
            v76 = v33;
            v77 = 3;
            goto LABEL_73;
          case 4u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v31, v32, v179);
            v75 = v31;
            v76 = v33;
            v77 = 4;
            goto LABEL_73;
          case 5u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v31, v32, v180);
            v75 = v31;
            v76 = v33;
            v77 = 5;
            goto LABEL_73;
          case 6u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v31, v32, v181);
            v75 = v31;
            v76 = v33;
            v77 = 6;
            goto LABEL_73;
          case 8u:
            v182 = *v32;
            *v31 = *v32;
            v183 = v182;
            v75 = v31;
            v76 = v33;
            v77 = 8;
            goto LABEL_73;
          case 9u:
            v184 = *v32;
            *v31 = *v32;
            v185 = v184;
            v75 = v31;
            v76 = v33;
            v77 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(v34 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v58 = v14;
      v59 = v16;
      v60 = 2;
      goto LABEL_98;
    case 3u:
      v38 = *v15;
      *v14 = *v15;
      v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v40 = (void **)((char *)v14 + v39);
      v41 = (void **)((char *)v15 + v39);
      v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
      v45 = v38;
      if (v44(v41, 1, v42))
      {
        v46 = sub_10002A750(&qword_100644980);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v41, v42))
        {
          case 1u:
            v78 = *v41;
            *v40 = *v41;
            v79 = v78;
            v80 = v40;
            v81 = v42;
            v82 = 1;
            goto LABEL_95;
          case 2u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v40, v41, v186);
            v80 = v40;
            v81 = v42;
            v82 = 2;
            goto LABEL_95;
          case 3u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v40, v41, v187);
            v80 = v40;
            v81 = v42;
            v82 = 3;
            goto LABEL_95;
          case 4u:
            v188 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v40, v41, v188);
            v80 = v40;
            v81 = v42;
            v82 = 4;
            goto LABEL_95;
          case 5u:
            v203 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v40, v41, v203);
            v80 = v40;
            v81 = v42;
            v82 = 5;
            goto LABEL_95;
          case 6u:
            v189 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v40, v41, v189);
            v80 = v40;
            v81 = v42;
            v82 = 6;
            goto LABEL_95;
          case 8u:
            v190 = *v41;
            *v40 = *v41;
            v191 = v190;
            v80 = v40;
            v81 = v42;
            v82 = 8;
            goto LABEL_95;
          case 9u:
            v192 = *v41;
            *v40 = *v41;
            v193 = v192;
            v80 = v40;
            v81 = v42;
            v82 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v80, v81, v82);
            break;
          default:
            memcpy(v40, v41, *(_QWORD *)(v43 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v58 = v14;
      v59 = v16;
      v60 = 3;
      goto LABEL_98;
    case 4u:
      v47 = *v15;
      *v14 = *v15;
      v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v49 = (void **)((char *)v14 + v48);
      v50 = (void **)((char *)v15 + v48);
      v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
      v54 = v47;
      if (v53(v50, 1, v51))
      {
        v55 = sub_10002A750(&qword_100644980);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v50, v51))
        {
          case 1u:
            v83 = *v50;
            *v49 = *v50;
            v84 = v83;
            v85 = v49;
            v86 = v51;
            v87 = 1;
            goto LABEL_91;
          case 2u:
            v194 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v49, v50, v194);
            v85 = v49;
            v86 = v51;
            v87 = 2;
            goto LABEL_91;
          case 3u:
            v195 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v49, v50, v195);
            v85 = v49;
            v86 = v51;
            v87 = 3;
            goto LABEL_91;
          case 4u:
            v196 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v49, v50, v196);
            v85 = v49;
            v86 = v51;
            v87 = 4;
            goto LABEL_91;
          case 5u:
            v197 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v49, v50, v197);
            v85 = v49;
            v86 = v51;
            v87 = 5;
            goto LABEL_91;
          case 6u:
            v198 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v49, v50, v198);
            v85 = v49;
            v86 = v51;
            v87 = 6;
            goto LABEL_91;
          case 8u:
            v199 = *v50;
            *v49 = *v50;
            v200 = v199;
            v85 = v49;
            v86 = v51;
            v87 = 8;
            goto LABEL_91;
          case 9u:
            v201 = *v50;
            *v49 = *v50;
            v202 = v201;
            v85 = v49;
            v86 = v51;
            v87 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v85, v86, v87);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(v52 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v58 = v14;
      v59 = v16;
      v60 = 4;
      goto LABEL_98;
    case 5u:
      *v14 = *v15;
      *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
      *(_WORD *)((char *)v14 + 9) = *(_WORD *)((char *)v15 + 9);
      v56 = v15[2];
      v14[2] = v56;
      v57 = v56;
      v58 = v14;
      v59 = v16;
      v60 = 5;
      goto LABEL_98;
    case 6u:
      v68 = *v15;
      *v14 = *v15;
      v69 = v68;
      v58 = v14;
      v59 = v16;
      v60 = 6;
      goto LABEL_98;
    case 7u:
      v61 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48))(v15, 1, v61))
      {
        v63 = sub_10002A750(&qword_100644600);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v88 = *v15;
        *v14 = *v15;
        v89 = *(int *)(v61 + 20);
        v208 = (char *)v14 + v89;
        v90 = (char *)v15 + v89;
        v91 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v92 = v16;
        v93 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v91 - 8) + 16);
        v94 = swift_bridgeObjectRetain(v88);
        v93(v208, v90, v91, v94);
        v16 = v92;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v62 + 56))(v14, 0, 1, v61);
      }
      v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v96 = (void **)((char *)v14 + v95);
      v97 = (void **)((char *)v15 + v95);
      v98 = v97[1];
      if (v98)
      {
        *v96 = *v97;
        v96[1] = v98;
        v99 = (void *)v97[2];
        v96[2] = v99;
        swift_bridgeObjectRetain(v98);
        v100 = v99;
      }
      else
      {
        *(_OWORD *)v96 = *(_OWORD *)v97;
        v96[2] = v97[2];
      }
      v58 = v14;
      v59 = v16;
      v60 = 7;
      goto LABEL_98;
    case 8u:
      v70 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v71 + 48))(v15, 1, v70))
      {
        v72 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        v101 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v14, v15, v101);
        *((_BYTE *)v14 + *(int *)(v70 + 20)) = *((_BYTE *)v15 + *(int *)(v70 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v71 + 56))(v14, 0, 1, v70);
      }
      v102 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)v14 + *(int *)(v102 + 20)) = *(void **)((char *)v15 + *(int *)(v102 + 20));
      v58 = v14;
      v59 = v16;
      v60 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)v14 = *(_BYTE *)v15;
      v64 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v65 = (char *)v14 + v64;
      v66 = (char *)v15 + v64;
      v67 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      v58 = v14;
      v59 = v16;
      v60 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v58, v59, v60);
      break;
    default:
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      break;
  }
  v204 = type metadata accessor for RemindersInsertionRequest(0);
  *(void **)((char *)v14 + *(int *)(v204 + 20)) = *(void **)((char *)v15 + *(int *)(v204 + 20));
  *(void **)((char *)v14 + *(int *)(v204 + 24)) = *(void **)((char *)v15 + *(int *)(v204 + 24));
  swift_retain();
  return v5;
}

uint64_t sub_1002157B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void **v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(void **, uint64_t, uint64_t);
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  void **v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  void *v98;
  id v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  void *v148;
  id v149;
  int *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  id v185;
  void *v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  id v194;
  void *v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  id v203;
  void *v204;
  id v205;
  uint64_t v206;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int *v212;
  int *v213;
  char *v214;
  unsigned __int8 v215;
  char v216;
  unsigned __int8 v217;
  char v218;
  uint64_t v219;
  uint64_t v220;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (void **)(a1 + v12);
  v14 = (void **)(a2 + v12);
  if (a1 != a2)
  {
    sub_10001F544(a1 + v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v14, v15))
    {
      case 0u:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v219 = v15;
        switch(swift_getEnumCaseMultiPayload(v14, v16))
        {
          case 1u:
            v17 = *v14;
            *v13 = *v14;
            v18 = v17;
            v19 = v13;
            v20 = v16;
            v21 = 1;
            goto LABEL_42;
          case 2u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v13, v14, v103);
            v19 = v13;
            v20 = v16;
            v21 = 2;
            goto LABEL_42;
          case 3u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v13, v14, v104);
            v19 = v13;
            v20 = v16;
            v21 = 3;
            goto LABEL_42;
          case 4u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v13, v14, v105);
            v19 = v13;
            v20 = v16;
            v21 = 4;
            goto LABEL_42;
          case 5u:
            v106 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v13, v14, v106);
            v19 = v13;
            v20 = v16;
            v21 = 5;
            goto LABEL_42;
          case 6u:
            v107 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v13, v14, v107);
            v19 = v13;
            v20 = v16;
            v21 = 6;
            goto LABEL_42;
          case 8u:
            v108 = *v14;
            *v13 = *v14;
            v109 = v108;
            v19 = v13;
            v20 = v16;
            v21 = 8;
            goto LABEL_42;
          case 9u:
            v110 = *v14;
            *v13 = *v14;
            v111 = v110;
            v19 = v13;
            v20 = v16;
            v21 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        v112 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v113 = v112[5];
        v114 = (char *)v13 + v113;
        v115 = (char *)v14 + v113;
        if (*(void **)((char *)v14 + v113 + 8))
        {
          v212 = v112;
          *(_QWORD *)v114 = *(_QWORD *)v115;
          v116 = *((_QWORD *)v115 + 1);
          *((_QWORD *)v114 + 1) = v116;
          v117 = (void *)*((_QWORD *)v115 + 2);
          v118 = *((_QWORD *)v115 + 3);
          v119 = *((_QWORD *)v115 + 4);
          v120 = *((_QWORD *)v115 + 5);
          v121 = *((_QWORD *)v115 + 7);
          v208 = *((_QWORD *)v115 + 6);
          v215 = v115[64];
          swift_bridgeObjectRetain(v116);
          sub_10003E1F0(v117, v118, v119, v120, v208, v121, v215);
          *((_QWORD *)v114 + 2) = v117;
          *((_QWORD *)v114 + 3) = v118;
          *((_QWORD *)v114 + 4) = v119;
          *((_QWORD *)v114 + 5) = v120;
          *((_QWORD *)v114 + 6) = v208;
          *((_QWORD *)v114 + 7) = v121;
          v114[64] = v215;
          v114[65] = v115[65];
          v114[66] = v115[66];
          v114[67] = v115[67];
          v114[68] = v115[68];
          v122 = v115[120];
          if (v122 == 255)
          {
            v123 = *(_OWORD *)(v115 + 72);
            v124 = *(_OWORD *)(v115 + 88);
            v125 = *(_OWORD *)(v115 + 104);
            v114[120] = v115[120];
            *(_OWORD *)(v114 + 88) = v124;
            *(_OWORD *)(v114 + 104) = v125;
            *(_OWORD *)(v114 + 72) = v123;
          }
          else
          {
            v216 = v122 & 1;
            v134 = (void *)*((_QWORD *)v115 + 9);
            v133 = *((_QWORD *)v115 + 10);
            v135 = *((_QWORD *)v115 + 11);
            v136 = *((_QWORD *)v115 + 12);
            v137 = *((_QWORD *)v115 + 13);
            v209 = *((_QWORD *)v115 + 14);
            sub_10002B764(v134, v133, v135, v136, v137, v209, v122 & 1);
            *((_QWORD *)v114 + 9) = v134;
            *((_QWORD *)v114 + 10) = v133;
            *((_QWORD *)v114 + 11) = v135;
            *((_QWORD *)v114 + 12) = v136;
            *((_QWORD *)v114 + 13) = v137;
            *((_QWORD *)v114 + 14) = v209;
            v114[120] = v216;
          }
          v132 = v219;
          v114[121] = v115[121];
          v112 = v212;
        }
        else
        {
          v126 = *(_OWORD *)v115;
          v127 = *((_OWORD *)v115 + 1);
          v128 = *((_OWORD *)v115 + 3);
          *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
          *((_OWORD *)v114 + 3) = v128;
          *(_OWORD *)v114 = v126;
          *((_OWORD *)v114 + 1) = v127;
          v129 = *((_OWORD *)v115 + 4);
          v130 = *((_OWORD *)v115 + 5);
          v131 = *((_OWORD *)v115 + 6);
          *(_OWORD *)(v114 + 106) = *(_OWORD *)(v115 + 106);
          *((_OWORD *)v114 + 5) = v130;
          *((_OWORD *)v114 + 6) = v131;
          *((_OWORD *)v114 + 4) = v129;
          v132 = v15;
        }
        *((_BYTE *)v13 + v112[6]) = *((_BYTE *)v14 + v112[6]);
        *((_BYTE *)v13 + v112[7]) = *((_BYTE *)v14 + v112[7]);
        *((_BYTE *)v13 + v112[8]) = *((_BYTE *)v14 + v112[8]);
        *((_BYTE *)v13 + v112[9]) = *((_BYTE *)v14 + v112[9]);
        *((_BYTE *)v13 + v112[10]) = *((_BYTE *)v14 + v112[10]);
        v138 = v112[11];
        v139 = *(void **)((char *)v14 + v138);
        *(void **)((char *)v13 + v138) = v139;
        v140 = v139;
        v57 = v13;
        v58 = v132;
        v59 = 0;
        goto LABEL_99;
      case 1u:
        v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v220 = v15;
        switch(swift_getEnumCaseMultiPayload(v14, v22))
        {
          case 1u:
            v23 = *v14;
            *v13 = *v14;
            v24 = v23;
            v25 = v13;
            v26 = v22;
            v27 = 1;
            goto LABEL_58;
          case 2u:
            v141 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v13, v14, v141);
            v25 = v13;
            v26 = v22;
            v27 = 2;
            goto LABEL_58;
          case 3u:
            v142 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v13, v14, v142);
            v25 = v13;
            v26 = v22;
            v27 = 3;
            goto LABEL_58;
          case 4u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v13, v14, v143);
            v25 = v13;
            v26 = v22;
            v27 = 4;
            goto LABEL_58;
          case 5u:
            v144 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v13, v14, v144);
            v25 = v13;
            v26 = v22;
            v27 = 5;
            goto LABEL_58;
          case 6u:
            v145 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v13, v14, v145);
            v25 = v13;
            v26 = v22;
            v27 = 6;
            goto LABEL_58;
          case 8u:
            v146 = *v14;
            *v13 = *v14;
            v147 = v146;
            v25 = v13;
            v26 = v22;
            v27 = 8;
            goto LABEL_58;
          case 9u:
            v148 = *v14;
            *v13 = *v14;
            v149 = v148;
            v25 = v13;
            v26 = v22;
            v27 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v25, v26, v27);
            break;
          default:
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
            break;
        }
        v150 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v151 = v150[5];
        v152 = (char *)v13 + v151;
        v153 = (char *)v14 + v151;
        if (*(void **)((char *)v14 + v151 + 8))
        {
          v213 = v150;
          *(_QWORD *)v152 = *(_QWORD *)v153;
          v154 = *((_QWORD *)v153 + 1);
          *((_QWORD *)v152 + 1) = v154;
          v155 = (void *)*((_QWORD *)v153 + 2);
          v156 = *((_QWORD *)v153 + 3);
          v157 = *((_QWORD *)v153 + 4);
          v158 = *((_QWORD *)v153 + 5);
          v159 = *((_QWORD *)v153 + 7);
          v210 = *((_QWORD *)v153 + 6);
          v217 = v153[64];
          swift_bridgeObjectRetain(v154);
          sub_10003E1F0(v155, v156, v157, v158, v210, v159, v217);
          *((_QWORD *)v152 + 2) = v155;
          *((_QWORD *)v152 + 3) = v156;
          *((_QWORD *)v152 + 4) = v157;
          *((_QWORD *)v152 + 5) = v158;
          *((_QWORD *)v152 + 6) = v210;
          *((_QWORD *)v152 + 7) = v159;
          v152[64] = v217;
          v152[65] = v153[65];
          v152[66] = v153[66];
          v152[67] = v153[67];
          v152[68] = v153[68];
          v160 = v153[120];
          if (v160 == 255)
          {
            v161 = *(_OWORD *)(v153 + 72);
            v162 = *(_OWORD *)(v153 + 88);
            v163 = *(_OWORD *)(v153 + 104);
            v152[120] = v153[120];
            *(_OWORD *)(v152 + 88) = v162;
            *(_OWORD *)(v152 + 104) = v163;
            *(_OWORD *)(v152 + 72) = v161;
          }
          else
          {
            v218 = v160 & 1;
            v172 = (void *)*((_QWORD *)v153 + 9);
            v171 = *((_QWORD *)v153 + 10);
            v173 = *((_QWORD *)v153 + 11);
            v174 = *((_QWORD *)v153 + 12);
            v175 = *((_QWORD *)v153 + 13);
            v211 = *((_QWORD *)v153 + 14);
            sub_10002B764(v172, v171, v173, v174, v175, v211, v160 & 1);
            *((_QWORD *)v152 + 9) = v172;
            *((_QWORD *)v152 + 10) = v171;
            *((_QWORD *)v152 + 11) = v173;
            *((_QWORD *)v152 + 12) = v174;
            *((_QWORD *)v152 + 13) = v175;
            *((_QWORD *)v152 + 14) = v211;
            v152[120] = v218;
          }
          v170 = v220;
          v152[121] = v153[121];
          v150 = v213;
        }
        else
        {
          v164 = *(_OWORD *)v153;
          v165 = *((_OWORD *)v153 + 1);
          v166 = *((_OWORD *)v153 + 3);
          *((_OWORD *)v152 + 2) = *((_OWORD *)v153 + 2);
          *((_OWORD *)v152 + 3) = v166;
          *(_OWORD *)v152 = v164;
          *((_OWORD *)v152 + 1) = v165;
          v167 = *((_OWORD *)v153 + 4);
          v168 = *((_OWORD *)v153 + 5);
          v169 = *((_OWORD *)v153 + 6);
          *(_OWORD *)(v152 + 106) = *(_OWORD *)(v153 + 106);
          *((_OWORD *)v152 + 5) = v168;
          *((_OWORD *)v152 + 6) = v169;
          *((_OWORD *)v152 + 4) = v167;
          v170 = v15;
        }
        *((_BYTE *)v13 + v150[6]) = *((_BYTE *)v14 + v150[6]);
        *((_BYTE *)v13 + v150[7]) = *((_BYTE *)v14 + v150[7]);
        *((_BYTE *)v13 + v150[8]) = *((_BYTE *)v14 + v150[8]);
        *((_BYTE *)v13 + v150[9]) = *((_BYTE *)v14 + v150[9]);
        *((_BYTE *)v13 + v150[10]) = *((_BYTE *)v14 + v150[10]);
        v176 = v150[11];
        v177 = *(void **)((char *)v14 + v176);
        *(void **)((char *)v13 + v176) = v177;
        v178 = v177;
        v57 = v13;
        v58 = v170;
        v59 = 1;
        goto LABEL_99;
      case 2u:
        v28 = *v14;
        *v13 = *v14;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)v13 + v29);
        v31 = (void **)((char *)v14 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v72 = *v31;
              *v30 = *v31;
              v73 = v72;
              v74 = v30;
              v75 = v32;
              v76 = 1;
              goto LABEL_74;
            case 2u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v30, v31, v179);
              v74 = v30;
              v75 = v32;
              v76 = 2;
              goto LABEL_74;
            case 3u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v30, v31, v180);
              v74 = v30;
              v75 = v32;
              v76 = 3;
              goto LABEL_74;
            case 4u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v74 = v30;
              v75 = v32;
              v76 = 4;
              goto LABEL_74;
            case 5u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v74 = v30;
              v75 = v32;
              v76 = 5;
              goto LABEL_74;
            case 6u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v74 = v30;
              v75 = v32;
              v76 = 6;
              goto LABEL_74;
            case 8u:
              v184 = *v31;
              *v30 = *v31;
              v185 = v184;
              v74 = v30;
              v75 = v32;
              v76 = 8;
              goto LABEL_74;
            case 9u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v74 = v30;
              v75 = v32;
              v76 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v74, v75, v76);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v57 = v13;
        v58 = v15;
        v59 = 2;
        goto LABEL_99;
      case 3u:
        v37 = *v14;
        *v13 = *v14;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)v13 + v38);
        v40 = (void **)((char *)v14 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v77 = *v40;
              *v39 = *v40;
              v78 = v77;
              v79 = v39;
              v80 = v41;
              v81 = 1;
              goto LABEL_85;
            case 2u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v39, v40, v188);
              v79 = v39;
              v80 = v41;
              v81 = 2;
              goto LABEL_85;
            case 3u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v39, v40, v189);
              v79 = v39;
              v80 = v41;
              v81 = 3;
              goto LABEL_85;
            case 4u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v79 = v39;
              v80 = v41;
              v81 = 4;
              goto LABEL_85;
            case 5u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v79 = v39;
              v80 = v41;
              v81 = 5;
              goto LABEL_85;
            case 6u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v79 = v39;
              v80 = v41;
              v81 = 6;
              goto LABEL_85;
            case 8u:
              v193 = *v40;
              *v39 = *v40;
              v194 = v193;
              v79 = v39;
              v80 = v41;
              v81 = 8;
              goto LABEL_85;
            case 9u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v79 = v39;
              v80 = v41;
              v81 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v79, v80, v81);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v57 = v13;
        v58 = v15;
        v59 = 3;
        goto LABEL_99;
      case 4u:
        v46 = *v14;
        *v13 = *v14;
        v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v48 = (void **)((char *)v13 + v47);
        v49 = (void **)((char *)v14 + v47);
        v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v51 = *(_QWORD *)(v50 - 8);
        v52 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v51 + 48);
        v53 = v46;
        if (v52(v49, 1, v50))
        {
          v54 = sub_10002A750(&qword_100644980);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v49, v50))
          {
            case 1u:
              v82 = *v49;
              *v48 = *v49;
              v83 = v82;
              v84 = v48;
              v85 = v50;
              v86 = 1;
              goto LABEL_96;
            case 2u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v48, v49, v197);
              v84 = v48;
              v85 = v50;
              v86 = 2;
              goto LABEL_96;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v48, v49, v198);
              v84 = v48;
              v85 = v50;
              v86 = 3;
              goto LABEL_96;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v48, v49, v199);
              v84 = v48;
              v85 = v50;
              v86 = 4;
              goto LABEL_96;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v48, v49, v200);
              v84 = v48;
              v85 = v50;
              v86 = 5;
              goto LABEL_96;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v48, v49, v201);
              v84 = v48;
              v85 = v50;
              v86 = 6;
              goto LABEL_96;
            case 8u:
              v202 = *v49;
              *v48 = *v49;
              v203 = v202;
              v84 = v48;
              v85 = v50;
              v86 = 8;
              goto LABEL_96;
            case 9u:
              v204 = *v49;
              *v48 = *v49;
              v205 = v204;
              v84 = v48;
              v85 = v50;
              v86 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v84, v85, v86);
              break;
            default:
              memcpy(v48, v49, *(_QWORD *)(v51 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        v57 = v13;
        v58 = v15;
        v59 = 4;
        goto LABEL_99;
      case 5u:
        *v13 = *v14;
        *((_BYTE *)v13 + 8) = *((_BYTE *)v14 + 8);
        *((_BYTE *)v13 + 9) = *((_BYTE *)v14 + 9);
        *((_BYTE *)v13 + 10) = *((_BYTE *)v14 + 10);
        v55 = v14[2];
        v13[2] = v55;
        v56 = v55;
        v57 = v13;
        v58 = v15;
        v59 = 5;
        goto LABEL_99;
      case 6u:
        v67 = *v14;
        *v13 = *v14;
        v68 = v67;
        v57 = v13;
        v58 = v15;
        v59 = 6;
        goto LABEL_99;
      case 7u:
        v60 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(v14, 1, v60))
        {
          v62 = sub_10002A750(&qword_100644600);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v87 = *v14;
          *v13 = *v14;
          v88 = *(int *)(v60 + 20);
          v214 = (char *)v13 + v88;
          v89 = (char *)v14 + v88;
          v90 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v91 = v15;
          v92 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v90 - 8) + 16);
          v93 = swift_bridgeObjectRetain(v87);
          v92(v214, v89, v90, v93);
          v15 = v91;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(v13, 0, 1, v60);
        }
        v94 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v95 = (void **)((char *)v13 + v94);
        v96 = (void **)((char *)v14 + v94);
        if (v96[1])
        {
          *v95 = *v96;
          v97 = v96[1];
          v95[1] = v97;
          v98 = (void *)v96[2];
          v95[2] = v98;
          swift_bridgeObjectRetain(v97);
          v99 = v98;
        }
        else
        {
          v100 = *(_OWORD *)v96;
          v95[2] = v96[2];
          *(_OWORD *)v95 = v100;
        }
        v57 = v13;
        v58 = v15;
        v59 = 7;
        goto LABEL_99;
      case 8u:
        v69 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v70 + 48))(v14, 1, v69))
        {
          v71 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v101 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v13, v14, v101);
          *((_BYTE *)v13 + *(int *)(v69 + 20)) = *((_BYTE *)v14 + *(int *)(v69 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v70 + 56))(v13, 0, 1, v69);
        }
        v102 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v13 + *(int *)(v102 + 20)) = *(void **)((char *)v14 + *(int *)(v102 + 20));
        v57 = v13;
        v58 = v15;
        v59 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)v13 = *(_BYTE *)v14;
        v63 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v64 = (char *)v13 + v63;
        v65 = (char *)v14 + v63;
        v66 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        v57 = v13;
        v58 = v15;
        v59 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v57, v58, v59);
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
  }
  v206 = type metadata accessor for RemindersInsertionRequest(0);
  *(void **)((char *)v13 + *(int *)(v206 + 20)) = *(void **)((char *)v14 + *(int *)(v206 + 20));
  *(void **)((char *)v13 + *(int *)(v206 + 24)) = *(void **)((char *)v14 + *(int *)(v206 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10021685C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  _OWORD *v94;
  _OWORD *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v12, v13))
  {
    case 0u:
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v12, v14))
      {
        case 2u:
          v15 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
          v16 = v11;
          v17 = v14;
          v18 = 2;
          goto LABEL_33;
        case 3u:
          v76 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v11, v12, v76);
          v16 = v11;
          v17 = v14;
          v18 = 3;
          goto LABEL_33;
        case 4u:
          v77 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v11, v12, v77);
          v16 = v11;
          v17 = v14;
          v18 = 4;
          goto LABEL_33;
        case 5u:
          v78 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v11, v12, v78);
          v16 = v11;
          v17 = v14;
          v18 = 5;
          goto LABEL_33;
        case 6u:
          v79 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v11, v12, v79);
          v16 = v11;
          v17 = v14;
          v18 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v80 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v81 = v80[5];
      v82 = (_OWORD *)((char *)v11 + v81);
      v83 = (_OWORD *)((char *)v12 + v81);
      v84 = v83[3];
      v82[2] = v83[2];
      v82[3] = v84;
      v85 = v83[1];
      *v82 = *v83;
      v82[1] = v85;
      *(_OWORD *)((char *)v82 + 106) = *(_OWORD *)((char *)v83 + 106);
      v86 = v83[6];
      v87 = v83[4];
      v82[5] = v83[5];
      v82[6] = v86;
      v82[4] = v87;
      *((_BYTE *)v11 + v80[6]) = *((_BYTE *)v12 + v80[6]);
      *((_BYTE *)v11 + v80[7]) = *((_BYTE *)v12 + v80[7]);
      *((_BYTE *)v11 + v80[8]) = *((_BYTE *)v12 + v80[8]);
      *((_BYTE *)v11 + v80[9]) = *((_BYTE *)v12 + v80[9]);
      *((_BYTE *)v11 + v80[10]) = *((_BYTE *)v12 + v80[10]);
      *(_QWORD *)((char *)v11 + v80[11]) = *(_QWORD *)((char *)v12 + v80[11]);
      v52 = v11;
      v53 = v13;
      v54 = 0;
      goto LABEL_66;
    case 1u:
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v12, v19))
      {
        case 2u:
          v20 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v11, v12, v20);
          v21 = v11;
          v22 = v19;
          v23 = 2;
          goto LABEL_40;
        case 3u:
          v88 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v11, v12, v88);
          v21 = v11;
          v22 = v19;
          v23 = 3;
          goto LABEL_40;
        case 4u:
          v89 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v11, v12, v89);
          v21 = v11;
          v22 = v19;
          v23 = 4;
          goto LABEL_40;
        case 5u:
          v90 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v11, v12, v90);
          v21 = v11;
          v22 = v19;
          v23 = 5;
          goto LABEL_40;
        case 6u:
          v91 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v11, v12, v91);
          v21 = v11;
          v22 = v19;
          v23 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v21, v22, v23);
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          break;
      }
      v92 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v93 = v92[5];
      v94 = (_OWORD *)((char *)v11 + v93);
      v95 = (_OWORD *)((char *)v12 + v93);
      v96 = v95[3];
      v94[2] = v95[2];
      v94[3] = v96;
      v97 = v95[1];
      *v94 = *v95;
      v94[1] = v97;
      *(_OWORD *)((char *)v94 + 106) = *(_OWORD *)((char *)v95 + 106);
      v98 = v95[6];
      v99 = v95[4];
      v94[5] = v95[5];
      v94[6] = v98;
      v94[4] = v99;
      *((_BYTE *)v11 + v92[6]) = *((_BYTE *)v12 + v92[6]);
      *((_BYTE *)v11 + v92[7]) = *((_BYTE *)v12 + v92[7]);
      *((_BYTE *)v11 + v92[8]) = *((_BYTE *)v12 + v92[8]);
      *((_BYTE *)v11 + v92[9]) = *((_BYTE *)v12 + v92[9]);
      *((_BYTE *)v11 + v92[10]) = *((_BYTE *)v12 + v92[10]);
      *(_QWORD *)((char *)v11 + v92[11]) = *(_QWORD *)((char *)v12 + v92[11]);
      v52 = v11;
      v53 = v13;
      v54 = 1;
      goto LABEL_66;
    case 2u:
      *v11 = *v12;
      v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v25 = (char *)v11 + v24;
      v26 = (char *)v12 + v24;
      v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = sub_10002A750(&qword_100644980);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v26, v27))
        {
          case 2u:
            v55 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v25, v26, v55);
            v56 = v25;
            v57 = v27;
            v58 = 2;
            goto LABEL_47;
          case 3u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v25, v26, v100);
            v56 = v25;
            v57 = v27;
            v58 = 3;
            goto LABEL_47;
          case 4u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v25, v26, v101);
            v56 = v25;
            v57 = v27;
            v58 = 4;
            goto LABEL_47;
          case 5u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v25, v26, v102);
            v56 = v25;
            v57 = v27;
            v58 = 5;
            goto LABEL_47;
          case 6u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v25, v26, v103);
            v56 = v25;
            v57 = v27;
            v58 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(v25, v26, *(_QWORD *)(v28 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v52 = v11;
      v53 = v13;
      v54 = 2;
      goto LABEL_66;
    case 3u:
      *v11 = *v12;
      v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v31 = (char *)v11 + v30;
      v32 = (char *)v12 + v30;
      v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = sub_10002A750(&qword_100644980);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v32, v33))
        {
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v31, v32, v59);
            v60 = v31;
            v61 = v33;
            v62 = 2;
            goto LABEL_55;
          case 3u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v31, v32, v104);
            v60 = v31;
            v61 = v33;
            v62 = 3;
            goto LABEL_55;
          case 4u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v31, v32, v105);
            v60 = v31;
            v61 = v33;
            v62 = 4;
            goto LABEL_55;
          case 5u:
            v106 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v31, v32, v106);
            v60 = v31;
            v61 = v33;
            v62 = 5;
            goto LABEL_55;
          case 6u:
            v107 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v31, v32, v107);
            v60 = v31;
            v61 = v33;
            v62 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(v34 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v52 = v11;
      v53 = v13;
      v54 = 3;
      goto LABEL_66;
    case 4u:
      *v11 = *v12;
      v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v37 = (char *)v11 + v36;
      v38 = (char *)v12 + v36;
      v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = sub_10002A750(&qword_100644980);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v38, v39))
        {
          case 2u:
            v63 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v37, v38, v63);
            v64 = v37;
            v65 = v39;
            v66 = 2;
            goto LABEL_63;
          case 3u:
            v108 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v37, v38, v108);
            v64 = v37;
            v65 = v39;
            v66 = 3;
            goto LABEL_63;
          case 4u:
            v109 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v37, v38, v109);
            v64 = v37;
            v65 = v39;
            v66 = 4;
            goto LABEL_63;
          case 5u:
            v110 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v37, v38, v110);
            v64 = v37;
            v65 = v39;
            v66 = 5;
            goto LABEL_63;
          case 6u:
            v111 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v37, v38, v111);
            v64 = v37;
            v65 = v39;
            v66 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v64, v65, v66);
            break;
          default:
            memcpy(v37, v38, *(_QWORD *)(v40 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      v52 = v11;
      v53 = v13;
      v54 = 4;
      goto LABEL_66;
    case 7u:
      v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v12, 1, v42))
      {
        v44 = sub_10002A750(&qword_100644600);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        v67 = *(int *)(v42 + 20);
        v68 = (char *)v11 + v67;
        v69 = (char *)v12 + v67;
        v70 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v11, 0, 1, v42);
      }
      v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v72 = (char *)v11 + v71;
      v73 = (char *)v12 + v71;
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
      v52 = v11;
      v53 = v13;
      v54 = 7;
      goto LABEL_66;
    case 8u:
      v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v12, 1, v45))
      {
        v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v74 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v11, v12, v74);
        *((_BYTE *)v11 + *(int *)(v45 + 20)) = *((_BYTE *)v12 + *(int *)(v45 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v11, 0, 1, v45);
      }
      v75 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v11 + *(int *)(v75 + 20)) = *(_QWORD *)((char *)v12 + *(int *)(v75 + 20));
      v52 = v11;
      v53 = v13;
      v54 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)v11 = *(_BYTE *)v12;
      v48 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v49 = (char *)v11 + v48;
      v50 = (char *)v12 + v48;
      v51 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      v52 = v11;
      v53 = v13;
      v54 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v52, v53, v54);
      break;
    default:
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      break;
  }
  v112 = type metadata accessor for RemindersInsertionRequest(0);
  *(_QWORD *)((char *)v11 + *(int *)(v112 + 20)) = *(_QWORD *)((char *)v12 + *(int *)(v112 + 20));
  *(_QWORD *)((char *)v11 + *(int *)(v112 + 24)) = *(_QWORD *)((char *)v12 + *(int *)(v112 + 24));
  return a1;
}

uint64_t sub_10021741C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  _OWORD *v83;
  _OWORD *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DateComponents(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  if (a1 != a2)
  {
    sub_10001F544(a1 + v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v13, v14))
    {
      case 0u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v13, v15))
        {
          case 2u:
            v16 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
            v17 = v12;
            v18 = v15;
            v19 = 2;
            goto LABEL_34;
          case 3u:
            v77 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v12, v13, v77);
            v17 = v12;
            v18 = v15;
            v19 = 3;
            goto LABEL_34;
          case 4u:
            v78 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v12, v13, v78);
            v17 = v12;
            v18 = v15;
            v19 = 4;
            goto LABEL_34;
          case 5u:
            v79 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v12, v13, v79);
            v17 = v12;
            v18 = v15;
            v19 = 5;
            goto LABEL_34;
          case 6u:
            v80 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v12, v13, v80);
            v17 = v12;
            v18 = v15;
            v19 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v81 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v82 = v81[5];
        v83 = (_OWORD *)((char *)v12 + v82);
        v84 = (_OWORD *)((char *)v13 + v82);
        v85 = v84[3];
        v83[2] = v84[2];
        v83[3] = v85;
        v86 = v84[1];
        *v83 = *v84;
        v83[1] = v86;
        *(_OWORD *)((char *)v83 + 106) = *(_OWORD *)((char *)v84 + 106);
        v87 = v84[6];
        v88 = v84[4];
        v83[5] = v84[5];
        v83[6] = v87;
        v83[4] = v88;
        *((_BYTE *)v12 + v81[6]) = *((_BYTE *)v13 + v81[6]);
        *((_BYTE *)v12 + v81[7]) = *((_BYTE *)v13 + v81[7]);
        *((_BYTE *)v12 + v81[8]) = *((_BYTE *)v13 + v81[8]);
        *((_BYTE *)v12 + v81[9]) = *((_BYTE *)v13 + v81[9]);
        *((_BYTE *)v12 + v81[10]) = *((_BYTE *)v13 + v81[10]);
        *(_QWORD *)((char *)v12 + v81[11]) = *(_QWORD *)((char *)v13 + v81[11]);
        v53 = v12;
        v54 = v14;
        v55 = 0;
        goto LABEL_67;
      case 1u:
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v13, v20))
        {
          case 2u:
            v21 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v12, v13, v21);
            v22 = v12;
            v23 = v20;
            v24 = 2;
            goto LABEL_41;
          case 3u:
            v89 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v12, v13, v89);
            v22 = v12;
            v23 = v20;
            v24 = 3;
            goto LABEL_41;
          case 4u:
            v90 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v12, v13, v90);
            v22 = v12;
            v23 = v20;
            v24 = 4;
            goto LABEL_41;
          case 5u:
            v91 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v12, v13, v91);
            v22 = v12;
            v23 = v20;
            v24 = 5;
            goto LABEL_41;
          case 6u:
            v92 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v12, v13, v92);
            v22 = v12;
            v23 = v20;
            v24 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v22, v23, v24);
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            break;
        }
        v93 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v94 = v93[5];
        v95 = (_OWORD *)((char *)v12 + v94);
        v96 = (_OWORD *)((char *)v13 + v94);
        v97 = v96[3];
        v95[2] = v96[2];
        v95[3] = v97;
        v98 = v96[1];
        *v95 = *v96;
        v95[1] = v98;
        *(_OWORD *)((char *)v95 + 106) = *(_OWORD *)((char *)v96 + 106);
        v99 = v96[6];
        v100 = v96[4];
        v95[5] = v96[5];
        v95[6] = v99;
        v95[4] = v100;
        *((_BYTE *)v12 + v93[6]) = *((_BYTE *)v13 + v93[6]);
        *((_BYTE *)v12 + v93[7]) = *((_BYTE *)v13 + v93[7]);
        *((_BYTE *)v12 + v93[8]) = *((_BYTE *)v13 + v93[8]);
        *((_BYTE *)v12 + v93[9]) = *((_BYTE *)v13 + v93[9]);
        *((_BYTE *)v12 + v93[10]) = *((_BYTE *)v13 + v93[10]);
        *(_QWORD *)((char *)v12 + v93[11]) = *(_QWORD *)((char *)v13 + v93[11]);
        v53 = v12;
        v54 = v14;
        v55 = 1;
        goto LABEL_67;
      case 2u:
        *v12 = *v13;
        v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v26 = (char *)v12 + v25;
        v27 = (char *)v13 + v25;
        v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_10002A750(&qword_100644980);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v27, v28))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v26, v27, v56);
              v57 = v26;
              v58 = v28;
              v59 = 2;
              goto LABEL_48;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v26, v27, v101);
              v57 = v26;
              v58 = v28;
              v59 = 3;
              goto LABEL_48;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v26, v27, v102);
              v57 = v26;
              v58 = v28;
              v59 = 4;
              goto LABEL_48;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v26, v27, v103);
              v57 = v26;
              v58 = v28;
              v59 = 5;
              goto LABEL_48;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v26, v27, v104);
              v57 = v26;
              v58 = v28;
              v59 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v26, v27, *(_QWORD *)(v29 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v53 = v12;
        v54 = v14;
        v55 = 2;
        goto LABEL_67;
      case 3u:
        *v12 = *v13;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (char *)v12 + v31;
        v33 = (char *)v13 + v31;
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 2u:
              v60 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v32, v33, v60);
              v61 = v32;
              v62 = v34;
              v63 = 2;
              goto LABEL_56;
            case 3u:
              v105 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v32, v33, v105);
              v61 = v32;
              v62 = v34;
              v63 = 3;
              goto LABEL_56;
            case 4u:
              v106 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v32, v33, v106);
              v61 = v32;
              v62 = v34;
              v63 = 4;
              goto LABEL_56;
            case 5u:
              v107 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v32, v33, v107);
              v61 = v32;
              v62 = v34;
              v63 = 5;
              goto LABEL_56;
            case 6u:
              v108 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v32, v33, v108);
              v61 = v32;
              v62 = v34;
              v63 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v61, v62, v63);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v53 = v12;
        v54 = v14;
        v55 = 3;
        goto LABEL_67;
      case 4u:
        *v12 = *v13;
        v37 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v38 = (char *)v12 + v37;
        v39 = (char *)v13 + v37;
        v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          v42 = sub_10002A750(&qword_100644980);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v39, v40))
          {
            case 2u:
              v64 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v38, v39, v64);
              v65 = v38;
              v66 = v40;
              v67 = 2;
              goto LABEL_64;
            case 3u:
              v109 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v38, v39, v109);
              v65 = v38;
              v66 = v40;
              v67 = 3;
              goto LABEL_64;
            case 4u:
              v110 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v38, v39, v110);
              v65 = v38;
              v66 = v40;
              v67 = 4;
              goto LABEL_64;
            case 5u:
              v111 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v38, v39, v111);
              v65 = v38;
              v66 = v40;
              v67 = 5;
              goto LABEL_64;
            case 6u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v38, v39, v112);
              v65 = v38;
              v66 = v40;
              v67 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v38, v39, *(_QWORD *)(v41 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        v53 = v12;
        v54 = v14;
        v55 = 4;
        goto LABEL_67;
      case 7u:
        v43 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v44 = *(_QWORD *)(v43 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v43))
        {
          v45 = sub_10002A750(&qword_100644600);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          v68 = *(int *)(v43 + 20);
          v69 = (char *)v12 + v68;
          v70 = (char *)v13 + v68;
          v71 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v12, 0, 1, v43);
        }
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v73 = (char *)v12 + v72;
        v74 = (char *)v13 + v72;
        *(_OWORD *)v73 = *(_OWORD *)v74;
        *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
        v53 = v12;
        v54 = v14;
        v55 = 7;
        goto LABEL_67;
      case 8u:
        v46 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v46))
        {
          v48 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v75 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v12, v13, v75);
          *((_BYTE *)v12 + *(int *)(v46 + 20)) = *((_BYTE *)v13 + *(int *)(v46 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v12, 0, 1, v46);
        }
        v76 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v12 + *(int *)(v76 + 20)) = *(_QWORD *)((char *)v13 + *(int *)(v76 + 20));
        v53 = v12;
        v54 = v14;
        v55 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)v12 = *(_BYTE *)v13;
        v49 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v50 = (char *)v12 + v49;
        v51 = (char *)v13 + v49;
        v52 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        v53 = v12;
        v54 = v14;
        v55 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v53, v54, v55);
        break;
      default:
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        break;
    }
  }
  v113 = type metadata accessor for RemindersInsertionRequest(0);
  *(_QWORD *)((char *)v12 + *(int *)(v113 + 20)) = *(_QWORD *)((char *)v13 + *(int *)(v113 + 20));
  *(_QWORD *)((char *)v12 + *(int *)(v113 + 24)) = *(_QWORD *)((char *)v13 + *(int *)(v113 + 24));
  swift_release();
  return a1;
}

uint64_t sub_100218004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100218010);
}

uint64_t sub_100218010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DateComponents(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for RemindersInsertionRequest(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1002180B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002180BC);
}

uint64_t sub_1002180BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for DateComponents(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for RemindersInsertionRequest(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100218158(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_1005298C0;
  v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for DateComponents(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for RemindersInsertionRequest(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100218200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064D630);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064D630);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t *sub_100218290(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = v5;
  v12 = *v6;
  v6[3] = 0;
  swift_unknownObjectWeakInit(v6 + 2, 0);
  v6[7] = 0;
  v6[4] = (uint64_t)a1;
  v13 = type metadata accessor for TTRListEditor(0);
  v14 = sub_1002184A4();
  v15 = a1;
  v16 = a2;
  v17 = a5;
  TTRUndoableEditing.init(changeItem:undoManager:)(&v22, v16, a5, v13, v14);
  v6[8] = v22;
  v6[5] = (uint64_t)a3;
  v6[6] = a4;
  v18 = a3;
  v19 = NSUndoManager.observeChanges<A>(target:handler:)(v6, sub_1002183A0, 0, v12);

  v20 = v6[7];
  v6[7] = v19;
  swift_release(v20);
  return v6;
}

uint64_t sub_1002183A0(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v2 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v4 = Strong;
      sub_10044F94C();
      swift_unknownObjectRelease(v2);
      v2 = v4;
    }
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_1002183F8()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 56))
  {
    sub_10021876C();
    v1 = swift_retain();
    static NSUndoManager.removeObserver(with:)(v1);
    swift_release();
    sub_1000381C8(v0 + 16);

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
    swift_release();
    swift_release();
    swift_deallocClassInstance(v0, 72, 7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRIGroupDetailInteractor()
{
  return objc_opt_self(_TtC9Reminders25TTRIGroupDetailInteractor);
}

unint64_t sub_1002184A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064D710;
  if (!qword_10064D710)
  {
    v1 = type metadata accessor for TTRListEditor(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRListEditor, v1);
    atomic_store(result, (unint64_t *)&qword_10064D710);
  }
  return result;
}

void sub_1002184EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[8];
  uint64_t v18;

  if (a1)
  {
    if (qword_10063D4E8 != -1)
      swift_once(&qword_10063D4E8, sub_100218200);
    v2 = type metadata accessor for Logger(0);
    sub_100012DC4(v2, (uint64_t)qword_10064D630);
    swift_errorRetain(a1);
    v3 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v18 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_getErrorValue(a1, v17, v16);
      v7 = Error.localizedDescription.getter(v16[1], v16[2]);
      v9 = v8;
      v15 = sub_100027E40(v7, v8, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v5 + 4, v5 + 12);
      swift_bridgeObjectRelease(v9);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Error saving group: %s", v5, 0xCu);
      swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_10063D4E8 != -1)
      swift_once(&qword_10063D4E8, sub_100218200);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_10064D630);
    oslog = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Group saved!", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
  }

}

unint64_t sub_10021876C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10065C600;
  if (!qword_10065C600)
  {
    v1 = objc_opt_self(NSUndoManager);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10065C600);
  }
  return result;
}

uint64_t sub_1002187A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064D718);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064D718);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100218838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[8] = v8;
  v5[9] = v9;
  return swift_task_switch(sub_1002188AC, v8, v9);
}

uint64_t sub_1002188AC()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  __n128 v4;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 48) + 16);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_10021895C;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0, 0, 1, *(_QWORD *)(v0 + 40));
  }
  else
  {
    v4 = swift_release();
    (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 56))(*(_QWORD *)(v0 + 16), 1, 1, v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10021895C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));

  return swift_task_switch(sub_1002189AC, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1002189AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 56))(*(_QWORD *)(v0 + 16), 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002189F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100059924();
    v5 = static HLPHelpViewController.viewController(forShowing:)(a1);
    if (v5)
    {
      oslog = v5;
      objc_msgSend(v4, "presentViewController:animated:completion:");

      goto LABEL_9;
    }

  }
  if (qword_10063D4F0 != -1)
    swift_once(&qword_10063D4F0, sub_1002187A8);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_10064D718);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.fault.getter(oslog);
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempted to open help with an empty view controller or HLPHelpViewController", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
LABEL_9:

}

uint64_t sub_100218B24()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIListDetailRouter()
{
  return objc_opt_self(_TtC9Reminders20TTRIListDetailRouter);
}

uint64_t sub_100218B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064D7E0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064D7E0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100218CA4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  NSString v14;
  objc_super v15;
  _QWORD v16[19];
  uint64_t v17;

  v3 = v2;
  v15.receiver = v2;
  v15.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v15, "viewDidLoad");
  v4 = objc_msgSend(v2, "view");
  if (v4)
  {
    v5 = v4;
    v6 = objc_opt_self(UITableView);
    v7 = (void *)swift_dynamicCastObjCClassUnconditional(v5, v6, 0, 0, 0);
    v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 1.0, 8.0);
    objc_msgSend(v7, "setTableHeaderView:", v8);

    sub_100218E24();
    v9 = objc_msgSend(v3, "navigationItem");
    v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter], v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v16, ObjectType);
    v13 = v17;
    swift_bridgeObjectRetain(v17);
    sub_1000905E0((uint64_t)v16);
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setTitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

    sub_100218FB0();
  }
  else
  {
    __break(1u);
  }
}

void sub_100218E24()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v0, "didTapCancel:");
  objc_msgSend(v1, "setLeftBarButtonItem:", v2);

  v3 = objc_msgSend(v0, "navigationItem");
  v4 = objc_msgSend(v3, "leftBarButtonItem");

  swift_unknownObjectWeakAssign(&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cancelBarButtonItem], v4);
  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v0, "didTapDone:");
  objc_msgSend(v5, "setRightBarButtonItem:", v6);

  v7 = objc_msgSend(v0, "navigationItem");
  v8 = objc_msgSend(v7, "rightBarButtonItem");

  swift_unknownObjectWeakAssign(&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_doneBarButtonItem], v8);
}

void sub_100218FB0()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  _QWORD v17[5];
  id v18;
  _QWORD v19[5];
  char v20[72];

  v1 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_tableDataController;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_tableDataController])
  {
    v2 = v0;
    v18 = objc_msgSend(v0, "view");
    if (v18)
    {
      v3 = objc_opt_self(UITableView);
      v4 = swift_dynamicCastObjCClass(v18, v3);
      if (v4)
      {
        v5 = (void *)v4;
        v6 = sub_10002A750((uint64_t *)&unk_1006415A0);
        inited = swift_initStackObject(v6, v20);
        *(_OWORD *)(inited + 16) = xmmword_100525680;
        *(_QWORD *)(inited + 32) = sub_1002196D8();
        *(_QWORD *)(inited + 40) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
        *(_QWORD *)(inited + 48) = sub_1002197DC(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsSection, &OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsCell, (uint64_t (*)(uint64_t))sub_10021C18C);
        *(_QWORD *)(inited + 56) = sub_1002197DC(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsSection, &OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell, (uint64_t (*)(uint64_t))sub_10021C35C);
        v8 = sub_1002198D4();
        *(_QWORD *)(inited + 64) = v8;
        specialized Array._endMutation()(v8);
        v9 = inited;
        v10 = v18;
        v11 = sub_1002DEA58(v9);
        swift_bridgeObjectRelease(v9);
        v19[3] = sub_10021D3BC();
        v19[4] = &protocol witness table for UITableView;
        v19[0] = v5;
        v12 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController(0));
        v13 = (char *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)(v19, v11, 0, 0);
        v14 = &v13[direct field offset for TTRITableDataController.customSectionSpacing];
        swift_beginAccess(&v13[direct field offset for TTRITableDataController.customSectionSpacing], v19, 1, 0);
        *(_QWORD *)v14 = 0x4030000000000000;
        v14[8] = 0;
        v15 = *(void **)&v2[v1];
        *(_QWORD *)&v2[v1] = v13;
        v16 = v13;

        objc_msgSend(v5, "setDataSource:", v16);
        __chkstk_darwin(objc_msgSend(v5, "setDelegate:", v16));
        v17[2] = v2;
        TTRITableDataController.performBatchUpdates(by:updates:)(2, sub_10021D580, v17);

      }
      else
      {

      }
    }
  }
}

id sub_100219230(char a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[5];
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, "viewWillAppear:", a1 & 1);
  result = objc_msgSend(v2, "view");
  if (result)
  {
    v6 = result;
    v7 = objc_opt_self(UITableView);
    v8 = swift_dynamicCastObjCClassUnconditional(v6, v7, 0, 0, 0);
    v12[3] = sub_10021D3BC();
    v12[4] = &protocol witness table for UITableView;
    v12[0] = v8;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)(v12, a1 & 1);
    v9 = sub_100027F10(v12);
    v10 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v9);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "setToolbarHidden:animated:", 1, a1 & 1);

    }
    return (id)TTRKeyboardAvoidance<>.startAvoidingKeyboard()(ObjectType, &off_1005F77A8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100219378(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  char v32[24];
  objc_super v33;

  v3 = v2;
  v33.receiver = v3;
  v33.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v33, "viewDidAppear:", a1 & 1);
  objc_msgSend(v3, "becomeFirstResponder");
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter], v6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5) & 1) != 0)
    return;
  v8 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290)+ 32);
  swift_release();
  v9 = (_QWORD *)((char *)v8 + *(_QWORD *)((swift_isaMask & *v8) + 0x68));
  swift_beginAccess(v9, v32, 0, 0);
  if (!*v9)
  {

LABEL_9:
    v21 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_autoBeginEditingPerformed;
    if ((v3[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_autoBeginEditingPerformed] & 1) == 0)
    {
      v22 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290)+ 32);
      swift_release();
      v23 = (_QWORD *)((char *)v22 + *(_QWORD *)((swift_isaMask & *v22) + 0x68));
      swift_beginAccess(v23, &v31, 0, 0);
      if (*v23)
      {
        v25 = (_QWORD *)(*v23 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
        v26 = *v25;
        v27 = v25[1];
        v28 = swift_getObjectType(*v25, v24);
        v29 = *(void (**)(uint64_t, uint64_t, __n128))(v27 + 200);
        v30 = swift_unknownObjectRetain(v26);
        v29(v28, v27, v30);

        swift_unknownObjectRelease(v26);
      }
      else
      {

      }
      v3[v21] = 1;
    }
    return;
  }
  v11 = (_QWORD *)(*v9 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_getObjectType(*v11, v10);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8);
  v16 = swift_unknownObjectRetain(v13);
  v17 = v15(v14, v12, v16);
  v19 = v18;

  swift_unknownObjectRelease(v13);
  if (!v19)
    goto LABEL_9;
  swift_bridgeObjectRelease(v19);
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  if (!v20)
    goto LABEL_9;
}

uint64_t sub_1002196D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v1 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeSection;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeSection))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeSection);
  }
  else
  {
    v3 = v0;
    memset(v9, 0, 73);
    memset(v8, 0, 73);
    v4 = sub_10002A750(&qword_10064AAE0);
    v5 = swift_allocObject(v4, 64, 7);
    *(_OWORD *)(v5 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v5 + 32) = sub_10021B100();
    *(_QWORD *)(v5 + 40) = &protocol witness table for TTRITableCell<A>;
    *(_QWORD *)(v5 + 48) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290);
    *(_QWORD *)(v5 + 56) = &protocol witness table for TTRITableCell<A>;
    v6 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v6, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v9, v8, v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1002197DC(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[5];
  _OWORD v15[5];

  v4 = *a1;
  v5 = *(_QWORD *)(v3 + *a1);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v9 = v3;
    memset(v15, 0, 73);
    memset(v14, 0, 73);
    v10 = sub_10002A750(&qword_10064AAE0);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100520250;
    *(_QWORD *)(v11 + 32) = sub_1001C0D80(a2, a3);
    *(_QWORD *)(v11 + 40) = &protocol witness table for TTRITableCell<A>;
    v12 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v12, 217, 7);
    v6 = TTRITableSection.init(header:footer:items:)(v15, v14, v11);
    *(_QWORD *)(v9 + v4) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1002198D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v1 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListSection;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListSection))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListSection);
  }
  else
  {
    v3 = v0;
    memset(v9, 0, 73);
    memset(v8, 0, 73);
    v4 = sub_10002A750(&qword_10064AAE0);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100520250;
    *(_QWORD *)(v5 + 32) = sub_10021C5EC();
    *(_QWORD *)(v5 + 40) = &protocol witness table for TTRITableCell<A>;
    v6 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v6, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v9, v8, v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1002199B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  void *Strong;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  _OWORD v19[5];
  _OWORD v20[9];
  _OWORD v21[3];
  _OWORD v22[2];
  _BYTE v23[56];

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
  ObjectType = swift_getObjectType(v5, a2);
  v7 = *(_QWORD *)(v4 + 8);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v19, ObjectType, v7);
  sub_100219B6C(v19);
  sub_100219CE4((uint64_t)v19);
  sub_100219EE4((uint64_t)v19, v8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  v21[1] = v19[3];
  v21[2] = v19[4];
  v22[0] = v20[0];
  *(_OWORD *)((char *)v22 + 10) = *(_OWORD *)((char *)v20 + 10);
  v20[8] = v19[1];
  v21[0] = v19[2];
  sub_1000AE578((uint64_t)v21, (uint64_t)v23);
  sub_1000AD9D0((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
  v10 = sub_100315A10((uint64_t)v23, v9);
  LOBYTE(ObjectType) = v11;
  sub_1000AD9D0((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
  swift_bridgeObjectRelease(v9);
  v12 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsCell, (uint64_t (*)(uint64_t))sub_10021C18C)+ 32);
  swift_release();
  v17 = v10;
  v18 = ObjectType & 1;
  TTRITableCellContent.state.setter(&v17);

  sub_10021AB50((uint64_t)v19);
  sub_10021AEE8((uint64_t)v19);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_doneBarButtonItem);
  if (Strong)
  {
    v14 = Strong;
    if ((*((_QWORD *)&v19[0] + 1) & 0x2000000000000000) != 0)
      v15 = HIBYTE(*((_QWORD *)&v19[0] + 1)) & 0xFLL;
    else
      v15 = *(_QWORD *)&v19[0] & 0xFFFFFFFFFFFFLL;
    objc_msgSend(Strong, "setEnabled:", v15 != 0);

  }
  return sub_1000905E0((uint64_t)v19);
}

void sub_100219B6C(_OWORD *a1)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[3];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  __int128 v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[26];
  _BYTE v27[24];
  _QWORD v28[2];
  char v29;

  v14 = *(id *)(sub_10021B100() + 32);
  swift_release();
  v2 = a1[4];
  v24 = a1[3];
  v25 = v2;
  *(_OWORD *)v26 = a1[5];
  *(_OWORD *)&v26[10] = *(_OWORD *)((char *)a1 + 90);
  v3 = a1[2];
  v22 = a1[1];
  v23 = v3;
  sub_10021D150((uint64_t)&v26[8], (uint64_t)v27);
  sub_10021D150((uint64_t)v27, (uint64_t)v28);
  if ((v29 & 1) != 0)
  {
    v12 = v28[1];
    v13 = v28[0];
    sub_10021D18C((uint64_t)&v22);
    sub_10021D228((uint64_t)v27);
    v11 = 0;
  }
  else
  {
    v4 = v28[0];
    sub_10021D18C((uint64_t)&v22);
    sub_10021D228((uint64_t)v27);
    v11 = REMListBadgeEmblem.image.getter(v4);
    sub_10021D2F4((uint64_t)v27);
    v12 = 0;
    v13 = 0;
  }
  v5 = v23;
  v6 = v24;
  v7 = v25;
  v8 = v26[0];
  v9 = v22;
  v10 = v26[25];
  sub_10002B764((void *)v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26[0]);
  swift_bridgeObjectRetain(*((_QWORD *)&v9 + 1));
  sub_10021D258((uint64_t)&v22);
  v15[0] = v11;
  v15[1] = v13;
  v15[2] = v12;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  TTRITableCellContent.state.setter(v15);

}

void sub_100219CE4(uint64_t a1)
{
  id v2;
  _QWORD *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[24];
  __int128 v33;
  _OWORD v34[3];
  _OWORD v35[2];
  char v36[56];

  v2 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290)+ 32);
  swift_release();
  TTRITextCellContent.setTextIfNotEditing(_:)(*(Swift::String *)a1);

  v3 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290)+ 32);
  swift_release();
  v4 = *(_OWORD *)(a1 + 64);
  v34[1] = *(_OWORD *)(a1 + 48);
  v34[2] = v4;
  v35[0] = *(_OWORD *)(a1 + 80);
  *(_OWORD *)((char *)v35 + 10) = *(_OWORD *)(a1 + 90);
  v5 = *(_OWORD *)(a1 + 32);
  v33 = *(_OWORD *)(a1 + 16);
  v34[0] = v5;
  v6 = sub_1000AE578((uint64_t)v34, (uint64_t)v36);
  v7 = TTRListColors.Color.nativeColor.getter(v6);
  v8 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x78);
  swift_beginAccess(v8, v32, 0, 0);
  v9 = *(void **)v8;
  v10 = *((_QWORD *)v8 + 1);
  v11 = v8[16];
  v12 = v8[17];
  v13 = *((_QWORD *)v8 + 3);
  v14 = *((_QWORD *)v8 + 4);
  v25 = v9;
  v26 = v10;
  v27 = v11;
  v28 = v12;
  v29 = v13;
  v30 = v14;
  v31 = v7;
  sub_10021D138(v9, v10, v11);
  swift_bridgeObjectRetain(v14);
  TTRITableCellContent.state.setter(&v25);

  v15 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell, sub_10021B290)+ 32);
  swift_release();
  v17 = *(_QWORD *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 176);
  v18 = (char *)v15 + *(_QWORD *)((swift_isaMask & *v15) + 0x78);
  swift_beginAccess(v18, &v24, 0, 0);
  v19 = *(void **)v18;
  v20 = *((_QWORD *)v18 + 1);
  LOBYTE(v3) = v18[16];
  v21 = v18[17];
  v22 = (void *)*((_QWORD *)v18 + 5);
  v25 = v19;
  v26 = v20;
  v27 = (char)v3;
  v28 = v21;
  v29 = v17;
  v30 = v16;
  v31 = (uint64_t)v22;
  swift_bridgeObjectRetain(v16);
  sub_10021D138(v19, v20, (char)v3);
  v23 = v22;
  TTRITableCellContent.state.setter(&v25);

}

void sub_100219EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t ObjectType;
  _BOOL8 v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  _QWORD *v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  Swift::String v76;
  Swift::String v77;
  Swift::String v78;
  uint64_t countAndFlagsBits;
  char *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void *v98;
  char *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  void *v115;
  id v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD v155[3];
  uint64_t v156;
  uint64_t v157;
  char v158;
  __int128 v159;
  uint64_t v160;
  void *v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  char v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE v171[24];
  _BYTE v172[24];
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  _BYTE v178[64];
  _BYTE v179[64];
  uint64_t v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  _BYTE v184[96];
  _BYTE v185[64];
  uint64_t v186;

  if ((*(_BYTE *)(a1 + 121) & 1) != 0 && (*(_BYTE *)(a1 + 120) & 1) != 0)
    goto LABEL_11;
  v4 = *(unsigned __int8 *)(a1 + 184);
  v5 = *(_BYTE *)(a1 + 125);
  if (!(v4 | v5 & 1) && (*(_BYTE *)(a1 + 123) & 1) == 0)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), a2);
    LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
    sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
    if ((v6 & 1) == 0)
    {
      v8 = (*(_BYTE *)(a1 + 124) & 1) == 0;
LABEL_13:
      TTRITableSection.isHidden.setter(v8);
      swift_release();
      return;
    }
LABEL_12:
    v8 = 1;
    goto LABEL_13;
  }
  sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
  TTRITableSection.isHidden.setter(0);
  swift_release();
  if ((v5 & 1) != 0)
  {
    v11 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell, sub_10021B91C)+ 32);
    swift_release();
    v12 = *(_QWORD *)(a1 + 136);
    if (v12)
    {
      v143 = *(_QWORD *)(a1 + 128);
      v136 = *(_QWORD *)(a1 + 136);
    }
    else
    {
      v143 = 0;
      v136 = 0xE000000000000000;
    }
    v13 = (char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x78);
    swift_beginAccess(v13, v155, 0, 0);
    v14 = *(void **)v13;
    v15 = (void *)*((_QWORD *)v13 + 1);
    v16 = (void *)*((_QWORD *)v13 + 2);
    v18 = *((_QWORD *)v13 + 5);
    v17 = *((_QWORD *)v13 + 6);
    v19 = *((_QWORD *)v13 + 7);
    v149 = v13[64];
    LOBYTE(v13) = v13[65];
    sub_1000DDA1C(v14, v15, v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v12);
    *(_QWORD *)&v181 = v14;
    *((_QWORD *)&v181 + 1) = v15;
    *(_QWORD *)&v182 = v16;
    *((_QWORD *)&v182 + 1) = v143;
    *(_QWORD *)&v183 = v136;
    *((_QWORD *)&v183 + 1) = v18;
    *(_QWORD *)v184 = v17;
    *(_QWORD *)&v184[8] = v19;
    v184[16] = v149;
    v184[17] = (_BYTE)v13;
    TTRITableCellContent.state.setter(&v181);

    if (v4)
    {
      if (v4 != 1)
      {
        v59 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell, sub_10021B91C)+ 32);
        swift_release();
        v60 = String._bridgeToObjectiveC()();
        v61 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v60);

        v62 = TTRListColors.defaultColor.unsafeMutableAddressor();
        swift_beginAccess(v62, v172, 0, 0);
        sub_1000AE578(v62, (uint64_t)&v173);
        v63 = sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
        v64 = TTRListColors.Color.nativeColor.getter(v63);
        sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
        v152 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v61, 0, v64);
        v146 = v65;
        v139 = v66;
        v67 = (char *)v59 + *(_QWORD *)((swift_isaMask & *v59) + 0x78);
        swift_beginAccess(v67, v171, 0, 0);
        v68 = *(void **)v67;
        v69 = (void *)*((_QWORD *)v67 + 1);
        v70 = (void *)*((_QWORD *)v67 + 2);
        v133 = *((_QWORD *)v67 + 3);
        v72 = *((_QWORD *)v67 + 4);
        v71 = *((_QWORD *)v67 + 5);
        v73 = *((_QWORD *)v67 + 6);
        v74 = *((_QWORD *)v67 + 7);
        v75 = v67[64];
        LOBYTE(v67) = v67[65];
        sub_1000DDA1C(v68, v69, v70);
        swift_bridgeObjectRetain(v73);
        swift_bridgeObjectRetain(v74);
        swift_bridgeObjectRetain(v72);
        sub_10021D070(v68, v69, v70);
        *(_QWORD *)&v181 = v152;
        *((_QWORD *)&v181 + 1) = v146;
        *(_QWORD *)&v182 = v139;
        *((_QWORD *)&v182 + 1) = v133;
        *(_QWORD *)&v183 = v72;
        *((_QWORD *)&v183 + 1) = v71;
        *(_QWORD *)v184 = v73;
        *(_QWORD *)&v184[8] = v74;
        v184[16] = v75;
        v184[17] = (_BYTE)v67;
        TTRITableCellContent.state.setter(&v181);

        sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
        v76._countAndFlagsBits = 0xD000000000000029;
        v77._countAndFlagsBits = 0xD00000000000002ELL;
        v76._object = (void *)0x800000010056CE30;
        v78._object = (void *)0x800000010056CE60;
        v77._object = (void *)0x800000010056CE90;
        v78._countAndFlagsBits = 0xD000000000000026;
        countAndFlagsBits = TTRLocalizedString(_:value:comment:)(v76, v78, v77)._countAndFlagsBits;
        TTRITableSectionHeaderFooter.init(title:height:)(&v181, countAndFlagsBits);
        TTRITableSection.footer.setter(&v181);
        swift_release();
        sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___editFiltersCell, sub_10021BF2C);
        v58 = 0;
        goto LABEL_23;
      }
      v20 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell, sub_10021B91C)+ 32);
      swift_release();
      v21 = String._bridgeToObjectiveC()();
      v22 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v21);

      v23 = TTRListColors.defaultColor.unsafeMutableAddressor();
      swift_beginAccess(v23, v172, 0, 0);
      sub_1000AE578(v23, (uint64_t)&v173);
      v24 = sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
      v25 = TTRListColors.Color.nativeColor.getter(v24);
      sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
      v150 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v22, 0, v25);
      v144 = v26;
      v137 = v27;
      v28 = (char *)v20 + *(_QWORD *)((swift_isaMask & *v20) + 0x78);
      swift_beginAccess(v28, v171, 0, 0);
      v29 = *(void **)v28;
      v30 = (void *)*((_QWORD *)v28 + 1);
      v31 = (void *)*((_QWORD *)v28 + 2);
      v131 = *((_QWORD *)v28 + 3);
      v33 = *((_QWORD *)v28 + 4);
      v32 = *((_QWORD *)v28 + 5);
      v34 = *((_QWORD *)v28 + 6);
      v35 = *((_QWORD *)v28 + 7);
      v36 = v28[64];
      LOBYTE(v28) = v28[65];
      sub_1000DDA1C(v29, v30, v31);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v33);
      sub_10021D070(v29, v30, v31);
      *(_QWORD *)&v181 = v150;
      *((_QWORD *)&v181 + 1) = v144;
      *(_QWORD *)&v182 = v137;
      *((_QWORD *)&v182 + 1) = v131;
      *(_QWORD *)&v183 = v33;
      *((_QWORD *)&v183 + 1) = v32;
      *(_QWORD *)v184 = v34;
      *(_QWORD *)&v184[8] = v35;
      v184[16] = v36;
      v184[17] = (_BYTE)v28;
      TTRITableCellContent.state.setter(&v181);

      sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
      v37._countAndFlagsBits = 0xD00000000000002BLL;
      v38._countAndFlagsBits = 0xD000000000000030;
      v39._countAndFlagsBits = 0xD000000000000034;
      v37._object = (void *)0x800000010056CEC0;
      v39._object = (void *)0x800000010056CEF0;
      v38._object = (void *)0x800000010056CF30;
      v40 = TTRLocalizedString(_:value:comment:)(v37, v39, v38)._countAndFlagsBits;
      TTRITableSectionHeaderFooter.init(title:height:)(&v181, v40);
    }
    else
    {
      v41 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell, sub_10021B91C)+ 32);
      swift_release();
      v42 = String._bridgeToObjectiveC()();
      v43 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v42);

      v44 = TTRListColors.defaultColor.unsafeMutableAddressor();
      swift_beginAccess(v44, v172, 0, 0);
      sub_1000AE578(v44, (uint64_t)&v173);
      v45 = sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
      v46 = TTRListColors.Color.nativeColor.getter(v45);
      sub_1000AD9D0((uint64_t)&v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
      v151 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v43, 0, v46);
      v145 = v47;
      v138 = v48;
      v49 = (char *)v41 + *(_QWORD *)((swift_isaMask & *v41) + 0x78);
      swift_beginAccess(v49, v171, 0, 0);
      v50 = *(void **)v49;
      v51 = (void *)*((_QWORD *)v49 + 1);
      v52 = (void *)*((_QWORD *)v49 + 2);
      v132 = *((_QWORD *)v49 + 3);
      v53 = *((_QWORD *)v49 + 4);
      v54 = *((_QWORD *)v49 + 5);
      v55 = *((_QWORD *)v49 + 6);
      v56 = *((_QWORD *)v49 + 7);
      v57 = v49[64];
      LOBYTE(v49) = v49[65];
      sub_1000DDA1C(v50, v51, v52);
      swift_bridgeObjectRetain(v55);
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRetain(v53);
      sub_10021D070(v50, v51, v52);
      *(_QWORD *)&v181 = v151;
      *((_QWORD *)&v181 + 1) = v145;
      *(_QWORD *)&v182 = v138;
      *((_QWORD *)&v182 + 1) = v132;
      *(_QWORD *)&v183 = v53;
      *((_QWORD *)&v183 + 1) = v54;
      *(_QWORD *)v184 = v55;
      *(_QWORD *)&v184[8] = v56;
      v184[16] = v57;
      v184[17] = (_BYTE)v49;
      TTRITableCellContent.state.setter(&v181);

      sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
      v183 = 0u;
      memset(v184, 0, 25);
      v181 = 0u;
      v182 = 0u;
    }
    TTRITableSection.footer.setter(&v181);
    swift_release();
    sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___editFiltersCell, sub_10021BF2C);
    v58 = 1;
LABEL_23:
    TTRITableCell.isHidden.setter(v58);
    swift_release();
    return;
  }
  if (v4 != 2)
  {
LABEL_11:
    sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection, (uint64_t (*)(uint64_t))sub_10021B494);
    goto LABEL_12;
  }
  v9 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersCell, sub_10021B668)+ 32);
  swift_release();
  v10 = *(_QWORD *)(a1 + 136);
  if (v10)
  {
    v148 = *(_QWORD *)(a1 + 128);
    v142 = *(_QWORD *)(a1 + 136);
  }
  else
  {
    v148 = 0;
    v142 = 0xE000000000000000;
  }
  v80 = (char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x78);
  swift_beginAccess(v80, v172, 0, 0);
  v81 = *((_OWORD *)v80 + 1);
  v173 = *(_OWORD *)v80;
  v174 = v81;
  v82 = *((_OWORD *)v80 + 2);
  v83 = *((_OWORD *)v80 + 3);
  v84 = *((_OWORD *)v80 + 5);
  v177 = *((_OWORD *)v80 + 4);
  *(_OWORD *)v178 = v84;
  v175 = v82;
  v176 = v83;
  v85 = *((_OWORD *)v80 + 6);
  v86 = *((_OWORD *)v80 + 7);
  v87 = *((_OWORD *)v80 + 9);
  *(_OWORD *)&v178[48] = *((_OWORD *)v80 + 8);
  *(_OWORD *)v179 = v87;
  *(_OWORD *)&v178[16] = v85;
  *(_OWORD *)&v178[32] = v86;
  v88 = *((_OWORD *)v80 + 10);
  v89 = *((_OWORD *)v80 + 11);
  v90 = *((_OWORD *)v80 + 12);
  v180 = *((_QWORD *)v80 + 26);
  *(_OWORD *)&v179[32] = v89;
  *(_OWORD *)&v179[48] = v90;
  *(_OWORD *)&v179[16] = v88;
  v91 = *((_QWORD *)&v90 + 1);
  v140 = v180;
  v129 = *(_OWORD *)&v179[24];
  v134 = *(_OWORD *)&v179[40];
  v92 = v87;
  v125 = *(_OWORD *)&v178[40];
  v127 = *(_OWORD *)&v179[8];
  v121 = *(_OWORD *)&v178[8];
  v123 = *(_OWORD *)&v178[24];
  v118 = v174;
  v119 = v173;
  v117 = v175;
  v93 = v176;
  v94 = v177;
  v95 = *(_QWORD *)&v178[56];
  v96 = *(_QWORD *)v178;
  swift_bridgeObjectRetain(v10);
  sub_1001CD4A4((uint64_t)&v173);
  swift_bridgeObjectRelease(v96);
  v181 = v119;
  v182 = v118;
  v183 = v117;
  *(_OWORD *)v184 = v93;
  v184[16] = v94;
  *(_QWORD *)&v184[24] = v148;
  *(_QWORD *)&v184[32] = v142;
  *(_OWORD *)&v184[40] = v121;
  *(_OWORD *)&v184[56] = v123;
  *(_OWORD *)&v184[72] = v125;
  *(_QWORD *)&v184[88] = v95;
  v185[0] = v92;
  *(_OWORD *)&v185[8] = v127;
  *(_OWORD *)&v185[24] = v129;
  *(_OWORD *)&v185[40] = v134;
  *(_QWORD *)&v185[56] = v91;
  v186 = v140;
  TTRITableCellContent.state.setter(&v181);

  v97 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersCell, sub_10021B668)+ 32);
  swift_release();
  v98 = *(void **)(a1 + 144);
  v99 = (char *)v97 + *(_QWORD *)((swift_isaMask & *v97) + 0x78);
  swift_beginAccess(v99, v171, 0, 0);
  v100 = *((_OWORD *)v99 + 1);
  v181 = *(_OWORD *)v99;
  v182 = v100;
  v101 = *((_OWORD *)v99 + 2);
  v102 = *((_OWORD *)v99 + 3);
  v103 = *((_OWORD *)v99 + 5);
  *(_OWORD *)&v184[16] = *((_OWORD *)v99 + 4);
  *(_OWORD *)&v184[32] = v103;
  v183 = v101;
  *(_OWORD *)v184 = v102;
  v104 = *((_OWORD *)v99 + 6);
  v105 = *((_OWORD *)v99 + 7);
  v106 = *((_OWORD *)v99 + 9);
  *(_OWORD *)&v184[80] = *((_OWORD *)v99 + 8);
  *(_OWORD *)v185 = v106;
  *(_OWORD *)&v184[48] = v104;
  *(_OWORD *)&v184[64] = v105;
  v107 = *((_OWORD *)v99 + 10);
  v108 = *((_OWORD *)v99 + 11);
  v109 = *((_OWORD *)v99 + 12);
  v186 = *((_QWORD *)v99 + 26);
  *(_OWORD *)&v185[32] = v108;
  *(_OWORD *)&v185[48] = v109;
  *(_OWORD *)&v185[16] = v107;
  v153 = v186;
  v154 = *((_QWORD *)&v109 + 1);
  v141 = *(_OWORD *)&v185[24];
  v147 = *(_OWORD *)&v185[40];
  LOBYTE(v96) = v106;
  v110 = *(_QWORD *)&v184[88];
  v130 = *(_OWORD *)&v184[72];
  v135 = *(_OWORD *)&v185[8];
  v126 = *(_OWORD *)&v184[24];
  v128 = *(_OWORD *)&v184[56];
  v122 = v182;
  v124 = v181;
  v120 = v183;
  v111 = *(_QWORD *)v184;
  v112 = *(_QWORD *)&v184[8];
  v113 = v184[16];
  v114 = *(_QWORD *)&v184[40];
  v115 = *(void **)&v184[48];
  v116 = v98;
  sub_1001CD4A4((uint64_t)&v181);

  v155[0] = v124;
  v155[1] = v122;
  v155[2] = v120;
  v156 = v111;
  v157 = v112;
  v158 = v113;
  v159 = v126;
  v160 = v114;
  v161 = v98;
  v162 = v128;
  v163 = v130;
  v164 = v110;
  v165 = v96;
  v166 = v135;
  v167 = v141;
  v168 = v147;
  v169 = v154;
  v170 = v153;
  TTRITableCellContent.state.setter(v155);

}

double sub_10021AB50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[24];

  v2 = v1;
  v4 = sub_1002197DC(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsSection, &OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell, (uint64_t (*)(uint64_t))sub_10021C35C);
  swift_beginAccess(v4 + 200, v52, 0, 0);
  v5 = *(_BYTE *)(v4 + 200);
  swift_release();
  if ((v5 & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 104) & 1) != 0)
    {
      v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), v6);
      v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v32 + 8) + 24))(ObjectType);
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        v16 = 0;
        v36 = 56;
        while (*(_QWORD *)(v34 + v36))
        {
          ++v16;
          v36 += 32;
          if (v35 == v16)
            goto LABEL_18;
        }
        swift_bridgeObjectRelease(v34);
        v37 = 0;
        goto LABEL_25;
      }
LABEL_18:
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      v8 = *(void **)(a1 + 88);
      v7 = *(void **)(a1 + 96);
      v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
      v10 = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), v6);
      v11 = *(_QWORD *)(v9 + 8);
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
      v13 = v8;
      v14 = v12(v10, v11);
      v15 = v14;
      v46 = *(_QWORD *)(v14 + 16);
      if (v46)
      {
        v44 = a1;
        v45 = v7;
        sub_10002B7A0(v8, v7, 0);
        v16 = 0;
        v43 = v15;
        v17 = (_QWORD *)(v15 + 56);
        while (1)
        {
          v22 = (void *)*v17;
          if (*v17)
          {
            v23 = (void *)*(v17 - 3);
            v24 = *(v17 - 1);
            v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v17);
            v27 = v26;
            v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
            v30 = v29;
            v31 = v25 == v28 && v27 == v29;
            v18 = v31 ? 1 : _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v28, v29, 0);
            v19 = v22;
            sub_10002B7A0(v8, v45, 0);
            v20 = v19;
            v21 = v23;
            swift_bridgeObjectRetain(v24);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v30);
            sub_10002B318(v8, v45, 0);
            swift_bridgeObjectRelease(v24);

            if ((v18 & 1) != 0)
              break;
          }
          v17 += 4;
          if (v46 == ++v16)
          {
            sub_10002B318(v8, v45, 0);
            swift_bridgeObjectRelease(v43);
            sub_10002B318(v8, v45, 0);
            v16 = 0;
            v37 = 1;
            goto LABEL_24;
          }
        }
        sub_10002B318(v8, v45, 0);
        swift_bridgeObjectRelease(v43);
        sub_10002B318(v8, v45, 0);
        v37 = 0;
LABEL_24:
        a1 = v44;
        goto LABEL_25;
      }
      swift_bridgeObjectRelease(v14);
      sub_10002B318(v8, v7, 0);
    }
    v16 = 0;
    v37 = 1;
LABEL_25:
    v38 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell, (uint64_t (*)(uint64_t))sub_10021C35C)+ 32);
    swift_release();
    v39 = (char *)v38 + *(_QWORD *)((swift_isaMask & *v38) + 0x78);
    swift_beginAccess(v39, v51, 0, 0);
    v41 = *((_QWORD *)v39 + 2);
    v40 = *((_QWORD *)v39 + 3);
    v47 = v16;
    v48 = v37;
    v49 = v41;
    v50 = v40;
    swift_bridgeObjectRetain(v40);
    TTRITableCellContent.state.setter(&v47);

  }
  sub_1002197DC(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsSection, &OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell, (uint64_t (*)(uint64_t))sub_10021C35C);
  TTRITableSection.isHidden.setter((*(_BYTE *)(a1 + 122) & 1) == 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10021AEE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[10];
  _OWORD v27[7];

  v3 = type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v24 - v7;
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  v16 = *(_BYTE *)(a1 + 123);
  if ((v16 & 1) != 0)
  {
    v17 = swift_allocObject(&unk_1005F7818, 24, 7);
    v25 = v3;
    v18 = v17;
    v19 = swift_unknownObjectWeakInit(v17 + 16, v1);
    v20 = static UIListContentConfiguration.groupedFooter()(v19);
    v21 = static TTRLocalizableStrings.ConvertToCustomSmartListAlert.detailsForFooter.getter(v20);
    UIListContentConfiguration.attributedText.setter(v21);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    memset(v27, 0, 96);
    TTRIHelpLinkHeaderFooterContentConfiguration.init(listContentConfiguration:help:learnMore:)(v13, v27, 0, sub_10021CF54, v18);
    swift_retain();
    sub_1002198D4();
    sub_10021CF60((uint64_t)v8, (uint64_t)v6);
    v22 = sub_1001CCD78();
    TTRITableSectionHeaderFooter.init<A>(contentProvider:height:)(v26, v6, 0, 1, v25, v22);
    TTRITableSection.footer.setter(v26);
    swift_release();
    swift_release();
    sub_10021CFA4((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  sub_1002198D4();
  TTRITableSection.isHidden.setter((v16 & 1) == 0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10021B100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeCell;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeCell))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeCell);
  }
  else
  {
    v2 = sub_10021B160();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10021B160()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v17[24];

  v0 = REMListBadgeEmblem.image.getter(REMListBadgeEmblemDefault);
  v1 = TTRListColors.defaultColor.unsafeMutableAddressor();
  swift_beginAccess(v1, v17, 0, 0);
  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  LOBYTE(v1) = *(_BYTE *)(v1 + 48);
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailBadgeCellContent(0))
     + qword_100647C00;
  *v8 = 0;
  v8[1] = 0;
  v12[0] = v0;
  v12[1] = 0;
  v12[2] = 0;
  v12[3] = v2;
  v12[4] = v3;
  v12[5] = v4;
  v12[6] = v5;
  v12[7] = v6;
  v12[8] = v7;
  v13 = v1;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  sub_10002B764(v2, v3, v4, v5, v6, v7, v1);
  v9 = TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(v12, 0, 0xD000000000000013, 0x800000010056D0C0);
  v10 = sub_10002A750(&qword_10064D900);
  swift_allocObject(v10, 73, 7);
  return TTRITableCell.init(_:)(v9);
}

uint64_t sub_10021B290(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _QWORD v17[6];

  v2 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  v3._object = (void *)0x800000010056D090;
  v4._countAndFlagsBits = 0x6D614E207473694CLL;
  v4._object = (void *)0xE900000000000065;
  v3._countAndFlagsBits = 0xD000000000000026;
  v5 = TTRLocalizedString(_:comment:)(v4, v3);
  v6 = TTRITextCellContentState.init(attributedText:placeholder:)(v17, v2, v5._countAndFlagsBits, v5._object);
  v7 = *(_QWORD *)TTRITextCellContentStateChangeEvent.editingChanged.unsafeMutableAddressor(v6);
  v8 = objc_allocWithZone((Class)sub_10002A750(&qword_10064D8F8));
  v9 = TTRITextCellContent.init(textAutocapitalizationType:keyboardType:state:stateChangeEvent:)(2, 0, v17, v7);
  v10 = swift_allocObject(&unk_1005F7818, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v11 = (uint64_t *)(v9 + direct field offset for TTRITextCellContent.stateChangeBlock);
  swift_beginAccess(v9 + direct field offset for TTRITextCellContent.stateChangeBlock, v16, 1, 0);
  v12 = *v11;
  v13 = v11[1];
  *v11 = (uint64_t)sub_10021D148;
  v11[1] = v10;
  sub_1000381B8(v12, v13);
  v14 = sub_10002A750(&qword_1006538A0);
  swift_allocObject(v14, 73, 7);
  return TTRITableCell.init(_:)(v9);
}

uint64_t sub_10021B3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    swift_getObjectType(v6, v4);
    v8 = swift_unknownObjectRetain(v6);
    v9 = TTRITextCellContentState.text.getter(v8);
    v11 = v10;
    (*(void (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 32))(v9);

    swift_unknownObjectRelease(v6);
    return swift_bridgeObjectRelease(v11);
  }
  return result;
}

uint64_t sub_10021B494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, _QWORD, _QWORD);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[25];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[25];
  _QWORD v20[23];
  unsigned __int8 v21;
  _QWORD v22[15];
  char v23;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), a2);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(v4 + 8);
  v5(v20, ObjectType, v4);
  sub_1000905E0((uint64_t)v20);
  v6 = v21;
  v5(v22, ObjectType, v4);
  sub_1000905E0((uint64_t)v22);
  if (((v23 & 1) == 0 || v6 == 2) && ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2) & 1) != 0)
  {
    v18 = 0u;
    memset(v19, 0, sizeof(v19));
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    memset(v15, 0, sizeof(v15));
    v12 = 0u;
    v13 = 0u;
    v9 = sub_10002A750(&qword_10064AAE0);
    v8 = swift_allocObject(v9, 48, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100520250;
    *(_QWORD *)(v8 + 32) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersCell, sub_10021B668);
    *(_QWORD *)(v8 + 40) = &protocol witness table for TTRITableCell<A>;
  }
  else
  {
    v18 = 0u;
    memset(v19, 0, sizeof(v19));
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    memset(v15, 0, sizeof(v15));
    v12 = 0u;
    v13 = 0u;
    v7 = sub_10002A750(&qword_10064AAE0);
    v8 = swift_allocObject(v7, 64, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v8 + 32) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell, sub_10021B91C);
    *(_QWORD *)(v8 + 40) = &protocol witness table for TTRITableCell<A>;
    *(_QWORD *)(v8 + 48) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___editFiltersCell, sub_10021BF2C);
    *(_QWORD *)(v8 + 56) = &protocol witness table for TTRITableCell<A>;
  }
  v10 = type metadata accessor for TTRITableSection(0);
  swift_allocObject(v10, 217, 7);
  return TTRITableSection.init(header:footer:items:)(&v16, &v12, v8);
}

uint64_t sub_10021B668(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  _BYTE v27[24];
  _QWORD v28[27];
  _QWORD v29[3];
  __int128 v30;
  _BYTE v31[25];
  _BYTE v32[56];

  v2._countAndFlagsBits = 0xD000000000000032;
  v2._object = (void *)0x800000010056CFC0;
  v3._countAndFlagsBits = 0x737265746C6946;
  v3._object = (void *)0xE700000000000000;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5._countAndFlagsBits = 0xD000000000000025;
  v5._object = (void *)0x800000010056D000;
  v6._object = (void *)0x800000010056D030;
  v6._countAndFlagsBits = 0xD000000000000024;
  object = TTRLocalizedString(_:comment:)(v5, v6)._object;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v8);

  v10 = TTRListColors.defaultColor.unsafeMutableAddressor();
  swift_beginAccess(v10, v27, 0, 0);
  sub_1000AE578(v10, (uint64_t)v32);
  v11 = sub_1000AD9D0((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
  v12 = TTRListColors.Color.nativeColor.getter(v11);
  sub_1000AD9D0((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
  v29[0] = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v9, 0, v12);
  v29[1] = v13;
  v29[2] = v14;
  v30 = 0u;
  memset(v31, 0, sizeof(v31));
  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v17 = objc_msgSend(v15, "initWithString:", v16);

  TTRIDetailCellState.init(icon:title:titleTextColor:subtitle:detailText:detailTextColor:shortenedDetailText:checkmarkState:accessibilityLabel:accessibilityValue:accessibilityHint:accessibilityDifferentiateWithoutColorsIcon:)(v28, v29, v4._countAndFlagsBits, v4._object, 0, v17, 0, 0xE000000000000000, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
    0);
  v18 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailDisclosureCellContent(0));
  v19 = (_QWORD *)TTRIDetailDisclosureCellContent.init(state:)(v28);
  v20 = swift_allocObject(&unk_1005F7818, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  v21 = (_QWORD *)((char *)v19 + *(_QWORD *)((swift_isaMask & *v19) + 0x108));
  swift_beginAccess(v21, v26, 1, 0);
  v22 = *v21;
  v23 = v21[1];
  *v21 = (uint64_t)sub_10021D0B0;
  v21[1] = v20;
  sub_1000381B8(v22, v23);
  v24 = sub_10002A750(&qword_10064D8F0);
  swift_allocObject(v24, 73, 7);
  return TTRITableCell.init(_:)(v19);
}

uint64_t sub_10021B91C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  void (*v18)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  unint64_t v38;
  int64_t v39;
  id v40;
  _QWORD *v41;
  char v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v65;
  int64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  void (*v70)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v71;
  void *v72;
  _QWORD v73[3];
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char v78;
  char v79;
  char v80[24];
  _QWORD v81[15];
  char v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  unsigned __int8 v86;
  __int128 v87;
  char v88;
  _BYTE v89[64];

  v2 = TTRRemindersListListType.localizedOptionString.getter(0);
  v4 = v3;
  LOBYTE(v81[0]) = 0;
  v72 = (void *)sub_10021D0C8();
  TTRIMenuItem.init(title:image:item:selectedTitle:)(&v83, v2, v4, 0, v81, 0, 0, &type metadata for TTRRemindersListListType);
  v5 = v83;
  v6 = v84;
  v7 = v85;
  v8 = v86;
  v9 = v87;
  v11 = sub_100456CB4(0, 1, 1, _swiftEmptyArrayStorage);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_100456CB4((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[6 * v13];
  v14[4] = v5;
  v14[5] = v6;
  v14[6] = v7;
  v14[7] = v8;
  *((_OWORD *)v14 + 4) = v9;
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), v10);
  v17 = *(_QWORD *)(v15 + 8);
  v18 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(v17 + 8);
  v18(v81, ObjectType, v17);
  sub_1000905E0((uint64_t)v81);
  v70 = v18;
  v71 = a1;
  if ((v82 & 1) != 0)
  {
    v69 = ObjectType;
    v19 = TTRRemindersListListType.localizedOptionString.getter(1);
    LOBYTE(v73[0]) = 1;
    TTRIMenuItem.init(title:image:item:selectedTitle:)(&v83, v19, v20, 0, v73, 0, 0, &type metadata for TTRRemindersListListType);
    v21 = v83;
    v22 = v84;
    v23 = v85;
    v24 = v86;
    v25 = v87;
    v27 = v11[2];
    v26 = v11[3];
    if (v27 >= v26 >> 1)
    {
      v68 = v87;
      v65 = sub_100456CB4((_QWORD *)(v26 > 1), v27 + 1, 1, v11);
      v25 = v68;
      v11 = v65;
    }
    v11[2] = v27 + 1;
    v28 = &v11[6 * v27];
    v28[4] = v21;
    v28[5] = v22;
    v28[6] = v23;
    v28[7] = v24;
    *((_OWORD *)v28 + 4) = v25;
    a1 = v71;
    ObjectType = v69;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15) & 1) == 0)
  {
    v29 = TTRRemindersListListType.localizedOptionString.getter(2);
    LOBYTE(v73[0]) = 2;
    TTRIMenuItem.init(title:image:item:selectedTitle:)(&v83, v29, v30, 0, v73, 0, 0, &type metadata for TTRRemindersListListType);
    v31 = v11[2];
    v32 = v31 + 2;
    if (__OFADD__(v31, 2))
    {
      __break(1u);
    }
    else
    {
      a1 = v84;
      v72 = v85;
      v69 = v86;
      v15 = *((_QWORD *)&v87 + 1);
      v67 = v87;
      *(_QWORD *)&v68 = v83;
      v33 = v11[3];
      v34 = v33 >> 1;
      if ((uint64_t)(v33 >> 1) >= v32)
      {
LABEL_10:
        v35 = v31 + 1;
        v36 = ObjectType;
        if (v34 <= v31)
          v11 = sub_100456CB4((_QWORD *)(v33 > 1), v31 + 1, 1, v11);
        v11[2] = v35;
        v37 = &v11[6 * v31];
        v37[2] = 0u;
        v37[3] = 0u;
        v37[4] = 0u;
        v38 = v11[3];
        v39 = v31 + 2;
        swift_bridgeObjectRetain(a1);
        v40 = v72;
        swift_bridgeObjectRetain(v15);
        if (v35 >= v38 >> 1)
          v11 = sub_100456CB4((_QWORD *)(v38 > 1), v39, 1, v11);
        ObjectType = v36;
        v11[2] = v39;
        v41 = &v11[6 * v35];
        v41[4] = v68;
        v41[5] = a1;
        v41[6] = v72;
        v41[7] = v69;
        v41[8] = v67;
        v41[9] = v15;
        swift_bridgeObjectRelease(v15);

        swift_bridgeObjectRelease(a1);
        v18 = v70;
        a1 = v71;
        goto LABEL_15;
      }
    }
    if (v31 <= v32)
      v66 = v31 + 2;
    else
      v66 = v31;
    v11 = sub_100456CB4((_QWORD *)1, v66, 1, v11);
    v31 = v11[2];
    v33 = v11[3];
    v34 = v33 >> 1;
    goto LABEL_10;
  }
LABEL_15:
  v18(&v83, ObjectType, v17);
  sub_1000905E0((uint64_t)&v83);
  v42 = v88;
  v43 = String._bridgeToObjectiveC()();
  v44 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v43);

  v45 = TTRListColors.defaultColor.unsafeMutableAddressor();
  swift_beginAccess(v45, v80, 0, 0);
  sub_1000AE578(v45, (uint64_t)v89);
  v46 = sub_1000AD9D0((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
  v47 = TTRListColors.Color.nativeColor.getter(v46);
  sub_1000AD9D0((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
  v48 = TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)(v44, 0, v47);
  v50 = v49;
  v52 = v51;
  v53._object = (void *)0x800000010056CF90;
  v54._countAndFlagsBits = 0x707954207473694CLL;
  v54._object = (void *)0xE900000000000065;
  v53._countAndFlagsBits = 0xD00000000000002ALL;
  v55 = TTRLocalizedString(_:comment:)(v54, v53);
  v73[0] = v48;
  v73[1] = v50;
  v73[2] = v52;
  v74 = v55;
  v75 = 0;
  v76 = 0;
  v77 = v11;
  v78 = v42;
  v79 = 0;
  v56 = objc_allocWithZone((Class)sub_10002A750(&qword_10064D8E0));
  v57 = (_QWORD *)TTRIOptionMenuCellContent.init(state:menuImageProvider:)(v73, 0, 0);
  v58 = swift_allocObject(&unk_1005F7818, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16, a1);
  v59 = swift_allocObject(&unk_1005F7840, 32, 7);
  *(_QWORD *)(v59 + 16) = sub_10021D10C;
  *(_QWORD *)(v59 + 24) = v58;
  v60 = (_QWORD *)((char *)v57 + *(_QWORD *)((swift_isaMask & *v57) + 0x100));
  swift_beginAccess(v60, v73, 1, 0);
  v61 = *v60;
  v62 = v60[1];
  *v60 = (uint64_t)sub_1001CC274;
  v60[1] = v59;
  sub_1000381B8(v61, v62);
  v63 = sub_10002A750(&qword_10064D8E8);
  swift_allocObject(v63, 73, 7);
  return TTRITableCell.init(_:)(v57);
}

uint64_t sub_10021BE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE v13[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    ObjectType = swift_getObjectType(v7, v5);
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 64);
    v12 = *(unsigned __int8 *)(a1 + 64);
    swift_unknownObjectRetain(v7);
    v11(v12, ObjectType, v10);

    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10021BF2C(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  char *v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  char v18;
  Swift::String v19;

  v2._countAndFlagsBits = 0x6C69462074696445;
  v2._object = (void *)0xEC00000073726574;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v4 = TTRLocalizedString(_:comment:)(v2, v3);
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailEditFiltersCellContent(0));
  v6 = &v5[*(_QWORD *)((swift_isaMask & *(_QWORD *)v5) + 0x108)];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[*(_QWORD *)((swift_isaMask & *(_QWORD *)v5) + 0xF8)];
  *(_OWORD *)v7 = xmmword_100529AF0;
  *((_QWORD *)v7 + 2) = 0x800000010056CF70;
  v5[*(_QWORD *)((swift_isaMask & *(_QWORD *)v5) + 0x100)] = 1;
  memset(v15, 0, 24);
  v15[3] = 0x1FFFFFFFELL;
  v16 = 0u;
  v17 = 0u;
  v18 = 0;
  v19 = v4;
  v8 = (_QWORD *)TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(v15, 0, 0xD000000000000011, 0x800000010056CF70);
  v9 = swift_allocObject(&unk_1005F7818, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v10 = (_QWORD *)((char *)v8 + *(_QWORD *)((swift_isaMask & *v8) + 0x108));
  swift_beginAccess(v10, v15, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = (uint64_t)sub_10021D0B0;
  v10[1] = v9;
  sub_1000381B8(v11, v12);
  v13 = sub_10002A750(&qword_10064D8D0);
  swift_allocObject(v13, 73, 7);
  return TTRITableCell.init(_:)(v8);
}

uint64_t sub_10021C0C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    ObjectType = swift_getObjectType(v5, v3);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    swift_unknownObjectRetain(v5);
    v8(1, ObjectType, v6);
    v9 = swift_unknownObjectRelease(v5);
    v10 = (uint64_t *)TTRITipKitSignalContext.ListDetail.editFilters.unsafeMutableAddressor(v9);
    v11 = *v10;
    v12 = (void *)v10[1];
    swift_bridgeObjectRetain(v12);
    v13.value._countAndFlagsBits = v11;
    v13.value._object = v12;
    TTRITipKitSignal.donate(signalContext:)(v13);

    return swift_bridgeObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10021C18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t, char);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter), a2);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(ObjectType);
  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailColorsContent(0));
  v7 = &v6[qword_10063E798];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v6[qword_10063E7A0] = v5;
  v15 = 0;
  v16 = 1;
  v8 = TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(&v15, 0, 0xD000000000000010, 0x800000010056CDE0);
  v9 = swift_allocObject(&unk_1005F7818, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v10 = (void (**)(uint64_t, char))(v8 + qword_10063E798);
  v11 = *(_QWORD *)(v8 + qword_10063E798);
  v12 = *(_QWORD *)(v8 + qword_10063E798 + 8);
  *v10 = sub_10021D064;
  v10[1] = (void (*)(uint64_t, char))v9;
  sub_1000381B8(v11, v12);
  v13 = sub_10002A750(&qword_10064D8C8);
  swift_allocObject(v13, 73, 7);
  return TTRITableCell.init(_:)(v8);
}

void sub_10021C2B0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  _BYTE v14[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    if ((a2 & 1) == 0)
    {
      v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
      v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
      ObjectType = swift_getObjectType(v9, v7);
      v12 = *(_QWORD *)(v10 + 8);
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
      swift_unknownObjectRetain(v9);
      v13(a1, ObjectType, v12);
      swift_unknownObjectRelease(v9);
    }

  }
}

id sub_10021C35C(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  id result;
  void *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(uint64_t, char, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&a1[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter], a2);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 24))(ObjectType);
  result = objc_msgSend(a1, "view");
  if (result)
  {
    v7 = result;
    v8 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailEmblemsContent(0));
    v9 = &v8[qword_100663AC0];
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    swift_unknownObjectWeakInit(&v8[qword_100663AD0], 0);
    *(_QWORD *)&v8[qword_100663AC8] = v5;
    swift_unknownObjectWeakAssign(v10, v7);
    v17 = 0;
    v18 = 1;
    v19 = 0;
    v20 = 0;
    v11 = TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)(&v17, 0, 0xD000000000000011, 0x800000010056CDC0);

    v12 = swift_allocObject(&unk_1005F7818, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, a1);
    v13 = (void (**)(uint64_t, char, uint64_t, uint64_t))(v11 + qword_100663AC0);
    v14 = *(_QWORD *)(v11 + qword_100663AC0);
    v15 = *(_QWORD *)(v11 + qword_100663AC0 + 8);
    *v13 = sub_10021D050;
    v13[1] = (void (*)(uint64_t, char, uint64_t, uint64_t))v12;
    sub_1000381B8(v14, v15);
    v16 = sub_10002A750(&qword_10064D8C0);
    swift_allocObject(v16, 73, 7);
    return (id)TTRITableCell.init(_:)(v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10021C4D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v23[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v12 = (void *)Strong;
    if ((a2 & 1) != 0)
    {
      if (a4)
      {
        v18 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
        v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
        ObjectType = swift_getObjectType(v18, v11);
        v21 = *(_QWORD *)(v19 + 8);
        v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
        swift_unknownObjectRetain(v18);
        v22(a3, a4, ObjectType, v21);

        swift_unknownObjectRelease(v18);
        return;
      }
    }
    else
    {
      v13 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
      v14 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
      v15 = swift_getObjectType(v13, v11);
      v16 = *(_QWORD *)(v14 + 8);
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      swift_unknownObjectRetain(v13);
      v17(a1, v15, v16);
      swift_unknownObjectRelease(v13);
    }

  }
}

uint64_t sub_10021C5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v1 = OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListActionCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListActionCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListActionCell);
  }
  else
  {
    v3 = v0;
    v4._countAndFlagsBits = 0xD000000000000022;
    v5._object = (void *)0x800000010056CD70;
    v4._object = (void *)0x800000010056CD90;
    v5._countAndFlagsBits = 0xD000000000000015;
    v6 = TTRLocalizedString(_:comment:)(v5, v4);
    v7 = objc_allocWithZone((Class)type metadata accessor for TTRIButtonCellContent(0));
    v8 = TTRIButtonCellContent.init(state:)(v6._countAndFlagsBits, v6._object);
    v9 = swift_allocObject(&unk_1005F7818, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v3);
    v10 = (uint64_t *)(v8 + direct field offset for TTRIButtonCellContent.action);
    swift_beginAccess(v8 + direct field offset for TTRIButtonCellContent.action, v15, 1, 0);
    v11 = *v10;
    v12 = v10[1];
    *v10 = (uint64_t)sub_10021D048;
    v10[1] = v9;
    sub_1000381B8(v11, v12);
    v13 = sub_10002A750(&qword_10064D8B8);
    swift_allocObject(v13, 73, 7);
    v2 = TTRITableCell.init(_:)(v8);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10021C744(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    ObjectType = swift_getObjectType(v5, v3);
    v8 = *(void (**)(uint64_t, uint64_t))(v6 + 40);
    swift_unknownObjectRetain(v5);
    v8(ObjectType, v6);
    v9 = swift_unknownObjectRelease(v5);
    v10 = (uint64_t *)TTRITipKitSignalContext.ListDetail.convertList.unsafeMutableAddressor(v9);
    v11 = *v10;
    v12 = (void *)v10[1];
    swift_bridgeObjectRetain(v12);
    v13.value._countAndFlagsBits = v11;
    v13.value._object = v12;
    TTRITipKitSignal.donate(signalContext:)(v13);

    return swift_bridgeObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10021C804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void (*v12)(_OWORD *, uint64_t, uint64_t);
  _BYTE v13[24];
  _OWORD v14[5];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v5 = (char *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8);
    ObjectType = swift_getObjectType(v6, v4);
    v14[0] = *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor];
    v9 = *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor + 64];
    v11 = *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor + 16];
    v10 = *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor + 32];
    v14[3] = *(_OWORD *)&v5[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor + 48];
    v14[4] = v9;
    v14[1] = v11;
    v14[2] = v10;
    v12 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v7 + 64);
    swift_unknownObjectRetain(v6);
    sub_10021CFE0(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CCD0C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001CCD48);
    v12(v14, ObjectType, v7);
    sub_10021CFE0(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CCDC0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100179CA0);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10021C9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[4] = v7;
  v4[5] = v8;
  return swift_task_switch(sub_10021CA40, v7, v8);
}

uint64_t sub_10021CA40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v3 = (_QWORD *)(*(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter);
  v4 = v3[1];
  ObjectType = swift_getObjectType(*v3, a2);
  v6 = *(int **)(v4 + 48);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  *(_QWORD *)(v2 + 48) = v7;
  *v7 = v2;
  v7[1] = sub_10021CAC4;
  return v9(ObjectType, v4);
}

uint64_t sub_10021CAC4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return swift_task_switch(sub_100133EC4, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_10021CC34()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[4];
  _QWORD v12[19];
  uint64_t v13;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter], v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v12, ObjectType);
  v6 = v13;
  swift_bridgeObjectRetain(v13);
  sub_1000905E0((uint64_t)v12);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v2, "setTitle:", v7);

  if (*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_tableDataController])
  {
    __chkstk_darwin(v8);
    v11[2] = v1;
    v10 = v9;
    TTRITableDataController.performBatchUpdates(by:updates:)(1, sub_10021CF10, v11);

  }
}

uint64_t type metadata accessor for TTRIListDetailViewController()
{
  return objc_opt_self(_TtC9Reminders28TTRIListDetailViewController);
}

uint64_t sub_10021CF10(uint64_t a1, uint64_t a2)
{
  return sub_1002199B8(a1, a2);
}

uint64_t sub_10021CF30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021CF54(char a1)
{
  uint64_t v1;

  return sub_10021C804(a1 & 1, v1);
}

uint64_t sub_10021CF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021CFA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_10021CFE0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  a3(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_10021D048()
{
  uint64_t v0;

  return sub_10021C744(v0);
}

void sub_10021D050(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10021C4D4(a1, a2 & 1, a3, a4, v4);
}

void sub_10021D064(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_10021C2B0(a1, a2 & 1, v2);
}

void sub_10021D070(void *a1, void *a2, void *a3)
{
  if (a1 != (void *)1)
  {

  }
}

uint64_t sub_10021D0B0()
{
  uint64_t v0;

  return sub_10021C0C8(v0);
}

unint64_t sub_10021D0C8()
{
  unint64_t result;

  result = qword_10064D8D8;
  if (!qword_10064D8D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRRemindersListListType, &type metadata for TTRRemindersListListType);
    atomic_store(result, (unint64_t *)&qword_10064D8D8);
  }
  return result;
}

uint64_t sub_10021D10C(uint64_t a1)
{
  uint64_t v1;

  return sub_10021BE84(a1, v1);
}

uint64_t sub_10021D114()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10021D138(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain(a2);
}

uint64_t sub_10021D148(uint64_t a1)
{
  uint64_t v1;

  return sub_10021B3E4(a1, v1);
}

uint64_t sub_10021D150(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListDetailViewModelBadge - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_10021D18C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  char v12;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v9 = *(void **)(a1 + 72);
  v10 = *(void **)(a1 + 80);
  v12 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  sub_10002B764(v2, v3, v4, v5, v6, v7, v8);
  sub_10002B7A0(v9, v10, v12);
  return a1;
}

uint64_t sub_10021D228(uint64_t a1)
{
  sub_10002B7A0(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_10021D258(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  char v12;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v9 = *(void **)(a1 + 72);
  v10 = *(void **)(a1 + 80);
  v12 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_10002B328(v2, v3, v4, v5, v6, v7, v8);
  sub_10002B318(v9, v10, v12);
  return a1;
}

uint64_t sub_10021D2F4(uint64_t a1)
{
  sub_10002B318(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_10021D324()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021D350(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10064D90C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10021C9D4(a1, v4, v5, v6);
}

unint64_t sub_10021D3BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646410;
  if (!qword_100646410)
  {
    v1 = objc_opt_self(UITableView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646410);
  }
  return result;
}

void sub_10021D3F8()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_doneBarButtonItem], 0);
  v1 = swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cancelBarButtonItem], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_tableDataController] = 0;
  v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_autoBeginEditingPerformed] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___editFiltersCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell] = 0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor];
  v3 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor(v1);
  v5 = *v3;
  v4 = v3[1];
  *(_QWORD *)v2 = 0xD000000000000014;
  *((_QWORD *)v2 + 1) = 0x8000000100569E30;
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v4;
  *((_OWORD *)v2 + 2) = xmmword_100529B00;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListActionCell] = 0;
  swift_bridgeObjectRetain(v4);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIListDetailViewController.swift", 44, 2, 35, 0);
  __break(1u);
}

void sub_10021D584()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  _StringGuts.grow(_:)(24);
  v1 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor(v0);
  v3 = *v1;
  v2 = v1[1];
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4._object = (void *)0x800000010056D230;
  v4._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v4);
  qword_10064D920 = v3;
  *(_QWORD *)algn_10064D928 = v2;
}

uint64_t sub_10021D64C()
{
  return type metadata accessor for TTRIRemindersBoardColumnDragItem(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnDragItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10064D958;
  if (!qword_10064D958)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersBoardColumnDragItem);
  return result;
}

uint64_t sub_10021D690(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10021D900(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String v5;
  NSString v6;
  id v7;
  void *v8;

  v2 = (void *)objc_opt_self(REMError);
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (qword_10063D500 != -1)
    swift_once(&qword_10063D500, sub_10021D584);
  v3 = qword_10064D920;
  v4 = *(void **)algn_10064D928;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10064D928);
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v2, "internalErrorWithDebugDescription:", v6, swift_bridgeObjectRelease(0x800000010056D250).n128_f64[0], 0xD00000000000001ALL);

  v8 = (void *)_convertErrorToNSError(_:)(v7);
  (*(void (**)(uint64_t, _QWORD, void *))(a1 + 16))(a1, 0, v8);

  return 0;
}

uint64_t sub_10021DA38()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))() & 1;
}

uint64_t sub_10021DA5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

_QWORD *sub_10021DA7C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  swift_release(v0[19]);
  swift_release(v0[21]);
  swift_release(v0[23]);
  return v0;
}

uint64_t sub_10021DAE8()
{
  uint64_t v0;

  sub_10021DA7C();
  return swift_deallocClassInstance(v0, 192, 7);
}

uint64_t type metadata accessor for TTRIAnyTreeViewDataSourcePrefetching(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIAnyTreeViewDataSourcePrefetching);
}

uint64_t sub_10021DB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064DBF0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064DBF0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10021DBA8(char a1, char a2, char a3, uint64_t (*a4)(uint64_t, __n128))
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t inited;
  __int128 v18;
  int v19;
  uint64_t v20;
  _BYTE v22[72];
  _OWORD v23[2];
  uint64_t v24;

  v8 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = __chkstk_darwin(v8);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v20 = 1;
    if ((a2 & 1) != 0)
      return v20 & 1;
    goto LABEL_7;
  }
  v13 = sub_10021E2AC();
  v14 = v13[2];
  swift_bridgeObjectRelease(v13);
  if (!v14)
  {
    LOBYTE(v20) = 0;
    return v20 & 1;
  }
  v15 = sub_10021E2AC();
  v16 = sub_10002A750(&qword_10064DD10);
  inited = swift_initStackObject(v16, v22);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:), v8);
  TTRSectionLite.init(sectionType:)(v23, v12);
  v18 = v23[1];
  *(_OWORD *)(inited + 32) = v23[0];
  *(_OWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 64) = v24;
  v19 = sub_10009671C((uint64_t)v15, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for TTRSectionLite);
  v10 = swift_bridgeObjectRelease(v15);
  v20 = v19 ^ 1u;
  if ((v19 & 1) == 0 && (a2 & 1) == 0)
  {
LABEL_7:
    if ((a3 & 1) == 0)
      LOBYTE(v20) = a4(v20, v10);
  }
  return v20 & 1;
}

_QWORD *sub_10021DD18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v2 = sub_10021DD74(v0);
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

_QWORD *sub_10021DD74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _OWORD v26[2];
  uint64_t v27;

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v25 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v9);
    sub_1003D7E74(0, v10, 0);
    v12 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    v23 = v9;
    v24 = v13;
    v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15 = v6;
    do
    {
      v16 = v14(v8, v12, v5);
      REMRemindersListDataView.SectionLite.type.getter(v16);
      TTRSectionLite.init(sectionType:)(v26, v4);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      {
        sub_1003D7E74(0, v11[2] + 1, 1);
        v11 = v25;
      }
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
      {
        sub_1003D7E74(v17 > 1, v18 + 1, 1);
        v11 = v25;
      }
      v11[2] = v18 + 1;
      v19 = &v11[5 * v18];
      v20 = v26[0];
      v21 = v26[1];
      v19[8] = v27;
      *((_OWORD *)v19 + 2) = v20;
      *((_OWORD *)v19 + 3) = v21;
      v12 += v24;
      --v10;
      v6 = v15;
    }
    while (v10);
    swift_bridgeObjectRelease(v23);
  }
  return v11;
}

uint64_t sub_10021DF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    sub_10021DFAC(v0);
    v2 = v3;
    v4 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

void sub_10021DFAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - v6;
  v8 = *(_QWORD *)(a1 + 72);
  v9 = (char *)_swiftEmptyArrayStorage;
  v27 = (char *)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(v8 + 16);
  v11 = swift_bridgeObjectRetain(v8);
  if (v10)
  {
    v12 = 0;
    v24 = v10;
    v25 = v8;
    while (v12 < *(_QWORD *)(v8 + 16))
    {
      v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v14 = *(_QWORD *)(v3 + 72);
      v15 = (*(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16))(v7, v8 + v13 + v14 * v12, v2, v11);
      if ((REMRemindersListDataView.SectionLite.isEmpty.getter(v15) & 1) != 0)
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v16(v26, v7, v2);
        v17 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
        {
          sub_1003D7ED8(0, *((_QWORD *)v17 + 2) + 1, 1);
          v17 = v27;
        }
        v19 = *((_QWORD *)v17 + 2);
        v18 = *((_QWORD *)v17 + 3);
        if (v19 >= v18 >> 1)
        {
          sub_1003D7ED8(v18 > 1, v19 + 1, 1);
          v17 = v27;
        }
        *((_QWORD *)v17 + 2) = v19 + 1;
        v16(&v17[v13 + v19 * v14], v26, v2);
        v27 = v17;
        v10 = v24;
        v8 = v25;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
      }
      if (v10 == ++v12)
      {
        v9 = v27;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease(v8);
    v27 = v9;
    v20 = sub_10002A750(&qword_10064DD18);
    v21 = sub_100220CCC();
    v22 = sub_100220D18();
    Sequence.mapToSet<A>(_:)(sub_10021E1D0, 0, v20, &type metadata for TTRSectionID, v21, v22);
    swift_release();
  }
}

uint64_t sub_10021E1D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[16];
  _BYTE v12[16];
  _BYTE v13[8];

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMRemindersListDataView.SectionLite.type.getter(v3);
  TTRSectionLite.init(sectionType:)(&v8, v5);
  sub_100220D5C((uint64_t)&v8, (uint64_t)v13);
  sub_10000F614((uint64_t)&v9, (uint64_t)v12, &qword_100646428);
  sub_100056AB8((uint64_t)v12);
  sub_10000F614((uint64_t)&v10, (uint64_t)v11, &qword_100646428);
  sub_100056AB8((uint64_t)v11);
  return sub_100220D5C((uint64_t)v13, a1);
}

_QWORD *sub_10021E2AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 32);
  }
  else
  {
    v2 = sub_10021E308(v0);
    v3 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

_QWORD *sub_10021E308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _OWORD v26[2];
  uint64_t v27;

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v25 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v9);
    sub_1003D7E74(0, v10, 0);
    v12 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    v23 = v9;
    v24 = v13;
    v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15 = v6;
    do
    {
      v16 = v14(v8, v12, v5);
      REMRemindersListDataView.SectionLite.type.getter(v16);
      TTRSectionLite.init(sectionType:)(v26, v4);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      {
        sub_1003D7E74(0, v11[2] + 1, 1);
        v11 = v25;
      }
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
      {
        sub_1003D7E74(v17 > 1, v18 + 1, 1);
        v11 = v25;
      }
      v11[2] = v18 + 1;
      v19 = &v11[5 * v18];
      v20 = v26[0];
      v21 = v26[1];
      v19[8] = v27;
      *((_OWORD *)v19 + 2) = v20;
      *((_OWORD *)v19 + 3) = v21;
      v12 += v24;
      --v10;
      v6 = v15;
    }
    while (v10);
    swift_bridgeObjectRelease(v23);
  }
  return v11;
}

unint64_t sub_10021E4E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v2 = sub_10021FB68(v0);
    v3 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 96) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_10021E540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 104);
  }
  else
  {
    v2 = sub_1002201A4(v0);
    v3 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 104) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

_QWORD *sub_10021E59C(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  char v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v55 = a2;
  v3 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v59 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v54 = (char *)&v49 - v7;
  v8 = sub_10002A750(&qword_10064A7E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  v16 = sub_10021E540();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_1002AA620((uint64_t)a1), (v18 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, *(_QWORD *)(v16 + 56) + *(_QWORD *)(v12 + 72) * v17, v11);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v19, 1, v11);

  v20 = swift_bridgeObjectRelease(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v20) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_10064A7E8);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v23 = REMRemindersListDataView.SectionLite.reminders.getter(v22);
    v24 = v23;
    v21 = _swiftEmptyArrayStorage;
    v60 = (unint64_t)_swiftEmptyArrayStorage;
    v58 = *(_QWORD *)(v23 + 16);
    if (v58)
    {
      v50 = v14;
      v51 = v12;
      v25 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      v52 = v11;
      v53 = v25;
      v57 = v23 + v25;
      v26 = *(_QWORD *)(v59 + 72);
      v27 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v59 + 16);
      v49 = v23;
      v28 = swift_bridgeObjectRetain(v23);
      v29 = 0;
      v30 = v55;
      v31 = v54;
      do
      {
        v33 = v27(v31, v57 + v26 * v29, v3, v28);
        v34 = REMRemindersListDataView.ReminderLite.objectID.getter(v33);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v36 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        v38 = specialized Array._endMutation()(v37);
        if ((v30 & 1) != 0)
        {
          v39 = REMRemindersListDataView.ReminderLite.subtasks.getter(v38);
          if (v39)
          {
            v56 = v39;
            v40 = *(_QWORD *)(v39 + 16);
            if (v40)
            {
              v41 = v56 + v53;
              do
              {
                v42 = ((uint64_t (*)(char *, unint64_t, uint64_t))v27)(v6, v41, v3);
                v43 = REMRemindersListDataView.ReminderLite.objectID.getter(v42);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
                v45 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v44 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v45 >= v44 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
                v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
                specialized Array._endMutation()(v46);
                (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v3);
                v41 += v26;
                --v40;
              }
              while (v40);
            }
            v32 = swift_bridgeObjectRelease(v56);
            v30 = v55;
            v31 = v54;
          }
        }
        ++v29;
        (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v31, v3, v32);
      }
      while (v29 != v58);
      v24 = v49;
      swift_bridgeObjectRelease(v49);
      v21 = (_QWORD *)v60;
      v12 = v51;
      v11 = v52;
      v14 = v50;
    }
    v47 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v47);
  }
  return v21;
}

uint64_t sub_10021E948(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v2 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v48 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (char *)&v39 - v6;
  v7 = sub_10002A750(&qword_10064A7E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v47 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  v14 = sub_10021E540();
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1002AA620((uint64_t)a1), (v16 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v11 + 72) * v15, v10);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v17, 1, v10);

  v18 = swift_bridgeObjectRelease(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v18) == 1)
  {
    sub_1000073A0((uint64_t)v9, &qword_10064A7E8);
    return 0;
  }
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v47, v9, v10);
  result = REMRemindersListDataView.SectionLite.reminders.getter(v19);
  v21 = result;
  v43 = *(_QWORD *)(result + 16);
  if (!v43)
  {
LABEL_22:
    v37 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v47, v10, v37);
    return 0;
  }
  v22 = 0;
  v41 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v42 = v10;
  v44 = v11;
  v45 = result + v41;
  v23 = v46;
  v40 = result;
  while (v22 < *(_QWORD *)(v21 + 16))
  {
    v25 = *(_QWORD *)(v48 + 72);
    v26 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v48 + 16);
    v27 = v26(v23, v45 + v25 * v22, v2);
    v28 = REMRemindersListDataView.ReminderLite.isCompleted.getter(v27);
    if ((v28 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v2);
      v38 = swift_bridgeObjectRelease(v21);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v47, v10, v38);
      return 1;
    }
    v29 = REMRemindersListDataView.ReminderLite.subtasks.getter(v28);
    if (v29)
    {
      v30 = v29;
      v31 = *(_QWORD *)(v29 + 16);
      if (v31)
      {
        v32 = v29 + v41;
        while (1)
        {
          v33 = v26(v4, v32, v2);
          v34 = REMRemindersListDataView.ReminderLite.isCompleted.getter(v33);
          v24 = *(void (**)(char *, uint64_t))(v48 + 8);
          v24(v4, v2);
          if ((v34 & 1) != 0)
            break;
          v32 += v25;
          if (!--v31)
          {
            swift_bridgeObjectRelease(v30);
            v10 = v42;
            v23 = v46;
            v21 = v40;
            goto LABEL_10;
          }
        }
        v35 = swift_bridgeObjectRelease(v30);
        ((void (*)(char *, uint64_t, __n128))v24)(v46, v2, v35);
        v36 = swift_bridgeObjectRelease(v40);
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v47, v42, v36);
        return 1;
      }
      swift_bridgeObjectRelease(v29);
      v24 = *(void (**)(char *, uint64_t))(v48 + 8);
      v10 = v42;
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t))(v48 + 8);
    }
LABEL_10:
    ++v22;
    result = ((uint64_t (*)(char *, uint64_t))v24)(v23, v2);
    v11 = v44;
    if (v22 == v43)
      goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10021ECB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t result;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];
  uint64_t v29;

  v6 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064A7E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v16 = sub_10021EEB4();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_100005CF4(a1, a2), (v18 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v16 + 56) + *(_QWORD *)(v13 + 72) * v17, v12);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v19, 1, v12);
  swift_bridgeObjectRelease(a2);
  v20 = swift_bridgeObjectRelease(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v20) == 1)
  {
    result = sub_1000073A0((uint64_t)v11, &qword_10064A7E8);
    v22 = 0;
    v23 = xmmword_100529DD0;
    v24 = 0uLL;
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    REMRemindersListDataView.SectionLite.type.getter(v25);
    TTRSectionLite.init(sectionType:)(v28, v8);
    v26 = v28[1];
    v27 = v28[0];
    v22 = v29;
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v24 = v26;
    v23 = v27;
  }
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v24;
  *(_QWORD *)(a3 + 32) = v22;
  return result;
}

uint64_t sub_10021EEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 112);
  }
  else
  {
    v2 = sub_100220648(v0);
    v3 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 112) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

void sub_10021EF10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_10021EF20(a1, a2, a3, 1u, a4);
}

void sub_10021EF18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_10021EF20(a1, a2, a3, 9u, a4);
}

void sub_10021EF20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  id v63;
  void *v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  __int16 v94;
  char v95;
  _QWORD v96[2];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  int v100;
  char v101;
  __int16 v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int16 v107;
  _BYTE v108[136];

  v79 = a4;
  v82 = a2;
  v80 = a1;
  v88 = a5;
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v6);
  v90 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v8 = __chkstk_darwin(v91);
  v92 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v81 = (uint64_t *)((char *)&v77 - v10);
  v93 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v89 = *(_QWORD *)(v93 - 8);
  v11 = __chkstk_darwin(v93);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v77 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v77 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v77 - v20;
  v22 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v23 = __chkstk_darwin(v22);
  v86 = (uint64_t)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v77 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v77 - v28;
  v30 = a3;
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 56);
  v87 = a3;
  if (!Strong)
  {
    v44 = v89;
    v45 = v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v29, 1, 1, v93);
    v46 = (uint64_t)v29;
    v41 = v88;
    v47 = (uint64_t)v19;
    goto LABEL_16;
  }
  v33 = Strong;
  v84 = v29;
  v85 = v19;
  v34 = *(_QWORD *)(v30 + 64);
  ObjectType = swift_getObjectType(Strong, v32);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(ObjectType, v34);
  swift_unknownObjectRelease(v33);
  v37 = v89;
  v38 = v93;
  v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56);
  v83(v27, 1, 1, v93);
  swift_retain();
  v39 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v27);
  swift_release();
  sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_100640EB0);
  if (!v39[2])
  {
    swift_release();
    v42 = swift_bridgeObjectRelease(v39);
    v39 = _swiftEmptyArrayStorage;
    v41 = v88;
    v43 = _swiftEmptyArrayStorage[2];
    if (!v43)
      goto LABEL_15;
    goto LABEL_10;
  }
  sub_10002B1E8((uint64_t)v39 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v38);
  sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v41 = v88;
  if (EnumCaseMultiPayload)
  {
    v42 = swift_release();
    v43 = v39[2];
    if (!v43)
      goto LABEL_15;
LABEL_10:
    v49 = (uint64_t)v39 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    v50 = *(_QWORD *)(v89 + 72);
    v78 = v39;
    swift_bridgeObjectRetain(v39);
    v51 = (uint64_t)v90;
    v52 = (uint64_t)v92;
    do
    {
      sub_10002B1E8(v49, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v13, v93) == 1)
      {
        sub_10001F580((uint64_t)v13, v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10002B1E8(v51, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v53 = (char *)&loc_10021F2C4 + 4 * word_100529DE0[swift_getEnumCaseMultiPayload(v52, v91)];
        __asm { BR              X9 }
      }
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v49 += v50;
      --v43;
    }
    while (v43);
    v39 = v78;
    v42 = swift_bridgeObjectRelease(v78);
    v41 = v88;
    goto LABEL_15;
  }
  swift_retain();
  v48 = sub_100393344((uint64_t)v39, v36);
  swift_bridgeObjectRelease(v39);
  swift_release_n(v36, 2);
  v39 = v48;
  v43 = v48[2];
  if (v43)
    goto LABEL_10;
LABEL_15:
  v46 = (uint64_t)v84;
  v45 = v93;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v83)(v84, 1, 1, v93, v42);
  swift_bridgeObjectRelease(v39);
  v47 = (uint64_t)v85;
  v44 = v89;
LABEL_16:
  v54 = v86;
  sub_10000735C(v46, v86, (uint64_t *)&unk_100640EB0);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v54, 1, v45);
  v56 = v87;
  if (v55 == 1)
  {
    sub_1000073A0(v54, (uint64_t *)&unk_100640EB0);
    if (qword_10063D508 != -1)
      swift_once(&qword_10063D508, sub_10021DB18);
    v57 = type metadata accessor for Logger(0);
    v58 = sub_100012DC4(v57, (uint64_t)qword_10064DBF0);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.fault.getter(v59);
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Unable to find sectionless item", v61, 2u);
      swift_slowDealloc(v61, -1, -1);
    }

  }
  else
  {
    sub_10001F580(v54, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v62 = *(_QWORD *)(v56 + 88);
    if (v62)
    {
      v63 = objc_msgSend((id)swift_getObjCClassFromMetadata(v62), "newObjectID");
      if (v63)
      {
        v64 = v63;
        v65 = v81;
        *v81 = v63;
        swift_storeEnumTagMultiPayload(v65, v91, v79);
        v66 = v64;
        sub_1000073A0(v46, (uint64_t *)&unk_100640EB0);
        v67 = v82;
        v96[0] = v80;
        v96[1] = v82;
        v97 = 0u;
        v98 = 0u;
        v99 = 0u;
        v100 = 192;
        v101 = 3;
        v102 = v94;
        v103 = v95;
        v104 = 0u;
        v105 = 0u;
        v106 = 0u;
        v107 = 255;
        TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v96);
        sub_10000F614((uint64_t)v96, (uint64_t)v108, &qword_100649B60);
        TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v65, v108, 1, 0, 1, 0, 0, 0);
        v68 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection(0);
        v69 = v41 + *(int *)(v68 + 24);
        sub_10001F580(v47, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v70 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
        swift_storeEnumTagMultiPayload(v69, v70, 1);
        *(_QWORD *)(v41 + *(int *)(v68 + 20)) = v66;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v41, 0, 1, v68);
        swift_bridgeObjectRetain(v67);
        return;
      }
    }
    if (qword_10063D508 != -1)
      swift_once(&qword_10063D508, sub_10021DB18);
    v71 = type metadata accessor for Logger(0);
    v72 = sub_100012DC4(v71, (uint64_t)qword_10064DBF0);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.fault.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v75 = 0;
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unable to create new section ID from section class", v75, 2u);
      swift_slowDealloc(v75, -1, -1);
    }

    sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  sub_1000073A0(v46, (uint64_t *)&unk_100640EB0);
  v76 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v41, 1, 1, v76);
}

uint64_t sub_10021F790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];

  swift_beginAccess(v1 + 120, v10, 0, 0);
  sub_10000735C(v1 + 120, (uint64_t)&v8, &qword_10064DD08);
  if (v9)
    return sub_10002E37C(&v8, (uint64_t)a1);
  sub_1000073A0((uint64_t)&v8, &qword_10064DD08);
  v4 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + 24) = &off_1005F7AC0;
  swift_unknownObjectWeakAssign(v6, v1);
  a1[3] = v4;
  a1[4] = (uint64_t)&off_1005F0030;
  *a1 = v5;
  sub_100010634((uint64_t)a1, (uint64_t)&v8);
  swift_beginAccess(v1 + 120, v7, 33, 0);
  sub_100220C84((uint64_t)&v8, v1 + 120);
  return swift_endAccess(v7);
}

void sub_10021F89C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v7, v8);
  v9 = (char *)sub_10021F9B4 + 4 * byte_100529DF4[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

uint64_t sub_10021F9B4()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  return 0;
}

void sub_10021F9EC()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  JUMPOUT(0x10021F9C8);
}

void sub_10021FA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, __n128);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  char v15;
  char v16;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v0 + 64);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  }
  sub_10000735C(v4, v6, &qword_100649CA0);
  v13 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  if (v14(v6, 1, v13) == 1)
  {
    sub_1000073A0(v6, &qword_100649CA0);
    v15 = 0;
  }
  else
  {
    v15 = *(_BYTE *)(v6 + *(int *)(v13 + 32));
    sub_10001F544(v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  sub_10000735C(v4, v5, &qword_100649CA0);
  if (v14(v5, 1, v13) == 1)
  {
    sub_1000073A0(v5, &qword_100649CA0);
    v16 = 0;
  }
  else
  {
    v16 = *(_BYTE *)(v5 + *(int *)(v13 + 112));
    sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  sub_10021DBA8(v15, v16, v3 & 1, v2);
  sub_1000073A0(v4, &qword_100649CA0);
  JUMPOUT(0x10021F9C8);
}

unint64_t sub_10021FB68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain(v6);
  v7 = sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  v16 = v7;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v9 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    v12 = swift_bridgeObjectRetain(v6);
    do
    {
      v11(v5, v9, v2, v12);
      sub_10021FCB0(&v16);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n(v6, 2);
    return v16;
  }
  else
  {
    v13 = v7;
    swift_bridgeObjectRelease(v6);
  }
  return v13;
}

uint64_t sub_10021FCB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, unint64_t, uint64_t);
  id v80;
  char *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;

  v2 = type metadata accessor for REMRemindersListDataView.ReminderLite(0);
  v83 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v70 - v6;
  v8 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMRemindersListDataView.SectionLite.type.getter(v10);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if ((_DWORD)result != enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    if ((_DWORD)result == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
      return result;
    _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
    __break(1u);
LABEL_35:

    return swift_bridgeObjectRelease(v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
  v14 = *(void **)v12;
  v15 = *((_QWORD *)v12 + 4);
  swift_bridgeObjectRelease(*((_QWORD *)v12 + 2));
  v16 = swift_bridgeObjectRelease(v15);
  v17 = REMRemindersListDataView.SectionLite.reminders.getter(v16);
  v8 = v17;
  v75 = *(_QWORD *)(v17 + 16);
  if (!v75)
  {

    return swift_bridgeObjectRelease(v8);
  }
  v18 = 0;
  v71 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  v72 = v7;
  v73 = v17;
  v74 = v17 + v71;
  v81 = v5;
  v82 = v14;
  while (1)
  {
    if (v18 >= *(_QWORD *)(v8 + 16))
      goto LABEL_41;
    v19 = v74 + *(_QWORD *)(v83 + 72) * v18;
    v20 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v83 + 16);
    v78 = *(_QWORD *)(v83 + 72);
    v79 = v20;
    v21 = v20(v7, v19, v2);
    v22 = (void *)REMRemindersListDataView.ReminderLite.objectID.getter(v21);
    v80 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v84 = (_QWORD *)*a1;
    v24 = v84;
    *a1 = 0x8000000000000000;
    v26 = sub_1002AA364((uint64_t)v22);
    v27 = v24[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    v31 = v24[3];
    v77 = v18;
    if (v31 >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1002B11D4();
    }
    else
    {
      sub_10045C014(v29, isUniquelyReferenced_nonNull_native);
      v32 = sub_1002AA364((uint64_t)v22);
      if ((v30 & 1) != (v33 & 1))
        goto LABEL_44;
      v26 = v32;
    }
    v14 = v82;
    v34 = v84;
    v35 = 8 * v26;
    if ((v30 & 1) != 0)
    {
      v36 = v84[7];

      *(_QWORD *)(v36 + v35) = v14;
    }
    else
    {
      v84[(v26 >> 6) + 8] |= 1 << v26;
      *(_QWORD *)(v34[6] + 8 * v26) = v22;
      *(_QWORD *)(v34[7] + 8 * v26) = v14;
      v37 = v34[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_43;
      v34[2] = v39;
      v40 = v22;
    }
    v41 = *a1;
    *a1 = v34;

    v42 = swift_bridgeObjectRelease(v41);
    v43 = REMRemindersListDataView.ReminderLite.subtasks.getter(v42);
    v44 = v81;
    if (v43)
    {
      v76 = v43;
      v45 = *(_QWORD *)(v43 + 16);
      if (v45)
      {
        v46 = v76 + v71;
        do
        {
          v50 = v2;
          v51 = v79(v44, v46, v2);
          v52 = (void *)REMRemindersListDataView.ReminderLite.objectID.getter(v51);
          v53 = v80;
          v54 = swift_isUniquelyReferenced_nonNull_native(*a1);
          v84 = (_QWORD *)*a1;
          v55 = v84;
          *a1 = 0x8000000000000000;
          v57 = sub_1002AA364((uint64_t)v52);
          v58 = v55[2];
          v59 = (v56 & 1) == 0;
          v60 = v58 + v59;
          if (__OFADD__(v58, v59))
          {
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
          v61 = v56;
          if (v55[3] >= v60)
          {
            if ((v54 & 1) != 0)
            {
              v64 = v84;
              if ((v56 & 1) != 0)
                goto LABEL_20;
            }
            else
            {
              sub_1002B11D4();
              v64 = v84;
              if ((v61 & 1) != 0)
                goto LABEL_20;
            }
          }
          else
          {
            sub_10045C014(v60, v54);
            v62 = sub_1002AA364((uint64_t)v52);
            if ((v61 & 1) != (v63 & 1))
              goto LABEL_44;
            v57 = v62;
            v64 = v84;
            if ((v61 & 1) != 0)
            {
LABEL_20:
              v47 = v64[7];
              v48 = 8 * v57;

              v14 = v82;
              *(_QWORD *)(v47 + v48) = v82;
              goto LABEL_21;
            }
          }
          v64[(v57 >> 6) + 8] |= 1 << v57;
          v65 = 8 * v57;
          *(_QWORD *)(v64[6] + v65) = v52;
          v14 = v82;
          *(_QWORD *)(v64[7] + v65) = v82;
          v66 = v64[2];
          v38 = __OFADD__(v66, 1);
          v67 = v66 + 1;
          if (v38)
            goto LABEL_40;
          v64[2] = v67;
          v68 = v52;
LABEL_21:
          v49 = *a1;
          *a1 = v64;

          swift_bridgeObjectRelease(v49);
          v44 = v81;
          v2 = v50;
          (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v50);
          v46 += v78;
          --v45;
        }
        while (v45);
      }
      swift_bridgeObjectRelease(v76);
      v7 = v72;
    }
    v18 = v77 + 1;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v7, v2);
    v8 = v73;
    if (v18 == v75)
      goto LABEL_35;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  v69 = sub_100017648();
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v69);
  __break(1u);
  return result;
}

uint64_t sub_1002201A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  int v23;
  void *v24;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  uint64_t v26;
  __n128 v27;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  void (*v60)(_QWORD, _QWORD, _QWORD, __n128);
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  char *v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;

  v2 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v66 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v65 = (char *)&v55 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - v12;
  v14 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain(v14);
  v15 = sub_100350A58((uint64_t)_swiftEmptyArrayStorage);
  v16 = *(_QWORD *)(v14 + 16);
  if (!v16)
  {
LABEL_31:
    swift_bridgeObjectRelease(v14);
    return v15;
  }
  v17 = v14;
  v18 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v67 = *(_QWORD *)(v7 + 72);
  v64 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
  v59 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
  v19 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v7 + 16);
  v56 = v17;
  v20 = swift_bridgeObjectRetain(v17);
  v61 = v13;
  v62 = v5;
  v60 = v19;
  v57 = v2;
  v58 = v3;
  v63 = v7;
  while (1)
  {
    v22 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v19)(v13, v18, v6, v20);
    REMRemindersListDataView.SectionLite.type.getter(v22);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v23 != v64)
      break;
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v2 = (uint64_t)v13;
    v24 = *(void **)v5;
    v25 = (void (*)(char *, uint64_t, uint64_t, __n128))v19;
    v26 = *((_QWORD *)v5 + 4);
    swift_bridgeObjectRelease(*((_QWORD *)v5 + 2));
    v27 = swift_bridgeObjectRelease(v26);
    v25(v65, v2, v6, v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    v68 = (_QWORD *)v15;
    v30 = sub_1002AA620((uint64_t)v24);
    v31 = *(_QWORD *)(v15 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      goto LABEL_33;
    v2 = v29;
    if (*(_QWORD *)(v15 + 24) >= v33)
    {
      v36 = v63;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_19;
      sub_1002AF338();
    }
    else
    {
      sub_100458F50(v33, isUniquelyReferenced_nonNull_native);
      v34 = sub_1002AA620((uint64_t)v24);
      if ((v2 & 1) != (v35 & 1))
        goto LABEL_37;
      v30 = v34;
    }
    v36 = v63;
LABEL_19:
    v46 = v68;
    if ((v2 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 40))(v68[7] + v30 * v67, v65, v6);
    }
    else
    {
      v68[(v30 >> 6) + 8] |= 1 << v30;
      *(_QWORD *)(v46[6] + 8 * v30) = v24;
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v46[7] + v30 * v67, v65, v6);
      v47 = v46[2];
      v48 = __OFADD__(v47, 1);
      v49 = v47 + 1;
      if (v48)
        goto LABEL_34;
      v46[2] = v49;
      v50 = v24;
    }
    v15 = (unint64_t)v68;

    v21 = swift_bridgeObjectRelease(0x8000000000000000);
    v2 = v57;
    v3 = v58;
LABEL_5:
    v13 = v61;
    v5 = v62;
    v19 = v60;
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v61, v6, v21);
    v18 += v67;
    if (!--v16)
    {
      v14 = v56;
      swift_bridgeObjectRelease(v56);
      goto LABEL_31;
    }
  }
  if (v23 != v59)
    goto LABEL_36;
  ((void (*)(char *, char *, uint64_t))v19)(v66, v13, v6);
  v37 = swift_isUniquelyReferenced_nonNull_native(v15);
  v68 = (_QWORD *)v15;
  v39 = sub_1002AA620(0);
  v40 = *(_QWORD *)(v15 + 16);
  v41 = (v38 & 1) == 0;
  v42 = v40 + v41;
  if (!__OFADD__(v40, v41))
  {
    v43 = v38;
    if (*(_QWORD *)(v15 + 24) >= v42)
    {
      v36 = v63;
      if ((v37 & 1) == 0)
      {
        sub_1002AF338();
        goto LABEL_17;
      }
    }
    else
    {
      sub_100458F50(v42, v37);
      v44 = sub_1002AA620(0);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_37;
      v39 = v44;
LABEL_17:
      v36 = v63;
    }
    v51 = v68;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 40))(v68[7] + v39 * v67, v66, v6);
    }
    else
    {
      v68[(v39 >> 6) + 8] |= 1 << v39;
      *(_QWORD *)(v51[6] + 8 * v39) = 0;
      (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v51[7] + v39 * v67, v66, v6);
      v52 = v51[2];
      v48 = __OFADD__(v52, 1);
      v53 = v52 + 1;
      if (v48)
        goto LABEL_35;
      v51[2] = v53;
    }
    v15 = (unint64_t)v68;
    v21 = swift_bridgeObjectRelease(0x8000000000000000);
    goto LABEL_5;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
  __break(1u);
LABEL_37:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRSectionID);
  __break(1u);
  return result;
}

uint64_t sub_100220648(uint64_t a1)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v48;

  isUniquelyReferenced_nonNull_native = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v3 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  __chkstk_darwin(isUniquelyReferenced_nonNull_native);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v6 = *(_QWORD *)(v44 - 8);
  v7 = __chkstk_darwin(v44);
  v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - v9;
  v11 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain(v11);
  v12 = sub_1003508B8((uint64_t)_swiftEmptyArrayStorage);
  v13 = *(_QWORD *)(v11 + 16);
  if (!v13)
  {
LABEL_21:
    swift_bridgeObjectRelease(v11);
    return v12;
  }
  v14 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v46 = *(_QWORD *)(v6 + 72);
  v45 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
  v41 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v37 = v11;
  v15 = swift_bridgeObjectRetain(v11);
  v16 = v44;
  v39 = v3;
  v40 = isUniquelyReferenced_nonNull_native;
  v43 = v6;
  v38 = v10;
  while (1)
  {
    v17 = v47(v10, v14, v16, v15);
    REMRemindersListDataView.SectionLite.type.getter(v17);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, isUniquelyReferenced_nonNull_native);
    if (v18 == v45)
      break;
    if (v18 != v41)
      goto LABEL_24;
LABEL_4:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v16);
    v14 += v46;
    if (!--v13)
    {
      v11 = v37;
      swift_bridgeObjectRelease(v37);
      goto LABEL_21;
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v5, isUniquelyReferenced_nonNull_native);
  v19 = *((_QWORD *)v5 + 2);
  v20 = *((_QWORD *)v5 + 3);
  v21 = *((_QWORD *)v5 + 4);

  v22 = swift_bridgeObjectRelease(v19);
  if (!v21)
  {
    v6 = v43;
    v16 = v44;
    goto LABEL_4;
  }
  v47(v42, (uint64_t)v10, v44, v22);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
  v48 = (_QWORD *)v12;
  v24 = sub_100005CF4(v20, v21);
  v25 = *(_QWORD *)(v12 + 16);
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (!__OFADD__(v25, v26))
  {
    v28 = v23;
    if (*(_QWORD *)(v12 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = v48;
        if ((v23 & 1) == 0)
          goto LABEL_17;
      }
      else
      {
        sub_1002AF0DC();
        v31 = v48;
        if ((v28 & 1) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      sub_100458BE8(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_100005CF4(v20, v21);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_25;
      v24 = v29;
      v31 = v48;
      if ((v28 & 1) == 0)
      {
LABEL_17:
        v31[(v24 >> 6) + 8] |= 1 << v24;
        v32 = (uint64_t *)(v31[6] + 16 * v24);
        *v32 = v20;
        v32[1] = v21;
        v16 = v44;
        (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v31[7] + v24 * v46, v42, v44);
        v33 = v31[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_23;
        v31[2] = v35;
        swift_bridgeObjectRetain(v21);
        goto LABEL_19;
      }
    }
    v16 = v44;
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 40))(v31[7] + v24 * v46, v42, v44);
LABEL_19:
    v12 = (unint64_t)v48;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(0x8000000000000000);
    v3 = v39;
    isUniquelyReferenced_nonNull_native = v40;
    v6 = v43;
    v10 = v38;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  _diagnoseUnexpectedEnumCase<A>(type:)(isUniquelyReferenced_nonNull_native, isUniquelyReferenced_nonNull_native);
  __break(1u);
LABEL_25:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_QWORD *sub_1002209D8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  sub_1000381C8((uint64_t)(v0 + 7));
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[14]);
  sub_1000073A0((uint64_t)(v0 + 15), &qword_10064DD08);
  return v0;
}

uint64_t sub_100220A4C()
{
  uint64_t v0;

  sub_1002209D8();
  return swift_deallocClassInstance(v0, 160, 7);
}

uint64_t type metadata accessor for TTRRemindersListViewModelSourceSectionsContext()
{
  return objc_opt_self(_TtC9Reminders46TTRRemindersListViewModelSourceSectionsContext);
}

uint64_t (*TTRListDetailCreationChangeItem.name.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j__swift_endAccess_0;
}

uint64_t type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection(uint64_t a1)
{
  uint64_t result;

  result = qword_10064DD88;
  if (!qword_10064DD88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
  return result;
}

uint64_t sub_100220B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;
  void *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
  {
    v11 = sub_10001F580((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v12 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v11);
    v14 = v12;
    if (v13 - 1 >= 2)
    {
      if (!v13)
      {
        Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
        v10 = Strong;
        if (Strong)
        {
          v17 = *(_QWORD *)(v1 + 64);
          ObjectType = swift_getObjectType(Strong, v16);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
          swift_unknownObjectRelease(v10);
          v10 = TTRSection.init(with:store:)(v14, v19);
        }
        else
        {

        }
        goto LABEL_9;
      }
    }
    else
    {

    }
    v10 = 0;
LABEL_9:
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    return v10;
  }
  return 0;
}

uint64_t sub_100220C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10064DD08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100220CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064DD20;
  if (!qword_10064DD20)
  {
    v1 = sub_10002CA5C(&qword_10064DD18);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10064DD20);
  }
  return result;
}

unint64_t sub_100220D18()
{
  unint64_t result;

  result = qword_10064DD28;
  if (!qword_10064DD28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRSectionID, &type metadata for TTRSectionID);
    atomic_store(result, (unint64_t *)&qword_10064DD28);
  }
  return result;
}

uint64_t sub_100220D5C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRSectionID - 1) + 32))(a2, a1);
  return a2;
}

char *sub_100220D98(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void **v51;
  void **v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  void *v58;
  id v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void **v75;
  void **v76;
  uint64_t v77;
  unsigned int (*v78)(void **, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void **v83;
  void **v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  unsigned int (*v94)(void **, uint64_t, uint64_t);
  id v95;
  uint64_t v96;
  void *v97;
  id v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  id v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  void **v116;
  void **v117;
  uint64_t v118;
  unsigned int (*v119)(void **, uint64_t, uint64_t);
  id v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void **v124;
  void **v125;
  uint64_t v126;
  unsigned int (*v127)(void **, uint64_t, uint64_t);
  id v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  void **v132;
  void **v133;
  uint64_t v134;
  unsigned int (*v135)(void **, uint64_t, uint64_t);
  id v136;
  uint64_t v137;
  void *v138;
  id v139;
  void **v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void **v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  id v166;
  void **v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  void **v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, char *, uint64_t, __n128);
  __n128 v181;
  char *v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  void **v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  id v195;
  void **v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  id v200;
  void **v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(char *, char *, uint64_t, __n128);
  __n128 v210;
  char *v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  void *v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  id v228;
  void *v229;
  id v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned __int8 v241;
  int v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  char v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  id v264;
  void *v265;
  id v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unsigned __int8 v277;
  int v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  char v283;
  void *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  id v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void *v298;
  id v299;
  void *v300;
  id v301;
  uint64_t v302;
  char *v303;
  char *v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unsigned __int8 v312;
  int v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  uint64_t v318;
  char v319;
  void *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  void *v334;
  id v335;
  void *v336;
  id v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  void *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unsigned __int8 v348;
  int v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  char v354;
  void *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  void *v362;
  id v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void *v369;
  id v370;
  void *v371;
  id v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  void *v378;
  id v379;
  void *v380;
  id v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  void *v387;
  id v388;
  void *v389;
  id v390;
  void **v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  void *v399;
  id v400;
  void *v401;
  id v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void *v408;
  id v409;
  void *v410;
  id v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  void *v417;
  id v418;
  void *v419;
  id v420;
  void **v422;
  void **v423;
  void **v424;
  void **v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  int *v443;
  char *v444;
  char *v445;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v13[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v436 = a3;
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 1u:
        v8 = *a2;
        *(_QWORD *)a1 = *a2;
        v9 = v8;
        v10 = a1;
        v11 = v7;
        v12 = 1;
        goto LABEL_13;
      case 2u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        v10 = a1;
        v11 = v7;
        v12 = 2;
        goto LABEL_13;
      case 3u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v10 = a1;
        v11 = v7;
        v12 = 3;
        goto LABEL_13;
      case 4u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v10 = a1;
        v11 = v7;
        v12 = 4;
        goto LABEL_13;
      case 5u:
        v17 = type metadata accessor for Date(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v10 = a1;
        v11 = v7;
        v12 = 5;
        goto LABEL_13;
      case 6u:
        v18 = type metadata accessor for Date(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        v10 = a1;
        v11 = v7;
        v12 = 6;
        goto LABEL_13;
      case 8u:
        v19 = *a2;
        *(_QWORD *)a1 = *a2;
        v20 = v19;
        v10 = a1;
        v11 = v7;
        v12 = 8;
        goto LABEL_13;
      case 9u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = v21;
        v10 = a1;
        v11 = v7;
        v12 = 9;
LABEL_13:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v443 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    v23 = v443[5];
    v24 = &a1[v23];
    v25 = (char *)a2 + v23;
    v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    if (v26)
    {
      v426 = v7;
      v431 = a1;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = (void *)*((_QWORD *)v25 + 2);
      v28 = *((_QWORD *)v25 + 3);
      v29 = *((_QWORD *)v25 + 4);
      v30 = *((_QWORD *)v25 + 5);
      v32 = *((_QWORD *)v25 + 6);
      v31 = *((_QWORD *)v25 + 7);
      v33 = v25[64];
      swift_bridgeObjectRetain(v26);
      sub_10003E1F0(v27, v28, v29, v30, v32, v31, v33);
      *((_QWORD *)v24 + 2) = v27;
      *((_QWORD *)v24 + 3) = v28;
      *((_QWORD *)v24 + 4) = v29;
      *((_QWORD *)v24 + 5) = v30;
      *((_QWORD *)v24 + 6) = v32;
      *((_QWORD *)v24 + 7) = v31;
      v24[64] = v33;
      *(_DWORD *)(v24 + 65) = *(_DWORD *)(v25 + 65);
      v34 = v25[120];
      if (v34 == 255)
      {
        v35 = *(_OWORD *)(v25 + 88);
        *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
        *(_OWORD *)(v24 + 88) = v35;
        *(_OWORD *)(v24 + 104) = *(_OWORD *)(v25 + 104);
        v24[120] = v25[120];
      }
      else
      {
        v39 = v34 & 1;
        v40 = (void *)*((_QWORD *)v25 + 9);
        v41 = *((_QWORD *)v25 + 10);
        v42 = *((_QWORD *)v25 + 11);
        v43 = *((_QWORD *)v25 + 12);
        v44 = *((_QWORD *)v25 + 13);
        v45 = *((_QWORD *)v25 + 14);
        sub_10002B764(v40, v41, v42, v43, v44, v45, v34 & 1);
        *((_QWORD *)v24 + 9) = v40;
        *((_QWORD *)v24 + 10) = v41;
        *((_QWORD *)v24 + 11) = v42;
        *((_QWORD *)v24 + 12) = v43;
        *((_QWORD *)v24 + 13) = v44;
        *((_QWORD *)v24 + 14) = v45;
        v24[120] = v39;
      }
      v24[121] = v25[121];
      v7 = v426;
      a1 = v431;
    }
    else
    {
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
      v38 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v38;
    }
    a1[v443[6]] = *((_BYTE *)a2 + v443[6]);
    a1[v443[7]] = *((_BYTE *)a2 + v443[7]);
    a1[v443[8]] = *((_BYTE *)a2 + v443[8]);
    a1[v443[9]] = *((_BYTE *)a2 + v443[9]);
    a1[v443[10]] = *((_BYTE *)a2 + v443[10]);
    v46 = v443[11];
    v47 = *(char **)((char *)a2 + v46);
    *(_QWORD *)&a1[v46] = v47;
    v48 = *(int *)(v436 + 20);
    v49 = *(int *)(v436 + 24);
    v50 = *(char **)((char *)a2 + v48);
    *(_QWORD *)&a1[v48] = v50;
    v51 = (void **)&a1[v49];
    v52 = (void **)((char *)a2 + v49);
    v53 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
    v54 = v47;
    v55 = v50;
    LODWORD(v47) = swift_getEnumCaseMultiPayload(v52, v53);
    v56 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v52, v56);
    if ((_DWORD)v47 == 1)
    {
      switch(EnumCaseMultiPayload)
      {
        case 0:
          v427 = v56;
          v432 = a1;
          switch(swift_getEnumCaseMultiPayload(v52, v7))
          {
            case 1u:
              v58 = *v52;
              *v51 = *v52;
              v59 = v58;
              v60 = v51;
              v61 = v7;
              v62 = 1;
              goto LABEL_93;
            case 2u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v51, v52, v222);
              v60 = v51;
              v61 = v7;
              v62 = 2;
              goto LABEL_93;
            case 3u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v51, v52, v223);
              v60 = v51;
              v61 = v7;
              v62 = 3;
              goto LABEL_93;
            case 4u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v51, v52, v224);
              v60 = v51;
              v61 = v7;
              v62 = 4;
              goto LABEL_93;
            case 5u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v51, v52, v225);
              v60 = v51;
              v61 = v7;
              v62 = 5;
              goto LABEL_93;
            case 6u:
              v226 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v226 - 8) + 16))(v51, v52, v226);
              v60 = v51;
              v61 = v7;
              v62 = 6;
              goto LABEL_93;
            case 8u:
              v227 = *v52;
              *v51 = *v52;
              v228 = v227;
              v60 = v51;
              v61 = v7;
              v62 = 8;
              goto LABEL_93;
            case 9u:
              v229 = *v52;
              *v51 = *v52;
              v230 = v229;
              v60 = v51;
              v61 = v7;
              v62 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v60, v61, v62);
              break;
            default:
              memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v231 = v443[5];
          v232 = (char *)v51 + v231;
          v233 = (char *)v52 + v231;
          v234 = *(uint64_t *)((char *)v52 + v231 + 8);
          if (v234)
          {
            v441 = v53;
            v422 = v51;
            *(_QWORD *)v232 = *(_QWORD *)v233;
            *((_QWORD *)v232 + 1) = v234;
            v235 = (void *)*((_QWORD *)v233 + 2);
            v236 = *((_QWORD *)v233 + 3);
            v237 = *((_QWORD *)v233 + 4);
            v238 = *((_QWORD *)v233 + 5);
            v239 = *((_QWORD *)v233 + 6);
            v240 = *((_QWORD *)v233 + 7);
            v241 = v233[64];
            swift_bridgeObjectRetain(v234);
            sub_10003E1F0(v235, v236, v237, v238, v239, v240, v241);
            *((_QWORD *)v232 + 2) = v235;
            *((_QWORD *)v232 + 3) = v236;
            *((_QWORD *)v232 + 4) = v237;
            *((_QWORD *)v232 + 5) = v238;
            *((_QWORD *)v232 + 6) = v239;
            *((_QWORD *)v232 + 7) = v240;
            v232[64] = v241;
            *(_DWORD *)(v232 + 65) = *(_DWORD *)(v233 + 65);
            v242 = v233[120];
            if (v242 == 255)
            {
              v243 = *(_OWORD *)(v233 + 88);
              *(_OWORD *)(v232 + 72) = *(_OWORD *)(v233 + 72);
              *(_OWORD *)(v232 + 88) = v243;
              *(_OWORD *)(v232 + 104) = *(_OWORD *)(v233 + 104);
              v232[120] = v233[120];
            }
            else
            {
              v248 = v242 & 1;
              v249 = (void *)*((_QWORD *)v233 + 9);
              v250 = *((_QWORD *)v233 + 10);
              v251 = *((_QWORD *)v233 + 11);
              v252 = *((_QWORD *)v233 + 12);
              v253 = *((_QWORD *)v233 + 13);
              v254 = *((_QWORD *)v233 + 14);
              sub_10002B764(v249, v250, v251, v252, v253, v254, v242 & 1);
              *((_QWORD *)v232 + 9) = v249;
              *((_QWORD *)v232 + 10) = v250;
              *((_QWORD *)v232 + 11) = v251;
              *((_QWORD *)v232 + 12) = v252;
              *((_QWORD *)v232 + 13) = v253;
              *((_QWORD *)v232 + 14) = v254;
              v232[120] = v248;
            }
            a1 = v432;
            v53 = v441;
            v51 = v422;
            v247 = v427;
            v232[121] = v233[121];
          }
          else
          {
            v244 = *((_OWORD *)v233 + 5);
            *((_OWORD *)v232 + 4) = *((_OWORD *)v233 + 4);
            *((_OWORD *)v232 + 5) = v244;
            *((_OWORD *)v232 + 6) = *((_OWORD *)v233 + 6);
            *(_OWORD *)(v232 + 106) = *(_OWORD *)(v233 + 106);
            v245 = *((_OWORD *)v233 + 1);
            *(_OWORD *)v232 = *(_OWORD *)v233;
            *((_OWORD *)v232 + 1) = v245;
            v246 = *((_OWORD *)v233 + 3);
            *((_OWORD *)v232 + 2) = *((_OWORD *)v233 + 2);
            *((_OWORD *)v232 + 3) = v246;
            v247 = v56;
          }
          *((_BYTE *)v51 + v443[6]) = *((_BYTE *)v52 + v443[6]);
          *((_BYTE *)v51 + v443[7]) = *((_BYTE *)v52 + v443[7]);
          *((_BYTE *)v51 + v443[8]) = *((_BYTE *)v52 + v443[8]);
          *((_BYTE *)v51 + v443[9]) = *((_BYTE *)v52 + v443[9]);
          *((_BYTE *)v51 + v443[10]) = *((_BYTE *)v52 + v443[10]);
          v255 = v443[11];
          v256 = *(void **)((char *)v52 + v255);
          *(void **)((char *)v51 + v255) = v256;
          v257 = v256;
          v99 = v51;
          v100 = v247;
          v101 = 0;
          goto LABEL_182;
        case 1:
          v428 = v56;
          v434 = a1;
          switch(swift_getEnumCaseMultiPayload(v52, v7))
          {
            case 1u:
              v68 = *v52;
              *v51 = *v52;
              v69 = v68;
              v70 = v51;
              v71 = v7;
              v72 = 1;
              goto LABEL_125;
            case 2u:
              v293 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(v51, v52, v293);
              v70 = v51;
              v71 = v7;
              v72 = 2;
              goto LABEL_125;
            case 3u:
              v294 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v294 - 8) + 16))(v51, v52, v294);
              v70 = v51;
              v71 = v7;
              v72 = 3;
              goto LABEL_125;
            case 4u:
              v295 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v295 - 8) + 16))(v51, v52, v295);
              v70 = v51;
              v71 = v7;
              v72 = 4;
              goto LABEL_125;
            case 5u:
              v296 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v296 - 8) + 16))(v51, v52, v296);
              v70 = v51;
              v71 = v7;
              v72 = 5;
              goto LABEL_125;
            case 6u:
              v297 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v297 - 8) + 16))(v51, v52, v297);
              v70 = v51;
              v71 = v7;
              v72 = 6;
              goto LABEL_125;
            case 8u:
              v298 = *v52;
              *v51 = *v52;
              v299 = v298;
              v70 = v51;
              v71 = v7;
              v72 = 8;
              goto LABEL_125;
            case 9u:
              v300 = *v52;
              *v51 = *v52;
              v301 = v300;
              v70 = v51;
              v71 = v7;
              v72 = 9;
LABEL_125:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v302 = v443[5];
          v303 = (char *)v51 + v302;
          v304 = (char *)v52 + v302;
          v305 = *(uint64_t *)((char *)v52 + v302 + 8);
          if (v305)
          {
            v442 = v53;
            v424 = v51;
            *(_QWORD *)v303 = *(_QWORD *)v304;
            *((_QWORD *)v303 + 1) = v305;
            v306 = (void *)*((_QWORD *)v304 + 2);
            v307 = *((_QWORD *)v304 + 3);
            v308 = *((_QWORD *)v304 + 4);
            v309 = *((_QWORD *)v304 + 5);
            v310 = *((_QWORD *)v304 + 6);
            v311 = *((_QWORD *)v304 + 7);
            v312 = v304[64];
            swift_bridgeObjectRetain(v305);
            sub_10003E1F0(v306, v307, v308, v309, v310, v311, v312);
            *((_QWORD *)v303 + 2) = v306;
            *((_QWORD *)v303 + 3) = v307;
            *((_QWORD *)v303 + 4) = v308;
            *((_QWORD *)v303 + 5) = v309;
            *((_QWORD *)v303 + 6) = v310;
            *((_QWORD *)v303 + 7) = v311;
            v303[64] = v312;
            *(_DWORD *)(v303 + 65) = *(_DWORD *)(v304 + 65);
            v313 = v304[120];
            if (v313 == 255)
            {
              v314 = *(_OWORD *)(v304 + 88);
              *(_OWORD *)(v303 + 72) = *(_OWORD *)(v304 + 72);
              *(_OWORD *)(v303 + 88) = v314;
              *(_OWORD *)(v303 + 104) = *(_OWORD *)(v304 + 104);
              v303[120] = v304[120];
            }
            else
            {
              v319 = v313 & 1;
              v320 = (void *)*((_QWORD *)v304 + 9);
              v321 = *((_QWORD *)v304 + 10);
              v322 = *((_QWORD *)v304 + 11);
              v323 = *((_QWORD *)v304 + 12);
              v324 = *((_QWORD *)v304 + 13);
              v325 = *((_QWORD *)v304 + 14);
              sub_10002B764(v320, v321, v322, v323, v324, v325, v313 & 1);
              *((_QWORD *)v303 + 9) = v320;
              *((_QWORD *)v303 + 10) = v321;
              *((_QWORD *)v303 + 11) = v322;
              *((_QWORD *)v303 + 12) = v323;
              *((_QWORD *)v303 + 13) = v324;
              *((_QWORD *)v303 + 14) = v325;
              v303[120] = v319;
            }
            a1 = v434;
            v53 = v442;
            v51 = v424;
            v318 = v428;
            v303[121] = v304[121];
          }
          else
          {
            v315 = *((_OWORD *)v304 + 5);
            *((_OWORD *)v303 + 4) = *((_OWORD *)v304 + 4);
            *((_OWORD *)v303 + 5) = v315;
            *((_OWORD *)v303 + 6) = *((_OWORD *)v304 + 6);
            *(_OWORD *)(v303 + 106) = *(_OWORD *)(v304 + 106);
            v316 = *((_OWORD *)v304 + 1);
            *(_OWORD *)v303 = *(_OWORD *)v304;
            *((_OWORD *)v303 + 1) = v316;
            v317 = *((_OWORD *)v304 + 3);
            *((_OWORD *)v303 + 2) = *((_OWORD *)v304 + 2);
            *((_OWORD *)v303 + 3) = v317;
            v318 = v56;
          }
          *((_BYTE *)v51 + v443[6]) = *((_BYTE *)v52 + v443[6]);
          *((_BYTE *)v51 + v443[7]) = *((_BYTE *)v52 + v443[7]);
          *((_BYTE *)v51 + v443[8]) = *((_BYTE *)v52 + v443[8]);
          *((_BYTE *)v51 + v443[9]) = *((_BYTE *)v52 + v443[9]);
          *((_BYTE *)v51 + v443[10]) = *((_BYTE *)v52 + v443[10]);
          v326 = v443[11];
          v327 = *(void **)((char *)v52 + v326);
          *(void **)((char *)v51 + v326) = v327;
          v328 = v327;
          v99 = v51;
          v100 = v318;
          v101 = 1;
          goto LABEL_182;
        case 2:
          v73 = *v52;
          *v51 = *v52;
          v74 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v75 = (void **)((char *)v51 + v74);
          v76 = (void **)((char *)v52 + v74);
          v77 = *(_QWORD *)(v7 - 8);
          v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
          v79 = v73;
          if (v78(v76, 1, v7))
          {
            v80 = sub_10002A750(&qword_100644980);
            memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v76, v7))
            {
              case 1u:
                v160 = *v76;
                *v75 = *v76;
                v161 = v160;
                v162 = v75;
                v163 = v7;
                v164 = 1;
                goto LABEL_157;
              case 2u:
                v364 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v75, v76, v364);
                v162 = v75;
                v163 = v7;
                v164 = 2;
                goto LABEL_157;
              case 3u:
                v365 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v75, v76, v365);
                v162 = v75;
                v163 = v7;
                v164 = 3;
                goto LABEL_157;
              case 4u:
                v366 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v75, v76, v366);
                v162 = v75;
                v163 = v7;
                v164 = 4;
                goto LABEL_157;
              case 5u:
                v367 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v75, v76, v367);
                v162 = v75;
                v163 = v7;
                v164 = 5;
                goto LABEL_157;
              case 6u:
                v368 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v75, v76, v368);
                v162 = v75;
                v163 = v7;
                v164 = 6;
                goto LABEL_157;
              case 8u:
                v369 = *v76;
                *v75 = *v76;
                v370 = v369;
                v162 = v75;
                v163 = v7;
                v164 = 8;
                goto LABEL_157;
              case 9u:
                v371 = *v76;
                *v75 = *v76;
                v372 = v371;
                v162 = v75;
                v163 = v7;
                v164 = 9;
LABEL_157:
                swift_storeEnumTagMultiPayload(v162, v163, v164);
                break;
              default:
                memcpy(v75, v76, *(_QWORD *)(v77 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v77 + 56))(v75, 0, 1, v7);
          }
          v99 = v51;
          v100 = v56;
          v101 = 2;
          goto LABEL_182;
        case 3:
          v81 = *v52;
          *v51 = *v52;
          v82 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v83 = (void **)((char *)v51 + v82);
          v84 = (void **)((char *)v52 + v82);
          v85 = *(_QWORD *)(v7 - 8);
          v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
          v87 = v81;
          if (v86(v84, 1, v7))
          {
            v88 = sub_10002A750(&qword_100644980);
            memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v84, v7))
            {
              case 1u:
                v165 = *v84;
                *v83 = *v84;
                v166 = v165;
                v167 = v83;
                v168 = v7;
                v169 = 1;
                goto LABEL_168;
              case 2u:
                v373 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v83, v84, v373);
                v167 = v83;
                v168 = v7;
                v169 = 2;
                goto LABEL_168;
              case 3u:
                v374 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v83, v84, v374);
                v167 = v83;
                v168 = v7;
                v169 = 3;
                goto LABEL_168;
              case 4u:
                v375 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v83, v84, v375);
                v167 = v83;
                v168 = v7;
                v169 = 4;
                goto LABEL_168;
              case 5u:
                v376 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v83, v84, v376);
                v167 = v83;
                v168 = v7;
                v169 = 5;
                goto LABEL_168;
              case 6u:
                v377 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v377 - 8) + 16))(v83, v84, v377);
                v167 = v83;
                v168 = v7;
                v169 = 6;
                goto LABEL_168;
              case 8u:
                v378 = *v84;
                *v83 = *v84;
                v379 = v378;
                v167 = v83;
                v168 = v7;
                v169 = 8;
                goto LABEL_168;
              case 9u:
                v380 = *v84;
                *v83 = *v84;
                v381 = v380;
                v167 = v83;
                v168 = v7;
                v169 = 9;
LABEL_168:
                swift_storeEnumTagMultiPayload(v167, v168, v169);
                break;
              default:
                memcpy(v83, v84, *(_QWORD *)(v85 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v83, 0, 1, v7);
          }
          v99 = v51;
          v100 = v56;
          v101 = 3;
          goto LABEL_182;
        case 4:
          v89 = *v52;
          *v51 = *v52;
          v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v91 = (void **)((char *)v51 + v90);
          v92 = (void **)((char *)v52 + v90);
          v93 = *(_QWORD *)(v7 - 8);
          v94 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v93 + 48);
          v95 = v89;
          if (v94(v92, 1, v7))
          {
            v96 = sub_10002A750(&qword_100644980);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v92, v7))
            {
              case 1u:
                v170 = *v92;
                *v91 = *v92;
                v171 = v170;
                v172 = v91;
                v173 = v7;
                v174 = 1;
                goto LABEL_179;
              case 2u:
                v382 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v91, v92, v382);
                v172 = v91;
                v173 = v7;
                v174 = 2;
                goto LABEL_179;
              case 3u:
                v383 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v91, v92, v383);
                v172 = v91;
                v173 = v7;
                v174 = 3;
                goto LABEL_179;
              case 4u:
                v384 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v91, v92, v384);
                v172 = v91;
                v173 = v7;
                v174 = 4;
                goto LABEL_179;
              case 5u:
                v385 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v91, v92, v385);
                v172 = v91;
                v173 = v7;
                v174 = 5;
                goto LABEL_179;
              case 6u:
                v386 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v91, v92, v386);
                v172 = v91;
                v173 = v7;
                v174 = 6;
                goto LABEL_179;
              case 8u:
                v387 = *v92;
                *v91 = *v92;
                v388 = v387;
                v172 = v91;
                v173 = v7;
                v174 = 8;
                goto LABEL_179;
              case 9u:
                v389 = *v92;
                *v91 = *v92;
                v390 = v389;
                v172 = v91;
                v173 = v7;
                v174 = 9;
LABEL_179:
                swift_storeEnumTagMultiPayload(v172, v173, v174);
                break;
              default:
                memcpy(v91, v92, *(_QWORD *)(v93 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v93 + 56))(v91, 0, 1, v7);
          }
          v99 = v51;
          v100 = v56;
          v101 = 4;
          goto LABEL_182;
        case 5:
          *v51 = *v52;
          *((_BYTE *)v51 + 8) = *((_BYTE *)v52 + 8);
          *(_WORD *)((char *)v51 + 9) = *(_WORD *)((char *)v52 + 9);
          v97 = v52[2];
          v51[2] = v97;
          v98 = v97;
          v99 = v51;
          v100 = v56;
          v101 = 5;
          goto LABEL_182;
        case 6:
          v150 = *v52;
          *v51 = *v52;
          v151 = v150;
          v99 = v51;
          v100 = v56;
          v101 = 6;
          goto LABEL_182;
        case 7:
          v102 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v103 = *(_QWORD *)(v102 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48))(v52, 1, v102))
          {
            v104 = sub_10002A750(&qword_100644600);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          }
          else
          {
            v175 = *v52;
            *v51 = *v52;
            v176 = *(int *)(v102 + 20);
            v439 = v53;
            v444 = (char *)v51 + v176;
            v177 = (char *)v52 + v176;
            v178 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v179 = v56;
            v180 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v178 - 8) + 16);
            v181 = swift_bridgeObjectRetain(v175);
            v182 = v177;
            v53 = v439;
            v180(v444, v182, v178, v181);
            v56 = v179;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v51, 0, 1, v102);
          }
          v183 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v184 = (void **)((char *)v51 + v183);
          v185 = (void **)((char *)v52 + v183);
          v186 = v185[1];
          if (v186)
          {
            *v184 = *v185;
            v184[1] = v186;
            v187 = (void *)v185[2];
            v184[2] = v187;
            swift_bridgeObjectRetain(v186);
            v188 = v187;
          }
          else
          {
            *(_OWORD *)v184 = *(_OWORD *)v185;
            v184[2] = v185[2];
          }
          v99 = v51;
          v100 = v56;
          v101 = 7;
          goto LABEL_182;
        case 8:
          v152 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v153 = *(_QWORD *)(v152 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v153 + 48))(v52, 1, v152))
          {
            v154 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
          }
          else
          {
            v218 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v51, v52, v218);
            *((_BYTE *)v51 + *(int *)(v152 + 20)) = *((_BYTE *)v52 + *(int *)(v152 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v153 + 56))(v51, 0, 1, v152);
          }
          v219 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v51 + *(int *)(v219 + 20)) = *(void **)((char *)v52 + *(int *)(v219 + 20));
          v99 = v51;
          v100 = v56;
          v101 = 8;
          goto LABEL_182;
        case 9:
          *(_BYTE *)v51 = *(_BYTE *)v52;
          v105 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v106 = (char *)v51 + v105;
          v107 = (char *)v52 + v105;
          v108 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
          v99 = v51;
          v100 = v56;
          v101 = 9;
LABEL_182:
          swift_storeEnumTagMultiPayload(v99, v100, v101);
          break;
        default:
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          break;
      }
      v391 = v51;
      v392 = v53;
      v393 = 1;
    }
    else
    {
      switch(EnumCaseMultiPayload)
      {
        case 0:
          v433 = a1;
          v437 = v53;
          switch(swift_getEnumCaseMultiPayload(v52, v7))
          {
            case 1u:
              v63 = *v52;
              *v51 = *v52;
              v64 = v63;
              v65 = v51;
              v66 = v7;
              v67 = 1;
              goto LABEL_109;
            case 2u:
              v258 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v51, v52, v258);
              v65 = v51;
              v66 = v7;
              v67 = 2;
              goto LABEL_109;
            case 3u:
              v259 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(v51, v52, v259);
              v65 = v51;
              v66 = v7;
              v67 = 3;
              goto LABEL_109;
            case 4u:
              v260 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(v51, v52, v260);
              v65 = v51;
              v66 = v7;
              v67 = 4;
              goto LABEL_109;
            case 5u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(v51, v52, v261);
              v65 = v51;
              v66 = v7;
              v67 = 5;
              goto LABEL_109;
            case 6u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(v51, v52, v262);
              v65 = v51;
              v66 = v7;
              v67 = 6;
              goto LABEL_109;
            case 8u:
              v263 = *v52;
              *v51 = *v52;
              v264 = v263;
              v65 = v51;
              v66 = v7;
              v67 = 8;
              goto LABEL_109;
            case 9u:
              v265 = *v52;
              *v51 = *v52;
              v266 = v265;
              v65 = v51;
              v66 = v7;
              v67 = 9;
LABEL_109:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v267 = v443[5];
          v268 = (char *)v51 + v267;
          v269 = (char *)v52 + v267;
          v270 = *(uint64_t *)((char *)v52 + v267 + 8);
          if (v270)
          {
            v423 = v51;
            v429 = v56;
            *(_QWORD *)v268 = *(_QWORD *)v269;
            *((_QWORD *)v268 + 1) = v270;
            v271 = (void *)*((_QWORD *)v269 + 2);
            v272 = *((_QWORD *)v269 + 3);
            v273 = *((_QWORD *)v269 + 4);
            v274 = *((_QWORD *)v269 + 5);
            v276 = *((_QWORD *)v269 + 6);
            v275 = *((_QWORD *)v269 + 7);
            v277 = v269[64];
            swift_bridgeObjectRetain(v270);
            sub_10003E1F0(v271, v272, v273, v274, v276, v275, v277);
            *((_QWORD *)v268 + 2) = v271;
            *((_QWORD *)v268 + 3) = v272;
            *((_QWORD *)v268 + 4) = v273;
            *((_QWORD *)v268 + 5) = v274;
            *((_QWORD *)v268 + 6) = v276;
            *((_QWORD *)v268 + 7) = v275;
            v268[64] = v277;
            *(_DWORD *)(v268 + 65) = *(_DWORD *)(v269 + 65);
            v278 = v269[120];
            if (v278 == 255)
            {
              v279 = *(_OWORD *)(v269 + 88);
              *(_OWORD *)(v268 + 72) = *(_OWORD *)(v269 + 72);
              *(_OWORD *)(v268 + 88) = v279;
              *(_OWORD *)(v268 + 104) = *(_OWORD *)(v269 + 104);
              v268[120] = v269[120];
            }
            else
            {
              v283 = v278 & 1;
              v284 = (void *)*((_QWORD *)v269 + 9);
              v285 = *((_QWORD *)v269 + 10);
              v286 = *((_QWORD *)v269 + 11);
              v287 = *((_QWORD *)v269 + 12);
              v288 = *((_QWORD *)v269 + 13);
              v289 = *((_QWORD *)v269 + 14);
              sub_10002B764(v284, v285, v286, v287, v288, v289, v278 & 1);
              *((_QWORD *)v268 + 9) = v284;
              *((_QWORD *)v268 + 10) = v285;
              *((_QWORD *)v268 + 11) = v286;
              *((_QWORD *)v268 + 12) = v287;
              *((_QWORD *)v268 + 13) = v288;
              *((_QWORD *)v268 + 14) = v289;
              v268[120] = v283;
            }
            a1 = v433;
            v53 = v437;
            v51 = v423;
            v56 = v429;
            v268[121] = v269[121];
          }
          else
          {
            v280 = *((_OWORD *)v269 + 5);
            *((_OWORD *)v268 + 4) = *((_OWORD *)v269 + 4);
            *((_OWORD *)v268 + 5) = v280;
            *((_OWORD *)v268 + 6) = *((_OWORD *)v269 + 6);
            *(_OWORD *)(v268 + 106) = *(_OWORD *)(v269 + 106);
            v281 = *((_OWORD *)v269 + 1);
            *(_OWORD *)v268 = *(_OWORD *)v269;
            *((_OWORD *)v268 + 1) = v281;
            v282 = *((_OWORD *)v269 + 3);
            *((_OWORD *)v268 + 2) = *((_OWORD *)v269 + 2);
            *((_OWORD *)v268 + 3) = v282;
          }
          *((_BYTE *)v51 + v443[6]) = *((_BYTE *)v52 + v443[6]);
          *((_BYTE *)v51 + v443[7]) = *((_BYTE *)v52 + v443[7]);
          *((_BYTE *)v51 + v443[8]) = *((_BYTE *)v52 + v443[8]);
          *((_BYTE *)v51 + v443[9]) = *((_BYTE *)v52 + v443[9]);
          *((_BYTE *)v51 + v443[10]) = *((_BYTE *)v52 + v443[10]);
          v290 = v443[11];
          v291 = *(void **)((char *)v52 + v290);
          *(void **)((char *)v51 + v290) = v291;
          v292 = v291;
          v140 = v51;
          v141 = v56;
          v142 = 0;
          goto LABEL_217;
        case 1:
          v435 = a1;
          v438 = v53;
          switch(swift_getEnumCaseMultiPayload(v52, v7))
          {
            case 1u:
              v109 = *v52;
              *v51 = *v52;
              v110 = v109;
              v111 = v51;
              v112 = v7;
              v113 = 1;
              goto LABEL_141;
            case 2u:
              v329 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v51, v52, v329);
              v111 = v51;
              v112 = v7;
              v113 = 2;
              goto LABEL_141;
            case 3u:
              v330 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v51, v52, v330);
              v111 = v51;
              v112 = v7;
              v113 = 3;
              goto LABEL_141;
            case 4u:
              v331 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v51, v52, v331);
              v111 = v51;
              v112 = v7;
              v113 = 4;
              goto LABEL_141;
            case 5u:
              v332 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v51, v52, v332);
              v111 = v51;
              v112 = v7;
              v113 = 5;
              goto LABEL_141;
            case 6u:
              v333 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v51, v52, v333);
              v111 = v51;
              v112 = v7;
              v113 = 6;
              goto LABEL_141;
            case 8u:
              v334 = *v52;
              *v51 = *v52;
              v335 = v334;
              v111 = v51;
              v112 = v7;
              v113 = 8;
              goto LABEL_141;
            case 9u:
              v336 = *v52;
              *v51 = *v52;
              v337 = v336;
              v111 = v51;
              v112 = v7;
              v113 = 9;
LABEL_141:
              swift_storeEnumTagMultiPayload(v111, v112, v113);
              break;
            default:
              memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v338 = v443[5];
          v339 = (char *)v51 + v338;
          v340 = (char *)v52 + v338;
          v341 = *(uint64_t *)((char *)v52 + v338 + 8);
          if (v341)
          {
            v425 = v51;
            v430 = v56;
            *(_QWORD *)v339 = *(_QWORD *)v340;
            *((_QWORD *)v339 + 1) = v341;
            v342 = (void *)*((_QWORD *)v340 + 2);
            v343 = *((_QWORD *)v340 + 3);
            v344 = *((_QWORD *)v340 + 4);
            v345 = *((_QWORD *)v340 + 5);
            v346 = *((_QWORD *)v340 + 6);
            v347 = *((_QWORD *)v340 + 7);
            v348 = v340[64];
            swift_bridgeObjectRetain(v341);
            sub_10003E1F0(v342, v343, v344, v345, v346, v347, v348);
            *((_QWORD *)v339 + 2) = v342;
            *((_QWORD *)v339 + 3) = v343;
            *((_QWORD *)v339 + 4) = v344;
            *((_QWORD *)v339 + 5) = v345;
            *((_QWORD *)v339 + 6) = v346;
            *((_QWORD *)v339 + 7) = v347;
            v339[64] = v348;
            *(_DWORD *)(v339 + 65) = *(_DWORD *)(v340 + 65);
            v349 = v340[120];
            if (v349 == 255)
            {
              v350 = *(_OWORD *)(v340 + 88);
              *(_OWORD *)(v339 + 72) = *(_OWORD *)(v340 + 72);
              *(_OWORD *)(v339 + 88) = v350;
              *(_OWORD *)(v339 + 104) = *(_OWORD *)(v340 + 104);
              v339[120] = v340[120];
            }
            else
            {
              v354 = v349 & 1;
              v355 = (void *)*((_QWORD *)v340 + 9);
              v356 = *((_QWORD *)v340 + 10);
              v357 = *((_QWORD *)v340 + 11);
              v358 = *((_QWORD *)v340 + 12);
              v359 = *((_QWORD *)v340 + 13);
              v360 = *((_QWORD *)v340 + 14);
              sub_10002B764(v355, v356, v357, v358, v359, v360, v349 & 1);
              *((_QWORD *)v339 + 9) = v355;
              *((_QWORD *)v339 + 10) = v356;
              *((_QWORD *)v339 + 11) = v357;
              *((_QWORD *)v339 + 12) = v358;
              *((_QWORD *)v339 + 13) = v359;
              *((_QWORD *)v339 + 14) = v360;
              v339[120] = v354;
            }
            a1 = v435;
            v53 = v438;
            v51 = v425;
            v56 = v430;
            v339[121] = v340[121];
          }
          else
          {
            v351 = *((_OWORD *)v340 + 5);
            *((_OWORD *)v339 + 4) = *((_OWORD *)v340 + 4);
            *((_OWORD *)v339 + 5) = v351;
            *((_OWORD *)v339 + 6) = *((_OWORD *)v340 + 6);
            *(_OWORD *)(v339 + 106) = *(_OWORD *)(v340 + 106);
            v352 = *((_OWORD *)v340 + 1);
            *(_OWORD *)v339 = *(_OWORD *)v340;
            *((_OWORD *)v339 + 1) = v352;
            v353 = *((_OWORD *)v340 + 3);
            *((_OWORD *)v339 + 2) = *((_OWORD *)v340 + 2);
            *((_OWORD *)v339 + 3) = v353;
          }
          *((_BYTE *)v51 + v443[6]) = *((_BYTE *)v52 + v443[6]);
          *((_BYTE *)v51 + v443[7]) = *((_BYTE *)v52 + v443[7]);
          *((_BYTE *)v51 + v443[8]) = *((_BYTE *)v52 + v443[8]);
          *((_BYTE *)v51 + v443[9]) = *((_BYTE *)v52 + v443[9]);
          *((_BYTE *)v51 + v443[10]) = *((_BYTE *)v52 + v443[10]);
          v361 = v443[11];
          v362 = *(void **)((char *)v52 + v361);
          *(void **)((char *)v51 + v361) = v362;
          v363 = v362;
          v140 = v51;
          v141 = v56;
          v142 = 1;
          goto LABEL_217;
        case 2:
          v114 = *v52;
          *v51 = *v52;
          v115 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v116 = (void **)((char *)v51 + v115);
          v117 = (void **)((char *)v52 + v115);
          v118 = *(_QWORD *)(v7 - 8);
          v119 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v118 + 48);
          v120 = v114;
          if (v119(v117, 1, v7))
          {
            v121 = sub_10002A750(&qword_100644980);
            memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v117, v7))
            {
              case 1u:
                v189 = *v117;
                *v116 = *v117;
                v190 = v189;
                v191 = v116;
                v192 = v7;
                v193 = 1;
                goto LABEL_192;
              case 2u:
                v394 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v394 - 8) + 16))(v116, v117, v394);
                v191 = v116;
                v192 = v7;
                v193 = 2;
                goto LABEL_192;
              case 3u:
                v395 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v395 - 8) + 16))(v116, v117, v395);
                v191 = v116;
                v192 = v7;
                v193 = 3;
                goto LABEL_192;
              case 4u:
                v396 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v396 - 8) + 16))(v116, v117, v396);
                v191 = v116;
                v192 = v7;
                v193 = 4;
                goto LABEL_192;
              case 5u:
                v397 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v397 - 8) + 16))(v116, v117, v397);
                v191 = v116;
                v192 = v7;
                v193 = 5;
                goto LABEL_192;
              case 6u:
                v398 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v398 - 8) + 16))(v116, v117, v398);
                v191 = v116;
                v192 = v7;
                v193 = 6;
                goto LABEL_192;
              case 8u:
                v399 = *v117;
                *v116 = *v117;
                v400 = v399;
                v191 = v116;
                v192 = v7;
                v193 = 8;
                goto LABEL_192;
              case 9u:
                v401 = *v117;
                *v116 = *v117;
                v402 = v401;
                v191 = v116;
                v192 = v7;
                v193 = 9;
LABEL_192:
                swift_storeEnumTagMultiPayload(v191, v192, v193);
                break;
              default:
                memcpy(v116, v117, *(_QWORD *)(v118 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v118 + 56))(v116, 0, 1, v7);
          }
          v140 = v51;
          v141 = v56;
          v142 = 2;
          goto LABEL_217;
        case 3:
          v122 = *v52;
          *v51 = *v52;
          v123 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v124 = (void **)((char *)v51 + v123);
          v125 = (void **)((char *)v52 + v123);
          v126 = *(_QWORD *)(v7 - 8);
          v127 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v126 + 48);
          v128 = v122;
          if (v127(v125, 1, v7))
          {
            v129 = sub_10002A750(&qword_100644980);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v125, v7))
            {
              case 1u:
                v194 = *v125;
                *v124 = *v125;
                v195 = v194;
                v196 = v124;
                v197 = v7;
                v198 = 1;
                goto LABEL_203;
              case 2u:
                v403 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v403 - 8) + 16))(v124, v125, v403);
                v196 = v124;
                v197 = v7;
                v198 = 2;
                goto LABEL_203;
              case 3u:
                v404 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v404 - 8) + 16))(v124, v125, v404);
                v196 = v124;
                v197 = v7;
                v198 = 3;
                goto LABEL_203;
              case 4u:
                v405 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v405 - 8) + 16))(v124, v125, v405);
                v196 = v124;
                v197 = v7;
                v198 = 4;
                goto LABEL_203;
              case 5u:
                v406 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v406 - 8) + 16))(v124, v125, v406);
                v196 = v124;
                v197 = v7;
                v198 = 5;
                goto LABEL_203;
              case 6u:
                v407 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v407 - 8) + 16))(v124, v125, v407);
                v196 = v124;
                v197 = v7;
                v198 = 6;
                goto LABEL_203;
              case 8u:
                v408 = *v125;
                *v124 = *v125;
                v409 = v408;
                v196 = v124;
                v197 = v7;
                v198 = 8;
                goto LABEL_203;
              case 9u:
                v410 = *v125;
                *v124 = *v125;
                v411 = v410;
                v196 = v124;
                v197 = v7;
                v198 = 9;
LABEL_203:
                swift_storeEnumTagMultiPayload(v196, v197, v198);
                break;
              default:
                memcpy(v124, v125, *(_QWORD *)(v126 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v126 + 56))(v124, 0, 1, v7);
          }
          v140 = v51;
          v141 = v56;
          v142 = 3;
          goto LABEL_217;
        case 4:
          v130 = *v52;
          *v51 = *v52;
          v131 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v132 = (void **)((char *)v51 + v131);
          v133 = (void **)((char *)v52 + v131);
          v134 = *(_QWORD *)(v7 - 8);
          v135 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v134 + 48);
          v136 = v130;
          if (v135(v133, 1, v7))
          {
            v137 = sub_10002A750(&qword_100644980);
            memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v133, v7))
            {
              case 1u:
                v199 = *v133;
                *v132 = *v133;
                v200 = v199;
                v201 = v132;
                v202 = v7;
                v203 = 1;
                goto LABEL_214;
              case 2u:
                v412 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v132, v133, v412);
                v201 = v132;
                v202 = v7;
                v203 = 2;
                goto LABEL_214;
              case 3u:
                v413 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v413 - 8) + 16))(v132, v133, v413);
                v201 = v132;
                v202 = v7;
                v203 = 3;
                goto LABEL_214;
              case 4u:
                v414 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v414 - 8) + 16))(v132, v133, v414);
                v201 = v132;
                v202 = v7;
                v203 = 4;
                goto LABEL_214;
              case 5u:
                v415 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v415 - 8) + 16))(v132, v133, v415);
                v201 = v132;
                v202 = v7;
                v203 = 5;
                goto LABEL_214;
              case 6u:
                v416 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v416 - 8) + 16))(v132, v133, v416);
                v201 = v132;
                v202 = v7;
                v203 = 6;
                goto LABEL_214;
              case 8u:
                v417 = *v133;
                *v132 = *v133;
                v418 = v417;
                v201 = v132;
                v202 = v7;
                v203 = 8;
                goto LABEL_214;
              case 9u:
                v419 = *v133;
                *v132 = *v133;
                v420 = v419;
                v201 = v132;
                v202 = v7;
                v203 = 9;
LABEL_214:
                swift_storeEnumTagMultiPayload(v201, v202, v203);
                break;
              default:
                memcpy(v132, v133, *(_QWORD *)(v134 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v134 + 56))(v132, 0, 1, v7);
          }
          v140 = v51;
          v141 = v56;
          v142 = 4;
          goto LABEL_217;
        case 5:
          *v51 = *v52;
          *((_BYTE *)v51 + 8) = *((_BYTE *)v52 + 8);
          *(_WORD *)((char *)v51 + 9) = *(_WORD *)((char *)v52 + 9);
          v138 = v52[2];
          v51[2] = v138;
          v139 = v138;
          v140 = v51;
          v141 = v56;
          v142 = 5;
          goto LABEL_217;
        case 6:
          v155 = *v52;
          *v51 = *v52;
          v156 = v155;
          v140 = v51;
          v141 = v56;
          v142 = 6;
          goto LABEL_217;
        case 7:
          v143 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v144 = *(_QWORD *)(v143 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v144 + 48))(v52, 1, v143))
          {
            v145 = sub_10002A750(&qword_100644600);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
          }
          else
          {
            v204 = *v52;
            *v51 = *v52;
            v205 = *(int *)(v143 + 20);
            v440 = v53;
            v445 = (char *)v51 + v205;
            v206 = (char *)v52 + v205;
            v207 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v208 = v56;
            v209 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v207 - 8) + 16);
            v210 = swift_bridgeObjectRetain(v204);
            v211 = v206;
            v53 = v440;
            v209(v445, v211, v207, v210);
            v56 = v208;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v144 + 56))(v51, 0, 1, v143);
          }
          v212 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v213 = (void **)((char *)v51 + v212);
          v214 = (void **)((char *)v52 + v212);
          v215 = v214[1];
          if (v215)
          {
            *v213 = *v214;
            v213[1] = v215;
            v216 = (void *)v214[2];
            v213[2] = v216;
            swift_bridgeObjectRetain(v215);
            v217 = v216;
          }
          else
          {
            *(_OWORD *)v213 = *(_OWORD *)v214;
            v213[2] = v214[2];
          }
          v140 = v51;
          v141 = v56;
          v142 = 7;
          goto LABEL_217;
        case 8:
          v157 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v158 + 48))(v52, 1, v157))
          {
            v159 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          }
          else
          {
            v220 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v51, v52, v220);
            *((_BYTE *)v51 + *(int *)(v157 + 20)) = *((_BYTE *)v52 + *(int *)(v157 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v158 + 56))(v51, 0, 1, v157);
          }
          v221 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v51 + *(int *)(v221 + 20)) = *(void **)((char *)v52 + *(int *)(v221 + 20));
          v140 = v51;
          v141 = v56;
          v142 = 8;
          goto LABEL_217;
        case 9:
          *(_BYTE *)v51 = *(_BYTE *)v52;
          v146 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v147 = (char *)v51 + v146;
          v148 = (char *)v52 + v146;
          v149 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
          v140 = v51;
          v141 = v56;
          v142 = 9;
LABEL_217:
          swift_storeEnumTagMultiPayload(v140, v141, v142);
          break;
        default:
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          break;
      }
      v391 = v51;
      v392 = v53;
      v393 = 0;
    }
    swift_storeEnumTagMultiPayload(v391, v392, v393);
  }
  return a1;
}

void sub_100222F5C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 1u:
    case 8u:
    case 9u:

      break;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      v5 = type metadata accessor for Date(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    default:
      break;
  }
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v7 = (char *)a1 + *(int *)(v6 + 20);
  v8 = *((_QWORD *)v7 + 1);
  if (v8)
  {
    swift_bridgeObjectRelease(v8);
    sub_10003E2EC(*((void **)v7 + 2), *((_QWORD *)v7 + 3), *((_QWORD *)v7 + 4), *((_QWORD *)v7 + 5), *((_QWORD *)v7 + 6), *((_QWORD *)v7 + 7), v7[64]);
    v9 = v7[120];
    if (v9 != 255)
      sub_10002B328(*((void **)v7 + 9), *((_QWORD *)v7 + 10), *((_QWORD *)v7 + 11), *((_QWORD *)v7 + 12), *((_QWORD *)v7 + 13), *((_QWORD *)v7 + 14), v9 & 1);
  }

  v10 = (id *)((char *)a1 + *(int *)(a2 + 24));
  v11 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = swift_getEnumCaseMultiPayload(v10, v13);
  if (EnumCaseMultiPayload == 1)
  {
    switch(v14)
    {
      case 0:
        switch(swift_getEnumCaseMultiPayload(v10, v4))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_29;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_28;
          default:
            goto LABEL_30;
        }
        goto LABEL_30;
      case 1:
        switch(swift_getEnumCaseMultiPayload(v10, v4))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_29;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_28;
          default:
            goto LABEL_30;
        }
        goto LABEL_30;
      case 2:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        break;
      case 3:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        break;
      case 4:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        break;
      case 5:
        goto LABEL_16;
      case 6:
        goto LABEL_43;
      case 7:
        goto LABEL_12;
      case 8:
        goto LABEL_17;
      case 9:
        goto LABEL_19;
      default:
        return;
    }
  }
  else
  {
    switch(v14)
    {
      case 0:
        switch(swift_getEnumCaseMultiPayload(v10, v4))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_29;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_28;
          default:
            goto LABEL_30;
        }
        goto LABEL_30;
      case 1:
        switch(swift_getEnumCaseMultiPayload(v10, v4))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_29:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_28:
            v22 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v10, v22);
            break;
          default:
            break;
        }
LABEL_30:
        v23 = (char *)v10 + *(int *)(v6 + 20);
        v24 = *((_QWORD *)v23 + 1);
        if (v24)
        {
          swift_bridgeObjectRelease(v24);
          sub_10003E2EC(*((void **)v23 + 2), *((_QWORD *)v23 + 3), *((_QWORD *)v23 + 4), *((_QWORD *)v23 + 5), *((_QWORD *)v23 + 6), *((_QWORD *)v23 + 7), v23[64]);
          v25 = v23[120];
          if (v25 != 255)
            sub_10002B328(*((void **)v23 + 9), *((_QWORD *)v23 + 10), *((_QWORD *)v23 + 11), *((_QWORD *)v23 + 12), *((_QWORD *)v23 + 13), *((_QWORD *)v23 + 14), v25 & 1);
        }
        v19 = *(id *)((char *)v10 + *(int *)(v6 + 44));
        goto LABEL_44;
      case 2:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        return;
      case 3:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        return;
      case 4:

        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v10, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload(v10, v4))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_41;
            default:
              return;
          }
        }
        return;
      case 5:
        goto LABEL_16;
      case 6:
LABEL_43:
        v19 = (id)*v10;
        goto LABEL_44;
      case 7:
LABEL_12:
        v15 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15))
        {
          swift_bridgeObjectRelease(*v10);
          v16 = (char *)v10 + *(int *)(v15 + 20);
          v17 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        }
        v10 = (_QWORD *)((char *)v10
                       + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v18 = v10[1];
        if (!v18)
          return;
        swift_bridgeObjectRelease(v18);
LABEL_16:
        v19 = (id)v10[2];
LABEL_44:

        break;
      case 8:
LABEL_17:
        v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v10, 1, v20))
          return;
LABEL_41:
        v21 = type metadata accessor for Date(0);
LABEL_42:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v10, v21);
        break;
      case 9:
LABEL_19:
        v10 = (_QWORD *)((char *)v10 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v21 = type metadata accessor for AnyTip(0);
        goto LABEL_42;
      default:
        return;
    }
  }
}

void **sub_100223570(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void **v49;
  void **v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  void *v56;
  id v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  void **v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void **v73;
  void **v74;
  uint64_t v75;
  unsigned int (*v76)(void **, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void **v81;
  void **v82;
  uint64_t v83;
  unsigned int (*v84)(void **, uint64_t, uint64_t);
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void **v89;
  void **v90;
  uint64_t v91;
  unsigned int (*v92)(void **, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  void *v95;
  id v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  id v108;
  void **v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  void **v114;
  void **v115;
  uint64_t v116;
  unsigned int (*v117)(void **, uint64_t, uint64_t);
  id v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void **v122;
  void **v123;
  uint64_t v124;
  unsigned int (*v125)(void **, uint64_t, uint64_t);
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void **v130;
  void **v131;
  uint64_t v132;
  unsigned int (*v133)(void **, uint64_t, uint64_t);
  id v134;
  uint64_t v135;
  void *v136;
  id v137;
  void **v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  void *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  id v159;
  void **v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  id v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169;
  void **v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t, __n128);
  __n128 v179;
  char *v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  void **v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  id v193;
  void **v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  id v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  void (*v207)(char *, char *, uint64_t, __n128);
  __n128 v208;
  char *v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  void *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  id v226;
  void *v227;
  id v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unsigned __int8 v239;
  int v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  char v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  id v262;
  void *v263;
  id v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned __int8 v275;
  int v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  char v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  id v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void *v296;
  id v297;
  void *v298;
  id v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unsigned __int8 v310;
  int v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  char v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void *v325;
  id v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void *v335;
  id v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  void *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unsigned __int8 v347;
  int v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  char v353;
  void *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  id v377;
  void *v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  id v386;
  void *v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  void *v394;
  id v395;
  void *v396;
  id v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  void *v402;
  id v403;
  void *v404;
  id v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  void *v411;
  id v412;
  void *v413;
  id v414;
  uint64_t v415;
  uint64_t v416;
  void **v418;
  void **v419;
  void **v420;
  void **v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  void **v434;
  void **v435;
  void **v436;
  void **v437;
  void **v438;
  int *v439;
  char *v440;
  char *v441;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 1u:
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = v6;
      v11 = 1;
      goto LABEL_11;
    case 2u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = v6;
      v11 = 2;
      goto LABEL_11;
    case 3u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = v6;
      v11 = 3;
      goto LABEL_11;
    case 4u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = v6;
      v11 = 4;
      goto LABEL_11;
    case 5u:
      v15 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v9 = a1;
      v10 = v6;
      v11 = 5;
      goto LABEL_11;
    case 6u:
      v16 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v9 = a1;
      v10 = v6;
      v11 = 6;
      goto LABEL_11;
    case 8u:
      v17 = *a2;
      *a1 = *a2;
      v18 = v17;
      v9 = a1;
      v10 = v6;
      v11 = 8;
      goto LABEL_11;
    case 9u:
      v19 = *a2;
      *a1 = *a2;
      v20 = v19;
      v9 = a1;
      v10 = v6;
      v11 = 9;
LABEL_11:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v439 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v21 = v439[5];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(uint64_t *)((char *)a2 + v21 + 8);
  if (v24)
  {
    v422 = a3;
    v427 = v6;
    v434 = a1;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = (void *)*((_QWORD *)v23 + 2);
    v26 = *((_QWORD *)v23 + 3);
    v27 = *((_QWORD *)v23 + 4);
    v28 = *((_QWORD *)v23 + 5);
    v30 = *((_QWORD *)v23 + 6);
    v29 = *((_QWORD *)v23 + 7);
    v31 = v23[64];
    swift_bridgeObjectRetain(v24);
    sub_10003E1F0(v25, v26, v27, v28, v30, v29, v31);
    *((_QWORD *)v22 + 2) = v25;
    *((_QWORD *)v22 + 3) = v26;
    *((_QWORD *)v22 + 4) = v27;
    *((_QWORD *)v22 + 5) = v28;
    *((_QWORD *)v22 + 6) = v30;
    *((_QWORD *)v22 + 7) = v29;
    v22[64] = v31;
    *(_DWORD *)(v22 + 65) = *(_DWORD *)(v23 + 65);
    v32 = v23[120];
    if (v32 == 255)
    {
      v33 = *(_OWORD *)(v23 + 88);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      *(_OWORD *)(v22 + 88) = v33;
      *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
      v22[120] = v23[120];
    }
    else
    {
      v37 = v32 & 1;
      v38 = (void *)*((_QWORD *)v23 + 9);
      v39 = *((_QWORD *)v23 + 10);
      v40 = *((_QWORD *)v23 + 11);
      v41 = *((_QWORD *)v23 + 12);
      v42 = *((_QWORD *)v23 + 13);
      v43 = *((_QWORD *)v23 + 14);
      sub_10002B764(v38, v39, v40, v41, v42, v43, v32 & 1);
      *((_QWORD *)v22 + 9) = v38;
      *((_QWORD *)v22 + 10) = v39;
      *((_QWORD *)v22 + 11) = v40;
      *((_QWORD *)v22 + 12) = v41;
      *((_QWORD *)v22 + 13) = v42;
      *((_QWORD *)v22 + 14) = v43;
      v22[120] = v37;
    }
    a3 = v422;
    v6 = v427;
    v22[121] = v23[121];
    a1 = v434;
  }
  else
  {
    v34 = *((_OWORD *)v23 + 5);
    *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
    *((_OWORD *)v22 + 5) = v34;
    *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
    *(_OWORD *)(v22 + 106) = *(_OWORD *)(v23 + 106);
    v35 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v35;
    v36 = *((_OWORD *)v23 + 3);
    *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    *((_OWORD *)v22 + 3) = v36;
  }
  *((_BYTE *)a1 + v439[6]) = *((_BYTE *)a2 + v439[6]);
  *((_BYTE *)a1 + v439[7]) = *((_BYTE *)a2 + v439[7]);
  *((_BYTE *)a1 + v439[8]) = *((_BYTE *)a2 + v439[8]);
  *((_BYTE *)a1 + v439[9]) = *((_BYTE *)a2 + v439[9]);
  *((_BYTE *)a1 + v439[10]) = *((_BYTE *)a2 + v439[10]);
  v44 = v439[11];
  v45 = *(void **)((char *)a2 + v44);
  *(void **)((char *)a1 + v44) = v45;
  v46 = *(int *)(a3 + 20);
  v47 = *(int *)(a3 + 24);
  v48 = *(void **)((char *)a2 + v46);
  *(void **)((char *)a1 + v46) = v48;
  v49 = (void **)((char *)a1 + v47);
  v50 = (void **)((char *)a2 + v47);
  v51 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  v52 = v45;
  v53 = v48;
  LODWORD(v45) = swift_getEnumCaseMultiPayload(v50, v51);
  v54 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v50, v54);
  if ((_DWORD)v45 == 1)
  {
    switch(EnumCaseMultiPayload)
    {
      case 0:
        v423 = v54;
        switch(swift_getEnumCaseMultiPayload(v50, v6))
        {
          case 1u:
            v56 = *v50;
            *v49 = *v50;
            v57 = v56;
            v58 = v49;
            v59 = v6;
            v60 = 1;
            goto LABEL_91;
          case 2u:
            v220 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v49, v50, v220);
            v58 = v49;
            v59 = v6;
            v60 = 2;
            goto LABEL_91;
          case 3u:
            v221 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v49, v50, v221);
            v58 = v49;
            v59 = v6;
            v60 = 3;
            goto LABEL_91;
          case 4u:
            v222 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v49, v50, v222);
            v58 = v49;
            v59 = v6;
            v60 = 4;
            goto LABEL_91;
          case 5u:
            v223 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v49, v50, v223);
            v58 = v49;
            v59 = v6;
            v60 = 5;
            goto LABEL_91;
          case 6u:
            v224 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v49, v50, v224);
            v58 = v49;
            v59 = v6;
            v60 = 6;
            goto LABEL_91;
          case 8u:
            v225 = *v50;
            *v49 = *v50;
            v226 = v225;
            v58 = v49;
            v59 = v6;
            v60 = 8;
            goto LABEL_91;
          case 9u:
            v227 = *v50;
            *v49 = *v50;
            v228 = v227;
            v58 = v49;
            v59 = v6;
            v60 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v58, v59, v60);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v229 = v439[5];
        v230 = (char *)v49 + v229;
        v231 = (char *)v50 + v229;
        v232 = *(uint64_t *)((char *)v50 + v229 + 8);
        if (v232)
        {
          v432 = v51;
          v437 = a1;
          v418 = v49;
          *(_QWORD *)v230 = *(_QWORD *)v231;
          *((_QWORD *)v230 + 1) = v232;
          v233 = (void *)*((_QWORD *)v231 + 2);
          v234 = *((_QWORD *)v231 + 3);
          v235 = *((_QWORD *)v231 + 4);
          v236 = *((_QWORD *)v231 + 5);
          v237 = *((_QWORD *)v231 + 6);
          v238 = *((_QWORD *)v231 + 7);
          v239 = v231[64];
          swift_bridgeObjectRetain(v232);
          sub_10003E1F0(v233, v234, v235, v236, v237, v238, v239);
          *((_QWORD *)v230 + 2) = v233;
          *((_QWORD *)v230 + 3) = v234;
          *((_QWORD *)v230 + 4) = v235;
          *((_QWORD *)v230 + 5) = v236;
          *((_QWORD *)v230 + 6) = v237;
          *((_QWORD *)v230 + 7) = v238;
          v230[64] = v239;
          *(_DWORD *)(v230 + 65) = *(_DWORD *)(v231 + 65);
          v240 = v231[120];
          if (v240 == 255)
          {
            v241 = *(_OWORD *)(v231 + 88);
            *(_OWORD *)(v230 + 72) = *(_OWORD *)(v231 + 72);
            *(_OWORD *)(v230 + 88) = v241;
            *(_OWORD *)(v230 + 104) = *(_OWORD *)(v231 + 104);
            v230[120] = v231[120];
          }
          else
          {
            v246 = v240 & 1;
            v247 = (void *)*((_QWORD *)v231 + 9);
            v248 = *((_QWORD *)v231 + 10);
            v249 = *((_QWORD *)v231 + 11);
            v250 = *((_QWORD *)v231 + 12);
            v251 = *((_QWORD *)v231 + 13);
            v252 = *((_QWORD *)v231 + 14);
            sub_10002B764(v247, v248, v249, v250, v251, v252, v240 & 1);
            *((_QWORD *)v230 + 9) = v247;
            *((_QWORD *)v230 + 10) = v248;
            *((_QWORD *)v230 + 11) = v249;
            *((_QWORD *)v230 + 12) = v250;
            *((_QWORD *)v230 + 13) = v251;
            *((_QWORD *)v230 + 14) = v252;
            v230[120] = v246;
          }
          v51 = v432;
          a1 = v437;
          v49 = v418;
          v245 = v423;
          v230[121] = v231[121];
        }
        else
        {
          v242 = *((_OWORD *)v231 + 5);
          *((_OWORD *)v230 + 4) = *((_OWORD *)v231 + 4);
          *((_OWORD *)v230 + 5) = v242;
          *((_OWORD *)v230 + 6) = *((_OWORD *)v231 + 6);
          *(_OWORD *)(v230 + 106) = *(_OWORD *)(v231 + 106);
          v243 = *((_OWORD *)v231 + 1);
          *(_OWORD *)v230 = *(_OWORD *)v231;
          *((_OWORD *)v230 + 1) = v243;
          v244 = *((_OWORD *)v231 + 3);
          *((_OWORD *)v230 + 2) = *((_OWORD *)v231 + 2);
          *((_OWORD *)v230 + 3) = v244;
          v245 = v54;
        }
        *((_BYTE *)v49 + v439[6]) = *((_BYTE *)v50 + v439[6]);
        *((_BYTE *)v49 + v439[7]) = *((_BYTE *)v50 + v439[7]);
        *((_BYTE *)v49 + v439[8]) = *((_BYTE *)v50 + v439[8]);
        *((_BYTE *)v49 + v439[9]) = *((_BYTE *)v50 + v439[9]);
        *((_BYTE *)v49 + v439[10]) = *((_BYTE *)v50 + v439[10]);
        v253 = v439[11];
        v254 = *(void **)((char *)v50 + v253);
        *(void **)((char *)v49 + v253) = v254;
        v255 = v254;
        v97 = v49;
        v98 = v245;
        v99 = 0;
        goto LABEL_209;
      case 1:
        v424 = v54;
        switch(swift_getEnumCaseMultiPayload(v50, v6))
        {
          case 1u:
            v66 = *v50;
            *v49 = *v50;
            v67 = v66;
            v68 = v49;
            v69 = v6;
            v70 = 1;
            goto LABEL_123;
          case 2u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v49, v50, v291);
            v68 = v49;
            v69 = v6;
            v70 = 2;
            goto LABEL_123;
          case 3u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v49, v50, v292);
            v68 = v49;
            v69 = v6;
            v70 = 3;
            goto LABEL_123;
          case 4u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(v49, v50, v293);
            v68 = v49;
            v69 = v6;
            v70 = 4;
            goto LABEL_123;
          case 5u:
            v294 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v294 - 8) + 16))(v49, v50, v294);
            v68 = v49;
            v69 = v6;
            v70 = 5;
            goto LABEL_123;
          case 6u:
            v295 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v295 - 8) + 16))(v49, v50, v295);
            v68 = v49;
            v69 = v6;
            v70 = 6;
            goto LABEL_123;
          case 8u:
            v296 = *v50;
            *v49 = *v50;
            v297 = v296;
            v68 = v49;
            v69 = v6;
            v70 = 8;
            goto LABEL_123;
          case 9u:
            v298 = *v50;
            *v49 = *v50;
            v299 = v298;
            v68 = v49;
            v69 = v6;
            v70 = 9;
LABEL_123:
            swift_storeEnumTagMultiPayload(v68, v69, v70);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v300 = v439[5];
        v301 = (char *)v49 + v300;
        v302 = (char *)v50 + v300;
        v303 = *(uint64_t *)((char *)v50 + v300 + 8);
        if (v303)
        {
          v433 = v51;
          v438 = a1;
          v420 = v49;
          *(_QWORD *)v301 = *(_QWORD *)v302;
          *((_QWORD *)v301 + 1) = v303;
          v304 = (void *)*((_QWORD *)v302 + 2);
          v305 = *((_QWORD *)v302 + 3);
          v306 = *((_QWORD *)v302 + 4);
          v307 = *((_QWORD *)v302 + 5);
          v308 = *((_QWORD *)v302 + 6);
          v309 = *((_QWORD *)v302 + 7);
          v310 = v302[64];
          swift_bridgeObjectRetain(v303);
          sub_10003E1F0(v304, v305, v306, v307, v308, v309, v310);
          *((_QWORD *)v301 + 2) = v304;
          *((_QWORD *)v301 + 3) = v305;
          *((_QWORD *)v301 + 4) = v306;
          *((_QWORD *)v301 + 5) = v307;
          *((_QWORD *)v301 + 6) = v308;
          *((_QWORD *)v301 + 7) = v309;
          v301[64] = v310;
          *(_DWORD *)(v301 + 65) = *(_DWORD *)(v302 + 65);
          v311 = v302[120];
          if (v311 == 255)
          {
            v312 = *(_OWORD *)(v302 + 88);
            *(_OWORD *)(v301 + 72) = *(_OWORD *)(v302 + 72);
            *(_OWORD *)(v301 + 88) = v312;
            *(_OWORD *)(v301 + 104) = *(_OWORD *)(v302 + 104);
            v301[120] = v302[120];
          }
          else
          {
            v317 = v311 & 1;
            v318 = (void *)*((_QWORD *)v302 + 9);
            v319 = *((_QWORD *)v302 + 10);
            v320 = *((_QWORD *)v302 + 11);
            v321 = *((_QWORD *)v302 + 12);
            v322 = *((_QWORD *)v302 + 13);
            v323 = *((_QWORD *)v302 + 14);
            sub_10002B764(v318, v319, v320, v321, v322, v323, v311 & 1);
            *((_QWORD *)v301 + 9) = v318;
            *((_QWORD *)v301 + 10) = v319;
            *((_QWORD *)v301 + 11) = v320;
            *((_QWORD *)v301 + 12) = v321;
            *((_QWORD *)v301 + 13) = v322;
            *((_QWORD *)v301 + 14) = v323;
            v301[120] = v317;
          }
          v51 = v433;
          a1 = v438;
          v49 = v420;
          v316 = v424;
          v301[121] = v302[121];
        }
        else
        {
          v313 = *((_OWORD *)v302 + 5);
          *((_OWORD *)v301 + 4) = *((_OWORD *)v302 + 4);
          *((_OWORD *)v301 + 5) = v313;
          *((_OWORD *)v301 + 6) = *((_OWORD *)v302 + 6);
          *(_OWORD *)(v301 + 106) = *(_OWORD *)(v302 + 106);
          v314 = *((_OWORD *)v302 + 1);
          *(_OWORD *)v301 = *(_OWORD *)v302;
          *((_OWORD *)v301 + 1) = v314;
          v315 = *((_OWORD *)v302 + 3);
          *((_OWORD *)v301 + 2) = *((_OWORD *)v302 + 2);
          *((_OWORD *)v301 + 3) = v315;
          v316 = v54;
        }
        *((_BYTE *)v49 + v439[6]) = *((_BYTE *)v50 + v439[6]);
        *((_BYTE *)v49 + v439[7]) = *((_BYTE *)v50 + v439[7]);
        *((_BYTE *)v49 + v439[8]) = *((_BYTE *)v50 + v439[8]);
        *((_BYTE *)v49 + v439[9]) = *((_BYTE *)v50 + v439[9]);
        *((_BYTE *)v49 + v439[10]) = *((_BYTE *)v50 + v439[10]);
        v324 = v439[11];
        v325 = *(void **)((char *)v50 + v324);
        *(void **)((char *)v49 + v324) = v325;
        v326 = v325;
        v327 = 1;
        swift_storeEnumTagMultiPayload(v49, v316, 1);
        goto LABEL_217;
      case 2:
        v71 = *v50;
        *v49 = *v50;
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v73 = (void **)((char *)v49 + v72);
        v74 = (void **)((char *)v50 + v72);
        v75 = *(_QWORD *)(v6 - 8);
        v76 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v75 + 48);
        v77 = v71;
        if (v76(v74, 1, v6))
        {
          v78 = sub_10002A750(&qword_100644980);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v74, v6))
          {
            case 1u:
              v158 = *v74;
              *v73 = *v74;
              v159 = v158;
              v160 = v73;
              v161 = v6;
              v162 = 1;
              goto LABEL_155;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v73, v74, v363);
              v160 = v73;
              v161 = v6;
              v162 = 2;
              goto LABEL_155;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v73, v74, v364);
              v160 = v73;
              v161 = v6;
              v162 = 3;
              goto LABEL_155;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v73, v74, v365);
              v160 = v73;
              v161 = v6;
              v162 = 4;
              goto LABEL_155;
            case 5u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v73, v74, v366);
              v160 = v73;
              v161 = v6;
              v162 = 5;
              goto LABEL_155;
            case 6u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v73, v74, v367);
              v160 = v73;
              v161 = v6;
              v162 = 6;
              goto LABEL_155;
            case 8u:
              v368 = *v74;
              *v73 = *v74;
              v369 = v368;
              v160 = v73;
              v161 = v6;
              v162 = 8;
              goto LABEL_155;
            case 9u:
              v370 = *v74;
              *v73 = *v74;
              v371 = v370;
              v160 = v73;
              v161 = v6;
              v162 = 9;
LABEL_155:
              swift_storeEnumTagMultiPayload(v160, v161, v162);
              break;
            default:
              memcpy(v73, v74, *(_QWORD *)(v75 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v75 + 56))(v73, 0, 1, v6);
        }
        v97 = v49;
        v98 = v54;
        v99 = 2;
        goto LABEL_209;
      case 3:
        v79 = *v50;
        *v49 = *v50;
        v80 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v81 = (void **)((char *)v49 + v80);
        v82 = (void **)((char *)v50 + v80);
        v83 = *(_QWORD *)(v6 - 8);
        v84 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v83 + 48);
        v85 = v79;
        if (v84(v82, 1, v6))
        {
          v86 = sub_10002A750(&qword_100644980);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v82, v6))
          {
            case 1u:
              v163 = *v82;
              *v81 = *v82;
              v164 = v163;
              v165 = v81;
              v166 = v6;
              v167 = 1;
              goto LABEL_206;
            case 2u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v81, v82, v372);
              v165 = v81;
              v166 = v6;
              v167 = 2;
              goto LABEL_206;
            case 3u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v81, v82, v373);
              v165 = v81;
              v166 = v6;
              v167 = 3;
              goto LABEL_206;
            case 4u:
              v374 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v81, v82, v374);
              v165 = v81;
              v166 = v6;
              v167 = 4;
              goto LABEL_206;
            case 5u:
              v415 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v415 - 8) + 16))(v81, v82, v415);
              v165 = v81;
              v166 = v6;
              v167 = 5;
              goto LABEL_206;
            case 6u:
              v375 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v81, v82, v375);
              v165 = v81;
              v166 = v6;
              v167 = 6;
              goto LABEL_206;
            case 8u:
              v376 = *v82;
              *v81 = *v82;
              v377 = v376;
              v165 = v81;
              v166 = v6;
              v167 = 8;
              goto LABEL_206;
            case 9u:
              v378 = *v82;
              *v81 = *v82;
              v379 = v378;
              v165 = v81;
              v166 = v6;
              v167 = 9;
LABEL_206:
              swift_storeEnumTagMultiPayload(v165, v166, v167);
              break;
            default:
              memcpy(v81, v82, *(_QWORD *)(v83 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v83 + 56))(v81, 0, 1, v6);
        }
        v97 = v49;
        v98 = v54;
        v99 = 3;
        goto LABEL_209;
      case 4:
        v87 = *v50;
        *v49 = *v50;
        v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v89 = (void **)((char *)v49 + v88);
        v90 = (void **)((char *)v50 + v88);
        v91 = *(_QWORD *)(v6 - 8);
        v92 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v91 + 48);
        v93 = v87;
        if (v92(v90, 1, v6))
        {
          v94 = sub_10002A750(&qword_100644980);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v90, v6))
          {
            case 1u:
              v168 = *v90;
              *v89 = *v90;
              v169 = v168;
              v170 = v89;
              v171 = v6;
              v172 = 1;
              goto LABEL_173;
            case 2u:
              v380 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v89, v90, v380);
              v170 = v89;
              v171 = v6;
              v172 = 2;
              goto LABEL_173;
            case 3u:
              v381 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v89, v90, v381);
              v170 = v89;
              v171 = v6;
              v172 = 3;
              goto LABEL_173;
            case 4u:
              v382 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v89, v90, v382);
              v170 = v89;
              v171 = v6;
              v172 = 4;
              goto LABEL_173;
            case 5u:
              v383 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v89, v90, v383);
              v170 = v89;
              v171 = v6;
              v172 = 5;
              goto LABEL_173;
            case 6u:
              v384 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v89, v90, v384);
              v170 = v89;
              v171 = v6;
              v172 = 6;
              goto LABEL_173;
            case 8u:
              v385 = *v90;
              *v89 = *v90;
              v386 = v385;
              v170 = v89;
              v171 = v6;
              v172 = 8;
              goto LABEL_173;
            case 9u:
              v387 = *v90;
              *v89 = *v90;
              v388 = v387;
              v170 = v89;
              v171 = v6;
              v172 = 9;
LABEL_173:
              swift_storeEnumTagMultiPayload(v170, v171, v172);
              break;
            default:
              memcpy(v89, v90, *(_QWORD *)(v91 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v91 + 56))(v89, 0, 1, v6);
        }
        v97 = v49;
        v98 = v54;
        v99 = 4;
        goto LABEL_209;
      case 5:
        *v49 = *v50;
        *((_BYTE *)v49 + 8) = *((_BYTE *)v50 + 8);
        *(_WORD *)((char *)v49 + 9) = *(_WORD *)((char *)v50 + 9);
        v95 = v50[2];
        v49[2] = v95;
        v96 = v95;
        v97 = v49;
        v98 = v54;
        v99 = 5;
        goto LABEL_209;
      case 6:
        v148 = *v50;
        *v49 = *v50;
        v149 = v148;
        v97 = v49;
        v98 = v54;
        v99 = 6;
        goto LABEL_209;
      case 7:
        v100 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v101 = *(_QWORD *)(v100 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v101 + 48))(v50, 1, v100))
        {
          v102 = sub_10002A750(&qword_100644600);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v173 = *v50;
          *v49 = *v50;
          v174 = *(int *)(v100 + 20);
          v440 = (char *)v49 + v174;
          v430 = v51;
          v175 = (char *)v50 + v174;
          v176 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v177 = v54;
          v178 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v176 - 8) + 16);
          v179 = swift_bridgeObjectRetain(v173);
          v180 = v175;
          v51 = v430;
          v178(v440, v180, v176, v179);
          v54 = v177;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v101 + 56))(v49, 0, 1, v100);
        }
        v181 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v182 = (void **)((char *)v49 + v181);
        v183 = (void **)((char *)v50 + v181);
        v184 = v183[1];
        if (v184)
        {
          *v182 = *v183;
          v182[1] = v184;
          v185 = (void *)v183[2];
          v182[2] = v185;
          swift_bridgeObjectRetain(v184);
          v186 = v185;
        }
        else
        {
          *(_OWORD *)v182 = *(_OWORD *)v183;
          v182[2] = v183[2];
        }
        v97 = v49;
        v98 = v54;
        v99 = 7;
        goto LABEL_209;
      case 8:
        v150 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v151 = *(_QWORD *)(v150 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v151 + 48))(v50, 1, v150))
        {
          v152 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          v216 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v49, v50, v216);
          *((_BYTE *)v49 + *(int *)(v150 + 20)) = *((_BYTE *)v50 + *(int *)(v150 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v151 + 56))(v49, 0, 1, v150);
        }
        v217 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v49 + *(int *)(v217 + 20)) = *(void **)((char *)v50 + *(int *)(v217 + 20));
        v97 = v49;
        v98 = v54;
        v99 = 8;
        goto LABEL_209;
      case 9:
        *(_BYTE *)v49 = *(_BYTE *)v50;
        v103 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v104 = (char *)v49 + v103;
        v105 = (char *)v50 + v103;
        v106 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
        v97 = v49;
        v98 = v54;
        v99 = 9;
LABEL_209:
        swift_storeEnumTagMultiPayload(v97, v98, v99);
        break;
      default:
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        break;
    }
    v327 = 1;
  }
  else
  {
    switch(EnumCaseMultiPayload)
    {
      case 0:
        v428 = v51;
        v435 = a1;
        switch(swift_getEnumCaseMultiPayload(v50, v6))
        {
          case 1u:
            v61 = *v50;
            *v49 = *v50;
            v62 = v61;
            v63 = v49;
            v64 = v6;
            v65 = 1;
            goto LABEL_107;
          case 2u:
            v256 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(v49, v50, v256);
            v63 = v49;
            v64 = v6;
            v65 = 2;
            goto LABEL_107;
          case 3u:
            v257 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v257 - 8) + 16))(v49, v50, v257);
            v63 = v49;
            v64 = v6;
            v65 = 3;
            goto LABEL_107;
          case 4u:
            v258 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v49, v50, v258);
            v63 = v49;
            v64 = v6;
            v65 = 4;
            goto LABEL_107;
          case 5u:
            v259 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v259 - 8) + 16))(v49, v50, v259);
            v63 = v49;
            v64 = v6;
            v65 = 5;
            goto LABEL_107;
          case 6u:
            v260 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(v49, v50, v260);
            v63 = v49;
            v64 = v6;
            v65 = 6;
            goto LABEL_107;
          case 8u:
            v261 = *v50;
            *v49 = *v50;
            v262 = v261;
            v63 = v49;
            v64 = v6;
            v65 = 8;
            goto LABEL_107;
          case 9u:
            v263 = *v50;
            *v49 = *v50;
            v264 = v263;
            v63 = v49;
            v64 = v6;
            v65 = 9;
LABEL_107:
            swift_storeEnumTagMultiPayload(v63, v64, v65);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v265 = v439[5];
        v266 = (char *)v49 + v265;
        v267 = (char *)v50 + v265;
        v268 = *(uint64_t *)((char *)v50 + v265 + 8);
        if (v268)
        {
          v419 = v49;
          v425 = v54;
          *(_QWORD *)v266 = *(_QWORD *)v267;
          *((_QWORD *)v266 + 1) = v268;
          v269 = (void *)*((_QWORD *)v267 + 2);
          v270 = *((_QWORD *)v267 + 3);
          v271 = *((_QWORD *)v267 + 4);
          v272 = *((_QWORD *)v267 + 5);
          v274 = *((_QWORD *)v267 + 6);
          v273 = *((_QWORD *)v267 + 7);
          v275 = v267[64];
          swift_bridgeObjectRetain(v268);
          sub_10003E1F0(v269, v270, v271, v272, v274, v273, v275);
          *((_QWORD *)v266 + 2) = v269;
          *((_QWORD *)v266 + 3) = v270;
          *((_QWORD *)v266 + 4) = v271;
          *((_QWORD *)v266 + 5) = v272;
          *((_QWORD *)v266 + 6) = v274;
          *((_QWORD *)v266 + 7) = v273;
          v266[64] = v275;
          *(_DWORD *)(v266 + 65) = *(_DWORD *)(v267 + 65);
          v276 = v267[120];
          if (v276 == 255)
          {
            v277 = *(_OWORD *)(v267 + 88);
            *(_OWORD *)(v266 + 72) = *(_OWORD *)(v267 + 72);
            *(_OWORD *)(v266 + 88) = v277;
            *(_OWORD *)(v266 + 104) = *(_OWORD *)(v267 + 104);
            v266[120] = v267[120];
          }
          else
          {
            v281 = v276 & 1;
            v282 = (void *)*((_QWORD *)v267 + 9);
            v283 = *((_QWORD *)v267 + 10);
            v284 = *((_QWORD *)v267 + 11);
            v285 = *((_QWORD *)v267 + 12);
            v286 = *((_QWORD *)v267 + 13);
            v287 = *((_QWORD *)v267 + 14);
            sub_10002B764(v282, v283, v284, v285, v286, v287, v276 & 1);
            *((_QWORD *)v266 + 9) = v282;
            *((_QWORD *)v266 + 10) = v283;
            *((_QWORD *)v266 + 11) = v284;
            *((_QWORD *)v266 + 12) = v285;
            *((_QWORD *)v266 + 13) = v286;
            *((_QWORD *)v266 + 14) = v287;
            v266[120] = v281;
          }
          v51 = v428;
          a1 = v435;
          v49 = v419;
          v54 = v425;
          v266[121] = v267[121];
        }
        else
        {
          v278 = *((_OWORD *)v267 + 5);
          *((_OWORD *)v266 + 4) = *((_OWORD *)v267 + 4);
          *((_OWORD *)v266 + 5) = v278;
          *((_OWORD *)v266 + 6) = *((_OWORD *)v267 + 6);
          *(_OWORD *)(v266 + 106) = *(_OWORD *)(v267 + 106);
          v279 = *((_OWORD *)v267 + 1);
          *(_OWORD *)v266 = *(_OWORD *)v267;
          *((_OWORD *)v266 + 1) = v279;
          v280 = *((_OWORD *)v267 + 3);
          *((_OWORD *)v266 + 2) = *((_OWORD *)v267 + 2);
          *((_OWORD *)v266 + 3) = v280;
        }
        *((_BYTE *)v49 + v439[6]) = *((_BYTE *)v50 + v439[6]);
        *((_BYTE *)v49 + v439[7]) = *((_BYTE *)v50 + v439[7]);
        *((_BYTE *)v49 + v439[8]) = *((_BYTE *)v50 + v439[8]);
        *((_BYTE *)v49 + v439[9]) = *((_BYTE *)v50 + v439[9]);
        *((_BYTE *)v49 + v439[10]) = *((_BYTE *)v50 + v439[10]);
        v288 = v439[11];
        v289 = *(void **)((char *)v50 + v288);
        *(void **)((char *)v49 + v288) = v289;
        v290 = v289;
        v138 = v49;
        v139 = v54;
        v140 = 0;
        goto LABEL_215;
      case 1:
        v429 = v51;
        v436 = a1;
        switch(swift_getEnumCaseMultiPayload(v50, v6))
        {
          case 1u:
            v107 = *v50;
            *v49 = *v50;
            v108 = v107;
            v109 = v49;
            v110 = v6;
            v111 = 1;
            goto LABEL_139;
          case 2u:
            v328 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v49, v50, v328);
            v109 = v49;
            v110 = v6;
            v111 = 2;
            goto LABEL_139;
          case 3u:
            v329 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v49, v50, v329);
            v109 = v49;
            v110 = v6;
            v111 = 3;
            goto LABEL_139;
          case 4u:
            v330 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v49, v50, v330);
            v109 = v49;
            v110 = v6;
            v111 = 4;
            goto LABEL_139;
          case 5u:
            v331 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v49, v50, v331);
            v109 = v49;
            v110 = v6;
            v111 = 5;
            goto LABEL_139;
          case 6u:
            v332 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v49, v50, v332);
            v109 = v49;
            v110 = v6;
            v111 = 6;
            goto LABEL_139;
          case 8u:
            v333 = *v50;
            *v49 = *v50;
            v334 = v333;
            v109 = v49;
            v110 = v6;
            v111 = 8;
            goto LABEL_139;
          case 9u:
            v335 = *v50;
            *v49 = *v50;
            v336 = v335;
            v109 = v49;
            v110 = v6;
            v111 = 9;
LABEL_139:
            swift_storeEnumTagMultiPayload(v109, v110, v111);
            break;
          default:
            memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v337 = v439[5];
        v338 = (char *)v49 + v337;
        v339 = (char *)v50 + v337;
        v340 = *(uint64_t *)((char *)v50 + v337 + 8);
        if (v340)
        {
          v421 = v49;
          v426 = v54;
          *(_QWORD *)v338 = *(_QWORD *)v339;
          *((_QWORD *)v338 + 1) = v340;
          v341 = (void *)*((_QWORD *)v339 + 2);
          v342 = *((_QWORD *)v339 + 3);
          v343 = *((_QWORD *)v339 + 4);
          v344 = *((_QWORD *)v339 + 5);
          v345 = *((_QWORD *)v339 + 6);
          v346 = *((_QWORD *)v339 + 7);
          v347 = v339[64];
          swift_bridgeObjectRetain(v340);
          sub_10003E1F0(v341, v342, v343, v344, v345, v346, v347);
          *((_QWORD *)v338 + 2) = v341;
          *((_QWORD *)v338 + 3) = v342;
          *((_QWORD *)v338 + 4) = v343;
          *((_QWORD *)v338 + 5) = v344;
          *((_QWORD *)v338 + 6) = v345;
          *((_QWORD *)v338 + 7) = v346;
          v338[64] = v347;
          *(_DWORD *)(v338 + 65) = *(_DWORD *)(v339 + 65);
          v348 = v339[120];
          if (v348 == 255)
          {
            v349 = *(_OWORD *)(v339 + 88);
            *(_OWORD *)(v338 + 72) = *(_OWORD *)(v339 + 72);
            *(_OWORD *)(v338 + 88) = v349;
            *(_OWORD *)(v338 + 104) = *(_OWORD *)(v339 + 104);
            v338[120] = v339[120];
          }
          else
          {
            v353 = v348 & 1;
            v354 = (void *)*((_QWORD *)v339 + 9);
            v355 = *((_QWORD *)v339 + 10);
            v356 = *((_QWORD *)v339 + 11);
            v357 = *((_QWORD *)v339 + 12);
            v358 = *((_QWORD *)v339 + 13);
            v359 = *((_QWORD *)v339 + 14);
            sub_10002B764(v354, v355, v356, v357, v358, v359, v348 & 1);
            *((_QWORD *)v338 + 9) = v354;
            *((_QWORD *)v338 + 10) = v355;
            *((_QWORD *)v338 + 11) = v356;
            *((_QWORD *)v338 + 12) = v357;
            *((_QWORD *)v338 + 13) = v358;
            *((_QWORD *)v338 + 14) = v359;
            v338[120] = v353;
          }
          v51 = v429;
          a1 = v436;
          v49 = v421;
          v54 = v426;
          v338[121] = v339[121];
        }
        else
        {
          v350 = *((_OWORD *)v339 + 5);
          *((_OWORD *)v338 + 4) = *((_OWORD *)v339 + 4);
          *((_OWORD *)v338 + 5) = v350;
          *((_OWORD *)v338 + 6) = *((_OWORD *)v339 + 6);
          *(_OWORD *)(v338 + 106) = *(_OWORD *)(v339 + 106);
          v351 = *((_OWORD *)v339 + 1);
          *(_OWORD *)v338 = *(_OWORD *)v339;
          *((_OWORD *)v338 + 1) = v351;
          v352 = *((_OWORD *)v339 + 3);
          *((_OWORD *)v338 + 2) = *((_OWORD *)v339 + 2);
          *((_OWORD *)v338 + 3) = v352;
        }
        *((_BYTE *)v49 + v439[6]) = *((_BYTE *)v50 + v439[6]);
        *((_BYTE *)v49 + v439[7]) = *((_BYTE *)v50 + v439[7]);
        *((_BYTE *)v49 + v439[8]) = *((_BYTE *)v50 + v439[8]);
        *((_BYTE *)v49 + v439[9]) = *((_BYTE *)v50 + v439[9]);
        *((_BYTE *)v49 + v439[10]) = *((_BYTE *)v50 + v439[10]);
        v360 = v439[11];
        v361 = *(void **)((char *)v50 + v360);
        *(void **)((char *)v49 + v360) = v361;
        v362 = v361;
        v138 = v49;
        v139 = v54;
        v140 = 1;
        goto LABEL_215;
      case 2:
        v112 = *v50;
        *v49 = *v50;
        v113 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v114 = (void **)((char *)v49 + v113);
        v115 = (void **)((char *)v50 + v113);
        v116 = *(_QWORD *)(v6 - 8);
        v117 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v116 + 48);
        v118 = v112;
        if (v117(v115, 1, v6))
        {
          v119 = sub_10002A750(&qword_100644980);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v115, v6))
          {
            case 1u:
              v187 = *v115;
              *v114 = *v115;
              v188 = v187;
              v189 = v114;
              v190 = v6;
              v191 = 1;
              goto LABEL_184;
            case 2u:
              v389 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v114, v115, v389);
              v189 = v114;
              v190 = v6;
              v191 = 2;
              goto LABEL_184;
            case 3u:
              v390 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v114, v115, v390);
              v189 = v114;
              v190 = v6;
              v191 = 3;
              goto LABEL_184;
            case 4u:
              v391 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v114, v115, v391);
              v189 = v114;
              v190 = v6;
              v191 = 4;
              goto LABEL_184;
            case 5u:
              v392 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v392 - 8) + 16))(v114, v115, v392);
              v189 = v114;
              v190 = v6;
              v191 = 5;
              goto LABEL_184;
            case 6u:
              v393 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v393 - 8) + 16))(v114, v115, v393);
              v189 = v114;
              v190 = v6;
              v191 = 6;
              goto LABEL_184;
            case 8u:
              v394 = *v115;
              *v114 = *v115;
              v395 = v394;
              v189 = v114;
              v190 = v6;
              v191 = 8;
              goto LABEL_184;
            case 9u:
              v396 = *v115;
              *v114 = *v115;
              v397 = v396;
              v189 = v114;
              v190 = v6;
              v191 = 9;
LABEL_184:
              swift_storeEnumTagMultiPayload(v189, v190, v191);
              break;
            default:
              memcpy(v114, v115, *(_QWORD *)(v116 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v116 + 56))(v114, 0, 1, v6);
        }
        v138 = v49;
        v139 = v54;
        v140 = 2;
        goto LABEL_215;
      case 3:
        v120 = *v50;
        *v49 = *v50;
        v121 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v122 = (void **)((char *)v49 + v121);
        v123 = (void **)((char *)v50 + v121);
        v124 = *(_QWORD *)(v6 - 8);
        v125 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v124 + 48);
        v126 = v120;
        if (v125(v123, 1, v6))
        {
          v127 = sub_10002A750(&qword_100644980);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v123, v6))
          {
            case 1u:
              v192 = *v123;
              *v122 = *v123;
              v193 = v192;
              v194 = v122;
              v195 = v6;
              v196 = 1;
              goto LABEL_212;
            case 2u:
              v398 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v398 - 8) + 16))(v122, v123, v398);
              v194 = v122;
              v195 = v6;
              v196 = 2;
              goto LABEL_212;
            case 3u:
              v399 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v399 - 8) + 16))(v122, v123, v399);
              v194 = v122;
              v195 = v6;
              v196 = 3;
              goto LABEL_212;
            case 4u:
              v400 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v400 - 8) + 16))(v122, v123, v400);
              v194 = v122;
              v195 = v6;
              v196 = 4;
              goto LABEL_212;
            case 5u:
              v416 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v416 - 8) + 16))(v122, v123, v416);
              v194 = v122;
              v195 = v6;
              v196 = 5;
              goto LABEL_212;
            case 6u:
              v401 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v401 - 8) + 16))(v122, v123, v401);
              v194 = v122;
              v195 = v6;
              v196 = 6;
              goto LABEL_212;
            case 8u:
              v402 = *v123;
              *v122 = *v123;
              v403 = v402;
              v194 = v122;
              v195 = v6;
              v196 = 8;
              goto LABEL_212;
            case 9u:
              v404 = *v123;
              *v122 = *v123;
              v405 = v404;
              v194 = v122;
              v195 = v6;
              v196 = 9;
LABEL_212:
              swift_storeEnumTagMultiPayload(v194, v195, v196);
              break;
            default:
              memcpy(v122, v123, *(_QWORD *)(v124 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v124 + 56))(v122, 0, 1, v6);
        }
        v138 = v49;
        v139 = v54;
        v140 = 3;
        goto LABEL_215;
      case 4:
        v128 = *v50;
        *v49 = *v50;
        v129 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v130 = (void **)((char *)v49 + v129);
        v131 = (void **)((char *)v50 + v129);
        v132 = *(_QWORD *)(v6 - 8);
        v133 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v132 + 48);
        v134 = v128;
        if (v133(v131, 1, v6))
        {
          v135 = sub_10002A750(&qword_100644980);
          memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v131, v6))
          {
            case 1u:
              v197 = *v131;
              *v130 = *v131;
              v198 = v197;
              v199 = v130;
              v200 = v6;
              v201 = 1;
              goto LABEL_202;
            case 2u:
              v406 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v406 - 8) + 16))(v130, v131, v406);
              v199 = v130;
              v200 = v6;
              v201 = 2;
              goto LABEL_202;
            case 3u:
              v407 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v407 - 8) + 16))(v130, v131, v407);
              v199 = v130;
              v200 = v6;
              v201 = 3;
              goto LABEL_202;
            case 4u:
              v408 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v408 - 8) + 16))(v130, v131, v408);
              v199 = v130;
              v200 = v6;
              v201 = 4;
              goto LABEL_202;
            case 5u:
              v409 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v409 - 8) + 16))(v130, v131, v409);
              v199 = v130;
              v200 = v6;
              v201 = 5;
              goto LABEL_202;
            case 6u:
              v410 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v410 - 8) + 16))(v130, v131, v410);
              v199 = v130;
              v200 = v6;
              v201 = 6;
              goto LABEL_202;
            case 8u:
              v411 = *v131;
              *v130 = *v131;
              v412 = v411;
              v199 = v130;
              v200 = v6;
              v201 = 8;
              goto LABEL_202;
            case 9u:
              v413 = *v131;
              *v130 = *v131;
              v414 = v413;
              v199 = v130;
              v200 = v6;
              v201 = 9;
LABEL_202:
              swift_storeEnumTagMultiPayload(v199, v200, v201);
              break;
            default:
              memcpy(v130, v131, *(_QWORD *)(v132 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v132 + 56))(v130, 0, 1, v6);
        }
        v138 = v49;
        v139 = v54;
        v140 = 4;
        goto LABEL_215;
      case 5:
        *v49 = *v50;
        *((_BYTE *)v49 + 8) = *((_BYTE *)v50 + 8);
        *(_WORD *)((char *)v49 + 9) = *(_WORD *)((char *)v50 + 9);
        v136 = v50[2];
        v49[2] = v136;
        v137 = v136;
        v138 = v49;
        v139 = v54;
        v140 = 5;
        goto LABEL_215;
      case 6:
        v153 = *v50;
        *v49 = *v50;
        v154 = v153;
        v138 = v49;
        v139 = v54;
        v140 = 6;
        goto LABEL_215;
      case 7:
        v141 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v142 = *(_QWORD *)(v141 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v142 + 48))(v50, 1, v141))
        {
          v143 = sub_10002A750(&qword_100644600);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        }
        else
        {
          v202 = *v50;
          *v49 = *v50;
          v203 = *(int *)(v141 + 20);
          v441 = (char *)v49 + v203;
          v431 = v51;
          v204 = (char *)v50 + v203;
          v205 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v206 = v54;
          v207 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v205 - 8) + 16);
          v208 = swift_bridgeObjectRetain(v202);
          v209 = v204;
          v51 = v431;
          v207(v441, v209, v205, v208);
          v54 = v206;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v142 + 56))(v49, 0, 1, v141);
        }
        v210 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v211 = (void **)((char *)v49 + v210);
        v212 = (void **)((char *)v50 + v210);
        v213 = v212[1];
        if (v213)
        {
          *v211 = *v212;
          v211[1] = v213;
          v214 = (void *)v212[2];
          v211[2] = v214;
          swift_bridgeObjectRetain(v213);
          v215 = v214;
        }
        else
        {
          *(_OWORD *)v211 = *(_OWORD *)v212;
          v211[2] = v212[2];
        }
        v138 = v49;
        v139 = v54;
        v140 = 7;
        goto LABEL_215;
      case 8:
        v155 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v156 = *(_QWORD *)(v155 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v156 + 48))(v50, 1, v155))
        {
          v157 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
        }
        else
        {
          v218 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v49, v50, v218);
          *((_BYTE *)v49 + *(int *)(v155 + 20)) = *((_BYTE *)v50 + *(int *)(v155 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v156 + 56))(v49, 0, 1, v155);
        }
        v219 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v49 + *(int *)(v219 + 20)) = *(void **)((char *)v50 + *(int *)(v219 + 20));
        v138 = v49;
        v139 = v54;
        v140 = 8;
        goto LABEL_215;
      case 9:
        *(_BYTE *)v49 = *(_BYTE *)v50;
        v144 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v145 = (char *)v49 + v144;
        v146 = (char *)v50 + v144;
        v147 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
        v138 = v49;
        v139 = v54;
        v140 = 9;
LABEL_215:
        swift_storeEnumTagMultiPayload(v138, v139, v140);
        break;
      default:
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        break;
    }
    v327 = 0;
  }
LABEL_217:
  swift_storeEnumTagMultiPayload(v49, v51, v327);
  return a1;
}

void **sub_10022571C(uint64_t a1, void **a2, uint64_t a3)
{
  void **v5;
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  _OWORD *v43;
  __int128 *v44;
  int v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  void *v102;
  id v103;
  uint64_t v104;
  void **v105;
  void **v106;
  uint64_t v107;
  int EnumCaseMultiPayload;
  uint64_t v109;
  int v110;
  uint64_t v111;
  void *v112;
  id v113;
  void **v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  void **v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void **v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(void **, uint64_t, uint64_t);
  id v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  void **v140;
  void **v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int (*v144)(void **, uint64_t, uint64_t);
  id v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void **v149;
  void **v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int (*v153)(void **, uint64_t, uint64_t);
  id v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  void **v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  void **v176;
  void **v177;
  uint64_t v178;
  uint64_t v179;
  unsigned int (*v180)(void **, uint64_t, uint64_t);
  id v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  void **v185;
  void **v186;
  uint64_t v187;
  uint64_t v188;
  unsigned int (*v189)(void **, uint64_t, uint64_t);
  id v190;
  uint64_t v191;
  void *v192;
  uint64_t v193;
  void **v194;
  void **v195;
  uint64_t v196;
  uint64_t v197;
  unsigned int (*v198)(void **, uint64_t, uint64_t);
  id v199;
  uint64_t v200;
  void *v201;
  id v202;
  void **v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  void *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  void **v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  id v229;
  void **v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  id v234;
  void **v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(char *, char *, uint64_t, __n128);
  __n128 v244;
  uint64_t v245;
  _QWORD *v246;
  _QWORD *v247;
  uint64_t v248;
  void *v249;
  id v250;
  void *v251;
  id v252;
  void **v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  id v257;
  void **v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  id v262;
  void **v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  void (*v271)(char *, char *, uint64_t, __n128);
  __n128 v272;
  uint64_t v273;
  _QWORD *v274;
  _QWORD *v275;
  uint64_t v276;
  void *v277;
  id v278;
  __int128 v279;
  __int128 v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  id v291;
  void *v292;
  id v293;
  int *v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned __int8 v305;
  int v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char v323;
  uint64_t v324;
  void *v325;
  id v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void *v332;
  id v333;
  void *v334;
  id v335;
  int *v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  void *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unsigned __int8 v347;
  int v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  void *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  uint64_t v365;
  void *v366;
  id v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  void *v373;
  id v374;
  void *v375;
  id v376;
  int *v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  void *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  unsigned __int8 v388;
  int v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  uint64_t v399;
  void *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  char v406;
  uint64_t v407;
  void *v408;
  id v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  void *v416;
  id v417;
  void *v418;
  id v419;
  int *v420;
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  void *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unsigned __int8 v431;
  int v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  void *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char v448;
  uint64_t v449;
  void *v450;
  id v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  void *v457;
  id v458;
  void *v459;
  id v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  void *v466;
  id v467;
  void *v468;
  id v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  void *v475;
  id v476;
  void *v477;
  id v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  void *v484;
  id v485;
  void *v486;
  id v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  void *v493;
  id v494;
  void *v495;
  id v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  void *v502;
  id v503;
  void *v504;
  id v505;
  void **v507;
  void **v508;
  void **v509;
  void **v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  void **v522;
  void **v523;
  void **v524;
  void **v525;
  void **v526;
  int *v527;
  int *v528;
  int *v529;
  int *v530;
  int *v531;
  char *v532;
  char *v533;

  v5 = (void **)a1;
  if ((void **)a1 != a2)
  {
    sub_10001F544(a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 1u:
        v7 = *a2;
        *v5 = *a2;
        v8 = v7;
        v9 = v5;
        v10 = v6;
        v11 = 1;
        goto LABEL_12;
      case 2u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, a2, v12);
        v9 = v5;
        v10 = v6;
        v11 = 2;
        goto LABEL_12;
      case 3u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v5, a2, v13);
        v9 = v5;
        v10 = v6;
        v11 = 3;
        goto LABEL_12;
      case 4u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v5, a2, v14);
        v9 = v5;
        v10 = v6;
        v11 = 4;
        goto LABEL_12;
      case 5u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, a2, v15);
        v9 = v5;
        v10 = v6;
        v11 = 5;
        goto LABEL_12;
      case 6u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, a2, v16);
        v9 = v5;
        v10 = v6;
        v11 = 6;
        goto LABEL_12;
      case 8u:
        v17 = *a2;
        *v5 = *a2;
        v18 = v17;
        v9 = v5;
        v10 = v6;
        v11 = 8;
        goto LABEL_12;
      case 9u:
        v19 = *a2;
        *v5 = *a2;
        v20 = v19;
        v9 = v5;
        v10 = v6;
        v11 = 9;
LABEL_12:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(v5, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v22 = (int *)v21;
  v23 = *(int *)(v21 + 20);
  v24 = (uint64_t)v5 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(uint64_t *)((char *)v5 + v23 + 8);
  v27 = *(uint64_t *)((char *)a2 + v23 + 8);
  if (v26)
  {
    if (!v27)
    {
      sub_100227C2C(v24);
      v60 = *((_OWORD *)v25 + 3);
      v62 = *(_OWORD *)v25;
      v61 = *((_OWORD *)v25 + 1);
      *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
      *(_OWORD *)(v24 + 48) = v60;
      *(_OWORD *)v24 = v62;
      *(_OWORD *)(v24 + 16) = v61;
      v64 = *((_OWORD *)v25 + 5);
      v63 = *((_OWORD *)v25 + 6);
      v65 = *((_OWORD *)v25 + 4);
      *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
      *(_OWORD *)(v24 + 80) = v64;
      *(_OWORD *)(v24 + 96) = v63;
      *(_OWORD *)(v24 + 64) = v65;
      goto LABEL_28;
    }
    v515 = a3;
    v522 = v5;
    v527 = (int *)v21;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v28 = *((_QWORD *)v25 + 1);
    *(_QWORD *)(v24 + 8) = v28;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRelease(v26);
    v29 = (void *)*((_QWORD *)v25 + 2);
    v30 = *((_QWORD *)v25 + 3);
    v31 = *((_QWORD *)v25 + 4);
    v32 = *((_QWORD *)v25 + 5);
    v34 = *((_QWORD *)v25 + 6);
    v33 = *((_QWORD *)v25 + 7);
    v35 = v25[64];
    sub_10003E1F0(v29, v30, v31, v32, v34, v33, v35);
    v36 = *(void **)(v24 + 16);
    v37 = *(_QWORD *)(v24 + 24);
    v38 = *(_QWORD *)(v24 + 32);
    v39 = *(_QWORD *)(v24 + 40);
    v40 = *(_QWORD *)(v24 + 48);
    v41 = *(_QWORD *)(v24 + 56);
    *(_QWORD *)(v24 + 16) = v29;
    *(_QWORD *)(v24 + 24) = v30;
    *(_QWORD *)(v24 + 32) = v31;
    *(_QWORD *)(v24 + 40) = v32;
    *(_QWORD *)(v24 + 48) = v34;
    *(_QWORD *)(v24 + 56) = v33;
    v42 = *(_BYTE *)(v24 + 64);
    *(_BYTE *)(v24 + 64) = v35;
    sub_10003E2EC(v36, v37, v38, v39, v40, v41, v42);
    *(_BYTE *)(v24 + 65) = v25[65];
    *(_BYTE *)(v24 + 66) = v25[66];
    *(_BYTE *)(v24 + 67) = v25[67];
    *(_BYTE *)(v24 + 68) = v25[68];
    v43 = (_OWORD *)(v24 + 72);
    v44 = (__int128 *)(v25 + 72);
    v45 = v25[120];
    if (*(unsigned __int8 *)(v24 + 120) != 255)
    {
      if (v45 == 255)
      {
        sub_100227BF8(v24 + 72);
        v47 = *(_OWORD *)(v25 + 88);
        v46 = *(_OWORD *)(v25 + 104);
        v48 = *v44;
        *(_BYTE *)(v24 + 120) = v25[120];
        *(_OWORD *)(v24 + 88) = v47;
        *(_OWORD *)(v24 + 104) = v46;
        *v43 = v48;
      }
      else
      {
        v82 = v45 & 1;
        v83 = (void *)*((_QWORD *)v25 + 9);
        v84 = *((_QWORD *)v25 + 10);
        v85 = *((_QWORD *)v25 + 11);
        v86 = *((_QWORD *)v25 + 12);
        v87 = *((_QWORD *)v25 + 13);
        v88 = *((_QWORD *)v25 + 14);
        sub_10002B764(v83, v84, v85, v86, v87, v88, v45 & 1);
        v89 = *(void **)(v24 + 72);
        v90 = *(_QWORD *)(v24 + 80);
        v91 = *(_QWORD *)(v24 + 88);
        v92 = *(_QWORD *)(v24 + 96);
        v93 = *(_QWORD *)(v24 + 104);
        v94 = *(_QWORD *)(v24 + 112);
        v95 = *(_BYTE *)(v24 + 120);
        *(_QWORD *)(v24 + 72) = v83;
        *(_QWORD *)(v24 + 80) = v84;
        *(_QWORD *)(v24 + 88) = v85;
        *(_QWORD *)(v24 + 96) = v86;
        *(_QWORD *)(v24 + 104) = v87;
        *(_QWORD *)(v24 + 112) = v88;
        *(_BYTE *)(v24 + 120) = v82;
        sub_10002B328(v89, v90, v91, v92, v93, v94, v95);
      }
      goto LABEL_27;
    }
    if (v45 == 255)
    {
      v66 = *v44;
      v67 = *(_OWORD *)(v25 + 88);
      v68 = *(_OWORD *)(v25 + 104);
      *(_BYTE *)(v24 + 120) = v25[120];
      *(_OWORD *)(v24 + 88) = v67;
      *(_OWORD *)(v24 + 104) = v68;
      *v43 = v66;
      goto LABEL_27;
    }
LABEL_24:
    v69 = v45 & 1;
    v70 = (void *)*((_QWORD *)v25 + 9);
    v71 = *((_QWORD *)v25 + 10);
    v72 = *((_QWORD *)v25 + 11);
    v73 = *((_QWORD *)v25 + 12);
    v74 = *((_QWORD *)v25 + 13);
    v75 = *((_QWORD *)v25 + 14);
    sub_10002B764(v70, v71, v72, v73, v74, v75, v45 & 1);
    *(_QWORD *)(v24 + 72) = v70;
    *(_QWORD *)(v24 + 80) = v71;
    *(_QWORD *)(v24 + 88) = v72;
    *(_QWORD *)(v24 + 96) = v73;
    *(_QWORD *)(v24 + 104) = v74;
    *(_QWORD *)(v24 + 112) = v75;
    *(_BYTE *)(v24 + 120) = v69;
    goto LABEL_27;
  }
  if (!v27)
  {
    v76 = *(_OWORD *)v25;
    v77 = *((_OWORD *)v25 + 1);
    v78 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v78;
    *(_OWORD *)v24 = v76;
    *(_OWORD *)(v24 + 16) = v77;
    v79 = *((_OWORD *)v25 + 4);
    v80 = *((_OWORD *)v25 + 5);
    v81 = *((_OWORD *)v25 + 6);
    *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
    *(_OWORD *)(v24 + 80) = v80;
    *(_OWORD *)(v24 + 96) = v81;
    *(_OWORD *)(v24 + 64) = v79;
    goto LABEL_28;
  }
  v515 = a3;
  v522 = v5;
  v527 = (int *)v21;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v49 = *((_QWORD *)v25 + 1);
  *(_QWORD *)(v24 + 8) = v49;
  v50 = (void *)*((_QWORD *)v25 + 2);
  v51 = *((_QWORD *)v25 + 3);
  v52 = *((_QWORD *)v25 + 4);
  v53 = *((_QWORD *)v25 + 5);
  v54 = *((_QWORD *)v25 + 6);
  v55 = *((_QWORD *)v25 + 7);
  v56 = v25[64];
  swift_bridgeObjectRetain(v49);
  sub_10003E1F0(v50, v51, v52, v53, v54, v55, v56);
  *(_QWORD *)(v24 + 16) = v50;
  *(_QWORD *)(v24 + 24) = v51;
  *(_QWORD *)(v24 + 32) = v52;
  *(_QWORD *)(v24 + 40) = v53;
  *(_QWORD *)(v24 + 48) = v54;
  *(_QWORD *)(v24 + 56) = v55;
  *(_BYTE *)(v24 + 64) = v56;
  *(_BYTE *)(v24 + 65) = v25[65];
  *(_BYTE *)(v24 + 66) = v25[66];
  *(_BYTE *)(v24 + 67) = v25[67];
  *(_BYTE *)(v24 + 68) = v25[68];
  v45 = v25[120];
  if (v45 != 255)
    goto LABEL_24;
  v57 = *(_OWORD *)(v25 + 72);
  v58 = *(_OWORD *)(v25 + 88);
  v59 = *(_OWORD *)(v25 + 104);
  *(_BYTE *)(v24 + 120) = v25[120];
  *(_OWORD *)(v24 + 88) = v58;
  *(_OWORD *)(v24 + 104) = v59;
  *(_OWORD *)(v24 + 72) = v57;
LABEL_27:
  v5 = v522;
  v22 = v527;
  a3 = v515;
  *(_BYTE *)(v24 + 121) = v25[121];
LABEL_28:
  *((_BYTE *)v5 + v22[6]) = *((_BYTE *)a2 + v22[6]);
  *((_BYTE *)v5 + v22[7]) = *((_BYTE *)a2 + v22[7]);
  *((_BYTE *)v5 + v22[8]) = *((_BYTE *)a2 + v22[8]);
  *((_BYTE *)v5 + v22[9]) = *((_BYTE *)a2 + v22[9]);
  *((_BYTE *)v5 + v22[10]) = *((_BYTE *)a2 + v22[10]);
  v96 = v22[11];
  v97 = *(void **)((char *)v5 + v96);
  v98 = *(void **)((char *)a2 + v96);
  *(void **)((char *)v5 + v96) = v98;
  v99 = v98;

  v100 = *(int *)(a3 + 20);
  v101 = *(void **)((char *)a2 + v100);
  v102 = *(void **)((char *)v5 + v100);
  *(void **)((char *)v5 + v100) = v101;
  v103 = v101;

  if (v5 != a2)
  {
    v104 = *(int *)(a3 + 24);
    v105 = (void **)((char *)v5 + v104);
    v106 = (void **)((char *)a2 + v104);
    sub_10001F544((uint64_t)v5 + v104, type metadata accessor for TTRRemindersListSectionCreationLocation);
    v107 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v106, v107);
    v109 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v110 = swift_getEnumCaseMultiPayload(v106, v109);
    if (EnumCaseMultiPayload == 1)
    {
      switch(v110)
      {
        case 0:
          v528 = v22;
          v111 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v516 = v109;
          v523 = v5;
          switch(swift_getEnumCaseMultiPayload(v106, v111))
          {
            case 1u:
              v112 = *v106;
              *v105 = *v106;
              v113 = v112;
              v114 = v105;
              v115 = v111;
              v116 = 1;
              goto LABEL_102;
            case 2u:
              v285 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(v105, v106, v285);
              v114 = v105;
              v115 = v111;
              v116 = 2;
              goto LABEL_102;
            case 3u:
              v286 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(v105, v106, v286);
              v114 = v105;
              v115 = v111;
              v116 = 3;
              goto LABEL_102;
            case 4u:
              v287 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(v105, v106, v287);
              v114 = v105;
              v115 = v111;
              v116 = 4;
              goto LABEL_102;
            case 5u:
              v288 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(v105, v106, v288);
              v114 = v105;
              v115 = v111;
              v116 = 5;
              goto LABEL_102;
            case 6u:
              v289 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v105, v106, v289);
              v114 = v105;
              v115 = v111;
              v116 = 6;
              goto LABEL_102;
            case 8u:
              v290 = *v106;
              *v105 = *v106;
              v291 = v290;
              v114 = v105;
              v115 = v111;
              v116 = 8;
              goto LABEL_102;
            case 9u:
              v292 = *v106;
              *v105 = *v106;
              v293 = v292;
              v114 = v105;
              v115 = v111;
              v116 = 9;
LABEL_102:
              swift_storeEnumTagMultiPayload(v114, v115, v116);
              break;
            default:
              memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
              break;
          }
          v294 = v528;
          v295 = v528[5];
          v296 = (char *)v105 + v295;
          v297 = (char *)v106 + v295;
          if (*(void **)((char *)v106 + v295 + 8))
          {
            v507 = v105;
            v513 = v107;
            *(_QWORD *)v296 = *(_QWORD *)v297;
            v298 = *((_QWORD *)v297 + 1);
            *((_QWORD *)v296 + 1) = v298;
            v299 = (void *)*((_QWORD *)v297 + 2);
            v300 = *((_QWORD *)v297 + 3);
            v301 = *((_QWORD *)v297 + 4);
            v302 = *((_QWORD *)v297 + 5);
            v303 = *((_QWORD *)v297 + 6);
            v304 = *((_QWORD *)v297 + 7);
            v305 = v297[64];
            swift_bridgeObjectRetain(v298);
            sub_10003E1F0(v299, v300, v301, v302, v303, v304, v305);
            *((_QWORD *)v296 + 2) = v299;
            *((_QWORD *)v296 + 3) = v300;
            *((_QWORD *)v296 + 4) = v301;
            *((_QWORD *)v296 + 5) = v302;
            *((_QWORD *)v296 + 6) = v303;
            *((_QWORD *)v296 + 7) = v304;
            v296[64] = v305;
            v296[65] = v297[65];
            v296[66] = v297[66];
            v296[67] = v297[67];
            v296[68] = v297[68];
            v306 = v297[120];
            if (v306 == 255)
            {
              v307 = *(_OWORD *)(v297 + 72);
              v308 = *(_OWORD *)(v297 + 88);
              v309 = *(_OWORD *)(v297 + 104);
              v296[120] = v297[120];
              *(_OWORD *)(v296 + 88) = v308;
              *(_OWORD *)(v296 + 104) = v309;
              *(_OWORD *)(v296 + 72) = v307;
            }
            else
            {
              v317 = (void *)*((_QWORD *)v297 + 9);
              v318 = *((_QWORD *)v297 + 10);
              v319 = *((_QWORD *)v297 + 11);
              v320 = *((_QWORD *)v297 + 12);
              v321 = *((_QWORD *)v297 + 13);
              v322 = *((_QWORD *)v297 + 14);
              v323 = v306 & 1;
              sub_10002B764(v317, v318, v319, v320, v321, v322, v306 & 1);
              *((_QWORD *)v296 + 9) = v317;
              *((_QWORD *)v296 + 10) = v318;
              *((_QWORD *)v296 + 11) = v319;
              *((_QWORD *)v296 + 12) = v320;
              *((_QWORD *)v296 + 13) = v321;
              *((_QWORD *)v296 + 14) = v322;
              v296[120] = v323;
            }
            v316 = v516;
            v5 = v523;
            v105 = v507;
            v107 = v513;
            v296[121] = v297[121];
            v294 = v528;
          }
          else
          {
            v310 = *(_OWORD *)v297;
            v311 = *((_OWORD *)v297 + 1);
            v312 = *((_OWORD *)v297 + 3);
            *((_OWORD *)v296 + 2) = *((_OWORD *)v297 + 2);
            *((_OWORD *)v296 + 3) = v312;
            *(_OWORD *)v296 = v310;
            *((_OWORD *)v296 + 1) = v311;
            v313 = *((_OWORD *)v297 + 4);
            v314 = *((_OWORD *)v297 + 5);
            v315 = *((_OWORD *)v297 + 6);
            *(_OWORD *)(v296 + 106) = *(_OWORD *)(v297 + 106);
            *((_OWORD *)v296 + 5) = v314;
            *((_OWORD *)v296 + 6) = v315;
            *((_OWORD *)v296 + 4) = v313;
            v316 = v109;
          }
          *((_BYTE *)v105 + v294[6]) = *((_BYTE *)v106 + v294[6]);
          *((_BYTE *)v105 + v294[7]) = *((_BYTE *)v106 + v294[7]);
          *((_BYTE *)v105 + v294[8]) = *((_BYTE *)v106 + v294[8]);
          *((_BYTE *)v105 + v294[9]) = *((_BYTE *)v106 + v294[9]);
          *((_BYTE *)v105 + v294[10]) = *((_BYTE *)v106 + v294[10]);
          v324 = v294[11];
          v325 = *(void **)((char *)v106 + v324);
          *(void **)((char *)v105 + v324) = v325;
          v326 = v325;
          v158 = v105;
          v159 = v316;
          v160 = 0;
          goto LABEL_191;
        case 1:
          v530 = v22;
          v123 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v517 = v109;
          v525 = v5;
          switch(swift_getEnumCaseMultiPayload(v106, v123))
          {
            case 1u:
              v124 = *v106;
              *v105 = *v106;
              v125 = v124;
              v126 = v105;
              v127 = v123;
              v128 = 1;
              goto LABEL_134;
            case 2u:
              v368 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v105, v106, v368);
              v126 = v105;
              v127 = v123;
              v128 = 2;
              goto LABEL_134;
            case 3u:
              v369 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v105, v106, v369);
              v126 = v105;
              v127 = v123;
              v128 = 3;
              goto LABEL_134;
            case 4u:
              v370 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v105, v106, v370);
              v126 = v105;
              v127 = v123;
              v128 = 4;
              goto LABEL_134;
            case 5u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v105, v106, v371);
              v126 = v105;
              v127 = v123;
              v128 = 5;
              goto LABEL_134;
            case 6u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v105, v106, v372);
              v126 = v105;
              v127 = v123;
              v128 = 6;
              goto LABEL_134;
            case 8u:
              v373 = *v106;
              *v105 = *v106;
              v374 = v373;
              v126 = v105;
              v127 = v123;
              v128 = 8;
              goto LABEL_134;
            case 9u:
              v375 = *v106;
              *v105 = *v106;
              v376 = v375;
              v126 = v105;
              v127 = v123;
              v128 = 9;
LABEL_134:
              swift_storeEnumTagMultiPayload(v126, v127, v128);
              break;
            default:
              memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
              break;
          }
          v377 = v530;
          v378 = v530[5];
          v379 = (char *)v105 + v378;
          v380 = (char *)v106 + v378;
          if (*(void **)((char *)v106 + v378 + 8))
          {
            v509 = v105;
            v514 = v107;
            *(_QWORD *)v379 = *(_QWORD *)v380;
            v381 = *((_QWORD *)v380 + 1);
            *((_QWORD *)v379 + 1) = v381;
            v382 = (void *)*((_QWORD *)v380 + 2);
            v383 = *((_QWORD *)v380 + 3);
            v384 = *((_QWORD *)v380 + 4);
            v385 = *((_QWORD *)v380 + 5);
            v386 = *((_QWORD *)v380 + 6);
            v387 = *((_QWORD *)v380 + 7);
            v388 = v380[64];
            swift_bridgeObjectRetain(v381);
            sub_10003E1F0(v382, v383, v384, v385, v386, v387, v388);
            *((_QWORD *)v379 + 2) = v382;
            *((_QWORD *)v379 + 3) = v383;
            *((_QWORD *)v379 + 4) = v384;
            *((_QWORD *)v379 + 5) = v385;
            *((_QWORD *)v379 + 6) = v386;
            *((_QWORD *)v379 + 7) = v387;
            v379[64] = v388;
            v379[65] = v380[65];
            v379[66] = v380[66];
            v379[67] = v380[67];
            v379[68] = v380[68];
            v389 = v380[120];
            if (v389 == 255)
            {
              v390 = *(_OWORD *)(v380 + 72);
              v391 = *(_OWORD *)(v380 + 88);
              v392 = *(_OWORD *)(v380 + 104);
              v379[120] = v380[120];
              *(_OWORD *)(v379 + 88) = v391;
              *(_OWORD *)(v379 + 104) = v392;
              *(_OWORD *)(v379 + 72) = v390;
            }
            else
            {
              v400 = (void *)*((_QWORD *)v380 + 9);
              v401 = *((_QWORD *)v380 + 10);
              v402 = *((_QWORD *)v380 + 11);
              v403 = *((_QWORD *)v380 + 12);
              v404 = *((_QWORD *)v380 + 13);
              v405 = *((_QWORD *)v380 + 14);
              v406 = v389 & 1;
              sub_10002B764(v400, v401, v402, v403, v404, v405, v389 & 1);
              *((_QWORD *)v379 + 9) = v400;
              *((_QWORD *)v379 + 10) = v401;
              *((_QWORD *)v379 + 11) = v402;
              *((_QWORD *)v379 + 12) = v403;
              *((_QWORD *)v379 + 13) = v404;
              *((_QWORD *)v379 + 14) = v405;
              v379[120] = v406;
            }
            v399 = v517;
            v5 = v525;
            v105 = v509;
            v107 = v514;
            v379[121] = v380[121];
            v377 = v530;
          }
          else
          {
            v393 = *(_OWORD *)v380;
            v394 = *((_OWORD *)v380 + 1);
            v395 = *((_OWORD *)v380 + 3);
            *((_OWORD *)v379 + 2) = *((_OWORD *)v380 + 2);
            *((_OWORD *)v379 + 3) = v395;
            *(_OWORD *)v379 = v393;
            *((_OWORD *)v379 + 1) = v394;
            v396 = *((_OWORD *)v380 + 4);
            v397 = *((_OWORD *)v380 + 5);
            v398 = *((_OWORD *)v380 + 6);
            *(_OWORD *)(v379 + 106) = *(_OWORD *)(v380 + 106);
            *((_OWORD *)v379 + 5) = v397;
            *((_OWORD *)v379 + 6) = v398;
            *((_OWORD *)v379 + 4) = v396;
            v399 = v109;
          }
          *((_BYTE *)v105 + v377[6]) = *((_BYTE *)v106 + v377[6]);
          *((_BYTE *)v105 + v377[7]) = *((_BYTE *)v106 + v377[7]);
          *((_BYTE *)v105 + v377[8]) = *((_BYTE *)v106 + v377[8]);
          *((_BYTE *)v105 + v377[9]) = *((_BYTE *)v106 + v377[9]);
          *((_BYTE *)v105 + v377[10]) = *((_BYTE *)v106 + v377[10]);
          v407 = v377[11];
          v408 = *(void **)((char *)v106 + v407);
          *(void **)((char *)v105 + v407) = v408;
          v409 = v408;
          v410 = 1;
          swift_storeEnumTagMultiPayload(v105, v399, 1);
          goto LABEL_228;
        case 2:
          v129 = *v106;
          *v105 = *v106;
          v130 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v131 = (void **)((char *)v105 + v130);
          v132 = (void **)((char *)v106 + v130);
          v133 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v134 = *(_QWORD *)(v133 - 8);
          v135 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v134 + 48);
          v136 = v129;
          if (v135(v132, 1, v133))
          {
            v137 = sub_10002A750(&qword_100644980);
            memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v132, v133))
            {
              case 1u:
                v223 = *v132;
                *v131 = *v132;
                v224 = v223;
                v225 = v131;
                v226 = v133;
                v227 = 1;
                goto LABEL_166;
              case 2u:
                v452 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v452 - 8) + 16))(v131, v132, v452);
                v225 = v131;
                v226 = v133;
                v227 = 2;
                goto LABEL_166;
              case 3u:
                v453 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v453 - 8) + 16))(v131, v132, v453);
                v225 = v131;
                v226 = v133;
                v227 = 3;
                goto LABEL_166;
              case 4u:
                v454 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v454 - 8) + 16))(v131, v132, v454);
                v225 = v131;
                v226 = v133;
                v227 = 4;
                goto LABEL_166;
              case 5u:
                v455 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v455 - 8) + 16))(v131, v132, v455);
                v225 = v131;
                v226 = v133;
                v227 = 5;
                goto LABEL_166;
              case 6u:
                v456 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v456 - 8) + 16))(v131, v132, v456);
                v225 = v131;
                v226 = v133;
                v227 = 6;
                goto LABEL_166;
              case 8u:
                v457 = *v132;
                *v131 = *v132;
                v458 = v457;
                v225 = v131;
                v226 = v133;
                v227 = 8;
                goto LABEL_166;
              case 9u:
                v459 = *v132;
                *v131 = *v132;
                v460 = v459;
                v225 = v131;
                v226 = v133;
                v227 = 9;
LABEL_166:
                swift_storeEnumTagMultiPayload(v225, v226, v227);
                break;
              default:
                memcpy(v131, v132, *(_QWORD *)(v134 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
          }
          v158 = v105;
          v159 = v109;
          v160 = 2;
          goto LABEL_191;
        case 3:
          v138 = *v106;
          *v105 = *v106;
          v139 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v140 = (void **)((char *)v105 + v139);
          v141 = (void **)((char *)v106 + v139);
          v142 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v143 = *(_QWORD *)(v142 - 8);
          v144 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v143 + 48);
          v145 = v138;
          if (v144(v141, 1, v142))
          {
            v146 = sub_10002A750(&qword_100644980);
            memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v141, v142))
            {
              case 1u:
                v228 = *v141;
                *v140 = *v141;
                v229 = v228;
                v230 = v140;
                v231 = v142;
                v232 = 1;
                goto LABEL_177;
              case 2u:
                v461 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v461 - 8) + 16))(v140, v141, v461);
                v230 = v140;
                v231 = v142;
                v232 = 2;
                goto LABEL_177;
              case 3u:
                v462 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v462 - 8) + 16))(v140, v141, v462);
                v230 = v140;
                v231 = v142;
                v232 = 3;
                goto LABEL_177;
              case 4u:
                v463 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v463 - 8) + 16))(v140, v141, v463);
                v230 = v140;
                v231 = v142;
                v232 = 4;
                goto LABEL_177;
              case 5u:
                v464 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v140, v141, v464);
                v230 = v140;
                v231 = v142;
                v232 = 5;
                goto LABEL_177;
              case 6u:
                v465 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v465 - 8) + 16))(v140, v141, v465);
                v230 = v140;
                v231 = v142;
                v232 = 6;
                goto LABEL_177;
              case 8u:
                v466 = *v141;
                *v140 = *v141;
                v467 = v466;
                v230 = v140;
                v231 = v142;
                v232 = 8;
                goto LABEL_177;
              case 9u:
                v468 = *v141;
                *v140 = *v141;
                v469 = v468;
                v230 = v140;
                v231 = v142;
                v232 = 9;
LABEL_177:
                swift_storeEnumTagMultiPayload(v230, v231, v232);
                break;
              default:
                memcpy(v140, v141, *(_QWORD *)(v143 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
          }
          v158 = v105;
          v159 = v109;
          v160 = 3;
          goto LABEL_191;
        case 4:
          v147 = *v106;
          *v105 = *v106;
          v148 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v149 = (void **)((char *)v105 + v148);
          v150 = (void **)((char *)v106 + v148);
          v151 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v152 = *(_QWORD *)(v151 - 8);
          v153 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v152 + 48);
          v154 = v147;
          if (v153(v150, 1, v151))
          {
            v155 = sub_10002A750(&qword_100644980);
            memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v150, v151))
            {
              case 1u:
                v233 = *v150;
                *v149 = *v150;
                v234 = v233;
                v235 = v149;
                v236 = v151;
                v237 = 1;
                goto LABEL_188;
              case 2u:
                v470 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v470 - 8) + 16))(v149, v150, v470);
                v235 = v149;
                v236 = v151;
                v237 = 2;
                goto LABEL_188;
              case 3u:
                v471 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v471 - 8) + 16))(v149, v150, v471);
                v235 = v149;
                v236 = v151;
                v237 = 3;
                goto LABEL_188;
              case 4u:
                v472 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v472 - 8) + 16))(v149, v150, v472);
                v235 = v149;
                v236 = v151;
                v237 = 4;
                goto LABEL_188;
              case 5u:
                v473 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v473 - 8) + 16))(v149, v150, v473);
                v235 = v149;
                v236 = v151;
                v237 = 5;
                goto LABEL_188;
              case 6u:
                v474 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v474 - 8) + 16))(v149, v150, v474);
                v235 = v149;
                v236 = v151;
                v237 = 6;
                goto LABEL_188;
              case 8u:
                v475 = *v150;
                *v149 = *v150;
                v476 = v475;
                v235 = v149;
                v236 = v151;
                v237 = 8;
                goto LABEL_188;
              case 9u:
                v477 = *v150;
                *v149 = *v150;
                v478 = v477;
                v235 = v149;
                v236 = v151;
                v237 = 9;
LABEL_188:
                swift_storeEnumTagMultiPayload(v235, v236, v237);
                break;
              default:
                memcpy(v149, v150, *(_QWORD *)(v152 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
          }
          v158 = v105;
          v159 = v109;
          v160 = 4;
          goto LABEL_191;
        case 5:
          *v105 = *v106;
          *((_BYTE *)v105 + 8) = *((_BYTE *)v106 + 8);
          *((_BYTE *)v105 + 9) = *((_BYTE *)v106 + 9);
          *((_BYTE *)v105 + 10) = *((_BYTE *)v106 + 10);
          v156 = v106[2];
          v105[2] = v156;
          v157 = v156;
          v158 = v105;
          v159 = v109;
          v160 = 5;
          goto LABEL_191;
        case 6:
          v213 = *v106;
          *v105 = *v106;
          v214 = v213;
          v158 = v105;
          v159 = v109;
          v160 = 6;
          goto LABEL_191;
        case 7:
          v518 = v109;
          v161 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v162 = *(_QWORD *)(v161 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v162 + 48))(v106, 1, v161))
          {
            v163 = sub_10002A750(&qword_100644600);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
          }
          else
          {
            v238 = *v106;
            *v105 = *v106;
            v239 = *(int *)(v161 + 20);
            v532 = (char *)v105 + v239;
            v240 = (char *)v106 + v239;
            v241 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v242 = v107;
            v243 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v241 - 8) + 16);
            v244 = swift_bridgeObjectRetain(v238);
            v243(v532, v240, v241, v244);
            v107 = v242;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v162 + 56))(v105, 0, 1, v161);
          }
          v245 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v246 = (void **)((char *)v105 + v245);
          v247 = (void **)((char *)v106 + v245);
          if (v247[1])
          {
            *v246 = *v247;
            v248 = v247[1];
            v246[1] = v248;
            v249 = (void *)v247[2];
            v246[2] = v249;
            swift_bridgeObjectRetain(v248);
            v250 = v249;
          }
          else
          {
            v279 = *(_OWORD *)v247;
            v246[2] = v247[2];
            *(_OWORD *)v246 = v279;
          }
          v158 = v105;
          v159 = v518;
          v160 = 7;
          goto LABEL_191;
        case 8:
          v215 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v216 = *(_QWORD *)(v215 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v216 + 48))(v106, 1, v215))
          {
            v217 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
          }
          else
          {
            v281 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(v105, v106, v281);
            *((_BYTE *)v105 + *(int *)(v215 + 20)) = *((_BYTE *)v106 + *(int *)(v215 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v216 + 56))(v105, 0, 1, v215);
          }
          v282 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v105 + *(int *)(v282 + 20)) = *(void **)((char *)v106 + *(int *)(v282 + 20));
          v158 = v105;
          v159 = v109;
          v160 = 8;
          goto LABEL_191;
        case 9:
          *(_BYTE *)v105 = *(_BYTE *)v106;
          v164 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v165 = (char *)v105 + v164;
          v166 = (char *)v106 + v164;
          v167 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v165, v166, v167);
          v158 = v105;
          v159 = v109;
          v160 = 9;
LABEL_191:
          swift_storeEnumTagMultiPayload(v158, v159, v160);
          break;
        default:
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          break;
      }
      v410 = 1;
    }
    else
    {
      switch(v110)
      {
        case 0:
          v529 = v22;
          v117 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v524 = v5;
          v511 = v107;
          switch(swift_getEnumCaseMultiPayload(v106, v117))
          {
            case 1u:
              v118 = *v106;
              *v105 = *v106;
              v119 = v118;
              v120 = v105;
              v121 = v117;
              v122 = 1;
              goto LABEL_118;
            case 2u:
              v327 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v105, v106, v327);
              v120 = v105;
              v121 = v117;
              v122 = 2;
              goto LABEL_118;
            case 3u:
              v328 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v105, v106, v328);
              v120 = v105;
              v121 = v117;
              v122 = 3;
              goto LABEL_118;
            case 4u:
              v329 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v105, v106, v329);
              v120 = v105;
              v121 = v117;
              v122 = 4;
              goto LABEL_118;
            case 5u:
              v330 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v105, v106, v330);
              v120 = v105;
              v121 = v117;
              v122 = 5;
              goto LABEL_118;
            case 6u:
              v331 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v105, v106, v331);
              v120 = v105;
              v121 = v117;
              v122 = 6;
              goto LABEL_118;
            case 8u:
              v332 = *v106;
              *v105 = *v106;
              v333 = v332;
              v120 = v105;
              v121 = v117;
              v122 = 8;
              goto LABEL_118;
            case 9u:
              v334 = *v106;
              *v105 = *v106;
              v335 = v334;
              v120 = v105;
              v121 = v117;
              v122 = 9;
LABEL_118:
              swift_storeEnumTagMultiPayload(v120, v121, v122);
              break;
            default:
              memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
              break;
          }
          v336 = v529;
          v337 = v529[5];
          v338 = (char *)v105 + v337;
          v339 = (char *)v106 + v337;
          if (*(void **)((char *)v106 + v337 + 8))
          {
            v508 = v105;
            v520 = v109;
            *(_QWORD *)v338 = *(_QWORD *)v339;
            v340 = *((_QWORD *)v339 + 1);
            *((_QWORD *)v338 + 1) = v340;
            v341 = (void *)*((_QWORD *)v339 + 2);
            v342 = *((_QWORD *)v339 + 3);
            v343 = *((_QWORD *)v339 + 4);
            v344 = *((_QWORD *)v339 + 5);
            v345 = *((_QWORD *)v339 + 6);
            v346 = *((_QWORD *)v339 + 7);
            v347 = v339[64];
            swift_bridgeObjectRetain(v340);
            sub_10003E1F0(v341, v342, v343, v344, v345, v346, v347);
            *((_QWORD *)v338 + 2) = v341;
            *((_QWORD *)v338 + 3) = v342;
            *((_QWORD *)v338 + 4) = v343;
            *((_QWORD *)v338 + 5) = v344;
            *((_QWORD *)v338 + 6) = v345;
            *((_QWORD *)v338 + 7) = v346;
            v338[64] = v347;
            v338[65] = v339[65];
            v338[66] = v339[66];
            v338[67] = v339[67];
            v338[68] = v339[68];
            v348 = v339[120];
            if (v348 == 255)
            {
              v349 = *(_OWORD *)(v339 + 72);
              v350 = *(_OWORD *)(v339 + 88);
              v351 = *(_OWORD *)(v339 + 104);
              v338[120] = v339[120];
              *(_OWORD *)(v338 + 88) = v350;
              *(_OWORD *)(v338 + 104) = v351;
              *(_OWORD *)(v338 + 72) = v349;
            }
            else
            {
              v358 = (void *)*((_QWORD *)v339 + 9);
              v359 = *((_QWORD *)v339 + 10);
              v360 = *((_QWORD *)v339 + 11);
              v361 = *((_QWORD *)v339 + 12);
              v362 = *((_QWORD *)v339 + 13);
              v363 = *((_QWORD *)v339 + 14);
              v364 = v348 & 1;
              sub_10002B764(v358, v359, v360, v361, v362, v363, v348 & 1);
              *((_QWORD *)v338 + 9) = v358;
              *((_QWORD *)v338 + 10) = v359;
              *((_QWORD *)v338 + 11) = v360;
              *((_QWORD *)v338 + 12) = v361;
              *((_QWORD *)v338 + 13) = v362;
              *((_QWORD *)v338 + 14) = v363;
              v338[120] = v364;
            }
            v109 = v520;
            v5 = v524;
            v105 = v508;
            v107 = v511;
            v338[121] = v339[121];
            v336 = v529;
          }
          else
          {
            v352 = *(_OWORD *)v339;
            v353 = *((_OWORD *)v339 + 1);
            v354 = *((_OWORD *)v339 + 3);
            *((_OWORD *)v338 + 2) = *((_OWORD *)v339 + 2);
            *((_OWORD *)v338 + 3) = v354;
            *(_OWORD *)v338 = v352;
            *((_OWORD *)v338 + 1) = v353;
            v355 = *((_OWORD *)v339 + 4);
            v356 = *((_OWORD *)v339 + 5);
            v357 = *((_OWORD *)v339 + 6);
            *(_OWORD *)(v338 + 106) = *(_OWORD *)(v339 + 106);
            *((_OWORD *)v338 + 5) = v356;
            *((_OWORD *)v338 + 6) = v357;
            *((_OWORD *)v338 + 4) = v355;
          }
          *((_BYTE *)v105 + v336[6]) = *((_BYTE *)v106 + v336[6]);
          *((_BYTE *)v105 + v336[7]) = *((_BYTE *)v106 + v336[7]);
          *((_BYTE *)v105 + v336[8]) = *((_BYTE *)v106 + v336[8]);
          *((_BYTE *)v105 + v336[9]) = *((_BYTE *)v106 + v336[9]);
          *((_BYTE *)v105 + v336[10]) = *((_BYTE *)v106 + v336[10]);
          v365 = v336[11];
          v366 = *(void **)((char *)v106 + v365);
          *(void **)((char *)v105 + v365) = v366;
          v367 = v366;
          v203 = v105;
          v204 = v109;
          v205 = 0;
          goto LABEL_226;
        case 1:
          v531 = v22;
          v168 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v526 = v5;
          v512 = v107;
          switch(swift_getEnumCaseMultiPayload(v106, v168))
          {
            case 1u:
              v169 = *v106;
              *v105 = *v106;
              v170 = v169;
              v171 = v105;
              v172 = v168;
              v173 = 1;
              goto LABEL_150;
            case 2u:
              v411 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v411 - 8) + 16))(v105, v106, v411);
              v171 = v105;
              v172 = v168;
              v173 = 2;
              goto LABEL_150;
            case 3u:
              v412 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v105, v106, v412);
              v171 = v105;
              v172 = v168;
              v173 = 3;
              goto LABEL_150;
            case 4u:
              v413 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v413 - 8) + 16))(v105, v106, v413);
              v171 = v105;
              v172 = v168;
              v173 = 4;
              goto LABEL_150;
            case 5u:
              v414 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v414 - 8) + 16))(v105, v106, v414);
              v171 = v105;
              v172 = v168;
              v173 = 5;
              goto LABEL_150;
            case 6u:
              v415 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v415 - 8) + 16))(v105, v106, v415);
              v171 = v105;
              v172 = v168;
              v173 = 6;
              goto LABEL_150;
            case 8u:
              v416 = *v106;
              *v105 = *v106;
              v417 = v416;
              v171 = v105;
              v172 = v168;
              v173 = 8;
              goto LABEL_150;
            case 9u:
              v418 = *v106;
              *v105 = *v106;
              v419 = v418;
              v171 = v105;
              v172 = v168;
              v173 = 9;
LABEL_150:
              swift_storeEnumTagMultiPayload(v171, v172, v173);
              break;
            default:
              memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
              break;
          }
          v420 = v531;
          v421 = v531[5];
          v422 = (char *)v105 + v421;
          v423 = (char *)v106 + v421;
          if (*(void **)((char *)v106 + v421 + 8))
          {
            v510 = v105;
            v521 = v109;
            *(_QWORD *)v422 = *(_QWORD *)v423;
            v424 = *((_QWORD *)v423 + 1);
            *((_QWORD *)v422 + 1) = v424;
            v425 = (void *)*((_QWORD *)v423 + 2);
            v426 = *((_QWORD *)v423 + 3);
            v427 = *((_QWORD *)v423 + 4);
            v428 = *((_QWORD *)v423 + 5);
            v429 = *((_QWORD *)v423 + 6);
            v430 = *((_QWORD *)v423 + 7);
            v431 = v423[64];
            swift_bridgeObjectRetain(v424);
            sub_10003E1F0(v425, v426, v427, v428, v429, v430, v431);
            *((_QWORD *)v422 + 2) = v425;
            *((_QWORD *)v422 + 3) = v426;
            *((_QWORD *)v422 + 4) = v427;
            *((_QWORD *)v422 + 5) = v428;
            *((_QWORD *)v422 + 6) = v429;
            *((_QWORD *)v422 + 7) = v430;
            v422[64] = v431;
            v422[65] = v423[65];
            v422[66] = v423[66];
            v422[67] = v423[67];
            v422[68] = v423[68];
            v432 = v423[120];
            if (v432 == 255)
            {
              v433 = *(_OWORD *)(v423 + 72);
              v434 = *(_OWORD *)(v423 + 88);
              v435 = *(_OWORD *)(v423 + 104);
              v422[120] = v423[120];
              *(_OWORD *)(v422 + 88) = v434;
              *(_OWORD *)(v422 + 104) = v435;
              *(_OWORD *)(v422 + 72) = v433;
            }
            else
            {
              v442 = (void *)*((_QWORD *)v423 + 9);
              v443 = *((_QWORD *)v423 + 10);
              v444 = *((_QWORD *)v423 + 11);
              v445 = *((_QWORD *)v423 + 12);
              v446 = *((_QWORD *)v423 + 13);
              v447 = *((_QWORD *)v423 + 14);
              v448 = v432 & 1;
              sub_10002B764(v442, v443, v444, v445, v446, v447, v432 & 1);
              *((_QWORD *)v422 + 9) = v442;
              *((_QWORD *)v422 + 10) = v443;
              *((_QWORD *)v422 + 11) = v444;
              *((_QWORD *)v422 + 12) = v445;
              *((_QWORD *)v422 + 13) = v446;
              *((_QWORD *)v422 + 14) = v447;
              v422[120] = v448;
            }
            v109 = v521;
            v5 = v526;
            v105 = v510;
            v107 = v512;
            v422[121] = v423[121];
            v420 = v531;
          }
          else
          {
            v436 = *(_OWORD *)v423;
            v437 = *((_OWORD *)v423 + 1);
            v438 = *((_OWORD *)v423 + 3);
            *((_OWORD *)v422 + 2) = *((_OWORD *)v423 + 2);
            *((_OWORD *)v422 + 3) = v438;
            *(_OWORD *)v422 = v436;
            *((_OWORD *)v422 + 1) = v437;
            v439 = *((_OWORD *)v423 + 4);
            v440 = *((_OWORD *)v423 + 5);
            v441 = *((_OWORD *)v423 + 6);
            *(_OWORD *)(v422 + 106) = *(_OWORD *)(v423 + 106);
            *((_OWORD *)v422 + 5) = v440;
            *((_OWORD *)v422 + 6) = v441;
            *((_OWORD *)v422 + 4) = v439;
          }
          *((_BYTE *)v105 + v420[6]) = *((_BYTE *)v106 + v420[6]);
          *((_BYTE *)v105 + v420[7]) = *((_BYTE *)v106 + v420[7]);
          *((_BYTE *)v105 + v420[8]) = *((_BYTE *)v106 + v420[8]);
          *((_BYTE *)v105 + v420[9]) = *((_BYTE *)v106 + v420[9]);
          *((_BYTE *)v105 + v420[10]) = *((_BYTE *)v106 + v420[10]);
          v449 = v420[11];
          v450 = *(void **)((char *)v106 + v449);
          *(void **)((char *)v105 + v449) = v450;
          v451 = v450;
          v203 = v105;
          v204 = v109;
          v205 = 1;
          goto LABEL_226;
        case 2:
          v174 = *v106;
          *v105 = *v106;
          v175 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v176 = (void **)((char *)v105 + v175);
          v177 = (void **)((char *)v106 + v175);
          v178 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v179 = *(_QWORD *)(v178 - 8);
          v180 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v179 + 48);
          v181 = v174;
          if (v180(v177, 1, v178))
          {
            v182 = sub_10002A750(&qword_100644980);
            memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v177, v178))
            {
              case 1u:
                v251 = *v177;
                *v176 = *v177;
                v252 = v251;
                v253 = v176;
                v254 = v178;
                v255 = 1;
                goto LABEL_201;
              case 2u:
                v479 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v479 - 8) + 16))(v176, v177, v479);
                v253 = v176;
                v254 = v178;
                v255 = 2;
                goto LABEL_201;
              case 3u:
                v480 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v480 - 8) + 16))(v176, v177, v480);
                v253 = v176;
                v254 = v178;
                v255 = 3;
                goto LABEL_201;
              case 4u:
                v481 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v481 - 8) + 16))(v176, v177, v481);
                v253 = v176;
                v254 = v178;
                v255 = 4;
                goto LABEL_201;
              case 5u:
                v482 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v482 - 8) + 16))(v176, v177, v482);
                v253 = v176;
                v254 = v178;
                v255 = 5;
                goto LABEL_201;
              case 6u:
                v483 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v483 - 8) + 16))(v176, v177, v483);
                v253 = v176;
                v254 = v178;
                v255 = 6;
                goto LABEL_201;
              case 8u:
                v484 = *v177;
                *v176 = *v177;
                v485 = v484;
                v253 = v176;
                v254 = v178;
                v255 = 8;
                goto LABEL_201;
              case 9u:
                v486 = *v177;
                *v176 = *v177;
                v487 = v486;
                v253 = v176;
                v254 = v178;
                v255 = 9;
LABEL_201:
                swift_storeEnumTagMultiPayload(v253, v254, v255);
                break;
              default:
                memcpy(v176, v177, *(_QWORD *)(v179 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v179 + 56))(v176, 0, 1, v178);
          }
          v203 = v105;
          v204 = v109;
          v205 = 2;
          goto LABEL_226;
        case 3:
          v183 = *v106;
          *v105 = *v106;
          v184 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v185 = (void **)((char *)v105 + v184);
          v186 = (void **)((char *)v106 + v184);
          v187 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v188 = *(_QWORD *)(v187 - 8);
          v189 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v188 + 48);
          v190 = v183;
          if (v189(v186, 1, v187))
          {
            v191 = sub_10002A750(&qword_100644980);
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v186, v187))
            {
              case 1u:
                v256 = *v186;
                *v185 = *v186;
                v257 = v256;
                v258 = v185;
                v259 = v187;
                v260 = 1;
                goto LABEL_212;
              case 2u:
                v488 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v488 - 8) + 16))(v185, v186, v488);
                v258 = v185;
                v259 = v187;
                v260 = 2;
                goto LABEL_212;
              case 3u:
                v489 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v489 - 8) + 16))(v185, v186, v489);
                v258 = v185;
                v259 = v187;
                v260 = 3;
                goto LABEL_212;
              case 4u:
                v490 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v490 - 8) + 16))(v185, v186, v490);
                v258 = v185;
                v259 = v187;
                v260 = 4;
                goto LABEL_212;
              case 5u:
                v491 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v491 - 8) + 16))(v185, v186, v491);
                v258 = v185;
                v259 = v187;
                v260 = 5;
                goto LABEL_212;
              case 6u:
                v492 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(v185, v186, v492);
                v258 = v185;
                v259 = v187;
                v260 = 6;
                goto LABEL_212;
              case 8u:
                v493 = *v186;
                *v185 = *v186;
                v494 = v493;
                v258 = v185;
                v259 = v187;
                v260 = 8;
                goto LABEL_212;
              case 9u:
                v495 = *v186;
                *v185 = *v186;
                v496 = v495;
                v258 = v185;
                v259 = v187;
                v260 = 9;
LABEL_212:
                swift_storeEnumTagMultiPayload(v258, v259, v260);
                break;
              default:
                memcpy(v185, v186, *(_QWORD *)(v188 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
          }
          v203 = v105;
          v204 = v109;
          v205 = 3;
          goto LABEL_226;
        case 4:
          v192 = *v106;
          *v105 = *v106;
          v193 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v194 = (void **)((char *)v105 + v193);
          v195 = (void **)((char *)v106 + v193);
          v196 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v197 = *(_QWORD *)(v196 - 8);
          v198 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v197 + 48);
          v199 = v192;
          if (v198(v195, 1, v196))
          {
            v200 = sub_10002A750(&qword_100644980);
            memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v195, v196))
            {
              case 1u:
                v261 = *v195;
                *v194 = *v195;
                v262 = v261;
                v263 = v194;
                v264 = v196;
                v265 = 1;
                goto LABEL_223;
              case 2u:
                v497 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v497 - 8) + 16))(v194, v195, v497);
                v263 = v194;
                v264 = v196;
                v265 = 2;
                goto LABEL_223;
              case 3u:
                v498 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v498 - 8) + 16))(v194, v195, v498);
                v263 = v194;
                v264 = v196;
                v265 = 3;
                goto LABEL_223;
              case 4u:
                v499 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v499 - 8) + 16))(v194, v195, v499);
                v263 = v194;
                v264 = v196;
                v265 = 4;
                goto LABEL_223;
              case 5u:
                v500 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v500 - 8) + 16))(v194, v195, v500);
                v263 = v194;
                v264 = v196;
                v265 = 5;
                goto LABEL_223;
              case 6u:
                v501 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v501 - 8) + 16))(v194, v195, v501);
                v263 = v194;
                v264 = v196;
                v265 = 6;
                goto LABEL_223;
              case 8u:
                v502 = *v195;
                *v194 = *v195;
                v503 = v502;
                v263 = v194;
                v264 = v196;
                v265 = 8;
                goto LABEL_223;
              case 9u:
                v504 = *v195;
                *v194 = *v195;
                v505 = v504;
                v263 = v194;
                v264 = v196;
                v265 = 9;
LABEL_223:
                swift_storeEnumTagMultiPayload(v263, v264, v265);
                break;
              default:
                memcpy(v194, v195, *(_QWORD *)(v197 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
          }
          v203 = v105;
          v204 = v109;
          v205 = 4;
          goto LABEL_226;
        case 5:
          *v105 = *v106;
          *((_BYTE *)v105 + 8) = *((_BYTE *)v106 + 8);
          *((_BYTE *)v105 + 9) = *((_BYTE *)v106 + 9);
          *((_BYTE *)v105 + 10) = *((_BYTE *)v106 + 10);
          v201 = v106[2];
          v105[2] = v201;
          v202 = v201;
          v203 = v105;
          v204 = v109;
          v205 = 5;
          goto LABEL_226;
        case 6:
          v218 = *v106;
          *v105 = *v106;
          v219 = v218;
          v203 = v105;
          v204 = v109;
          v205 = 6;
          goto LABEL_226;
        case 7:
          v519 = v109;
          v206 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v207 = *(_QWORD *)(v206 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v207 + 48))(v106, 1, v206))
          {
            v208 = sub_10002A750(&qword_100644600);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
          }
          else
          {
            v266 = *v106;
            *v105 = *v106;
            v267 = *(int *)(v206 + 20);
            v533 = (char *)v105 + v267;
            v268 = (char *)v106 + v267;
            v269 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v270 = v107;
            v271 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v269 - 8) + 16);
            v272 = swift_bridgeObjectRetain(v266);
            v271(v533, v268, v269, v272);
            v107 = v270;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v207 + 56))(v105, 0, 1, v206);
          }
          v273 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v274 = (void **)((char *)v105 + v273);
          v275 = (void **)((char *)v106 + v273);
          if (v275[1])
          {
            *v274 = *v275;
            v276 = v275[1];
            v274[1] = v276;
            v277 = (void *)v275[2];
            v274[2] = v277;
            swift_bridgeObjectRetain(v276);
            v278 = v277;
          }
          else
          {
            v280 = *(_OWORD *)v275;
            v274[2] = v275[2];
            *(_OWORD *)v274 = v280;
          }
          v203 = v105;
          v204 = v519;
          v205 = 7;
          goto LABEL_226;
        case 8:
          v220 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v221 = *(_QWORD *)(v220 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v221 + 48))(v106, 1, v220))
          {
            v222 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            v283 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(v105, v106, v283);
            *((_BYTE *)v105 + *(int *)(v220 + 20)) = *((_BYTE *)v106 + *(int *)(v220 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v221 + 56))(v105, 0, 1, v220);
          }
          v284 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v105 + *(int *)(v284 + 20)) = *(void **)((char *)v106 + *(int *)(v284 + 20));
          v203 = v105;
          v204 = v109;
          v205 = 8;
          goto LABEL_226;
        case 9:
          *(_BYTE *)v105 = *(_BYTE *)v106;
          v209 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v210 = (char *)v105 + v209;
          v211 = (char *)v106 + v209;
          v212 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(v210, v211, v212);
          v203 = v105;
          v204 = v109;
          v205 = 9;
LABEL_226:
          swift_storeEnumTagMultiPayload(v203, v204, v205);
          break;
        default:
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          break;
      }
      v410 = 0;
    }
LABEL_228:
    swift_storeEnumTagMultiPayload(v105, v107, v410);
  }
  return v5;
}

uint64_t sub_100227BF8(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRListColors.Color - 1) + 8))();
  return a1;
}

uint64_t sub_100227C2C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRRemindersListViewModel.SectionHeaderTitle - 1) + 8))();
  return a1;
}

char *sub_100227C60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 2u:
      v7 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 2;
      goto LABEL_8;
    case 3u:
      v11 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v8 = a1;
      v9 = v6;
      v10 = 3;
      goto LABEL_8;
    case 4u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v8 = a1;
      v9 = v6;
      v10 = 4;
      goto LABEL_8;
    case 5u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v8 = a1;
      v9 = v6;
      v10 = 5;
      goto LABEL_8;
    case 6u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v8 = a1;
      v9 = v6;
      v10 = 6;
LABEL_8:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
  v21 = *((_OWORD *)v18 + 6);
  v22 = *((_OWORD *)v18 + 4);
  *((_OWORD *)v17 + 5) = *((_OWORD *)v18 + 5);
  *((_OWORD *)v17 + 6) = v21;
  *((_OWORD *)v17 + 4) = v22;
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  v23 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v26);
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v29 = swift_getEnumCaseMultiPayload(v25, v28);
  if (EnumCaseMultiPayload == 1)
  {
    switch(v29)
    {
      case 0:
        switch(swift_getEnumCaseMultiPayload(v25, v6))
        {
          case 2u:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v24, v25, v30);
            v31 = v24;
            v32 = v6;
            v33 = 2;
            goto LABEL_69;
          case 3u:
            v144 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v24, v25, v144);
            v31 = v24;
            v32 = v6;
            v33 = 3;
            goto LABEL_69;
          case 4u:
            v145 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v24, v25, v145);
            v31 = v24;
            v32 = v6;
            v33 = 4;
            goto LABEL_69;
          case 5u:
            v146 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v24, v25, v146);
            v31 = v24;
            v32 = v6;
            v33 = 5;
            goto LABEL_69;
          case 6u:
            v147 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v24, v25, v147);
            v31 = v24;
            v32 = v6;
            v33 = 6;
LABEL_69:
            swift_storeEnumTagMultiPayload(v31, v32, v33);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v148 = v15[5];
        v149 = &v24[v148];
        v150 = &v25[v148];
        v151 = *((_OWORD *)v150 + 1);
        *(_OWORD *)v149 = *(_OWORD *)v150;
        *((_OWORD *)v149 + 1) = v151;
        v152 = *((_OWORD *)v150 + 3);
        *((_OWORD *)v149 + 2) = *((_OWORD *)v150 + 2);
        *((_OWORD *)v149 + 3) = v152;
        *(_OWORD *)(v149 + 106) = *(_OWORD *)(v150 + 106);
        v153 = *((_OWORD *)v150 + 6);
        v154 = *((_OWORD *)v150 + 4);
        *((_OWORD *)v149 + 5) = *((_OWORD *)v150 + 5);
        *((_OWORD *)v149 + 6) = v153;
        *((_OWORD *)v149 + 4) = v154;
        v24[v15[6]] = v25[v15[6]];
        v24[v15[7]] = v25[v15[7]];
        v24[v15[8]] = v25[v15[8]];
        v24[v15[9]] = v25[v15[9]];
        v24[v15[10]] = v25[v15[10]];
        *(_QWORD *)&v24[v15[11]] = *(_QWORD *)&v25[v15[11]];
        v67 = v24;
        v68 = v28;
        v69 = 0;
        goto LABEL_116;
      case 1:
        switch(swift_getEnumCaseMultiPayload(v25, v6))
        {
          case 2u:
            v38 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v24, v25, v38);
            v39 = v24;
            v40 = v6;
            v41 = 2;
            goto LABEL_83;
          case 3u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v24, v25, v166);
            v39 = v24;
            v40 = v6;
            v41 = 3;
            goto LABEL_83;
          case 4u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v24, v25, v167);
            v39 = v24;
            v40 = v6;
            v41 = 4;
            goto LABEL_83;
          case 5u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v24, v25, v168);
            v39 = v24;
            v40 = v6;
            v41 = 5;
            goto LABEL_83;
          case 6u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v24, v25, v169);
            v39 = v24;
            v40 = v6;
            v41 = 6;
LABEL_83:
            swift_storeEnumTagMultiPayload(v39, v40, v41);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v170 = v15[5];
        v171 = &v24[v170];
        v172 = &v25[v170];
        v173 = *((_OWORD *)v172 + 1);
        *(_OWORD *)v171 = *(_OWORD *)v172;
        *((_OWORD *)v171 + 1) = v173;
        v174 = *((_OWORD *)v172 + 3);
        *((_OWORD *)v171 + 2) = *((_OWORD *)v172 + 2);
        *((_OWORD *)v171 + 3) = v174;
        *(_OWORD *)(v171 + 106) = *(_OWORD *)(v172 + 106);
        v175 = *((_OWORD *)v172 + 6);
        v176 = *((_OWORD *)v172 + 4);
        *((_OWORD *)v171 + 5) = *((_OWORD *)v172 + 5);
        *((_OWORD *)v171 + 6) = v175;
        *((_OWORD *)v171 + 4) = v176;
        v24[v15[6]] = v25[v15[6]];
        v24[v15[7]] = v25[v15[7]];
        v24[v15[8]] = v25[v15[8]];
        v24[v15[9]] = v25[v15[9]];
        v24[v15[10]] = v25[v15[10]];
        *(_QWORD *)&v24[v15[11]] = *(_QWORD *)&v25[v15[11]];
        v177 = 1;
        swift_storeEnumTagMultiPayload(v24, v28, 1);
        goto LABEL_144;
      case 2:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v42 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v43 = &v24[v42];
        v44 = &v25[v42];
        v45 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v44, 1, v6))
        {
          v46 = sub_10002A750(&qword_100644980);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v44, v6))
          {
            case 2u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v43, v44, v102);
              v103 = v43;
              v104 = v6;
              v105 = 2;
              goto LABEL_97;
            case 3u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v43, v44, v189);
              v103 = v43;
              v104 = v6;
              v105 = 3;
              goto LABEL_97;
            case 4u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v43, v44, v190);
              v103 = v43;
              v104 = v6;
              v105 = 4;
              goto LABEL_97;
            case 5u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v43, v44, v191);
              v103 = v43;
              v104 = v6;
              v105 = 5;
              goto LABEL_97;
            case 6u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v43, v44, v192);
              v103 = v43;
              v104 = v6;
              v105 = 6;
LABEL_97:
              swift_storeEnumTagMultiPayload(v103, v104, v105);
              break;
            default:
              memcpy(v43, v44, *(_QWORD *)(v45 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v43, 0, 1, v6);
        }
        v67 = v24;
        v68 = v28;
        v69 = 2;
        goto LABEL_116;
      case 3:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v48 = &v24[v47];
        v49 = &v25[v47];
        v50 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v49, 1, v6))
        {
          v51 = sub_10002A750(&qword_100644980);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v49, v6))
          {
            case 2u:
              v106 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v48, v49, v106);
              v107 = v48;
              v108 = v6;
              v109 = 2;
              goto LABEL_105;
            case 3u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v48, v49, v193);
              v107 = v48;
              v108 = v6;
              v109 = 3;
              goto LABEL_105;
            case 4u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v48, v49, v194);
              v107 = v48;
              v108 = v6;
              v109 = 4;
              goto LABEL_105;
            case 5u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v48, v49, v195);
              v107 = v48;
              v108 = v6;
              v109 = 5;
              goto LABEL_105;
            case 6u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v48, v49, v196);
              v107 = v48;
              v108 = v6;
              v109 = 6;
LABEL_105:
              swift_storeEnumTagMultiPayload(v107, v108, v109);
              break;
            default:
              memcpy(v48, v49, *(_QWORD *)(v50 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v6);
        }
        v67 = v24;
        v68 = v28;
        v69 = 3;
        goto LABEL_116;
      case 4:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v52 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v53 = &v24[v52];
        v54 = &v25[v52];
        v55 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v54, 1, v6))
        {
          v56 = sub_10002A750(&qword_100644980);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v54, v6))
          {
            case 2u:
              v110 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v53, v54, v110);
              v111 = v53;
              v112 = v6;
              v113 = 2;
              goto LABEL_113;
            case 3u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v53, v54, v197);
              v111 = v53;
              v112 = v6;
              v113 = 3;
              goto LABEL_113;
            case 4u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v53, v54, v198);
              v111 = v53;
              v112 = v6;
              v113 = 4;
              goto LABEL_113;
            case 5u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v53, v54, v199);
              v111 = v53;
              v112 = v6;
              v113 = 5;
              goto LABEL_113;
            case 6u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v53, v54, v200);
              v111 = v53;
              v112 = v6;
              v113 = 6;
LABEL_113:
              swift_storeEnumTagMultiPayload(v111, v112, v113);
              break;
            default:
              memcpy(v53, v54, *(_QWORD *)(v55 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v6);
        }
        v67 = v24;
        v68 = v28;
        v69 = 4;
        goto LABEL_116;
      case 7:
        v57 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v25, 1, v57))
        {
          v59 = sub_10002A750(&qword_100644600);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v24 = *(_QWORD *)v25;
          v114 = *(int *)(v57 + 20);
          v115 = &v24[v114];
          v116 = &v25[v114];
          v117 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v24, 0, 1, v57);
        }
        v118 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v119 = &v24[v118];
        v120 = &v25[v118];
        *(_OWORD *)v119 = *(_OWORD *)v120;
        *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
        v67 = v24;
        v68 = v28;
        v69 = 7;
        goto LABEL_116;
      case 8:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v25, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v121 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v24, v25, v121);
          v24[*(int *)(v60 + 20)] = v25[*(int *)(v60 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v24, 0, 1, v60);
        }
        v122 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&v24[*(int *)(v122 + 20)] = *(_QWORD *)&v25[*(int *)(v122 + 20)];
        v67 = v24;
        v68 = v28;
        v69 = 8;
        goto LABEL_116;
      case 9:
        *v24 = *v25;
        v63 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v64 = &v24[v63];
        v65 = &v25[v63];
        v66 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
        v67 = v24;
        v68 = v28;
        v69 = 9;
LABEL_116:
        swift_storeEnumTagMultiPayload(v67, v68, v69);
        break;
      default:
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        break;
    }
    v177 = 1;
  }
  else
  {
    switch(v29)
    {
      case 0:
        switch(swift_getEnumCaseMultiPayload(v25, v6))
        {
          case 2u:
            v34 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v24, v25, v34);
            v35 = v24;
            v36 = v6;
            v37 = 2;
            goto LABEL_76;
          case 3u:
            v155 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v24, v25, v155);
            v35 = v24;
            v36 = v6;
            v37 = 3;
            goto LABEL_76;
          case 4u:
            v156 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v24, v25, v156);
            v35 = v24;
            v36 = v6;
            v37 = 4;
            goto LABEL_76;
          case 5u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v24, v25, v157);
            v35 = v24;
            v36 = v6;
            v37 = 5;
            goto LABEL_76;
          case 6u:
            v158 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v24, v25, v158);
            v35 = v24;
            v36 = v6;
            v37 = 6;
LABEL_76:
            swift_storeEnumTagMultiPayload(v35, v36, v37);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v159 = v15[5];
        v160 = &v24[v159];
        v161 = &v25[v159];
        v162 = *((_OWORD *)v161 + 1);
        *(_OWORD *)v160 = *(_OWORD *)v161;
        *((_OWORD *)v160 + 1) = v162;
        v163 = *((_OWORD *)v161 + 3);
        *((_OWORD *)v160 + 2) = *((_OWORD *)v161 + 2);
        *((_OWORD *)v160 + 3) = v163;
        *(_OWORD *)(v160 + 106) = *(_OWORD *)(v161 + 106);
        v164 = *((_OWORD *)v161 + 6);
        v165 = *((_OWORD *)v161 + 4);
        *((_OWORD *)v160 + 5) = *((_OWORD *)v161 + 5);
        *((_OWORD *)v160 + 6) = v164;
        *((_OWORD *)v160 + 4) = v165;
        v24[v15[6]] = v25[v15[6]];
        v24[v15[7]] = v25[v15[7]];
        v24[v15[8]] = v25[v15[8]];
        v24[v15[9]] = v25[v15[9]];
        v24[v15[10]] = v25[v15[10]];
        *(_QWORD *)&v24[v15[11]] = *(_QWORD *)&v25[v15[11]];
        v99 = v24;
        v100 = v28;
        v101 = 0;
        goto LABEL_142;
      case 1:
        switch(swift_getEnumCaseMultiPayload(v25, v6))
        {
          case 2u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v24, v25, v70);
            v71 = v24;
            v72 = v6;
            v73 = 2;
            goto LABEL_90;
          case 3u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v24, v25, v178);
            v71 = v24;
            v72 = v6;
            v73 = 3;
            goto LABEL_90;
          case 4u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v24, v25, v179);
            v71 = v24;
            v72 = v6;
            v73 = 4;
            goto LABEL_90;
          case 5u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v24, v25, v180);
            v71 = v24;
            v72 = v6;
            v73 = 5;
            goto LABEL_90;
          case 6u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v24, v25, v181);
            v71 = v24;
            v72 = v6;
            v73 = 6;
LABEL_90:
            swift_storeEnumTagMultiPayload(v71, v72, v73);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        v182 = v15[5];
        v183 = &v24[v182];
        v184 = &v25[v182];
        v185 = *((_OWORD *)v184 + 1);
        *(_OWORD *)v183 = *(_OWORD *)v184;
        *((_OWORD *)v183 + 1) = v185;
        v186 = *((_OWORD *)v184 + 3);
        *((_OWORD *)v183 + 2) = *((_OWORD *)v184 + 2);
        *((_OWORD *)v183 + 3) = v186;
        *(_OWORD *)(v183 + 106) = *(_OWORD *)(v184 + 106);
        v187 = *((_OWORD *)v184 + 6);
        v188 = *((_OWORD *)v184 + 4);
        *((_OWORD *)v183 + 5) = *((_OWORD *)v184 + 5);
        *((_OWORD *)v183 + 6) = v187;
        *((_OWORD *)v183 + 4) = v188;
        v24[v15[6]] = v25[v15[6]];
        v24[v15[7]] = v25[v15[7]];
        v24[v15[8]] = v25[v15[8]];
        v24[v15[9]] = v25[v15[9]];
        v24[v15[10]] = v25[v15[10]];
        *(_QWORD *)&v24[v15[11]] = *(_QWORD *)&v25[v15[11]];
        v99 = v24;
        v100 = v28;
        v101 = 1;
        goto LABEL_142;
      case 2:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v74 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v75 = &v24[v74];
        v76 = &v25[v74];
        v77 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v76, 1, v6))
        {
          v78 = sub_10002A750(&qword_100644980);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v76, v6))
          {
            case 2u:
              v123 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v75, v76, v123);
              v124 = v75;
              v125 = v6;
              v126 = 2;
              goto LABEL_123;
            case 3u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v75, v76, v201);
              v124 = v75;
              v125 = v6;
              v126 = 3;
              goto LABEL_123;
            case 4u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v75, v76, v202);
              v124 = v75;
              v125 = v6;
              v126 = 4;
              goto LABEL_123;
            case 5u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v75, v76, v203);
              v124 = v75;
              v125 = v6;
              v126 = 5;
              goto LABEL_123;
            case 6u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v75, v76, v204);
              v124 = v75;
              v125 = v6;
              v126 = 6;
LABEL_123:
              swift_storeEnumTagMultiPayload(v124, v125, v126);
              break;
            default:
              memcpy(v75, v76, *(_QWORD *)(v77 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v75, 0, 1, v6);
        }
        v99 = v24;
        v100 = v28;
        v101 = 2;
        goto LABEL_142;
      case 3:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v79 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v80 = &v24[v79];
        v81 = &v25[v79];
        v82 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v81, 1, v6))
        {
          v83 = sub_10002A750(&qword_100644980);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v81, v6))
          {
            case 2u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v80, v81, v127);
              v128 = v80;
              v129 = v6;
              v130 = 2;
              goto LABEL_131;
            case 3u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v80, v81, v205);
              v128 = v80;
              v129 = v6;
              v130 = 3;
              goto LABEL_131;
            case 4u:
              v206 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v80, v81, v206);
              v128 = v80;
              v129 = v6;
              v130 = 4;
              goto LABEL_131;
            case 5u:
              v207 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v80, v81, v207);
              v128 = v80;
              v129 = v6;
              v130 = 5;
              goto LABEL_131;
            case 6u:
              v208 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 32))(v80, v81, v208);
              v128 = v80;
              v129 = v6;
              v130 = 6;
LABEL_131:
              swift_storeEnumTagMultiPayload(v128, v129, v130);
              break;
            default:
              memcpy(v80, v81, *(_QWORD *)(v82 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v80, 0, 1, v6);
        }
        v99 = v24;
        v100 = v28;
        v101 = 3;
        goto LABEL_142;
      case 4:
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v84 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v85 = &v24[v84];
        v86 = &v25[v84];
        v87 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v86, 1, v6))
        {
          v88 = sub_10002A750(&qword_100644980);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v86, v6))
          {
            case 2u:
              v131 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v85, v86, v131);
              v132 = v85;
              v133 = v6;
              v134 = 2;
              goto LABEL_139;
            case 3u:
              v209 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v85, v86, v209);
              v132 = v85;
              v133 = v6;
              v134 = 3;
              goto LABEL_139;
            case 4u:
              v210 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v85, v86, v210);
              v132 = v85;
              v133 = v6;
              v134 = 4;
              goto LABEL_139;
            case 5u:
              v211 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v85, v86, v211);
              v132 = v85;
              v133 = v6;
              v134 = 5;
              goto LABEL_139;
            case 6u:
              v212 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v85, v86, v212);
              v132 = v85;
              v133 = v6;
              v134 = 6;
LABEL_139:
              swift_storeEnumTagMultiPayload(v132, v133, v134);
              break;
            default:
              memcpy(v85, v86, *(_QWORD *)(v87 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v85, 0, 1, v6);
        }
        v99 = v24;
        v100 = v28;
        v101 = 4;
        goto LABEL_142;
      case 7:
        v89 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v90 = *(_QWORD *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v25, 1, v89))
        {
          v91 = sub_10002A750(&qword_100644600);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v24 = *(_QWORD *)v25;
          v135 = *(int *)(v89 + 20);
          v136 = &v24[v135];
          v137 = &v25[v135];
          v138 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v24, 0, 1, v89);
        }
        v139 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v140 = &v24[v139];
        v141 = &v25[v139];
        *(_OWORD *)v140 = *(_OWORD *)v141;
        *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);
        v99 = v24;
        v100 = v28;
        v101 = 7;
        goto LABEL_142;
      case 8:
        v92 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v25, 1, v92))
        {
          v94 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v142 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v24, v25, v142);
          v24[*(int *)(v92 + 20)] = v25[*(int *)(v92 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v24, 0, 1, v92);
        }
        v143 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&v24[*(int *)(v143 + 20)] = *(_QWORD *)&v25[*(int *)(v143 + 20)];
        v99 = v24;
        v100 = v28;
        v101 = 8;
        goto LABEL_142;
      case 9:
        *v24 = *v25;
        v95 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v96 = &v24[v95];
        v97 = &v25[v95];
        v98 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
        v99 = v24;
        v100 = v28;
        v101 = 9;
LABEL_142:
        swift_storeEnumTagMultiPayload(v99, v100, v101);
        break;
      default:
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        break;
    }
    v177 = 0;
  }
LABEL_144:
  swift_storeEnumTagMultiPayload(v24, v26, v177);
  return a1;
}

char *sub_10022944C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unsigned __int8 v29;
  int v30;
  int v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 2u:
        v7 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = a1;
        v9 = v6;
        v10 = 2;
        goto LABEL_9;
      case 3u:
        v11 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v8 = a1;
        v9 = v6;
        v10 = 3;
        goto LABEL_9;
      case 4u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v8 = a1;
        v9 = v6;
        v10 = 4;
        goto LABEL_9;
      case 5u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v8 = a1;
        v9 = v6;
        v10 = 5;
        goto LABEL_9;
      case 6u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v8 = a1;
        v9 = v6;
        v10 = 6;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = (uint64_t)&a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a1[v16 + 8];
  if (!v19)
    goto LABEL_17;
  v20 = *((_QWORD *)v18 + 1);
  if (!v20)
  {
    sub_100227C2C(v17);
LABEL_17:
    v33 = *((_OWORD *)v18 + 5);
    *(_OWORD *)(v17 + 64) = *((_OWORD *)v18 + 4);
    *(_OWORD *)(v17 + 80) = v33;
    *(_OWORD *)(v17 + 96) = *((_OWORD *)v18 + 6);
    *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
    v34 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v34;
    v35 = *((_OWORD *)v18 + 3);
    *(_OWORD *)(v17 + 32) = *((_OWORD *)v18 + 2);
    *(_OWORD *)(v17 + 48) = v35;
    goto LABEL_20;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v20;
  swift_bridgeObjectRelease(v19);
  v21 = v18[64];
  v22 = *(void **)(v17 + 16);
  v23 = *(_QWORD *)(v17 + 24);
  v24 = *(_QWORD *)(v17 + 32);
  v25 = *(_QWORD *)(v17 + 40);
  v26 = *(_QWORD *)(v17 + 48);
  v27 = *(_QWORD *)(v17 + 56);
  v28 = *((_OWORD *)v18 + 2);
  *(_OWORD *)(v17 + 16) = *((_OWORD *)v18 + 1);
  *(_OWORD *)(v17 + 32) = v28;
  *(_OWORD *)(v17 + 48) = *((_OWORD *)v18 + 3);
  v29 = *(_BYTE *)(v17 + 64);
  *(_BYTE *)(v17 + 64) = v21;
  sub_10003E2EC(v22, v23, v24, v25, v26, v27, v29);
  *(_WORD *)(v17 + 65) = *(_WORD *)(v18 + 65);
  *(_BYTE *)(v17 + 67) = v18[67];
  *(_BYTE *)(v17 + 68) = v18[68];
  v30 = *(unsigned __int8 *)(v17 + 120);
  if (v30 != 255)
  {
    v31 = v18[120];
    if (v31 != 255)
    {
      v36 = *(void **)(v17 + 72);
      v37 = *(_QWORD *)(v17 + 80);
      v38 = *(_QWORD *)(v17 + 88);
      v39 = *(_QWORD *)(v17 + 96);
      v40 = *(_QWORD *)(v17 + 104);
      v41 = *(_QWORD *)(v17 + 112);
      *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
      *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
      *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 120) = v31 & 1;
      sub_10002B328(v36, v37, v38, v39, v40, v41, v30 & 1);
      goto LABEL_19;
    }
    sub_100227BF8(v17 + 72);
  }
  v32 = *(_OWORD *)(v18 + 88);
  *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
  *(_OWORD *)(v17 + 88) = v32;
  *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
  *(_BYTE *)(v17 + 120) = v18[120];
LABEL_19:
  *(_BYTE *)(v17 + 121) = v18[121];
LABEL_20:
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  v42 = v15[11];
  v43 = *(void **)&a1[v42];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];

  v44 = *(int *)(a3 + 20);
  v45 = *(void **)&a1[v44];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];

  if (a1 != a2)
  {
    v46 = *(int *)(a3 + 24);
    v47 = &a1[v46];
    v48 = &a2[v46];
    sub_10001F544((uint64_t)&a1[v46], type metadata accessor for TTRRemindersListSectionCreationLocation);
    v49 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v48, v49);
    v51 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v52 = swift_getEnumCaseMultiPayload(v48, v51);
    if (EnumCaseMultiPayload == 1)
    {
      switch(v52)
      {
        case 0:
          v53 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v48, v53))
          {
            case 2u:
              v54 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v47, v48, v54);
              v55 = v47;
              v56 = v53;
              v57 = 2;
              goto LABEL_81;
            case 3u:
              v177 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v47, v48, v177);
              v55 = v47;
              v56 = v53;
              v57 = 3;
              goto LABEL_81;
            case 4u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v47, v48, v178);
              v55 = v47;
              v56 = v53;
              v57 = 4;
              goto LABEL_81;
            case 5u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v47, v48, v179);
              v55 = v47;
              v56 = v53;
              v57 = 5;
              goto LABEL_81;
            case 6u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v47, v48, v180);
              v55 = v47;
              v56 = v53;
              v57 = 6;
LABEL_81:
              swift_storeEnumTagMultiPayload(v55, v56, v57);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
              break;
          }
          v181 = v15[5];
          v182 = &v47[v181];
          v183 = &v48[v181];
          v184 = *((_OWORD *)v183 + 1);
          *(_OWORD *)v182 = *(_OWORD *)v183;
          *((_OWORD *)v182 + 1) = v184;
          v185 = *((_OWORD *)v183 + 3);
          *((_OWORD *)v182 + 2) = *((_OWORD *)v183 + 2);
          *((_OWORD *)v182 + 3) = v185;
          *(_OWORD *)(v182 + 106) = *(_OWORD *)(v183 + 106);
          v186 = *((_OWORD *)v183 + 6);
          v187 = *((_OWORD *)v183 + 4);
          *((_OWORD *)v182 + 5) = *((_OWORD *)v183 + 5);
          *((_OWORD *)v182 + 6) = v186;
          *((_OWORD *)v182 + 4) = v187;
          v47[v15[6]] = v48[v15[6]];
          v47[v15[7]] = v48[v15[7]];
          v47[v15[8]] = v48[v15[8]];
          v47[v15[9]] = v48[v15[9]];
          v47[v15[10]] = v48[v15[10]];
          *(_QWORD *)&v47[v15[11]] = *(_QWORD *)&v48[v15[11]];
          v96 = v47;
          v97 = v51;
          v98 = 0;
          goto LABEL_128;
        case 1:
          v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v48, v63))
          {
            case 2u:
              v64 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v47, v48, v64);
              v65 = v47;
              v66 = v63;
              v67 = 2;
              goto LABEL_95;
            case 3u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v47, v48, v199);
              v65 = v47;
              v66 = v63;
              v67 = 3;
              goto LABEL_95;
            case 4u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v47, v48, v200);
              v65 = v47;
              v66 = v63;
              v67 = 4;
              goto LABEL_95;
            case 5u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v47, v48, v201);
              v65 = v47;
              v66 = v63;
              v67 = 5;
              goto LABEL_95;
            case 6u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v47, v48, v202);
              v65 = v47;
              v66 = v63;
              v67 = 6;
LABEL_95:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
              break;
          }
          v203 = v15[5];
          v204 = &v47[v203];
          v205 = &v48[v203];
          v206 = *((_OWORD *)v205 + 1);
          *(_OWORD *)v204 = *(_OWORD *)v205;
          *((_OWORD *)v204 + 1) = v206;
          v207 = *((_OWORD *)v205 + 3);
          *((_OWORD *)v204 + 2) = *((_OWORD *)v205 + 2);
          *((_OWORD *)v204 + 3) = v207;
          *(_OWORD *)(v204 + 106) = *(_OWORD *)(v205 + 106);
          v208 = *((_OWORD *)v205 + 6);
          v209 = *((_OWORD *)v205 + 4);
          *((_OWORD *)v204 + 5) = *((_OWORD *)v205 + 5);
          *((_OWORD *)v204 + 6) = v208;
          *((_OWORD *)v204 + 4) = v209;
          v47[v15[6]] = v48[v15[6]];
          v47[v15[7]] = v48[v15[7]];
          v47[v15[8]] = v48[v15[8]];
          v47[v15[9]] = v48[v15[9]];
          v47[v15[10]] = v48[v15[10]];
          *(_QWORD *)&v47[v15[11]] = *(_QWORD *)&v48[v15[11]];
          v210 = 1;
          swift_storeEnumTagMultiPayload(v47, v51, 1);
          goto LABEL_156;
        case 2:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v68 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v69 = &v47[v68];
          v70 = &v48[v68];
          v71 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
          {
            v73 = sub_10002A750(&qword_100644980);
            memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v70, v71))
            {
              case 2u:
                v135 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v69, v70, v135);
                v136 = v69;
                v137 = v71;
                v138 = 2;
                goto LABEL_109;
              case 3u:
                v222 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v69, v70, v222);
                v136 = v69;
                v137 = v71;
                v138 = 3;
                goto LABEL_109;
              case 4u:
                v223 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v69, v70, v223);
                v136 = v69;
                v137 = v71;
                v138 = 4;
                goto LABEL_109;
              case 5u:
                v224 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32))(v69, v70, v224);
                v136 = v69;
                v137 = v71;
                v138 = 5;
                goto LABEL_109;
              case 6u:
                v225 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 32))(v69, v70, v225);
                v136 = v69;
                v137 = v71;
                v138 = 6;
LABEL_109:
                swift_storeEnumTagMultiPayload(v136, v137, v138);
                break;
              default:
                memcpy(v69, v70, *(_QWORD *)(v72 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
          }
          v96 = v47;
          v97 = v51;
          v98 = 2;
          goto LABEL_128;
        case 3:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v74 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v75 = &v47[v74];
          v76 = &v48[v74];
          v77 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v78 = *(_QWORD *)(v77 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
          {
            v79 = sub_10002A750(&qword_100644980);
            memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v76, v77))
            {
              case 2u:
                v139 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v75, v76, v139);
                v140 = v75;
                v141 = v77;
                v142 = 2;
                goto LABEL_117;
              case 3u:
                v226 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v75, v76, v226);
                v140 = v75;
                v141 = v77;
                v142 = 3;
                goto LABEL_117;
              case 4u:
                v227 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v75, v76, v227);
                v140 = v75;
                v141 = v77;
                v142 = 4;
                goto LABEL_117;
              case 5u:
                v228 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 32))(v75, v76, v228);
                v140 = v75;
                v141 = v77;
                v142 = 5;
                goto LABEL_117;
              case 6u:
                v229 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v75, v76, v229);
                v140 = v75;
                v141 = v77;
                v142 = 6;
LABEL_117:
                swift_storeEnumTagMultiPayload(v140, v141, v142);
                break;
              default:
                memcpy(v75, v76, *(_QWORD *)(v78 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
          }
          v96 = v47;
          v97 = v51;
          v98 = 3;
          goto LABEL_128;
        case 4:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v80 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v81 = &v47[v80];
          v82 = &v48[v80];
          v83 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v84 = *(_QWORD *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
          {
            v85 = sub_10002A750(&qword_100644980);
            memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v82, v83))
            {
              case 2u:
                v143 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v81, v82, v143);
                v144 = v81;
                v145 = v83;
                v146 = 2;
                goto LABEL_125;
              case 3u:
                v230 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v81, v82, v230);
                v144 = v81;
                v145 = v83;
                v146 = 3;
                goto LABEL_125;
              case 4u:
                v231 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v81, v82, v231);
                v144 = v81;
                v145 = v83;
                v146 = 4;
                goto LABEL_125;
              case 5u:
                v232 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v81, v82, v232);
                v144 = v81;
                v145 = v83;
                v146 = 5;
                goto LABEL_125;
              case 6u:
                v233 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 32))(v81, v82, v233);
                v144 = v81;
                v145 = v83;
                v146 = 6;
LABEL_125:
                swift_storeEnumTagMultiPayload(v144, v145, v146);
                break;
              default:
                memcpy(v81, v82, *(_QWORD *)(v84 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
          }
          v96 = v47;
          v97 = v51;
          v98 = 4;
          goto LABEL_128;
        case 7:
          v86 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v87 = *(_QWORD *)(v86 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v48, 1, v86))
          {
            v88 = sub_10002A750(&qword_100644600);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v47 = *(_QWORD *)v48;
            v147 = *(int *)(v86 + 20);
            v148 = &v47[v147];
            v149 = &v48[v147];
            v150 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v47, 0, 1, v86);
          }
          v151 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v152 = &v47[v151];
          v153 = &v48[v151];
          *(_OWORD *)v152 = *(_OWORD *)v153;
          *((_QWORD *)v152 + 2) = *((_QWORD *)v153 + 2);
          v96 = v47;
          v97 = v51;
          v98 = 7;
          goto LABEL_128;
        case 8:
          v89 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v90 = *(_QWORD *)(v89 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v48, 1, v89))
          {
            v91 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          }
          else
          {
            v154 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v47, v48, v154);
            v47[*(int *)(v89 + 20)] = v48[*(int *)(v89 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v47, 0, 1, v89);
          }
          v155 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&v47[*(int *)(v155 + 20)] = *(_QWORD *)&v48[*(int *)(v155 + 20)];
          v96 = v47;
          v97 = v51;
          v98 = 8;
          goto LABEL_128;
        case 9:
          *v47 = *v48;
          v92 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v93 = &v47[v92];
          v94 = &v48[v92];
          v95 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
          v96 = v47;
          v97 = v51;
          v98 = 9;
LABEL_128:
          swift_storeEnumTagMultiPayload(v96, v97, v98);
          break;
        default:
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          break;
      }
      v210 = 1;
    }
    else
    {
      switch(v52)
      {
        case 0:
          v58 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v48, v58))
          {
            case 2u:
              v59 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v47, v48, v59);
              v60 = v47;
              v61 = v58;
              v62 = 2;
              goto LABEL_88;
            case 3u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v47, v48, v188);
              v60 = v47;
              v61 = v58;
              v62 = 3;
              goto LABEL_88;
            case 4u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v47, v48, v189);
              v60 = v47;
              v61 = v58;
              v62 = 4;
              goto LABEL_88;
            case 5u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v47, v48, v190);
              v60 = v47;
              v61 = v58;
              v62 = 5;
              goto LABEL_88;
            case 6u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v47, v48, v191);
              v60 = v47;
              v61 = v58;
              v62 = 6;
LABEL_88:
              swift_storeEnumTagMultiPayload(v60, v61, v62);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
              break;
          }
          v192 = v15[5];
          v193 = &v47[v192];
          v194 = &v48[v192];
          v195 = *((_OWORD *)v194 + 1);
          *(_OWORD *)v193 = *(_OWORD *)v194;
          *((_OWORD *)v193 + 1) = v195;
          v196 = *((_OWORD *)v194 + 3);
          *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
          *((_OWORD *)v193 + 3) = v196;
          *(_OWORD *)(v193 + 106) = *(_OWORD *)(v194 + 106);
          v197 = *((_OWORD *)v194 + 6);
          v198 = *((_OWORD *)v194 + 4);
          *((_OWORD *)v193 + 5) = *((_OWORD *)v194 + 5);
          *((_OWORD *)v193 + 6) = v197;
          *((_OWORD *)v193 + 4) = v198;
          v47[v15[6]] = v48[v15[6]];
          v47[v15[7]] = v48[v15[7]];
          v47[v15[8]] = v48[v15[8]];
          v47[v15[9]] = v48[v15[9]];
          v47[v15[10]] = v48[v15[10]];
          *(_QWORD *)&v47[v15[11]] = *(_QWORD *)&v48[v15[11]];
          v132 = v47;
          v133 = v51;
          v134 = 0;
          goto LABEL_154;
        case 1:
          v99 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v48, v99))
          {
            case 2u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v47, v48, v100);
              v101 = v47;
              v102 = v99;
              v103 = 2;
              goto LABEL_102;
            case 3u:
              v211 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v47, v48, v211);
              v101 = v47;
              v102 = v99;
              v103 = 3;
              goto LABEL_102;
            case 4u:
              v212 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v47, v48, v212);
              v101 = v47;
              v102 = v99;
              v103 = 4;
              goto LABEL_102;
            case 5u:
              v213 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v47, v48, v213);
              v101 = v47;
              v102 = v99;
              v103 = 5;
              goto LABEL_102;
            case 6u:
              v214 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v47, v48, v214);
              v101 = v47;
              v102 = v99;
              v103 = 6;
LABEL_102:
              swift_storeEnumTagMultiPayload(v101, v102, v103);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
              break;
          }
          v215 = v15[5];
          v216 = &v47[v215];
          v217 = &v48[v215];
          v218 = *((_OWORD *)v217 + 1);
          *(_OWORD *)v216 = *(_OWORD *)v217;
          *((_OWORD *)v216 + 1) = v218;
          v219 = *((_OWORD *)v217 + 3);
          *((_OWORD *)v216 + 2) = *((_OWORD *)v217 + 2);
          *((_OWORD *)v216 + 3) = v219;
          *(_OWORD *)(v216 + 106) = *(_OWORD *)(v217 + 106);
          v220 = *((_OWORD *)v217 + 6);
          v221 = *((_OWORD *)v217 + 4);
          *((_OWORD *)v216 + 5) = *((_OWORD *)v217 + 5);
          *((_OWORD *)v216 + 6) = v220;
          *((_OWORD *)v216 + 4) = v221;
          v47[v15[6]] = v48[v15[6]];
          v47[v15[7]] = v48[v15[7]];
          v47[v15[8]] = v48[v15[8]];
          v47[v15[9]] = v48[v15[9]];
          v47[v15[10]] = v48[v15[10]];
          *(_QWORD *)&v47[v15[11]] = *(_QWORD *)&v48[v15[11]];
          v132 = v47;
          v133 = v51;
          v134 = 1;
          goto LABEL_154;
        case 2:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v104 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v105 = &v47[v104];
          v106 = &v48[v104];
          v107 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v108 = *(_QWORD *)(v107 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
          {
            v109 = sub_10002A750(&qword_100644980);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v106, v107))
            {
              case 2u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v105, v106, v156);
                v157 = v105;
                v158 = v107;
                v159 = 2;
                goto LABEL_135;
              case 3u:
                v234 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v105, v106, v234);
                v157 = v105;
                v158 = v107;
                v159 = 3;
                goto LABEL_135;
              case 4u:
                v235 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v105, v106, v235);
                v157 = v105;
                v158 = v107;
                v159 = 4;
                goto LABEL_135;
              case 5u:
                v236 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v105, v106, v236);
                v157 = v105;
                v158 = v107;
                v159 = 5;
                goto LABEL_135;
              case 6u:
                v237 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(v105, v106, v237);
                v157 = v105;
                v158 = v107;
                v159 = 6;
LABEL_135:
                swift_storeEnumTagMultiPayload(v157, v158, v159);
                break;
              default:
                memcpy(v105, v106, *(_QWORD *)(v108 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
          }
          v132 = v47;
          v133 = v51;
          v134 = 2;
          goto LABEL_154;
        case 3:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v110 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v111 = &v47[v110];
          v112 = &v48[v110];
          v113 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v114 = *(_QWORD *)(v113 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
          {
            v115 = sub_10002A750(&qword_100644980);
            memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v112, v113))
            {
              case 2u:
                v160 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v111, v112, v160);
                v161 = v111;
                v162 = v113;
                v163 = 2;
                goto LABEL_143;
              case 3u:
                v238 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(v111, v112, v238);
                v161 = v111;
                v162 = v113;
                v163 = 3;
                goto LABEL_143;
              case 4u:
                v239 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v111, v112, v239);
                v161 = v111;
                v162 = v113;
                v163 = 4;
                goto LABEL_143;
              case 5u:
                v240 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v111, v112, v240);
                v161 = v111;
                v162 = v113;
                v163 = 5;
                goto LABEL_143;
              case 6u:
                v241 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v111, v112, v241);
                v161 = v111;
                v162 = v113;
                v163 = 6;
LABEL_143:
                swift_storeEnumTagMultiPayload(v161, v162, v163);
                break;
              default:
                memcpy(v111, v112, *(_QWORD *)(v114 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
          }
          v132 = v47;
          v133 = v51;
          v134 = 3;
          goto LABEL_154;
        case 4:
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v116 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v117 = &v47[v116];
          v118 = &v48[v116];
          v119 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v120 = *(_QWORD *)(v119 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
          {
            v121 = sub_10002A750(&qword_100644980);
            memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v118, v119))
            {
              case 2u:
                v164 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v117, v118, v164);
                v165 = v117;
                v166 = v119;
                v167 = 2;
                goto LABEL_151;
              case 3u:
                v242 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v117, v118, v242);
                v165 = v117;
                v166 = v119;
                v167 = 3;
                goto LABEL_151;
              case 4u:
                v243 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v117, v118, v243);
                v165 = v117;
                v166 = v119;
                v167 = 4;
                goto LABEL_151;
              case 5u:
                v244 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v117, v118, v244);
                v165 = v117;
                v166 = v119;
                v167 = 5;
                goto LABEL_151;
              case 6u:
                v245 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v117, v118, v245);
                v165 = v117;
                v166 = v119;
                v167 = 6;
LABEL_151:
                swift_storeEnumTagMultiPayload(v165, v166, v167);
                break;
              default:
                memcpy(v117, v118, *(_QWORD *)(v120 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
          }
          v132 = v47;
          v133 = v51;
          v134 = 4;
          goto LABEL_154;
        case 7:
          v122 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v123 = *(_QWORD *)(v122 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v48, 1, v122))
          {
            v124 = sub_10002A750(&qword_100644600);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v47 = *(_QWORD *)v48;
            v168 = *(int *)(v122 + 20);
            v169 = &v47[v168];
            v170 = &v48[v168];
            v171 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v170, v171);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v47, 0, 1, v122);
          }
          v172 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v173 = &v47[v172];
          v174 = &v48[v172];
          *(_OWORD *)v173 = *(_OWORD *)v174;
          *((_QWORD *)v173 + 2) = *((_QWORD *)v174 + 2);
          v132 = v47;
          v133 = v51;
          v134 = 7;
          goto LABEL_154;
        case 8:
          v125 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v126 = *(_QWORD *)(v125 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v48, 1, v125))
          {
            v127 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          }
          else
          {
            v175 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v47, v48, v175);
            v47[*(int *)(v125 + 20)] = v48[*(int *)(v125 + 20)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v47, 0, 1, v125);
          }
          v176 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&v47[*(int *)(v176 + 20)] = *(_QWORD *)&v48[*(int *)(v176 + 20)];
          v132 = v47;
          v133 = v51;
          v134 = 8;
          goto LABEL_154;
        case 9:
          *v47 = *v48;
          v128 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v129 = &v47[v128];
          v130 = &v48[v128];
          v131 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
          v132 = v47;
          v133 = v51;
          v134 = 9;
LABEL_154:
          swift_storeEnumTagMultiPayload(v132, v133, v134);
          break;
        default:
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          break;
      }
      v210 = 0;
    }
LABEL_156:
    swift_storeEnumTagMultiPayload(v47, v49, v210);
  }
  return a1;
}

uint64_t sub_10022ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022ADEC);
}

uint64_t sub_10022ADEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10022AE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022AEA0);
}

uint64_t sub_10022AEA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10022AF44(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for TTRRemindersListViewModel.SectionHeader(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for TTRRemindersListSectionCreationLocation(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIHashtagAssociationNoOpModuleInterface()
{
  return objc_opt_self(_TtC9Reminders41TTRIHashtagAssociationNoOpModuleInterface);
}

uint64_t sub_10022AFF4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_10022B05C, v3, v4);
}

uint64_t sub_10022B05C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10022B08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, int *);
  char *v16;
  objc_class *v17;
  char *v18;
  uint64_t *v19;
  uint64_t v21;
  objc_super v22;
  _BYTE v23[24];

  v2 = sub_10002A750(&qword_100645E90);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v9 = objc_msgSend(v8, "enableAutoCompleteReminders");

  v10 = 0;
  if (v9)
  {
    sub_1000493D8(a1, (uint64_t)v7);
    v11 = type metadata accessor for TTRIReminderCellAutoCompletePresenter(0);
    v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    *(_QWORD *)(v12 + 24) = 0;
    swift_unknownObjectWeakInit(v12 + 16, 0);
    *(_QWORD *)(v12 + 40) = 0;
    swift_unknownObjectWeakInit(v12 + 32, 0);
    v13 = v12 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel;
    v14 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 56);
    v15(v13, 1, 1, v14);
    sub_1000894B8((uint64_t)v7, (uint64_t)v4);
    v4[v14[5]] = 0;
    v16 = &v4[v14[6]];
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    *(_QWORD *)&v4[v14[7]] = _swiftEmptyArrayStorage;
    v15((uint64_t)v4, 0, 1, v14);
    swift_beginAccess(v13, v23, 33, 0);
    sub_10022B2E8((uint64_t)v4, v13);
    swift_endAccess(v23);
    v17 = (objc_class *)type metadata accessor for TTRIReminderCellAutoCompleteViewController();
    v18 = (char *)objc_allocWithZone(v17);
    *(_QWORD *)&v18[OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack] = 0;
    v19 = (uint64_t *)&v18[OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_presenter];
    *v19 = v12;
    v19[1] = (uint64_t)&off_1005F80E8;
    v22.receiver = v18;
    v22.super_class = v17;
    swift_retain();
    v10 = objc_msgSendSuper2(&v22, "init");
    *(_QWORD *)(v12 + 24) = &off_1005F1210;
    swift_unknownObjectWeakAssign(v12 + 16, v10);
  }
  return v10;
}

uint64_t sub_10022B2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100645E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022B330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064DE68);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064DE68);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRDeletionConfirmationUtilities()
{
  return objc_opt_self(_TtC9Reminders32TTRDeletionConfirmationUtilities);
}

uint64_t sub_10022B41C(void *a1, char a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a1;
  v4 = v3;
  if ((a2 & 1) != 0)
  {
    v13._countAndFlagsBits = 0x100000000000001BLL;
    v13._object = (void *)0x800000010056D9D0;
    v14._object = (void *)0x800000010056D9F0;
    v14._countAndFlagsBits = 0xD00000000000002ELL;
    v15 = TTRLocalizedString(_:comment:)(v13, v14);
    v16 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100520250;
    v18 = objc_msgSend(v4, "name");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_1000770A4();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    v22 = String.init(format:_:)(v15._countAndFlagsBits, v15._object, v17);

    swift_bridgeObjectRelease(v15._object);
    return v22;
  }
  else
  {
    v5 = objc_msgSend(v3, "displayName");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    if ((char *)objc_msgSend(v4, "sharingStatus") - 1 >= (char *)3)
    {
      v10 = 0xD000000000000036;
      v11 = 0x800000010056DA20;
      v12 = 0x800000010056DA40;
      v9 = 0x1000000000000015;
    }
    else
    {
      v9 = 0x100000000000001CLL;
      v10 = 0xD000000000000032;
      v11 = 0x800000010056DA80;
      v12 = 0x800000010056DAA0;
    }
    v24 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v9, *(Swift::String *)&v10);
    v25 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v26 = swift_allocObject(v25, 72, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100520250;
    *(_QWORD *)(v26 + 56) = &type metadata for String;
    *(_QWORD *)(v26 + 64) = sub_1000770A4();
    *(_QWORD *)(v26 + 32) = v6;
    *(_QWORD *)(v26 + 40) = v8;
    v27 = String.init(format:_:)(v24._countAndFlagsBits, v24._object, v26);
    swift_bridgeObjectRelease(v24._object);

    return v27;
  }
}

uint64_t sub_10022B660(void *a1, char a2)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  const char *v6;
  Swift::String v7;
  Swift::String v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t countAndFlagsBits;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if ((a2 & 1) != 0)
  {
    v7._countAndFlagsBits = 0x1000000000000058;
    v8._countAndFlagsBits = 0xD000000000000037;
    v7._object = (void *)0x800000010056D630;
    v8._object = (void *)0x800000010056D690;
    return TTRLocalizedString(_:comment:)(v7, v8)._countAndFlagsBits;
  }
  else
  {
    v2 = a1;
    switch((unint64_t)objc_msgSend(v2, "sharingStatus"))
    {
      case 0uLL:
        REMList.ttrGroceryContext.getter(v15);
        v11 = v16;
        if (v16)
        {
          v12 = v17;
          sub_10001413C(v15, v16);
          v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
          sub_100027F10(v15);
          if ((v13 & 1) != 0)
          {
            v4 = 0xD000000000000028;
            v3 = 0xD000000000000036;
            v5 = 0x800000010056D960;
            v6 = "Message for delete alert for a not-shared grocery list";
            goto LABEL_12;
          }
        }
        else
        {
          sub_10022B864((uint64_t)v15);
        }
        v4 = 0xD00000000000002CLL;
        v3 = 0xD00000000000002ELL;
        v5 = 0x800000010056D900;
        v6 = "Message for delete alert for a not-shared list";
        goto LABEL_12;
      case 1uLL:
      case 3uLL:
        v3 = 0xD00000000000002ELL;
        v4 = 0xD00000000000007FLL;
        v5 = 0x800000010056D850;
        v6 = "Message for delete alert for list shared by me";
        goto LABEL_12;
      case 2uLL:
        v3 = 0xD000000000000038;
        v4 = 0xD00000000000008ELL;
        v5 = 0x800000010056D780;
        v6 = "Message for delete alert for list shared by someone else";
LABEL_12:
        v10 = (unint64_t)(v6 - 32) | 0x8000000000000000;
        break;
      default:
        v5 = 0x800000010056D6D0;
        v10 = 0x800000010056D750;
        v4 = 0x1000000000000077;
        v3 = 0xD00000000000002DLL;
        break;
    }
    countAndFlagsBits = TTRLocalizedString(_:comment:)(*(Swift::String *)&v4, *(Swift::String *)&v3)._countAndFlagsBits;

    return countAndFlagsBits;
  }
}

uint64_t sub_10022B864(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100661E80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10022B8A4(uint64_t a1)
{
  unint64_t v1;
  char v2;
  unint64_t v3;
  char v4;
  char v5;
  id v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
LABEL_32:
    v14 = 0;
    v4 = 0;
LABEL_41:
    v15 = 0;
    return v15 | v14 | v4 & 1;
  }
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  LOBYTE(v6) = 0;
  v7 = 0;
  v8 = 0;
  v9 = a1 + 32;
  v17 = a1 + 48;
  v10 = *(_QWORD *)(a1 + 16);
  while (1)
  {
    if ((v2 & 1) != 0 && (v7 & 1) != 0)
    {
LABEL_33:
      v7 = 1;
      v5 = 1;
      v4 = 1;
      if ((v8 & 1) != 0)
        goto LABEL_38;
      goto LABEL_34;
    }
    v11 = v9 + 16 * v3;
    if (*(_BYTE *)(v11 + 8) == 1)
    {
      if (v3 + 1 != v1)
      {
        v12 = 1 - v10;
        v11 = v17 + 16 * v3;
        v3 += 2;
        while (v12 + v3 != 2)
        {
          if ((v2 & 1) != 0)
            goto LABEL_33;
          if ((*(_BYTE *)(v11 + 8) & 1) == 0)
          {
            v7 = 1;
            goto LABEL_15;
          }
          ++v3;
          v11 += 16;
          if (1 - v1 + v3 == 2)
          {
            v7 = 1;
            goto LABEL_37;
          }
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v7 = 1;
      if ((v8 & 1) == 0)
        goto LABEL_34;
LABEL_38:
      if ((v7 & 1) != 0)
      {
        v14 = 0x101000000;
        if ((v6 & 1) == 0)
          goto LABEL_40;
      }
      else
      {
        v14 = (uint64_t)&_mh_execute_header;
        if ((v6 & 1) == 0)
          goto LABEL_40;
      }
      goto LABEL_43;
    }
    ++v3;
LABEL_15:
    v13 = *(id *)v11;
    if ((objc_msgSend(v13, "isGroup") & 1) != 0)
    {

      if (v3 == v1)
        goto LABEL_38;
      v8 = 1;
      goto LABEL_27;
    }
    v6 = objc_msgSend(v13, "sharingStatus");

    if (v6 == (id)1)
      goto LABEL_24;
    if (v6 == (id)3)
    {
      LOBYTE(v6) = 1;
LABEL_24:
      v4 = 1;
      if (v3 == v1)
        break;
      goto LABEL_27;
    }
    if (v6 == (id)2)
    {
      LOBYTE(v6) = 1;
      v5 = 1;
      if (v3 == v1)
        break;
      goto LABEL_27;
    }
    LOBYTE(v6) = 1;
    if (v3 == v1)
      break;
LABEL_27:
    v2 = v4 & v5;
    if (v3 <= v1)
      v10 = v1;
    else
      v10 = v3;
    if (v3 >= v1)
      goto LABEL_31;
  }
LABEL_37:
  if ((v8 & 1) != 0)
    goto LABEL_38;
LABEL_34:
  if ((v7 & 1) != 0)
  {
    v14 = 0x1000000;
    if ((v6 & 1) == 0)
    {
LABEL_40:
      if ((v5 & 1) == 0)
        goto LABEL_41;
      goto LABEL_44;
    }
  }
  else
  {
    v14 = 0;
    if ((v6 & 1) == 0)
      goto LABEL_40;
  }
LABEL_43:
  v14 |= 0x10000uLL;
  if ((v5 & 1) == 0)
    goto LABEL_41;
LABEL_44:
  v15 = 256;
  return v15 | v14 | v4 & 1;
}

uint64_t sub_10022BAC4(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  const char *v13;
  const char *v14;
  unint64_t v15;

  v2 = swift_bridgeObjectRetain(a1);
  v3 = sub_10022B8A4(v2);
  swift_bridgeObjectRelease(a1);
  if ((v3 & 0x10000) != 0)
  {
    if ((v3 & 0x1000000) != 0)
    {
      if ((v3 & 1) == 0)
      {
        if ((v3 & 0x100) != 0)
        {
          v11 = 0xD00000000000008DLL;
          v10 = 0xD00000000000010ALL;
          v12 = 0x800000010056E1C0;
          v13 = "Message for delete group alert in the accounts list. Group has at least one list shared by another user."
                " At least one is a custom smart list.";
        }
        else
        {
          v10 = 0xD000000000000074;
          v11 = 0xD000000000000077;
          v12 = 0x800000010056E0C0;
          v13 = "Message for delete group alert in the accounts list. No lists in group are shared. At least one is a custom smart list.";
        }
        goto LABEL_25;
      }
      if ((v3 & 0x100) != 0)
      {
        v10 = 0x1000000000000117;
        v11 = 0xD0000000000000A9;
        v12 = 0x800000010056E500;
        v13 = "Message for delete group alert in the accounts list. Group has at least one list shared by user and one li"
              "st shared by another user. At least one is a custom smart list.";
        goto LABEL_25;
      }
      v10 = 0xD000000000000108;
      v12 = 0x800000010056E360;
      v14 = "Message for delete group alert in the accounts list. Group has at least one list shared by user. At least on"
            "e is a custom smart list.";
    }
    else
    {
      if ((v3 & 1) != 0)
      {
        if ((v3 & 0x100) == 0)
        {
          v11 = 0xD00000000000007DLL;
          v10 = 0xD0000000000000D3;
          v12 = 0x800000010056DDC0;
          v13 = "Message for delete group alert in the accounts list. Group has at least one list shared by user. None is"
                " a custom smart list.";
          goto LABEL_25;
        }
        v11 = 0xD0000000000000A1;
        v12 = 0x800000010056DF20;
        v15 = 0x800000010056E010;
        v10 = 0x10000000000000E2;
        return TTRLocalizedString(_:comment:)(*(Swift::String *)&v10, *(Swift::String *)&v11)._countAndFlagsBits;
      }
      if ((v3 & 0x100) == 0)
      {
        v10 = 0xD00000000000003FLL;
        v11 = 0xD00000000000006FLL;
        v12 = 0x800000010056DBA0;
        v13 = "Message for delete group alert in the accounts list. No lists in group are shared. None is a custom smart list.";
LABEL_25:
        v15 = (unint64_t)(v13 - 32) | 0x8000000000000000;
        return TTRLocalizedString(_:comment:)(*(Swift::String *)&v10, *(Swift::String *)&v11)._countAndFlagsBits;
      }
      v10 = 0xD0000000000000D5;
      v12 = 0x800000010056DC50;
      v14 = "Message for delete group alert in the accounts list. Group has at least one list shared by another user. Non"
            "e is a custom smart list.";
    }
    v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
    v11 = 0xD000000000000085;
    return TTRLocalizedString(_:comment:)(*(Swift::String *)&v10, *(Swift::String *)&v11)._countAndFlagsBits;
  }
  if ((v3 & 0x1000000) != 0)
  {
    v11 = 0xD000000000000042;
    v10 = 0xD000000000000066;
    v12 = 0x800000010056DAE0;
    v13 = "Message for delete alert for multiple custom smart lists on macOS.";
    goto LABEL_25;
  }
  if (qword_10063D510 != -1)
    swift_once(&qword_10063D510, sub_10022B330);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100012DC4(v4, (uint64_t)qword_10064DE68);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.fault.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Attempted to get deletion confirmation message for deleting a group with no list", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return 0;
}

unint64_t sub_10022BD50(uint64_t a1, char a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  char v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  unint64_t v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v6 = *v3;
  if ((a2 & 1) != 0)
  {
    result = sub_1002AA3B8(a3);
    if ((v11 & 1) == 0)
      return result;
    v12 = result;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v14 = *v4;
    v16 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002AE948();
      v14 = v16;
    }
    sub_1002AD034(v12, v14);
    v9 = *v4;
    *v4 = v14;
  }
  else
  {
    v8 = swift_isUniquelyReferenced_nonNull_native(v6);
    v15 = *v4;
    *v4 = 0x8000000000000000;
    sub_100097030(a1, a3, v8);
    v9 = *v4;
    *v4 = v15;
  }
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_10022BE1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1000073A0(a1, (uint64_t *)&unk_100646680);
    sub_1002ACD6C(a2, (uint64_t)v8);
    sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100646680);
  }
  else
  {
    sub_10001F580(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1000979A8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v17;
    swift_bridgeObjectRelease(v15);
    return sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
}

uint64_t sub_10022BF84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_10002A750(&qword_10064E538);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1000073A0(a1, &qword_10064E538);
    sub_1002ACC0C(a2, (uint64_t)v8);
    sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return sub_1000073A0((uint64_t)v8, &qword_10064E538);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_100097B18((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v17;
    swift_bridgeObjectRelease(v15);
    return sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
}

void sub_10022C0F8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  int v21;

  v4 = v3;
  v5 = qword_10065D8E0;
  v6 = *(char **)(v3 + qword_10065D8E0);
  if (v6)
  {
    v10 = *(void **)&v6[qword_100645F00];
    v11 = v6;
    v12 = objc_msgSend(v10, "indexPathsForSelectedRows");
    if (v12)
    {
      v13 = v12;
      v14 = type metadata accessor for IndexPath(0);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      v16 = v11;
      swift_bridgeObjectRetain(v15);
      v18 = (_QWORD *)sub_10022ED78(v17, (uint64_t)v16);
      swift_bridgeObjectRelease_n(v15, 2);

    }
    else
    {
      v18 = _swiftEmptyArrayStorage;
    }

    v19 = *(void **)(v4 + v5);
    if (v19)
    {
      v20 = v19;
      v21 = a2 & 1;
      sub_1002BC6B0(a1, v21, a3);

      sub_10022DB94(v18, v21);
      swift_bridgeObjectRelease(v18);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10022C230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[12];
  _BYTE v65[26];

  v5 = v4;
  v57 = a4;
  v56 = a3;
  v61 = a2;
  v62 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v62);
  v63 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v60 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (_OWORD *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v50 - v13;
  __chkstk_darwin(v12);
  v54 = (uint64_t)&v50 - v15;
  v16 = sub_10002A750((uint64_t *)&unk_100646680);
  v17 = __chkstk_darwin(v16);
  v59 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v58 = (char *)&v50 - v19;
  v20 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  sub_10002B1E8(a1, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v22, v20) == 1)
  {
    sub_10001F580((uint64_t)v22, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
    v26 = *(int *)(v23 + 20);
    v53 = v25;
    v27 = *(_QWORD *)&v25[v26];
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      v52 = v5;
      v29 = v27 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
      v30 = *(_QWORD *)(v60 + 72);
      v51 = v27;
      swift_bridgeObjectRetain_n(v27, 2);
      v61 = v61;
      do
      {
        sub_10002B1E8(v29, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        if (swift_getEnumCaseMultiPayload(v11, v8) != 1)
        {
          sub_10001F580((uint64_t)v11, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
          __asm { BR              X9 }
        }
        v31 = v11[11];
        v64[10] = v11[10];
        v64[11] = v31;
        *(_OWORD *)v65 = v11[12];
        *(_OWORD *)&v65[10] = *(_OWORD *)((char *)v11 + 202);
        v32 = v11[7];
        v64[6] = v11[6];
        v64[7] = v32;
        v33 = v11[9];
        v64[8] = v11[8];
        v64[9] = v33;
        v34 = v11[3];
        v64[2] = v11[2];
        v64[3] = v34;
        v35 = v11[5];
        v64[4] = v11[4];
        v64[5] = v35;
        v36 = v11[1];
        v64[0] = *v11;
        v64[1] = v36;
        sub_100075FE8((uint64_t)v64);
        sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        v29 += v30;
        --v28;
      }
      while (v28);
      v27 = v51;
      swift_bridgeObjectRelease(v51);
    }
    else
    {
      v42 = swift_bridgeObjectRetain(v27);
    }
    v43 = (uint64_t)v58;
    v44 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v60 + 56))(v58, 1, 1, v8, v42);
    swift_bridgeObjectRelease(v27);
    v45 = v59;
    sub_10001F5C4(v43, v59);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v8);
    v47 = (uint64_t)v53;
    if (v46 == 1)
    {
      sub_1000073A0(v43, (uint64_t *)&unk_100646680);
      sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
      sub_1000073A0(v45, (uint64_t *)&unk_100646680);
    }
    else
    {
      v48 = v45;
      v49 = v54;
      sub_10001F580(v48, v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_10022D354(v55, v49, v56 & 1, v57);
      sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_1000073A0(v43, (uint64_t *)&unk_100646680);
      sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (qword_10063D518 != -1)
      swift_once(&qword_10063D518, sub_10022D2C4);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_100012DC4(v37, (uint64_t)qword_10064DEA8);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.fault.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "selectSmartListItem: invalid item", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

  }
}

void sub_10022CA10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD v59[12];
  _BYTE v60[26];

  v55 = a4;
  v58 = a2;
  v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v57 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (_OWORD *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v50 - v11;
  __chkstk_darwin(v10);
  v52 = (uint64_t)&v50 - v13;
  v14 = sub_10002A750((uint64_t *)&unk_100646680);
  v15 = __chkstk_darwin(v14);
  v56 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v54 = (uint64_t)&v50 - v17;
  v18 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1;
  sub_10002B1E8(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    v51 = a3;
    sub_10001F580((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
    v24 = *(int *)(v21 + 20);
    v25 = *(_QWORD *)&v23[v24];
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v50 = v23;
      v27 = v25 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      v28 = *(_QWORD *)(v57 + 72);
      swift_bridgeObjectRetain_n(v25, 2);
      do
      {
        sub_10002B1E8(v27, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        sub_10002B1E8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        if (swift_getEnumCaseMultiPayload(v9, v6) == 1)
        {
          v29 = v9[11];
          v59[10] = v9[10];
          v59[11] = v29;
          *(_OWORD *)v60 = v9[12];
          *(_OWORD *)&v60[10] = *(_OWORD *)((char *)v9 + 202);
          v30 = v9[7];
          v59[6] = v9[6];
          v59[7] = v30;
          v31 = v9[9];
          v59[8] = v9[8];
          v59[9] = v31;
          v32 = v9[3];
          v59[2] = v9[2];
          v59[3] = v32;
          v33 = v9[5];
          v59[4] = v9[4];
          v59[5] = v33;
          v34 = v9[1];
          v59[0] = *v9;
          v59[1] = v34;
          v35 = static TTRAccountsListsViewModel.List.__derived_struct_equals(_:_:)(v58, v59);
          sub_100075FE8((uint64_t)v59);
          if ((v35 & 1) != 0)
          {
            swift_bridgeObjectRelease(v25);
            v36 = v54;
            sub_10001F580((uint64_t)v12, v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
            v37 = 0;
            v38 = v55;
            goto LABEL_15;
          }
        }
        else
        {
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        }
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        v27 += v28;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease(v25);
      v37 = 1;
      v38 = v55;
      v36 = v54;
LABEL_15:
      v23 = v50;
    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v23[v24]);
      v37 = 1;
      v36 = v54;
      v38 = v55;
    }
    v44 = v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v36, v37, 1, v6);
    swift_bridgeObjectRelease(v25);
    v45 = v56;
    sub_10001F5C4(v36, v56);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v6);
    v47 = v51;
    if (v46 == 1)
    {
      sub_1000073A0(v36, (uint64_t *)&unk_100646680);
      sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
      sub_1000073A0(v45, (uint64_t *)&unk_100646680);
    }
    else
    {
      v48 = v45;
      v49 = v52;
      sub_10001F580(v48, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_10022D354(v53, v49, v47 & 1, v38);
      sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_1000073A0(v36, (uint64_t *)&unk_100646680);
      sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedLists);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (qword_10063D518 != -1)
      swift_once(&qword_10063D518, sub_10022D2C4);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_100012DC4(v39, (uint64_t)qword_10064DEA8);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.fault.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "selectSmartListItem: invalid item", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

  }
}

void sub_10022CF6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v35 = a4;
  v34 = a3;
  v33 = a2;
  v5 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10064E538);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v32 - v15;
  v17 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v17);
  v22 = sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (EnumCaseMultiPayload == 12)
  {
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v22);
    v23 = type metadata accessor for REMHashtagLabelSpecifier(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v10, v33, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v23);
    v25 = v36;
    swift_beginAccess(v36 + qword_10064DED0, v37, 33, 0);
    sub_10022BF84((uint64_t)v10, (uint64_t)v16);
    v26 = swift_endAccess(v37);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v26);
    swift_beginAccess(v25 + qword_10064DED8, v37, 33, 0);
    sub_100481964((uint64_t)v16, (uint64_t)v14);
    swift_endAccess(v37);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v17);
    sub_10022C0F8((uint64_t)v7, v34 & 1, v35);
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640E00);
  }
  else
  {
    if (qword_10063D518 != -1)
      swift_once(&qword_10063D518, sub_10022D2C4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100012DC4(v27, (uint64_t)qword_10064DEA8);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.fault.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "selectHashtagItem: invalid item", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

  }
}

uint64_t sub_10022D2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064DEA8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064DEA8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10022D354(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[24];

  v9 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v16 = __chkstk_darwin(v15);
  v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v19 = __chkstk_darwin(v16);
  v21 = &v27[-v20 - 8];
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v19);
  sub_10002B1E8(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  v22 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 0, 1, v22);
  swift_beginAccess(v4 + qword_10064DEC8, v27, 33, 0);
  sub_10022BE1C((uint64_t)v14, (uint64_t)v21);
  v23 = swift_endAccess(v27);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v23);
  swift_beginAccess(v4 + qword_10064DED8, v27, 33, 0);
  sub_100481964((uint64_t)v21, (uint64_t)v18);
  swift_endAccess(v27);
  sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v24 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
  sub_10022C0F8((uint64_t)v11, a3, a4);
  return sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640E00);
}

void sub_10022D58C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[24];

  v73 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v3);
  v74 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_10064E538);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v72 = (uint64_t)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v70 - v22;
  v75 = a1;
  sub_10002B1E8(a1, (uint64_t)&v70 - v22, v24);
  v25 = 1 << swift_getEnumCaseMultiPayload(v23, v18);
  v26 = (uint64_t)v23;
  if ((v25 & 0x27FD) != 0)
  {
LABEL_2:
    sub_10001F544(v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return;
  }
  if ((v25 & 0x1800) != 0)
  {
    v27 = sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v28 = v75;
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v27);
    v29 = v76;
    swift_beginAccess(v76 + qword_10064DED0, v77, 33, 0);
    sub_1002ACC0C((uint64_t)v14, (uint64_t)v11);
    swift_endAccess(v77);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_1000073A0((uint64_t)v11, &qword_10064E538);
    v71 = qword_10065D8E0;
    v30 = *(void **)(v29 + qword_10065D8E0);
    if (v30)
    {
      v31 = v30;
      v32 = sub_10006B64C();
      v34 = v33;
      v36 = v35;
      v38 = (void *)sub_100070670(v28, v32, v33, v35, v37 & 1);

      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v32);
      v39 = v71;
      if (v38)
      {
        v40 = type metadata accessor for TTRIHashtagCollectionCell(0);
        v41 = swift_dynamicCastClass(v38, v40);
        if (v41)
        {
          static REMHashtagLabelSpecifier.empty.getter(v41);
          TTRIHashtagCollectionCell.setSelection(_:animated:)(v8, v73 & 1);

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
        else
        {

        }
      }
      v56 = *(void **)(v76 + v39);
      if (v56)
      {
        v57 = v56;
        v58 = v74;
        sub_10012334C(v75, v74);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v58, 1, v18) == 1)
        {
          sub_1000073A0(v58, (uint64_t *)&unk_100640E00);
          return;
        }
        v59 = v72;
        sub_10001F580(v58, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v60 = *(void **)(v76 + v39);
        if (v60)
        {
          v61 = v60;
          v62 = sub_10006B64C();
          v64 = v63;
          v66 = v65;
          v68 = (id)sub_1000E937C(v59, v62, v63, v65, v67 & 1);

          swift_bridgeObjectRelease(v66);
          swift_bridgeObjectRelease(v64);
          swift_bridgeObjectRelease(v62);
          if (v68)
          {
            v69 = type metadata accessor for TTRIAccountsListsTagsSectionHeaderView();
            if (swift_dynamicCastClass(v68, v69))
            {
              v68 = v68;
              sub_1002A03A4(1);

            }
          }
          v26 = v59;
          goto LABEL_2;
        }
LABEL_27:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v42 = sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v43 = v75;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v42);
  v44 = v76;
  swift_beginAccess(v76 + qword_10064DEC8, v77, 33, 0);
  sub_1002ACD6C((uint64_t)v14, (uint64_t)v17);
  swift_endAccess(v77);
  sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100646680);
  v45 = *(void **)(v44 + qword_10065D8E0);
  if (!v45)
    goto LABEL_26;
  v46 = v45;
  v47 = sub_10006B64C();
  v49 = v48;
  v51 = v50;
  v53 = (void *)sub_100070670(v43, v47, v48, v50, v52 & 1);

  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v47);
  if (v53)
  {
    v54 = type metadata accessor for TTRIAccountsListsViewPinnedListsCell();
    if (swift_dynamicCastClass(v53, v54))
    {
      v55 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v17, 1, 1, v55);
      sub_10000A7B0((uint64_t)v17, v73 & 1);

      sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100646680);
    }
    else
    {

    }
  }
}

void sub_10022DB20(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t Strong;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)swift_getObjectType(a1, a2);
  v2 = (char *)v4.receiver;
  objc_msgSendSuper2(&v4, "_dynamicUserInterfaceTraitDidChange");
  Strong = swift_unknownObjectWeakLoadStrong(&v2[qword_10064DEC0]);

  if (Strong)
    swift_unknownObjectRelease(Strong);
}

void sub_10022DB94(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  char *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD v87[9];
  char v88[32];

  v76 = a2;
  v75 = a1;
  v3 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v70 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v69 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v69 - v10;
  v12 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v74 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v85 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v69 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v69 - v19;
  v21 = __chkstk_darwin(v18);
  v84 = (uint64_t)&v69 - v22;
  __chkstk_darwin(v21);
  v78 = (uint64_t)&v69 - v23;
  v77 = v2;
  v24 = *(char **)(v2 + qword_10065D8E0);
  if (v24)
  {
    v25 = *(void **)&v24[qword_100645F00];
    v26 = v24;
    v27 = objc_msgSend(v25, "indexPathsForSelectedRows");
    if (v27)
    {
      v28 = v27;
      v29 = type metadata accessor for IndexPath(0);
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

      v31 = v26;
      swift_bridgeObjectRetain(v30);
      v33 = (_QWORD *)sub_10022ED78(v32, (uint64_t)v31);
      v69 = 0;
      swift_bridgeObjectRelease_n(v30, 2);

    }
    else
    {
      v69 = 0;
      v33 = _swiftEmptyArrayStorage;
    }

    v34 = v33[2];
    v86 = v17;
    v35 = v75;
    v79 = v34;
    v80 = v33;
    if (v34)
    {
      v36 = (_QWORD *)(v77 + qword_10064DED8);
      v37 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      v72 = (char *)v33 + v37;
      swift_bridgeObjectRetain(v33);
      v73 = v36;
      swift_beginAccess(v36, v88, 0, 0);
      v38 = 0;
      v71 = (uint64_t)v35 + v37;
      v82 = v11;
      v39 = v78;
      while (1)
      {
        if (v38 >= v33[2])
        {
          __break(1u);
          goto LABEL_37;
        }
        v43 = *(_QWORD *)(v74 + 72);
        v81 = v38;
        v83 = v43;
        sub_10002B1E8((uint64_t)&v72[v43 * v38], v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v44 = *v73;
        swift_bridgeObjectRetain(*v73);
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v45);
        if (*(_QWORD *)(v44 + 16)
          && (Hasher.init(_seed:)(v87, *(_QWORD *)(v44 + 40)),
              TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v87),
              v46 = Hasher._finalize()(),
              v47 = -1 << *(_BYTE *)(v44 + 32),
              v48 = v46 & ~v47,
              ((*(_QWORD *)(v44 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) != 0))
        {
          v49 = ~v47;
          v50 = *(_QWORD *)(v70 + 72);
          while (1)
          {
            sub_10002B1E8(*(_QWORD *)(v44 + 48) + v50 * v48, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            v51 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v9, v82);
            sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            if ((v51 & 1) != 0)
              break;
            v48 = (v48 + 1) & v49;
            if (((*(_QWORD *)(v44 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
              goto LABEL_15;
          }
          swift_bridgeObjectRelease(v44);
          sub_10001F544((uint64_t)v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          v52 = v78;
          sub_10002B1E8(v78, v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v35 = v75;
        }
        else
        {
LABEL_15:
          swift_bridgeObjectRelease(v44);
          sub_10001F544((uint64_t)v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          v52 = v78;
          sub_10002B1E8(v78, v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v35 = v75;
          v53 = v75[2];
          if (v53)
          {
            swift_bridgeObjectRetain(v75);
            v54 = v71;
            while (1)
            {
              v55 = sub_10002B1E8(v54, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              v56 = TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v55);
              TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v56);
              v57 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v9, v6);
              sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              if ((v57 & 1) != 0)
                break;
              v54 += v83;
              if (!--v53)
              {
                swift_bridgeObjectRelease(v35);
                v52 = v78;
                goto LABEL_7;
              }
            }
            swift_bridgeObjectRelease(v35);
            sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            v33 = v80;
            v40 = v78;
            goto LABEL_8;
          }
        }
LABEL_7:
        sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v40 = v52;
        sub_10022E40C(v52, v76 & 1);
        v33 = v80;
LABEL_8:
        v41 = v81 + 1;
        sub_10001F544(v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v38 = v41;
        v34 = v79;
        v42 = v41 == v79;
        v39 = v40;
        if (v42)
        {
          swift_bridgeObjectRelease(v33);
          v17 = v86;
          break;
        }
      }
    }
    v84 = v35[2];
    if (v84)
    {
      v58 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      v59 = *(_QWORD *)(v74 + 72);
      v82 = (char *)v33 + v58;
      v83 = (uint64_t)v35 + v58;
      swift_bridgeObjectRetain(v35);
      v60 = 0;
      do
      {
        sub_10002B1E8(v83 + v59 * v60, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        if (v34)
        {
          swift_bridgeObjectRetain(v33);
          v61 = (uint64_t)v82;
          while (1)
          {
            v62 = v85;
            v63 = sub_10002B1E8(v61, v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            v64 = TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v63);
            TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v64);
            v65 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v9, v6);
            sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            sub_10001F544(v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            if ((v65 & 1) != 0)
              break;
            v61 += v59;
            if (!--v34)
            {
              v33 = v80;
              swift_bridgeObjectRelease(v80);
              v17 = v86;
              v34 = v79;
              goto LABEL_25;
            }
          }
          v33 = v80;
          swift_bridgeObjectRelease(v80);
          v17 = v86;
          v34 = v79;
        }
        else
        {
LABEL_25:
          sub_10022D58C((uint64_t)v17, v76 & 1);
        }
        ++v60;
        sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
      while (v60 != v84);
      swift_bridgeObjectRelease(v33);
      v66 = v75;
    }
    else
    {
      v66 = v33;
    }
    swift_bridgeObjectRelease(v66);
    v67 = (uint64_t *)(v77 + qword_10064DED8);
    swift_beginAccess(v77 + qword_10064DED8, v87, 1, 0);
    v68 = *v67;
    *v67 = (uint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v68);
  }
  else
  {
LABEL_37:
    __break(1u);
  }
}

void sub_10022E2E4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  int v19;

  v3 = v2;
  v4 = qword_10065D8E0;
  v5 = *(char **)(v2 + qword_10065D8E0);
  if (v5)
  {
    v8 = *(void **)&v5[qword_100645F00];
    v9 = v5;
    v10 = objc_msgSend(v8, "indexPathsForSelectedRows");
    if (v10)
    {
      v11 = v10;
      v12 = type metadata accessor for IndexPath(0);
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      v14 = v9;
      swift_bridgeObjectRetain(v13);
      v16 = (_QWORD *)sub_10022ED78(v15, (uint64_t)v14);
      swift_bridgeObjectRelease_n(v13, 2);

    }
    else
    {
      v16 = _swiftEmptyArrayStorage;
    }

    v17 = *(void **)(v3 + v4);
    if (v17)
    {
      v18 = v17;
      v19 = a2 & 1;
      sub_1002BD594(a1, v19);

      sub_10022DB94(v16, v19);
      swift_bridgeObjectRelease(v16);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10022E40C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(_QWORD);
  int v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  const char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE v110[24];

  v103 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v3);
  v104 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v105 = *(_QWORD *)(v5 - 8);
  v106 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v107 = (char *)&v99 - v9;
  v10 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v10);
  v100 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v99 - v16;
  v18 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v101 = (uint64_t)&v99 - v23;
  v24 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v102 = (uint64_t)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v99 - v28;
  v108 = a1;
  sub_10002B1E8(a1, (uint64_t)&v99 - v28, v30);
  v31 = 1 << swift_getEnumCaseMultiPayload(v29, v24);
  v32 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item;
  v33 = (uint64_t)v29;
  if ((v31 & 0x27FD) != 0)
    goto LABEL_2;
  if ((v31 & 0x1800) == 0)
  {
    v62 = sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v62);
    v63 = (uint64_t *)(v109 + qword_10064DEC8);
    swift_beginAccess(v109 + qword_10064DEC8, v110, 32, 0);
    v64 = *v63;
    if (!*(_QWORD *)(*v63 + 16) || (v65 = sub_1002AA6DC((uint64_t)v17), (v66 & 1) == 0))
    {
      swift_endAccess(v110);
      sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (qword_10063D518 != -1)
        swift_once(&qword_10063D518, sub_10022D2C4);
      v80 = type metadata accessor for Logger(0);
      v81 = sub_100012DC4(v80, (uint64_t)qword_10064DEA8);
      v58 = Logger.logObject.getter(v81);
      v59 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v58, v59))
        goto LABEL_29;
      v60 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v60 = 0;
      v61 = "Unable to smart list cell - missing associated predefined smart list type";
      goto LABEL_28;
    }
    sub_10002B1E8(*(_QWORD *)(v64 + 56) + *(_QWORD *)(v19 + 72) * v65, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    v67 = (uint64_t)v22;
    v68 = v101;
    sub_10001F580(v67, v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    swift_endAccess(v110);
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v69 = *(void **)(v109 + qword_10065D8E0);
    if (!v69)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    v70 = v69;
    v71 = sub_10006B64C();
    v73 = v72;
    v75 = v74;
    v77 = (void *)sub_100070670(v108, v71, v72, v74, v76 & 1);

    swift_bridgeObjectRelease(v75);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v71);
    if (v77)
    {
      v78 = type metadata accessor for TTRIAccountsListsViewPinnedListsCell();
      if (swift_dynamicCastClass(v77, v78))
      {
        v79 = v100;
        sub_10002B1E8(v68, v100, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v79, 0, 1, v18);
        sub_10000A7B0(v79, v103 & 1);

        sub_1000073A0(v79, (uint64_t *)&unk_100646680);
        v33 = v68;
        v32 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList;
LABEL_2:
        sub_10001F544(v33, v32);
        return;
      }

    }
    v32 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList;
    v33 = v68;
    goto LABEL_2;
  }
  v34 = sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v34);
  v35 = (uint64_t *)(v109 + qword_10064DED0);
  swift_beginAccess(v109 + qword_10064DED0, v110, 32, 0);
  v36 = *v35;
  if (!*(_QWORD *)(v36 + 16) || (v37 = sub_1002AA6DC((uint64_t)v15), (v38 & 1) == 0))
  {
    swift_endAccess(v110);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if (qword_10063D518 != -1)
      swift_once(&qword_10063D518, sub_10022D2C4);
    v56 = type metadata accessor for Logger(0);
    v57 = sub_100012DC4(v56, (uint64_t)qword_10064DEA8);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v58, v59))
      goto LABEL_29;
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    v61 = "Unable to select hashtag cell - missing associated hashtag selection";
LABEL_28:
    _os_log_impl((void *)&_mh_execute_header, v58, v59, v61, v60, 2u);
    swift_slowDealloc(v60, -1, -1);
LABEL_29:

    return;
  }
  v40 = v105;
  v39 = v106;
  (*(void (**)(char *, unint64_t, uint64_t))(v105 + 16))(v8, *(_QWORD *)(v36 + 56) + *(_QWORD *)(v105 + 72) * v37, v106);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v107, v8, v39);
  swift_endAccess(v110);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v41 = qword_10065D8E0;
  v42 = *(void **)(v109 + qword_10065D8E0);
  if (!v42)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v43 = v42;
  v44 = sub_10006B64C();
  v46 = v45;
  v48 = v47;
  v50 = (void *)sub_100070670(v108, v44, v45, v47, v49 & 1);

  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v44);
  v51 = (uint64_t)v107;
  if (v50)
  {
    v52 = type metadata accessor for TTRIHashtagCollectionCell(0);
    if (swift_dynamicCastClass(v50, v52))
      TTRIHashtagCollectionCell.setSelection(_:animated:)(v51, v103 & 1);

  }
  v53 = *(void **)(v109 + v41);
  if (!v53)
    goto LABEL_41;
  v54 = v53;
  v55 = v104;
  sub_10012334C(v108, v104);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v55, 1, v24) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v51, v39);
    sub_1000073A0(v55, (uint64_t *)&unk_100640E00);
    return;
  }
  v82 = v102;
  sub_10001F580(v55, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v83 = *(void **)(v109 + v41);
  if (!v83)
    goto LABEL_43;
  v84 = v83;
  v85 = sub_10006B64C();
  v87 = v86;
  v89 = v88;
  v91 = (id)sub_1000E937C(v82, v85, v86, v88, v90 & 1);

  swift_bridgeObjectRelease(v89);
  swift_bridgeObjectRelease(v87);
  swift_bridgeObjectRelease(v85);
  if (v91)
  {
    v92 = type metadata accessor for TTRIAccountsListsTagsSectionHeaderView();
    v93 = swift_dynamicCastClass(v91, v92);
    if (v93)
    {
      v94 = v93;
      v91 = v91;
      v95 = sub_1002A0E0C(v51);
      sub_1002A03A4(v95 & 1);
      v96 = *(_QWORD *)(v94 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu);
      if (v96)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v94
                                           + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu));
        v98 = sub_1002A1008(v97, v51);
        swift_bridgeObjectRelease(v96);
        sub_1002A022C((uint64_t)v98);
      }

    }
  }
  sub_10001F544(v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v51, v39);
}

id sub_10022EC30(char *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v6 = &a1[qword_10064DEC0];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&a1[qword_10064DEC8] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&a1[qword_10064DED0] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&a1[qword_10064DED8] = &_swiftEmptySetSingleton;
  v8.receiver = a1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "initWithCoder:", a3);
}

double sub_10022ECCC()
{
  uint64_t v0;
  double result;

  sub_1000381C8(v0 + qword_10064DEC0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064DEC8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064DED0));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064DED8)).n128_u64[0];
  return result;
}

double sub_10022ED18(uint64_t a1)
{
  double result;

  sub_1000381C8(a1 + qword_10064DEC0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10064DEC8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10064DED0));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10064DED8)).n128_u64[0];
  return result;
}

uint64_t sub_10022ED70()
{
  return type metadata accessor for TTRIAccountsListsTreeView(0);
}

uint64_t sub_10022ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[24];
  char v82[24];
  char v83[32];
  _QWORD *v84;

  v5 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v80 = *(_QWORD *)(v78 - 8);
  v8 = __chkstk_darwin(v78);
  v77 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v63 = (uint64_t)&v59 - v10;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(a1 + 16);
  if (v76)
  {
    v61 = v2;
    v75 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v69 = qword_100645F38;
    v79 = a2 + qword_100645F30;
    v18 = *(_QWORD *)(v12 + 72);
    v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v74 = v18;
    v60 = a1;
    swift_bridgeObjectRetain(a1);
    v19 = 0;
    v84 = _swiftEmptyArrayStorage;
    v64 = v11;
    v71 = v17;
    v72 = v12;
    v62 = v7;
    v70 = v14;
    while (1)
    {
      v73(v17, v75 + v74 * v19, v11);
      v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v68(v17, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
      {
        a1 = v60;
        goto LABEL_33;
      }
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
      if (*(_BYTE *)(a2 + v69) == 1)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v20 = type metadata accessor for Logger(0);
        v21 = sub_100012DC4(v20, (uint64_t)qword_100645EC0);
        v22 = Logger.logObject.getter(v21);
        v23 = static os_log_type_t.fault.getter(v22);
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Attempting to read sectionMetadata while it is being modified", v24, 2u);
          v25 = v24;
          v11 = v64;
          swift_slowDealloc(v25, -1, -1);
        }

      }
      v27 = *(_QWORD *)v79;
      v26 = *(_QWORD *)(v79 + 8);
      v28 = *(_QWORD *)(v79 + 16);
      if (*(_QWORD *)v79)
      {
        v29 = *(_QWORD *)v79;
        v30 = *(_QWORD *)(v79 + 8);
        v31 = *(_QWORD *)(v79 + 16);
      }
      else
      {
        v65 = *(unsigned __int8 *)(v79 + 24);
        v66 = v28;
        v67 = v26;
        v32 = sub_10002A750((uint64_t *)&unk_100640E10);
        inited = swift_initStackObject(v32, v83);
        *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
          if (result)
          {
            v54 = result;
            if (result < 1)
            {
              __break(1u);
              return result;
            }
            v55 = &_swiftEmptyArrayStorage[4];
            do
            {
              v56 = *v55++;
              swift_weakAssign(v56 + 56, 0);
              swift_beginAccess(v56 + 64, v81, 1, 0);
              v57 = *(_QWORD *)(v56 + 64);
              *(_QWORD *)(v56 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease(v57);
              --v54;
            }
            while (v54);
          }
        }
        sub_100070F40(inited);
        v29 = v34;
        v30 = v35;
        v31 = v36;
        v38 = v37;
        swift_setDeallocating(inited);
        swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
        v39 = v38 & 1;
        v40 = v79;
        v41 = *(_QWORD *)v79;
        v42 = *(_QWORD *)(v79 + 8);
        v43 = *(_QWORD *)(v79 + 16);
        *(_QWORD *)v79 = v29;
        *(_QWORD *)(v40 + 8) = v30;
        *(_QWORD *)(v40 + 16) = v31;
        *(_BYTE *)(v40 + 24) = v39;
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRetain(v30);
        swift_bridgeObjectRetain(v31);
        sub_1000072F0(v41, v42, v43);
        v7 = v62;
        v11 = v64;
        v26 = v67;
        v28 = v66;
      }
      sub_10002340C(v27, v26, v28);
      v14 = v70;
      v44 = sub_1000F8FE4(v70, v29);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v29);
      if (v44)
      {
        v45 = v44 + *(_QWORD *)(*(_QWORD *)v44 + 144);
        swift_beginAccess(v45, v82, 0, 0);
        sub_10002B1E8(v45, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release(v44);
        v46 = 0;
      }
      else
      {
        v46 = 1;
      }
      v17 = v71;
      v12 = v72;
      v47 = v80;
      v48 = v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v7, v46, 1, v78);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v7, 1, v48) == 1)
      {
        sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640E00);
      }
      else
      {
        v49 = v63;
        sub_10001F580((uint64_t)v7, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_10001F580(v49, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
          v84 = (_QWORD *)sub_1004561DC(0, v84[2] + 1, 1, (unint64_t)v84);
        v51 = v84[2];
        v50 = v84[3];
        if (v51 >= v50 >> 1)
          v84 = (_QWORD *)sub_1004561DC(v50 > 1, v51 + 1, 1, (unint64_t)v84);
        v52 = v84;
        v84[2] = v51 + 1;
        sub_10001F580(v77, (uint64_t)v52+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
      if (++v19 == v76)
      {
        a1 = v60;
        v68(v17, 1, 1, v11);
        goto LABEL_33;
      }
    }
  }
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  swift_bridgeObjectRetain(a1);
  v84 = _swiftEmptyArrayStorage;
  v58(v17, 1, 1, v11);
LABEL_33:
  swift_bridgeObjectRelease(a1);
  return (uint64_t)v84;
}

uint64_t *sub_10022F430(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v12 = (char *)&loc_10022F53C + 4 * word_10052A49E[swift_getEnumCaseMultiPayload(a2, v11)];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v9 = (char *)&loc_10022F4B8 + 4 * word_10052A4BA[swift_getEnumCaseMultiPayload(a2, v8)];
      __asm { BR              X10 }
    }
    v13 = *a2;
    *a1 = *a2;
    swift_bridgeObjectRetain(v13);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

unint64_t sub_100230454(unint64_t result, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11, char a12)
{
  void *v15;
  id v16;
  id v18;

  v15 = (void *)result;
  switch(a12)
  {
    case 2:
      swift_bridgeObjectRetain(a5);
      v18 = v15;
      swift_bridgeObjectRetain(a3);
      sub_100077888(a6, a7);
      return sub_10023054C(a8, a9, a10, a11);
    case 1:
      swift_bridgeObjectRetain(a2);
      return sub_100077888(a3, a4);
    case 0:
      swift_bridgeObjectRetain(a5);
      v16 = v15;
      swift_bridgeObjectRetain(a3);
      return sub_100077888(a6, a7);
  }
  return result;
}

unint64_t sub_10023054C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  unint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return sub_100077888(a3, a4);
  }
  return result;
}

double sub_100230584(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 0u:
        case 7u:
        case 9u:
          v7 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          goto LABEL_24;
        case 1u:
          v12 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
          v13 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
          goto LABEL_21;
        case 2u:
          v14 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
          v15 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v15 + 28) + 8));
          v10 = *(_QWORD *)(a1 + *(int *)(v15 + 40) + 8);
          goto LABEL_23;
        case 3u:
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

          goto LABEL_24;
        case 4u:
        case 5u:

          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
          sub_10002B328(*(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
          sub_10002B318(*(void **)(a1 + 128), *(id *)(a1 + 136), *(_BYTE *)(a1 + 144));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 176));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 184));

          v10 = *(_QWORD *)(a1 + 208);
          goto LABEL_23;
        case 6u:
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

          goto LABEL_24;
        case 8u:
          sub_100076F38(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_BYTE *)(a1 + 88));
          goto LABEL_24;
        case 0xAu:
          v10 = *(_QWORD *)(a1 + 8);
          goto LABEL_23;
        case 0xBu:
          v16 = type metadata accessor for UUID(0);
          v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
          v17(a1, v16);
          v18 = a1 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
          v19 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
            goto LABEL_24;
          v17(v18, v16);
          v10 = *(_QWORD *)(v18 + *(int *)(v19 + 20));
LABEL_23:
          swift_bridgeObjectRelease(v10);
LABEL_24:
          v21 = a1 + *(int *)(sub_10002A750(&qword_100640E98) + 48);
          v22 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
          break;
        case 0xCu:
          v20 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
          v13 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
LABEL_21:
          v10 = *(_QWORD *)(a1 + *(int *)(v13 + 20));
          goto LABEL_23;
        case 0xDu:

          v10 = *(_QWORD *)(a1 + 16);
          goto LABEL_23;
        default:
          goto LABEL_24;
      }
      break;
    case 1:
      v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a1, v8))
      {
        case 0u:
        case 7u:
        case 9u:
          v9 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
          goto LABEL_37;
        case 1u:
          v23 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
          v24 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
          goto LABEL_34;
        case 2u:
          v25 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
          v26 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v26 + 28) + 8));
          v11 = *(_QWORD *)(a1 + *(int *)(v26 + 40) + 8);
          goto LABEL_36;
        case 3u:
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

          goto LABEL_37;
        case 4u:
        case 5u:

          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
          sub_10002B328(*(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
          sub_10002B318(*(void **)(a1 + 128), *(id *)(a1 + 136), *(_BYTE *)(a1 + 144));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 176));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 184));

          v11 = *(_QWORD *)(a1 + 208);
          goto LABEL_36;
        case 6u:
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
          swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

          goto LABEL_37;
        case 8u:
          sub_100076F38(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_BYTE *)(a1 + 88));
          goto LABEL_37;
        case 0xAu:
          v11 = *(_QWORD *)(a1 + 8);
          goto LABEL_36;
        case 0xBu:
          v27 = type metadata accessor for UUID(0);
          v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
          v28(a1, v27);
          v29 = a1 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
          v30 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
            goto LABEL_37;
          v28(v29, v27);
          v11 = *(_QWORD *)(v29 + *(int *)(v30 + 20));
LABEL_36:
          swift_bridgeObjectRelease(v11);
LABEL_37:
          v32 = a1 + *(int *)(sub_10002A750((uint64_t *)&unk_100640EA0) + 48);
          v33 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
          if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
          {

            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 16));
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 48));
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 64));
            sub_10002B328(*(void **)(v32 + 72), *(_QWORD *)(v32 + 80), *(_QWORD *)(v32 + 88), *(_QWORD *)(v32 + 96), *(_QWORD *)(v32 + 104), *(_QWORD *)(v32 + 112), *(_BYTE *)(v32 + 120));
            sub_10002B318(*(void **)(v32 + 128), *(id *)(v32 + 136), *(_BYTE *)(v32 + 144));
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 168));
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 176));
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + 184));

            v5 = *(id *)(v32 + 208);
          }
          else
          {
            v34 = type metadata accessor for UUID(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
            v35 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
            swift_bridgeObjectRelease(*(_QWORD *)(v32 + *(int *)(v35 + 28) + 8));
            v5 = *(id *)(v32 + *(int *)(v35 + 40) + 8);
          }
          break;
        case 0xCu:
          v31 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
          v24 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
LABEL_34:
          v11 = *(_QWORD *)(a1 + *(int *)(v24 + 20));
          goto LABEL_36;
        case 0xDu:

          v11 = *(_QWORD *)(a1 + 16);
          goto LABEL_36;
        default:
          goto LABEL_37;
      }
      goto LABEL_40;
    case 0:
      v5 = *(id *)a1;
LABEL_40:
      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
      break;
  }
  return result;
}

uint64_t *sub_100230BA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    v10 = (char *)&loc_100230C80 + 4 * word_10052A500[swift_getEnumCaseMultiPayload(a2, v9)];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    v8 = (char *)&loc_100230C1C + 4 * word_10052A51C[swift_getEnumCaseMultiPayload(a2, v7)];
    __asm { BR              X10 }
  }
  v11 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v11);
  swift_storeEnumTagMultiPayload(a1, a3, 0);
  return a1;
}

uint64_t *sub_100231B98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v10 = (char *)&loc_100231C90 + 4 * word_10052A538[swift_getEnumCaseMultiPayload(a2, v9)];
      __asm { BR              X10 }
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v8 = (char *)&loc_100231C2C + 4 * word_10052A554[swift_getEnumCaseMultiPayload(a2, v7)];
      __asm { BR              X10 }
    }
    v11 = *a2;
    *a1 = *a2;
    swift_bridgeObjectRetain(v11);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_BYTE *sub_100232E58(_BYTE *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v12))
    {
      case 0u:
        v13 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = a1;
        v15 = v12;
        v16 = 0;
        goto LABEL_33;
      case 1u:
        v33 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, a2, v33);
        v34 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
        *(_QWORD *)&a1[*(int *)(v34 + 20)] = *(_QWORD *)&a2[*(int *)(v34 + 20)];
        v14 = a1;
        v15 = v12;
        v16 = 1;
        goto LABEL_33;
      case 2u:
        v35 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
        v36 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
        a1[v36[5]] = a2[v36[5]];
        *(_QWORD *)&a1[v36[6]] = *(_QWORD *)&a2[v36[6]];
        *(_OWORD *)&a1[v36[7]] = *(_OWORD *)&a2[v36[7]];
        *(_QWORD *)&a1[v36[8]] = *(_QWORD *)&a2[v36[8]];
        a1[v36[9]] = a2[v36[9]];
        *(_OWORD *)&a1[v36[10]] = *(_OWORD *)&a2[v36[10]];
        v14 = a1;
        v15 = v12;
        v16 = 2;
        goto LABEL_33;
      case 7u:
        v37 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(a1, a2, v37);
        v14 = a1;
        v15 = v12;
        v16 = 7;
        goto LABEL_33;
      case 9u:
        v38 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
        v14 = a1;
        v15 = v12;
        v16 = 9;
        goto LABEL_33;
      case 0xBu:
        v39 = type metadata accessor for UUID(0);
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v40(a1, a2, v39);
        v41 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          v46 = sub_10002A750((uint64_t *)&unk_100641030);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v40(v42, v43, v39);
          *(_QWORD *)&v42[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
          v42[*(int *)(v44 + 24)] = v43[*(int *)(v44 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        v14 = a1;
        v15 = v12;
        v16 = 11;
        goto LABEL_33;
      case 0xCu:
        v47 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
        v48 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
        *(_QWORD *)&a1[*(int *)(v48 + 20)] = *(_QWORD *)&a2[*(int *)(v48 + 20)];
        a1[*(int *)(v48 + 24)] = a2[*(int *)(v48 + 24)];
        v14 = a1;
        v15 = v12;
        v16 = 12;
LABEL_33:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v58 = *(int *)(sub_10002A750(&qword_100640E98) + 48);
    v59 = &a1[v58];
    v60 = &a2[v58];
    v61 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    v55 = a1;
    v56 = a3;
    v57 = 2;
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = a1;
        v10 = v7;
        v11 = 0;
        goto LABEL_26;
      case 1u:
        v17 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        v18 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
        *(_QWORD *)&a1[*(int *)(v18 + 20)] = *(_QWORD *)&a2[*(int *)(v18 + 20)];
        v9 = a1;
        v10 = v7;
        v11 = 1;
        goto LABEL_26;
      case 2u:
        v19 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
        a1[v20[5]] = a2[v20[5]];
        *(_QWORD *)&a1[v20[6]] = *(_QWORD *)&a2[v20[6]];
        *(_OWORD *)&a1[v20[7]] = *(_OWORD *)&a2[v20[7]];
        *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
        a1[v20[9]] = a2[v20[9]];
        *(_OWORD *)&a1[v20[10]] = *(_OWORD *)&a2[v20[10]];
        v9 = a1;
        v10 = v7;
        v11 = 2;
        goto LABEL_26;
      case 7u:
        v21 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v9 = a1;
        v10 = v7;
        v11 = 7;
        goto LABEL_26;
      case 9u:
        v22 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        v9 = a1;
        v10 = v7;
        v11 = 9;
        goto LABEL_26;
      case 0xBu:
        v23 = type metadata accessor for UUID(0);
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v24(a1, a2, v23);
        v25 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_10002A750((uint64_t *)&unk_100641030);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          v24(v26, v27, v23);
          *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
          v26[*(int *)(v28 + 24)] = v27[*(int *)(v28 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v9 = a1;
        v10 = v7;
        v11 = 11;
        goto LABEL_26;
      case 0xCu:
        v31 = type metadata accessor for UUID(0);
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
        v32 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
        *(_QWORD *)&a1[*(int *)(v32 + 20)] = *(_QWORD *)&a2[*(int *)(v32 + 20)];
        a1[*(int *)(v32 + 24)] = a2[*(int *)(v32 + 24)];
        v9 = a1;
        v10 = v7;
        v11 = 12;
LABEL_26:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v49 = *(int *)(sub_10002A750((uint64_t *)&unk_100640EA0) + 48);
    v50 = &a1[v49];
    v51 = &a2[v49];
    v52 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
    if (swift_getEnumCaseMultiPayload(v51, v52))
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
      v54 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      v50[v54[5]] = v51[v54[5]];
      *(_QWORD *)&v50[v54[6]] = *(_QWORD *)&v51[v54[6]];
      *(_OWORD *)&v50[v54[7]] = *(_OWORD *)&v51[v54[7]];
      *(_QWORD *)&v50[v54[8]] = *(_QWORD *)&v51[v54[8]];
      v50[v54[9]] = v51[v54[9]];
      *(_OWORD *)&v50[v54[10]] = *(_OWORD *)&v51[v54[10]];
      swift_storeEnumTagMultiPayload(v50, v52, 0);
    }
    v55 = a1;
    v56 = a3;
    v57 = 1;
LABEL_35:
    swift_storeEnumTagMultiPayload(v55, v56, v57);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100233590(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 0u:
          v13 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 0;
          goto LABEL_34;
        case 1u:
          v33 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(a1, a2, v33);
          v34 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
          *(_QWORD *)&a1[*(int *)(v34 + 20)] = *(_QWORD *)&a2[*(int *)(v34 + 20)];
          v14 = a1;
          v15 = v12;
          v16 = 1;
          goto LABEL_34;
        case 2u:
          v35 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
          v36 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
          a1[v36[5]] = a2[v36[5]];
          *(_QWORD *)&a1[v36[6]] = *(_QWORD *)&a2[v36[6]];
          *(_OWORD *)&a1[v36[7]] = *(_OWORD *)&a2[v36[7]];
          *(_QWORD *)&a1[v36[8]] = *(_QWORD *)&a2[v36[8]];
          a1[v36[9]] = a2[v36[9]];
          *(_OWORD *)&a1[v36[10]] = *(_OWORD *)&a2[v36[10]];
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_34;
        case 7u:
          v37 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(a1, a2, v37);
          v14 = a1;
          v15 = v12;
          v16 = 7;
          goto LABEL_34;
        case 9u:
          v38 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
          v14 = a1;
          v15 = v12;
          v16 = 9;
          goto LABEL_34;
        case 0xBu:
          v39 = type metadata accessor for UUID(0);
          v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
          v40(a1, a2, v39);
          v41 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
          v42 = &a1[v41];
          v43 = &a2[v41];
          v44 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
          v45 = *(_QWORD *)(v44 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
          {
            v46 = sub_10002A750((uint64_t *)&unk_100641030);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            v40(v42, v43, v39);
            *(_QWORD *)&v42[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
            v42[*(int *)(v44 + 24)] = v43[*(int *)(v44 + 24)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v14 = a1;
          v15 = v12;
          v16 = 11;
          goto LABEL_34;
        case 0xCu:
          v47 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
          v48 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
          *(_QWORD *)&a1[*(int *)(v48 + 20)] = *(_QWORD *)&a2[*(int *)(v48 + 20)];
          a1[*(int *)(v48 + 24)] = a2[*(int *)(v48 + 24)];
          v14 = a1;
          v15 = v12;
          v16 = 12;
LABEL_34:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v58 = *(int *)(sub_10002A750(&qword_100640E98) + 48);
      v59 = &a1[v58];
      v60 = &a2[v58];
      v61 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      v55 = a1;
      v56 = a3;
      v57 = 2;
      goto LABEL_36;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v8 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 0;
          goto LABEL_27;
        case 1u:
          v17 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
          v18 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
          *(_QWORD *)&a1[*(int *)(v18 + 20)] = *(_QWORD *)&a2[*(int *)(v18 + 20)];
          v9 = a1;
          v10 = v7;
          v11 = 1;
          goto LABEL_27;
        case 2u:
          v19 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          v20 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
          a1[v20[5]] = a2[v20[5]];
          *(_QWORD *)&a1[v20[6]] = *(_QWORD *)&a2[v20[6]];
          *(_OWORD *)&a1[v20[7]] = *(_OWORD *)&a2[v20[7]];
          *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
          a1[v20[9]] = a2[v20[9]];
          *(_OWORD *)&a1[v20[10]] = *(_OWORD *)&a2[v20[10]];
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_27;
        case 7u:
          v21 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
          v9 = a1;
          v10 = v7;
          v11 = 7;
          goto LABEL_27;
        case 9u:
          v22 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
          v9 = a1;
          v10 = v7;
          v11 = 9;
          goto LABEL_27;
        case 0xBu:
          v23 = type metadata accessor for UUID(0);
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
          v24(a1, a2, v23);
          v25 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
          v26 = &a1[v25];
          v27 = &a2[v25];
          v28 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
          v29 = *(_QWORD *)(v28 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
          {
            v30 = sub_10002A750((uint64_t *)&unk_100641030);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            v24(v26, v27, v23);
            *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
            v26[*(int *)(v28 + 24)] = v27[*(int *)(v28 + 24)];
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          }
          v9 = a1;
          v10 = v7;
          v11 = 11;
          goto LABEL_27;
        case 0xCu:
          v31 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
          v32 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
          *(_QWORD *)&a1[*(int *)(v32 + 20)] = *(_QWORD *)&a2[*(int *)(v32 + 20)];
          a1[*(int *)(v32 + 24)] = a2[*(int *)(v32 + 24)];
          v9 = a1;
          v10 = v7;
          v11 = 12;
LABEL_27:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v49 = *(int *)(sub_10002A750((uint64_t *)&unk_100640EA0) + 48);
      v50 = &a1[v49];
      v51 = &a2[v49];
      v52 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
      if (swift_getEnumCaseMultiPayload(v51, v52))
      {
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v53 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
        v54 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
        v50[v54[5]] = v51[v54[5]];
        *(_QWORD *)&v50[v54[6]] = *(_QWORD *)&v51[v54[6]];
        *(_OWORD *)&v50[v54[7]] = *(_OWORD *)&v51[v54[7]];
        *(_QWORD *)&v50[v54[8]] = *(_QWORD *)&v51[v54[8]];
        v50[v54[9]] = v51[v54[9]];
        *(_OWORD *)&v50[v54[10]] = *(_OWORD *)&v51[v54[10]];
        swift_storeEnumTagMultiPayload(v50, v52, 0);
      }
      v55 = a1;
      v56 = a3;
      v57 = 1;
LABEL_36:
      swift_storeEnumTagMultiPayload(v55, v56, v57);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

id sub_100233CE0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v19;
  __int128 v20;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_smartListStackView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsExampleBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_makeSmartListBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsExampleBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_addRemindersTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToSmartListBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filterImageView], 0);
  v6 = &v3[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor];
  v7 = v3;
  v8 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor(v7);
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)v6 = 0xD000000000000014;
  *((_QWORD *)v6 + 1) = 0x8000000100569E30;
  *((_QWORD *)v6 + 2) = v10;
  *((_QWORD *)v6 + 3) = v9;
  *((_OWORD *)v6 + 2) = xmmword_100529B00;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  v11 = &v7[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreEllipsisPlaceholder];
  *(_QWORD *)v11 = 0xD000000000000024;
  *((_QWORD *)v11 + 1) = 0x80000001005606F0;
  v12 = &v7[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder];
  *(_QWORD *)v12 = 0xD000000000000017;
  *((_QWORD *)v12 + 1) = 0x8000000100560720;
  v13 = &v7[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder];
  *(_QWORD *)v13 = 0xD000000000000029;
  *((_QWORD *)v13 + 1) = 0x8000000100560740;
  swift_bridgeObjectRetain(v9);
  static TTRTypedController.currentArgument.getter(&v20, ObjectType, &off_10064E688);
  v14 = v20;
  *(_OWORD *)&v7[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter] = v20;
  v15 = v14;
  swift_unknownObjectRetain(v14);

  v19.receiver = v7;
  v19.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v19, "initWithCoder:", a1);

  v17 = v16;
  swift_unknownObjectRelease(v15);
  if (v17)

  return v17;
}

void sub_100233F24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  void *object;
  NSString v51;
  void *v52;
  char v53[96];
  uint64_t v54;

  v1 = v0;
  v2 = sub_10002A750(&qword_1006406D0);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100524260;
  *(_QWORD *)(v3 + 32) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsTextView]);
  v4 = &v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsExampleBodyTextView];
  *(_QWORD *)(v3 + 40) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsExampleBodyTextView]);
  *(_QWORD *)(v3 + 48) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsTextView]);
  *(_QWORD *)(v3 + 56) = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_addRemindersTextView]);
  v5 = &v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_makeSmartListBodyTextView];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_makeSmartListBodyTextView]);
  *(_QWORD *)(v3 + 64) = Strong;
  specialized Array._endMutation()(Strong);
  v7 = v3;
  v8 = sub_10002A750(&qword_1006406D8);
  v9 = sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
  v10 = sub_10005AC64();
  v11 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v7);
  sub_100234B78(v11);
  swift_bridgeObjectRelease(v11);
  sub_100234728();
  v12 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v12 + 32) = swift_unknownObjectWeakLoadStrong(v4);
  v13 = &v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsExampleBodyTextView];
  v14 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsExampleBodyTextView]);
  *(_QWORD *)(v12 + 40) = v14;
  specialized Array._endMutation()(v14);
  v15 = v12;
  v16 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v15);
  sub_100234CB0(v16, (uint64_t)sub_1002353A4);
  swift_bridgeObjectRelease(v16);
  v17 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100520250;
  v18 = swift_unknownObjectWeakLoadStrong(v5);
  *(_QWORD *)(v17 + 32) = v18;
  v54 = v17;
  specialized Array._endMutation()(v18);
  v19 = v17;
  v20 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v19);
  sub_100234E4C(v20);
  swift_bridgeObjectRelease(v20);
  v21 = sub_10002A750(&qword_1006406E8);
  inited = swift_initStackObject(v21, v53);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  v23 = swift_unknownObjectWeakLoadStrong(v13);
  if (!v23)
  {
    __break(1u);
    goto LABEL_27;
  }
  v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder];
  v25 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder + 8];
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v24;
  *(_QWORD *)(inited + 48) = v25;
  *(_BYTE *)(inited + 56) = 2;
  v26 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToSmartListBodyTextView]);
  if (!v26)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder];
  v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder + 8];
  *(_QWORD *)(inited + 64) = v26;
  *(_QWORD *)(inited + 72) = v27;
  *(_QWORD *)(inited + 80) = v28;
  *(_BYTE *)(inited + 88) = 0;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v28);
  sub_10005A74C(inited, (uint64_t)v1);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for TextViewAction);
  v29 = objc_msgSend(v1, "view");
  if (!v29)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v30 = v29;
  v31 = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_smartListStackView]);
  if (!v31)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v32 = v31;
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v32, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  objc_msgSend(v32, "setLayoutMarginsRelativeArrangement:", 1);
  if (objc_msgSend(v30, "effectiveUserInterfaceLayoutDirection") == (id)1)
  {
    v52 = v32;
    v33 = objc_msgSend(v32, "arrangedSubviews");
    v34 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

    if ((unint64_t)v35 >> 62)
      goto LABEL_19;
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v35);
    for (; v36; v36 = _CocoaArrayWrapper.endIndex.getter(v45))
    {
      v37 = 4;
      v38 = 0;
      if ((v35 & 0xC000000000000001) != 0)
      {
LABEL_9:
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v35);
        goto LABEL_11;
      }
      while (1)
      {
        v39 = *(id *)(v35 + 8 * v37);
LABEL_11:
        v40 = v39;
        v41 = v38 + 1;
        if (__OFADD__(v38, 1))
          break;
        v42 = objc_opt_self(UIImageView);
        v43 = (void *)swift_dynamicCastObjCClass(v40, v42);
        if (v43)
        {
          v44 = v43;
          if (objc_msgSend(v43, "contentMode") == (id)7)
            objc_msgSend(v44, "setContentMode:", 8);
        }

        if (v41 == v36)
          goto LABEL_23;
        v38 = ++v37 - 4;
        if ((v35 & 0xC000000000000001) != 0)
          goto LABEL_9;
      }
      __break(1u);
LABEL_19:
      if (v35 < 0)
        v45 = v35;
      else
        v45 = v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v35);
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v35, 2);
    v32 = v52;
  }

  v46 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filterImageView]);
  if (v46)
  {
    v47 = (void *)v46;
    v48._countAndFlagsBits = 0xD000000000000079;
    v49._object = (void *)0x800000010056EB10;
    v48._object = (void *)0x800000010056EB50;
    v49._countAndFlagsBits = 0xD000000000000032;
    object = TTRLocalizedString(_:comment:)(v49, v48)._object;
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v47, "setAccessibilityLabel:", v51, swift_bridgeObjectRelease(object).n128_f64[0]);

    return;
  }
LABEL_30:
  __break(1u);
}

void sub_100234728()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsTextView);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = (void *)Strong;
  static TTRLocalizableStrings.LearnMore.whySmartLists.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "setText:", v5);

  v6 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_whySmartListsExampleBodyTextView);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = (void *)v6;
  static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "setText:", v10);

  v11 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_makeSmartListBodyTextView);
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v12 = (void *)v11;
  static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter();
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v12, "setText:", v15);

  v16 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsTextView);
  if (!v16)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = (void *)v16;
  static TTRLocalizableStrings.LearnMore.filteringTags.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  objc_msgSend(v17, "setText:", v20);

  v21 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_addRemindersTextView);
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v22 = (void *)v21;
  static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter();
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v22, "setText:", v25);

  v26 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToSmartListBodyTextView);
  if (v26)
  {
    v27 = (void *)v26;
    static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter();
    v29 = v28;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    objc_msgSend(v27, "setText:", v30);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t type metadata accessor for TTRILearnMoreCSLViewController()
{
  return objc_opt_self(_TtC9Reminders30TTRILearnMoreCSLViewController);
}

void sub_100234B6C(uint64_t a1)
{
  sub_100234CB0(a1, (uint64_t)sub_1002353BC);
}

uint64_t sub_100234B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double left;
  double bottom;
  double right;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v11 = a1;
  else
    v11 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v11);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v8 = *(id *)(a1 + 8 * v4 + 32);
      v9 = v8;
      ++v4;
      objc_msgSend(v8, "setTextContainerInset:", UIEdgeInsetsZero.top, left, bottom, right);
      v10 = objc_msgSend(v9, "textContainer");
      objc_msgSend(v10, "setLineFragmentPadding:", 0.0);

    }
    while (v2 != v4);
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_100234CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  UIFont v18;

  v3 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v4 = (void *)static UIFont.roundedBodyFont.getter(v3);
  v18.super.isa = UIFont.withBoldTrait()().super.isa;

  v5 = *(void **)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v5;
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_10:

    swift_bridgeObjectRelease(a1);
    return;
  }
LABEL_12:
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  v16 = v5;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v6)
    goto LABEL_10;
LABEL_3:
  v8 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a1);
    else
      v9 = *(id *)(a1 + 8 * v8);
    v10 = v9;
    v11 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    v12 = objc_msgSend(v9, "attributedText");
    if (!v12)
      break;
    v13 = v12;
    __chkstk_darwin(v12);
    v14 = (void *)NSAttributedString.withMutations(_:)(a2);

    objc_msgSend(v10, "setAttributedText:", v14);
    ++v8;
    if (v11 == v6)
      goto LABEL_10;
  }
  __break(1u);
}

void sub_100234E4C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;

  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v2 = static UIImage.ttr_systemSymbolImage(named:)(0x73697370696C6C65, 0xEF656C637269632ELL);
  if (!v2)
    return;
  v3 = (void *)v2;
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v4 = (void *)static UIColor.ttrSecondaryLabelColor.getter();
  v5 = objc_msgSend(v3, "imageWithTintColor:", v4);

  if (!v5)
    return;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_5;
LABEL_19:

    swift_bridgeObjectRelease(a1);
    return;
  }
LABEL_15:
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v6)
    goto LABEL_19;
LABEL_5:
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
    else
      v8 = *(id *)(a1 + 8 * i);
    v9 = v8;
    v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    v11 = objc_msgSend(v8, "attributedText");
    if (!v11)
      break;
    v12 = v11;
    __chkstk_darwin(v11);
    v13 = (void *)NSAttributedString.withMutations(_:)(sub_100235398);

    objc_msgSend(v9, "setAttributedText:", v13);
    if (v10 == v6)
    {

      swift_bridgeObjectRelease(a1);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100235088(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _OWORD v28[5];

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToSmartListBodyTextView);
  if (Strong
    && (v5 = (void *)Strong,
        sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr),
        v6 = a1,
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        v6,
        v6,
        v5,
        (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter);
    v9 = *(_OWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor + 48);
    v28[2] = *(_OWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor + 32);
    v28[3] = v9;
    v28[4] = *(_OWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor + 64);
    v10 = *(_OWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor + 16);
    v28[0] = *(_OWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor);
    v28[1] = v10;
    if (qword_10063D3C0 != -1)
      swift_once(&qword_10063D3C0, sub_1000DE698);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100645C40);
    v12 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Learn More open help", 20, 2, v12);
    swift_bridgeObjectRelease(v12);
    sub_10001413C((_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 72));
    sub_1000597D8((uint64_t)v28);
  }
  else
  {
    v13 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_filteringTagsExampleBodyTextView);
    if (v13)
    {
      v14 = (void *)v13;
      sub_100005ED8(0, (unint64_t *)&unk_1006406C0, UITextView_ptr);
      v15 = a1;
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) != 0)
      {
        v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter);
        if (qword_10063D3C0 != -1)
          swift_once(&qword_10063D3C0, sub_1000DE698);
        v18 = type metadata accessor for Logger(0);
        sub_100012DC4(v18, (uint64_t)qword_100645C40);
        v19 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        sub_1000143B4((uint64_t)"Learn More open other learn more", 32, 2, v19);
        swift_bridgeObjectRelease(v19);
        v20 = (uint64_t *)*sub_10001413C((_QWORD *)(v17 + 48), *(_QWORD *)(v17 + 72));
        v21 = (void *)swift_unknownObjectWeakLoadStrong(v20 + 2);
        if (v21)
        {
          v22 = v21;
          sub_10043721C(1, v21, v20);

        }
        else
        {
          if (qword_10063D2E0 != -1)
            swift_once(&qword_10063D2E0, sub_100059748);
          v23 = sub_100012DC4(v18, (uint64_t)qword_100640550);
          v24 = Logger.logObject.getter(v23);
          v25 = static os_log_type_t.fault.getter(v24);
          if (os_log_type_enabled(v24, v25))
          {
            v26 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v26 = 0;
            _os_log_impl((void *)&_mh_execute_header, v24, v25, "Attempted to open learn more with empty navigation controller", v26, 2u);
            swift_slowDealloc(v26, -1, -1);
          }

        }
      }
    }
  }
  return 0;
}

void sub_100235398(int a1)
{
  uint64_t v1;
  UIImage v2;

  v2.super.isa = *(Class *)(v1 + 32);
  sub_1000BACF4(a1, *(Swift::String *)(v1 + 16), v2);
}

double sub_1002353A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000BAC10(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

ValueMetadata *type metadata accessor for TTRILearnMoreCSLViewController.Argument()
{
  return &type metadata for TTRILearnMoreCSLViewController.Argument;
}

uint64_t type metadata accessor for TTRIWhatsNewPresenter()
{
  return objc_opt_self(_TtC9Reminders21TTRIWhatsNewPresenter);
}

uint64_t sub_1002353E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064E750);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064E750);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100235470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, *(_QWORD *)(a4 + 8)) & 1) != 0
    && (v9 = type metadata accessor for TTRIRemindersListBarItem(0, a3, a4, v8),
        *(unsigned __int8 *)(a1 + *(int *)(v9 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v9 + 36))))
  {
    v10 = *(_BYTE *)(a1 + *(int *)(v9 + 40)) ^ *(_BYTE *)(a2 + *(int *)(v9 + 40)) ^ 1;
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_1002354F8(uint64_t a1, Swift::UInt a2, char a3)
{
  Swift::UInt v3;

  v3 = a2;
  if (a3)
  {
    if (a3 == 1)
      Hasher._combine(_:)(4uLL);
    else
      v3 = qword_10052AA20[a2];
  }
  else
  {
    Hasher._combine(_:)(2uLL);
  }
  Hasher._combine(_:)(v3);
}

uint64_t sub_100235554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_10023556C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100235470(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

Swift::Int sub_100235578()
{
  uint64_t v0;
  Swift::UInt v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  sub_1002354F8((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1002355C4(uint64_t a1)
{
  uint64_t v1;

  sub_1002354F8(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_1002355D0(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  sub_1002354F8((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100235618(uint64_t a1, uint64_t a2)
{
  return sub_1002380A8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_100235630(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 9);
  return sub_1000955F4(*(_QWORD *)a1, *(_QWORD *)a2) & ~(v2 ^ v4) & ~(v3 ^ v5) & 1;
}

uint64_t sub_100235688()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[4];

  if (v0[8])
  {
    v1 = v0[8];
  }
  else
  {
    v2 = v0;
    v5[3] = *v0;
    v5[0] = v0;
    v3 = type metadata accessor for TTRIAddReminderBarButtonModule();
    swift_allocObject(v3, 56, 7);
    swift_retain();
    v1 = sub_10000C950(v5, (uint64_t)"newReminderAction:");
    objc_msgSend(*(id *)(v1 + 24), "setContentHorizontalAlignment:", 4, v5[0]);
    v2[8] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100235740(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t ObjectType;
  _QWORD *v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  int v27;
  __int16 *v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t result;
  int v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  Class isa;
  __int16 v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  id v75;
  void *v76;
  Class v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD, uint64_t, uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(_QWORD, uint64_t, uint64_t);
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BOOL8 v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  Swift::UInt v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  void *v123;
  id v124;
  int v125;
  int v126;
  id v127;
  void *v128;
  char v129;
  id v130;
  uint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  NSString v136;
  id v137;
  Swift::String v138;
  Swift::String v139;
  void *object;
  id v141;
  id v142;
  void *v143;
  NSString v144;
  uint64_t v145;
  int v146;
  int v147;
  _BOOL4 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int v154;
  uint64_t *v155;
  unsigned int v156;
  _WORD *v157;
  unsigned int v158;
  unsigned int v159;
  _QWORD *v160;
  unsigned int v161;
  unsigned int v162;
  _BYTE v163[24];
  char v164[24];
  _QWORD v165[11];
  _QWORD v166[3];
  uint64_t v167;
  uint64_t v168;

  v3 = v2;
  v6 = v3 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  v9 = Strong;
  if ((a1 & 1) == 0)
  {
    if (Strong)
    {
      v21 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v8);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 768))(v166, ObjectType, v21);
      if (v167)
      {
        v23 = sub_10001413C(v166, v167);
        v25 = sub_1004442A0((uint64_t)v23, v24);
        sub_100027F10(v166);
      }
      else
      {
        sub_1000073A0((uint64_t)v166, &qword_10064E848);
        v25 = 0;
      }
      swift_unknownObjectRelease(v9);
    }
    else
    {
      v25 = 0;
    }
    v6 = v25 & 1;
    v46 = *(__int16 *)(v3 + 56);
    v34 = (uint64_t *)(v3 + 48);
    if ((v46 & 0x80000000) == 0)
    {
      v47 = (*v34 & 1) == 0;
      result = sub_100238710(*v34, v46);
      if (((v6 ^ v47) & 1) != 0)
        return result;
    }
    v157 = (_WORD *)(v3 + 56);
    v48 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v49 = swift_allocObject(v48, 40, 7);
    *(_OWORD *)(v49 + 16) = xmmword_100521140;
    v50 = *(id *)(sub_100235688() + 16);
    swift_release();
    *(_QWORD *)(v49 + 32) = v50;
    v166[0] = v49;
    specialized Array._endMutation()(v51);
    v35 = v166[0];
    if ((v25 & 1) == 0)
    {
LABEL_40:
      v60 = *(void **)(v3 + 32);
      sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v35);
      objc_msgSend(v60, "setItems:animated:", isa, a2 & 1);

      v62 = 0;
      goto LABEL_99;
    }
    v30 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
    v52 = (char *)sub_100236440();
    if (!((unint64_t)v35 >> 62))
    {
      v53 = v35 & 0xFFFFFFFFFFFFF8;
      if (!__OFADD__(*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10), 2))
        goto LABEL_36;
      goto LABEL_120;
    }
LABEL_115:
    if (v35 < 0)
      v150 = v35;
    else
      v150 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v151 = _CocoaArrayWrapper.endIndex.getter(v150);
    swift_bridgeObjectRelease(v35);
    if (!__OFADD__(v151, 2))
    {
LABEL_36:
      v54 = sub_1000720EC();
      specialized Array._endMutation()(v54);
      v35 = (uint64_t)(id)v30;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
      v30 = *(_QWORD *)((v166[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v53 = *(_QWORD *)((v166[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 < v53 >> 1)
      {
LABEL_37:
        v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v35);
        specialized Array._endMutation()(v55);
        v56 = v52;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
        v58 = *(_QWORD *)((v166[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v57 = *(_QWORD *)((v166[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v58 >= v57 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
        v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
        specialized Array._endMutation()(v59);

        v35 = v166[0];
        goto LABEL_40;
      }
LABEL_121:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v30 + 1, 1);
      goto LABEL_37;
    }
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  if (Strong)
  {
    v10 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    v11 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    v12 = swift_getObjectType(v10, v8);
    v13 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v11 + 152);
    v14 = v10;
    v15 = v13(0, v12, v11);

    v16 = *(_QWORD *)(v9 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
    v18 = swift_getObjectType(*(_QWORD *)(v9 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v17);
    v160 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 336))(v15, v18, v16);
    LOWORD(v14) = v19;
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v15);
    v20 = (unsigned __int16)v14 & 0x101;
  }
  else
  {
    v20 = 0;
    v160 = _swiftEmptyArrayStorage;
  }
  v26 = *(_QWORD *)(v3 + 48);
  v156 = v20 | 0xFFFF8000;
  v155 = (uint64_t *)(v3 + 48);
  v28 = (__int16 *)(v3 + 56);
  v27 = *(__int16 *)(v3 + 56);
  if ((~v27 & 0xFFFFFEFE) == 0)
    goto LABEL_11;
  if ((v27 & 0x80000000) == 0)
  {
    sub_100238710(v26, v27);
LABEL_11:
    v29 = v20 > 0xFF;
    LOBYTE(v20) = v20 & 1;
    v30 = v29;
    goto LABEL_14;
  }
  v147 = (v27 & 0x100) == 0;
  v148 = (v27 & 1) == 0;
  v30 = v20 > 0xFF;
  if ((sub_1000955F4(v26, (uint64_t)v160) & 1) != 0 && ((v20 ^ v148) & 1) != 0)
  {
    v28 = (__int16 *)(v3 + 56);
    if (v30 != v147)
      return sub_100237D28((uint64_t)v160, v156);
  }
  else
  {
    v28 = (__int16 *)(v3 + 56);
  }
LABEL_14:
  v31 = *v28;
  v157 = v28;
  if ((~v31 & 0xFFFFFEFE) == 0 || (v31 & 0x80000000) == 0)
  {
    swift_bridgeObjectRetain(v160);
LABEL_19:
    v34 = (uint64_t *)v156;
    sub_100237D0C((uint64_t)v160, v156);
    swift_retain();
    v35 = 0;
    v36 = (uint64_t)sub_1002381BC((uint64_t)v160, v3);
    swift_release();
    sub_100237D28((uint64_t)v160, v156);
    v165[0] = v36;
    if (!(_DWORD)v30)
    {
LABEL_45:
      if ((v20 & 1) != 0)
      {
        v66 = sub_100236970();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
        v35 = *(_QWORD *)((v165[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v67 = *(_QWORD *)((v165[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v35 >= v67 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v35 + 1, 1);
        v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v66);
        specialized Array._endMutation()(v68);
      }
      v69 = v165[0];
      if (v165[0] >> 62)
        goto LABEL_108;
      v52 = *(char **)((v165[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v52)
        goto LABEL_63;
      v70 = (uint64_t)(v52 - 1);
      if (!__OFSUB__(v52, 1))
      {
        while (v70 >= 1)
        {
          v34 = (uint64_t *)LSApplicationWorkspace_ptr;
          while (1)
          {
            v71 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
            v72 = v71;
            v69 = v165[0];
            if (v165[0] >> 62)
            {
              v74 = v165[0] < 0 ? v165[0] : v165[0] & 0xFFFFFFFFFFFFFF8;
              v75 = v71;
              swift_bridgeObjectRetain(v165[0]);
              v30 = _CocoaArrayWrapper.endIndex.getter(v74);
              swift_bridgeObjectRelease(v165[0]);
            }
            else
            {
              v30 = *(_QWORD *)((v165[0] & 0xFFFFFFFFFFFFF8) + 0x10);
              v73 = v71;
            }
            if (v30 < (uint64_t)--v52)
              break;
            sub_1004385F8((uint64_t)v52, (uint64_t)v52, (uint64_t)v72);

            if ((unint64_t)v52 <= 1)
            {
              v69 = v165[0];
              goto LABEL_63;
            }
          }
          __break(1u);
LABEL_108:
          v149 = v69 < 0 ? v69 : v69 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v69);
          v35 = _CocoaArrayWrapper.endIndex.getter(v149);
          swift_bridgeObjectRelease(v69);
          if (!v35)
            break;
          swift_bridgeObjectRetain(v69);
          v52 = (char *)_CocoaArrayWrapper.endIndex.getter(v149);
          swift_bridgeObjectRelease(v69);
          v70 = (uint64_t)(v52 - 1);
          if (__OFSUB__(v52, 1))
            goto LABEL_114;
        }
LABEL_63:
        v76 = *(void **)(v3 + 32);
        sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
        v77 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v69);
        objc_msgSend(v76, "setItems:animated:", v77, a2 & 1);

        goto LABEL_64;
      }
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    swift_beginAccess(v3 + 40, v166, 32, 0);
    v37 = *(_QWORD *)(v3 + 40);
    if (*(_QWORD *)(v37 + 16) && (v38 = sub_1002AA410(1uLL, 2), (v39 & 1) != 0))
    {
      v40 = *(void **)(*(_QWORD *)(v37 + 56) + 8 * v38);
      swift_endAccess(v166);
      v30 = v40;
      swift_bridgeObjectRetain(v36);
      v42 = sub_10007324C(v41, v30);
      v44 = v43;
      swift_bridgeObjectRelease(v36);
      if ((v44 & 1) == 0)
      {
        v35 = v42 + 1;
        if (__OFADD__(v42, 1))
        {
          __break(1u);
        }
        else
        {
          result = (uint64_t)sub_100236918();
          v34 = (uint64_t *)result;
          if (!((unint64_t)v36 >> 62))
          {
            if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10) >= v35)
              goto LABEL_26;
            goto LABEL_127;
          }
        }
        if (v36 < 0)
          v152 = v36;
        else
          v152 = v36 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v36);
        v153 = _CocoaArrayWrapper.endIndex.getter(v152);
        result = swift_bridgeObjectRelease(v36);
        if (v153 >= v35)
        {
LABEL_26:
          if ((v35 & 0x8000000000000000) == 0)
          {
            sub_1004385F8(v35, v35, (uint64_t)v34);

            goto LABEL_45;
          }
LABEL_128:
          __break(1u);
          return result;
        }
LABEL_127:
        __break(1u);
        goto LABEL_128;
      }

    }
    else
    {
      swift_endAccess(v166);
    }
    v63 = sub_100236918();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
    v35 = *(_QWORD *)((v165[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v64 = *(_QWORD *)((v165[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v64 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v35 + 1, 1);
    v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v63);
    specialized Array._endMutation()(v65);
    goto LABEL_45;
  }
  v32 = *v155;
  sub_100237D0C((uint64_t)v160, v156);
  sub_1002386FC(v32, v31);
  v33 = sub_100238510((uint64_t)v160, v20 & 1, v32, v31 & 0x101);
  sub_100238710(v32, v31);
  if ((v33 & 1) == 0)
    goto LABEL_19;
LABEL_64:
  v78 = sub_100236970();
  v79 = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (!v79)
    goto LABEL_67;
  v81 = v79;
  v82 = *(void **)(v79 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v83 = *(_QWORD *)(v79 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  v84 = swift_getObjectType(v82, v80);
  v85 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v83 + 152);
  v86 = v82;
  v87 = v85(0, v84, v83);

  v88 = v81 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess(v81 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo, v164, 0, 0);
  v89 = *(unsigned __int8 *)(v88 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 112));
  v90 = *(_QWORD *)(v81 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v92 = swift_getObjectType(*(_QWORD *)(v81 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v91);
  v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 344))(v87, v89, v92, v90);
  v95 = v94;
  swift_unknownObjectRelease(v81);
  swift_bridgeObjectRelease(v87);
  v96 = *(_QWORD *)(v93 + 16);
  swift_bridgeObjectRelease(v93);
  if (v96)
    v97 = v95 > 0;
  else
LABEL_67:
    v97 = 0;
  objc_msgSend(v78, "setEnabled:", v97);

  v98 = sub_100236918();
  v99 = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (!v99)
    goto LABEL_71;
  v101 = v99;
  v102 = *(void **)(v99 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v103 = *(_QWORD *)(v99 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  v104 = swift_getObjectType(v102, v100);
  v105 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v103 + 152);
  v106 = v102;
  v107 = v105(0, v104, v103);

  v108 = *(_QWORD *)(v101 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v110 = swift_getObjectType(*(_QWORD *)(v101 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v109);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v108 + 352))(v165, v107, v110, v108);
  swift_unknownObjectRelease(v101);
  swift_bridgeObjectRelease(v107);
  sub_100179CD0((uint64_t)v165, (uint64_t)v166);
  if (v166[0])
  {
    v111 = v168;
    sub_1002387D8(v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100238724);
    v112 = v111 > 0;
  }
  else
  {
LABEL_71:
    v112 = 0;
  }
  v6 = (uint64_t)v160;
  v34 = (uint64_t *)(v3 + 48);
  objc_msgSend(v98, "setEnabled:", v112);

  v113 = v160[2];
  if (v113)
  {
    v114 = v3 + 40;
    v115 = (unsigned __int8 *)v160 + 42;
    while (1)
    {
      v116 = *(_QWORD *)(v115 - 10);
      v117 = *(v115 - 2);
      v118 = *(v115 - 1);
      v119 = *v115;
      swift_beginAccess(v114, v163, 32, 0);
      v120 = *(_QWORD *)v114;
      if (*(_QWORD *)(*(_QWORD *)v114 + 16))
      {
        v121 = sub_1002AA410(v116, v117);
        if ((v122 & 1) != 0)
          break;
      }
      swift_endAccess(v163);
LABEL_75:
      v115 += 16;
      if (!--v113)
      {
        v6 = (uint64_t)v160;
        v62 = v156;
        sub_100237D28((uint64_t)v160, v156);
        v34 = v155;
        goto LABEL_99;
      }
    }
    v123 = *(void **)(*(_QWORD *)(v120 + 56) + 8 * v121);
    swift_endAccess(v163);
    v124 = v123;
    objc_msgSend(v124, "setEnabled:", v118);
    if ((_DWORD)v118)
      v125 = 256;
    else
      v125 = 0;
    if (v119)
      v126 = 0x10000;
    else
      v126 = 0;
    v127 = v124;
    v162 = v162 & 0xFF000000 | v117 | v125 | v126;
    v128 = (void *)sub_1002369C8(v116, v162);
    objc_msgSend(v127, "setImage:", v128);

    if (v117)
    {
      if (v117 == 1)
      {
        v129 = v125 | 1 | v126;
        v130 = v127;
        v131 = v116;
        v159 = v159 & 0xFF000000 | 1 | v125 | v126;
      }
      else
      {
        if (v116 != 4)
        {
          v141 = v127;
          objc_msgSend(v141, "setTitle:", 0);

          if (v116 == 1)
          {
LABEL_93:
            v137 = v127;
            v138._countAndFlagsBits = 0x206F542065766F4DLL;
            v138._object = (void *)0xEC0000007473694CLL;
            v139._countAndFlagsBits = 0xD00000000000005DLL;
            v139._object = (void *)0x800000010056ED40;
            object = TTRLocalizedString(_:comment:)(v138, v139)._object;
LABEL_96:
            v143 = object;
            v144 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v143);
            objc_msgSend(v127, "setAccessibilityLabel:", v144);

            goto LABEL_75;
          }
LABEL_95:
          v142 = v127;
          v161 = v161 & 0xFF000000 | v117 | v125 | v126;
          sub_1002374C0(v116, v161);
          goto LABEL_96;
        }
        v129 = v117 | v125 | v126;
        v133 = v127;
        v131 = 4;
        v154 = v154 & 0xFF000000 | v117 | v125 | v126;
      }
    }
    else
    {
      v129 = v125 | v126;
      v132 = v127;
      v131 = v116;
      v158 = v158 & 0xFF000000 | v125 | v126;
    }
    sub_1002374C0(v131, v129);
    v135 = v134;
    v136 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v135);
    objc_msgSend(v127, "setTitle:", v136);

    if (!v117 || v117 != 1 && v116 == 1)
      goto LABEL_93;
    goto LABEL_95;
  }
  v62 = v156;
  sub_100237D28((uint64_t)v160, v156);
LABEL_99:
  v145 = *v34;
  *v34 = v6;
  v146 = (unsigned __int16)*v157;
  *v157 = v62;
  return sub_100238710(v145, v146);
}

id sub_100236440()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  void *v11;
  id v12;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(id *)(v0 + 72);
  }
  else
  {
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v3);

    v5 = objc_allocWithZone((Class)UIBarButtonItem);
    swift_retain(v0);
    v6 = objc_msgSend(v5, "initWithImage:style:target:action:", v4, 0, v0, "toolbarFileGroceryRadar:");
    swift_release(v0);

    v2 = v6;
    v7._countAndFlagsBits = 0xD000000000000068;
    v8._object = (void *)0x800000010056EDA0;
    v7._object = (void *)0x800000010056EDD0;
    v8._countAndFlagsBits = 0xD00000000000002BLL;
    object = TTRLocalizedString(_:comment:)(v8, v7)._object;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setAccessibilityLabel:", v10);

    v11 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v2;

    v1 = 0;
  }
  v12 = v1;
  return v2;
}

double sub_100236588(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    sub_1002365F8(a3, a4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1002365F8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  _QWORD *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  id v24;
  _QWORD v25[7];
  char v26;
  int v27;
  uint64_t v28;
  _BYTE v29[24];
  id v30;

  v3 = v2;
  v5 = *(__int16 *)(v3 + 56);
  if ((~v5 & 0xFFFFFEFE) == 0)
    return;
  v7 = *(_QWORD **)(v3 + 48);
  if (v5 < 0)
  {
    sub_100237D0C(*(_QWORD *)(v3 + 48), v5);
    v8 = v7[2];
    if (!v8)
    {
LABEL_16:
      swift_bridgeObjectRelease(v7);
      return;
    }
  }
  else
  {
    sub_100238710(*(_QWORD *)(v3 + 48), v5);
    v7 = _swiftEmptyArrayStorage;
    v8 = _swiftEmptyArrayStorage[2];
    if (!v8)
      goto LABEL_16;
  }
  v9 = (unsigned __int8 *)v7 + 42;
  while (1)
  {
    v10 = *(_QWORD *)(v9 - 10);
    v11 = *(v9 - 2);
    if (*(v9 - 2))
      break;
    if (!a2)
      goto LABEL_9;
LABEL_10:
    v9 += 16;
    if (!--v8)
      goto LABEL_16;
  }
  if (v11 != 1)
    __asm { BR              X2 }
  if (a2 != 1)
    goto LABEL_10;
LABEL_9:
  if (v10 != a1)
    goto LABEL_10;
  v12 = a1;
  v13 = *(v9 - 1);
  v27 = *v9;
  swift_bridgeObjectRelease(v7);
  swift_beginAccess(v3 + 40, v29, 0, 0);
  v28 = *(_QWORD *)(v3 + 40);
  v14 = __chkstk_darwin(v28);
  v25[6] = a1;
  v26 = a2;
  v15 = __chkstk_darwin(v14);
  v25[2] = sub_100238944;
  v25[3] = v16;
  swift_bridgeObjectRetain(v15);
  v17 = sub_10002A750(&qword_10064E850);
  v18 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
  v19 = sub_100238998();
  Sequence.firstMap<A>(_:)(&v30, sub_100238950, v25, v17, v18, v19);
  swift_bridgeObjectRelease(v28);
  if (v30)
  {
    if (v13)
      v20 = 256;
    else
      v20 = 0;
    v21 = v20 | v11;
    if (v27)
      v22 = 0x10000;
    else
      v22 = 0;
    v23 = v21 | v22;
    v24 = v30;
    sub_100237864(v12, v23, (uint64_t)v24);

  }
}

id sub_100236918()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = *(id *)(v0 + 88);
  }
  else
  {
    v3 = sub_1002371C4(v0);
    v4 = *(void **)(v0 + 88);
    *(_QWORD *)(v0 + 88) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_100236970()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 80);
  if (v1)
  {
    v2 = *(id *)(v0 + 80);
  }
  else
  {
    v3 = sub_100236BB8(v0);
    v4 = *(void **)(v0 + 80);
    *(_QWORD *)(v0 + 80) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1002369C8(uint64_t a1, char a2)
{
  if ((a2 & 0xFE) != 0)
    __asm { BR              X9 }
  return 0;
}

void sub_100236AB8()
{
  JUMPOUT(0x100236A74);
}

uint64_t sub_100236B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;

  v4 = *(_QWORD *)a1;
  v5 = *(__int16 *)(a1 + 8);
  v6 = *(_QWORD *)a2;
  v7 = *(unsigned __int16 *)(a2 + 8);
  if (v5 < 0)
  {
    if ((v7 & 0x8000) != 0)
      v8 = sub_1000955F4(v4, v6) & (((v5 & 1) == 0) ^ v7) & (((v5 & 0x100) == 0) ^ ((unsigned __int16)(v7 & 0x100) >> 8));
    else
      LOBYTE(v8) = 0;
  }
  else
  {
    LOBYTE(v8) = ((v4 & 1) == 0) ^ v6;
    if ((v7 & 0x8000) != 0)
      LOBYTE(v8) = 0;
  }
  return v8 & 1;
}

id sub_100236BB8(uint64_t a1)
{
  void *v2;
  NSString v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  NSString v12;
  _QWORD v14[6];

  v2 = (void *)objc_opt_self(UIImage);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "__systemImageNamedSwift:", v3);

  v5 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", v4, 0, 0, 0);
  v6 = swift_allocObject(&unk_1005F7E90, 24, 7);
  swift_weakInit(v6 + 16, a1);
  v14[4] = sub_1002388B4;
  v14[5] = v6;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100081A10;
  v14[3] = &unk_1005F7ED0;
  v7 = _Block_copy(v14);
  objc_msgSend(v5, "_setSecondaryActionsProvider:", v7, swift_release().n128_f64[0]);
  _Block_release(v7);
  v8 = v5;
  v9._object = (void *)0x800000010056EF00;
  v10._countAndFlagsBits = 0x7463412065726F4DLL;
  v10._object = (void *)0xEC000000736E6F69;
  v9._countAndFlagsBits = 0xD000000000000030;
  object = TTRLocalizedString(_:comment:)(v10, v9)._object;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v8, "setAccessibilityLabel:", v12);

  return v8;
}

Class sub_100236D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(_QWORD, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unsigned __int8 *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *object;
  void *v30;
  NSString v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  Class isa;
  __n128 v51;
  uint64_t v52;
  void *v53;
  void *v54;
  Swift::String v55;
  Swift::OpaquePointer v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  char v66[24];
  char v67[32];
  UIImage_optional v68;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v67, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = swift_unknownObjectWeakLoadStrong(Strong + 16);
  if (!v6)
  {
    swift_release();
    return 0;
  }
  v63 = v5;
  v8 = *(void **)(v6 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  v10 = v6;
  ObjectType = swift_getObjectType(v8, v7);
  v12 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v9 + 152);
  v13 = v8;
  v14 = v12(0, ObjectType, v9);

  v15 = v10 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess(v10 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo, v66, 0, 0);
  v16 = *(unsigned __int8 *)(v15 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 112));
  v61 = v10;
  v17 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v18 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v20 = swift_getObjectType(v17, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 344))(v14, v16, v20, v18);
  v60 = v22;
  v59 = v23;
  swift_bridgeObjectRelease(v14);
  v24 = *(_QWORD *)(v21 + 16);
  if (v24)
  {
    swift_retain();
    swift_bridgeObjectRetain(v21);
    v58 = v21;
    v25 = (unsigned __int8 *)(v21 + 42);
    do
    {
      if (*(v25 - 1) == 1)
      {
        v36 = *(_QWORD *)(v25 - 10);
        v37 = *v25;
        v38 = *(v25 - 2);
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        if (v37)
          v39 = 0x10000;
        else
          v39 = 0;
        v40 = v64 & 0xFF000000 | v38 | v39;
        v64 = v40 | 0x100;
        v41 = sub_1002374C0(v36, v40);
        v43 = v42;
        v65 = v65 & 0xFF000000 | v38 | v39 | 0x100;
        v44 = sub_1002369C8(v36, v38 | v39);
        v45 = swift_allocObject(&unk_1005F7E90, 24, 7);
        swift_weakInit(v45 + 16, v63);
        v46 = swift_allocObject(&unk_1005F7F08, 35, 7);
        *(_QWORD *)(v46 + 16) = v45;
        *(_QWORD *)(v46 + 24) = v36;
        *(_BYTE *)(v46 + 32) = v38;
        *(_BYTE *)(v46 + 33) = 1;
        *(_BYTE *)(v46 + 34) = v37;
        v47 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v41, v43, 0, 0, v44, 0, 0, 0, 0, 0, 0, sub_1002388E0, v46);
        v48 = v47;
        if (v38 && (v38 == 1 || v36 != 1))
        {
          v49 = v47;
          v62 = v62 & 0xFF000000 | v38 | v39 | 0x100;
          sub_1002374C0(v36, v62);
        }
        else
        {
          v26 = v47;
          v27._countAndFlagsBits = 0x206F542065766F4DLL;
          v27._object = (void *)0xEC0000007473694CLL;
          v28._countAndFlagsBits = 0xD00000000000005DLL;
          v28._object = (void *)0x800000010056ED40;
          object = TTRLocalizedString(_:comment:)(v27, v28)._object;
        }
        v30 = object;
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v30);
        objc_msgSend(v48, "setAccessibilityLabel:", v31);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
        v34 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v34 >= v33 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
        v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v48);
        specialized Array._endMutation()(v35);
      }
      v25 += 16;
      --v24;
    }
    while (v24);
    v21 = v58;
    swift_bridgeObjectRelease(v58);
  }
  else
  {
    swift_retain();
  }
  v51 = swift_release();
  v52 = static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)(v60, v59 & 1, v51);
  v54 = v53;
  swift_bridgeObjectRelease(v21);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v55._countAndFlagsBits = v52;
  v55._object = v54;
  v68.value.super.isa = 0;
  v68.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v55, (Swift::String_optional)0, v68, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v57).super.super.isa;
  swift_release();
  swift_unknownObjectRelease(v61);
  return isa;
}

id sub_1002371C4(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  _QWORD v11[6];

  v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", *(_QWORD *)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor(), 0, 0, 0);
  objc_msgSend(v2, "setEnabled:", 0);
  v3 = swift_allocObject(&unk_1005F7E90, 24, 7);
  swift_weakInit(v3 + 16, a1);
  v11[4] = sub_1002387D0;
  v11[5] = v3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100081A10;
  v11[3] = &unk_1005F7EA8;
  v4 = _Block_copy(v11);
  objc_msgSend(v2, "_setSecondaryActionsProvider:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  v5 = v2;
  v6._object = (void *)0x800000010056EF00;
  v7._countAndFlagsBits = 0x6365532065766F4DLL;
  v7._object = (void *)0xED0000736E6F6974;
  v6._countAndFlagsBits = 0xD000000000000030;
  object = TTRLocalizedString(_:comment:)(v7, v6)._object;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v5, "setAccessibilityLabel:", v9);

  return v5;
}

Class sub_100237338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(_QWORD, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  _BYTE v19[24];
  _QWORD v20[11];
  _OWORD v21[5];
  uint64_t v22;
  _OWORD v23[5];
  uint64_t v24;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = swift_unknownObjectWeakLoadStrong(Strong + 16);
  if (!v5)
    goto LABEL_6;
  v7 = v5;
  v8 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v8, v6);
  v11 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v9 + 152);
  v12 = v8;
  v13 = v11(0, ObjectType, v9);

  v14 = *(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v16 = swift_getObjectType(*(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v15);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v14 + 352))(v20, v13, v16, v14);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease(v13);
  sub_100179CD0((uint64_t)v20, (uint64_t)v21);
  if (*(_QWORD *)&v21[0])
  {
    v23[2] = v21[2];
    v23[3] = v21[3];
    v23[4] = v21[4];
    v24 = v22;
    v23[0] = v21[0];
    v23[1] = v21[1];
    sub_1002387D8(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10023882C);
    v17 = sub_100464C90((uint64_t)v23);
    sub_1002387D8(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100238724);
    sub_1002387D8(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100238724);
  }
  else
  {
LABEL_6:
    v17 = 0;
  }
  swift_release();
  return v17;
}

uint64_t sub_1002374C0(uint64_t a1, char a2)
{
  if (!a2)
    return static TTRLocalizableStrings.Toolbar.moveItemsString(withCount:)();
  if (a2 == 1)
    return static TTRLocalizableStrings.Toolbar.deleteItemsString(withCount:)();
  return ((uint64_t (*)(void))((char *)sub_1002374F0 + 4 * byte_10052A758[a1]))();
}

uint64_t sub_1002374F0(uint64_t a1, int a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  const char *v5;
  unint64_t v6;

  if ((a2 & 0x10000) != 0)
  {
    v2 = 0xD000000000000011;
    v3 = 0xD000000000000017;
    v4 = 0x8000000100567830;
    v5 = "Complete button in menu";
  }
  else
  {
    v2 = 0xD000000000000012;
    v3 = 0xD000000000000019;
    v4 = 0x80000001005677E0;
    v5 = "Incomplete button in menu";
  }
  v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v2, *(Swift::String *)&v3)._countAndFlagsBits;
}

void sub_100237690(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6;
  void *v7;
  _BYTE v8[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    v7 = (void *)sub_100236970();
    sub_100237864(a3, a4 & 0x101FF, (uint64_t)v7);
    swift_release();

  }
}

void *sub_100237710(uint64_t a1, char a2, void *a3, uint64_t a4, char a5)
{
  void *result;
  id v8;

  if (!a2)
  {
    result = 0;
    if (a5)
      return result;
    goto LABEL_6;
  }
  if (a2 != 1)
    __asm { BR              X10 }
  result = 0;
  if (a5 == 1)
  {
LABEL_6:
    if (a1 == a4)
    {
      v8 = a3;
      return a3;
    }
  }
  return result;
}

void sub_100237788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && !a4)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_1002377A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 1)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_1002377BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 2)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_1002377D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 3)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_1002377F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 4)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_100237810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 5)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_10023782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 6)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_100237848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2 && a4 == 7)
    JUMPOUT(0x10023775CLL);
  JUMPOUT(0x100237764);
}

void sub_100237864(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *oslog;
  _QWORD v28[8];

  v7 = objc_msgSend(*(id *)(v3 + 32), "items");
  if (v7
    && (v8 = v7,
        v9 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr),
        v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9),
        v8,
        LOBYTE(v8) = sub_10001B050(a3, v10),
        swift_bridgeObjectRelease(v10),
        (v8 & 1) != 0))
  {
    static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)(v28, a3, 2, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
    if (Strong)
    {
      v13 = Strong;
      v14 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
      v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
      ObjectType = swift_getObjectType(v14, v12);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 152);
      v18 = v14;
      v19 = v17(1, ObjectType, v15);

      v20 = *(_QWORD *)(v13 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      v22 = swift_getObjectType(*(_QWORD *)(v13 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v21);
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v20 + 360))(v19, a1, a2 & 0x101FF, v28, v22, v20);
      swift_unknownObjectRelease(v13);
      swift_bridgeObjectRelease(v19);
    }
    sub_1000A2958((uint64_t)v28);
  }
  else
  {
    if (qword_10063D520 != -1)
      swift_once(&qword_10063D520, sub_1002353E0);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100012DC4(v23, (uint64_t)qword_10064E750);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "TTRIRemindersListToolbarController#lowLevelPerformAction: unable to determine popoverAnchor", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

uint64_t sub_100237C30()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_100238710(*(_QWORD *)(v0 + 48), *(unsigned __int16 *)(v0 + 56));
  swift_release();

  return v0;
}

uint64_t sub_100237C88()
{
  uint64_t v0;

  sub_100237C30();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for TTRIRemindersListToolbarController()
{
  return objc_opt_self(_TtC9Reminders34TTRIRemindersListToolbarController);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_WORD *)(a2 + 8);
  sub_100237D0C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_100237D0C(uint64_t result, __int16 a2)
{
  if (a2 < 0)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t destroy for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1)
{
  return sub_100237D28(*(_QWORD *)a1, *(_WORD *)(a1 + 8));
}

uint64_t sub_100237D28(uint64_t result, __int16 a2)
{
  if (a2 < 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t assignWithCopy for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  __int16 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_WORD *)(a2 + 8);
  sub_100237D0C(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_WORD *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v4;
  sub_100237D28(v5, v6);
  return a1;
}

uint64_t initializeWithTake for TTRIRemindersListToolbarEditingConfiguration(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  __int16 v5;

  v3 = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_WORD *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  sub_100237D28(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 0x3FFF);
  v3 = (*(_WORD *)(a1 + 8) & 0xFE | (*(unsigned __int16 *)(a1 + 8) >> 15) | (*(unsigned __int16 *)(a1 + 8) >> 1) & 0x3F00) ^ 0x3FFF;
  if (v3 >= 0x3FFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x3FFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
      *(_QWORD *)result = 0;
      *(_WORD *)(result + 8) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_100237EA8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) >> 15;
}

uint64_t sub_100237EB4(uint64_t result)
{
  *(_WORD *)(result + 8) &= ~0x8000u;
  return result;
}

uint64_t sub_100237EC4(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 8) = *(_WORD *)(result + 8) & 0x101 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarController.ToolbarConfiguration()
{
  return &type metadata for TTRIRemindersListToolbarController.ToolbarConfiguration;
}

uint64_t sub_100237EEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for TTRIRemindersListToolbarEditingConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t *assignWithTake for TTRIRemindersListToolbarEditingConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarEditingConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarEditingConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarEditingConfiguration()
{
  return &type metadata for TTRIRemindersListToolbarEditingConfiguration;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarEditingConfiguration.ItemID()
{
  return &type metadata for TTRIRemindersListToolbarEditingConfiguration.ItemID;
}

unint64_t sub_100238064()
{
  unint64_t result;

  result = qword_10064E840;
  if (!qword_10064E840)
  {
    result = swift_getWitnessTable(&unk_10052A874, &type metadata for TTRIRemindersListToolbarEditingConfiguration.ItemID);
    atomic_store(result, (unint64_t *)&qword_10064E840);
  }
  return result;
}

uint64_t sub_1002380A8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (!a2)
  {
    if (!a4)
      return a1 == a3;
    return 0;
  }
  if (a2 != 1)
    return ((uint64_t (*)(void))((char *)&loc_1002380F0 + 4 * byte_10052A768[a1]))();
  if (a4 != 1)
    return 0;
  return a1 == a3;
}

_QWORD *sub_1002381BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  Swift::UInt v25;
  uint64_t v26;
  char v27;
  Swift::UInt v28;
  char v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _BYTE v44[24];
  _QWORD *v45;
  UIImage_optional v46;
  UIAction_optional v47;
  UIMenu_optional v48;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (!v3)
    return result;
  v45 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v3);
  v43 = (uint64_t *)(a2 + 40);
  v6 = (char *)(a1 + 40);
  while (1)
  {
    v13 = *((_QWORD *)v6 - 1);
    v14 = *v6;
    swift_beginAccess(v43, v44, 32, 0);
    v15 = *v43;
    if (*(_QWORD *)(*v43 + 16))
    {
      v16 = sub_1002AA410(v13, v14);
      if ((v17 & 1) != 0)
      {
        v18 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v16);
        swift_endAccess(v44);
        v10 = v18;
        v19 = v10;
        goto LABEL_5;
      }
    }
    v42 = v3;
    swift_endAccess(v44);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v20 = swift_allocObject(&unk_1005F7E90, 24, 7);
    swift_weakInit(v20 + 16, a2);
    v21 = swift_allocObject(&unk_1005F7F30, 33, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v13;
    *(_BYTE *)(v21 + 32) = v14;
    v46.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100238938, v21);
    v46.value.super.isa = 0;
    v47.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v46, v47, v48).super.super.isa;
    swift_beginAccess(v43, v44, 33, 0);
    v19 = isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a2 + 40));
    v24 = *(_QWORD **)(a2 + 40);
    v25 = v13;
    v26 = a2;
    *(_QWORD *)(a2 + 40) = 0x8000000000000000;
    v27 = v14;
    v28 = v25;
    v29 = v27;
    v31 = sub_1002AA410(v25, v27);
    v32 = v24[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v24[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v30 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_1002B1530();
        if ((v35 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_10045C608(v34, isUniquelyReferenced_nonNull_native);
      v36 = sub_1002AA410(v28, v29);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_24;
      v31 = v36;
      if ((v35 & 1) == 0)
      {
LABEL_16:
        v24[(v31 >> 6) + 8] |= 1 << v31;
        v38 = v24[6] + 16 * v31;
        *(_QWORD *)v38 = v28;
        *(_BYTE *)(v38 + 8) = v29;
        *(_QWORD *)(v24[7] + 8 * v31) = v19;
        v39 = v24[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_23;
        v24[2] = v41;
        goto LABEL_4;
      }
    }
    v7 = v24[7];
    v8 = 8 * v31;

    *(_QWORD *)(v7 + v8) = v19;
LABEL_4:
    v9 = *v43;
    *v43 = (uint64_t)v24;
    swift_bridgeObjectRelease(v9);
    v10 = (objc_class *)swift_endAccess(v44);
    a2 = v26;
    v3 = v42;
LABEL_5:
    v6 += 16;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v11 = v45[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
    v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v19);
    specialized ContiguousArray._endMutation()(v12);
    if (!--v3)
      return v45;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRIRemindersListToolbarEditingConfiguration.ItemID);
  __break(1u);
  return result;
}

uint64_t sub_100238510(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  int64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int v25;

  v4 = a4;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(a1);
    sub_1003D7EB4(0, v6, 0);
    v8 = 0;
    v9 = _swiftEmptyArrayStorage[2];
    v10 = 2 * v9;
    do
    {
      v11 = *(_QWORD *)(a1 + v8 * 8 + 32);
      v12 = *(_BYTE *)(a1 + v8 * 8 + 40);
      v13 = _swiftEmptyArrayStorage[3];
      v14 = v9 + 1;
      if (v9 >= v13 >> 1)
        sub_1003D7EB4(v13 > 1, v9 + 1, 1);
      _swiftEmptyArrayStorage[2] = v14;
      v15 = &_swiftEmptyArrayStorage[v10 + v8];
      v15[4] = v11;
      *((_BYTE *)v15 + 40) = v12;
      v8 += 2;
      v9 = v14;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a1);
    v4 = a4;
  }
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain(a3);
    sub_1003D7EB4(0, v16, 0);
    v17 = 0;
    v18 = _swiftEmptyArrayStorage[2];
    v19 = 2 * v18;
    do
    {
      v20 = *(_QWORD *)(a3 + v17 * 8 + 32);
      v21 = *(_BYTE *)(a3 + v17 * 8 + 40);
      v22 = _swiftEmptyArrayStorage[3];
      v23 = v18 + 1;
      if (v18 >= v22 >> 1)
        sub_1003D7EB4(v22 > 1, v18 + 1, 1);
      _swiftEmptyArrayStorage[2] = v23;
      v24 = &_swiftEmptyArrayStorage[v19 + v17];
      v24[4] = v20;
      *((_BYTE *)v24 + 40) = v21;
      v17 += 2;
      v18 = v23;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease(a3);
  }
  v25 = sub_1000965F4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v25 & (((a2 & 1) == 0) ^ v4) & 1;
}

uint64_t sub_1002386FC(uint64_t result, int a2)
{
  if ((~a2 & 0xFEFE) != 0)
    return sub_100237D0C(result, a2);
  return result;
}

uint64_t sub_100238710(uint64_t result, int a2)
{
  if ((~a2 & 0xFEFE) != 0)
    return sub_100237D28(result, a2);
  return result;
}

uint64_t sub_100238724(uint64_t result, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    sub_100180954(a3, a4);
    swift_release();
    sub_1000381B8(a8, a9);
    return sub_1000381B8(a10, a11);
  }
  return result;
}

uint64_t sub_1002387AC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

Class sub_1002387D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100237338(a1, a2, v2);
}

_QWORD *sub_1002387D8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  return a1;
}

uint64_t sub_10023882C(uint64_t result, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a2);
    sub_1001BECBC(a3, a4);
    swift_retain();
    sub_100053DE4(a8, a9);
    return sub_100053DE4(a10, a11);
  }
  return result;
}

Class sub_1002388B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100236D70(a1, a2, v2);
}

uint64_t sub_1002388BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 35, 7);
}

void sub_1002388E0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 33))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 32);
  if (*(_BYTE *)(v1 + 34))
    v4 = 0x10000;
  else
    v4 = 0;
  sub_100237690(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v3 | v4);
}

uint64_t sub_100238914()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 33, 7);
}

double sub_100238938(uint64_t a1)
{
  uint64_t v1;

  return sub_100236588(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

void *sub_100238944(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;

  return sub_100237710(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_100238950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(a1 + 16));
  *a2 = result;
  return result;
}

unint64_t sub_100238998()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064E858[0];
  if (!qword_10064E858[0])
  {
    v1 = sub_10002CA5C(&qword_10064E850);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, qword_10064E858);
  }
  return result;
}

double destroy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1)
{
  unint64_t v2;
  double result;

  v2 = *(_QWORD *)a1;
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    sub_100180954(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
    *(_QWORD *)&result = swift_release().n128_u64[0];
    if (*(_QWORD *)(a1 + 56))
      *(_QWORD *)&result = swift_release().n128_u64[0];
    if (*(_QWORD *)(a1 + 72))
      *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
  {
    v12 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_QWORD *)(a1 + 80) = a2[10];
    v13 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
  }
  else
  {
    v5 = a2[1];
    v6 = (void *)a2[2];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    v7 = *((_BYTE *)a2 + 24);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v5);
    sub_1001BECBC(v6, v7);
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = v7;
    v8 = a2[7];
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    *(_BYTE *)(a1 + 27) = *((_BYTE *)a2 + 27);
    v9 = a2[5];
    v10 = a2[6];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    swift_retain();
    if (v8)
    {
      v11 = a2[8];
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    }
    v14 = a2[9];
    if (v14)
    {
      v15 = a2[10];
      *(_QWORD *)(a1 + 72) = v14;
      *(_QWORD *)(a1 + 80) = v15;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    }
  }
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if (v4 >= 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRelease(v4);
      v6 = *(_QWORD *)(a2 + 8);
      v7 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRelease(v7);
      v8 = *(void **)(a2 + 16);
      v9 = *(_BYTE *)(a2 + 24);
      sub_1001BECBC(v8, v9);
      v10 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v8;
      v11 = *(_BYTE *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v9;
      sub_100180954(v10, v11);
      *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
      *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
      *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v12;
      swift_retain();
      swift_release();
      v13 = *(_QWORD *)(a2 + 56);
      if (*(_QWORD *)(a1 + 56))
      {
        if (v13)
        {
          v14 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v13;
          *(_QWORD *)(a1 + 64) = v14;
          swift_retain();
          swift_release();
LABEL_21:
          v26 = *(_QWORD *)(a2 + 72);
          if (*(_QWORD *)(a1 + 72))
          {
            if (v26)
            {
              v27 = *(_QWORD *)(a2 + 80);
              *(_QWORD *)(a1 + 72) = v26;
              *(_QWORD *)(a1 + 80) = v27;
              swift_retain();
              swift_release();
              return a1;
            }
            swift_release();
LABEL_27:
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            return a1;
          }
          if (!v26)
            goto LABEL_27;
LABEL_25:
          v28 = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 72) = v26;
          *(_QWORD *)(a1 + 80) = v28;
          swift_retain();
          return a1;
        }
        swift_release();
      }
      else if (v13)
      {
        v25 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v13;
        *(_QWORD *)(a1 + 64) = v25;
        swift_retain();
        goto LABEL_21;
      }
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      goto LABEL_21;
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    sub_100180954(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
    swift_release();
    if (*(_QWORD *)(a1 + 56))
      swift_release();
    if (*(_QWORD *)(a1 + 72))
      swift_release();
    goto LABEL_13;
  }
  if (v5 < 0xFFFFFFFF)
  {
LABEL_13:
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(_OWORD *)(a2 + 32);
    v23 = *(_OWORD *)(a2 + 48);
    v24 = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v23;
    *(_OWORD *)(a1 + 64) = v24;
    *(_OWORD *)(a1 + 32) = v22;
    return a1;
  }
  *(_QWORD *)a1 = v5;
  v15 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v15;
  v16 = *(void **)(a2 + 16);
  v17 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v15);
  sub_1001BECBC(v16, v17);
  *(_QWORD *)(a1 + 16) = v16;
  *(_BYTE *)(a1 + 24) = v17;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v18;
  v19 = *(_QWORD *)(a2 + 56);
  swift_retain();
  if (v19)
  {
    v20 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v19;
    *(_QWORD *)(a1 + 64) = v20;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  v26 = *(_QWORD *)(a2 + 72);
  if (v26)
    goto LABEL_25;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)a1;
  if (v4 >= 0xFFFFFFFF)
  {
    if (*(_QWORD *)a2 >= 0xFFFFFFFFuLL)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRelease(v4);
      v5 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRelease(v5);
      v6 = *(_BYTE *)(a2 + 24);
      v7 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v8 = *(_BYTE *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v6;
      sub_100180954(v7, v8);
      *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
      *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
      *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      swift_release();
      v9 = *(_QWORD *)(a2 + 56);
      if (*(_QWORD *)(a1 + 56))
      {
        if (v9)
        {
          v10 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v9;
          *(_QWORD *)(a1 + 64) = v10;
          swift_release();
          goto LABEL_16;
        }
        swift_release();
      }
      else if (v9)
      {
        v14 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v9;
        *(_QWORD *)(a1 + 64) = v14;
        goto LABEL_16;
      }
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_16:
      v15 = *(_QWORD *)(a2 + 72);
      if (*(_QWORD *)(a1 + 72))
      {
        if (v15)
        {
          v16 = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 72) = v15;
          *(_QWORD *)(a1 + 80) = v16;
          swift_release();
          return a1;
        }
        swift_release();
      }
      else if (v15)
      {
        v17 = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v15;
        *(_QWORD *)(a1 + 80) = v17;
        return a1;
      }
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      return a1;
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    sub_100180954(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
    swift_release();
    if (*(_QWORD *)(a1 + 56))
      swift_release();
    if (*(_QWORD *)(a1 + 72))
      swift_release();
  }
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 88))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_100239064(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarBatchMoveToSectionParams()
{
  return &type metadata for TTRIRemindersListToolbarBatchMoveToSectionParams;
}

uint64_t sub_1002390A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10052A990;
    v4[2] = &unk_10052A990;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_100239120(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _BYTE *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 2) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v11 = (char *)v4 + v6;
    *v11 = *((_BYTE *)a2 + v6);
    v11[1] = *((_BYTE *)a2 + v6 + 1);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain(v10);
  }
  return v4;
}

uint64_t sub_1002391BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1002391CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_100239224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_10023927C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1002392D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (_BYTE *)(v6 + a1);
  v8 = (_BYTE *)(v6 + a2);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_10023932C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_21;
  v9 = v7 + 2;
  v10 = 8 * (v7 + 2);
  if ((v7 + 2) > 3)
    goto LABEL_7;
  v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    v11 = *(_DWORD *)(a1 + v9);
    if (v11)
      goto LABEL_14;
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2)
        goto LABEL_21;
LABEL_7:
      v11 = *(unsigned __int8 *)(a1 + v9);
      if (!*(_BYTE *)(a1 + v9))
        goto LABEL_21;
LABEL_14:
      v13 = (v11 - 1) << v10;
      if (v9 > 3)
        v13 = 0;
      if ((_DWORD)v7 == -2)
        return v6 + v13 + 1;
      if (v9 > 3)
        LODWORD(v9) = 4;
      return ((uint64_t (*)(void))((char *)&loc_1002393EC + 4 * byte_10052A770[(v9 - 1)]))();
    }
    v11 = *(unsigned __int16 *)(a1 + v9);
    if (*(_WORD *)(a1 + v9))
      goto LABEL_14;
  }
LABEL_21:
  if (v5 >= 0xFE)
    return (*(uint64_t (**)(void))(v4 + 48))();
  v15 = *(unsigned __int8 *)(v7 + a1);
  if (v15 < 2)
    return 0;
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_100239460(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 2;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_100000004;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -2)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 2);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for TTRIRemindersListBarItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIRemindersListBarItem);
}

uint64_t sub_100239644(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_100239658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = sub_10002A750(&qword_100645E90);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel, v12, 33, 0);
  sub_100239B3C(a1, v6);
  swift_endAccess(v12);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v8 = Strong;
    sub_1000DFE14(v6, (uint64_t)v5);
    sub_1000DFBE4((uint64_t)v5, v9);
    swift_unknownObjectRelease(v8);
    sub_1000DFE5C((uint64_t)v5);
  }
  return sub_1000DFE5C(a1);
}

uint64_t sub_100239738()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_1000DFE5C(v0 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100239778()
{
  return type metadata accessor for TTRIReminderCellAutoCompletePresenter(0);
}

uint64_t type metadata accessor for TTRIReminderCellAutoCompletePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10064E908;
  if (!qword_10064E908)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIReminderCellAutoCompletePresenter);
  return result;
}

void sub_1002397BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10052AAF8;
  v4[1] = &unk_10052AAF8;
  sub_100239834(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_100239834(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10064E918)
  {
    v2 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10064E918);
  }
}

uint64_t sub_100239888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BYTE v24[24];

  v7 = sub_10002A750(&qword_100645E90);
  __chkstk_darwin(v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v24[-v11 - 8];
  v13 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  v14 = *((_QWORD *)v13 - 1);
  __chkstk_darwin(v13);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v17 = v3 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel, v24, 0, 0);
  sub_1000DFE14(v17, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1000DFE5C((uint64_t)v12);
  sub_1000DFE9C((uint64_t)v12, (uint64_t)v16);
  if ((v16[v13[5]] & 1) == 0)
  {
    v19 = v13[7];
    v20 = *(_QWORD *)&v16[v19];
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v20);
    *(_QWORD *)&v16[v19] = a1;
    v21 = &v16[v13[6]];
    v22 = *((_QWORD *)v21 + 1);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)v21 = a2;
    *((_QWORD *)v21 + 1) = a3;
    sub_100239AF8((uint64_t)v16, (uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v9, 0, 1, v13);
    sub_100239658((uint64_t)v9);
  }
  return sub_1000DFEE0((uint64_t)v16);
}

uint64_t sub_100239A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  char v11[24];

  result = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (result)
  {
    v4 = result;
    v5 = (uint64_t *)(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule);
    swift_beginAccess(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule, v11, 0, 0);
    v7 = *v5;
    if (*v5)
    {
      v8 = v5[1];
      ObjectType = swift_getObjectType(v7, v6);
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
      swift_unknownObjectRetain(v7);
      v10(a1, ObjectType, v8);
      swift_unknownObjectRelease(v4);
      v4 = v7;
    }
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_100239AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100239B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100645E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_100239B84@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 16843009;
  *(_QWORD *)&result = 0x10000000100;
  *(_DWORD *)(a1 + 44) = 256;
  return result;
}

unint64_t sub_100239BA8()
{
  unsigned __int8 *v0;
  const mach_header_64 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (unsigned __int8 *)TTRReminderCellStyle.siriFoundInApps.unsafeMutableAddressor();
  v1 = &_mh_execute_header;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_100239C10()
{
  id v0;
  char v1;

  v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  v1 = TTRUserDefaults.showingLargeAttachments(forType:)(5);

  return v1 & 1;
}

void sub_100239C4C(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 5);

}

uint64_t sub_100239C98()
{
  sub_10023A73C();
  return static NSUserActivity.forStoringListPayloadForSmartListsAndSearch()();
}

uint64_t sub_100239CC0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 5;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_100239D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023A73C();
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 5;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

uint64_t sub_100239FA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  BOOL v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v43[5];

  v42 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = 5;
  v10 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v9, v10, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v39 = REMSmartListType.title.getter(REMSmartListTypeSiriFoundInApps);
  v12 = v11;
  v40 = static TTRListColors.SmartList.siriFoundInApps.getter();
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v14);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  v17 = v16(ObjectType, v13);
  v18 = v17;
  if (v17)
    swift_unknownObjectRelease(v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(ObjectType, v13);
  v20 = v19;
  if (v19)
    swift_unknownObjectRelease(v19);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 56))(v43, ObjectType, v13);
  v21 = v43[3];
  sub_1000073A0((uint64_t)v43, &qword_100649FC0);
  v22 = v16(ObjectType, v13);
  if (v22)
  {
    v24 = v22;
    v25 = v23;
    v26 = swift_getObjectType(v22, v23);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
    swift_unknownObjectRelease(v24);
  }
  else
  {
    v27 = 0;
  }
  v28 = v20 != 0;
  v29 = v18 != 0;
  if (v12)
    v30 = v12;
  else
    v30 = 0xE000000000000000;
  if (v12)
    v31 = v39;
  else
    v31 = 0;
  v32 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
  v33 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v34 = v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v41, 1, 1, v33);
  BYTE6(v37) = 0;
  WORD2(v37) = 1;
  LODWORD(v37) = 0;
  HIBYTE(v36) = v27 & 1;
  BYTE6(v36) = v21 != 0;
  WORD2(v36) = 0;
  BYTE3(v36) = v28;
  *(_WORD *)((char *)&v36 + 1) = v29;
  LOBYTE(v36) = 0;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v9, v31, v30, v40, 0, 1, 0, 3, v36, 0, 0, 0, 0, 0, 0, v6, v34, v37);
}

uint64_t sub_10023A2A0()
{
  return type metadata accessor for TTRShowSiriFoundInAppsViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowSiriFoundInAppsViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10064E9D0;
  if (!qword_10064E9D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowSiriFoundInAppsViewModelSource);
  return result;
}

uint64_t sub_10023A2E4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1336);
}

double sub_10023A318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38[2];
  _QWORD v39[5];
  _BYTE v40[128];
  _OWORD v41[8];

  v33 = a1;
  v37 = a2;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100239FA4((uint64_t)v18);
  *v11 = 3;
  swift_storeEnumTagMultiPayload(v11, v9, 0);
  sub_1000D2B94(v41);
  sub_10003E0EC((uint64_t)v41, (uint64_t)v40);
  v35 = v14;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v11, v40, 0, 0, 0, 0, 0, 0);
  v19 = sub_10002B1E8((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  *(_QWORD *)&v8[*(int *)(v6 + 20)] = REMRemindersListDataView.FlatModel.reminders.getter(v19);
  v8[*(int *)(v6 + 24)] = 0;
  v20 = v31;
  sub_10002B1E8((uint64_t)v18, v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  v21 = sub_10002A750(&qword_1006452D8);
  v22 = *(unsigned __int8 *)(v32 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v21, v23 + *(_QWORD *)(v32 + 72), v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v8, v24 + v23, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  v25 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v26 = swift_allocObject(v25, 16, 7);
  v27 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v36, 1, 1, v27);
  v39[3] = v25;
  v39[4] = &off_100604210;
  v39[0] = v26;
  sub_100010634((uint64_t)v39, (uint64_t)v38);
  v29 = swift_allocObject(&unk_1005F8138, 72, 7);
  *(_QWORD *)(v29 + 16) = v24;
  sub_10002E37C(v38, v29 + 24);
  *(_QWORD *)(v29 + 64) = v34;
  swift_retain();
  swift_bridgeObjectRetain(v24);
  swift_retain();
  sub_10047C8F8(1, v20, (uint64_t (*)(uint64_t))sub_10003E360, v29, v37, 0, v28);
  swift_release();
  sub_100027F10(v39);
  swift_bridgeObjectRelease(v24);
  sub_1000073A0(v28, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v20, &qword_100649CA0);
  sub_10001F544((uint64_t)v8, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  sub_10001F544((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10023A708()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72, 7);
}

unint64_t sub_10023A73C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649BD0;
  if (!qword_100649BD0)
  {
    v1 = objc_opt_self(NSUserActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649BD0);
  }
  return result;
}

uint64_t sub_10023A778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064EF38);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064EF38);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

__n128 sub_10023A808@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *object;
  Swift::Bool isValid;
  uint64_t v32;
  uint64_t (**v33)(_QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __n128 result;
  uint64_t v49;
  _BYTE v50[24];
  _OWORD v51[8];
  __int16 v52;
  Swift::tuple_name_String_isValid_Bool v53;
  Swift::tuple_name_String_isValid_Bool v54;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(id *)(sub_10028D484() + 32);
    swift_release();
    v8 = (_QWORD *)((char *)v7 + *(_QWORD *)((swift_isaMask & *v7) + 0x68));
    swift_beginAccess(v8, v50, 0, 0);
    if (*v8)
    {
      v10 = (_QWORD *)(*v8 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
      v11 = *v10;
      v12 = v10[1];
      ObjectType = swift_getObjectType(*v10, v9);
      v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 216);
      v15 = swift_unknownObjectRetain(v11);
      LOBYTE(v12) = v14(ObjectType, v12, v15);

      swift_unknownObjectRelease(v11);
      if ((v12 & 1) != 0)
      {
        v16 = *(id *)(sub_10028D484() + 32);
        swift_release();
        v17 = (_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x68));
        swift_beginAccess(v17, &v49, 0, 0);
        if (*v17)
        {
          v19 = (_QWORD *)(*v17 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
          v21 = *v19;
          v20 = v19[1];
          v22 = swift_getObjectType(*v19, v18);
          v23 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
          v24 = swift_unknownObjectRetain(v21);
          v23(v22, v20, v24);
          v26 = v25;

          swift_unknownObjectRelease(v21);
          if (v26)
          {
LABEL_13:
            v54 = String.validatedListName()();
            object = v54.name._object;
            isValid = v54.isValid;
            swift_unknownObjectRelease(v6);
            goto LABEL_10;
          }
        }
        else
        {

        }
        swift_bridgeObjectRelease(0);
        v26 = 0xE000000000000000;
        goto LABEL_13;
      }
      swift_unknownObjectRelease(v6);
    }
    else
    {
      swift_unknownObjectRelease(v6);

    }
  }
  v27 = *(_QWORD *)(v2 + 192);
  v28 = swift_getObjectType(*(_QWORD *)(v2 + 184), v5);
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v28, v27);
  v26 = v29;
  v53 = String.validatedListName()();
  object = v53.name._object;
  isValid = v53.isValid;
LABEL_10:
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(object);
  v32 = *(_QWORD *)(v2 + 184);
  v33 = *(uint64_t (***)(_QWORD, _QWORD))(v2 + 192);
  v35 = swift_getObjectType(v32, v34);
  v36 = v33[1](v35, v33);
  v38 = v37 & 1;
  v39 = v33[2](v35, v33);
  v41 = v40;
  v42 = v33[3](v35, v33);
  v43 = v33[4](v35, v33);
  TTRTemplateSavingViewModel.init(sourceList:name:templateConfiguration:completedReminderCount:allowsCommit:)(v51, v36, v38, v39, v41, v42, v43, v44 & 1, isValid);
  v45 = v51[7];
  *(_OWORD *)(a1 + 96) = v51[6];
  *(_OWORD *)(a1 + 112) = v45;
  *(_WORD *)(a1 + 128) = v52;
  v46 = v51[3];
  *(_OWORD *)(a1 + 32) = v51[2];
  *(_OWORD *)(a1 + 48) = v46;
  v47 = v51[5];
  *(_OWORD *)(a1 + 64) = v51[4];
  *(_OWORD *)(a1 + 80) = v47;
  result = (__n128)v51[1];
  *(_OWORD *)a1 = v51[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10023AAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v39;
  _BYTE v40[24];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong)
    goto LABEL_18;
  v4 = Strong;
  v5 = *(id *)(sub_10028D484() + 32);
  swift_release();
  v6 = (_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
  swift_beginAccess(v6, v40, 0, 0);
  if (!*v6)
  {
    swift_unknownObjectRelease(v4);

LABEL_18:
    v36 = *(_QWORD *)(v1 + 184);
    v35 = *(_QWORD *)(v1 + 192);
    ObjectType = swift_getObjectType(v36, v3);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 40))(ObjectType, v35);
    return v34 & 1;
  }
  v8 = (_QWORD *)(*v6 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
  v9 = *v8;
  v10 = v8[1];
  v11 = swift_getObjectType(*v8, v7);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 216);
  v13 = swift_unknownObjectRetain(v9);
  LOBYTE(v10) = v12(v11, v10, v13);

  swift_unknownObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
LABEL_17:
    swift_unknownObjectRelease(v4);
    goto LABEL_18;
  }
  v14 = *(id *)(sub_10028D484() + 32);
  swift_release();
  v15 = (_QWORD *)((char *)v14 + *(_QWORD *)((swift_isaMask & *v14) + 0x68));
  swift_beginAccess(v15, &v39, 0, 0);
  if (*v15)
  {
    v17 = (_QWORD *)(*v15 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
    v18 = *v17;
    v19 = v17[1];
    v20 = swift_getObjectType(*v17, v16);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    v22 = swift_unknownObjectRetain(v18);
    v23 = v21(v20, v19, v22);
    v25 = v24;

    swift_unknownObjectRelease(v18);
    if (v25)
      goto LABEL_10;
  }
  else
  {

  }
  swift_bridgeObjectRelease(0);
  v23 = 0;
  v25 = 0xE000000000000000;
LABEL_10:
  v27 = *(_QWORD *)(v1 + 192);
  v28 = swift_getObjectType(*(_QWORD *)(v1 + 184), v26);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v28, v27);
  if (v23 == v29 && v25 == v30)
  {
    swift_bridgeObjectRelease_n(v25, 2);
    goto LABEL_17;
  }
  v32 = v30;
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v29, v30, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v32);
  swift_unknownObjectRelease(v4);
  if ((v33 & 1) != 0)
    goto LABEL_18;
  v34 = 1;
  return v34 & 1;
}

void sub_10023AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  _QWORD v17[6];

  v3 = v2;
  if (qword_10063D528 != -1)
    swift_once(&qword_10063D528, sub_10023A778);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_10064EF38);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Save as Template Change Name", 28, 2, v7);
  v8 = swift_bridgeObjectRelease(v7);
  static TTRLocalizableStrings.UndoAction.renameTemplate.getter(v8);
  v10 = v9;
  v11 = (void *)objc_opt_self(TTRUndoManager);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v13 = (_QWORD *)swift_allocObject(&unk_1005F82B0, 40, 7);
  v13[2] = v3;
  v13[3] = a1;
  v13[4] = a2;
  v14 = swift_allocObject(&unk_1005F82D8, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_10023BA90;
  *(_QWORD *)(v14 + 24) = v13;
  v17[4] = sub_1000381EC;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10001B258;
  v17[3] = &unk_1005F82F0;
  v15 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain(a2);
  swift_retain();
  objc_msgSend(v11, "withActionName:block:", v12, v15, swift_release().n128_f64[0]);

  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 126, 96, 51, 1);
  swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16._object = (void *)0x80000001005682D0;
    v16._countAndFlagsBits = 0xD000000000000019;
    TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v16);
    swift_release();
  }
}

void sub_10023AF3C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char isEscapingClosureAtFileLocation;
  _QWORD v15[6];

  v2 = v1;
  if (qword_10063D528 != -1)
    swift_once(&qword_10063D528, sub_10023A778);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_10064EF38);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Save as Template Change Includes Completed", 42, 2, v5);
  v6 = swift_bridgeObjectRelease(v5);
  static TTRLocalizableStrings.UndoAction.changeTemplate.getter(v6);
  v8 = v7;
  v9 = (void *)objc_opt_self(TTRUndoManager);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = swift_allocObject(&unk_1005F8238, 25, 7);
  *(_QWORD *)(v11 + 16) = v2;
  *(_BYTE *)(v11 + 24) = a1 & 1;
  v12 = swift_allocObject(&unk_1005F8260, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10023BA0C;
  *(_QWORD *)(v12 + 24) = v11;
  v15[4] = sub_10001B278;
  v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10001B258;
  v15[3] = &unk_1005F8278;
  v13 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  objc_msgSend(v9, "withActionName:block:", v10, v13, swift_release().n128_f64[0]);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 126, 107, 51, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_10023B128(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  void *v45;
  void *v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  id v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  void *v57;
  _QWORD *v58;
  void *v59;
  id v60;
  uint64_t v61;
  _BYTE v62[24];
  _QWORD aBlock[6];

  v2 = v1;
  if (qword_10063D528 != -1)
    swift_once(&qword_10063D528, sub_10023A778);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_10064EF38);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Save as Template Cancel", 23, 2, v5);
  swift_bridgeObjectRelease(v5);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 2);
  if (!Strong)
    goto LABEL_20;
  v8 = Strong;
  v9 = *(id *)(sub_10028D484() + 32);
  swift_release();
  v10 = (_QWORD *)((char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x68));
  swift_beginAccess(v10, v62, 0, 0);
  if (!*v10)
  {
    swift_unknownObjectRelease(v8);

    goto LABEL_20;
  }
  v12 = (_QWORD *)(*v10 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
  v13 = *v12;
  v14 = v12[1];
  ObjectType = swift_getObjectType(*v12, v11);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 216);
  v17 = swift_unknownObjectRetain(v13);
  LOBYTE(v14) = v16(ObjectType, v14, v17);

  swift_unknownObjectRelease(v13);
  if ((v14 & 1) == 0)
  {
LABEL_19:
    swift_unknownObjectRelease(v8);
    goto LABEL_20;
  }
  v18 = *(id *)(sub_10028D484() + 32);
  swift_release();
  v19 = (_QWORD *)((char *)v18 + *(_QWORD *)((swift_isaMask & *v18) + 0x68));
  swift_beginAccess(v19, &v61, 0, 0);
  if (*v19)
  {
    v21 = (_QWORD *)(*v19 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea);
    v22 = *v21;
    v23 = v21[1];
    v24 = swift_getObjectType(*v21, v20);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 8);
    v26 = swift_unknownObjectRetain(v22);
    v27 = v25(v24, v23, v26);
    v29 = v28;

    swift_unknownObjectRelease(v22);
    if (v29)
      goto LABEL_12;
  }
  else
  {

  }
  swift_bridgeObjectRelease(0);
  v27 = 0;
  v29 = 0xE000000000000000;
LABEL_12:
  v31 = v2[24];
  v32 = swift_getObjectType(v2[23], v30);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v32, v31);
  if (v27 == v33 && v29 == v34)
  {
    swift_bridgeObjectRelease_n(v29, 2);
    goto LABEL_19;
  }
  v36 = v34;
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v33, v34, 0);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v36);
  swift_unknownObjectRelease(v8);
  if ((v37 & 1) == 0)
    goto LABEL_21;
LABEL_20:
  v38 = v2[24];
  v39 = swift_getObjectType(v2[23], v7);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 40))(v39, v38) & 1) != 0)
  {
LABEL_21:
    v40 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    v42 = v41;
    v43 = swift_allocObject(&unk_1005F8328, 24, 7);
    swift_weakInit(v43 + 16, v2);
    swift_retain();
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
    aBlock[4] = sub_10023BB14;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000D4884;
    aBlock[3] = &unk_1005F8340;
    v45 = _Block_copy(aBlock);
    swift_release();
    v46 = (void *)objc_opt_self(UIAlertAction);
    v47 = objc_msgSend(v46, "actionWithTitle:style:handler:", v44, 2, v45);
    _Block_release(v45);
    swift_release();

    objc_msgSend(v40, "addAction:", v47);
    static TTRLocalizableStrings.Common.alertCancelButton.getter(v48);
    v50 = v49;
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v46, "actionWithTitle:style:handler:", v51, 1, 0, swift_bridgeObjectRelease(v50).n128_f64[0]);

    objc_msgSend(v40, "addAction:", v52);
    v53 = objc_msgSend(v40, "popoverPresentationController");
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v53, "setBarButtonItem:", a1);

    }
    v55 = sub_10001413C(v2 + 25, v2[28]);
    v56 = (void *)swift_unknownObjectWeakLoadStrong(*v55 + 16);
    if (v56)
    {
      v57 = v56;
      objc_msgSend(v56, "presentViewController:animated:completion:", v40, 1, 0);

      v47 = v52;
      v52 = v57;
    }
    else
    {

    }
    goto LABEL_29;
  }
  v58 = sub_10001413C(v2 + 25, v2[28]);
  v59 = (void *)swift_unknownObjectWeakLoadStrong(*v58 + 24);
  if (!v59)
    return;
  v52 = v59;
  v60 = objc_msgSend(v59, "presentingViewController");
  if (v60)
  {
    v47 = v60;
    objc_msgSend(v60, "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_29:

  }
}

uint64_t sub_10023B640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  _QWORD v9[5];
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    sub_100010634(result + 200, (uint64_t)v9);
    swift_release();
    v4 = sub_10001413C(v9, v9[3]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v4 + 24);
    if (Strong)
    {
      v6 = Strong;
      v7 = objc_msgSend(Strong, "presentingViewController");
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);

      }
    }
    return sub_100027F10(v9);
  }
  return result;
}

void sub_10023B6FC()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  void *Strong;
  id v8;
  void *v9;
  id v10;

  if (qword_10063D528 != -1)
    swift_once(&qword_10063D528, sub_10023A778);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_10064EF38);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Save as Template Save", 21, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[24];
  ObjectType = swift_getObjectType(v0[23], v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 64))(ObjectType, v3);
  v6 = *sub_10001413C(v0 + 25, v0[28]);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6 + 24);
  if (Strong)
  {
    v10 = Strong;
    v8 = objc_msgSend(Strong, "presentingViewController");
    if (v8)
    {
      v9 = v8;
      if (*(_QWORD *)(v6 + 32))
      {
        sub_100036320();
        objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
        sub_100036D08();
      }
      else
      {
        objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);
      }

    }
  }
}

uint64_t sub_10023B84C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[8];
  __int16 v7;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  v1 = *(_OWORD *)(v0 + 160);
  v6[6] = *(_OWORD *)(v0 + 144);
  v6[7] = v1;
  v7 = *(_WORD *)(v0 + 176);
  v2 = *(_OWORD *)(v0 + 96);
  v6[2] = *(_OWORD *)(v0 + 80);
  v6[3] = v2;
  v3 = *(_OWORD *)(v0 + 128);
  v6[4] = *(_OWORD *)(v0 + 112);
  v6[5] = v3;
  v4 = *(_OWORD *)(v0 + 64);
  v6[0] = *(_OWORD *)(v0 + 48);
  v6[1] = v4;
  sub_1001E6758((uint64_t)v6);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 184));
  sub_100027F10((_QWORD *)(v0 + 200));

  swift_release();
  return swift_deallocClassInstance(v0, 256, 7);
}

uint64_t type metadata accessor for TTRITemplateSavingPresenter()
{
  return objc_opt_self(_TtC9Reminders27TTRITemplateSavingPresenter);
}

void sub_10023B8F4()
{
  Swift::String v0;

  v0._object = (void *)0x80000001005682D0;
  v0._countAndFlagsBits = 0xD000000000000019;
  TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

uint64_t sub_10023B930()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t result;
  uint64_t v10;
  _OWORD v11[8];
  __int16 v12;
  _OWORD v13[8];
  __int16 v14;

  sub_10023A808((uint64_t)v11);
  v1 = *(_OWORD *)(v0 + 160);
  v13[6] = *(_OWORD *)(v0 + 144);
  v13[7] = v1;
  v14 = *(_WORD *)(v0 + 176);
  v2 = *(_OWORD *)(v0 + 96);
  v13[2] = *(_OWORD *)(v0 + 80);
  v13[3] = v2;
  v3 = *(_OWORD *)(v0 + 128);
  v13[4] = *(_OWORD *)(v0 + 112);
  v13[5] = v3;
  v4 = *(_OWORD *)(v0 + 64);
  v13[0] = *(_OWORD *)(v0 + 48);
  v13[1] = v4;
  v5 = v11[5];
  *(_OWORD *)(v0 + 112) = v11[4];
  *(_OWORD *)(v0 + 128) = v5;
  v6 = v11[7];
  *(_OWORD *)(v0 + 144) = v11[6];
  *(_OWORD *)(v0 + 160) = v6;
  *(_WORD *)(v0 + 176) = v12;
  v7 = v11[3];
  *(_OWORD *)(v0 + 80) = v11[2];
  *(_OWORD *)(v0 + 96) = v7;
  v8 = v11[1];
  *(_OWORD *)(v0 + 48) = v11[0];
  *(_OWORD *)(v0 + 64) = v8;
  sub_1001E6758((uint64_t)v13);
  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v10 = result;
    sub_10028DBFC();
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_10023B9E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10023BA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 192);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 184), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, ObjectType, v5);
}

uint64_t sub_10023BA54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023BA64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023BA90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  v6 = *(_QWORD *)(v3 + 192);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 184), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, v5, ObjectType, v6);
}

uint64_t sub_10023BAE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023BAF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023BB14(uint64_t a1)
{
  uint64_t v1;

  return sub_10023B640(a1, v1);
}

void sub_10023BB2C(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD aBlock[5];
  uint64_t v11;

  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController), "transitionCoordinator");
  if (v2)
  {
    v3 = v2;
    v4 = swift_allocObject(&unk_1005F8420, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16, v1);
    v5 = swift_allocObject(&unk_1005F8448, 32, 7);
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = a1;
    aBlock[4] = sub_10023D1CC;
    v11 = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10023C014;
    aBlock[3] = &unk_1005F8460;
    v6 = _Block_copy(aBlock);
    v7 = v11;
    v8 = a1;
    swift_release(v7);
    objc_msgSend(v3, "animateAlongsideTransition:completion:", 0, v6);

    _Block_release(v6);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    sub_10023BCC0(a1);

  }
}

void sub_10023BC68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10023BCC0(a3);

  }
}

void sub_10023BCC0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  char *v23;
  char v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  if (a1)
    v4 = a1;
  else
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRootViewEmptyViewController()), "init");
  v5 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100521140;
  *(_QWORD *)(v6 + 32) = v4;
  v27 = v6;
  specialized Array._endMutation()(v6);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
  v8 = a1;
  v9 = v4;
  v10 = objc_msgSend(v7, "viewControllers");
  v11 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  LOBYTE(v10) = sub_100096AFC(v12, v27);
  swift_bridgeObjectRelease(v12);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "setViewControllers:", isa);

    v14 = objc_msgSend(v7, "viewControllers");
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v11);

    LOBYTE(v14) = sub_100096AFC(v15, v27);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v27);
    if ((v14 & 1) == 0)
    {
      if (qword_10063D530 != -1)
        swift_once(&qword_10063D530, sub_10000746C);
      v16 = type metadata accessor for Logger(0);
      sub_100012DC4(v16, (uint64_t)qword_10064F020);
      v17 = v9;
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.fault.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = (_QWORD *)swift_slowAlloc(8, -1);
        v27 = (uint64_t)v17;
        *(_DWORD *)v20 = 138412290;
        v21 = v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v20 + 4, v20 + 12);
        *v26 = v17;

        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to set detailViewController because there's an existing transition or presentation occuring {detailViewController: %@}", v20, 0xCu);
        v22 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v26, 1, v22);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {

      }
    }
  }
  sub_10023C05C(1);
  sub_10001413C((_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter) + 48), *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter) + 72));
  v23 = sub_10029ECC0();
  if (v24 == -1)
    goto LABEL_15;
  v25 = v23;
  if ((v24 & 1) != 0)
  {
    sub_1000760F4(v23, v24);
LABEL_15:
    v25 = 0;
  }
  sub_10023C2C8(v25);

}

uint64_t sub_10023C014(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_10023C05C(char a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char isEscapingClosureAtFileLocation;
  _QWORD v18[5];
  uint64_t v19;

  if (!objc_msgSend(v1, "isCollapsed"))
    goto LABEL_6;
  v3 = *(void **)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController];
  v4 = objc_msgSend(v3, "viewControllers");
  v5 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  v7 = *(id *)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
  v8 = sub_10002D318((uint64_t)v7, v6);
  swift_bridgeObjectRelease(v6);

  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend(v3, "topViewController");
    if (!v9 || (v10 = v9, v9, v7 != v10))

  }
  else
  {
LABEL_6:
    if ((a1 & 1) != 0)
    {
      objc_msgSend(v1, "showDetailViewController:sender:", *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController], v1);
    }
    else
    {
      v11 = (void *)objc_opt_self(UIView);
      v12 = swift_allocObject(&unk_1005F83A8, 24, 7);
      *(_QWORD *)(v12 + 16) = v1;
      v13 = swift_allocObject(&unk_1005F83D0, 32, 7);
      *(_QWORD *)(v13 + 16) = sub_10023D14C;
      *(_QWORD *)(v13 + 24) = v12;
      v18[4] = sub_10001B278;
      v19 = v13;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_10001B258;
      v18[3] = &unk_1005F83E8;
      v14 = _Block_copy(v18);
      v15 = v19;
      v16 = v1;
      swift_retain(v13);
      swift_release(v15);
      objc_msgSend(v11, "performWithoutAnimation:", v14);
      _Block_release(v14);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 101, 216, 48, 1);
      swift_release(v12);
      swift_release(v13);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
  }
}

void sub_10023C2C8(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  objc_class *v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  NSObject *oslog;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;

  v2 = v1;
  if (a1)
  {
    v3 = a1;
    if (objc_msgSend(v3, "canBeShared"))
    {
      v4 = objc_msgSend(v3, "account");
      v5 = objc_msgSend(v4, "accountTypeHost");

      LODWORD(v4) = objc_msgSend(v5, "isCloudKit");
      if ((_DWORD)v4)
      {
        if (qword_10063D530 != -1)
          swift_once(&qword_10063D530, sub_10000746C);
        v6 = type metadata accessor for Logger(0);
        sub_100012DC4(v6, (uint64_t)qword_10064F020);
        v7 = v3;
        v8 = Logger.logObject.getter(v7);
        v9 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc(12, -1);
          v11 = swift_slowAlloc(32, -1);
          v38 = v11;
          *(_DWORD *)v10 = 136315138;
          v12 = objc_msgSend(v7, "displayName");
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v15 = v14;

          v37 = sub_100027E40(v13, v15, &v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v10 + 4, v10 + 12);

          swift_bridgeObjectRelease(v15);
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRIRootViewController: Preparing activityItemsConfigurationProviding for list {remList: %s}.", v10, 0xCu);
          swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
          swift_slowDealloc(v11, -1, -1);
          swift_slowDealloc(v10, -1, -1);

        }
        else
        {

        }
        v25 = (objc_class *)type metadata accessor for TTRIRootActivityItemsConfigurationProviding();
        v26 = (char *)objc_allocWithZone(v25);
        *(_QWORD *)&v26[OBJC_IVAR____TtC9Reminders43TTRIRootActivityItemsConfigurationProviding_visibleList] = v7;
        v39.receiver = v26;
        v39.super_class = v25;
        v27 = v7;
        v28 = objc_msgSendSuper2(&v39, "init");
        v29 = OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding;
        v30 = *(void **)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding];
        *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding] = v28;

        v31 = objc_msgSend(v2, "view");
        if (v31)
        {
          v32 = v31;
          v33 = objc_msgSend(v31, "window");

          if (v33)
          {
            v34 = objc_msgSend(v33, "windowScene");

            if (v34)
            {
              v35 = *(id *)&v2[v29];
              objc_msgSend(v34, "setActivityItemsConfigurationSource:", v35);

            }
          }

          return;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }

  }
  v16 = *(void **)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_activityItemsConfigurationProviding] = 0;

  v17 = objc_msgSend(v2, "view");
  if (!v17)
  {
    __break(1u);
    goto LABEL_25;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "window");

  if (v19)
  {
    v20 = objc_msgSend(v19, "windowScene");

    if (v20)
    {
      objc_msgSend(v20, "setActivityItemsConfigurationSource:", 0);

    }
  }
  if (qword_10063D530 != -1)
    swift_once(&qword_10063D530, sub_10000746C);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100012DC4(v21, (uint64_t)qword_10064F020);
  oslog = Logger.logObject.getter(v22);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v23, "TTRIRootViewController: Clearing activityItemsConfigurationProviding.", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

}

_OWORD *sub_10023C7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v3;
  void *v4;
  objc_class *ObjectType;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  objc_super v18;
  __int128 v19;
  __int128 v20;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  sub_10001413C((_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  sub_10029E838(a1, a2, (uint64_t)&v19);
  if (*((_QWORD *)&v20 + 1))
    return sub_100028D38(&v19, a3);
  sub_1000073A0((uint64_t)&v19, &qword_100640E50);
  sub_100107414(a2, (uint64_t)&v19);
  v10 = *((_QWORD *)&v20 + 1);
  if (*((_QWORD *)&v20 + 1))
  {
    v11 = sub_10001413C(&v19, *((uint64_t *)&v20 + 1));
    v12 = *(_QWORD *)(v10 - 8);
    v13 = __chkstk_darwin(v11);
    v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v15, v13);
    v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    sub_100027F10(&v19);
  }
  else
  {
    v16 = 0;
  }
  v18.receiver = v4;
  v18.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v18, "targetForAction:withSender:", a1, v16);
  swift_unknownObjectRelease(v16);
  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(&v19);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  return (_OWORD *)sub_10023D25C((uint64_t)&v19, (uint64_t)a3);
}

id sub_10023CBBC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders43TTRIRootActivityItemsConfigurationProviding_visibleList;
  if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders43TTRIRootActivityItemsConfigurationProviding_visibleList], "canBeShared")&& (v3 = objc_msgSend(*(id *)&v0[v2], "account"), v4 = objc_msgSend(v3, "accountTypeHost"), v3, LODWORD(v3) = objc_msgSend(v4, "isCloudKit"), v4, (_DWORD)v3))
  {
    if (qword_10063D530 != -1)
      swift_once(&qword_10063D530, sub_10000746C);
    v5 = type metadata accessor for Logger(0);
    sub_100012DC4(v5, (uint64_t)qword_10064F020);
    v6 = v1;
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      *(_DWORD *)v9 = 136315138;
      v24 = v22;
      v10 = objc_msgSend(*(id *)&v1[v2], "displayName");
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      v23 = sub_100027E40(v11, v13, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v9 + 4, v9 + 12);

      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIRootViewController providing activityItemsConfiguration for list {remList: %s}.", v9, 0xCu);
      swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    v20 = *(id *)&v1[v2];
    v19 = _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(v20);

  }
  else
  {
    if (qword_10063D530 != -1)
      swift_once(&qword_10063D530, sub_10000746C);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_10064F020);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRIRootViewController cannot provide activityItemsConfiguration, list is not shareable.", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    return 0;
  }
  return v19;
}

uint64_t type metadata accessor for TTRIRootActivityItemsConfigurationProviding()
{
  return objc_opt_self(_TtC9Reminders43TTRIRootActivityItemsConfigurationProviding);
}

uint64_t sub_10023CF24(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  uint64_t v16;
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v3 = objc_msgSend(a1, "viewControllerForColumn:", 2);
  if (v3)
  {
    v4 = v3;
    v5 = objc_opt_self(UINavigationController);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (v6 && (v7 = objc_msgSend(v6, "topViewController")) != 0)
    {
      v8 = v7;
      v17 = v7;
      v9 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
      v10 = v8;
      v11 = sub_10002A750(&qword_10064F228);
      if ((swift_dynamicCast(v15, &v17, v9, v11, 6) & 1) != 0)
      {
        sub_10002E37C(v15, (uint64_t)v18);
        v12 = v19;
        v13 = v20;
        sub_10001413C(v18, v19);
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);

        sub_100027F10(v18);
      }
      else
      {
        v16 = 0;
        memset(v15, 0, sizeof(v15));

        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_10064F230);
      }
    }
    else
    {

    }
  }
  return sub_10000AAAC((int)objc_msgSend(v2, "isCollapsed"));
}

uint64_t sub_10023D128()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10023D14C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "showDetailViewController:sender:", *(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController), *(_QWORD *)(v0 + 16));
}

uint64_t sub_10023D16C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023D17C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023D1A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10023D1CC(uint64_t a1)
{
  uint64_t v1;

  sub_10023BC68(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10023D1D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10023D1F8()
{
  uint64_t v0;

}

uint64_t sub_10023D230()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023D25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100640E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023D2BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = *a2;
  v5 = (void *)a2[1];
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v2, v4) & 1) != 0)
  {
    if (v3)
    {
      if (v5)
      {
        sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
        v6 = v5;
        v7 = v3;
        v8 = static NSObject.== infix(_:_:)(v7, v6);

        if ((v8 & 1) != 0)
          return 1;
      }
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

BOOL sub_10023D370(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BOOL sub_10023D39C(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char v12;
  _BOOL8 result;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v12 = static NSObject.== infix(_:_:)(*(_QWORD *)&v2, *(_QWORD *)&v7);
  result = 0;
  if ((v12 & 1) != 0 && v3 == v8 && v4 == v9 && v6 == v11)
    return v5 == v10;
  return result;
}

void sub_10023D43C(void *a1, void *a2)
{
  char *v2;
  id *v4;
  void *v5;
  id v6;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v4 = (id *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill])
    return;
  v5 = v2;
  v6 = v4[1];
  v21 = *(id *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (a1)
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    sub_10007EDAC(v21, v6);
    sub_10007EDAC(v21, v6);
    sub_10007EDAC(a1, a2);
    if ((static NSObject.== infix(_:_:)(v21, a1) & 1) == 0)
      goto LABEL_8;
    if (!v6)
    {

      if (!a2)
      {
        v9 = 0;
        v8 = 0;
LABEL_22:

        sub_10007EDD8(v21, v6);
        return;
      }
      goto LABEL_9;
    }
    if (a2)
    {
      sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
      v8 = a2;
      v9 = v6;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
LABEL_8:

    }
LABEL_9:

    sub_10007EDD8(v21, v6);
    if (!*v4)
      return;
    v21 = *v4;
    v6 = v4[1];
  }
  v11 = v6;
  v12 = v21;
  v13 = objc_msgSend(v5, "layer");
  v14 = objc_opt_self(CAShapeLayer);
  v15 = swift_dynamicCastObjCClass(v13, v14);
  if (!v15)
  {

LABEL_19:
    sub_10007EDD8(v21, v6);
    return;
  }
  v16 = (void *)v15;
  if (!v6)
  {
    v19 = v12;
    goto LABEL_18;
  }
  v17 = v11;
  v18 = objc_msgSend(v12, "_colorBlendedWithColor:", v17);
  if (v18)
  {
    v19 = v18;

LABEL_18:
    v20 = objc_msgSend(v19, "CGColor");
    objc_msgSend(v16, "setFillColor:", v20);

    goto LABEL_19;
  }
  __break(1u);
}

void sub_10023D6B8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill + 8];
    v3 = v2;
    v4 = v1;
    v5 = objc_msgSend(v0, "layer");
    v6 = objc_opt_self(CAShapeLayer);
    v7 = swift_dynamicCastObjCClass(v5, v6);
    if (!v7)
    {
LABEL_9:

      sub_10007EDD8(v1, v2);
      return;
    }
    v8 = (void *)v7;
    if (!v2)
    {
      v11 = v4;
      goto LABEL_8;
    }
    v9 = v3;
    v10 = objc_msgSend(v4, "_colorBlendedWithColor:", v9);
    if (v10)
    {
      v11 = v10;

LABEL_8:
      v12 = objc_msgSend(v11, "CGColor");
      objc_msgSend(v8, "setFillColor:", v12);

      v5 = v11;
      goto LABEL_9;
    }
    __break(1u);
  }
}

void sub_10023D7F4()
{
  char *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  double MinY;
  id v11;
  char v12;
  char v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat *v22;
  id v23;
  double v24;
  double MaxY;
  double v26;
  double MaxX;
  double v28;
  double v29;
  double MinX;
  double v31;
  id v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  if ((v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 16] & 1) == 0)
  {
    v1 = *(double *)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 8];
    v32 = objc_msgSend(v0, "layer");
    v2 = objc_opt_self(CAShapeLayer);
    v3 = swift_dynamicCastObjCClass(v32, v2);
    if (v3)
    {
      v4 = (void *)v3;
      objc_msgSend(v0, "bounds");
      x = v33.origin.x;
      y = v33.origin.y;
      width = v33.size.width;
      height = v33.size.height;
      MidX = CGRectGetMidX(v33);
      v34.origin.x = x;
      v34.origin.y = y;
      v34.size.width = width;
      v34.size.height = height;
      MinY = CGRectGetMinY(v34);
      v35.origin.x = x;
      v35.origin.y = y;
      v35.size.width = width;
      v35.size.height = height;
      MaxX = CGRectGetMaxX(v35);
      v36.origin.x = x;
      v36.origin.y = y;
      v36.size.width = width;
      v36.size.height = height;
      v24 = CGRectGetMinY(v36);
      v37.origin.x = x;
      v37.origin.y = y;
      v37.size.width = width;
      v37.size.height = height;
      v29 = CGRectGetMaxX(v37);
      v38.origin.x = x;
      v38.origin.y = y;
      v38.size.width = width;
      v38.size.height = height;
      MaxY = CGRectGetMaxY(v38);
      v39.origin.x = x;
      v39.origin.y = y;
      v39.size.width = width;
      v39.size.height = height;
      MinX = CGRectGetMinX(v39);
      v40.origin.x = x;
      v40.origin.y = y;
      v40.size.width = width;
      v40.size.height = height;
      v26 = CGRectGetMaxY(v40);
      v41.origin.x = x;
      v41.origin.y = y;
      v41.size.width = width;
      v41.size.height = height;
      v31 = CGRectGetMinX(v41);
      v42.origin.x = x;
      v42.origin.y = y;
      v42.size.width = width;
      v42.size.height = height;
      v28 = CGRectGetMinY(v42);
      v11 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
      objc_msgSend(v11, "moveToPoint:", MidX, MinY);
      v12 = TTRRectCorners.cornerMask(layoutDirection:isFlipped:)((UIUserInterfaceLayoutDirection)objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection"), 1);
      v13 = sub_10023E224(v12);
      if ((v13 & 2) != 0)
        v14 = v1;
      else
        v14 = 0.0;
      if (fabs(v14) >= 0.0000000149011612)
        v15 = v14;
      else
        v15 = 0.001;
      objc_msgSend(v11, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", 2, 0, MaxX, v24, v15, v15);
      if ((v13 & 8) != 0)
        v16 = v1;
      else
        v16 = 0.0;
      if (fabs(v16) >= 0.0000000149011612)
        v17 = v16;
      else
        v17 = 0.001;
      objc_msgSend(v11, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", 8, 0, v29, MaxY, v17, v17);
      if ((v13 & 4) != 0)
        v18 = v1;
      else
        v18 = 0.0;
      if (fabs(v18) >= 0.0000000149011612)
        v19 = v18;
      else
        v19 = 0.001;
      objc_msgSend(v11, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", 4, 0, MinX, v26, v19, v19);
      if ((v13 & 1) != 0)
        v20 = v1;
      else
        v20 = 0.0;
      if (fabs(v20) >= 0.0000000149011612)
        v21 = v20;
      else
        v21 = 0.001;
      objc_msgSend(v11, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", 1, 0, v31, v28, v21, v21);
      objc_msgSend(v11, "closePath");
      v22 = (CGFloat *)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_boundsUsedForShapePath];
      *v22 = x;
      v22[1] = y;
      v22[2] = width;
      v22[3] = height;
      *((_BYTE *)v22 + 32) = 0;
      v23 = objc_msgSend(v11, "CGPath");
      objc_msgSend(v4, "setPath:", v23);
      objc_msgSend(v4, "setShadowPath:", v23);

    }
    else
    {

    }
  }
}

void sub_10023DB84(id *a1)
{
  char *v1;
  char *v2;
  void *v4;
  char *v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  id v16;
  double v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  void *v22;
  float64x2_t v23;
  float64x2_t v24;
  _QWORD v25[5];

  v2 = v1;
  sub_10023E2C0((uint64_t)a1, (uint64_t)&v22);
  v4 = v22;
  v5 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  v6 = *(void **)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  if (!v6)
  {
    sub_10023E2C0((uint64_t)a1, (uint64_t)v25);
    if (!v25[0])
      return;
    goto LABEL_7;
  }
  v20 = v23;
  v21 = v24;
  v18 = *(float64x2_t *)(v5 + 8);
  v19 = *(float64x2_t *)(v5 + 24);
  sub_10023E2C0((uint64_t)a1, (uint64_t)v25);
  if (!v25[0])
  {
LABEL_7:
    v9 = v6;
    sub_100037F78(a1);

LABEL_8:
    if (*(_QWORD *)v5)
    {
      v10 = *((double *)v5 + 3);
      v11 = *((double *)v5 + 4);
      v13 = *((double *)v5 + 1);
      v12 = *((double *)v5 + 2);
      v14 = *(id *)v5;
      v15 = objc_msgSend(v2, "layer");
      v16 = objc_msgSend(v14, "CGColor");
      objc_msgSend(v15, "setShadowColor:", v16);

      objc_msgSend(v15, "setShadowOffset:", v13, v12);
      objc_msgSend(v15, "setShadowRadius:", v10);
      *(float *)&v17 = v11;
      objc_msgSend(v15, "setShadowOpacity:", v17);

    }
    return;
  }
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v7 = v6;
  sub_100037F78(a1);
  v8 = static NSObject.== infix(_:_:)(v7, v4);
  sub_100037F50(a1);

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v18, v20), (int32x4_t)vceqq_f64(v19, v21))), 0xFuLL))) & 1) == 0|| (v8 & 1) == 0)
  {
    goto LABEL_8;
  }
}

void sub_10023DD78()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  double v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v9 = objc_msgSend(v0, "layer");
  v1 = objc_opt_self(CAShapeLayer);
  v2 = (void *)swift_dynamicCastObjCClass(v9, v1);
  if (v2)
  {
    v3 = v2;
    v4 = OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox;
    v5 = 0.0;
    if (*((_BYTE *)v0
         + OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox))
      v5 = 1.0;
    objc_msgSend(v2, "setLineWidth:", v5);
    if (*((_BYTE *)v0 + v4) == 1)
    {
      v6 = objc_msgSend((id)objc_opt_self(UIColor), "purpleColor");
      v7 = objc_msgSend(v6, "CGColor");

    }
    else
    {
      v7 = 0;
    }
    objc_msgSend(v3, "setStrokeColor:", v7);

    v8 = v7;
  }
  else
  {
    v8 = v9;
  }

}

id sub_10023E004(void *a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  _QWORD *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v7 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox] = 0;
  v8 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_boundsUsedForShapePath];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  v11.receiver = v2;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

uint64_t type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView()
{
  return objc_opt_self(_TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView);
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill;
}

uint64_t sub_10023E224(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
  {
    if ((a1 & 4) != 0)
    {
      v1 = 5;
      if ((a1 & 2) == 0)
        goto LABEL_5;
    }
    else
    {
      v1 = 1;
      if ((a1 & 2) == 0)
        goto LABEL_5;
    }
LABEL_4:
    v1 |= 2uLL;
    goto LABEL_5;
  }
  if ((a1 & 4) == 0)
  {
    v1 = 0;
    if ((a1 & 2) == 0)
      goto LABEL_5;
    goto LABEL_4;
  }
  v1 = 4;
  if ((a1 & 2) != 0)
    goto LABEL_4;
LABEL_5:
  if ((a1 & 8) != 0)
    return v1 | 8;
  return v1;
}

id sub_10023E270(uint64_t a1, char a2, uint64_t a3, id a4, double a5, double a6, double a7)
{
  if ((a1 & ~a3) != 0)
    a7 = 0.0;
  if (fabs(a7) < 0.0000000149011612)
    a7 = 0.001;
  return objc_msgSend(a4, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", a1, a2 & 1, a5, a6, a7, a7);
}

uint64_t sub_10023E2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100641260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023E30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064F2B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064F2B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10023E44C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id result;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v13 = *(_QWORD *)(v36 - 8);
  v14 = __chkstk_darwin(v36);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37.receiver = v3;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "viewDidLoad", v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v9);
  UICollectionLayoutListConfiguration.init(appearance:)(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v5);
  UICollectionLayoutListConfiguration.footerMode.setter(v8);
  sub_100005ED8(0, (unint64_t *)&qword_10064F390, UICollectionViewCompositionalLayout_ptr);
  v17 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v16);
  result = objc_msgSend(v3, "collectionView");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v19 = result;
  objc_msgSend(result, "setCollectionViewLayout:animated:", v17, 0);

  result = objc_msgSend(v3, "collectionView");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v20 = result;
  objc_msgSend(result, "setAllowsSelection:", 0);

  sub_10023E79C();
  sub_10023EB3C(0);
  v21 = objc_msgSend(v3, "navigationItem");
  v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
  Strong = swift_unknownObjectWeakLoadStrong(v22 + 32);
  if (Strong)
  {
    v25 = Strong;
    v26 = *(_QWORD *)(v22 + 40);
    v27 = swift_getObjectType(Strong, v24);
    LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
    swift_unknownObjectRelease(v25);
    Strong = v26 & 1;
  }
  static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)(Strong);
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setTitle:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  v31 = objc_msgSend(v3, "navigationItem");
  v32 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
  objc_msgSend(v31, "setLeftBarButtonItem:", v32);

  v33 = objc_msgSend(v3, "navigationItem");
  v34 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
  objc_msgSend(v33, "setRightBarButtonItem:", v34);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v36);
}

void sub_10023E79C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _QWORD);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(_BYTE *, _QWORD);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _BYTE v48[32];

  v1 = sub_10002A750(&qword_10064F398);
  v45 = *(_QWORD *)(v1 - 8);
  v46 = v1;
  v2 = *(_QWORD *)(v45 + 64);
  __chkstk_darwin(v1);
  v42 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - v4;
  v6 = sub_10002A750(&qword_10064F3A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = swift_allocObject(&unk_1005F86F8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v0);
  v14 = type metadata accessor for TTRIEditSectionsCell();
  v47 = v12;
  UICollectionView.CellRegistration.init(handler:)(sub_100240084, v13, v14, &type metadata for TTREditSectionsViewModel.ItemIdentifier);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v17 = v16;
  v18 = swift_allocObject(&unk_1005F86F8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v0);
  v19 = sub_100005ED8(0, &qword_10064F3A8, UICollectionViewListCell_ptr);
  v44 = v5;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v15, v17, sub_10024008C, v18, v19);
  v43 = v0;
  v20 = objc_msgSend(v0, "collectionView");
  if (v20)
  {
    v21 = v20;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v47, v6);
    v22 = *(unsigned __int8 *)(v7 + 80);
    v23 = (v22 + 16) & ~v22;
    v24 = swift_allocObject(&unk_1005F8720, v23 + v8, v22 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v9, v6);
    v25 = objc_allocWithZone((Class)sub_10002A750(&qword_10064F3B0));
    v26 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v21, sub_1002400A0, v24);
    v41 = v6;
    v27 = v44;
    v28 = v45;
    v29 = v42;
    v30 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v44, v46);
    v31 = *(unsigned __int8 *)(v28 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = swift_allocObject(&unk_1005F8748, v32 + v2, v31 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v33 + v32, v29, v30);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_100240104, v33);
    v34 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v48);
    v35 = sub_10002A750(&qword_10064F3B8);
    UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0, v35);
    v34(v48, 0);
    v36 = swift_allocObject(&unk_1005F86F8, 24, 7);
    v37 = v43;
    swift_unknownObjectWeakInit(v36 + 16, v43);
    v38 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v48);
    UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_10024016C, v36, v35);
    v38(v48, 0);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v30);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v41);
    v39 = *(void **)&v37[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource];
    *(_QWORD *)&v37[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource] = v26;

  }
  else
  {
    __break(1u);
  }
}

void sub_10023EB3C(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_10064F380);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter) + 168);
  v9 = OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel))
  {
    swift_retain();
    v10 = swift_retain();
    v11 = TTREditSectionsViewModel.isEmpty.getter(v10);
    swift_release();
    v12 = v11 ^ 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  v13 = swift_retain();
  TTREditSectionsViewModel.snapshot(previousViewModel:)(v13);
  swift_release();
  v14 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource);
  if (v14)
  {
    v15 = v14;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v7, a1 & v12 & 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v2 + v9) = v8;
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

id sub_10023EDD0(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", a3, v3, *a2);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

void sub_10023EE50(char *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t (**v76)();
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t ObjectType;
  __n128 v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[5];
  char v118;
  uint64_t v119[6];
  uint64_t v120[6];
  _QWORD v121[5];
  char v122;
  _QWORD v123[5];
  char v124;

  v7 = type metadata accessor for UICellAccessory.Placement(0);
  v93 = *(_QWORD *)(v7 - 8);
  v94 = v7;
  v8 = __chkstk_darwin(v7);
  v95 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_10064F3E0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UICellAccessory.ReorderOptions(0, v15);
  v106 = *(_QWORD *)(v18 - 8);
  v107 = v18;
  v19 = __chkstk_darwin(v18);
  v105 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UICellAccessory.DisplayedState(0, v19);
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  __chkstk_darwin(v21);
  v104 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for UICellAccessory(0);
  v23 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a3;
  v26 = a4 + 16;
  swift_beginAccess(a4 + 16, &v116, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (Strong)
  {
    v28 = (void *)Strong;
    v102 = v17;
    v103 = v23;
    v91 = v10;
    v92 = v13;
    v90 = v11;
    v29 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter);
    swift_unknownObjectRetain(v29);

    v30 = *(_QWORD *)(v29 + 168);
    swift_retain();
    swift_unknownObjectRelease(v29);
    v101 = v30;
    TTREditSectionsViewModel.section(with:)(v117, v25);
    v96 = (void *)v117[0];
    v97 = v117[1];
    v98 = v117[2];
    v99 = v117[3];
    v100 = v117[4];
    v31 = v118;
    v112 = a1;
    v32 = (uint64_t)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
    v33 = *(void **)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
    v34 = *(_QWORD *)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel + 8];
    v35 = *(_QWORD *)(v32 + 16);
    v36 = *(_QWORD *)(v32 + 24);
    v37 = *(_QWORD *)(v32 + 32);
    v38 = *(_BYTE *)(v32 + 40);
    sub_10008C8AC((uint64_t)v117, (uint64_t)v120);
    if (v120[0])
    {
      if (v33)
      {
        v123[0] = v33;
        v123[1] = v34;
        v123[2] = v35;
        v123[3] = v36;
        v123[4] = v37;
        v124 = v38 & 1;
        v121[0] = v96;
        v121[1] = v97;
        v121[2] = v98;
        v121[3] = v99;
        v121[4] = v100;
        v122 = v31 & 1;
        sub_10008C874((uint64_t)v33, v34, v35, v36, v37);
        sub_10008C9D8((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008C874);
        v39 = static TTREditSectionsViewModel.SectionItem.__derived_struct_equals(_:_:)(v121, v123);
        sub_10008CA10(v33, v34, v35, v36, v37);
        sub_10008C9D8((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008CA10);
        if ((v39 & 1) != 0)
        {
LABEL_14:
          v50 = v112;
          v51 = *(void **)&v112[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField];
          swift_beginAccess(v26, &v115, 0, 0);
          v52 = (void *)swift_unknownObjectWeakLoadStrong(v26);
          v53 = v51;
          objc_msgSend(v53, "setDelegate:", v52);

          sub_10008C8AC((uint64_t)v117, (uint64_t)v119);
          if (v119[0])
          {
            v55 = v110;
            v54 = v111;
            v56 = v104;
            (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v104, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v111);
            v57 = type metadata accessor for UICellAccessory.LayoutDimension(0);
            v58 = v102;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v102, 1, 1, v57);
            v59 = v105;
            UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v58, 0, 2);
            v60 = v108;
            static UICellAccessory.reorder(displayed:options:)(v56, v59);
            (*(void (**)(char *, uint64_t))(v106 + 8))(v59, v107);
            (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
            v61 = sub_10002A750((uint64_t *)&unk_100652FD0);
            v62 = v103;
            v63 = *(unsigned __int8 *)(v103 + 80);
            v64 = (v63 + 32) & ~v63;
            v65 = swift_allocObject(v61, v64 + *(_QWORD *)(v103 + 72), v63 | 7);
            *(_OWORD *)(v65 + 16) = xmmword_100520250;
            v66 = v65 + v64;
            v67 = v109;
            (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v66, v60, v109);
            UICollectionViewListCell.accessories.setter(v65);
            sub_10008C9D8((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008CA10);
            v68 = swift_release();
            (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v60, v67, v68);
          }
          else
          {
            swift_beginAccess(v26, &v114, 0, 0);
            v69 = swift_unknownObjectWeakLoadStrong(v26);
            v71 = v102;
            v70 = v103;
            if (v69)
            {
              v72 = (char *)v69;
              v73 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "init");
              objc_msgSend(v73, "setOn:", *(unsigned __int8 *)(v101 + 16), swift_beginAccess(v101 + 16, &v113, 0, 0).n128_f64[0]);
              objc_msgSend(v73, "addTarget:action:forControlEvents:", v72, "didToggleHideEmptySections:", 4096);
              objc_msgSend(v73, "setIsAccessibilityElement:", 0);
              v74 = sub_10002A750(&qword_10064F3F0);
              v75 = v95;
              v76 = (uint64_t (**)())&v95[*(int *)(v74 + 48)];
              (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v95, enum case for UICellAccessory.DisplayedState.always(_:), v111);
              *v76 = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
              v76[1] = 0;
              (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v75, enum case for UICellAccessory.Placement.trailing(_:), v94);
              v77 = type metadata accessor for UICellAccessory.LayoutDimension(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v71, 1, 1, v77);
              v78 = v73;
              v79 = v92;
              UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
              v80 = sub_10002A750((uint64_t *)&unk_100652FD0);
              v81 = swift_allocObject(v80, ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72), *(unsigned __int8 *)(v70 + 80) | 7);
              *(_OWORD *)(v81 + 16) = xmmword_100520250;
              static UICellAccessory.customView(configuration:)(v79);
              UICollectionViewListCell.accessories.setter(v81);
              v82 = *(_QWORD *)&v72[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
              v83 = swift_unknownObjectWeakLoadStrong(v82 + 32);
              v85 = v83;
              if (v83)
              {
                v86 = *(_QWORD *)(v82 + 40);
                ObjectType = swift_getObjectType(v83, v84);
                LOBYTE(v86) = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(ObjectType, v86);

                swift_release();
                swift_unknownObjectRelease(v85);
                LOBYTE(v85) = v86 & 1;
              }
              else
              {

                v88 = swift_release();
              }
              (*(void (**)(char *, uint64_t, __n128))(v90 + 8))(v79, v91, v88);
              v50[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = v85;
              v89 = &v50[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate];
              *((_QWORD *)v89 + 1) = &off_1005F86C8;
              swift_unknownObjectWeakAssign(v89, v72);

            }
            else
            {
              swift_release();
            }
          }
          return;
        }
LABEL_13:
        v45 = *(void **)v32;
        v46 = *(_QWORD *)(v32 + 8);
        v47 = *(_QWORD *)(v32 + 16);
        v48 = *(_QWORD *)(v32 + 24);
        v49 = *(_QWORD *)(v32 + 32);
        sub_10008C8AC((uint64_t)v117, v32);
        sub_10008C9D8((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008C874);
        sub_10008CA10(v45, v46, v47, v48, v49);
        objc_msgSend(v112, "setNeedsUpdateConfiguration");
        goto LABEL_14;
      }
    }
    else if (!v33)
    {
      goto LABEL_14;
    }
    sub_10008C874((uint64_t)v33, v34, v35, v36, v37);
    sub_10008C9D8((uint64_t)v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10008C874);
    sub_10008CA10(v96, v97, v98, v99, v100);
    sub_10008CA10(v33, v34, v35, v36, v37);
    goto LABEL_13;
  }
  if (qword_10063D538 != -1)
    swift_once(&qword_10063D538, sub_10023E30C);
  v40 = type metadata accessor for Logger(0);
  v41 = sub_100012DC4(v40, (uint64_t)qword_10064F2B0);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "TTRIEditSectionsViewController: No viewModel found for cell registration", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

}

void sub_10023F6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a5 + 16;
  swift_beginAccess(a5 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10023F730();

  }
}

uint64_t sub_10023F730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[5];

  v1 = type metadata accessor for UIListContentConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UICollectionViewListCell.defaultContentConfiguration()(v3);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource);
  if (v7)
  {
    v8 = v7;
    v9 = IndexPath.section.getter(v8);
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(v20, v9);

    if (LOBYTE(v20[0]) != 2 && (v20[0] & 1) == 0)
    {
      v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter);
      Strong = swift_unknownObjectWeakLoadStrong(v10 + 32);
      if (Strong)
      {
        v13 = Strong;
        v14 = *(_QWORD *)(v10 + 40);
        ObjectType = swift_getObjectType(Strong, v12);
        LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
        swift_unknownObjectRelease(v13);
        Strong = v14 & 1;
      }
      v16 = static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)(Strong);
      UIListContentConfiguration.text.setter(v16, v17);
    }
    v20[3] = v1;
    v20[4] = &protocol witness table for UIListContentConfiguration;
    v18 = sub_100028D70(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v18, v5, v1);
    UICollectionViewCell.contentConfiguration.setter(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10023F888(uint64_t a1, uint64_t a2, id *a3, uint64_t a4)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v10;

  v10 = *a3;
  v6 = type metadata accessor for TTRIEditSectionsCell();
  v7 = v10;
  v8 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, &v10, v6, &type metadata for TTREditSectionsViewModel.ItemIdentifier);

  return v8;
}

uint64_t sub_10023F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v9, v10, 0);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      return 0;
  }
  v15 = sub_100005ED8(0, &qword_10064F3A8, UICollectionViewListCell_ptr);
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(a5, a4, v15);
}

void sub_10023F9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  _BYTE v29[24];

  v3 = sub_10002A750(&qword_10064F3C0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10002A750(&qword_10064F3C8);
  __chkstk_darwin(v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10002A750(&qword_10064F3D0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = sub_10002A750(&qword_10064F3D8);
    v17 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v16);
    v18 = v17;
    if (*(_QWORD *)(v17 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
    v20 = swift_bridgeObjectRelease(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v20) == 1)
    {

      sub_1000073A0((uint64_t)v9, &qword_10064F3C8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      NSDiffableDataSourceSectionTransaction.initialSnapshot.getter(v10);
      v21 = NSDiffableDataSourceSectionSnapshot.items.getter(v3);
      v22 = *(void (**)(char *, uint64_t))(v4 + 8);
      v22(v6, v3);
      v23 = sub_100240174(v21);
      v24 = swift_bridgeObjectRelease(v21);
      NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v10, v24);
      v25 = NSDiffableDataSourceSectionSnapshot.items.getter(v3);
      v22(v6, v3);
      v26 = sub_100240174(v25);
      swift_bridgeObjectRelease(v25);
      sub_10019ECD0((uint64_t)v26, (uint64_t)v23);
      swift_bridgeObjectRelease(v26);
      v27 = swift_bridgeObjectRelease(v23);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v27);

    }
  }
}

uint64_t type metadata accessor for TTRIEditSectionsViewController()
{
  return objc_opt_self(_TtC9Reminders30TTRIEditSectionsViewController);
}

uint64_t sub_100240060()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100240084(char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_10023EE50(a1, a2, a3, v3);
}

void sub_10024008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10023F6C4(a1, a2, a3, a4, v4);
}

uint64_t sub_100240094()
{
  return sub_100123090(&qword_10064F3A0);
}

uint64_t sub_1002400A0(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_10064F3A0) - 8) + 80);
  return sub_10023F888(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1002400F8()
{
  return sub_100123090(&qword_10064F398);
}

uint64_t sub_100240104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_10064F398) - 8) + 80);
  return sub_10023F90C(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

void sub_10024016C(uint64_t a1)
{
  uint64_t v1;

  sub_10023F9CC(a1, v1);
}

_QWORD *sub_100240174(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;

  result = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      v6 = *(void **)(a1 + 8 * i + 32);
      if (v6)
      {
        v7 = v6;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v9 >= v8 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
        v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized Array._endMutation()(v5);

      }
    }
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_100240250(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v18[24];

  v3 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&aBlock[-1] - v7;
  v9 = (uint64_t)&v1[qword_100673718];
  swift_beginAccess(&v1[qword_100673718], v18, 0, 0);
  sub_10024137C(v9, (uint64_t)v8);
  swift_beginAccess(v9, aBlock, 33, 0);
  sub_1002413C0(a1, v9);
  swift_endAccess(aBlock);
  sub_10024137C(v9, (uint64_t)v5);
  LOBYTE(v9) = static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)(v5, v8);
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  if ((v9 & 1) != 0)
    goto LABEL_3;
  v10 = *(void **)&v1[direct field offset for TTRITableViewContainerCell.containerView];
  v11 = swift_allocObject(&unk_1005F8780, 24, 7);
  *(_QWORD *)(v11 + 16) = v1;
  v12 = swift_allocObject(&unk_1005F87A8, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_100241428;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_10001B278;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005F87C0;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_retain();
  objc_msgSend(v10, "performBatchUpdates:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 146, 108, 48, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    sub_10001F544(a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  }
}

void sub_100240488(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t updated;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  double v32;
  NSString v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  Class isa;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *ObjectType;
  id v56;
  _QWORD aBlock[6];
  objc_super v58;

  v54 = a3;
  v51 = a2;
  v56 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v4 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646D68);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v3[qword_10064F3F8];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14, 0);
  v15 = &v3[qword_100673718];
  v16 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v15[*(int *)(type metadata accessor for TTRTemplatePublicLinkData(0) + 20)] = 0;
  v17 = objc_allocWithZone((Class)UILabel);
  v18 = v3;
  v19 = objc_msgSend(v17, "init", v51);
  v20 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v21 = (void *)static UIFont.roundedBodyFont.getter(v20);
  objc_msgSend(v19, "setFont:", v21);

  v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v19, "setTextColor:", v22);

  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
  v23 = objc_allocWithZone((Class)UIButton);
  v24 = v54;
  v25 = objc_msgSend(v23, "init");
  v26 = static UIButton.Configuration.borderless()();
  updated = static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter(v26);
  UIButton.Configuration.title.setter(updated, v28);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  UIConfigurationTextAttributesTransformer.init(_:)(sub_100240A24, 0);
  v29 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 0, 1, v29);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v9);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v10);
  v52 = v11;
  v53 = v10;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  UIButton.configuration.setter(v6);
  *(_QWORD *)&v18[qword_10064F400] = v19;
  *(_QWORD *)&v18[qword_10064F408] = v25;
  v30 = v19;
  v31 = v25;

  if (v24)
  {
    v33 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v33 = 0;
  }
  v58.receiver = v18;
  v58.super_class = ObjectType;
  v34 = (char *)objc_msgSendSuper2(&v58, "initWithStyle:reuseIdentifier:", v56, v33, v32);

  v35 = direct field offset for TTRITableViewContainerCell.containerView;
  v36 = *(void **)&v34[direct field offset for TTRITableViewContainerCell.containerView];
  v37 = v34;
  v38 = v36;
  objc_msgSend(v38, "setHorizontalAlignment:", 1);
  objc_msgSend(v38, "setVerticalAlignment:", 0);
  v39 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v40 = swift_allocObject(v39, 48, 7);
  *(_OWORD *)(v40 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v40 + 32) = v30;
  *(_QWORD *)(v40 + 40) = v31;
  aBlock[0] = v40;
  specialized Array._endMutation()(v40);
  v41 = aBlock[0];
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v56 = v30;
  v42 = v31;
  v43 = v38;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v41).n128_f64[0]);

  objc_msgSend(v42, "addTarget:action:forControlEvents:", v37, "buttonAction:", 0x2000);
  objc_msgSend(v37, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v45 = *(void **)&v34[v35];
  v46 = swift_allocObject(&unk_1005F87F8, 24, 7);
  *(_QWORD *)(v46 + 16) = v37;
  v47 = swift_allocObject(&unk_1005F8820, 32, 7);
  *(_QWORD *)(v47 + 16) = sub_1002414DC;
  *(_QWORD *)(v47 + 24) = v46;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v47;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005F8838;
  v48 = _Block_copy(aBlock);
  v49 = v37;
  swift_retain();
  objc_msgSend(v45, "performBatchUpdates:", v48, swift_release().n128_f64[0]);
  _Block_release(v48);
  LOBYTE(v48) = swift_isEscapingClosureAtFileLocation(v47, "", 146, 108, 48, 1);
  swift_release();
  swift_release();
  if ((v48 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v50 = v49;
    UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v53);
  }
}

uint64_t sub_100240A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath(&unk_10052AEC0);
  KeyPath = swift_getKeyPath(&unk_10052AEF0);
  v6 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v9 = static UIFont.roundedBodyFont.getter(v6);
  v7 = sub_100019EC8();
  return AttributeContainer.subscript.setter(&v9, KeyPath, v7);
}

void sub_100240AD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  sub_100240488(a3, a4, v6);
}

void sub_100240B1C()
{
  objc_class *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;

  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[qword_10064F3F8];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = &v1[qword_100673718];
  v4 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v3[*(int *)(type metadata accessor for TTRTemplatePublicLinkData(0) + 20)] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010056F5E0, "Reminders/TTRIRemindersListTemplateStatusCell.swift", 51, 2, 81, 0);
  __break(1u);
}

void sub_100240BE0(char *a1, uint64_t a2, void *a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;

  v5 = &a1[qword_10064F3F8];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = &a1[qword_100673718];
  v7 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v6[*(int *)(type metadata accessor for TTRTemplatePublicLinkData(0) + 20)] = 0;
  v8 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListTemplateStatusCell.swift", 51, 2, 85, 0);
  __break(1u);
}

Class sub_100240CA8(void *a1)
{
  id v1;
  _QWORD *v2;
  NSArray v3;

  v1 = a1;
  v2 = sub_100240D04();

  if (v2)
  {
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3.super.isa = 0;
  }
  return v3.super.isa;
}

_QWORD *sub_100240D04()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;

  v1 = *(void **)(v0 + qword_10064F400);
  if ((objc_msgSend(v1, "isHidden") & 1) != 0)
  {
    v2 = _swiftEmptyArrayStorage;
  }
  else
  {
    v12 = sub_100005ED8(0, &qword_10063F908, UILabel_ptr);
    *(_QWORD *)&v11 = v1;
    v3 = v1;
    v2 = sub_100456BA8(0, 1, 1, _swiftEmptyArrayStorage);
    v5 = v2[2];
    v4 = v2[3];
    if (v5 >= v4 >> 1)
      v2 = sub_100456BA8((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    v2[2] = v5 + 1;
    sub_100028D38(&v11, &v2[4 * v5 + 4]);
  }
  v6 = *(void **)(v0 + qword_10064F408);
  if ((objc_msgSend(v6, "isHidden", (_QWORD)v11) & 1) == 0)
  {
    v12 = sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
    *(_QWORD *)&v11 = v6;
    v7 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_100456BA8(0, v2[2] + 1, 1, v2);
    v9 = v2[2];
    v8 = v2[3];
    if (v9 >= v8 >> 1)
      v2 = sub_100456BA8((_QWORD *)(v8 > 1), v9 + 1, 1, v2);
    v2[2] = v9 + 1;
    sub_100028D38(&v11, &v2[4 * v9 + 4]);
  }
  return v2;
}

void sub_100240E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  _BYTE v22[24];

  v2 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a1 + qword_100673718;
  swift_beginAccess(a1 + qword_100673718, v22, 0, 0);
  sub_10024137C(v8, (uint64_t)v7);
  sub_100241440((uint64_t)v7, (uint64_t)v4);
  v9 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9);
  if ((_DWORD)v10 == 1)
  {
    static TTRLocalizableStrings.Templates.templateStatusTemplate.getter();
    v12 = v11;
    objc_msgSend(*(id *)(a1 + qword_10064F408), "setHidden:", 1);
    v13 = *(void **)(a1 + qword_10064F400);
    objc_msgSend(v13, "setHidden:", 0);
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setText:", v14);
    swift_bridgeObjectRelease(v12);

  }
  else
  {
    v15 = *(_QWORD *)(v8 + *(int *)(v5 + 20));
    if ((*(_QWORD *)TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor(v10) & ~v15) != 0)
    {
      static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter();
      v18 = v17;
      objc_msgSend(*(id *)(a1 + qword_10064F408), "setHidden:", 1);
      v19 = *(void **)(a1 + qword_10064F400);
      objc_msgSend(v19, "setHidden:", 0);
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setText:", v20);
      swift_bridgeObjectRelease(v18);

    }
    else
    {
      v16 = *(void **)(a1 + qword_10064F408);
      objc_msgSend(v16, "setHidden:", 0);
      objc_msgSend(*(id *)(a1 + qword_10064F400), "setHidden:", 1);
      objc_msgSend(v16, "setEnabled:", 1);
    }
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
  }
}

uint64_t sub_100241100(char *a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD v13[3];
  uint64_t v14;
  _OWORD v15[2];

  if (a3)
  {
    v5 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v15);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    v6 = a1;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a1[qword_10064F3F8]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v8);
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v10 + 8) + 760))(v13, ObjectType);
    if (v14)
    {
      sub_10001413C(v13, v14);
      sub_1001328FC(0);
      sub_100027F10(v13);
    }
    else
    {
      sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_10064F530);
    }

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
  return sub_1000073A0((uint64_t)v15, &qword_100640E50);
}

void sub_1002411FC()
{
  uint64_t v0;

  sub_1000381C8(v0 + qword_10064F3F8);
  sub_10001F544(v0 + qword_100673718, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);

}

void sub_100241250(uint64_t a1)
{
  sub_1000381C8(a1 + qword_10064F3F8);
  sub_10001F544(a1 + qword_100673718, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);

}

uint64_t type metadata accessor for TTRIRemindersListTemplateStatusCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10064F438;
  if (!qword_10064F438)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListTemplateStatusCell);
  return result;
}

uint64_t sub_1002412EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10052AEA8;
  result = type metadata accessor for TTRTemplatePublicLinkData(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 256, 4, v4, a1 + 152);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100241374()
{
  return type metadata accessor for TTRIRemindersListTemplateStatusCell(0);
}

uint64_t sub_10024137C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatePublicLinkData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002413C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatePublicLinkData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100241404()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100241428()
{
  uint64_t v0;

  sub_100240E9C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100241430()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100241440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100241484()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002414A0()
{
  return 8;
}

uint64_t sub_1002414AC(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1002414B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1002414C8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002414E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_10064F540);
  v1 = sub_100012DC4(v0, (uint64_t)qword_10064F540);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100241578()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  __n128 v6;
  char v9[24];

  v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78);
  v6 = swift_beginAccess(v5, v9, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, v5, v1, v6);
  return sub_100241634((uint64_t)v4);
}

uint64_t sub_100241634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  int v18;
  BOOL v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  char *v25;
  int v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;

  v2 = v1;
  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - v8;
  v10 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v32 - v16;
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(v15);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:)
    || v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    v20 = v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    v21 = (void *)*(unsigned __int8 *)(v2 + qword_10064F710);
    *(_BYTE *)(v2 + qword_10064F710) = v20;
    v22 = sub_1002428B8(v21);
    v23 = (void *)REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter(v22);
    v24 = sub_100241D78(v23);
    REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(v24);
    v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v33, v9, v4);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v25, v4);
    if (v26 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      v27 = 0;
    }
    else if (v26 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      v27 = 1;
    }
    else if (v26 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      v27 = 2;
    }
    else if (v26 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      v27 = 3;
    }
    else
    {
      if (v26 != enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
        goto LABEL_17;
      v27 = 4;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    v28 = (void *)*(unsigned __int8 *)(v2 + qword_10064F720);
    *(_BYTE *)(v2 + qword_10064F720) = v27;
    v29 = sub_10024297C(v28);
    objc_msgSend(*(id *)(v2 + qword_10064F700), "setOn:", REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter(v29) & 1);
    v30 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
LABEL_17:
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
  __break(1u);
  return result;
}

uint64_t sub_100241904(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + qword_10064F6E8;
  *(_QWORD *)(v1 + 8) = 0;
  return swift_unknownObjectWeakAssign(v1, 0);
}

uint64_t sub_10024191C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1 + qword_10064F6E8;
  *(_QWORD *)(v2 + 8) = &off_1005F8A40;
  return swift_unknownObjectWeakAssign(v2, v1);
}

void sub_10024193C()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRISmartListFilterEditorRelativeRangeContent", 55, "init(state:prototypeCellView:reuseIdentifier:)", 46, 0);
  __break(1u);
}

uint64_t sub_100241968()
{
  uint64_t v0;

  return sub_1000381B8(*(_QWORD *)(v0 + qword_100673720), *(_QWORD *)(v0 + qword_100673720 + 8));
}

uint64_t sub_10024197C(uint64_t a1)
{
  return sub_1000381B8(*(_QWORD *)(a1 + qword_100673720), *(_QWORD *)(a1 + qword_100673720 + 8));
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeContent(uint64_t a1)
{
  return sub_100007328(a1, qword_10064F588, (uint64_t)&nominal type descriptor for TTRISmartListFilterEditorRelativeRangeContent);
}

uint64_t sub_1002419A4(uint64_t a1)
{
  void *v2;

  v2 = &unk_10052AF90;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 232);
}

uint64_t sub_1002419E4()
{
  return type metadata accessor for TTRISmartListFilterEditorRelativeRangeContent(0);
}

void sub_1002419EC()
{
  qword_10064F558 = 0x4020000000000000;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCellContainerStackView()
{
  return objc_opt_self(_TtC9Reminders65TTRISmartListFilterEditorRelativeRangeTableCellContainerStackView);
}

uint64_t sub_100241C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  unsigned int *v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_BYTE *)(v0 + qword_10064F710);
  v10 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v9)
    v10 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  (*(void (**)(char *, _QWORD))(v6 + 104))(v8, *v10);
  v11 = *(_QWORD *)(v0 + qword_10064F718);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *(unsigned int *)*(&off_1005F8AE0 + *(char *)(v0 + qword_10064F720)), v1);
  if ((v9 & 1) != 0)
    v12 = 0;
  else
    v12 = objc_msgSend(*(id *)(v0 + qword_10064F700), "isOn");
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v8, v11, v4, v12);
}

id sub_100241D78(id result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v2 = qword_10064F718;
  v3 = *(id *)(v1 + qword_10064F718);
  *(_QWORD *)(v1 + qword_10064F718) = result;
  if (v3 != result)
  {
    v4 = *(void **)(v1 + qword_10064F6F0);
    result = objc_msgSend(v4, "numberOfComponents");
    v5 = *(_QWORD **)(v1 + qword_10064F708 + 8);
    v6 = v5[2];
    if (v6 < 2)
    {
      __break(1u);
    }
    else
    {
      if (v5[5] < (uint64_t)result)
      {
        v7 = *(_QWORD *)(v1 + v2);
        if (__OFSUB__(v7, 1))
        {
LABEL_12:
          __break(1u);
          return result;
        }
        result = objc_msgSend(v4, "selectRow:inComponent:animated:", v7 - 1);
        v6 = v5[2];
      }
      if (v6 >= 3)
      {
        result = objc_msgSend(v4, "reloadComponent:", v5[6]);
        if (v5[2])
          return objc_msgSend(v4, "reloadComponent:", v5[4]);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

char *sub_100241E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  char *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  _UNKNOWN **v29;
  _UNKNOWN **v30;
  char *v31;
  double v32;
  NSString v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  Class v42;
  void *v43;
  char *result;
  _QWORD *v45;
  uint64_t v46;
  id v48;
  id v50;
  objc_super v51;
  uint64_t v52;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v6 = &v3[qword_10064F6E8];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v3[qword_10064F710] = 0;
  *(_QWORD *)&v3[qword_10064F718] = 1;
  v3[qword_10064F720] = 1;
  *(_QWORD *)&v3[qword_10064F728] = 0;
  *(_QWORD *)&v3[qword_10064F730] = _swiftEmptyArrayStorage;
  v7 = objc_allocWithZone((Class)UIPickerView);
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[qword_10064F6F0] = v9;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v9;
  v12 = objc_msgSend(v10, "init");
  v13._countAndFlagsBits = 0xD00000000000001ALL;
  v14._countAndFlagsBits = 0xD000000000000037;
  v13._object = (void *)0x8000000100569AD0;
  v14._object = (void *)0x8000000100569AF0;
  object = TTRLocalizedString(_:comment:)(v13, v14)._object;
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v16, swift_bridgeObjectRelease(object).n128_f64[0]);

  v17 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "init");
  *(_QWORD *)&v8[qword_10064F700] = v17;
  v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v19 + 32) = v12;
  *(_QWORD *)(v19 + 40) = v17;
  v52 = v19;
  specialized Array._endMutation()(v19);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v50 = v17;
  v48 = v12;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  v21 = objc_msgSend((id)objc_opt_self(NUIContainerStackView), "containerStackViewWithAxis:arrangedSubviews:", 0, isa);

  v22 = qword_10063D548;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_10063D548, sub_1002419EC);
  objc_msgSend(v23, "setLayoutMargins:", 0.0, *(double *)&qword_10064F558, 0.0, *(double *)&qword_10064F558, a2);

  objc_msgSend(v23, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v8[qword_10064F6F8] = v23;
  v24 = v23;
  v25._countAndFlagsBits = 0xD000000000000050;
  v26._countAndFlagsBits = 0xD000000000000201;
  v25._object = (void *)0x800000010056F850;
  v27._object = (void *)0x800000010056F8B0;
  v26._object = (void *)0x800000010056F8D0;
  v27._countAndFlagsBits = 0xD000000000000019;
  v28 = TTRLocalizedString(_:value:comment:)(v25, v27, v26);
  v29 = sub_1002444D8(v28._countAndFlagsBits, (unint64_t)v28._object);
  swift_bridgeObjectRelease(v28._object);
  v30 = sub_100244AAC((uint64_t)v29);
  v31 = &v8[qword_10064F708];
  *(_QWORD *)v31 = v29;
  *((_QWORD *)v31 + 1) = v30;

  if (a3)
  {
    v33 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v33 = 0;
  }
  v51.receiver = v8;
  v51.super_class = ObjectType;
  v34 = (char *)objc_msgSendSuper2(&v51, "initWithStyle:reuseIdentifier:", a1, v33, v32);

  v35 = *(void **)&v34[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  v36 = v34;
  objc_msgSend(v35, "setAxis:", 1);
  objc_msgSend(v11, "setDelegate:", v36);
  objc_msgSend(v50, "addTarget:action:forControlEvents:", v36, "includePastDueSwitchAction:", 4096);
  v37 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v37 + 32) = v11;
  *(_QWORD *)(v37 + 40) = v24;
  v52 = v37;
  specialized Array._endMutation()(v37);
  v38 = v52;
  v39 = v11;
  v40 = v24;
  v41 = v35;
  v42 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v41, "setArrangedSubviews:", v42, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v43 = *(void **)&v36[qword_10064F6F0];
  result = (char *)objc_msgSend(v43, "numberOfComponents");
  v45 = *(_QWORD **)&v36[qword_10064F708 + 8];
  if (!v45[2])
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v45[4] < (uint64_t)result)
    objc_msgSend(v43, "selectRow:inComponent:animated:", v36[qword_10064F710]);
  result = (char *)objc_msgSend(v43, "numberOfComponents");
  if (v45[2] < 2uLL)
    goto LABEL_18;
  if (v45[5] < (uint64_t)result)
  {
    v46 = *(_QWORD *)&v36[qword_10064F718];
    if (__OFSUB__(v46, 1))
    {
LABEL_20:
      __break(1u);
      return result;
    }
    objc_msgSend(v43, "selectRow:inComponent:animated:", v46 - 1);
  }
  result = (char *)objc_msgSend(v43, "numberOfComponents");
  if (v45[2] < 3uLL)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v45[6] < (uint64_t)result)
    objc_msgSend(v43, "selectRow:inComponent:animated:", v36[qword_10064F720]);

  return v36;
}

char *sub_100242400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_100241E68(a3, a4, v6);
}

void sub_100242448(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100244B70();
}

void sub_10024246C()
{
  objc_class *v0;
  _BYTE *v1;
  char *v2;

  v1 = objc_allocWithZone(v0);
  v2 = &v1[qword_10064F6E8];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v1[qword_10064F710] = 0;
  *(_QWORD *)&v1[qword_10064F718] = 1;
  v1[qword_10064F720] = 1;
  *(_QWORD *)&v1[qword_10064F728] = 0;
  *(_QWORD *)&v1[qword_10064F730] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010056F5E0, "Reminders/TTRISmartListFilterEditorRelativeRangeCellContent.swift", 65, 2, 139, 0);
  __break(1u);
}

uint64_t *sub_100242540@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_100242558(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v10;
  char v11;
  unint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = Substring.lowercased()();
  static CharacterSet.whitespaces.getter();
  sub_10001D7FC();
  v6 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease(v23._object);
  if (v6 == 0x6F69746365726964 && v8 == 0xE90000000000006ELL)
  {
    v10 = 0xE90000000000006ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69746365726964, 0xE90000000000006ELL, v6, v8, 0) & 1) != 0)
  {
    v10 = v8;
LABEL_8:
    swift_bridgeObjectRelease(v10);
    v11 = 0;
    goto LABEL_25;
  }
  if (v6 == 0x647574696E67616DLL && v8 == 0xE900000000000065)
  {
    v13 = 0xE900000000000065;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x647574696E67616DLL, 0xE900000000000065, v6, v8, 0) & 1) != 0)
  {
    v13 = v8;
LABEL_16:
    swift_bridgeObjectRelease(v13);
    v11 = 1;
    goto LABEL_25;
  }
  if (v6 == 0x7374696E75 && v8 == 0xE500000000000000)
  {
    v15 = 0xE500000000000000;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7374696E75, 0xE500000000000000, v6, v8, 0) & 1) != 0)
  {
    v15 = v8;
LABEL_24:
    swift_bridgeObjectRelease(v15);
    v11 = 2;
    goto LABEL_25;
  }
  if (qword_10063D540 != -1)
    swift_once(&qword_10063D540, sub_1002414E4);
  v16 = type metadata accessor for Logger(0);
  sub_100012DC4(v16, (uint64_t)qword_10064F540);
  swift_bridgeObjectRetain(v8);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v23._countAndFlagsBits = v21;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain(v8);
    v24 = sub_100027E40(v6, v8, &v23._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v20 + 4, v20 + 12);
    v11 = 3;
    swift_bridgeObjectRelease_n(v8, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER elmenents must be one of 'direction', 'magnitude', 'units', but the actual content is %s", v20, 0xCu);
    swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
    v11 = 3;
  }
LABEL_25:
  *a1 = v11;
}

id sub_1002428B8(id result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = qword_10064F710;
  if (((((result & 1) == 0) ^ *(unsigned __int8 *)(v1 + qword_10064F710)) & 1) == 0)
  {
    v3 = *(void **)(v1 + qword_10064F6F0);
    result = objc_msgSend(v3, "numberOfComponents");
    v4 = *(_QWORD *)(v1 + qword_10064F708 + 8);
    if (*(_QWORD *)(v4 + 16))
    {
      if (*(_QWORD *)(v4 + 32) < (uint64_t)result)
        objc_msgSend(v3, "selectRow:inComponent:animated:", *(unsigned __int8 *)(v1 + v2));
      return objc_msgSend(*(id *)(v1 + qword_10064F6F8), "setHidden:", *(unsigned __int8 *)(v1 + v2));
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_10024297C(id result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = qword_10064F720;
  if (*(unsigned __int8 *)(v1 + qword_10064F720) != result)
  {
    v3 = *(void **)(v1 + qword_10064F6F0);
    result = objc_msgSend(v3, "numberOfComponents");
    v4 = *(_QWORD **)(v1 + qword_10064F708 + 8);
    if (v4[2] < 3uLL)
    {
      __break(1u);
    }
    else if (v4[6] >= (uint64_t)result
           || (result = objc_msgSend(v3, "selectRow:inComponent:animated:", *(unsigned __int8 *)(v1 + v2)), v4[2] >= 2uLL))
    {
      result = objc_msgSend(v3, "reloadComponent:", v4[5]);
      if (v4[2])
      {
        result = objc_msgSend(v3, "reloadComponent:", v4[4]);
        if (*(uint64_t *)(v1 + qword_10064F718) >= 1000)
          return sub_100241D78((id)0x3E7);
        return result;
      }
LABEL_11:
      __break(1u);
      return result;
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

id sub_100242A78()
{
  uint64_t v0;
  void *v1;
  id result;
  uint64_t v3;

  v1 = *(void **)(v0 + qword_10064F6F0);
  result = objc_msgSend(v1, "numberOfComponents");
  v3 = *(_QWORD *)(v0 + qword_10064F708 + 8);
  if (*(_QWORD *)(v3 + 16))
  {
    if (*(_QWORD *)(v3 + 32) >= (uint64_t)result)
      return 0;
    else
      return (id)(objc_msgSend(v1, "selectedRowInComponent:") == (id)1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100242AF4()
{
  uint64_t v0;
  void *v1;
  unint64_t result;
  uint64_t v3;

  v1 = *(void **)(v0 + qword_10064F6F0);
  result = (unint64_t)objc_msgSend(v1, "numberOfComponents");
  v3 = *(_QWORD *)(v0 + qword_10064F708 + 8);
  if (*(_QWORD *)(v3 + 16) < 3uLL)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v3 + 48) >= (int64_t)result)
  {
    return 1;
  }
  else
  {
    result = (unint64_t)objc_msgSend(v1, "selectedRowInComponent:");
    if (result >= 5)
      return 1;
    else
      return result;
  }
  return result;
}

void sub_100242B74()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  double v11;
  void *v14;
  uint64_t v15;
  double v16;
  double v17;
  CGRect v18;

  v1 = v0;
  objc_msgSend(*(id *)(v0 + qword_10064F6F0), "frame");
  v2 = CGRectGetWidth(v18) + -46.0;
  sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v3 = 23.0;
  v4 = (id)static UIFont.roundedSystemFont(ofSize:weight:)(23.0, UIFontWeightRegular);
  sub_100242D40((uint64_t)v4);
  v6 = v5;

  v16 = v6;
  v7 = sub_10002A750(&qword_10064FA20);
  v8 = sub_100023FEC(&qword_10064FA28, &qword_10064FA20, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = sub_100244F98();
  Sequence<>.sum()(&v17, v7, v8, v9);
  if (v2 < v17)
  {
    do
    {
      swift_bridgeObjectRelease(*(_QWORD *)&v6);
      v10 = (void *)static UIFont.roundedSystemFont(ofSize:weight:)(v3, UIFontWeightRegular);

      v4 = v10;
      sub_100242D40((uint64_t)v4);
      v6 = v11;

      Sequence<>.sum()(&v16, v7, v8, v9);
      v3 = v3 + -1.0;
    }
    while (v16 >= v2 && v3 > 12.0 && v2 < v16);
  }
  v14 = *(void **)(v1 + qword_10064F728);
  *(_QWORD *)(v1 + qword_10064F728) = v4;

  v15 = *(_QWORD *)(v1 + qword_10064F730);
  *(double *)(v1 + qword_10064F730) = v6;
  swift_bridgeObjectRelease(v15);
}

void sub_100242D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _DWORD v6[8];
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void (*v21)(char *, _QWORD, uint64_t);

  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  __chkstk_darwin(v2);
  v17 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v7 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v15 = *(_QWORD *)(v5 - 8);
  v16 = v5;
  __chkstk_darwin(v5);
  objc_msgSend(objc_msgSend(objc_allocWithZone((Class)UILabel), "init"), "setFont:", a1);
  v14 = objc_opt_self(NSNumberFormatter);
  v6[6] = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  v6[5] = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  v12 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:);
  v11 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:);
  v10 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:);
  v9 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:);
  v13 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:);
  v6[7] = 0;
  v20 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  v8 = 1;
  v21 = *(void (**)(char *, _QWORD, uint64_t))(v7 + 104);
  v21(v4, enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:), v17);
  JUMPOUT(0x100242F88);
}

uint64_t sub_10024324C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char v18;
  unsigned int *v19;
  uint64_t v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v1);
  v30 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = __chkstk_darwin(v14);
  v17 = (char *)&v29 - v16;
  v18 = *(_BYTE *)(v0 + qword_10064F710);
  v19 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v18)
    v19 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v10, *v19, v7, v15);
  v20 = *(_QWORD *)(v0 + qword_10064F718);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *(unsigned int *)*(&off_1005F8AE0 + *(char *)(v0 + qword_10064F720)), v3);
  if ((v18 & 1) != 0)
    v21 = 0;
  else
    v21 = objc_msgSend(*(id *)(v0 + qword_10064F700), "isOn");
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v10, v20, v6, v21);
  sub_100241634((uint64_t)v17);
  result = swift_unknownObjectWeakLoadStrong(v0 + qword_10064F6E8);
  if (result)
  {
    v23 = result;
    sub_100241C28();
    v24 = *(void (**)(uint64_t))(v23 + qword_100673720);
    v26 = v31;
    v25 = v32;
    if (v24)
    {
      v27 = *(_QWORD *)(v23 + qword_100673720 + 8);
      v28 = (uint64_t)v30;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, v13, v32);
      swift_retain();
      v24(v28);
      sub_1000381B8((uint64_t)v24, v27);
      sub_100244F5C(v28);
    }
    swift_unknownObjectRelease(v23);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v13, v25);
  }
  return result;
}

uint64_t sub_1002434CC(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  _QWORD v7[4];

  swift_unknownObjectRetain(a3);
  v5 = a1;
  _bridgeAnyObjectToAny(_:)(v7);
  swift_unknownObjectRelease(a3);
  sub_10024324C();

  return sub_100027F10(v7);
}

double sub_10024352C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  sub_1000381C8(v0 + qword_10064F6E8);

  v1 = *(_QWORD *)(v0 + qword_10064F708);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064F708 + 8));
  swift_bridgeObjectRelease(v1);

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064F730)).n128_u64[0];
  return result;
}

double sub_1002435BC(uint64_t a1)
{
  uint64_t v2;
  double result;

  sub_1000381C8(a1 + qword_10064F6E8);

  v2 = *(_QWORD *)(a1 + qword_10064F708);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10064F708 + 8));
  swift_bridgeObjectRelease(v2);

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_10064F730)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell(uint64_t a1)
{
  return sub_100007328(a1, qword_10064F760, (uint64_t)&nominal type descriptor for TTRISmartListFilterEditorRelativeRangeTableCell);
}

uint64_t sub_100243664(uint64_t a1)
{
  _QWORD v2[10];

  v2[0] = &unk_10052B070;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = &unk_10052B088;
  v2[5] = &unk_10052B0A0;
  v2[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[7] = &unk_10052B0B8;
  v2[8] = &unk_10052B0D0;
  v2[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 256, 10, v2, a1 + 160);
}

uint64_t sub_1002436F8()
{
  return type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell(0);
}

id sub_1002437C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = qword_10064F728;
  if (!*(_QWORD *)(v1 + qword_10064F728))
    sub_100242B74();
  v5 = objc_msgSend(*(id *)(v1 + qword_10064F6F0), "effectiveUserInterfaceLayoutDirection");
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v7 = (void *)static UIColor.ttrLabelColor.getter();
  objc_msgSend(v6, "setTextColor:", v7);

  objc_msgSend(v6, "setFont:", *(_QWORD *)(v2 + v4));
  v8 = 1;
  if (!a1)
    v8 = 2 * (v5 != (id)1);
  if (a1 == 2)
    v9 = 2 * (v5 == (id)1);
  else
    v9 = v8;
  objc_msgSend(v6, "setTextAlignment:", v9);
  return v6;
}

void sub_1002438D8(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  unsigned int *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char v47;
  unsigned int *v48;
  uint64_t v49;
  char *v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v4 = sub_10002A750(&qword_10064FA10);
  __chkstk_darwin(v4);
  v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v57 = (char *)&v54 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  __chkstk_darwin(v13);
  v55 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - v16;
  v18 = sub_10002A750(&qword_10064FA18);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v54 - v26;
  v29.n128_f64[0] = __chkstk_darwin(v28);
  v31 = (char *)&v54 - v30;
  if (a2 > 2)
    goto LABEL_7;
  v32 = *(_QWORD *)(v63 + qword_10064F708);
  if (*(_QWORD *)(v32 + 16) <= a2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v33 = *(unsigned __int8 *)(v32 + a2 + 32);
  if (!v33)
  {
LABEL_7:
    if (a1 == 1)
    {
      v38 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
    }
    else
    {
      if (a1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v20, 1, 1, v21, v29);
        v40 = &qword_10064FA18;
        v41 = (uint64_t)v20;
LABEL_20:
        sub_1000073A0(v41, v40);
        return;
      }
      v38 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
    }
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v22 + 104))(v20, *v38, v21, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v20, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v27, v31, v21);
    v39 = *(_QWORD *)(v63 + qword_10064F718);
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v12, *(unsigned int *)*(&off_1005F8AE0 + *(char *)(v63 + qword_10064F720)), v62);
    REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v27, v39, v12, 0);
    _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO32dateOptionRelativeRangeDirectionySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v21);
    return;
  }
  if (v33 == 1)
  {
    v34 = objc_opt_self(NSNumberFormatter);
    if (!__OFADD__(a1, 1))
    {
      v35 = (void *)v34;
      v36 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1 + 1);
      v37 = objc_msgSend(v35, "localizedStringFromNumber:numberStyle:", v36, 1);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      return;
    }
    goto LABEL_22;
  }
  if (a1 > 4)
  {
    v53 = v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v61 + 56))(v58, 1, 1, v62, v29.n128_f64[0]);
    v40 = &qword_10064FA10;
    v41 = (uint64_t)v53;
    goto LABEL_20;
  }
  v43 = v61;
  v42 = v62;
  v44 = v58;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v61 + 104))(v58, *(unsigned int *)*(&off_1005F8AE0 + a1), v62, v29.n128_f64[0]);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
  v45 = v57;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v57, v44, v42);
  v46 = v63;
  v47 = *(_BYTE *)(v63 + qword_10064F710);
  v48 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v47)
    v48 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *v48, v21);
  v49 = *(_QWORD *)(v46 + qword_10064F718);
  v50 = v56;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v56, v45, v42);
  v51 = 0;
  if ((v47 & 1) == 0)
    v51 = objc_msgSend(*(id *)(v46 + qword_10064F700), "isOn");
  v52 = v55;
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v24, v49, v50, v51);
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO28dateOptionRelativeRangeUnitsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v60);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
}

uint64_t storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.Units(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100243F9C + 4 * byte_10052AF35[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100243FD0 + 4 * byte_10052AF30[v4]))();
}

uint64_t sub_100243FD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100243FD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100243FE0);
  return result;
}

uint64_t sub_100243FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100243FF4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100243FF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100244000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.Units()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Units;
}

uint64_t storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100244068 + 4 * byte_10052AF3F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10024409C + 4 * byte_10052AF3A[v4]))();
}

uint64_t sub_10024409C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002440A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002440ACLL);
  return result;
}

uint64_t sub_1002440B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002440C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002440C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002440CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.Direction()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Direction;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.ComponentToTypeConverter()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.ComponentToTypeConverter;
}

uint64_t sub_1002440F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100244134(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100244168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002441AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002441F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100244234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100244278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100244284);
}

uint64_t sub_100244284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1002442C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002442CC);
}

uint64_t sub_1002442CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(uint64_t a1)
{
  return sub_100007328(a1, qword_10064F9A8, (uint64_t)&nominal type descriptor for TTRISmartListFilterEditorRelativeRangeContentState);
}

uint64_t sub_100244320(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100244388()
{
  return sub_100023FEC(&qword_10064F9E0, &qword_10064F9E8, (uint64_t)&protocol conformance descriptor for [A]);
}

_QWORD *sub_1002443B4@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1002443D4(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EABF0;
}

unint64_t sub_1002443E8()
{
  unint64_t result;

  result = qword_10064F9F0;
  if (!qword_10064F9F0)
  {
    result = swift_getWitnessTable(&unk_10052B22C, &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Direction);
    atomic_store(result, (unint64_t *)&qword_10064F9F0);
  }
  return result;
}

uint64_t sub_10024442C()
{
  return sub_100023FEC(&qword_10064F9F8, &qword_10064FA00, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_100244458@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9Reminders33TTRSmartListFilterEditorViewModelV14HashtagOptionsO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100244480(_QWORD *a1@<X8>)
{
  *a1 = &off_1005EAC18;
}

unint64_t sub_100244494()
{
  unint64_t result;

  result = qword_10064FA08;
  if (!qword_10064FA08)
  {
    result = swift_getWitnessTable(&unk_10052B304, &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Units);
    atomic_store(result, (unint64_t *)&qword_10064FA08);
  }
  return result;
}

_UNKNOWN **sub_1002444D8(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  *(_QWORD *)&v46 = a1;
  *((_QWORD *)&v46 + 1) = a2;
  v4 = sub_10001D7FC();
  v5 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(45, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v4);
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v5 + 56);
    v9 = _swiftEmptyArrayStorage;
    do
    {
      v11 = *(v8 - 1);
      v10 = *v8;
      v46 = *(_OWORD *)(v8 - 3);
      v47 = v11;
      v48 = v10;
      sub_100242558((char *)&v44);
      v12 = v44;
      if (v44 != 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_100456DD8(0, v9[2] + 1, 1, v9);
        v14 = v9[2];
        v13 = v9[3];
        if (v14 >= v13 >> 1)
          v9 = sub_100456DD8((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
        v9[2] = v14 + 1;
        *((_BYTE *)v9 + v14 + 32) = v12;
      }
      v8 += 4;
      --v7;
    }
    while (v7);
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v6);
  if (v9[2] != 3)
  {
    swift_bridgeObjectRelease(v9);
    if (qword_10063D540 != -1)
      swift_once(&qword_10063D540, sub_1002414E4);
    v22 = type metadata accessor for Logger(0);
    sub_100012DC4(v22, (uint64_t)qword_10064F540);
    v23 = swift_bridgeObjectRetain_n(a2, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v46 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain(a2);
      v44 = sub_100027E40(a1, a2, (uint64_t *)&v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER needs exactly three elements separated by the '-' character, but the actual content is %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, &type metadata for Any[8]);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return &off_1005EAAF8;
  }
  v15 = 0;
  v16 = 0;
  LOBYTE(v17) = 0;
  v18 = 0;
  v19 = v9 + 4;
  while (1)
  {
LABEL_13:
    v20 = v18 + 1;
    if (!*((_BYTE *)v19 + v18))
      goto LABEL_25;
    if (*((_BYTE *)v19 + v18) != 1)
      goto LABEL_21;
    if (v18 == 2)
    {
LABEL_45:
      if ((v17 & 1) != 0)
      {
LABEL_46:
        if ((v15 & 1) == 0)
        {
          swift_bridgeObjectRelease(v9);
          if (qword_10063D540 != -1)
            swift_once(&qword_10063D540, sub_1002414E4);
          v34 = type metadata accessor for Logger(0);
          v35 = sub_100012DC4(v34, (uint64_t)qword_10064F540);
          v36 = Logger.logObject.getter(v35);
          v37 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v38 = 0;
            _os_log_impl((void *)&_mh_execute_header, v36, v37, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'units' but does not", v38, 2u);
            swift_slowDealloc(v38, -1, -1);
          }

          return &off_1005EAA80;
        }
        return (_UNKNOWN **)v9;
      }
      goto LABEL_55;
    }
    while (1)
    {
      v21 = *((unsigned __int8 *)v9 + v18 + 33);
      if (v21 != 1)
        break;
      if (++v18 == 2)
        goto LABEL_45;
    }
    v20 = v18 + 2;
    if (v21 != 2)
      break;
    v16 = 1;
LABEL_21:
    v15 = 1;
    v18 = v20;
    if (v20 == 3)
    {
      if ((v17 & 1) != 0)
        goto LABEL_53;
LABEL_55:
      swift_bridgeObjectRelease(v9);
      if (qword_10063D540 != -1)
        swift_once(&qword_10063D540, sub_1002414E4);
      v39 = type metadata accessor for Logger(0);
      v40 = sub_100012DC4(v39, (uint64_t)qword_10064F540);
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'direction' but does not", v43, 2u);
        swift_slowDealloc(v43, -1, -1);
      }

      return &off_1005EAAD0;
    }
  }
  v16 = 1;
  while (1)
  {
LABEL_25:
    if (v20 == 3)
    {
      if ((v16 & 1) != 0)
        goto LABEL_46;
      goto LABEL_37;
    }
    v17 = *((unsigned __int8 *)v19 + v20);
    if (*((_BYTE *)v19 + v20))
      break;
    ++v20;
  }
  v18 = v20 + 1;
  if (v17 == 1)
  {
    v16 = 1;
    if (v20 != 2)
      goto LABEL_13;
    goto LABEL_46;
  }
  v15 = 1;
  LOBYTE(v17) = 1;
  if (v20 != 2)
    goto LABEL_13;
LABEL_53:
  if ((v16 & 1) == 0)
  {
LABEL_37:
    swift_bridgeObjectRelease(v9);
    if (qword_10063D540 != -1)
      swift_once(&qword_10063D540, sub_1002414E4);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100012DC4(v28, (uint64_t)qword_10064F540);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'magnitude' but does not", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    return &off_1005EAAA8;
  }
  return (_UNKNOWN **)v9;
}

_UNKNOWN **sub_100244AAC(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  _UNKNOWN **result;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &off_1005EAB20;
  if (!*(_BYTE *)(a1 + 32))
  {
    v3 = 0;
LABEL_8:
    v7 = sub_100315A0C(1u, a1);
    if ((v8 & 1) == 0)
    {
      v9 = (void *)v7;
      v10 = sub_100315A0C(2u, a1);
      if ((v11 & 1) == 0)
      {
        v12 = (void *)v10;
        v13 = sub_10002A750((uint64_t *)&unk_10064FA40);
        result = (_UNKNOWN **)swift_allocObject(v13, 56, 7);
        *((_OWORD *)result + 1) = xmmword_1005275C0;
        result[4] = v3;
        result[5] = v9;
        result[6] = v12;
        return result;
      }
    }
    return &off_1005EAB20;
  }
  v3 = 0;
  v4 = (unsigned __int8 *)(v1 - 1);
  result = &off_1005EAB20;
  while (v4 != v3)
  {
    if (!(v3++)[a1 + 33])
      goto LABEL_8;
  }
  return result;
}

void sub_100244B70()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[qword_10064F6E8];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v0[qword_10064F710] = 0;
  *(_QWORD *)&v0[qword_10064F718] = 1;
  v0[qword_10064F720] = 1;
  *(_QWORD *)&v0[qword_10064F728] = 0;
  *(_QWORD *)&v0[qword_10064F730] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRISmartListFilterEditorRelativeRangeCellContent.swift", 65, 2, 135, 0);
  __break(1u);
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV14HashtagOptionsO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

unint64_t sub_100244C3C(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result > 2)
    return 2;
  v2 = *(_QWORD *)(v1 + qword_10064F708);
  if (*(_QWORD *)(v2 + 16) > result)
    return qword_10052B400[*(char *)(v2 + result + 32)];
  __break(1u);
  return result;
}

char *sub_100244C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned __int8 v17;
  unsigned int *v18;
  void *v19;
  char *result;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  id v25;
  char *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v1 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v1);
  v31 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v11 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - v15;
  v17 = sub_100242A78();
  v18 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  if ((v17 & 1) != 0)
    v18 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v18, v7);
  v19 = *(void **)(v0 + qword_10064F6F0);
  result = (char *)objc_msgSend(v19, "numberOfComponents");
  v21 = *(_QWORD *)(v0 + qword_10064F708 + 8);
  if (*(_QWORD *)(v21 + 16) < 2uLL)
  {
    __break(1u);
    return result;
  }
  if (*(_QWORD *)(v21 + 40) >= (uint64_t)result)
    goto LABEL_8;
  v22 = objc_msgSend(v19, "selectedRowInComponent:");
  v23 = (uint64_t)v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_8:
    v23 = 1;
  }
  v24 = sub_100242AF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *(unsigned int *)*(&off_1005F8AE0 + v24), v3);
  if ((*(_BYTE *)(v0 + qword_10064F710) & 1) != 0)
    v25 = 0;
  else
    v25 = objc_msgSend(*(id *)(v0 + qword_10064F700), "isOn");
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(v10, v23, v6, v25);
  sub_100241634((uint64_t)v16);
  result = (char *)swift_unknownObjectWeakLoadStrong(v0 + qword_10064F6E8);
  if (result)
  {
    v26 = result;
    sub_100241C28();
    v27 = *(void (**)(uint64_t))&v26[qword_100673720];
    v28 = v32;
    if (v27)
    {
      v29 = *(_QWORD *)&v26[qword_100673720 + 8];
      v30 = (uint64_t)v31;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v31, v13, v32);
      swift_retain();
      v27(v30);
      sub_1000381B8((uint64_t)v27, v29);
      sub_100244F5C(v30);
    }
    swift_unknownObjectRelease(v26);
    return (char *)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  }
  return result;
}

uint64_t sub_100244F5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100244F98()
{
  unint64_t result;

  result = qword_10064FA30;
  if (!qword_10064FA30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10064FA30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100245028 + 4 * byte_10052AF49[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10024505C + 4 * byte_10052AF44[v4]))();
}

uint64_t sub_10024505C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100245064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10024506CLL);
  return result;
}

uint64_t sub_100245078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100245080);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100245084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10024508C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType;
}

unint64_t sub_1002450AC()
{
  unint64_t result;

  result = qword_10064FA50;
  if (!qword_10064FA50)
  {
    result = swift_getWitnessTable(&unk_10052B3D0, &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType);
    atomic_store(result, (unint64_t *)&qword_10064FA50);
  }
  return result;
}

id sub_10024520C(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  double v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v6 = swift_unknownObjectWeakInit(v5, 0).n128_u64[0];
  v7 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, "initWithCoder:", a1, v6);
  if (v8)
  {
    v9 = objc_allocWithZone((Class)UITapGestureRecognizer);
    v10 = v8;
    v11 = objc_msgSend(v9, "initWithTarget:action:", v10, "didTap:");
    objc_msgSend(v10, "addGestureRecognizer:", v11);

    a1 = v11;
  }

  return v8;
}

_QWORD *sub_100245324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = TTRListAppearanceGridView.arrangedSubviews.getter();
  v1 = v0;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(v0);
    if (v2)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyArrayStorage;
  }
  if (v0 < 0)
    v13 = v0;
  else
    v13 = v0 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v0);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v13);
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      v7 = type metadata accessor for TTRListBadgeView(0);
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        v9 = v8;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v11 >= v10 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
        specialized Array._endMutation()(v12);
      }
      else
      {

      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_100245498(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  id v32;

  v2 = v1;
  objc_msgSend(a1, "locationInView:", v1);
  v32 = objc_msgSend(v1, "hitTest:withEvent:", 0);
  if (v32)
  {
    v3 = (uint64_t)sub_100245324();
    if ((unint64_t)v3 >> 62)
    {
LABEL_34:
      if (v3 < 0)
        v24 = v3;
      else
        v24 = v3 & 0xFFFFFFFFFFFFFF8;
      v25 = v32;
      v4 = _CocoaArrayWrapper.endIndex.getter(v24);
      if (v4)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v5 = v32;
      if (v4)
      {
LABEL_4:
        v6 = 0;
        while (1)
        {
          v7 = (v3 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3)
             : *(id *)(v3 + 8 * v6 + 32);
          v8 = v7;
          v9 = objc_msgSend(v32, "isDescendantOfView:", v7);

          if ((v9 & 1) != 0)
            break;
          v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_34;
          }
          ++v6;
          if (v10 == v4)
            goto LABEL_11;
        }
        swift_bridgeObjectRelease(v3);

        v11 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
        if ((v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem + 8] & 1) == 0
          && *(_QWORD *)v11 == v6)
        {
LABEL_46:
          v26 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate];
          Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate]);
          if (Strong)
          {
            v29 = Strong;
            v30 = *((_QWORD *)v26 + 1);
            ObjectType = swift_getObjectType(Strong, v28);
            (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v30 + 8))(v2, v6, ObjectType, v30);

            swift_unknownObjectRelease(v29);
            return;
          }
LABEL_12:

          return;
        }
        *(_QWORD *)v11 = v6;
        v11[8] = 0;
        v12 = (uint64_t)sub_100245324();
        v13 = v12;
        if ((unint64_t)v12 >> 62)
        {
          if (v12 >= 0)
            v12 &= 0xFFFFFFFFFFFFFF8uLL;
          v14 = _CocoaArrayWrapper.endIndex.getter(v12);
        }
        else
        {
          v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v14)
        {
          if (v14 < 1)
          {
            __break(1u);
LABEL_49:
            __break(1u);
            return;
          }
          for (i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0)
              v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
            else
              v16 = *(id *)(v13 + 8 * i + 32);
            v17 = v16;
            (*(void (**)(_QWORD))((swift_isaMask & *v16) + 0x1B8))((i == *(_QWORD *)v11) & ~v11[8]);

          }
        }
        swift_bridgeObjectRelease(v13);
        v18 = (uint64_t)sub_100245324();
        v19 = v18;
        if ((unint64_t)v18 >> 62)
        {
          if (v18 >= 0)
            v18 &= 0xFFFFFFFFFFFFFF8uLL;
          v20 = _CocoaArrayWrapper.endIndex.getter(v18);
          if (!v20)
            goto LABEL_45;
        }
        else
        {
          v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v20)
          {
LABEL_45:
            swift_bridgeObjectRelease(v19);
            goto LABEL_46;
          }
        }
        if (v20 >= 1)
        {
          for (j = 0; j != v20; ++j)
          {
            if ((v19 & 0xC000000000000001) != 0)
              v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v19);
            else
              v22 = *(id *)(v19 + 8 * j + 32);
            v23 = v22;
            (*(void (**)(_QWORD))((swift_isaMask & *v22) + 0x1B8))((j == *(_QWORD *)v11) & ~v11[8]);

          }
          goto LABEL_45;
        }
        goto LABEL_49;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease(v3);

    goto LABEL_12;
  }
}

void sub_10024586C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;

  v2 = v1;
  v3 = (uint64_t)sub_100245324();
  if ((unint64_t)v3 >> 62)
  {
LABEL_31:
    if (v3 < 0)
      v24 = v3;
    else
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
    v25 = a1;
    v4 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(v3);

    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = a1;
  if (!v4)
    goto LABEL_10;
LABEL_3:
  v6 = 0;
  while (1)
  {
    v7 = (v3 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3)
       : *(id *)(v3 + 8 * v6 + 32);
    v8 = v7;
    v9 = objc_msgSend(a1, "isDescendantOfView:", v7);

    if ((v9 & 1) != 0)
      break;
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    ++v6;
    if (v10 == v4)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease(v3);

  v11 = v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem + 8) & 1) == 0
    && *(_QWORD *)v11 == v6)
  {
    goto LABEL_43;
  }
  *(_QWORD *)v11 = v6;
  *(_BYTE *)(v11 + 8) = 0;
  v12 = (uint64_t)sub_100245324();
  v13 = v12;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 >= 0)
      v12 &= 0xFFFFFFFFFFFFFF8uLL;
    v14 = _CocoaArrayWrapper.endIndex.getter(v12);
  }
  else
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14)
  {
    if (v14 < 1)
    {
      __break(1u);
      goto LABEL_47;
    }
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
      else
        v16 = *(id *)(v13 + 8 * i + 32);
      v17 = v16;
      (*(void (**)(_QWORD))((swift_isaMask & *v16) + 0x1B8))((i == *(_QWORD *)v11) & ~*(unsigned __int8 *)(v11 + 8));

    }
  }
  swift_bridgeObjectRelease(v13);
  v18 = (uint64_t)sub_100245324();
  v19 = v18;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 >= 0)
      v18 &= 0xFFFFFFFFFFFFFF8uLL;
    v20 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (!v20)
      goto LABEL_42;
LABEL_24:
    if (v20 >= 1)
    {
      for (j = 0; j != v20; ++j)
      {
        if ((v19 & 0xC000000000000001) != 0)
          v22 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v19);
        else
          v22 = *(id *)(v19 + 8 * j + 32);
        v23 = v22;
        (*(void (**)(_QWORD))((swift_isaMask & *v22) + 0x1B8))((j == *(_QWORD *)v11) & ~*(unsigned __int8 *)(v11 + 8));

      }
      goto LABEL_42;
    }
LABEL_47:
    __break(1u);
    return;
  }
  v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v20)
    goto LABEL_24;
LABEL_42:
  swift_bridgeObjectRelease(v19);
LABEL_43:
  v26 = v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate);
  if (Strong)
  {
    v29 = Strong;
    v30 = *(_QWORD *)(v26 + 8);
    ObjectType = swift_getObjectType(Strong, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8))(v2, v6, ObjectType, v30);
    swift_unknownObjectRelease(v29);
  }
}

uint64_t sub_100245BA8()
{
  uint64_t v0;

  return sub_1000381C8(v0 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate);
}

uint64_t type metadata accessor for TTRListAppearanceBadgeGridView()
{
  return objc_opt_self(_TtC9Reminders30TTRListAppearanceBadgeGridView);
}

void sub_100245BE8(void *a1)
{
  sub_10024586C(a1);
}

uint64_t type metadata accessor for TTRListDetailAssembly.ListComponentsCreator()
{
  return objc_opt_self(_TtCO9Reminders21TTRListDetailAssembly21ListComponentsCreator);
}

uint64_t type metadata accessor for TTRListDetailAssembly.CustomSmartListComponentsCreator()
{
  return objc_opt_self(_TtCO9Reminders21TTRListDetailAssembly32CustomSmartListComponentsCreator);
}

uint64_t type metadata accessor for TTRListDetailAssembly.CreationComponentsCreator()
{
  return objc_opt_self(_TtCO9Reminders21TTRListDetailAssembly25CreationComponentsCreator);
}

uint64_t type metadata accessor for TTRListDetailAssembly.TemplateComponentsCreator()
{
  return objc_opt_self(_TtCO9Reminders21TTRListDetailAssembly25TemplateComponentsCreator);
}

uint64_t sub_100245C88()
{
  return sub_1000175C8(&qword_10064FCF8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRTemplateEditor, (uint64_t)&protocol conformance descriptor for TTRTemplateEditor);
}

_UNKNOWN **sub_100245CB4()
{
  return &protocol witness table for TTRListDetailTemplateViewModelSource;
}

uint64_t sub_100245CC0()
{
  return sub_1000175C8(&qword_10064FD38, (uint64_t (*)(uint64_t))type metadata accessor for TTRListDetailCreationEditor, (uint64_t)&protocol conformance descriptor for TTRListDetailCreationEditor);
}

_UNKNOWN **sub_100245CEC()
{
  return &protocol witness table for TTRListDetailCreationViewModelSource;
}

uint64_t sub_100245CF8()
{
  return sub_1000175C8(&qword_10064FD78, (uint64_t (*)(uint64_t))&type metadata accessor for TTRSmartListEditor, (uint64_t)&protocol conformance descriptor for TTRSmartListEditor);
}

_UNKNOWN **sub_100245D24()
{
  return &protocol witness table for TTRListDetailCustomSmartListViewModelSource;
}

uint64_t sub_100245D30()
{
  return sub_1000175C8(&qword_10064FDB8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRListEditor, (uint64_t)&protocol conformance descriptor for TTRListEditor);
}

_UNKNOWN **sub_100245D5C()
{
  return &protocol witness table for TTRListDetailListViewModelSource;
}

uint64_t sub_100245D68()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance));
}

uint64_t sub_100245DA4()
{
  return 1;
}

_UNKNOWN **sub_100245DB4()
{
  return &off_1005EA8C8;
}

uint64_t sub_100245DC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = swift_allocObject(&unk_1005F8CC8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_OWORD *)a3 = xmmword_100522BB0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = sub_100249398;
  *(_QWORD *)(a3 + 32) = v6;
  return swift_retain();
}

uint64_t sub_100245E28@<X0>(uint64_t (*a1)(void)@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (void *)a1();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "objectID");

    *a2 = v5;
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    swift_storeEnumTagMultiPayload(a2, v6, 8);
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
    v10 = v6;
  }
  else
  {
    v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t sub_100245ED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  swift_release();
  swift_release();
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) != 1)
  {
    v9 = (char *)&loc_100246050 + 4 * byte_10052B5E0[swift_getEnumCaseMultiPayload(v7, v8)];
    __asm { BR              X10 }
  }
  return 0;
}

void sub_10024608C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10001F580(v2, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    sub_1000AADC8(v1);
    swift_release();
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    JUMPOUT(0x100246068);
  }
  JUMPOUT(0x10024605CLL);
}

double sub_100246200(uint64_t a1)
{
  return sub_10024629C(a1, (void (*)(uint64_t))sub_1003E8E6C);
}

uint64_t sub_10024620C(void *a1)
{
  sub_1002472A0();
  LOBYTE(a1) = sub_1003E92E4(a1);
  swift_release();
  return a1 & 1;
}

double sub_100246248@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_1002472A0();
  sub_1003E94EC(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100246290(uint64_t a1)
{
  return sub_10024629C(a1, (void (*)(uint64_t))sub_1003E9680);
}

double sub_10024629C(uint64_t a1, void (*a2)(uint64_t))
{
  double result;

  sub_1002472A0();
  a2(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002462E0(uint64_t a1)
{
  return sub_1002462F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100395390);
}

uint64_t sub_1002462EC(uint64_t a1)
{
  return sub_1002462F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100397FDC);
}

uint64_t sub_1002462F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  v4 = sub_1002472A0();
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType(Strong, v6);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v4, ObjectType, v8);
    swift_unknownObjectRelease(v7);
    swift_retain();
    v11 = a2(a1, 1, v10, v4);
    swift_release();
    swift_release_n(v4, 2);
  }
  else
  {
    if (qword_10063D748 != -1)
      swift_once(&qword_10063D748, sub_1003E9A78);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100012DC4(v12, (uint64_t)qword_100659C50);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    swift_release();

    return 0;
  }
  return v11;
}

uint64_t sub_100246474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v1;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(v24);
  swift_release();
  v15 = swift_release();
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  if (v16(v10, 1, v11, v15) == 1)
  {
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10001F580((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 = v23;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v14);
    swift_release();
    v18 = swift_release();
    if (v16(v7, 1, v11, v18) == 1)
    {
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v7, v11))
      {
        sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v19 = (uint64_t)v7;
      }
      else
      {
        sub_10001F580((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(_QWORD *)(v17 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          sub_1000AADC8((uint64_t)v4);
          v20 = v22;
          swift_release();
          sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          return v20;
        }
        sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v19 = (uint64_t)v14;
      }
      sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return 0;
}

uint64_t sub_10024674C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t (*v42)(void *, uint64_t, uint64_t, __n128);
  __n128 v43;
  void *v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char v70[40];

  v62 = a2;
  v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v66);
  v5 = (void **)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (uint64_t)&v61 - v9;
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v64 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v61 - v13;
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  v65 = v2;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  swift_release();
  v22 = swift_release();
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
  if (v23(v14, 1, v15, v22) == 1)
  {
    v24 = (uint64_t)v14;
    return sub_1000073A0(v24, (uint64_t *)&unk_100640EB0);
  }
  sub_10001F580((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
  {
    v26 = (uint64_t)v18;
    v27 = v67;
    sub_10001F580(v26, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10002B1E8(v27, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload(v5, v66) != 1)
    {
      sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v33 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
      v32 = (uint64_t)v5;
      return sub_10001F544(v32, v33);
    }
    v28 = *v5;
    v29 = v65;
    swift_retain();
    swift_retain();
    v30 = (uint64_t)v64;
    TTRMutableTreeStorage.parent(of:)(v21);
    swift_release();
    v31 = swift_release();
    if (v23((char *)v30, 1, v15, v31) == 1)
    {

      sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v24 = v30;
      return sub_1000073A0(v24, (uint64_t *)&unk_100640EB0);
    }
    if (!swift_getEnumCaseMultiPayload(v30, v15))
    {
      v34 = v63;
      sub_10001F580(v30, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      if (*(_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance)
        && (swift_retain(), sub_1000AADC8(v34), v36 = v35, swift_release(), v36))
      {
        v38 = v21;
        v40 = *(_QWORD *)(v29
                        + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource);
        v39 = *(_QWORD *)(v29
                        + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource
                        + 8);
        ObjectType = swift_getObjectType(v40, v37);
        v42 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v39 + 16);
        v43 = swift_unknownObjectRetain(v40);
        v44 = (void *)v42(v36, ObjectType, v39, v43);
        swift_unknownObjectRelease(v40);
        if (v44)
        {
          v45 = sub_10002A750((uint64_t *)&unk_1006415A0);
          inited = swift_initStackObject(v45, v70);
          *(_OWORD *)(inited + 16) = xmmword_100521140;
          v47 = v62;
          v48 = *(void **)(v62 + 16);
          v49 = objc_msgSend(v48, "objectID");
          *(_QWORD *)(inited + 32) = v49;
          v69 = inited;
          specialized Array._endMutation()(v49);
          v50 = v69;
          v51 = v27;
          v52 = sub_100017684(v69);
          swift_bridgeObjectRelease(v50);
          v53 = type metadata accessor for TTRListEditor(0);
          v68 = v44;
          v54 = v44;
          v55 = objc_msgSend(v48, "saveRequest");
          v69 = v47;
          v56 = type metadata accessor for TTRReminderEditor(0);
          v57 = sub_1000AE644();
          v58 = TTRUndoableEditing.undoManager.getter(v56, v57);
          TTROneshotEditing.init(item:saveRequest:undoManager:)(&v69, &v68, v55, v58, v53, &protocol witness table for TTRListEditor);
          v59 = v28;
          TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v52, v28, 0);

          swift_bridgeObjectRelease(v52);
          swift_release();

          sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v60 = v51;
        }
        else
        {

          sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          v60 = v27;
        }
        sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v33 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v32 = (uint64_t)v38;
      }
      else
      {

        sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v33 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        v32 = (uint64_t)v21;
      }
      return sub_10001F544(v32, v33);
    }

    sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v32 = v30;
  }
  else
  {
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v32 = (uint64_t)v18;
  }
  v33 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
  return sub_10001F544(v32, v33);
}

uint64_t sub_100246D18()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 2;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_100246D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023A73C();
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 2;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

uint64_t sub_100246FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(void *, uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v12, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  v17 = sub_10001F580((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter(v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v19 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem;
      v20 = (uint64_t)v9;
LABEL_11:
      sub_10001F544(v20, v19);
      return 0;
    }
LABEL_10:
    v19 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
    v20 = (uint64_t)v16;
    goto LABEL_11;
  }
  sub_10001F580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance)
    || (swift_retain(), sub_1000AADC8((uint64_t)v6), v22 = v21, swift_release(), !v22))
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    goto LABEL_10;
  }
  v24 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource;
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource);
  v26 = *(_QWORD *)(v24 + 8);
  ObjectType = swift_getObjectType(v25, v23);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v26 + 16);
  v29 = swift_unknownObjectRetain(v25);
  v30 = v28(v22, ObjectType, v26, v29);

  swift_unknownObjectRelease(v25);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v30;
}

uint64_t sub_1002472A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils);
  }
  else
  {
    v3 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    v2 = swift_allocObject(v3, 32, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_QWORD *)(v2 + 24) = &off_1005F8BE8;
    swift_unknownObjectWeakAssign(v4, v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100247334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD v46[5];

  v45 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v44 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = 2;
  v9 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v8, v9, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v41 = REMSmartListType.title.getter(REMSmartListTypeAll);
  v11 = v10;
  v42 = static TTRListColors.SmartList.all.getter();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v16 = v15(ObjectType, v12);
  v17 = v16;
  if (v16)
    swift_unknownObjectRelease(v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12);
  v19 = v18;
  if (v18)
    swift_unknownObjectRelease(v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 56))(v46, ObjectType, v12);
  v20 = v46[3];
  sub_1000073A0((uint64_t)v46, &qword_100649FC0);
  v21 = v15(ObjectType, v12);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    v25 = swift_getObjectType(v21, v22);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v40 = 0;
  }
  v26 = v19 != 0;
  v27 = 0xE000000000000000;
  if (v11)
    v27 = v11;
  v39 = v27;
  if (v11)
    v28 = v41;
  else
    v28 = 0;
  v29 = v20 != 0;
  v30 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_hasDefaultNewReminderButton);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount + 8))
    v31 = 0;
  else
    v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount);
  v32 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v33 = v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v43, 1, 1, v32);
  v34 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v35 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v44, 1, 1, v34);
  BYTE6(v38) = 0;
  WORD2(v38) = 1;
  LODWORD(v38) = 0;
  HIBYTE(v37) = v40 & 1;
  BYTE6(v37) = v29;
  WORD2(v37) = 512;
  BYTE3(v37) = v26;
  BYTE2(v37) = 0;
  BYTE1(v37) = v17 != 0;
  LOBYTE(v37) = 1;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v8, v28, v39, v42, 0, 1, 0, 3, v37, v30, v31, 0, 7105633, 0xE300000000000000, 0, v33, v35, v38);
}

uint64_t sub_100247680()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance));
}

uint64_t sub_1002476BC()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource));
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10024771C()
{
  return type metadata accessor for TTRShowAllRemindersViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowAllRemindersViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_10064FE48;
  if (!qword_10064FE48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowAllRemindersViewModelSource);
  return result;
}

uint64_t sub_100247760(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = &unk_10052B618;
  v2[1] = &unk_10052B630;
  v2[2] = &unk_10052B648;
  v2[3] = &unk_10052B660;
  v2[4] = &unk_10052B630;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 1336);
}

void sub_1002477C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, unint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  _WORD *v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  _WORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  __int128 v116[2];
  __int16 v117;
  char v118;
  _QWORD v119[2];
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  __int16 v125;
  char v126;
  char v127;
  _BYTE v128[3];
  _WORD v129[28];
  _OWORD v130[2];
  uint64_t v131;
  uint64_t v132;
  char v133;
  _BYTE v134[136];

  v3 = v2;
  v110 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v110);
  v109 = (uint64_t *)((char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v6);
  v108 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v107 = (char *)&v87 - v9;
  v106 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist(0);
  v115 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v105 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v103 = *(_QWORD *)(v11 - 8);
  v104 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v17);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10002A750(&qword_1006436C0);
  __chkstk_darwin(v102);
  v101 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v100 = (unint64_t *)((char *)&v87 - v22);
  __chkstk_darwin(v23);
  v114 = (uint64_t *)((char *)&v87 - v24);
  v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v88 = *(_QWORD *)(v25 - 8);
  v89 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter(v28);
  v30 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(_QWORD *)v30 = v29;
  *(_BYTE *)(v30 + 8) = v31 & 1;
  v32 = sub_100247334((uint64_t)v27);
  v33 = REMRemindersListDataView.ListsModel.groups.getter(v32);
  *(_QWORD *)&v116[0] = _swiftEmptyArrayStorage;
  sub_1003D83CC(0, 0, 0);
  v34 = *(_QWORD *)&v116[0];
  v35 = *(_QWORD *)(v33 + 16);
  v36 = swift_bridgeObjectRetain(v33);
  v99 = v35;
  v93 = a2;
  v94 = v3;
  v91 = v19;
  v92 = v16;
  v90 = v27;
  if (v35)
  {
    v37 = 0;
    v95 = v129;
    v96 = v128;
    v97 = v33;
    v98 = v13;
    while (v37 < *(_QWORD *)(v33 + 16))
    {
      v38 = v33
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
          + *(_QWORD *)(v115 + 72) * v37;
      v39 = v37;
      v41 = v101;
      v40 = v102;
      v42 = &v101[*(int *)(v102 + 48)];
      v43 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v115 + 16);
      v44 = v115;
      v45 = v106;
      v43(v42, v38, v106, v36);
      v46 = v100;
      v47 = (char *)v100 + *(int *)(v40 + 48);
      v113 = v39;
      *v100 = v39;
      v48 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      v48(v47, v42, v45);
      v49 = (uint64_t)v46;
      v50 = v114;
      sub_10000F614(v49, (uint64_t)v114, &qword_1006436C0);
      v51 = *(int *)(v40 + 48);
      v52 = &v41[v51];
      v53 = *v50;
      ((void (*)(char *, char *, uint64_t))v43)(v52, (char *)v50 + v51, v45);
      v54 = v105;
      v55 = ((uint64_t (*)(char *, char *, uint64_t))v48)(v105, v52, v45);
      v56 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter(v55);
      type metadata accessor for TTRListColors(0);
      static TTRListColors.color(for:)(v130, v56);
      v111 = v130[1];
      v112 = v130[0];
      v57 = v131;
      v58 = v132;
      v59 = v133;

      v60 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
      v62 = v61;
      if (v53)
        v63 = 3;
      else
        v63 = 2;
      v64 = sub_1000AD9D0((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
      v65 = REMRemindersListDataView.ListsModel.Sublist.listID.getter(v64);
      v67 = v109;
      v66 = v110;
      *v109 = v65;
      swift_storeEnumTagMultiPayload(v67, v66, 1);
      v119[0] = v60;
      v119[1] = v62;
      v120 = v112;
      v121 = v111;
      v122 = v57;
      v123 = v58;
      v124 = v59;
      v125 = 258;
      v126 = 0;
      v127 = v63;
      v68 = v96;
      *v96 = v117;
      *((_BYTE *)v68 + 2) = v118;
      v69 = v95;
      *v95 = 0u;
      v69[1] = 0u;
      v69[2] = 0u;
      v129[24] = 255;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v119);
      sub_10000F614((uint64_t)v119, (uint64_t)v134, &qword_100649B60);
      v70 = (uint64_t)v107;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v67, v134, 1, 0, 0, 0, 0, 0);
      v71 = v108;
      v72 = sub_10002B1E8(v70, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v73 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter(v72);
      sub_1000AD9D0((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
      sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v74 = v45;
      v75 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v54, v74);
      sub_10001F580(v71, v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v76 = v104;
      *(_QWORD *)(v75 + *(int *)(v104 + 20)) = v73;
      *(_BYTE *)(v75 + *(int *)(v76 + 24)) = 0;
      sub_1000073A0((uint64_t)v114, &qword_1006436C0);
      v34 = *(_QWORD *)&v116[0];
      if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v116[0]) & 1) == 0)
      {
        sub_1003D83CC(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = *(_QWORD *)&v116[0];
      }
      v78 = *(_QWORD *)(v34 + 16);
      v77 = *(_QWORD *)(v34 + 24);
      v33 = v97;
      v79 = v113;
      if (v78 >= v77 >> 1)
      {
        sub_1003D83CC(v77 > 1, v78 + 1, 1);
        v34 = *(_QWORD *)&v116[0];
      }
      v37 = v79 + 1;
      *(_QWORD *)(v34 + 16) = v78 + 1;
      sub_10001F580(v75, v34+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v78, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      if (v99 == v37)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease_n(v33, 2);
    v81 = (uint64_t)v90;
    v80 = (uint64_t)v91;
    sub_10002B1E8((uint64_t)v90, (uint64_t)v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v80, 0, 1, v89);
    v82 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v83 = swift_allocObject(v82, 16, 7);
    v84 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v85 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v92, 1, 1, v84);
    *((_QWORD *)&v120 + 1) = v82;
    *(_QWORD *)&v121 = &off_100604210;
    v119[0] = v83;
    sub_100010634((uint64_t)v119, (uint64_t)v116);
    v86 = swift_allocObject(&unk_1005F8C78, 72, 7);
    *(_QWORD *)(v86 + 16) = v34;
    sub_10002E37C(v116, v86 + 24);
    *(_QWORD *)(v86 + 64) = v94;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10047C8F8(1, v80, (uint64_t (*)(uint64_t))sub_10003E360, v86, v93, 0, v85);
    swift_release();
    sub_100027F10(v119);
    swift_release();
    sub_1000073A0(v85, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v80, &qword_100649CA0);
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
  }
}

uint64_t sub_100247F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61[2];
  _QWORD v62[5];

  v3 = v2;
  v60 = a2;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v57 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = REMRemindersListDataView.ListsSectionsModel.completedRemindersCount.getter(v18);
  v20 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(_QWORD *)v20 = v19;
  *(_BYTE *)(v20 + 8) = v21 & 1;
  v22 = sub_100247334((uint64_t)v17);
  v58 = v15;
  v59 = v17;
  if (v17[*(int *)(v15 + 64)] == 2)
  {
    v56 = a1;
    v23 = REMRemindersListDataView.ListsSectionsModel.lists.getter(v22);
    v62[0] = _swiftEmptyArrayStorage;
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v54 = v10;
      v55 = v7;
      v25 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v53 = v23;
      v26 = v23 + v25;
      v27 = *(_QWORD *)(v12 + 72);
      v28 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16);
      do
      {
        v29 = v28(v14, v26, v11);
        v30 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter(v29);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        sub_100450B88(v30);
        v26 += v27;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease(v53);
      v31 = (_QWORD *)v62[0];
      v10 = v54;
      v7 = v55;
    }
    else
    {
      swift_bridgeObjectRelease(v23);
      v31 = _swiftEmptyArrayStorage;
    }
    v34 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
    v35 = swift_allocObject(v34, 160, 7);
    v36 = swift_retain();
    *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = sub_1000ADA0C(v36, v31, 0, 0, 1, &_swiftEmptySetSingleton, v35);
    v32 = (uint64_t)v59;
    v33 = v60;
  }
  else
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = 0;
    v32 = (uint64_t)v59;
    v33 = v60;
  }
  swift_release();
  v38 = REMRemindersListDataView.ListsSectionsModel.lists.getter(v37);
  swift_retain();
  v39 = sub_100249098(v38, v3);
  swift_bridgeObjectRelease(v38);
  swift_release();
  sub_10002B1E8(v32, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v10, 0, 1, v58);
  v40 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v41 = (uint64_t)v10;
  v42 = swift_allocObject(v40, 16, 7);
  v43 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v7, 1, 1, v43);
  v62[3] = v40;
  v62[4] = &off_100604210;
  v62[0] = v42;
  sub_100010634((uint64_t)v62, (uint64_t)v61);
  v44 = swift_allocObject(&unk_1005F8CA0, 72, 7);
  *(_QWORD *)(v44 + 16) = v39;
  sub_10002E37C(v61, v44 + 24);
  *(_QWORD *)(v44 + 64) = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain(v39);
  sub_10047C8F8(1, v41, (uint64_t (*)(uint64_t))sub_1000AE55C, v44, v33, 0, (uint64_t)v7);
  swift_release();
  sub_100027F10(v62);
  swift_bridgeObjectRelease(v39);
  sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v41, &qword_100649CA0);
  swift_release();
  v45 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v45);
  if (Strong)
  {
    v48 = Strong;
    v49 = *(_QWORD *)(v45 + 8);
    ObjectType = swift_getObjectType(Strong, v47);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 104))(2, ObjectType, v49);
    swift_unknownObjectRelease(v48);
  }
  return sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_1002483A4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t result;
  __int128 v49;
  __int128 v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD v63[4];
  _OWORD v64[6];
  _OWORD v65[2];
  _OWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE v70[144];
  uint64_t v71;

  v58 = a2;
  v71 = a3;
  v4 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v55 = v5;
  __chkstk_darwin(v4);
  v53 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v52);
  v51 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_1006436C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(int *)(v11 + 48);
  v20 = &v13[v19];
  v21 = *(_QWORD *)a1;
  (*(void (**)(char *, char *, uint64_t, double))(v15 + 16))(v20, &a1[v19], v14, v16);
  v56 = v15;
  v57 = v14;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v23 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter(v22);
  type metadata accessor for TTRListColors(0);
  static TTRListColors.color(for:)(v66, v23);
  v49 = v66[1];
  v50 = v66[0];
  v25 = v67;
  v24 = v68;
  v26 = v69;

  v27 = (uint64_t)v10;
  *(_QWORD *)&v59 = REMRemindersListDataView.ListsSectionsModel.List.listName.getter();
  *((_QWORD *)&v59 + 1) = v28;
  if (v21)
    v29 = 3;
  else
    v29 = 2;
  v60 = v50;
  v61 = v49;
  *(_QWORD *)&v62 = v25;
  *((_QWORD *)&v62 + 1) = v24;
  LOBYTE(v63[0]) = v26;
  *(_WORD *)((char *)v63 + 1) = 0;
  BYTE3(v63[0]) = 0;
  BYTE4(v63[0]) = v29;
  *(_OWORD *)((char *)v63 + 8) = 0u;
  *(_OWORD *)((char *)&v63[1] + 8) = 0u;
  *(_OWORD *)((char *)&v63[2] + 8) = 0u;
  WORD4(v63[3]) = 255;
  v30 = sub_1000AD9D0((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
  v31 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter(v30);
  v33 = v51;
  v32 = v52;
  *v51 = v31;
  swift_storeEnumTagMultiPayload(v33, v32, 1);
  v64[4] = v63[0];
  v64[5] = v63[1];
  v65[0] = v63[2];
  *(_OWORD *)((char *)v65 + 10) = *(_OWORD *)((char *)&v63[2] + 10);
  v64[0] = v59;
  v64[1] = v60;
  v64[2] = v61;
  v64[3] = v62;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v64);
  sub_10000F614((uint64_t)v64, (uint64_t)v70, &qword_100649B60);
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v33, v70, 1, 0, 0, 0, 0, 0);
  v34 = sub_10003E134((uint64_t)&v59);
  v35 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter(v34);
  v36 = v53;
  REMRemindersListDataView.ListsSectionsModel.List.listType.getter();
  v37 = v54;
  v38 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v36, v54);
  if ((_DWORD)v38 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.regular(_:)
    || (_DWORD)v38 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.customSmartList(_:))
  {
    v39 = v58;
LABEL_11:
    __chkstk_darwin(v38);
    *((_QWORD *)&v49 - 4) = v18;
    *((_QWORD *)&v49 - 3) = v66;
    *((_QWORD *)&v49 - 2) = v39;
    v46 = sub_1000ADFE4(v35, (void (*)(_QWORD, char *))sub_100249368, (uint64_t)(&v49 - 3));
    sub_10003E230((uint64_t)&v59);
    swift_bridgeObjectRelease(v35);
    sub_1000AD9D0((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    v47 = v71;
    sub_10001F580(v27, v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    *(_QWORD *)(v47 + *(int *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) + 20)) = v46;
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v18, v57);
  }
  v39 = v58;
  if ((_DWORD)v38 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.grocery(_:))
  {
    v40 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v38);
    v41 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listID.getter(v40);
    v42 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

    if ((v42 & 1) != 0)
    {
      v43 = *(_QWORD *)(v39 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance);
      if (v43)
      {
        swift_retain();
        swift_bridgeObjectRelease(v35);
        v45 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter(v44);
        v35 = sub_1000ADB74(v45, v43);
        swift_bridgeObjectRelease(v45);
        swift_release();
      }
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease(v35);
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v37, v37);
  __break(1u);
  return result;
}

uint64_t sub_100248840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  __int16 v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  _QWORD v82[6];
  unsigned __int8 v83;
  _QWORD v84[6];
  unsigned __int8 v85;
  _BYTE v86[136];

  v59 = a5;
  v60 = a2;
  v42 = a1;
  v57 = a4;
  sub_1000AE578(a4, (uint64_t)v84);
  v48 = v84[0];
  v49 = v84[1];
  v52 = v84[2];
  v53 = v84[3];
  v54 = v84[4];
  v55 = v84[5];
  v56 = v85;
  v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v44);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v12);
  v58 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - v15;
  v43 = a3;
  v18 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter(v17);
  type metadata accessor for TTRListColors(0);
  static TTRListColors.color(for:)(v82, v18);
  v19 = v82[0];
  v45 = v82[1];
  v46 = v82[2];
  v47 = v82[3];
  v50 = v82[4];
  v51 = v82[5];
  v20 = v83;

  REMRemindersListDataView.SectionLite.type.getter(v21);
  v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if ((_DWORD)v22 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    v23 = *v11;
    v24 = v11[1];
    v25 = v20;
    v26 = v11[2];
    swift_bridgeObjectRelease(v11[4]);
    if (v42)
      v27 = 3;
    else
      v27 = 2;
    *v7 = v23;
    swift_storeEnumTagMultiPayload(v7, v44, 1);
    v63 = v24;
    v64 = v26;
    v65 = v48;
    v66 = v49;
    v67 = v52;
    v68 = v53;
    v69 = v54;
    v70 = v55;
    v71 = v56;
    LOWORD(v72) = 258;
    BYTE2(v72) = 0;
    HIBYTE(v72) = v27;
    v73 = v61;
    v74 = v62;
    v75 = v19;
    v76 = v45;
    v77 = v46;
    v78 = v47;
    v79 = v50;
    v80 = v51;
    v81 = v25;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v63);
    sub_10000F614((uint64_t)&v63, (uint64_t)v86, &qword_100649B60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v7, v86, 1, 0, 1, 1, 0, 0);
    sub_1000AD9D0((uint64_t)v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    sub_1000AD9D0(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    goto LABEL_8;
  }
  v41 = v19;
  LODWORD(v42) = v20;
  v28 = v44;
  v30 = v48;
  v29 = v49;
  v31 = v57;
  if ((_DWORD)v22 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    v32 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter(v22);
    v33 = *(_QWORD *)(v32 + 16);
    swift_bridgeObjectRelease(v32);
    sub_1000AD9D0((uint64_t)v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    v34 = sub_1000AD9D0(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    *v7 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter(v34);
    swift_storeEnumTagMultiPayload(v7, v28, 8);
    v63 = 0;
    v64 = 0xE000000000000000;
    v65 = v30;
    v66 = v29;
    v67 = v52;
    v68 = v53;
    v69 = v54;
    v70 = v55;
    v71 = v56;
    v72 = 50331906;
    v73 = v61;
    v74 = v62;
    v75 = v41;
    v76 = v45;
    v77 = v46;
    v78 = v47;
    v79 = v50;
    v80 = v51;
    v81 = v42;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v63);
    sub_10000F614((uint64_t)&v63, (uint64_t)v86, &qword_100649B60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v7, v86, v33 > 1, 0, 0, v33 > 1, 0, 0);
LABEL_8:
    v35 = v58;
    v36 = sub_10002B1E8((uint64_t)v16, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v37 = REMRemindersListDataView.SectionLite.reminders.getter(v36);
    sub_1000AD9D0((uint64_t)v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v38 = v35;
    v39 = v59;
    sub_10001F580(v38, v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(_QWORD *)(v39 + *(int *)(result + 20)) = v37;
    *(_BYTE *)(v39 + *(int *)(result + 24)) = 0;
    return result;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
  __break(1u);
  return result;
}

double sub_100248CF0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(void *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  double result;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    sub_1000AADC8(a1);
    v6 = v5;
    swift_release();
    if (v6)
    {
      v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource);
      v9 = *(_QWORD *)(v2
                     + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource
                     + 8);
      ObjectType = swift_getObjectType(v8, v7);
      v11 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v9 + 16);
      v12 = swift_unknownObjectRetain(v8);
      v13 = v11(v6, ObjectType, v9, v12);
      swift_unknownObjectRelease(v8);
      if (v13)
      {
        *(_QWORD *)(a2 + 24) = &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
        *(_QWORD *)(a2 + 32) = &off_1005EC910;

        *(_QWORD *)a2 = v13;
        return result;
      }

    }
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_100248DD8()
{
  sub_100248F2C();
}

uint64_t sub_100248DE4(uint64_t a1, void *a2)
{
  return sub_100248E7C(a2);
}

uint64_t sub_100248DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance);
  if (!v3)
    return 0;
  swift_retain();
  v5 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  v6 = sub_1001BB050(v5, a2);
  swift_release_n(v3, 2);
  return v6;
}

uint64_t sub_100248E7C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance);
  if (!v2)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(Strong, v5);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain(v2);
    v10 = v9(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v6 = TTRSection.init(with:store:)(a1, v10);
    swift_release(v2);
  }
  return v6;
}

void sub_100248F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_100248FEC + 4 * byte_10052B5EC[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100248FEC()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

_QWORD *sub_100249098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0);
  v37 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10002A750(&qword_1006436C8);
  __chkstk_darwin(v40);
  v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v38 = (uint64_t *)((char *)&v30 - v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - v12;
  v42 = _swiftEmptyArrayStorage;
  sub_1003D83F8(0, 0, 0);
  v14 = v42;
  v15 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v36 = v15;
  v30 = a1;
  if (v15)
  {
    v16 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List(0);
    v17 = 0;
    v18 = *(_QWORD *)(v16 - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v31 = *(_QWORD *)(v18 + 72);
    v32 = v7;
    v34 = v18;
    v35 = v16;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v20 = v16;
    while (1)
    {
      v21 = v40;
      v22 = &v39[*(int *)(v40 + 48)];
      v33(v22, v19, v20);
      v23 = *(int *)(v21 + 48);
      v24 = (uint64_t)v38;
      v25 = (char *)v38 + v23;
      *v38 = v17;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v25, v22, v20);
      sub_10000F614(v24, (uint64_t)v13, &qword_1006436C8);
      sub_1002483A4(v13, v41, (uint64_t)v7);
      sub_1000073A0((uint64_t)v13, &qword_1006436C8);
      if (v3)
        break;
      v14 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
      {
        sub_1003D83F8(0, v14[2] + 1, 1);
        v14 = v42;
      }
      v27 = v14[2];
      v26 = v14[3];
      if (v27 >= v26 >> 1)
      {
        sub_1003D83F8(v26 > 1, v27 + 1, 1);
        v14 = v42;
      }
      ++v17;
      v14[2] = v27 + 1;
      v28 = (uint64_t)v14
          + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
          + *(_QWORD *)(v37 + 72) * v27;
      v7 = v32;
      sub_10001F580((uint64_t)v32, v28, type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer);
      v19 += v31;
      if (v36 == v17)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease(v30);
    swift_release();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease(v30);
  }
  return v14;
}

uint64_t sub_100249368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100248840(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_100249374()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100249398@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100245E28(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1002493A0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, double);
  char *v33;
  char *v34;
  uint64_t *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  void (*v44)(uint64_t, char *, uint64_t);
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[24];
  char v98[24];
  char v99[32];

  v94 = a3;
  v96 = a2;
  v90 = a4;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v82 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v79 = (char *)&v77 - v9;
  v10 = type metadata accessor for TTRAdjustedIndexPath(0);
  __chkstk_darwin(v10);
  v80 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRUnadjustedIndexPath(0);
  __chkstk_darwin(v12);
  v81 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v14);
  v88 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v85 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100650530);
  __chkstk_darwin(v17);
  v86 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - v20;
  v22 = sub_10002A750(&qword_100650538);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v78 = (uint64_t)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v77 - v26;
  v28 = type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput(0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v6;
  v32 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v89 = a1;
  v32(v31, a1, v5, v29);
  v33 = &v31[*(int *)(v28 + 20)];
  ((void (*)(char *, uint64_t, uint64_t))v32)(v33, v96, v5);
  v34 = &v31[*(int *)(v28 + 24)];
  v92 = (void (*)(_QWORD, _QWORD, _QWORD))v32;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v34, v94, v5);
  v35 = (uint64_t *)(v95
                  + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  v36 = swift_beginAccess(v95 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v99, 0, 0);
  v91 = v35;
  v37 = *v35;
  v93 = v23;
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v21, 1, 1, v22, v36);
    goto LABEL_8;
  }
  v38 = v37 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
  swift_beginAccess(v37 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem, v98, 0, 0);
  sub_10000735C(v38, (uint64_t)v21, &qword_100650530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_8:
    sub_1000073A0((uint64_t)v21, &qword_100650530);
    v46 = v89;
    v49 = v90;
    goto LABEL_10;
  }
  v39 = *(int *)(v22 + 48);
  v40 = &v27[v39];
  v41 = &v21[v39];
  sub_10001F580((uint64_t)v21, (uint64_t)v27, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
  v42 = *(void (**)(_QWORD, _QWORD, _QWORD))(v87 + 32);
  v77 = v40;
  v43 = v40;
  v44 = (void (*)(uint64_t, char *, uint64_t))v42;
  v42(v43, v41, v5);
  v45 = static IndexPath.== infix(_:_:)(v27, v31);
  v46 = v89;
  if ((v45 & 1) != 0
    && (static IndexPath.== infix(_:_:)(&v27[*(int *)(v28 + 20)], v33) & 1) != 0
    && (static IndexPath.== infix(_:_:)(&v27[*(int *)(v28 + 24)], v34) & 1) != 0)
  {
    v47 = v78;
    v48 = v78 + *(int *)(v22 + 48);
    sub_10001F580((uint64_t)v27, v78, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    v44(v48, v77, v5);
    v49 = v90;
    v44(v90, (char *)v48, v5);
    sub_10001F544(v47, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    v50 = v92;
    goto LABEL_18;
  }
  sub_1000073A0((uint64_t)v27, &qword_100650538);
  v49 = v90;
LABEL_10:
  v51 = v96;
  v52 = (uint64_t)v88;
  Strong = swift_unknownObjectWeakLoadStrong(v95 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate);
  if (!Strong)
  {
LABEL_13:
    v50 = v92;
    v92(v49, v51, v5);
    goto LABEL_18;
  }
  v54 = Strong;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v52, 1, v84) == 1)
  {
    swift_unknownObjectRelease(v54);
    sub_1000073A0(v52, (uint64_t *)&unk_1006463C0);
    goto LABEL_13;
  }
  sub_10001F580(v52, v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v55 = v79;
  v50 = v92;
  v92(v79, v94, v5);
  v56 = (uint64_t)v80;
  TTRAdjustedIndexPath.init(_:)(v55);
  v57 = sub_10002A750((uint64_t *)&unk_100650540);
  v58 = *(unsigned __int8 *)(v87 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = v49;
  v61 = v22;
  v62 = swift_allocObject(v57, v59 + *(_QWORD *)(v87 + 72), v58 | 7);
  *(_OWORD *)(v62 + 16) = xmmword_100520250;
  v50(v62 + v59, v46, v5);
  v63 = (uint64_t)v81;
  TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)(v62);
  v64 = v62;
  v22 = v61;
  v49 = v60;
  swift_bridgeObjectRelease(v64);
  v65 = sub_10001F544(v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAdjustedIndexPath);
  v66 = IndexPath.item.getter(v65);
  v67 = v85;
  sub_10036E5B0(v85, v66);
  LOBYTE(v59) = v68;
  swift_unknownObjectRelease(v54);
  sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v59 & 1) != 0)
    v69 = v94;
  else
    v69 = v96;
  v70 = v82;
  v50((uint64_t)v82, v69, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 32))(v60, v70, v5);
LABEL_18:
  v71 = v91;
  swift_beginAccess(v91, v97, 32, 0);
  v72 = *v71;
  v73 = v93;
  if (v72)
  {
    swift_endAccess(v97);
    v74 = v86;
    v75 = v86 + *(int *)(v22 + 48);
    sub_10001F580((uint64_t)v31, v86, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    v50(v75, v49, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v22);
    v76 = v72 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
    swift_beginAccess(v72 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem, v97, 33, 0);
    swift_retain();
    sub_10024B344(v74, v76);
    swift_endAccess(v97);
    swift_release();
  }
  else
  {
    sub_10001F544((uint64_t)v31, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    swift_endAccess(v97);
  }
}

uint64_t sub_100249B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v9, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  if ((v4 == 0) == (a1 != 0)
    && (Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate)) != 0)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter)
                   + 88);
    swift_retain(v7);
    TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleColumnReorderingActiveStateChange(_:)(a1 != 0);
    swift_release(v4);
    swift_release(a1);
    swift_unknownObjectRelease(v6);
    a1 = v7;
  }
  else
  {
    swift_release(v4);
  }
  return swift_release(a1);
}

id sub_100249BF0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_10002A750((uint64_t *)&unk_100650590);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DragItemUserInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  sub_100249D78(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_id, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100650590);
    v14 = sub_10002A750(&qword_100650580);
    return (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v12, type metadata accessor for DragItemUserInfo);
    v16 = sub_10002A750(&qword_100650580);
    v17 = (uint64_t)a3 + *(int *)(v16 + 48);
    *a3 = v13;
    sub_10001F580((uint64_t)v12, v17, type metadata accessor for DragItemUserInfo);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
    return v13;
  }
}

uint64_t sub_100249D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[2];
  _QWORD v15[5];

  v4 = sub_10002A750((uint64_t *)&unk_100650590);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for DragItemUserInfo(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D550 != -1)
    swift_once(&qword_10063D550, sub_10024B38C);
  v14[0] = qword_100650450;
  v14[1] = *(_QWORD *)algn_100650458;
  swift_bridgeObjectRetain(*(_QWORD *)algn_100650458);
  AnyHashable.init<A>(_:)(v15, v14, &type metadata for String, &protocol witness table for String);
  UIDragItem.localObject<A>(ofType:forKey:)(v6, v7, v15, v7);
  sub_100041DDC((uint64_t)v15);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100650590);
LABEL_8:
    v11 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v11, 1, v7);
  }
  sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for DragItemUserInfo);
  if ((static UUID.== infix(_:_:)(v10, a1) & 1) == 0)
  {
    sub_10001F544((uint64_t)v10, type metadata accessor for DragItemUserInfo);
    goto LABEL_8;
  }
  sub_10001F580((uint64_t)v10, a2, type metadata accessor for DragItemUserInfo);
  v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v11, 1, v7);
}

BOOL sub_100249F34(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE v13[24];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v13, 0, 0);
  v8 = *v7;
  if (!v8)
    return 0;
  v9 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState;
  v10 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState);
  v11 = sub_1004627CC(*(_BYTE *)(v8 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState), a1);
  if (v11 != 9)
  {
    *(_BYTE *)(v8 + v9) = a1;
    __asm { BR              X10 }
  }
  return v10 == a1;
}

void sub_10024A2AC(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[280];
  _BYTE __src[280];
  _BYTE __dst[280];

  v7 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted;
  if (*(_BYTE *)(a2
                + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted) == 1)
  {
    v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column);
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator);
    if (!v9)
    {
      __break(1u);
      return;
    }
    sub_10024B61C(v9 + 32, (uint64_t)v11);
    sub_10024B61C((uint64_t)v11, (uint64_t)__src);
    if (sub_10007BC2C((uint64_t)__src) != 1)
    {
      memcpy(__dst, __src, sizeof(__dst));
      swift_unknownObjectRetain(v8);
      swift_retain();
      sub_10007D948((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D9CC);
      sub_10007A924(__dst);
      sub_10007D948((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007D838);
      swift_unknownObjectRelease(v8);
      *(_QWORD *)&a4 = swift_release().n128_u64[0];
    }
    *(_BYTE *)(a2 + v7) = 0;
  }
  v10 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted;
  if (*(_BYTE *)(a2
                + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) == 1)
  {
    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView), "cancelInteractiveMovement", a4);
    *(_BYTE *)(a2 + v10) = 0;
  }
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) == 1)
    sub_10024A41C(1, a2);
  if ((a1 & 1) != 0)
    sub_100249B00(0);
}

void sub_10024A41C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t ObjectType;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  uint64_t v44;

  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) == (a1 & 1))
  {
    v3 = a2;
    LOBYTE(v4) = a1;
    *(_BYTE *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) = (a1 & 1) == 0;
    v5 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
    v6 = objc_msgSend(v5, "gestureRecognizers");
    if (v6)
    {
      v7 = sub_100005ED8(0, (unint64_t *)&unk_100650550, UIGestureRecognizer_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
        goto LABEL_19;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v19))
      {
        v42 = v4;
        v43 = v5;
        v44 = v3;
        v5 = (void *)(v8 & 0xC000000000000001);
        v10 = 4;
        while (1)
        {
          v4 = v10 - 4;
          v11 = v5
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8)
              : *(id *)(v8 + 8 * v10);
          v6 = v11;
          v3 = v10 - 3;
          if (__OFADD__(v4, 1))
            break;
          ObjectType = swift_getObjectType(v11, v12);
          v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjectType), "description");
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v17 = v16;

          if (v15 == 0xD000000000000022 && v17 == 0x800000010056FDA0)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            swift_bridgeObjectRelease(0x800000010056FDA0);
            goto LABEL_17;
          }
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, 0xD000000000000022, 0x800000010056FDA0, 0);
          swift_bridgeObjectRelease(v17);
          if ((v18 & 1) != 0)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            goto LABEL_17;
          }

          ++v10;
          if (v3 == v9)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            v6 = 0;
LABEL_17:
            v5 = v43;
            v3 = v44;
            LOBYTE(v4) = v42;
            goto LABEL_24;
          }
        }
        __break(1u);
LABEL_19:
        if (v8 < 0)
          v19 = v8;
        else
          v19 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
      }
      swift_bridgeObjectRelease_n(v8, 2);
      v6 = 0;
    }
LABEL_24:
    objc_msgSend(v6, "setEnabled:", v4 & 1);
    if ((v4 & 1) != 0)
    {
      v20 = (double *)(v3
                     + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore);
      if ((*(_BYTE *)(v3
                     + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore
                     + 32) & 1) != 0)
      {
LABEL_33:
        objc_msgSend(v5, "_autoScrollTouchInsets");
        v34 = v33;
        v36 = v35;
        v38 = v37;
        v40 = v39;

        v41 = v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
        *(_QWORD *)(v41 + 24) = v34;
        *(_QWORD *)(v41 + 32) = v36;
        *(_QWORD *)(v41 + 40) = v38;
        *(_QWORD *)(v41 + 48) = v40;
        *(_BYTE *)(v41 + 56) = 0;
        return;
      }
      v21 = v20[2];
      v22 = v20[3];
      v23 = *v20;
      v24 = v20[1];
    }
    else
    {
      objc_msgSend(v5, "_autoScrollTouchInsets");
      v26 = v25;
      v28 = v27;
      v29 = *(double *)(v3
                      + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell)
          - *(double *)(v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
      v30 = -v29;
      v31 = 0.0;
      if (v29 > 0.0)
        v30 = 0.0;
      if (v29 >= 0.0)
        v31 = *(double *)(v3
                        + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell)
            - *(double *)(v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
      v24 = v26 - v30;
      v22 = v28 - v31;
      v32 = v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore;
      *(double *)v32 = v23;
      *(double *)(v32 + 8) = v26;
      *(double *)(v32 + 16) = v21;
      *(double *)(v32 + 24) = v28;
      *(_BYTE *)(v32 + 32) = 0;
    }
    objc_msgSend(v5, "_setAutoScrollTouchInsets:", v23, v24, v21, v22);
    goto LABEL_33;
  }
}

void sub_10024A764(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD aBlock[7];
  char v28[24];

  v3 = sub_10002A750(&qword_100650560);
  __chkstk_darwin(v3);
  v5 = (void **)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10002A750(&qword_100650568);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v28, 0, 0);
  v10 = *v9;
  if (v10
    && (*(_BYTE *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) & 1) == 0)
  {
    *(_BYTE *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) = 1;
    swift_retain();
    v11 = objc_msgSend(a1, "items");
    v12 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    aBlock[0] = v13;
    __chkstk_darwin(v14);
    aBlock[-2] = v1;
    v15 = sub_10002A750(&qword_100650578);
    v16 = sub_10002A750(&qword_100650580);
    v17 = sub_10024C1D8();
    Sequence.firstMap<A>(_:)(v5, sub_10024C1C0, &aBlock[-4], v15, v16, v17);
    v18 = swift_bridgeObjectRelease(aBlock[0]);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16, v18) == 1)
    {
      sub_1000073A0((uint64_t)v5, &qword_100650560);
    }
    else
    {
      v19 = (uint64_t)v5 + *(int *)(v16 + 48);
      v20 = (uint64_t)v8 + *(int *)(v6 + 48);
      *v8 = *v5;
      sub_10001F580(v19, v20, type metadata accessor for DragItemUserInfo);
      v21 = *v8;
      sub_10001F544((uint64_t)v8 + *(int *)(v6 + 48), type metadata accessor for DragItemUserInfo);
      v22 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column);
      if (!*(_QWORD *)(v22 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator))
      {
        __break(1u);
        return;
      }
      swift_unknownObjectRetain(*(_QWORD *)(v10
                                          + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column));
      swift_retain();
      v23 = sub_10007AB1C();
      swift_unknownObjectRelease(v22);
      swift_release();
      if (v23)
      {
        v24 = swift_allocObject(&unk_1005F8DD8, 24, 7);
        *(_QWORD *)(v24 + 16) = v23;
        aBlock[4] = sub_10024C25C;
        aBlock[5] = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100172B3C;
        aBlock[3] = &unk_1005F8DF0;
        v25 = _Block_copy(aBlock);
        v26 = v23;
        objc_msgSend(v21, "setPreviewProvider:", v25, swift_release().n128_f64[0]);
        _Block_release(v25);
        swift_release();

        return;
      }

    }
    swift_release();
  }
}

uint64_t sub_10024AB5C()
{
  return type metadata accessor for TTRIRemindersBoardColumnReorderingController(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingController(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_1006504B8, (uint64_t)&nominal type descriptor for TTRIRemindersBoardColumnReorderingController);
}

uint64_t sub_10024AB78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_10052B790;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = &unk_10052B7A8;
    v4[5] = &unk_10052B7A8;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10024AC0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v9[2];
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;

  v2 = sub_10002A750((uint64_t *)&unk_100650590);
  __chkstk_darwin(v2);
  v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v4, (uint64_t *)&unk_100650590);
  v5 = type metadata accessor for DragItemUserInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100650590);
    v11 = 0u;
    v12 = 0u;
  }
  else
  {
    *((_QWORD *)&v12 + 1) = v5;
    v6 = sub_100028D70(&v11);
    sub_10001F580((uint64_t)v4, (uint64_t)v6, type metadata accessor for DragItemUserInfo);
  }
  if (qword_10063D550 != -1)
    swift_once(&qword_10063D550, sub_10024B38C);
  v9[0] = qword_100650450;
  v9[1] = *(_QWORD *)algn_100650458;
  swift_bridgeObjectRetain(*(_QWORD *)algn_100650458);
  AnyHashable.init<A>(_:)(v10, v9, &type metadata for String, &protocol witness table for String);
  UIDragItem.setLocalObject(_:forKey:)(&v11, v10);
  sub_100041DDC((uint64_t)v10);
  return sub_1000073A0((uint64_t)&v11, &qword_100640E50);
}

uint64_t sub_10024AE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[8] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[12] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v4[13] = v9;
  v4[14] = v10;
  return swift_task_switch(sub_10024AF10, v9, v10);
}

uint64_t sub_10024AF10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100657320 + dword_100657320);
  v1 = (_QWORD *)swift_task_alloc(unk_100657324);
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_10024AF90;
  return v3(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10024AF90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[10] + 8))(v2[11], v2[9]);
  if (v0)
    v4 = sub_10024B0B8;
  else
    v4 = sub_10024B000;
  return swift_task_switch(v4, v2[13], v2[14]);
}

uint64_t sub_10024B000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (_QWORD *)(Strong
                  + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
    swift_beginAccess(Strong + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v0 + 40, 0, 0);
    if (*v4
      && *(_BYTE *)(*v4 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState) == 2)
    {
      sub_100249F34(6u);
    }

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024B0B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024B344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100650530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024B38C()
{
  uint64_t result;

  _StringGuts.grow(_:)(19);
  result = swift_bridgeObjectRelease(0xE000000000000000);
  qword_100650450 = 0xD00000000000003DLL;
  *(_QWORD *)algn_100650458 = 0x800000010056FDF0;
  return result;
}

BOOL sub_10024B3EC(void *a1, uint64_t a2)
{
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  CGPoint v8;
  CGRect v9;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  objc_msgSend(a1, "locationInView:", v2);
  v4 = v3;
  v6 = v5;
  objc_msgSend(v2, "bounds");
  v8.x = v4;
  v8.y = v6;
  return CGRectContainsPoint(v9, v8);
}

void sub_10024B44C(void *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v15, 0, 0);
  v5 = *v4;
  if (v5)
  {
    if (*(_BYTE *)(v5
                  + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) == 1)
    {
      v6 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
      swift_retain();
      objc_msgSend(a1, "locationInView:", v6);
      v9 = sub_10007ED0C(v7, v8, *(double *)(v5+ OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell));
      v11 = sub_10024C1B4(v9, v10, *(double *)(v5 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter));
      v13 = v12;
      objc_msgSend(v6, "updateInteractiveMovementTargetPosition:");
      v14 = v5 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
      *(double *)v14 = v11;
      *(_QWORD *)(v14 + 8) = v13;
      *(_BYTE *)(v14 + 16) = 0;
      swift_release();
    }
  }
}

id sub_10024B554(void *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  id v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = &v2[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v7 = v2;
  UUID.init()();
  *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_debugOverlayView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_dataSource] = a2;
  v8 = a1;
  v9 = a2;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t sub_10024B61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100641248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10024B664(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  double v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t Strong;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  objc_class *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  id v65;
  _QWORD aBlock[6];
  objc_super v67;
  char v68[32];

  v65 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100650590);
  __chkstk_darwin(v2);
  v62 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v4);
  v64 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v6 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - v10;
  v12 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  *(_QWORD *)&v23 = swift_beginAccess(v1+ OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v68, 0, 0).n128_u64[0];
  if (*v22)
    return _swiftEmptyArrayStorage;
  v60 = v21;
  v61 = v14;
  v58 = v11;
  v59 = v6;
  v57 = v8;
  v24 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  objc_msgSend(v65, "locationInView:", v24, v23);
  v25 = objc_msgSend(v24, "indexPathForItemAtPoint:");
  if (!v25)
  {
    v30 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v61, 1, 1, v15);
    goto LABEL_7;
  }
  v26 = v25;
  v27 = v1;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v28 = v16;
  v29 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v30 = (uint64_t)v61;
  v31 = v15;
  v29(v61, v18, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v15) == 1)
  {
LABEL_7:
    v34 = &qword_100646950;
    v35 = v30;
    goto LABEL_8;
  }
  v32 = v60;
  v29(v60, (char *)v30, v15);
  v33 = (uint64_t)v64;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v33, 1, v63) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v15);
    v34 = (uint64_t *)&unk_1006463C0;
    v35 = v33;
LABEL_8:
    sub_1000073A0(v35, v34);
    return _swiftEmptyArrayStorage;
  }
  v38 = (uint64_t)v58;
  sub_10001F580(v33, (uint64_t)v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  Strong = swift_unknownObjectWeakLoadStrong(v27 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate);
  if (Strong)
  {
    v40 = Strong;
    sub_100362C18(v38);
    v42 = v41;
    swift_unknownObjectRelease(v40);
    if ((v42 & 1) != 0)
    {
      v43 = (uint64_t)v57;
      sub_1000CDF24(v38, (uint64_t)v57);
      v44 = (objc_class *)type metadata accessor for TTRIRemindersBoardColumnDragItem(0);
      v45 = objc_allocWithZone(v44);
      sub_1000CDF24(v43, (uint64_t)v45 + OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardColumnDragItem_columnID);
      v67.receiver = v45;
      v67.super_class = v44;
      v46 = objc_msgSendSuper2(&v67, "init");
      sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v47 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v46);
      v48 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v47);
      v49 = v27 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_id;
      v50 = type metadata accessor for UUID(0);
      v51 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v62, v49, v50);
      v52 = type metadata accessor for DragItemUserInfo(0);
      sub_1000CDF24(v38, v51 + *(int *)(v52 + 20));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
      sub_10024AC0C(v51);
      sub_1000073A0(v51, (uint64_t *)&unk_100650590);
      aBlock[4] = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100172B3C;
      aBlock[3] = &unk_1005F8E68;
      v53 = _Block_copy(aBlock);
      objc_msgSend(v48, "setPreviewProvider:", v53, swift_release().n128_f64[0]);
      _Block_release(v53);
      v54 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v55 = swift_allocObject(v54, 40, 7);
      *(_OWORD *)(v55 + 16) = xmmword_100521140;
      *(_QWORD *)(v55 + 32) = v48;
      aBlock[0] = v55;
      specialized Array._endMutation()(v55);
      v36 = aBlock[0];

      sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v31);
      return (_QWORD *)v36;
    }
  }
  sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v15);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10024BBE4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  void *v38;
  Class isa;
  id v40;
  Class v41;
  id v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  __n128 v67;
  __n128 v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75[16];
  uint64_t v76;
  uint64_t v77;

  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v3);
  v71 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  __chkstk_darwin(v8);
  v72 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100650560);
  __chkstk_darwin(v10);
  v12 = (id *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10002A750(&qword_100650568);
  __chkstk_darwin(v13);
  v15 = (id *)((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for DragItemUserInfo(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a1;
  v20 = objc_msgSend(a1, "items", v17);
  v21 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  v77 = v22;
  v76 = v1;
  v23 = sub_10002A750(&qword_100650578);
  v24 = sub_10002A750(&qword_100650580);
  v25 = sub_10024C1D8();
  Sequence.firstMap<A>(_:)(v12, sub_10024DBBC, v75, v23, v24, v25);
  v26 = swift_bridgeObjectRelease(v77);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24, v26) == 1)
  {
    v27 = &qword_100650560;
    v28 = (uint64_t)v12;
    return sub_1000073A0(v28, v27);
  }
  v29 = (uint64_t)v12 + *(int *)(v24 + 48);
  v30 = (uint64_t)v15 + *(int *)(v13 + 48);
  *v15 = *v12;
  sub_10001F580(v29, v30, type metadata accessor for DragItemUserInfo);

  sub_10001F580((uint64_t)v15 + *(int *)(v13 + 48), (uint64_t)v19, type metadata accessor for DragItemUserInfo);
  v31 = v1;
  v32 = (uint64_t)&v19[*(int *)(v16 + 20)];
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v32);
  v34 = v73;
  v33 = v74;
  v35 = (uint64_t)v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v7, 1, v74) == 1)
  {
    sub_10001F544((uint64_t)v19, type metadata accessor for DragItemUserInfo);
    v27 = &qword_100646950;
    v28 = (uint64_t)v7;
    return sub_1000073A0(v28, v27);
  }
  v37 = v72;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v72, v7, v33);
  v38 = *(void **)(v31 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v40 = objc_msgSend(v38, "cellForItemAtIndexPath:", isa);

  if (!v40)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
    return sub_10001F544(v35, type metadata accessor for DragItemUserInfo);
  }
  v69 = v35;
  v41 = IndexPath._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v38, "cellForItemAtIndexPath:", v41);

  if (!v42)
  {
    v42 = v40;
LABEL_19:

    (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v72, v33, v68);
    return sub_10001F544(v69, type metadata accessor for DragItemUserInfo);
  }
  ObjectType = swift_getObjectType(v42, v43);
  v45 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRemindersBoardColumnDraggable);
  if (v45)
    v46 = v45;
  else
    v46 = 0;
  if (v45)
    v47 = (uint64_t)v42;
  else
    v47 = 0;
  if (!v47)
  {

    goto LABEL_19;
  }
  v48 = v71;
  sub_1000CDF24(v32, v71);
  v49 = v42;
  v50 = objc_msgSend(v40, "bounds");
  v55 = CGRect.center.getter(v50, v51, v52, v53, v54);
  v57 = v56;
  objc_msgSend(v70, "locationInView:", v40);
  v59 = v58;
  v61 = v60;
  v62 = type metadata accessor for TTRIRemindersBoardColumnReorderingContext(0);
  swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  v63 = sub_100461C68(v48, v47, v46, v55, v57, v59, v61);
  v64 = *(void **)(v63 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo + 64);
  *(_QWORD *)(v63 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo + 64) = v38;
  v65 = v38;

  v66 = swift_retain();
  sub_100249B00(v66);
  sub_100249F34(1u);

  v67 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v72, v33, v67);
  return sub_10001F544(v69, type metadata accessor for DragItemUserInfo);
}

id sub_10024C114(void *a1)
{
  uint64_t v1;
  id result;
  uint64_t v4;

  result = (id)sub_100249F34(3u);
  if ((result & 1) != 0)
  {
    swift_getObjectType(a1, v4);
    if (sub_10024B3EC(a1, v1))
    {
      sub_10024B44C(a1, v1);
    }
    else if (sub_100249F34(4u))
    {
      sub_10024A764(a1);
    }
    result = *(id *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_debugOverlayView);
    if (result)
      return objc_msgSend(result, "removeFromSuperview");
  }
  return result;
}

double sub_10024C1B4(double a1, double a2, double a3)
{
  return a1 + a3;
}

id sub_10024C1C0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100249BF0(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_10024C1D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100650588;
  if (!qword_100650588)
  {
    v1 = sub_10002CA5C(&qword_100650578);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100650588);
  }
  return result;
}

uint64_t type metadata accessor for DragItemUserInfo(uint64_t a1)
{
  return sub_100007328(a1, qword_100650610, (uint64_t)&nominal type descriptor for DragItemUserInfo);
}

uint64_t sub_10024C238()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *sub_10024C25C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_10024C280()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10024C2A4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10024C2D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1006505A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10024AE7C(a1, v4, v5, v6);
}

uint64_t *sub_10024C33C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void **v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(void **, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  id v56;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (void **)((char *)a1 + v8);
    v10 = (void **)((char *)a2 + v8);
    v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v20 = *v10;
        *v9 = *v10;
        v21 = v20;
        v22 = v9;
        v23 = v11;
        v24 = 2;
LABEL_35:
        swift_storeEnumTagMultiPayload(v22, v23, v24);
        return a1;
      case 1:
        v25 = *v10;
        *v9 = *v10;
        v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v27 = (void **)((char *)v9 + v26);
        v28 = (void **)((char *)v10 + v26);
        v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v30 + 48);
        v32 = v25;
        if (v31(v28, 1, v29))
        {
          v33 = sub_10002A750(&qword_100644980);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v28, v29))
          {
            case 1u:
              v34 = *v28;
              *v27 = *v28;
              v35 = v34;
              v36 = v27;
              v37 = v29;
              v38 = 1;
              goto LABEL_32;
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v27, v28, v48);
              v36 = v27;
              v37 = v29;
              v38 = 2;
              goto LABEL_32;
            case 3u:
              v49 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v27, v28, v49);
              v36 = v27;
              v37 = v29;
              v38 = 3;
              goto LABEL_32;
            case 4u:
              v50 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v27, v28, v50);
              v36 = v27;
              v37 = v29;
              v38 = 4;
              goto LABEL_32;
            case 5u:
              v51 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v27, v28, v51);
              v36 = v27;
              v37 = v29;
              v38 = 5;
              goto LABEL_32;
            case 6u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v27, v28, v52);
              v36 = v27;
              v37 = v29;
              v38 = 6;
              goto LABEL_32;
            case 8u:
              v53 = *v28;
              *v27 = *v28;
              v54 = v53;
              v36 = v27;
              v37 = v29;
              v38 = 8;
              goto LABEL_32;
            case 9u:
              v55 = *v28;
              *v27 = *v28;
              v56 = v55;
              v36 = v27;
              v37 = v29;
              v38 = 9;
LABEL_32:
              swift_storeEnumTagMultiPayload(v36, v37, v38);
              break;
            default:
              memcpy(v27, v28, *(_QWORD *)(v30 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v22 = v9;
        v23 = v11;
        v24 = 1;
        goto LABEL_35;
      case 0:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v10, v13))
        {
          case 1u:
            v14 = *v10;
            *v9 = *v10;
            v15 = v14;
            v16 = v9;
            v17 = v13;
            v18 = 1;
            goto LABEL_22;
          case 2u:
            v39 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v9, v10, v39);
            v16 = v9;
            v17 = v13;
            v18 = 2;
            goto LABEL_22;
          case 3u:
            v40 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v9, v10, v40);
            v16 = v9;
            v17 = v13;
            v18 = 3;
            goto LABEL_22;
          case 4u:
            v41 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v9, v10, v41);
            v16 = v9;
            v17 = v13;
            v18 = 4;
            goto LABEL_22;
          case 5u:
            v42 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v9, v10, v42);
            v16 = v9;
            v17 = v13;
            v18 = 5;
            goto LABEL_22;
          case 6u:
            v43 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v9, v10, v43);
            v16 = v9;
            v17 = v13;
            v18 = 6;
            goto LABEL_22;
          case 8u:
            v44 = *v10;
            *v9 = *v10;
            v45 = v44;
            v16 = v9;
            v17 = v13;
            v18 = 8;
            goto LABEL_22;
          case 9u:
            v46 = *v10;
            *v9 = *v10;
            v47 = v46;
            v16 = v9;
            v17 = v13;
            v18 = 9;
LABEL_22:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v22 = v9;
        v23 = v11;
        v24 = 0;
        goto LABEL_35;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

void sub_10024C800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (id *)(a1 + *(int *)(a2 + 20));
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_9:

      break;
    case 1:

      v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_9;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_8:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v5, v8))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_9;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_8;
        default:
          return;
      }
  }
}

uint64_t sub_10024C948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(void **, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void **)(a1 + v7);
  v9 = (void **)(a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v18 = *v9;
      *v8 = *v9;
      v19 = v18;
      v20 = v8;
      v21 = v10;
      v22 = 2;
LABEL_33:
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      return a1;
    case 1:
      v23 = *v9;
      *v8 = *v9;
      v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v25 = (void **)((char *)v8 + v24);
      v26 = (void **)((char *)v9 + v24);
      v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
      v30 = v23;
      if (v29(v26, 1, v27))
      {
        v31 = sub_10002A750(&qword_100644980);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v26, v27))
        {
          case 1u:
            v32 = *v26;
            *v25 = *v26;
            v33 = v32;
            v34 = v25;
            v35 = v27;
            v36 = 1;
            goto LABEL_30;
          case 2u:
            v46 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v25, v26, v46);
            v34 = v25;
            v35 = v27;
            v36 = 2;
            goto LABEL_30;
          case 3u:
            v47 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v25, v26, v47);
            v34 = v25;
            v35 = v27;
            v36 = 3;
            goto LABEL_30;
          case 4u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v25, v26, v48);
            v34 = v25;
            v35 = v27;
            v36 = 4;
            goto LABEL_30;
          case 5u:
            v49 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v25, v26, v49);
            v34 = v25;
            v35 = v27;
            v36 = 5;
            goto LABEL_30;
          case 6u:
            v50 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v25, v26, v50);
            v34 = v25;
            v35 = v27;
            v36 = 6;
            goto LABEL_30;
          case 8u:
            v51 = *v26;
            *v25 = *v26;
            v52 = v51;
            v34 = v25;
            v35 = v27;
            v36 = 8;
            goto LABEL_30;
          case 9u:
            v53 = *v26;
            *v25 = *v26;
            v54 = v53;
            v34 = v25;
            v35 = v27;
            v36 = 9;
LABEL_30:
            swift_storeEnumTagMultiPayload(v34, v35, v36);
            break;
          default:
            memcpy(v25, v26, *(_QWORD *)(v28 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v20 = v8;
      v21 = v10;
      v22 = 1;
      goto LABEL_33;
    case 0:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 1u:
          v13 = *v9;
          *v8 = *v9;
          v14 = v13;
          v15 = v8;
          v16 = v12;
          v17 = 1;
          goto LABEL_20;
        case 2u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v8, v9, v37);
          v15 = v8;
          v16 = v12;
          v17 = 2;
          goto LABEL_20;
        case 3u:
          v38 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v8, v9, v38);
          v15 = v8;
          v16 = v12;
          v17 = 3;
          goto LABEL_20;
        case 4u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v8, v9, v39);
          v15 = v8;
          v16 = v12;
          v17 = 4;
          goto LABEL_20;
        case 5u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v8, v9, v40);
          v15 = v8;
          v16 = v12;
          v17 = 5;
          goto LABEL_20;
        case 6u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
          v15 = v8;
          v16 = v12;
          v17 = 6;
          goto LABEL_20;
        case 8u:
          v42 = *v9;
          *v8 = *v9;
          v43 = v42;
          v15 = v8;
          v16 = v12;
          v17 = 8;
          goto LABEL_20;
        case 9u:
          v44 = *v9;
          *v8 = *v9;
          v45 = v44;
          v15 = v8;
          v16 = v12;
          v17 = 9;
LABEL_20:
          swift_storeEnumTagMultiPayload(v15, v16, v17);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v20 = v8;
      v21 = v10;
      v22 = 0;
      goto LABEL_33;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_10024CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void *v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(void **, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void **)(a1 + v7);
    v9 = (void **)(a2 + v7);
    sub_10001F544(a1 + v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v18 = *v9;
        *v8 = *v9;
        v19 = v18;
        v20 = v8;
        v21 = v10;
        v22 = 2;
LABEL_34:
        swift_storeEnumTagMultiPayload(v20, v21, v22);
        return a1;
      case 1:
        v23 = *v9;
        *v8 = *v9;
        v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v25 = (void **)((char *)v8 + v24);
        v26 = (void **)((char *)v9 + v24);
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v28 = *(_QWORD *)(v27 - 8);
        v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
        v30 = v23;
        if (v29(v26, 1, v27))
        {
          v31 = sub_10002A750(&qword_100644980);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v26, v27))
          {
            case 1u:
              v32 = *v26;
              *v25 = *v26;
              v33 = v32;
              v34 = v25;
              v35 = v27;
              v36 = 1;
              goto LABEL_31;
            case 2u:
              v46 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v25, v26, v46);
              v34 = v25;
              v35 = v27;
              v36 = 2;
              goto LABEL_31;
            case 3u:
              v47 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v25, v26, v47);
              v34 = v25;
              v35 = v27;
              v36 = 3;
              goto LABEL_31;
            case 4u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v25, v26, v48);
              v34 = v25;
              v35 = v27;
              v36 = 4;
              goto LABEL_31;
            case 5u:
              v49 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v25, v26, v49);
              v34 = v25;
              v35 = v27;
              v36 = 5;
              goto LABEL_31;
            case 6u:
              v50 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v25, v26, v50);
              v34 = v25;
              v35 = v27;
              v36 = 6;
              goto LABEL_31;
            case 8u:
              v51 = *v26;
              *v25 = *v26;
              v52 = v51;
              v34 = v25;
              v35 = v27;
              v36 = 8;
              goto LABEL_31;
            case 9u:
              v53 = *v26;
              *v25 = *v26;
              v54 = v53;
              v34 = v25;
              v35 = v27;
              v36 = 9;
LABEL_31:
              swift_storeEnumTagMultiPayload(v34, v35, v36);
              break;
            default:
              memcpy(v25, v26, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v20 = v8;
        v21 = v10;
        v22 = 1;
        goto LABEL_34;
      case 0:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v9, v12))
        {
          case 1u:
            v13 = *v9;
            *v8 = *v9;
            v14 = v13;
            v15 = v8;
            v16 = v12;
            v17 = 1;
            goto LABEL_21;
          case 2u:
            v37 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v8, v9, v37);
            v15 = v8;
            v16 = v12;
            v17 = 2;
            goto LABEL_21;
          case 3u:
            v38 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v8, v9, v38);
            v15 = v8;
            v16 = v12;
            v17 = 3;
            goto LABEL_21;
          case 4u:
            v39 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v8, v9, v39);
            v15 = v8;
            v16 = v12;
            v17 = 4;
            goto LABEL_21;
          case 5u:
            v40 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v8, v9, v40);
            v15 = v8;
            v16 = v12;
            v17 = 5;
            goto LABEL_21;
          case 6u:
            v41 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v8, v9, v41);
            v15 = v8;
            v16 = v12;
            v17 = 6;
            goto LABEL_21;
          case 8u:
            v42 = *v9;
            *v8 = *v9;
            v43 = v42;
            v15 = v8;
            v16 = v12;
            v17 = 8;
            goto LABEL_21;
          case 9u:
            v44 = *v9;
            *v8 = *v9;
            v45 = v44;
            v15 = v8;
            v16 = v12;
            v17 = 9;
LABEL_21:
            swift_storeEnumTagMultiPayload(v15, v16, v17);
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v20 = v8;
        v21 = v10;
        v22 = 0;
        goto LABEL_34;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10024D290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    *v8 = *v9;
    v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_10002A750(&qword_100644980);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v19, v20))
      {
        case 2u:
          v23 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
          v24 = v18;
          v25 = v20;
          v26 = 2;
          goto LABEL_22;
        case 3u:
          v34 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v18, v19, v34);
          v24 = v18;
          v25 = v20;
          v26 = 3;
          goto LABEL_22;
        case 4u:
          v35 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
          v24 = v18;
          v25 = v20;
          v26 = 4;
          goto LABEL_22;
        case 5u:
          v36 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v18, v19, v36);
          v24 = v18;
          v25 = v20;
          v26 = 5;
          goto LABEL_22;
        case 6u:
          v37 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
          v24 = v18;
          v25 = v20;
          v26 = 6;
LABEL_22:
          swift_storeEnumTagMultiPayload(v24, v25, v26);
          break;
        default:
          memcpy(v18, v19, *(_QWORD *)(v21 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v31 = v8;
    v32 = v10;
    v33 = 1;
    goto LABEL_25;
  }
  if (!EnumCaseMultiPayload)
  {
    v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v9, v12))
    {
      case 2u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        v14 = v8;
        v15 = v12;
        v16 = 2;
        goto LABEL_15;
      case 3u:
        v27 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
        v14 = v8;
        v15 = v12;
        v16 = 3;
        goto LABEL_15;
      case 4u:
        v28 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v8, v9, v28);
        v14 = v8;
        v15 = v12;
        v16 = 4;
        goto LABEL_15;
      case 5u:
        v29 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
        v14 = v8;
        v15 = v12;
        v16 = 5;
        goto LABEL_15;
      case 6u:
        v30 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
        v14 = v8;
        v15 = v12;
        v16 = 6;
LABEL_15:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v31 = v8;
    v32 = v10;
    v33 = 0;
LABEL_25:
    swift_storeEnumTagMultiPayload(v31, v32, v33);
    return a1;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_10024D650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_10001F544(a1 + v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      *v8 = *v9;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)v8 + v17;
      v19 = (char *)v9 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v23 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
            v24 = v18;
            v25 = v20;
            v26 = 2;
            goto LABEL_23;
          case 3u:
            v34 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v18, v19, v34);
            v24 = v18;
            v25 = v20;
            v26 = 3;
            goto LABEL_23;
          case 4u:
            v35 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v18, v19, v35);
            v24 = v18;
            v25 = v20;
            v26 = 4;
            goto LABEL_23;
          case 5u:
            v36 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v18, v19, v36);
            v24 = v18;
            v25 = v20;
            v26 = 5;
            goto LABEL_23;
          case 6u:
            v37 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v18, v19, v37);
            v24 = v18;
            v25 = v20;
            v26 = 6;
LABEL_23:
            swift_storeEnumTagMultiPayload(v24, v25, v26);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v31 = v8;
      v32 = v10;
      v33 = 1;
      goto LABEL_26;
    }
    if (!EnumCaseMultiPayload)
    {
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v9, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
          v14 = v8;
          v15 = v12;
          v16 = 2;
          goto LABEL_16;
        case 3u:
          v27 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
          v14 = v8;
          v15 = v12;
          v16 = 3;
          goto LABEL_16;
        case 4u:
          v28 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v8, v9, v28);
          v14 = v8;
          v15 = v12;
          v16 = 4;
          goto LABEL_16;
        case 5u:
          v29 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
          v14 = v8;
          v15 = v12;
          v16 = 5;
          goto LABEL_16;
        case 6u:
          v30 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v8, v9, v30);
          v14 = v8;
          v15 = v12;
          v16 = 6;
LABEL_16:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v31 = v8;
      v32 = v10;
      v33 = 0;
LABEL_26:
      swift_storeEnumTagMultiPayload(v31, v32, v33);
      return a1;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10024DA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024DA34);
}

uint64_t sub_10024DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_10024DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024DAB4);
}

uint64_t sub_10024DAB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_10024DB30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

id sub_10024DBBC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10024C1C0(a1, a2);
}

void sub_10024DBF4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  objc_class *v25;
  unsigned int v26;
  id v27;
  char v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  _BYTE *v38;
  char v39;
  _BYTE v40[12];
  int v41;
  void (*v42)(_BYTE *, _QWORD, uint64_t, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;
  objc_super v47;
  objc_super v48;
  objc_super v49;
  char v50[32];

  v41 = a2;
  v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10002A750(&qword_100650728);
  __chkstk_darwin(v8);
  v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10002A750((uint64_t *)&unk_100646680);
  v12 = __chkstk_darwin(v11);
  v43 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v12);
  v16 = &v40[-v15];
  __chkstk_darwin(v14);
  v18 = &v40[-v17];
  v44 = a1;
  sub_10002A790(a1, (uint64_t)&v40[-v17]);
  v42 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v42(v18, 0, 1, v4);
  v19 = v2 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList, v50, 0, 0);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000735C((uint64_t)v18, (uint64_t)v10, (uint64_t *)&unk_100646680);
  sub_10000735C(v19, v20, (uint64_t *)&unk_100646680);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100646680);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100646680);
      return;
    }
  }
  else
  {
    sub_10000735C((uint64_t)v10, (uint64_t)v16, (uint64_t *)&unk_100646680);
    if (v21(v20, 1, v4) != 1)
    {
      sub_10002A810(v20, (uint64_t)v7);
      v39 = static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)(v16, v7);
      sub_10002A7D4((uint64_t)v7);
      sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100646680);
      sub_10002A7D4((uint64_t)v16);
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100646680);
      v22 = v44;
      if ((v39 & 1) != 0)
        return;
      goto LABEL_7;
    }
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100646680);
    sub_10002A7D4((uint64_t)v16);
  }
  sub_1000073A0((uint64_t)v10, &qword_100650728);
  v22 = v44;
LABEL_7:
  v23 = sub_10002A8F8();
  __chkstk_darwin(v23);
  *(_QWORD *)&v40[-16] = v22;
  v24 = sub_100258BB0((uint64_t (*)(id *))sub_1002508D4, (uint64_t)&v40[-32], (uint64_t)v23);
  swift_bridgeObjectRelease(v23);
  if (v24)
  {
    sub_100005508(v41 & 1);
    v25 = (objc_class *)type metadata accessor for TTRIPinnedListControl(0);
    v49.receiver = v24;
    v49.super_class = v25;
    v26 = objc_msgSendSuper2(&v49, "isSelected");
    v48.receiver = v24;
    v48.super_class = v25;
    objc_msgSendSuper2(&v48, "setSelected:", 1);
    v47.receiver = v24;
    v47.super_class = v25;
    v27 = objc_msgSendSuper2(&v47, "isSelected");
    if (v26 != (_DWORD)v27)
    {
      TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v27);
      v28 = TTRUserDefaults.animationSlowModeEnabled.getter();
      v29 = 0.15;
      if (*((_BYTE *)v24 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor))
        v29 = 0.25;
      v30 = 1.0;
      if ((v28 & 1) != 0)
        v30 = 3.0;
      v31 = v30 * v29;
      v32 = swift_allocObject(&unk_1005F9198, 24, 7);
      *(_QWORD *)(v32 + 16) = v24;
      v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      aBlock[4] = sub_100250930;
      v46 = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100006378;
      aBlock[3] = &unk_1005F91B0;
      v34 = _Block_copy(aBlock);
      v35 = v46;
      v36 = v24;
      swift_release(v35);
      v37 = objc_msgSend(v33, "initWithDuration:controlPoint1:controlPoint2:animations:", v34, v31, 0.33, 0.0, 0.67, 1.0);
      _Block_release(v34);
      objc_msgSend(v37, "startAnimation");

    }
    v38 = v43;
    sub_10002A790(v22, (uint64_t)v43);
    v42(v38, 0, 1, v4);
    swift_beginAccess(v19, aBlock, 33, 0);
    sub_100041F2C((uint64_t)v38, v19, (uint64_t *)&unk_100646680);
    swift_endAccess(aBlock);

  }
}

uint64_t sub_10024E0DC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char **v5;
  id v6;
  id v7;
  objc_class *v8;
  unsigned int v9;
  id v10;
  char v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char **v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;
  objc_super v26;
  objc_super v27;
  objc_super v28;
  objc_super v29;

  result = (uint64_t)sub_10002A8F8();
  v1 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v2 = result;
    if (result)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v1);
  }
  v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = v1 & 0xC000000000000001;
    v5 = &selRef_supportsAttachments;
    v23 = v1;
    do
    {
      if (v4)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      else
        v6 = *(id *)(v1 + 8 * v3 + 32);
      v7 = v6;
      v8 = (objc_class *)type metadata accessor for TTRIPinnedListControl(0);
      v29.receiver = v7;
      v29.super_class = v8;
      if ((objc_msgSendSuper2(&v29, v5[259]) & 1) != 0)
      {
        v28.receiver = v7;
        v28.super_class = v8;
        v9 = objc_msgSendSuper2(&v28, v5[259]);
        v27.receiver = v7;
        v27.super_class = v8;
        objc_msgSendSuper2(&v27, "setSelected:", 0);
        v26.receiver = v7;
        v26.super_class = v8;
        v10 = objc_msgSendSuper2(&v26, v5[259]);
        if (v9 != (_DWORD)v10)
        {
          TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v10);
          v11 = TTRUserDefaults.animationSlowModeEnabled.getter();
          v12 = 0.15;
          if (*((_BYTE *)v7 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor))
            v12 = 0.25;
          if ((v11 & 1) != 0)
            v13 = 3.0;
          else
            v13 = 1.0;
          v14 = v13 * v12;
          v15 = swift_allocObject(&unk_1005F9148, 24, 7);
          *(_QWORD *)(v15 + 16) = v7;
          v16 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          aBlock[4] = sub_100250930;
          v25 = v15;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100006378;
          aBlock[3] = &unk_1005F9160;
          v17 = _Block_copy(aBlock);
          v18 = v25;
          v19 = v2;
          v20 = v5;
          v21 = v4;
          v22 = v7;
          swift_release(v18);
          v7 = objc_msgSend(v16, "initWithDuration:controlPoint1:controlPoint2:animations:", v17, v14, 0.33, 0.0, 0.67, 1.0);
          _Block_release(v17);
          objc_msgSend(v7, "startAnimation");

          v4 = v21;
          v5 = v20;
          v2 = v19;
          v1 = v23;
        }
      }
      ++v3;

    }
    while (v2 != v3);
    return swift_bridgeObjectRelease(v1);
  }
  return result;
}

uint64_t sub_10024E3AC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39[24];

  v38 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_10002A750(&qword_100650710);
  __chkstk_darwin(v37);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100650718);
  v13 = __chkstk_darwin(v12);
  v36 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v20 = *a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  v21 = swift_beginAccess(v20, v39, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(v20, 1, v8, v21))
  {
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v23 = v22(v19, 1, 1, v3);
  }
  else
  {
    v24 = sub_10002A790(v20, (uint64_t)v11);
    TTRAccountsListsViewModel.PinnedList.id.getter(v24);
    sub_10002A7D4((uint64_t)v11);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v23 = v22(v19, 0, 1, v3);
  }
  TTRAccountsListsViewModel.PinnedList.id.getter(v23);
  v22(v17, 0, 1, v3);
  v25 = (uint64_t)&v7[*(int *)(v37 + 48)];
  v26 = &qword_100650718;
  sub_10000735C((uint64_t)v19, (uint64_t)v7, &qword_100650718);
  sub_10000735C((uint64_t)v17, v25, &qword_100650718);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v27((uint64_t)v7, 1, v3) == 1)
  {
    sub_1000073A0((uint64_t)v17, &qword_100650718);
    sub_1000073A0((uint64_t)v19, &qword_100650718);
    if (v27(v25, 1, v3) == 1)
    {
      v28 = -1;
    }
    else
    {
      v26 = &qword_100650710;
      v28 = 0;
    }
  }
  else
  {
    v29 = (uint64_t)v36;
    sub_10000735C((uint64_t)v7, (uint64_t)v36, &qword_100650718);
    if (v27(v25, 1, v3) == 1)
    {
      sub_1000073A0((uint64_t)v17, &qword_100650718);
      sub_1000073A0((uint64_t)v19, &qword_100650718);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v29, v3);
      v28 = 0;
      v26 = &qword_100650710;
    }
    else
    {
      v30 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v35, v25, v3);
      v31 = sub_10024FBEC();
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v30, v3, v31);
      v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v30, v3);
      v26 = &qword_100650718;
      sub_1000073A0((uint64_t)v17, &qword_100650718);
      sub_1000073A0((uint64_t)v19, &qword_100650718);
      v32(v36, v3);
    }
  }
  sub_1000073A0((uint64_t)v7, v26);
  return v28 & 1;
}

void sub_10024E750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  unsigned int v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  id v41;
  void *v42;
  _BYTE *v43;
  void *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  char v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char v94[24];
  _QWORD aBlock[6];
  char v96[32];

  v84 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v80 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v79 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v7);
  v85 = (uint64_t)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v92 = (uint64_t)&v79 - v10;
  __chkstk_darwin(v11);
  v86 = (char *)&v79 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v79 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v79 - v17;
  v19 = sub_10002A750(&qword_100650710);
  __chkstk_darwin(v19);
  v87 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - v22;
  v24 = v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID, v96, 0, 0);
  v82 = v19;
  v25 = (uint64_t)&v23[*(int *)(v19 + 48)];
  sub_10000735C(v24, (uint64_t)v23, &qword_100650718);
  v90 = a1;
  sub_10000735C(a1, v25, &qword_100650718);
  v88 = v5;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v27 = v26(v23, 1, v4);
  v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
  if (v27 == 1)
  {
    v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
    if (v26((char *)v25, 1, v4) == 1)
    {
      sub_1000073A0((uint64_t)v23, &qword_100650718);
      return;
    }
  }
  else
  {
    sub_10000735C((uint64_t)v23, (uint64_t)v18, &qword_100650718);
    if (v26((char *)v25, 1, v4) != 1)
    {
      v74 = v88;
      v75 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v79, v25, v4);
      v76 = sub_10024FBEC();
      v77 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v75, v4, v76);
      v78 = *(void (**)(char *, uint64_t))(v74 + 8);
      v78(v75, v4);
      v78(v18, v4);
      sub_1000073A0((uint64_t)v23, &qword_100650718);
      v29 = v87;
      v28 = v91;
      if ((v77 & 1) != 0)
        return;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v18, v4);
    v28 = v91;
  }
  sub_1000073A0((uint64_t)v23, &qword_100650710);
  v29 = v87;
LABEL_7:
  sub_10000735C(v90, (uint64_t)v15, &qword_100650718);
  swift_beginAccess(v24, aBlock, 33, 0);
  sub_100041F2C((uint64_t)v15, v24, &qword_100650718);
  swift_endAccess(aBlock);
  v30 = (uint64_t)sub_10002A8F8();
  v31 = v30;
  if ((unint64_t)v30 >> 62)
  {
    if (v30 >= 0)
      v30 &= 0xFFFFFFFFFFFFFF8uLL;
    v32 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  else
  {
    v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v33 = (uint64_t)v86;
  if (v32)
  {
    if (v32 >= 1)
    {
      v93 = v4;
      v34 = 0;
      v35 = v31 & 0xC000000000000001;
      v89 = v31;
      v81 = v31 & 0xC000000000000001;
      while (1)
      {
        v46 = v32;
        v47 = v35
            ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v31)
            : *(id *)(v31 + 8 * v34 + 32);
        v45 = v47;
        v48 = v90;
        v49 = v28(v90, 1, v93);
        sub_10000735C(v48, v33, &qword_100650718);
        if (v49 == 1)
          break;
        v52 = &v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
        v53 = swift_beginAccess(&v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v94, 0, 0);
        v54 = 1;
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v83 + 48))(v52, 1, v84, v53))
        {
          v55 = (uint64_t)v52;
          v56 = v80;
          v57 = sub_10002A790(v55, v80);
          TTRAccountsListsViewModel.PinnedList.id.getter(v57);
          sub_10002A7D4(v56);
          v54 = 0;
        }
        v58 = v92;
        v59 = v93;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v92, v54, 1, v93);
        v60 = v29 + *(int *)(v82 + 48);
        sub_10000735C(v58, v29, &qword_100650718);
        sub_10000735C(v33, v60, &qword_100650718);
        v28 = v91;
        if (v91(v29, 1, v59) == 1)
        {
          sub_1000073A0(v92, &qword_100650718);
          sub_1000073A0(v33, &qword_100650718);
          v61 = v28(v60, 1, v59);
          v35 = v81;
          if (v61 == 1)
          {
            v62 = sub_1000073A0(v29, &qword_100650718);
            v63 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
            v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 1;
            if ((v63 & 1) == 0)
              goto LABEL_12;
            goto LABEL_18;
          }
LABEL_32:
          v50 = v29;
          v51 = &qword_100650710;
LABEL_33:
          v62 = sub_1000073A0(v50, v51);
          v64 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
          v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 0;
          if ((v64 & 1) != 0)
            goto LABEL_12;
          goto LABEL_18;
        }
        sub_10000735C(v29, v85, &qword_100650718);
        if (v28(v60, 1, v59) == 1)
        {
          sub_1000073A0(v92, &qword_100650718);
          sub_1000073A0(v33, &qword_100650718);
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v85, v59);
          v35 = v81;
          goto LABEL_32;
        }
        v65 = v88;
        v66 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v79, v60, v59);
        v67 = sub_10024FBEC();
        v68 = v85;
        v69 = dispatch thunk of static Equatable.== infix(_:_:)(v85, v66, v59, v67);
        v70 = *(void (**)(char *, uint64_t))(v65 + 8);
        v71 = v66;
        v28 = v91;
        v70(v71, v59);
        sub_1000073A0(v92, &qword_100650718);
        sub_1000073A0(v33, &qword_100650718);
        v70((char *)v68, v59);
        v29 = v87;
        v62 = sub_1000073A0(v87, &qword_100650718);
        v72 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
        v73 = v69 & 1;
        v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = v69 & 1;
        v35 = v81;
        if (v73 != v72)
        {
LABEL_12:
          TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v62);
          v36 = TTRUserDefaults.animationSlowModeEnabled.getter();
          v37 = 0.15;
          if (v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor])
            v37 = 0.25;
          if ((v36 & 1) != 0)
            v38 = 3.0;
          else
            v38 = 1.0;
          v39 = v38 * v37;
          v40 = swift_allocObject(&unk_1005F8FE0, 24, 7);
          *(_QWORD *)(v40 + 16) = v45;
          v41 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          aBlock[4] = sub_100250930;
          aBlock[5] = v40;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100006378;
          aBlock[3] = &unk_1005F8FF8;
          v42 = _Block_copy(aBlock);
          v43 = v45;
          v33 = (uint64_t)v86;
          swift_release();
          v44 = v41;
          v28 = v91;
          v45 = objc_msgSend(v44, "initWithDuration:controlPoint1:controlPoint2:animations:", v42, v39, 0.33, 0.0, 0.67, 1.0);
          _Block_release(v42);
          objc_msgSend(v45, "startAnimation");

          v29 = v87;
        }
LABEL_18:
        v31 = v89;
        ++v34;

        v32 = v46;
        if (v46 == v34)
          goto LABEL_37;
      }
      v50 = v33;
      v51 = &qword_100650718;
      goto LABEL_33;
    }
    __break(1u);
  }
  else
  {
LABEL_37:
    swift_bridgeObjectRelease(v31);
  }
}

void sub_10024F050(char *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  objc_class *v17;
  unsigned int v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  char isEscapingClosureAtFileLocation;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  objc_super v40;
  objc_super v41;
  objc_super v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  void *v47;
  uint64_t v48;
  char v49[32];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100646680);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v38 - v10;
  v12 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&a1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  swift_beginAccess(&a1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v49, 0, 0);
  sub_10000735C(v16, (uint64_t)v11, (uint64_t *)&unk_100646680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100646680);
    return;
  }
  v39 = v9;
  sub_10002A810((uint64_t)v11, (uint64_t)v15);
  sub_100005508(a2 & 1);
  if ((a2 & 1) != 0)
  {
    v17 = (objc_class *)type metadata accessor for TTRIPinnedListControl(0);
    v42.receiver = a1;
    v42.super_class = v17;
    v18 = objc_msgSendSuper2(&v42, "isSelected");
    v41.receiver = a1;
    v41.super_class = v17;
    objc_msgSendSuper2(&v41, "setSelected:", 1);
    v40.receiver = a1;
    v40.super_class = v17;
    v19 = objc_msgSendSuper2(&v40, "isSelected");
    v20 = 0;
    v21 = 0;
    if (v18 != (_DWORD)v19)
    {
      TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v19);
      v22 = TTRUserDefaults.animationSlowModeEnabled.getter();
      v23 = 0.15;
      if (a1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor])
        v23 = 0.25;
      v24 = 1.0;
      if ((v22 & 1) != 0)
        v24 = 3.0;
      v25 = v24 * v23;
      v26 = swift_allocObject(&unk_1005F8F40, 24, 7);
      *(_QWORD *)(v26 + 16) = a1;
      v27 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      v47 = sub_1002508B4;
      v48 = v26;
      aBlock = _NSConcreteStackBlock;
      v44 = 1107296256;
      v45 = sub_100006378;
      v46 = &unk_1005F8F58;
      v28 = _Block_copy(&aBlock);
      v29 = a1;
      swift_release();
      v30 = objc_msgSend(v27, "initWithDuration:controlPoint1:controlPoint2:animations:", v28, v25, 0.33, 0.0, 0.67, 1.0);
      _Block_release(v28);
      objc_msgSend(v30, "startAnimation");

      v20 = 0;
      v21 = 0;
    }
    goto LABEL_12;
  }
  v38 = v3;
  v31 = (void *)objc_opt_self(UIView);
  v21 = swift_allocObject(&unk_1005F8EC8, 24, 7);
  *(_QWORD *)(v21 + 16) = a1;
  v32 = swift_allocObject(&unk_1005F8EF0, 32, 7);
  v20 = sub_10025089C;
  *(_QWORD *)(v32 + 16) = sub_10025089C;
  *(_QWORD *)(v32 + 24) = v21;
  v47 = sub_10001B278;
  v48 = v32;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_10001B258;
  v46 = &unk_1005F8F08;
  v33 = _Block_copy(&aBlock);
  v34 = a1;
  swift_retain();
  objc_msgSend(v31, "performWithoutAnimation:", v33, swift_release().n128_f64[0]);
  _Block_release(v33);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v32, "", 122, 211, 44, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v3 = v38;
LABEL_12:
    v36 = (uint64_t)v39;
    sub_10002A790((uint64_t)v15, (uint64_t)v39);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v36, 0, 1, v12);
    v37 = v3 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
    swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList, &aBlock, 33, 0);
    sub_100041F2C(v36, v37, (uint64_t *)&unk_100646680);
    swift_endAccess(&aBlock);
    sub_10002A7D4((uint64_t)v15);
    sub_1000381B8((uint64_t)v20, v21);
    return;
  }
  __break(1u);
}

void sub_10024F4B4(void *a1, uint64_t a2)
{
  objc_class *ObjectType;
  unsigned int v4;
  id v5;
  char v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[6];
  objc_super v16;
  objc_super v17;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v18.receiver = a1;
  v18.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v18, "isSelected");
  v17.receiver = a1;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "setSelected:", 1);
  v16.receiver = a1;
  v16.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v16, "isSelected");
  if (v4 != (_DWORD)v5)
  {
    TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v5);
    v6 = TTRUserDefaults.animationSlowModeEnabled.getter();
    v7 = 0.15;
    if (*((_BYTE *)a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor))
      v7 = 0.25;
    v8 = 1.0;
    if ((v6 & 1) != 0)
      v8 = 3.0;
    v9 = v8 * v7;
    v10 = swift_allocObject(&unk_1005F8F90, 24, 7);
    *(_QWORD *)(v10 + 16) = a1;
    v11 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v15[4] = sub_100250930;
    v15[5] = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_100006378;
    v15[3] = &unk_1005F8FA8;
    v12 = _Block_copy(v15);
    v13 = a1;
    swift_release();
    v14 = objc_msgSend(v11, "initWithDuration:controlPoint1:controlPoint2:animations:", v12, v9, 0.33, 0.0, 0.67, 1.0);
    _Block_release(v12);
    objc_msgSend(v14, "startAnimation");

  }
}

uint64_t sub_10024F74C(char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  objc_super v21;

  v5 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (objc_class *)type metadata accessor for TTRIPinnedListControl(0);
  v21.receiver = a1;
  v21.super_class = v12;
  result = (uint64_t)objc_msgSendSuper2(&v21, "isSelected");
  if ((result & 1) == 0)
  {
    v14 = (uint64_t)&a1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
    swift_beginAccess(&a1[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v20, 0, 0);
    sub_10000735C(v14, (uint64_t)v7, (uint64_t *)&unk_100646680);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      return sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100646680);
    }
    else
    {
      sub_10002A810((uint64_t)v7, (uint64_t)v11);
      sub_10024F050(a1, a2 & 1);
      Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
      if (Strong)
      {
        v16 = Strong;
        v17 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
        if (v17)
        {
          v18 = v17;
          sub_1000759D8((uint64_t)v11);
          swift_unknownObjectRelease(v16);
          v16 = v18;
        }
        swift_unknownObjectRelease(v16);
      }
      return sub_10002A7D4((uint64_t)v11);
    }
  }
  return result;
}

id sub_10024F920()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIPinnedListsView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10024F9D0()
{
  return type metadata accessor for TTRIPinnedListsView(0);
}

uint64_t sub_10024F9D8(uint64_t a1)
{
  return sub_10024FDC4(a1, (uint64_t (*)(char *))sub_1003365F0);
}

unint64_t sub_10024FBEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006463B0;
  if (!qword_1006463B0)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1006463B0);
  }
  return result;
}

void *sub_10024FC34(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD v5[4];

  v2 = sub_10002A8F8();
  v5[2] = a1;
  v3 = sub_100258BB0((uint64_t (*)(id *))sub_1002507E0, (uint64_t)v5, (uint64_t)v2);
  swift_bridgeObjectRelease(v2);
  return v3;
}

char *sub_10024FC98(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v9;
  int64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
    goto LABEL_17;
  v5 = v3;
  v6 = result;
  result = (char *)_swiftEmptyArrayStorage;
  if (v4)
  {
    v16 = _swiftEmptyArrayStorage;
    result = (char *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    if (a2 <= (uint64_t)v6)
      v9 = v6;
    else
      v9 = (char *)a2;
    for (i = v9 - v6; ; --i)
    {
      v11 = sub_100019AF8(a3, &v15);
      if (v5)
        return (char *)swift_release(v16);
      v5 = 0;
      v12 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      result = (char *)specialized ContiguousArray._endMutation()(v14);
      if (a2 < (uint64_t)v6)
        break;
      if (!i)
        goto LABEL_16;
      if (!--v4)
        return (char *)v16;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10024FDB8(uint64_t a1)
{
  return sub_10024FDC4(a1, (uint64_t (*)(char *))sub_10033550C);
}

uint64_t sub_10024FDC4(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v5 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess(v12, v20, 0, 0);
  sub_10000735C(v12, (uint64_t)v7, (uint64_t *)&unk_100646680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100646680);
    return 0;
  }
  else
  {
    sub_10002A810((uint64_t)v7, (uint64_t)v11);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
    if (Strong)
    {
      v15 = Strong;
      v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
      if (v16)
      {
        v17 = v16;
        v13 = a2(v11);
        swift_unknownObjectRelease(v15);
        v15 = v17;
      }
      else
      {
        v13 = 0;
      }
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v13 = 0;
    }
    sub_10002A7D4((uint64_t)v11);
  }
  return v13;
}

_QWORD *sub_10024FF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];

  v3 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess(v10, v18, 0, 0);
  sub_10000735C(v10, (uint64_t)v5, (uint64_t *)&unk_100646680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100646680);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10002A810((uint64_t)v5, (uint64_t)v9);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
    if (Strong)
    {
      v13 = Strong;
      v14 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
      if (v14)
      {
        v15 = v14;
        v11 = (_QWORD *)sub_100346FFC((uint64_t)v9);
        swift_unknownObjectRelease(v13);
        v13 = v15;
      }
      else
      {
        v11 = _swiftEmptyArrayStorage;
      }
      swift_unknownObjectRelease(v13);
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
    }
    sub_10002A7D4((uint64_t)v9);
  }
  return v11;
}

void sub_100250108()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList];
  v3 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedLists] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls] = 0x4030000000000000;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectionFollowsFocus] = 0;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_usesLargeTextLayout] = 0;
  v4 = &v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIPinnedListsView.swift", 35, 2, 92, 0);
  __break(1u);
}

uint64_t sub_100250234(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
    if (v5)
    {
      v6 = v5;
      v7 = sub_100345F54(a1);
      swift_unknownObjectRelease(v4);
      v4 = v6;
    }
    else
    {
      v7 = 0;
    }
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

id sub_1002502C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char v37[24];
  char v38[24];

  v2 = v1;
  v4 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v4);
  v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  v9 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v35 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  v18 = (char *)sub_10024FC34((uint64_t)a1);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  v20 = v2;
  v21 = (uint64_t)&v18[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  swift_beginAccess(&v18[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v37, 0, 0);
  sub_10000735C(v21, (uint64_t)v11, (uint64_t *)&unk_100646680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100646680);
    goto LABEL_7;
  }
  sub_10002A810((uint64_t)v11, (uint64_t)v17);
  Strong = swift_unknownObjectWeakLoadStrong(v20 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
  if (Strong)
  {
    v23 = Strong;
    v24 = sub_1002591D0((uint64_t)v17, a1);

    swift_unknownObjectRelease(v23);
    sub_10002A7D4((uint64_t)v17);
    v19 = v24;
  }
  else
  {
    sub_10002A7D4((uint64_t)v17);
  }
LABEL_7:
  if ((char *)objc_msgSend(v19, "operation") - 2 < (char *)2)
  {
    if (v18
      && (v26 = &v18[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList],
          v27 = swift_beginAccess(&v18[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v38, 0, 0),
          !(*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v26, 1, v12, v27)))
    {
      v30 = (uint64_t)v26;
      v31 = v35;
      v32 = sub_10002A790(v30, v35);
      v29 = (uint64_t)v36;
      TTRAccountsListsViewModel.PinnedList.id.getter(v32);
      sub_10002A7D4(v31);
      v33 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v29, 0, 1, v33);
    }
    else
    {
      v28 = type metadata accessor for UUID(0);
      v29 = (uint64_t)v36;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v36, 1, 1, v28);
    }
    sub_100250830(v29, (uint64_t)v8);
  }
  else
  {
    v25 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
  }
  sub_10024E750((uint64_t)v8);

  sub_1000073A0((uint64_t)v8, &qword_100650718);
  return v19;
}

void sub_100250630(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v3 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (char *)sub_10024FC34((uint64_t)a1);
  if (v10)
  {
    v11 = v10;
    v12 = (uint64_t)&v10[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
    swift_beginAccess(&v10[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList], v18, 0, 0);
    sub_10000735C(v12, (uint64_t)v5, (uint64_t *)&unk_100646680);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {

      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100646680);
    }
    else
    {
      sub_10002A810((uint64_t)v5, (uint64_t)v9);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate);
      if (Strong)
      {
        v14 = Strong;
        v15 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
        if (v15)
        {
          v16 = v15;
          sub_100075C3C((uint64_t)v9, a1);

          swift_unknownObjectRelease(v14);
          v14 = v16;
        }
        else
        {

        }
        swift_unknownObjectRelease(v14);
        sub_10002A7D4((uint64_t)v9);
      }
      else
      {
        sub_10002A7D4((uint64_t)v9);

      }
    }
  }
}

id sub_1002507E0(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v1 + 16);
  v3 = (void *)*a1;
  objc_msgSend(v2, "locationInView:", *a1);
  return objc_msgSend(v3, "pointInside:withEvent:", 0);
}

uint64_t sub_100250830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100650718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100250878()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10025089C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10024F4B4(*(void **)(v2 + 16), a2);
}

uint64_t sub_1002508A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002508B4()
{
  sub_100106270();
}

uint64_t sub_1002508BC()
{
  return sub_10024E0DC();
}

uint64_t sub_1002508C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002508D4(_QWORD *a1)
{
  uint64_t v1;

  return sub_10024E3AC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100250950()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIEditTodaySectionsRouter()
{
  return objc_opt_self(_TtC9Reminders27TTRIEditTodaySectionsRouter);
}

void sub_10025099C()
{
  _QWORD *v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v0 + 24);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

uint64_t sub_1002509EC()
{
  id v0;
  char v1;

  v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  v1 = TTRUserDefaults.showingLargeAttachments(forType:)(3);

  return v1 & 1;
}

void sub_100250A28(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 3);

}

uint64_t sub_100250A74()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_hasIncompleteOrCompletedReminders);
  if (v1 != 2)
    return v1 & 1 | 0x40u;
  result = 64;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount + 8) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount) <= 0)
      return 64;
    else
      return 65;
  }
  return result;
}

uint64_t sub_100250ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_OWORD *)a1 = xmmword_100522BB0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = sub_1002525CC;
  *(_QWORD *)(a1 + 32) = v1;
  return swift_retain();
}

double sub_100250AE4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  int EnumCaseMultiPayload;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double result;
  _QWORD v20[2];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56))(v11, 1, 1, v4, v9);
  swift_retain();
  swift_retain();
  v13 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v11);
  swift_release();
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
  if (v13[2])
  {
    sub_10002B1E8((uint64_t)v13 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v4);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      swift_retain();
      v15 = sub_100393344((uint64_t)v13, v12);
      swift_bridgeObjectRelease(v13);
      swift_release();
      v13 = v15;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v13);
    v13 = _swiftEmptyArrayStorage;
  }
  v20[1] = v13;
  v16 = sub_10002A750(&qword_100649DF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v18 = sub_1002525D4();
  Sequence.firstMap<A>(_:)(a2, sub_10037E1C8, 0, v16, v17, v18);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

double sub_100250CE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100251474();
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  LODWORD(v4) = swift_getEnumCaseMultiPayload(v6, v4);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((_DWORD)v4 == 2)
  {
    v8 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(_QWORD *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = &off_1005F2998;
    v9 = sub_100028D70((_QWORD *)a2);
    sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)((char *)v9 + *(int *)(v8 + 20)) = v7;
    *((_BYTE *)v9 + *(int *)(v8 + 24)) = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100250DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100251474();
  sub_10000735C(a1, (uint64_t)v8, (uint64_t *)&unk_100640EB0);
  v10 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  result = sub_10000F614((uint64_t)v8, v11+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_childIndex) = a2;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability) = v9;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_1005F2830;
  *a3 = v11;
  return result;
}

void sub_100250EE4()
{
  TTRReminderEditor.edit(isFlagged:)(1);
}

BOOL sub_100250F08(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  if (!v6
    || (v8 = v6,
        v9 = v7,
        v10 = swift_getObjectType(v6, v7),
        LOBYTE(v9) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v9 + 56))(a1, v10, v9),
        swift_unknownObjectRelease(v8),
        (v9 & 1) != 0))
  {
    v11 = a1[3];
    v12 = a1[4];
    sub_10001413C(a1, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 192))(v17, v11, v12);
    v13 = v18;
    if (v18)
    {
      v14 = v19;
      sub_10001413C(v17, v18);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
      sub_100027F10(v17);
      return v15 > 0;
    }
    sub_1000073A0((uint64_t)v17, &qword_10063F590);
  }
  return 0;
}

double sub_10025100C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  double result;

  sub_100251474();
  sub_100125824(a1, a2, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100251054()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = type metadata accessor for TTRUserActivityListPayload(0);
  v3[4] = &protocol witness table for TTRUserActivityListPayload;
  v0 = sub_100028D70(v3);
  *(_BYTE *)v0 = 3;
  v1 = type metadata accessor for TTRUserActivityListPayload.State(0);
  swift_storeEnumTagMultiPayload(v0, v1, 2);
  NSUserActivity.setPayload(_:)(v3);
  return sub_100027F10(v3);
}

uint64_t sub_1002510C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v26[5];

  v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023A73C();
  v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong, v13);
    sub_10046B304(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17);
    if ((_DWORD)v18 != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
      goto LABEL_6;
    }
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  }
  v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_6:
  v21 = (uint64_t)&v3[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v3 = 3;
  sub_10000735C((uint64_t)v9, v21, (uint64_t *)&unk_1006463C0);
  v22 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  swift_storeEnumTagMultiPayload(v3, v22, 2);
  v26[3] = v1;
  v26[4] = &protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  v23 = sub_100028D70(v26);
  sub_10002B1E8((uint64_t)v3, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)(v26);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  sub_100027F10(v26);
  return v10;
}

void sub_100251338(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  uint64_t v6;

  v2 = objc_msgSend(a1, "flaggedContext");
  if (v2)
  {
    v5 = v2;
    if ((REMReminderFlaggedContextChangeItem.isFlagged.getter() & 1) != 0)
    {

    }
    else
    {
      v3 = type metadata accessor for TTRReminderEditor(0);
      v4 = sub_1000AE644();
      TTRUndoableEditing.init(changeItem:undoManager:)(&v6, a1, 0, v3, v4);
      TTRReminderEditor.edit(isFlagged:)(1);
      swift_release();

    }
  }
}

void *sub_1002513EC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList);
  v2 = v1;
  return v1;
}

uint64_t sub_100251424()
{
  uint64_t v0;
  _BYTE *v1;

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  sub_100012DDC(v0, qword_1006507F0);
  v1 = (_BYTE *)sub_100012DC4(v0, (uint64_t)qword_1006507F0);
  *v1 = 1;
  return swift_storeEnumTagMultiPayload(v1, v0, 0);
}

uint64_t sub_100251474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    v3 = (void *)REMSmartListTypeFlagged;
    v4 = type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability();
    v2 = swift_allocObject(v4, 41, 7);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit(v2 + 16, 0);
    *(_BYTE *)(v2 + 40) = 1;
    *(_QWORD *)(v2 + 24) = &off_1005F91F8;
    *(_QWORD *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign(v5, v0);
    *(_QWORD *)(v0 + v1) = v2;
    v6 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100251528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _QWORD v44[5];

  v43 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v2);
  v42 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v4);
  v41 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v8 = 3;
  v9 = type metadata accessor for TTRListType(0);
  swift_storeEnumTagMultiPayload(v8, v9, 2);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v39 = REMSmartListType.title.getter(REMSmartListTypeFlagged);
  v11 = v10;
  v40 = static TTRListColors.SmartList.flagged.getter();
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource), v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v16 = v15(ObjectType, v12);
  v17 = v16;
  if (v16)
    swift_unknownObjectRelease(v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12);
  v19 = v18;
  if (v18)
    swift_unknownObjectRelease(v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 56))(v44, ObjectType, v12);
  v20 = v44[3];
  sub_1000073A0((uint64_t)v44, &qword_100649FC0);
  v21 = v15(ObjectType, v12);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    v25 = swift_getObjectType(v21, v22);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v38 = 0;
  }
  v26 = v19 != 0;
  if (v11)
  {
    v27 = v39;
  }
  else
  {
    v11 = 0xE000000000000000;
    v27 = 0;
  }
  v28 = v20 != 0;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount + 8))
    v29 = 0;
  else
    v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount);
  v30 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v31 = v41;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v41, 1, 1, v30);
  v32 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v33 = v42;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v42, 1, 1, v32);
  BYTE6(v36) = 1;
  WORD2(v36) = 257;
  LODWORD(v36) = 0;
  HIBYTE(v35) = v38 & 1;
  BYTE6(v35) = v28;
  WORD2(v35) = 0;
  BYTE3(v35) = v26;
  BYTE2(v35) = 0;
  BYTE1(v35) = v17 != 0;
  LOBYTE(v35) = 1;
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v8, v27, v11, v40, 0, 1, 0, 3, v35, 1, v29, 0, 0, 0, 0, v31, v33, v36);
}

uint64_t sub_100251858()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability));
}

uint64_t sub_100251884()
{
  uint64_t v0;

  v0 = sub_10046B320();

  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002518D4()
{
  return type metadata accessor for TTRShowFlaggedViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowFlaggedViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100650850;
  if (!qword_100650850)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowFlaggedViewModelSource);
  return result;
}

uint64_t sub_100251918(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "\b";
  v2[1] = &unk_10052B908;
  v2[2] = &unk_10052B920;
  v2[3] = "\b";
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 1336);
}

uint64_t sub_10025196C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  double v42;
  _QWORD *v43;
  double v44;
  void *v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  double v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  BOOL v66;
  BOOL *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  void *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t result;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t ObjectType;
  uint64_t v118;
  char *v119;
  BOOL *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144[2];
  _QWORD v145[5];
  _OWORD v146[8];
  char v147[24];
  _BYTE v148[136];

  v3 = v2;
  v136 = a2;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v8);
  v135 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  v11 = *(_QWORD *)(v10 - 8);
  v131 = v10;
  v132 = v11;
  __chkstk_darwin(v10);
  v134 = (uint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v126);
  v127 = (uint64_t)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v14);
  v128 = (uint64_t)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v140 = (uint64_t)&v118 - v17;
  v18 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v129 = *(_QWORD *)(v18 - 8);
  v130 = v18;
  __chkstk_darwin(v18);
  v133 = (uint64_t)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v124 = *(_QWORD *)(v20 - 8);
  v125 = v20;
  __chkstk_darwin(v20);
  v122 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v123 = (char *)&v118 - v23;
  v142 = type metadata accessor for REMRemindersListDataView.FlatModel(0);
  v138 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v139 = (char *)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v118 - v26;
  v28 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v28);
  v30 = (char *)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v141);
  v121 = (uint64_t)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v120 = (BOOL *)&v118 - v33;
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v118 - v36;
  v38 = OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList;
  v39 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList);
  v143 = a1;
  if (v39)
  {
    v40 = objc_msgSend(v39, "sortingStyle", v35);
    v43 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter(v41, v42);
    if (v43)
    {
      v45 = v43;
      goto LABEL_6;
    }
    if (v40)
      goto LABEL_12;
LABEL_15:
    v56 = 1;
    v137 = 1;
    goto LABEL_18;
  }
  v46 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter(&selRef_supportsAttachments, v35);
  if (!v46)
    goto LABEL_15;
  v45 = v46;
  v40 = 0;
LABEL_6:
  v47 = objc_msgSend(v45, "sortingStyle");

  if (!v40)
  {
    if (v47)
    {

      v137 = 0;
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  if (!v47)
  {
LABEL_12:

    v137 = 0;
    goto LABEL_18;
  }
  v119 = v7;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v50 = v49;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v53 = v51;
  if (v48 == v52 && v50 == v51)
  {
    v137 = 1;
    v54 = v50;
    v55 = v51;
  }
  else
  {
    v57 = v48;
    v54 = v50;
    v58 = v50;
    v55 = v53;
    v137 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v52, v53, 0);
  }

  swift_bridgeObjectRelease(v54);
  *(_QWORD *)&v44 = swift_bridgeObjectRelease(v55).n128_u64[0];
  v7 = v119;
LABEL_18:
  v59 = *(_QWORD *)(v3 + v38);
  v60 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter((_QWORD *)v56, v44);

  v61 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, v147, 0, 0);
  sub_10002B1E8(v61, (uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload(v37, v141) == 1)
  {
    v63 = (_QWORD *)((v59 == 0) ^ (v60 != 0));
    if ((v59 == 0) == (v60 != 0))
    {
      v64 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter(v63, v62);
      v65 = v64;
      if (v64)

      v66 = v65 != 0;
      v67 = v120;
      *v120 = v66;
      swift_storeEnumTagMultiPayload(v67, v141, 1);
      v68 = (uint64_t)v67;
      v69 = v121;
      sub_10001F580(v68, v121, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
      swift_beginAccess(v61, v148, 33, 0);
      sub_1000B4098(v69, v61);
      swift_endAccess(v148);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  }
  v70 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter(v63, v62);
  v71 = *(void **)(v3 + v38);
  *(_QWORD *)(v3 + v38) = v70;

  v72 = ((uint64_t (*)(void))REMRemindersListDataView.FlaggedModel.flatModel.getter)();
  REMRemindersListDataView.FlatModel.remindersCount.getter(v72);
  v73 = *(void (**)(char *, uint64_t))(v138 + 8);
  v73(v27, v142);
  v74 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48))(v30, 1, v74);
  if (v76 == 1)
  {
    v77 = sub_1000073A0((uint64_t)v30, &qword_10063F008);
    v78 = 0;
  }
  else
  {
    v78 = REMRemindersListDataView.CountByCompleted.completed.getter();
    v77 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v30, v74);
  }
  v79 = v3 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount;
  *(_QWORD *)v79 = v78;
  *(_BYTE *)(v79 + 8) = v76 == 1;
  v80 = v139;
  v81 = REMRemindersListDataView.FlaggedModel.flatModel.getter(v77);
  v82 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter(v81);
  v73(v80, v142);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_hasIncompleteOrCompletedReminders) = v82;
  if ((v137 & 1) != 0)
  {
    v83 = (uint64_t)v7;
    v84 = v133;
    sub_100251528(v133);
    if (qword_10063D558 != -1)
      swift_once(&qword_10063D558, sub_100251424);
    v85 = sub_100012DC4(v126, (uint64_t)qword_1006507F0);
    v86 = v127;
    sub_10002B1E8(v85, v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000D2B94(v146);
    sub_10000F614((uint64_t)v146, (uint64_t)v148, &qword_100649B60);
    v87 = v140;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v86, v148, 0, 0, 0, 0, 0, 0);
    v88 = v87;
    v89 = v128;
    v90 = sub_10002B1E8(v88, v128, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v91 = REMRemindersListDataView.FlaggedModel.flatModel.getter(v90);
    v92 = REMRemindersListDataView.FlatModel.reminders.getter(v91);
    v73(v80, v142);
    v93 = v89;
    v94 = v134;
    sub_10001F580(v93, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v95 = v131;
    *(_QWORD *)(v94 + *(int *)(v131 + 20)) = v92;
    *(_BYTE *)(v94 + *(int *)(v95 + 24)) = 0;
    v96 = v135;
    sub_10002B1E8(v84, v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v96, 0, 1, v130);
    v97 = sub_10002A750(&qword_1006452D8);
    v98 = *(unsigned __int8 *)(v132 + 80);
    v99 = (v98 + 32) & ~v98;
    v100 = swift_allocObject(v97, v99 + *(_QWORD *)(v132 + 72), v98 | 7);
    *(_OWORD *)(v100 + 16) = xmmword_100520250;
    sub_10002B1E8(v94, v100 + v99, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    v101 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    v102 = swift_allocObject(v101, 16, 7);
    v103 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v83, 1, 1, v103);
    v145[3] = v101;
    v145[4] = &off_100604210;
    v145[0] = v102;
    sub_100010634((uint64_t)v145, (uint64_t)v144);
    v104 = swift_allocObject(&unk_1005F9260, 72, 7);
    *(_QWORD *)(v104 + 16) = v100;
    sub_10002E37C(v144, v104 + 24);
    *(_QWORD *)(v104 + 64) = v3;
    swift_retain();
    swift_bridgeObjectRetain(v100);
    swift_retain();
    sub_10047C8F8(1, v96, (uint64_t (*)(uint64_t))sub_10003E360, v104, v136, 0, v83);
    swift_release();
    sub_100027F10(v145);
    swift_bridgeObjectRelease(v100);
    sub_1000073A0(v83, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v96, &qword_100649CA0);
    sub_10001F544(v94, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_10001F544(v140, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
  }
  else
  {
    v105 = *(void **)(v3 + v38);
    if (v105)
    {
      v106 = objc_msgSend(v105, "sortingStyle");
      v107 = v122;
      REMSortingStyle.dataViewSortingStyle.getter();

      v109 = (uint64_t)v123;
      v108 = v124;
      v110 = v107;
      v111 = v125;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v110, v125);
    }
    else
    {
      v109 = (uint64_t)v123;
      TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(3);
      v108 = v124;
      v111 = v125;
    }
    sub_100474118(v109, 1);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v111);
  }
  v112 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  result = swift_unknownObjectWeakLoadStrong(v112);
  if (result)
  {
    v115 = result;
    v116 = *(_QWORD *)(v112 + 8);
    ObjectType = swift_getObjectType(result, v114);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 104))(3, ObjectType, v116);
    return swift_unknownObjectRelease(v115);
  }
  return result;
}

uint64_t sub_100252358@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_10063D558 != -1)
    swift_once(&qword_10063D558, sub_100251424);
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v5 = sub_100012DC4(v4, (uint64_t)qword_1006507F0);
  if ((static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(a1, v5) & 1) != 0)
  {
    *a2 = 1;
    v6 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload(a2, v6, 1);
    v7 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
    v10 = v6;
  }
  else
  {
    v10 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    v7 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

void sub_100252424()
{
  sub_100252460();
}

uint64_t sub_10025242C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72, 7);
}

void sub_100252460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v4);
  v5 = (char *)sub_100252520 + 4 * byte_10052B8C0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100252520()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  return 0;
}

double sub_1002525CC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100250AE4(v1, a1);
}

unint64_t sub_1002525D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649EE0;
  if (!qword_100649EE0)
  {
    v1 = sub_10002CA5C(&qword_100649DF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100649EE0);
  }
  return result;
}

void sub_100252620()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  _QWORD *v6;
  void (*v7)(id);
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _OWORD v13[2];
  uint64_t v14;
  char v15;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 2);
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v3 = (id)static UIImage.ttr_systemSymbolImage(named:)(0x69662E6873617274, 0xEA00000000006C6CLL);
  if (v3)
  {
    sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
    v4 = (void *)static UIColor.ttrSecondaryLabelColor.getter();
    v5 = objc_msgSend(v3, "imageWithTintColor:renderingMode:", v4, 1);

    v3 = objc_msgSend(v5, "imageWithSymbolConfiguration:", v2);
  }
  v6 = *(_QWORD **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge);
  v7 = *(void (**)(id))((swift_isaMask & *v6) + 0x140);
  v8 = v3;
  v7(v3);
  v9 = (void *)objc_opt_self(UIColor);
  v10 = TTRListBadgeView.ImageParams.init(color:blendMode:contentMode:)(objc_msgSend(v9, "whiteColor"), 0, 1);
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v6) + 0x1A0))(v10, v11 & 0x1FFFFFFFFLL);
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  v15 = 2;
  (*(void (**)(_OWORD *))((swift_isaMask & *v6) + 0x110))(v13);
  (*(void (**)(_QWORD))((swift_isaMask & *v6) + 0x188))(0);
  v12 = objc_msgSend(v9, "tertiarySystemFillColor");
  objc_msgSend(v6, "setTintColor:", v12);

}

char *sub_100252834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  NSString v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  objc_super v23;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = type metadata accessor for TTRListBadgeView(0);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
  v10 = v4;
  v11 = objc_msgSend(v9, "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge] = v11;

  if (a3)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = 0;
  }
  v23.receiver = v10;
  v23.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v23, "initWithStyle:reuseIdentifier:", a1, v12);

  v14 = OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge;
  v15 = *(void **)&v13[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge];
  v16 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView;
  v17 = *(void **)&v13[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView];
  v18 = v13;
  v19 = v15;
  objc_msgSend(v17, "bounds");
  objc_msgSend(v19, "setFrame:");

  v20 = *(void **)&v13[v14];
  objc_msgSend(v20, "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v13[v16], "addSubview:", v20);
  v21 = *(id *)&v18[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
  objc_msgSend(v21, "setEnabled:", 0);

  return v18;
}

unint64_t sub_100252ABC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];
  objc_super v22;
  unint64_t v23;

  v3 = v2;
  v22.receiver = v2;
  v22.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v22, "accessibilityCustomActions");
  if (v4)
  {
    v5 = v4;
    v6 = sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  v23 = (unint64_t)v7;
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  v9 = v8;
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v10 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6873617274, 0xE500000000000000);
  v11 = swift_allocObject(&unk_1005F9358, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v3);
  v12 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  aBlock[4] = sub_100252EB4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100341638;
  aBlock[3] = &unk_1005F9370;
  v14 = _Block_copy(aBlock);
  v15 = objc_msgSend(v12, "initWithName:image:actionHandler:", v13, v10, v14);

  _Block_release(v14);
  swift_release();
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
  specialized Array._endMutation()(v19);
  return v23;
}

uint64_t sub_100252D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  char v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate);
    if (v5)
    {
      v7 = v5;
      ObjectType = swift_getObjectType(v5, v6);
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIAccountsListsRecentlyDeletedCellDelegate))
        v9 = v7;
      else
        v9 = 0;
      if (v9)
      {
        LOBYTE(v9) = sub_100069184(v4);

        swift_unknownObjectRelease(v7);
      }
      else
      {
        swift_unknownObjectRelease(v7);

      }
    }
    else
    {

      LOBYTE(v9) = 0;
    }
  }
  else
  {
    LOBYTE(v9) = 0;
  }
  return v9 & 1;
}

void sub_100252E50()
{
  uint64_t v0;

}

uint64_t type metadata accessor for TTRIAccountsListsRecentlyDeletedCell()
{
  return objc_opt_self(_TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell);
}

uint64_t sub_100252E90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100252EB4(uint64_t a1)
{
  uint64_t v1;

  return sub_100252D70(a1, v1);
}

uint64_t sub_100252EBC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  uint64_t result;
  void *v11;
  void *v12;

  v3 = *(void **)(v1 + 16);
  v4 = sub_10002A750((uint64_t *)&unk_100654F80);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100520250;
  v6 = (uint64_t *)TTRReminderCopyPasteItem.pasteboardTypeString.unsafeMutableAddressor();
  v8 = *v6;
  v7 = v6[1];
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  isa = Array._bridgeToObjectiveC()().super.isa;
  LODWORD(v3) = objc_msgSend(v3, "containsPasteboardTypes:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (!(_DWORD)v3)
    return 0;
  result = sub_100253494(a1);
  if (result)
  {
    sub_100254288((void *)result, v11, v12);
    return 1;
  }
  return result;
}

void sub_100252F7C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t aBlock[6];
  uint64_t v42;
  uint64_t v43;

  sub_10025397C();
  if (v3)
  {
    v40 = v3;
    v4 = sub_100253494(a1);
    if (v4)
    {
      v7 = (void *)v4;
      v8 = v5;
      v9 = v6;
      v10 = type metadata accessor for TTRReminderCopyPasteItem(0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
      v12 = (_QWORD *)swift_allocObject(&unk_1005F93C0, 48, 7);
      v12[2] = v1;
      v12[3] = v7;
      v12[4] = v8;
      v12[5] = v9;
      aBlock[4] = (uint64_t)sub_100254098;
      aBlock[5] = (uint64_t)v12;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100253FA0;
      aBlock[3] = (uint64_t)&unk_1005F93D8;
      v13 = _Block_copy(aBlock);
      v14 = v9;
      swift_retain();
      v15 = v7;
      v16 = v8;
      v17 = objc_msgSend(v40, "loadObjectOfClass:completionHandler:", ObjCClassFromMetadata, v13, swift_release().n128_f64[0]);
      _Block_release(v13);

    }
    else
    {
      if (qword_10063D560 != -1)
        swift_once(&qword_10063D560, sub_100253404);
      v29 = type metadata accessor for Logger(0);
      sub_100012DC4(v29, (uint64_t)qword_100651120);
      v30 = swift_bridgeObjectRetain_n(a1, 2);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        aBlock[0] = v34;
        *(_DWORD *)v33 = 136315138;
        v35 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        swift_bridgeObjectRetain(a1);
        v37 = Array.description.getter(v36, v35);
        v39 = v38;
        swift_bridgeObjectRelease(a1);
        v42 = sub_100027E40(v37, v39, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v33 + 4, v33 + 12);
        swift_bridgeObjectRelease_n(a1, 2);
        swift_bridgeObjectRelease(v39);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "TTRIRemindersListPasteRequest: failed to determine paste target {items: %s}", v33, 0xCu);
        swift_arrayDestroy(v34, 1, &type metadata for Any[8]);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a1, 2);
      }
    }
  }
  else
  {
    if (qword_10063D560 != -1)
      swift_once(&qword_10063D560, sub_100253404);
    v18 = type metadata accessor for Logger(0);
    sub_100012DC4(v18, (uint64_t)qword_100651120);
    v19 = swift_bridgeObjectRetain_n(a1, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      aBlock[0] = v23;
      *(_DWORD *)v22 = 136315138;
      v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      swift_bridgeObjectRetain(a1);
      v26 = Array.description.getter(v25, v24);
      v28 = v27;
      swift_bridgeObjectRelease(a1);
      v42 = sub_100027E40(v26, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRIRemindersListPasteRequest: eligible NSItemProvider not found {items: %s}", v22, 0xCu);
      swift_arrayDestroy(v23, 1, &type metadata for Any[8]);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
  }
}

uint64_t sub_100253404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100651120);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100651120);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100253494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[5];
  char v32;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v27[0] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem(0);
  __chkstk_darwin(v28);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v10 = __chkstk_darwin(v9);
  v27[1] = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v27 - v13;
  __chkstk_darwin(v12);
  v30 = (uint64_t)v27 - v15;
  v16 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 24), v17);
  v19 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8);
  v29 = ObjectType;
  v19(v31, ObjectType, v16);
  sub_100179C5C(v31);
  v20 = 0;
  if ((v32 & 1) == 0)
  {
    v21 = *(_QWORD *)(a1 + 16);
    if (v21)
    {
      v22 = v30;
      sub_1000493D8(a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * (v21 - 1), v30);
      v23 = 0;
    }
    else
    {
      v23 = 1;
      v22 = v30;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v22, v23, 1, v4);
    sub_1002541C0(v22, (uint64_t)v14);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
    if ((_DWORD)v24 != 1)
    {
      TTRRemindersListViewModel.Item.editableCasesOnly.getter(v24);
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v25 = (char *)&loc_1002536D4 + dword_100253964[swift_getEnumCaseMultiPayload(v8, v28)];
      __asm { BR              X10 }
    }
    sub_100254208((uint64_t)v14);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 304))(a1, sub_100254248, v2, v29, v16);
    sub_100254208(v22);
  }
  return v20;
}

void sub_10025397C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = objc_msgSend(*(id *)(v0 + 16), "itemProviders");
  v2 = sub_100005ED8(0, &qword_100649EC0, NSItemProvider_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v14 = v3;
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v3);
    if (v4)
    {
LABEL_3:
      v5 = type metadata accessor for TTRReminderCopyPasteItem(0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_27;
      }
      v7 = ObjCClassFromMetadata;
      for (i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        else
          v11 = *(id *)(v3 + 8 * i + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, "canLoadObjectOfClass:", v7);
        if ((_DWORD)v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v9 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
          v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v12);
          specialized ContiguousArray._endMutation()(v10);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v3);
      v3 = (uint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_24;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v3);
  v3 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_24;
LABEL_19:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_24:
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v17 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_release();
    if (!v17)
      goto LABEL_25;
    goto LABEL_21;
  }
  if (!_swiftEmptyArrayStorage[2])
  {
LABEL_25:
    swift_release();
    return;
  }
LABEL_21:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_27:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_25;
  }
  if (_swiftEmptyArrayStorage[2])
  {
    v15 = (id)_swiftEmptyArrayStorage[4];
    goto LABEL_25;
  }
  __break(1u);
}

void sub_100253B94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  id v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  NSObject *v47;
  uint64_t aBlock[6];
  uint64_t v49;
  _QWORD v50[3];
  char v51[8];

  v46 = a4;
  v47 = a5;
  v45 = a3;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1
    && (v17 = type metadata accessor for TTRReminderCopyPasteItem(0), (v18 = swift_dynamicCastClass(a1, v17)) != 0))
  {
    v19 = v18;
    sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v44 = v10;
    swift_unknownObjectRetain(a1);
    v41 = static OS_dispatch_queue.main.getter(v20);
    v21 = (_QWORD *)swift_allocObject(&unk_1005F9410, 56, 7);
    v42 = v14;
    v43 = v13;
    v22 = v46;
    v21[2] = v45;
    v21[3] = v19;
    v23 = v47;
    v21[4] = v22;
    v21[5] = v23;
    v21[6] = a6;
    aBlock[4] = (uint64_t)sub_1002540E8;
    aBlock[5] = (uint64_t)v21;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100006378;
    aBlock[3] = (uint64_t)&unk_1005F9428;
    v24 = _Block_copy(aBlock);
    v25 = a6;
    swift_unknownObjectRetain(a1);
    swift_retain();
    v26 = v22;
    v27 = v23;
    swift_release();
    static DispatchQoS.unspecified.getter(v28);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v29 = sub_100005E90();
    v30 = sub_10002A750((uint64_t *)&unk_100640F40);
    v31 = sub_10002D190();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v9, v29);
    v32 = (void *)v41;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v24);
    _Block_release(v24);
    swift_unknownObjectRelease(a1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  }
  else if (a2)
  {
    swift_errorRetain(a2);
    if (qword_10063D560 != -1)
      swift_once(&qword_10063D560, sub_100253404);
    v33 = type metadata accessor for Logger(0);
    sub_100012DC4(v33, (uint64_t)qword_100651120);
    swift_errorRetain(a2);
    v34 = swift_errorRetain(a2);
    v47 = Logger.logObject.getter(v34);
    v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      aBlock[0] = v37;
      *(_DWORD *)v36 = 136315138;
      swift_getErrorValue(a2, v51, v50);
      v38 = Error.localizedDescription.getter(v50[1], v50[2]);
      v40 = v39;
      v49 = sub_100027E40(v38, v39, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v36 + 4, v36 + 12);
      swift_bridgeObjectRelease(v40);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v47, v35, "error decoding pasteboard %s", v36, 0xCu);
      swift_arrayDestroy(v37, 1, &type metadata for Any[8]);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_100253FA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

  return swift_unknownObjectRelease(a2);
}

uint64_t sub_100254008()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for TTRIRemindersListPasteRequest()
{
  return objc_opt_self(_TtC9Reminders29TTRIRemindersListPasteRequest);
}

uint64_t sub_10025405C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100254098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100253B94(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(NSObject **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1002540A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002540E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  v7 = v2[6];
  v8 = *(_QWORD *)(v3 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 40), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v8 + 488))(v4, v5, v7, v6, sub_100254160, v3, ObjectType, v8);
}

uint64_t sub_100254160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;

  v7 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 312))(a1, a2, a3, ObjectType, v7);
}

uint64_t sub_1002541C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100254208(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10025424C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 48);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 40), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 528))(ObjectType, v3);
}

void sub_100254288(void *a1, void *a2, void *a3)
{
  if (a1)
  {

  }
}

uint64_t sub_1002542CC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t sub_1002542F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  _BYTE v21[80];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  _BYTE v33[48];
  _BYTE v34[80];
  _QWORD v35[5];
  __int16 v36;
  _QWORD v37[5];
  char v38;
  uint64_t v39;

  v1 = v0;
  if (qword_10063D898 != -1)
    swift_once(&qword_10063D898, sub_1004FEB88);
  v2 = qword_100673A50;
  v39 = qword_100673A50;
  LOBYTE(v35[0]) = 0;
  v3 = sub_100254D04();
  swift_bridgeObjectRetain(v2);
  AnyHashable.init<A>(_:)(v37, v35, &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem, v3);
  v38 = 1;
  LOBYTE(v35[0]) = 1;
  v36 = 256;
  v4 = sub_10002A750(&qword_1006487F0);
  inited = swift_initStackObject(v4, v34);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  sub_10017C4F0((uint64_t)v37, inited + 32);
  v6 = sub_100254D48();
  v7 = Array<A>.index<A>(forInsertingAt:where:)(v35, sub_1004FEB84, 0, v2, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v6);
  v9 = v8;
  sub_100254D8C((uint64_t)v35, (uint64_t)v33);
  if ((v9 & 1) != 0)
  {
    sub_100254D8C((uint64_t)v33, (uint64_t)&v22);
    if (v28)
    {
      if (v28 == 1)
      {
        sub_100254DD4((uint64_t)&v22, (uint64_t)&v29);
LABEL_13:
        sub_1000073A0((uint64_t)&v29, &qword_100651C48);
        v7 = *(_QWORD *)(v2 + 16);
        goto LABEL_14;
      }
      if (v27 || v25 | v26 | v22 | v24 | v23)
      {
        v31 = 0;
        v29 = 0u;
        v30 = 0u;
        v32 = -1;
        goto LABEL_13;
      }
      v31 = 0;
      v29 = 0u;
      v30 = 0u;
      v32 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v22, (uint64_t)&v29);
    }
    sub_1000073A0((uint64_t)&v29, &qword_100651C48);
    v7 = 0;
  }
LABEL_14:
  sub_1000073A0((uint64_t)v33, &qword_100651C40);
  sub_10043AE54(v7, v7, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  sub_1000073A0((uint64_t)v35, &qword_100651C40);
  sub_100254E10(v37);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(v10, v12);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 48))(v35, ObjectType, v11);
  v14 = v35[3];
  sub_1000073A0((uint64_t)v35, &qword_100651C50);
  if (v14)
  {
    LOBYTE(v35[0]) = 1;
    AnyHashable.init<A>(_:)(v37, v35, &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem, v3);
    v38 = 1;
    v33[0] = 0;
    AnyHashable.init<A>(_:)(v35, v33, &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem, v3);
    v36 = 1;
    v15 = swift_initStackObject(v4, v21);
    *(_OWORD *)(v15 + 16) = xmmword_100520250;
    sub_10017C4F0((uint64_t)v37, v15 + 32);
    v16 = v39;
    v17 = Array<A>.index<A>(forInsertingAt:where:)(v35, sub_1004FEB84, 0, v39, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v6);
    v19 = v18;
    sub_100254D8C((uint64_t)v35, (uint64_t)v33);
    if ((v19 & 1) != 0)
    {
      sub_100254D8C((uint64_t)v33, (uint64_t)&v22);
      if (v28)
      {
        if (v28 == 1)
        {
          sub_100254DD4((uint64_t)&v22, (uint64_t)&v29);
LABEL_25:
          sub_1000073A0((uint64_t)&v29, &qword_100651C48);
          v17 = *(_QWORD *)(v16 + 16);
          goto LABEL_26;
        }
        if (v27 || v25 | v26 | v22 | v24 | v23)
        {
          v31 = 0;
          v29 = 0u;
          v30 = 0u;
          v32 = -1;
          goto LABEL_25;
        }
        v31 = 0;
        v29 = 0u;
        v30 = 0u;
        v32 = -1;
      }
      else
      {
        sub_100254DD4((uint64_t)&v22, (uint64_t)&v29);
      }
      sub_1000073A0((uint64_t)&v29, &qword_100651C48);
      v17 = 0;
    }
LABEL_26:
    sub_1000073A0((uint64_t)v33, &qword_100651C40);
    sub_10043AE54(v17, v17, v15);
    swift_setDeallocating(v15);
    swift_arrayDestroy(v15 + 32, *(_QWORD *)(v15 + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
    sub_1000073A0((uint64_t)v35, &qword_100651C40);
    sub_100254E10(v37);
  }
  return v39;
}

uint64_t sub_100254740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  char v22;
  _QWORD v23[4];

  v2 = v1;
  AnyHashable.base.getter(v23, a1);
  if (!swift_dynamicCast(&v22, v23, &type metadata for Any[8], &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem, 6))return 0;
  if (v22 == 1)
  {
    sub_100254C94();
    v3 = static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)(0);
    v5 = v4;
    v6 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
    v7 = swift_allocObject(&unk_1005F94A0, 24, 7);
    swift_weakInit(v7 + 16, v1);
    v8 = v6;
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v3, v5, 0, 0, v6, 0, 0, 0, 0, 0, 0, sub_100254CFC, v7);
  }
  else
  {
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v10);

    sub_100254C94();
    v12 = static TTRLocalizableStrings.TodayList.groupByTime.getter();
    v14 = v13;
    v15 = swift_allocObject(&unk_1005F94A0, 24, 7);
    swift_weakInit(v15 + 16, v2);
    v16 = v11;
    v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12, v14, 0, 0, v11, 0, 0, 0, 0, 0, 0, sub_100254CF4, v15);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource);
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
    ObjectType = swift_getObjectType(v18, v19);
    objc_msgSend(v9, "setState:", (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(ObjectType, v17) & 1);

  }
  return (uint64_t)v9;
}

_QWORD *sub_10025495C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  void *v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = (_QWORD *)swift_weakLoadStrong(v2);
  if (result)
  {
    v5 = (uint64_t)result;
    v7 = result[10];
    v6 = result[11];
    v8 = result[9];
    ObjectType = swift_getObjectType(v8, v4);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 32);
    swift_unknownObjectRetain(v6);
    v11 = swift_unknownObjectRetain(v8);
    v12 = (void *)v10(ObjectType, v7, v11);
    swift_unknownObjectRelease(v8);
    swift_retain();
    sub_1000A0D18(v12, v5, (uint64_t)&off_1005F9478);
    swift_unknownObjectRelease(v6);

    return (_QWORD *)swift_release_n(v5, 2);
  }
  return result;
}

void sub_100254A2C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_BOOL8, uint64_t, uint64_t);
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(a1, "state") != (id)1;
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource);
    v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
    ObjectType = swift_getObjectType(v7, v9);
    v11 = *(void (**)(_BOOL8, uint64_t, uint64_t))(v8 + 32);
    swift_unknownObjectRetain(v7);
    v11(v6, ObjectType, v8);
    v12 = swift_unknownObjectRelease(v7);
    v13 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v12);
    TTRUserDefaults.todayListIsGrouped.setter(v6);
    swift_release(v5);

  }
}

uint64_t sub_100254B04()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource));
}

uint64_t sub_100254B14()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100254B54()
{
  return type metadata accessor for TTRIShowTodayPresenter(0);
}

uint64_t type metadata accessor for TTRIShowTodayPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100651300;
  if (!qword_100651300)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowTodayPresenter);
  return result;
}

uint64_t sub_100254B98(uint64_t a1)
{
  void *v2;

  v2 = &unk_10052BA68;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

uint64_t sub_100254BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 600))(ObjectType, v3);
}

uint64_t sub_100254C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))(v7, a3, v5);
  return sub_100152A34(v7);
}

unint64_t sub_100254C94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006415C0;
  if (!qword_1006415C0)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006415C0);
  }
  return result;
}

uint64_t sub_100254CD0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100254CF4(void *a1)
{
  uint64_t v1;

  sub_100254A2C(a1, v1);
}

_QWORD *sub_100254CFC(uint64_t a1)
{
  uint64_t v1;

  return sub_10025495C(a1, v1);
}

unint64_t sub_100254D04()
{
  unint64_t result;

  result = qword_100651C30;
  if (!qword_100651C30)
  {
    result = swift_getWitnessTable(&unk_10052BAD0, &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100651C30);
  }
  return result;
}

unint64_t sub_100254D48()
{
  unint64_t result;

  result = qword_100651C38;
  if (!qword_100651C38)
  {
    result = swift_getWitnessTable(&unk_10053AE6C, &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
    atomic_store(result, (unint64_t *)&qword_100651C38);
  }
  return result;
}

uint64_t sub_100254D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100651C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100254DD4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIRootRouter.CurrentDetailContents(a2, a1);
  return a2;
}

_QWORD *sub_100254E10(_QWORD *a1)
{
  destroy for TTRIRemindersListActionMenuItems.MenuItem(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TTRIShowTodayPresenter.ActionMenuCustomItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100254E90 + 4 * byte_10052BA45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100254EC4 + 4 * asc_10052BA40[v4]))();
}

uint64_t sub_100254EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100254ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100254ED4);
  return result;
}

uint64_t sub_100254EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100254EE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100254EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100254EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowTodayPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem;
}

unint64_t sub_100254F14()
{
  unint64_t result;

  result = qword_100651C58;
  if (!qword_100651C58)
  {
    result = swift_getWitnessTable(&unk_10052BAA8, &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100651C58);
  }
  return result;
}

_BYTE *sub_100254F58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  _BYTE *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _BYTE *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t);
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  id v80;
  void *v81;
  void *v82;
  void (*v83)(void *, _UNKNOWN **, _BYTE *, uint64_t);
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, _UNKNOWN **);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128);
  __n128 v99;
  _QWORD *v100;
  _BYTE v102[12];
  _BOOL4 v103;
  _QWORD *v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  id v108;
  void (*v109)(_BYTE *, uint64_t);
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  _OWORD v121[24];
  _QWORD v122[16];
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v111 = a1;
  v112 = a3;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v5 = __chkstk_darwin(v4);
  v106 = &v102[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v105 = &v102[-v7];
  v110 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v110);
  v116 = &v102[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for TTRListType.SortingCapability(0);
  v10 = __chkstk_darwin(v9);
  v107 = &v102[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v115 = &v102[-v12];
  v114 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v13 = *(_QWORD *)(v114 - 8);
  v14 = __chkstk_darwin(v114);
  v16 = &v102[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v113 = &v102[-v17];
  v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v18);
  v20 = &v102[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v21);
  v23 = (void **)&v102[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = sub_10002B1E8((uint64_t)a2, (uint64_t)v23, v24);
  static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter(v25);
  sub_100041F70(v23, (uint64_t)v20, 0, (uint64_t)v122);
  v26 = TTRListType.PredefinedSmartListType.smartList(in:)(*a2, 0);
  if (v26)
  {
    *(_QWORD *)&v121[0] = sub_1000D39F0();
    *((_QWORD *)&v121[0] + 1) = &protocol witness table for REMSmartList;
    v27 = (void *)v26;
  }
  else
  {
    v27 = 0;
    v120 = 0u;
    v121[0] = 0u;
  }
  v103 = v26 != 0;
  v119 = v26;
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(0);
  v28 = v27;
  v29 = v113;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)(&v119, v16);
  v30 = v114;
  v109 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v109(v16, v114);
  sub_1000073A0((uint64_t)&v119, &qword_100649C80);
  v104 = a2;
  v31 = (void *)*a2;
  v108 = v28;
  v32 = v31;
  v33 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v32);
  LOBYTE(v31) = TTRUserDefaults.todayListIsGrouped.getter();

  v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
  v34(v16, v29, v30);
  v35 = type metadata accessor for TTRShowTodayGroupsDataModelSource(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v36 = TTRShowTodayGroupsDataModelSource.init(store:smartList:grouped:countCompleted:sortingStyle:canChangeSortingStyle:)(v32, v26, v31 & 1, 0, v16, 1);
  v34(v16, v29, v30);
  v37 = v115;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)(1, v103, v16);
  v38 = (void *)v122[0];
  v39 = v107;
  sub_10002B1E8((uint64_t)v37, (uint64_t)v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v40 = type metadata accessor for TTRShowTodayViewModelSource(0);
  v41 = (uint64_t *)swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  swift_retain(v36);
  v42 = v38;
  v43 = sub_10025587C(v36, v42, (uint64_t)v39, v41);
  swift_release(v36);

  sub_10002B1E8((uint64_t)v104, (uint64_t)v23, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v122, (uint64_t)&v119);
  swift_retain(v43);
  v104 = (_QWORD *)v43;
  sub_100042A94((uint64_t)v23, (uint64_t)&v119, v43, (uint64_t)&off_100609110, (uint64_t)v116);
  v44 = v105;
  sub_100042C0C((uint64_t)v105);
  v45 = (_BYTE *)type metadata accessor for TTRIShowTodayPresenter(0);
  v46 = *((unsigned int *)v45 + 12);
  v47 = *((unsigned __int16 *)v45 + 26);
  v107 = v45;
  v48 = swift_allocObject(v45, v46, v47);
  v49 = (uint64_t *)(v48 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource);
  *v49 = v36;
  v49[1] = (uint64_t)&protocol witness table for TTRShowTodayGroupsDataModelSource;
  v50 = v106;
  sub_10002B1E8((uint64_t)v44, (uint64_t)v106, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain(v36);
  v51 = v112;
  swift_unknownObjectRetain(v112);
  v52 = (_QWORD *)sub_1002A70CC((uint64_t)v50, v51, v48);
  sub_10001F544((uint64_t)v44, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v53 = v52[18];
  ObjectType = swift_getObjectType(v52[17], v54);
  v56 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 104);
  swift_retain(v52);
  v57 = v56(ObjectType, v53);
  if (v57)
  {
    v59 = v57;
    v60 = v58;
    v61 = swift_getObjectType(v57, v58);
    LOBYTE(v60) = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v61, v60);
    swift_release(v52);
    swift_unknownObjectRelease(v59);
    v62 = v60 & 1;
  }
  else
  {
    swift_release(v52);
    v62 = 0;
  }
  v63 = sub_100172EB4(v62, (uint64_t)v52);
  v106 = v64;
  v66 = v65;
  v68 = v67;
  v105 = (_BYTE *)swift_getObjectType(v65, v64);
  v52[3] = *(_QWORD *)(v68 + 8);
  v112 = v66;
  swift_unknownObjectWeakAssign(v52 + 2, v66);
  v69 = v52[18];
  v71 = swift_getObjectType(v52[17], v70);
  v72 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 104);
  swift_retain_n(v52, 2);
  v73 = v63;
  v74 = v72(v71, v69);
  v76 = v74;
  if (v74)
  {
    v77 = v75;
    v78 = swift_getObjectType(v74, v75);
    v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v78, v77);
    swift_release(v52);
    swift_unknownObjectRelease(v76);
    v76 = v79 & 1;
  }
  else
  {
    swift_release(v52);
  }
  v80 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v81 = v73;
  v82 = (void *)sub_1002A8974(v52, v73, v106, v76, 0, 1, 0, v80);
  swift_release(v52);

  v83 = *(void (**)(void *, _UNKNOWN **, _BYTE *, uint64_t))(v68 + 32);
  v84 = v82;
  v106 = v84;
  v83(v82, &off_1005FCD60, v105, v68);
  v85 = v122[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v122[0] + direct field offset for TTRRemindersListInteractor.delegate, &v118, 1, 0);
  *(_QWORD *)(v85 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v85, v52);
  v86 = v122[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v122[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v117, 1, 0);
  *(_QWORD *)(v86 + 8) = &protocol witness table for TTRShowTodayGroupsDataModelSource;
  swift_unknownObjectWeakAssign(v86, v36);
  swift_unknownObjectWeakAssign(v122[3] + 16, v84);
  v87 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v36 + 424);
  v88 = (uint64_t)v104;
  v89 = swift_retain(v104);
  v87(v89, &off_1005F5DA8);
  swift_retain(v88);
  v90 = swift_retain(v52);
  sub_10048D4EC(v90, (uint64_t)&off_1005F30C0);
  swift_release(v88);
  swift_release(v52);
  v91 = v116;
  v92 = *(_QWORD *)&v116[*(int *)(v110 + 28)];
  *(_QWORD *)(v92 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v92 + 16, v52);
  sub_100028CFC((uint64_t)&v123, (uint64_t)&v119);
  *(_OWORD *)((char *)v121 + 8) = v124;
  *(_OWORD *)((char *)&v121[1] + 8) = v125;
  v93 = v124 + 32;
  *(_QWORD *)(v124 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v93, v52);
  sub_100027F10(&v119);
  sub_100028CFC((uint64_t)&v126, (uint64_t)&v119);
  v94 = v127;
  v95 = v128;
  *((_QWORD *)&v121[0] + 1) = v127;
  *(_QWORD *)&v121[1] = v128;
  v97 = swift_getObjectType(v127, v96);
  v98 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128))(v95 + 48);
  swift_retain(v52);
  v99 = swift_unknownObjectRetain(v94);
  v98(v52, &off_1005F2FF0, v97, v95, v99);
  swift_unknownObjectRelease(v94);
  sub_100027F10(&v119);
  v100 = v111;
  v111[3] = v107;
  v100[4] = &off_1005F95A8;
  *v100 = v52;

  swift_release(v36);
  swift_release(v88);

  swift_unknownObjectRelease(v112);
  sub_10001F544((uint64_t)v91, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_10001F544((uint64_t)v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v109(v113, v114);
  sub_100043844((uint64_t)v122);
  return v106;
}

id TTRIShowTodayAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTodayAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowTodayAssembly()
{
  return objc_opt_self(_TtC9Reminders21TTRIShowTodayAssembly);
}

id TTRIShowTodayAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTodayAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10025587C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a2;
  v45 = a3;
  v46 = *a4;
  v7 = type metadata accessor for REMAnalyticsEvent(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList) = 0;
  v17 = (uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource);
  *v17 = 0;
  v17[1] = 0;
  v18 = (char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount;
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_currentLocation) = 0;
  *(uint64_t *)((char *)a4
             + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems) = (uint64_t)&_swiftEmptySetSingleton;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders) = (uint64_t)&_swiftEmptySetSingleton;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot) = 0;
  *(uint64_t *)((char *)a4
             + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440);
  v20 = swift_retain(a4);
  v21 = v19(v20);
  v22 = *(void **)((char *)a4 + v16);
  *(uint64_t *)((char *)a4 + v16) = v21;

  v23 = *v17;
  *v17 = a1;
  v17[1] = (uint64_t)&protocol witness table for TTRShowTodayGroupsDataModelSource;
  swift_retain(a1);
  swift_release(a4);
  swift_unknownObjectRelease(v23);
  sub_10002B1E8(a3, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain(a1);
  v24 = sub_1002A8704(a1, (uint64_t)v44, (uint64_t)v15, (uint64_t)a4);
  swift_retain(v24);
  sub_1001D190C((uint64_t)v12);
  v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
  sub_10046ADD4((uint64_t)v12);
  v26 = sub_1000073A0((uint64_t)v12, &qword_100649CA0);
  v27 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v26);
  type metadata accessor for REMAnalyticsManager(0);
  v28 = v27;
  v29 = static REMAnalyticsManager.shared.getter();
  v30 = sub_10002A750(&qword_100645348);
  v31 = &v9[*(int *)(v30 + 48)];
  v32 = &v9[*(int *)(v30 + 80)];
  v33 = enum case for REMRemindersOpenUserOperation.SmartListType.today(_:);
  v34 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v9, v33, v34);
  v35 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v36 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v9, v35, v36);
  *(_QWORD *)v31 = TTRUserDefaults.activitySessionId.getter(v37);
  *((_QWORD *)v31 + 1) = v38;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v32 = _typeName(_:qualified:)(v46, 0);
  *((_QWORD *)v32 + 1) = v39;
  v41 = v47;
  v40 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v9, enum case for REMAnalyticsEvent.openListUserOperation(_:), v48);
  REMAnalyticsManager.post(event:)(v9);

  swift_release(v29);
  swift_release(v24);
  sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v40);
  return v24;
}

uint64_t sub_100255BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100651C88);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100651C88);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100255DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100651CC8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100651CC8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double sub_100255E4C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  if (qword_10063D578 != -1)
    swift_once(&qword_10063D578, sub_100255DBC);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100651CC8);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v16 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v15 = sub_100027E40(a1, a2, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "PencilAutoCommitTracker will begin writing in %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v12 = v3[5];
  v3[4] = a1;
  v3[5] = a2;
  swift_bridgeObjectRelease(v12);
  v13 = v3[2];
  if (v13)
  {
    swift_bridgeObjectRetain(a2);
    swift_unknownObjectRetain(v13);
    sub_10041F250();
    swift_unknownObjectRelease(v13);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRetain(a2).n128_u64[0];
  }
  return result;
}

double sub_100256030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = a2;
  v49 = a1;
  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v43 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100651D90);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v45);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v11);
  v46 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - v14;
  __chkstk_darwin(v16);
  v19 = (char *)&v42 - v18;
  v48 = v2;
  if (*(_QWORD *)(v2 + 16))
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v17);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20(v19, 0, 1, v3);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v20((char *)&v42 - v18, 1, 1, v3);
  }
  v21 = v49;
  v44 = v49 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item;
  v22 = sub_1000493D8(v49 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)v10);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v20(v15, 0, 1, v3);
  v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100042F74((uint64_t)v19, (uint64_t)v8);
  sub_100042F74((uint64_t)v15, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v8, 1, v3) == 1)
  {
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
    sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_1006463C0);
    if (v24(v23, 1, v3) == 1)
    {
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006463C0);
      goto LABEL_16;
    }
  }
  else
  {
    v25 = v46;
    sub_100042F74((uint64_t)v8, v46);
    if (v24(v23, 1, v3) != 1)
    {
      v36 = v43;
      sub_1000CDFA4(v23, v43);
      v37 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v25, v36);
      sub_10001F544(v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
      sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_1006463C0);
      sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006463C0);
      if ((v37 & 1) != 0)
        goto LABEL_16;
      goto LABEL_10;
    }
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
    sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_1006463C0);
    sub_10001F544(v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100651D90);
LABEL_10:
  if (qword_10063D578 != -1)
    swift_once(&qword_10063D578, sub_100255DBC);
  v26 = type metadata accessor for Logger(0);
  sub_100012DC4(v26, (uint64_t)qword_100651CC8);
  v27 = swift_unknownObjectRetain_n(v21, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v51 = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = sub_10008945C();
    v33 = TTRTreeStorageItem.treeItemDescription.getter(v45, v32);
    v35 = v34;
    v50 = sub_100027E40(v33, v34, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v30 + 4, v30 + 12);
    swift_unknownObjectRelease_n(v21, 2);
    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "PencilAutoCommitTracker got pencilWritingStateReporter for %s", v30, 0xCu);
    swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(v21, 2);
  }
LABEL_16:
  v39 = v47;
  v38 = v48;
  v40 = *(_QWORD *)(v48 + 16);
  *(_QWORD *)(v48 + 16) = v21;
  *(_QWORD *)(v38 + 24) = v39;
  swift_unknownObjectRelease(v40);
  *(_QWORD *)&result = swift_unknownObjectRetain(v21).n128_u64[0];
  return result;
}

void sub_100256510(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  if (qword_10063D578 != -1)
    swift_once(&qword_10063D578, sub_100255DBC);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100651CC8);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v26[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v27 = sub_100027E40(a1, a2, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "PencilAutoCommitTracker did finish writing in %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v12 = v2[4];
  v13 = v2[5];
  if (!v13 || (v12 != a1 || v13 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a1, a2, 0) & 1) == 0)
  {
    v14 = swift_retain_n(v2, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v27 = v18;
      *(_DWORD *)v17 = 136315138;
      *(_OWORD *)v26 = *((_OWORD *)v2 + 2);
      v19 = sub_10002A750(&qword_100646428);
      v20 = Optional.descriptionOrNil.getter(v19);
      v22 = v21;
      v26[0] = sub_100027E40(v20, v21, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v26, &v26[1], v17 + 4, v17 + 12);
      swift_release_n(v3, 2);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "PencilAutoCommitTracker: not getting didFinish first for %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

      swift_release_n(v2, 2);
    }
  }
  v23 = v3[5];
  v3[4] = 0;
  v3[5] = 0;
  swift_bridgeObjectRelease(v23);
  v24 = v3[2];
  if (v24)
  {
    v25 = *(double *)&qword_100651CE0;
    swift_unknownObjectRetain(v3[2]);
    sub_10041EA18(v25);
    swift_unknownObjectRelease(v24);
  }
}

uint64_t sub_100256858()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for TTRIRemindersListPencilAutoCommitTracker()
{
  return objc_opt_self(_TtC9Reminders40TTRIRemindersListPencilAutoCommitTracker);
}

id sub_100256A08()
{
  return sub_10025715C(type metadata accessor for TTRIApplication);
}

uint64_t sub_100256A14@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t result;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v3 = *a1;
  v4 = objc_opt_self(UIWindowScene);
  result = swift_dynamicCastObjCClass(v3, v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = v3;
    if (!objc_msgSend(v6, "_isKeyWindowScene"))
    {

      goto LABEL_7;
    }
    v8 = objc_msgSend(v6, "delegate");

    if (!v8)
    {
LABEL_7:
      result = 0;
      goto LABEL_8;
    }
    v9 = type metadata accessor for TTRIWindowSceneController(0);
    result = swift_dynamicCastClass(v8, v9);
    if (!result)
    {
      swift_unknownObjectRelease(v8);
      goto LABEL_7;
    }
  }
LABEL_8:
  *a2 = result;
  return result;
}

void sub_100256D94(void *a1)
{
  void *v1;
  id v3;
  id v4;
  char v5;
  Class isa;
  Class v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  Class v21;
  Class v22;
  _QWORD v23[5];
  objc_super v24;

  v24.receiver = v1;
  v24.super_class = (Class)type metadata accessor for TTRIAppDelegate();
  objc_msgSendSuper2(&v24, "buildMenuWithBuilder:", a1);
  sub_100005ED8(0, &qword_100651F78, UIMenuSystem_ptr);
  v3 = objc_msgSend(a1, "system");
  v4 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  v5 = static NSObject.== infix(_:_:)(v3, v4);

  if ((v5 & 1) != 0)
  {
    isa = sub_1004FF744().super.super.isa;
    objc_msgSend(a1, "insertChildMenu:atStartOfMenuForIdentifier:", isa, UIMenuFile);

    v7 = sub_1004FFA74();
    objc_msgSend(a1, "insertChildMenu:atEndOfMenuForIdentifier:", v7, UIMenuEdit);

    if (!UIApp)
    {
      __break(1u);
      return;
    }
    v8 = objc_msgSend(UIApp, "connectedScenes");
    v9 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
    v10 = sub_100017608((unint64_t *)&qword_100651F58, &qword_100651F50, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

    v23[4] = v11;
    v12 = sub_10002A750(&qword_100651F60);
    v13 = type metadata accessor for TTRIWindowSceneController(0);
    v14 = sub_100023FEC((unint64_t *)&qword_100651F68, &qword_100651F60, (uint64_t)&protocol conformance descriptor for Set<A>);
    Sequence.firstMap<A>(_:)(v23, sub_100256A14, 0, v12, v13, v14);
    swift_bridgeObjectRelease(v11);
    v15 = (void *)v23[0];
    if (v23[0])
    {
      v16 = (_QWORD *)(v23[0] + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
      swift_beginAccess(v23[0] + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface, v23, 0, 0);
      v17 = v16[3];
      if (v17)
      {
        v18 = sub_10001413C(v16, v17);
        v19 = *(_QWORD *)(*sub_10001413C((_QWORD *)(*v18 + 48), *(_QWORD *)(*v18 + 72)) + 32);
        swift_unknownObjectRetain(v19);
        v20 = sub_1003410BC();

        swift_unknownObjectRelease(v19);
LABEL_8:
        v21 = sub_1005005FC((uint64_t)v20).super.super.isa;
        objc_msgSend(a1, "insertChildMenu:atStartOfMenuForIdentifier:", v21, UIMenuView, swift_bridgeObjectRelease(v20).n128_f64[0]);

        v22 = sub_100501134();
        objc_msgSend(a1, "insertChildMenu:atEndOfMenuForIdentifier:", v22, UIMenuFormat);

        return;
      }

    }
    v20 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
}

id sub_1002570E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___geoService;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___geoService);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate____lazy_storage___geoService);
  }
  else
  {
    v4 = v0;
    type metadata accessor for TTRGeoLocationService(0);
    v5 = (void *)static TTRGeoLocationService.newService()();
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_100257150()
{
  return sub_10025715C(type metadata accessor for TTRIAppDelegate);
}

id sub_10025715C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100257240(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(id *)(result + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
    v5 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v4);
    v6 = sub_100043358(v4, (uint64_t)v5);
    sub_100358410();

    return swift_release(v6);
  }
  return result;
}

void sub_1002572E0(void *a1, int a2, void *a3, void *a4, void *aBlock, void (*a6)(id, void *))
{
  void *v10;
  id v11;
  id v12;
  id v13;

  v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  a6(v12, v10);
  _Block_release(v10);
  _Block_release(v10);

}

void sub_1002573CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[5];
  uint64_t v20;

  v1 = v0;
  v2 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler);
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler
                 + 8) & 1) == 0)
  {
    v3 = *v2;
    v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v4, "endBackgroundTask:", v3);

    *v2 = 0;
    *((_BYTE *)v2 + 8) = 1;
    if (qword_10063D580 != -1)
      swift_once(&qword_10063D580, sub_10000914C);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100651DA0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "application did tear down background task for application visibility change handler", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v11 = swift_allocObject(&unk_1005F9620, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  v19[4] = sub_1002583B8;
  v20 = v11;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100006378;
  v19[3] = &unk_1005F9638;
  v12 = _Block_copy(v19);
  swift_release(v20);
  v13 = objc_msgSend(v10, "beginBackgroundTaskWithExpirationHandler:", v12);
  _Block_release(v12);

  *v2 = (uint64_t)v13;
  *((_BYTE *)v2 + 8) = 0;
  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_100651DA0);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "application did set up background task for application visibility change handler", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

}

uint64_t sub_100257670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100651DA0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "application will expire background task for application visibility change handler", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v8 = (void *)result;
    v9 = sub_100005D78();

    v10 = *(_QWORD *)(v9 + 64);
    if (v10)
    {
      *(_QWORD *)(v9 + 64) = 0;
      swift_release(v10);
      if (qword_10063D6A8 != -1)
        swift_once(&qword_10063D6A8, sub_10000758C);
      v11 = sub_100012DC4(v2, (uint64_t)qword_100656CC8);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Application visibility change handler did tear down subscription for timeout", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

    }
    sub_100012E1C(1, 0);
    return swift_release(v9);
  }
  return result;
}

uint64_t sub_100257854(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  BOOL v13;
  void *v14;

  result = UIApp;
  if (UIApp)
  {
    v5 = objc_msgSend(UIApp, "connectedScenes");
    v6 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
    v7 = sub_100017608((unint64_t *)&qword_100651F58, &qword_100651F50, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

    v9 = sub_10002A750(&qword_100651F60);
    v10 = type metadata accessor for TTRIWindowSceneController(0);
    v11 = sub_100023FEC((unint64_t *)&qword_100651F68, &qword_100651F60, (uint64_t)&protocol conformance descriptor for Set<A>);
    Sequence.firstMap<A>(_:)(&v14, sub_100256A14, 0, v9, v10, v11);
    swift_bridgeObjectRelease(v8);
    v12 = v14;
    if (v14)
    {
      v13 = sub_10050A39C(a1, a2);

    }
    else
    {
      return 0;
    }
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002579A4(void *a1, void (**aBlock)(_QWORD, _QWORD))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  void *v13;

  if (UIApp)
  {
    v4 = objc_msgSend(UIApp, "connectedScenes");
    v5 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
    v6 = sub_100017608((unint64_t *)&qword_100651F58, &qword_100651F50, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

    v8 = sub_10002A750(&qword_100651F60);
    v9 = type metadata accessor for TTRIWindowSceneController(0);
    v10 = sub_100023FEC((unint64_t *)&qword_100651F68, &qword_100651F60, (uint64_t)&protocol conformance descriptor for Set<A>);
    Sequence.firstMap<A>(_:)(&v13, sub_100256A14, 0, v8, v9, v10);
    swift_bridgeObjectRelease(v7);
    v11 = v13;
    if (v13)
    {
      v12 = sub_10050A584(a1);

    }
    else
    {
      v12 = 0;
    }
    ((void (**)(_QWORD, BOOL))aBlock)[2](aBlock, v12);
  }
  else
  {
    _Block_release(aBlock);
    __break(1u);
  }
}

uint64_t sub_100257B04(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100651DA0);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v12 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(a2);
    v11 = sub_100027E40(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "UNEXPECTED: application willContinueUserActivityWithType {userActivityType: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return 0;
}

void sub_100257CA4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100651DA0);
  v10 = a1;
  v3 = Logger.logObject.getter(v10);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v12 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = NSUserActivity.ttrDescription.getter();
    v9 = v8;
    v11 = sub_100027E40(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "application didUpdate userActivity {userActivity: %s}", v5, 0xCu);
    swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_100257E5C(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100651DA0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = NSUserActivity.ttrDescription.getter();
    v10 = v9;
    v12 = sub_100027E40(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "UNEXPECTED: application continue userActivity {userActivity: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  return 0;
}

void sub_100257FF4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100651DA0);
  v9 = a1;
  v3 = Logger.logObject.getter(v9);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v10 = v9;
    v7 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v5 + 4, v5 + 12);
    *v6 = v9;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "UNEXPECTED: application userDidAcceptCloudKitShareWith {cloudKitShareMetadata: %@}", v5, 0xCu);
    v8 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

double sub_1002581A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  id v10;
  char v11;
  double result;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_100651DA0);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"WindowScene did enter background", 32, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
  static TTRAppDelegateUtils.triggerSync(store:reason:)();

  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Update AppShortcut parameters", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  sub_100258350();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  TTRWidgetRefresher.tearDownSubscriptionToReloadWidgetTimelinesUponStoreChange()();
  TTRWidgetRefresher.reloadWidgetTimelines()();
  v8 = sub_100005D78();
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "applicationState");

  v11 = *(_BYTE *)(v8 + 32);
  *(_BYTE *)(v8 + 32) = v10 == 0;
  sub_10000E280(v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t sub_100258350()
{
  unint64_t result;

  result = qword_100651F20;
  if (!qword_100651F20)
  {
    result = swift_getWitnessTable(&unk_100528DF0, &type metadata for TTRAppShortcutsProvider);
    atomic_store(result, (unint64_t *)&qword_100651F20);
  }
  return result;
}

uint64_t sub_100258394()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002583B8()
{
  uint64_t v0;

  return sub_100257670(v0);
}

uint64_t sub_1002583C0()
{
  uint64_t v0;

  return sub_100257240(v0);
}

uint64_t sub_1002583C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002583EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10029FA60(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100258404(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100651DA0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v5, "request");
    v11 = objc_msgSend(v10, "content");

    v12 = objc_msgSend(v11, "body");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v17 = sub_100027E40(v13, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "App willPresent notification: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, 27);
}

void sub_100258624(void *a1, void (**a2)(_QWORD, __n128))
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  void *v24;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100651DA0);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v24 = (void *)v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v5, "actionIdentifier");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v23 = sub_100027E40(v11, v13, (uint64_t *)&v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "App did receive UNNotificationResponse: {actionIdentifier=%s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  if (UIApp)
  {
    v14 = objc_msgSend(UIApp, "connectedScenes");
    v15 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
    v16 = sub_100017608((unint64_t *)&qword_100651F58, &qword_100651F50, UIScene_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, v15, v16);

    v23 = v17;
    v18 = sub_10002A750(&qword_100651F60);
    v19 = type metadata accessor for TTRIWindowSceneController(0);
    v20 = sub_100023FEC((unint64_t *)&qword_100651F68, &qword_100651F60, (uint64_t)&protocol conformance descriptor for Set<A>);
    Sequence.firstMap<A>(_:)(&v24, sub_100256A14, 0, v18, v19, v20);
    v21 = swift_bridgeObjectRelease(v17);
    v22 = v24;
    if (v24)
    {
      sub_10050A91C(v5);

    }
    a2[2](a2, v21);
  }
  else
  {
    _Block_release(a2);
    __break(1u);
  }
}

void sub_100258910(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_10063D580 != -1)
    swift_once(&qword_10063D580, sub_10000914C);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100651DA0);
  v13 = a1;
  v3 = Logger.logObject.getter(v13);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    if (a1)
    {
      v7 = objc_msgSend(v13, "request");
      v8 = objc_msgSend(v7, "content");

      v9 = objc_msgSend(v8, "body");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

    }
    else
    {
      v12 = 0xE300000000000000;
      v10 = 7104878;
    }
    v14 = sub_100027E40(v10, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "App openSettingsFor: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, &type metadata for Any[8]);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_100258B3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100258B60()
{
  id v0;

  v0 = sub_1002570E4();
  TTRGeoLocationService.requestLocationAuthorization()();

}

void *sub_100258BB0(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

_QWORD *sub_100258E20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *result;
  void *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23[24];

  v1 = sub_10002A750((uint64_t *)&unk_100646680);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (char *)objc_msgSend(v0, "containerView", v6);
  v10 = OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache;
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  swift_retain();

  result = objc_msgSend(v0, "containerView", swift_release().n128_f64[0]);
  if (result)
  {
    v12 = result;
    v13 = (uint64_t)result + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
    swift_beginAccess((char *)result + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList, v23, 0, 0);
    sub_10001F5C4(v13, (uint64_t)v3);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10001FCE8((uint64_t)v3);
      return _swiftEmptyArrayStorage;
    }
    sub_10002A810((uint64_t)v3, (uint64_t)v8);
    v14 = (char *)objc_msgSend(v0, "containerView");
    *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = *(_QWORD *)&v0[v10];
    swift_retain();

    result = objc_msgSend(v0, "containerView", swift_release().n128_f64[0]);
    if (result)
    {
      v15 = result;
      v16 = sub_10002A8F8();
      __chkstk_darwin(v16);
      *(&v21 - 2) = (uint64_t)v8;
      v17 = sub_100258BB0((uint64_t (*)(id *))sub_1002508D4, (uint64_t)(&v21 - 4), (uint64_t)v16);

      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
        v19 = swift_allocObject(v18, 40, 7);
        *(_OWORD *)(v19 + 16) = xmmword_100521140;
        *(_QWORD *)(v19 + 32) = v17;
        v22 = v19;
        specialized Array._endMutation()(v19);
        v20 = v22;
        sub_10002A7D4((uint64_t)v8);
        return (_QWORD *)v20;
      }
      sub_10002A7D4((uint64_t)v8);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1002591D0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  _BYTE v13[40];
  _BYTE v14[40];
  _BYTE v15[40];

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_delegate);
  if (!Strong)
    return objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", 0);
  v6 = Strong;
  v7 = objc_msgSend(a2, "items");
  v8 = sub_100041E10();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  sub_100339390(v9, a1, (uint64_t)v13);
  sub_10000F614((uint64_t)v13, (uint64_t)v14, &qword_100652080);
  if (v14[32] == 255)
  {
    v10 = 0;
  }
  else
  {
    sub_10000F614((uint64_t)v14, (uint64_t)v15, &qword_100640FF0);
    sub_1000770E8((uint64_t)v13);
    v10 = 3;
  }
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIDropProposal), "initWithDropOperation:", v10);
  swift_unknownObjectRelease(v6);
  return v12;
}

uint64_t sub_100259320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100652088);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100652088);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002593B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  _BYTE v18[80];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  _BYTE v30[48];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int16 v34;
  _BYTE v35[128];
  uint64_t v36;

  if (qword_10063D898 != -1)
    swift_once(&qword_10063D898, sub_1004FEB88);
  v0 = qword_100673A50;
  v36 = qword_100673A50;
  v1 = sub_10002A750(&qword_1006487F0);
  inited = swift_initStackObject(v1, v35);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  LOBYTE(v31) = 0;
  v3 = sub_10025AE84();
  swift_bridgeObjectRetain(v0);
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v31, &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem, v3);
  *(_BYTE *)(inited + 72) = 1;
  LOBYTE(v31) = 1;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 80), &v31, &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem, v3);
  *(_BYTE *)(inited + 120) = 1;
  LOBYTE(v31) = 4;
  v34 = 256;
  v4 = sub_100254D48();
  v5 = Array<A>.index<A>(forInsertingAt:where:)(&v31, sub_1004FEB84, 0, v0, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v7 = v6;
  sub_100254D8C((uint64_t)&v31, (uint64_t)v30);
  if ((v7 & 1) != 0)
  {
    sub_100254D8C((uint64_t)v30, (uint64_t)&v19);
    if (v25)
    {
      if (v25 == 1)
      {
        sub_100254DD4((uint64_t)&v19, (uint64_t)&v26);
LABEL_13:
        sub_1000073A0((uint64_t)&v26, &qword_100651C48);
        v5 = *(_QWORD *)(v0 + 16);
        goto LABEL_14;
      }
      if (v24 || v22 | v23 | v19 | v21 | v20)
      {
        v28 = 0;
        v26 = 0u;
        v27 = 0u;
        v29 = -1;
        goto LABEL_13;
      }
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v29 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v19, (uint64_t)&v26);
    }
    sub_1000073A0((uint64_t)&v26, &qword_100651C48);
    v5 = 0;
  }
LABEL_14:
  sub_1000073A0((uint64_t)v30, &qword_100651C40);
  sub_10043AE54(v5, v5, inited);
  swift_bridgeObjectRelease(inited);
  sub_1000073A0((uint64_t)&v31, &qword_100651C40);
  LOBYTE(v31) = 2;
  AnyHashable.init<A>(_:)(&v26, &v31, &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem, v3);
  v29 = 1;
  v31 = 1;
  v32 = 0u;
  v33 = 0u;
  v34 = 512;
  v8 = swift_initStackObject(v1, v18);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  sub_10017C4F0((uint64_t)&v26, v8 + 32);
  v9 = v36;
  v10 = Array<A>.index<A>(forInsertingAt:where:)(&v31, sub_1004FEB84, 0, v36, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v12 = v11;
  sub_100254D8C((uint64_t)&v31, (uint64_t)v30);
  if ((v12 & 1) != 0)
  {
    sub_100254D8C((uint64_t)v30, (uint64_t)&v19);
    if (v25)
    {
      if (v25 == 1)
      {
        sub_100254DD4((uint64_t)&v19, (uint64_t)&v14);
LABEL_24:
        sub_1000073A0((uint64_t)&v14, &qword_100651C48);
        v10 = *(_QWORD *)(v9 + 16);
        goto LABEL_25;
      }
      if (v24 || v22 | v23 | v19 | v21 | v20)
      {
        v16 = 0;
        v14 = 0u;
        v15 = 0u;
        v17 = -1;
        goto LABEL_24;
      }
      v16 = 0;
      v14 = 0u;
      v15 = 0u;
      v17 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v19, (uint64_t)&v14);
    }
    sub_1000073A0((uint64_t)&v14, &qword_100651C48);
    v10 = 0;
  }
LABEL_25:
  sub_1000073A0((uint64_t)v30, &qword_100651C40);
  sub_10043AE54(v10, v10, v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v8 + 32, *(_QWORD *)(v8 + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  sub_1000073A0((uint64_t)&v31, &qword_100651C40);
  sub_100254E10(&v26);
  return v36;
}

uint64_t sub_1002597B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  int v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double (*v82)(uint64_t);
  uint64_t v83;
  _BYTE v84[15];
  char v85;
  _QWORD v86[4];

  v1 = v0;
  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  v4 = &v84[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10002A750(&qword_10064E538);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)&v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = (uint64_t *)&v84[-v9];
  AnyHashable.base.getter(v86, v11);
  if (!swift_dynamicCast(&v85, v86, &type metadata for Any[8], &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem, 6))return 0;
  if (!v85)
  {
    v40 = *(_QWORD *)(v0 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 136), v12);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 72))(ObjectType, v40);
    if (!v42)
    {
      v78 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v10, 1, 1, v78);
      return 0;
    }
    v44 = v42;
    v45 = v43;
    v46 = swift_getObjectType(v42, v43);
    (*(void (**)(uint64_t))(*(_QWORD *)(v45 + 8) + 8))(v46);
    swift_unknownObjectRelease(v44);
    v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
    v47 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v10, 0, 1, v20);
    v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v47 + 88))(v10, v20);
    if (v22 == enum case for REMHashtagLabelSpecifier.labels(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v47 + 96))(v10, v20);
      v48 = *v10;
      swift_bridgeObjectRelease(v10[1]);
      v24 = (char *)v10 + *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
      if (*(_QWORD *)(v48 + 16))
      {
        v49 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v24, v49);
        v50 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule + 8);
        v52 = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule), v51);
        v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v52, v50);
        if (*(_QWORD *)(v48 + 16) == 1)
        {
          v54 = v53;
          v55 = sub_1000CE788(v48);
          v57 = v56;
          swift_bridgeObjectRelease(v48);
          if (v57)
          {
            v58 = v54 & 1;
            sub_100254C94();
            v59 = static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
            v61 = v60;
            v62 = String._bridgeToObjectiveC()();
            v63 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v62);

            v64 = swift_allocObject(&unk_1005F97C8, 24, 7);
            swift_weakInit(v64 + 16, v1);
            v65 = (_QWORD *)swift_allocObject(&unk_1005F9818, 40, 7);
            v65[2] = v64;
            v65[3] = v55;
            v65[4] = v57;
            return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v59, v61, 0, 0, v63, 0, 0, 0, 0, v58, 0, sub_10025ACB4, v65);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v48);
        }
        return 0;
      }
      v79 = v48;
      goto LABEL_30;
    }
    goto LABEL_16;
  }
  if (v85 != 1)
  {
    v67 = *(_QWORD *)(v0 + 144);
    v68 = swift_getObjectType(*(_QWORD *)(v0 + 136), v12);
    (*(void (**)(uint64_t, uint64_t))(v67 + 136))(v68, v67);
    v20 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v4, 1, v20) == 1)
    {
      sub_1000073A0((uint64_t)v4, &qword_100649CA0);
      return 0;
    }
LABEL_21:
    v70 = v4[*(int *)(v20 + 92)];
    sub_10025ABEC((uint64_t)v4);
    if (v70 == 1)
    {
      v71 = String._bridgeToObjectiveC()();
      v72 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v71);

      sub_100254C94();
      v73 = static TTRLocalizableStrings.RemindersList.createSmartList.getter();
      v75 = v74;
      v76 = swift_allocObject(&unk_1005F97C8, 24, 7);
      swift_weakInit(v76 + 16, v1);
      v81 = 0;
      v82 = sub_10025AC4C;
      v83 = v76;
      v37 = v73;
      v38 = v75;
      v39 = v72;
      return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v37, v38, 0, 0, v39, 0, 0, 0, 0, v81, 0, v82, v83);
    }
    return 0;
  }
  v13 = *(_QWORD *)(v0 + 144);
  v14 = swift_getObjectType(*(_QWORD *)(v0 + 136), v12);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 72))(v14, v13);
  if (!v15)
  {
    v77 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v7, 1, 1, v77);
    return 0;
  }
  v17 = v15;
  v18 = v16;
  v19 = swift_getObjectType(v15, v16);
  (*(void (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(v19);
  swift_unknownObjectRelease(v17);
  v20 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
  v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v21 + 88))(v7, v20);
  if (v22 != enum case for REMHashtagLabelSpecifier.labels(_:))
  {
LABEL_16:
    if (v22 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
      || v22 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
    {
      return 0;
    }
    _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
    __break(1u);
    goto LABEL_21;
  }
  (*(void (**)(uint64_t *, uint64_t))(v21 + 96))(v7, v20);
  v23 = *v7;
  swift_bridgeObjectRelease(v7[1]);
  v24 = (char *)v7 + *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
  if (!*(_QWORD *)(v23 + 16))
  {
    v79 = v23;
LABEL_30:
    swift_bridgeObjectRelease(v79);
    v80 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v24, v80);
    return 0;
  }
  v25 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule + 8);
  v28 = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule), v27);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v28, v26) & 1;
  sub_100254C94();
  v30 = static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(*(_QWORD *)(v23 + 16));
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v33);

  v35 = swift_allocObject(&unk_1005F97C8, 24, 7);
  swift_weakInit(v35 + 16, v1);
  v36 = swift_allocObject(&unk_1005F97F0, 32, 7);
  *(_QWORD *)(v36 + 16) = v35;
  *(_QWORD *)(v36 + 24) = v23;
  v82 = sub_10025AC80;
  v83 = v36;
  v81 = v29;
  v37 = v30;
  v38 = v32;
  v39 = v34;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v37, v38, 0, 0, v39, 0, 0, 0, 0, v81, 0, v82, v83);
}

double sub_100259E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  _OWORD v22[2];
  uint64_t v23;
  __int128 v24;
  char v25;

  v7 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v21, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if (qword_10063D588 != -1)
      swift_once(&qword_10063D588, sub_100259320);
    v13 = type metadata accessor for Logger(0);
    sub_100012DC4(v13, (uint64_t)qword_100652088);
    v14 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Reminders list show rename tag UI", 33, 2, v14);
    swift_bridgeObjectRelease(v14);
    v15 = *(_QWORD *)(v12 + 88);
    memset(v22, 0, sizeof(v22));
    v23 = 0;
    v24 = xmmword_1005218A0;
    v25 = 0;
    v16 = swift_unknownObjectWeakLoadStrong(v15 + 16);
    if (v16)
    {
      v17 = v16;
      v18 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
      v19 = swift_allocObject(&unk_1005F9840, 136, 7);
      *(_QWORD *)(v19 + 16) = 0;
      *(_QWORD *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = a3;
      *(_QWORD *)(v19 + 48) = a4;
      *(_BYTE *)(v19 + 56) = 1;
      sub_1000A25CC((uint64_t)v22, v19 + 64);
      *(_QWORD *)(v19 + 128) = v17;
      swift_unknownObjectRetain_n(v15, 2);
      swift_bridgeObjectRetain(a4);
      sub_100148368((uint64_t)v9, (uint64_t)&unk_100652A10, v19);
      swift_release();
      swift_unknownObjectRelease(v15);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10025A080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _OWORD v20[2];
  uint64_t v21;
  __int128 v22;
  char v23;

  v5 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    if (qword_10063D588 != -1)
      swift_once(&qword_10063D588, sub_100259320);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100652088);
    v12 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Reminders list delete tag", 25, 2, v12);
    swift_bridgeObjectRelease(v12);
    v13 = *(_QWORD *)(v10 + 88);
    memset(v20, 0, sizeof(v20));
    v21 = 0;
    v22 = xmmword_1005218A0;
    v23 = 0;
    v14 = swift_unknownObjectWeakLoadStrong(v13 + 16);
    if (v14)
    {
      v15 = v14;
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
      v17 = swift_allocObject(&unk_1005F9868, 136, 7);
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = a3;
      *(_QWORD *)(v17 + 48) = 0;
      *(_BYTE *)(v17 + 56) = 0;
      sub_1000A25CC((uint64_t)v20, v17 + 64);
      *(_QWORD *)(v17 + 128) = v15;
      swift_unknownObjectRetain_n(v13, 2);
      swift_bridgeObjectRetain(a3);
      sub_100148368((uint64_t)v7, (uint64_t)&unk_100652A18, v17);
      swift_release();
      swift_unknownObjectRelease(v13);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10025A260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_10025A2B4();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10025A2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D588 != -1)
    swift_once(&qword_10063D588, sub_100259320);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_100652088);
  v13 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders list create custom smart list from current hashtags state", 67, 2, v13);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v0 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 136), v15);
  (*(void (**)(uint64_t, uint64_t))(v14 + 136))(ObjectType, v14);
  v17 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v11, 1, v17) == 1)
  {
    sub_1000073A0((uint64_t)v11, &qword_100649CA0);
    return;
  }
  v18 = v11[*(int *)(v17 + 92)];
  sub_10025ABEC((uint64_t)v11);
  if (v18 == 1)
  {
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 72))(ObjectType, v14);
    if (v19)
    {
      v21 = v19;
      v22 = v20;
      v23 = swift_getObjectType(v19, v20);
      (*(void (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 8))(v23);
      swift_unknownObjectRelease(v21);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 152);
      if (Strong)
      {
        v26 = Strong;
        v27 = swift_getObjectType(Strong, v25);
        if (swift_conformsToProtocol2(v27, &protocol descriptor for TTRIShowTaggedModuleDelegate))
          v28 = v26;
        else
          v28 = 0;
        if (v28)
        {
          sub_10001413C((_QWORD *)(v28 + 48), *(_QWORD *)(v28 + 72));
          swift_retain();
          sub_10029DEC4((uint64_t)v8);
          swift_unknownObjectRelease(v26);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          swift_release();
          return;
        }
        swift_unknownObjectRelease(v26);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }
}

uint64_t sub_10025A53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  sub_100152358(a1);
  result = swift_unknownObjectWeakLoadStrong(v1 + 152);
  if (result)
  {
    v5 = result;
    ObjectType = swift_getObjectType(result, v4);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowTaggedModuleDelegate))
      v7 = v5;
    else
      v7 = 0;
    if (v7)
    {
      sub_10001413C((_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 72));
      swift_retain();
      sub_10029E21C(a1);
      swift_release();
    }
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10025A5D0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource));
  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule));
}

uint64_t sub_10025A5FC()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10025A64C()
{
  return type metadata accessor for TTRIShowTaggedPresenter(0);
}

uint64_t type metadata accessor for TTRIShowTaggedPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1006520D8;
  if (!qword_1006520D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowTaggedPresenter);
  return result;
}

uint64_t sub_10025A690(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_10052BCD8;
  v2[1] = &unk_10052BCD8;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 2296);
}

uint64_t sub_10025A6D0(int a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t Strong;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  os_log_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v63 = a1;
  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v59 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v59 - v9;
  v66 = type metadata accessor for REMHashtagLabelCollection(0);
  v68 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v1;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource], v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13);
  v18 = v17;
  v19 = swift_getObjectType(v16, v17);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18);
  REMHashtagLabelCollection.init(labels:)(v20);
  v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21(v19, v18);
  v67 = v12;
  REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)(v12, 1);
  v22 = v2;
  v23 = v2;
  v24 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v25 = v24(v8, v23);
  if ((REMHashtagLabelSpecifier.isEmpty.getter(v25) & 1) != 0)
  {
    if (qword_10063D588 != -1)
      swift_once(&qword_10063D588, sub_100259320);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100012DC4(v26, (uint64_t)qword_100652088);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    v30 = v22;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "TTRIShowTaggedPresenter: represented list was deleted", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    objc_msgSend(v65, "representedListWasDeleted");
    goto LABEL_7;
  }
  if ((v63 & 1) != 0)
  {
    if (qword_10063D588 != -1)
      swift_once(&qword_10063D588, sub_100259320);
    v33 = type metadata accessor for Logger(0);
    sub_100012DC4(v33, (uint64_t)qword_100652088);
    v34 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v30 = v22;
    v34(v64, v10, v22);
    v35 = swift_unknownObjectRetain_n(v16, 2);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc(22, -1);
      v63 = v38;
      v40 = v39;
      v62 = swift_slowAlloc(64, -1);
      v70 = v62;
      *(_DWORD *)v40 = 136315394;
      v60 = v40 + 4;
      v61 = v36;
      v41 = ((uint64_t (*)(uint64_t, uint64_t))v21)(v19, v18);
      v42 = REMHashtagLabelSpecifier.description.getter(v41);
      v44 = v43;
      v24(v8, v30);
      v69 = sub_100027E40(v42, v44, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v60, v40 + 12);
      swift_unknownObjectRelease_n(v16, 2);
      v45 = swift_bridgeObjectRelease(v44);
      *(_WORD *)(v40 + 12) = 2080;
      v46 = v64;
      v47 = REMHashtagLabelSpecifier.description.getter(v45);
      v49 = v48;
      v69 = sub_100027E40(v47, v48, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v40 + 14, v40 + 22);
      swift_bridgeObjectRelease(v49);
      v24(v46, v30);
      v36 = v61;
      _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v63, "TTRIShowTaggedPresenter: adjust current selection {from: %s, to: %s}", (uint8_t *)v40, 0x16u);
      v50 = v62;
      swift_arrayDestroy(v62, 2, &type metadata for Any[8]);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n(v16, 2);
      v24(v64, v30);
    }

    v51 = v65;
    sub_100152358((uint64_t)v10);
    Strong = swift_unknownObjectWeakLoadStrong(v51 + 152);
    if (Strong)
    {
      v54 = Strong;
      v55 = swift_getObjectType(Strong, v53);
      if (swift_conformsToProtocol2(v55, &protocol descriptor for TTRIShowTaggedModuleDelegate))
        v56 = v54;
      else
        v56 = 0;
      if (v56)
      {
        sub_10001413C((_QWORD *)(v56 + 48), *(_QWORD *)(v56 + 72));
        swift_retain();
        sub_10029E21C((uint64_t)v10);
        swift_unknownObjectRelease(v16);
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease(v16);
      }
      v32 = v54;
      goto LABEL_23;
    }
LABEL_7:
    v32 = v16;
LABEL_23:
    swift_unknownObjectRelease(v32);
    goto LABEL_24;
  }
  swift_unknownObjectRelease(v16);
  v30 = v22;
LABEL_24:
  v57 = v66;
  v24(v10, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v67, v57);
}

uint64_t sub_10025ABEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10025AC28()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10025AC4C(uint64_t a1)
{
  uint64_t v1;

  return sub_10025A260(a1, v1);
}

uint64_t sub_10025AC54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10025AC80(uint64_t a1)
{
  uint64_t v1;

  return sub_10025A080(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10025AC88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10025ACB4(uint64_t a1)
{
  uint64_t *v1;

  return sub_100259E90(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10025ACC4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    a1 = a2;
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10025ACD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_100642D6C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006083C;
  return sub_1000A0A84(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

uint64_t sub_10025AD7C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  sub_10025ACC4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  if ((~*(_DWORD *)(v0 + 104) & 0xFELL) != 0)
    sub_1000866C4(*(id *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));

  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_10025ADDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_100642D6C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10004A08C;
  return sub_1000A0A84(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

unint64_t sub_10025AE84()
{
  unint64_t result;

  result = qword_100652A20;
  if (!qword_100652A20)
  {
    result = swift_getWitnessTable(&unk_10052BD50, &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100652A20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIShowTaggedPresenter.ActionMenuCustomItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10025AF14 + 4 * byte_10052BCB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10025AF48 + 4 * byte_10052BCB0[v4]))();
}

uint64_t sub_10025AF48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10025AF50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10025AF58);
  return result;
}

uint64_t sub_10025AF64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10025AF6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10025AF70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10025AF78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowTaggedPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem;
}

unint64_t sub_10025AF98()
{
  unint64_t result;

  result = qword_100652A28;
  if (!qword_100652A28)
  {
    result = swift_getWitnessTable(&unk_10052BD28, &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100652A28);
  }
  return result;
}

uint64_t sub_10025AFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100652A30);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100652A30);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10025B06C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)();
  v5 = v4;
  sub_10001413C(a2, a2[3]);
  v6 = sub_1004DBCE8();
  sub_100375364(v3, v5, v6);
  swift_bridgeObjectRelease(v5);

}

uint64_t sub_10025B0E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[5] = v4;
  v1[6] = v5;
  return swift_task_switch(sub_10025B150, v4, v5);
}

uint64_t sub_10025B150()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_10001413C(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  *(_QWORD *)(v0 + 56) = *v2;
  *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  return swift_task_switch(sub_10025B1C0, v4, v5);
}

uint64_t sub_10025B1C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 96);
  return swift_task_switch(sub_10025B1E0, 0, 0);
}

uint64_t sub_10025B1E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[11] + 16);
  v0[12] = v1;
  if (!v1)
    return swift_task_switch(sub_10015E2C4, v0[9], v0[10]);
  v2 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_10025B268;
  return UIViewController.dismissAndWait(animated:)(1);
}

uint64_t sub_10025B268()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_10025B2BC, 0, 0);
}

uint64_t sub_10025B2BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 88);

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

  return swift_task_switch(sub_10015E2C4, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10025B300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[8] = a3;
  v4[9] = a4;
  v4[7] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[10] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[11] = v7;
  v4[12] = v8;
  return swift_task_switch(sub_10025B370, v7, v8);
}

uint64_t sub_10025B370(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  int *v12;

  v3 = (uint64_t *)v2[9];
  v4 = v2[7];
  v5 = *(_QWORD *)(v4 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 32), a2);
  v7 = *v3;
  v2[13] = v7;
  v8 = *(int **)(v5 + 32);
  v9 = v8[1];
  v12 = (int *)((char *)v8 + *v8);
  swift_bridgeObjectRetain(v7);
  v10 = (_QWORD *)swift_task_alloc(v9);
  v2[14] = v10;
  *v10 = v2;
  v10[1] = sub_10025B414;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v12)(v2[8], v7, ObjectType, v5);
}

uint64_t sub_10025B414()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_10025B4B0;
  }
  else
  {
    swift_bridgeObjectRelease(v2[13]);
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_10025B480;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10025B480()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025B4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  swift_bridgeObjectRelease(v1);
  if (qword_10063D590 != -1)
    swift_once(&qword_10063D590, sub_10025AFDC);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100652A30);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 120);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue(v8, v0 + 40, v0 + 16);
    v11 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v13 = v12;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRIHashtagAssociationPresenter: failed to start deleting tags {error: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025B6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = type metadata accessor for Locale(0);
  v8[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[17] = v10;
  v8[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v8[19] = static MainActor.shared.getter(v11);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v12);
  v8[20] = v13;
  v8[21] = v14;
  return swift_task_switch(sub_10025B754, v13, v14);
}

uint64_t sub_10025B754()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t, uint64_t);

  v1 = v0[14];
  v27 = (_QWORD *)v0[15];
  v3 = v0[12];
  v2 = v0[13];
  v5 = v0[10];
  v4 = v0[11];
  v6 = v0[8];
  v7 = v0[9];
  static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  v9 = v8;
  static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(v5, v4, v3, v2);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);
  v0[22] = v14;

  v15 = swift_allocObject(&unk_1005F9A58, 24, 7);
  swift_weakInit(v15 + 16, v1);
  v16 = (_QWORD *)swift_allocObject(&unk_1005F9A80, 40, 7);
  v16[2] = v15;
  v16[3] = v6;
  v16[4] = v7;
  v0[6] = sub_10025EA50;
  v0[7] = v16;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000D4884;
  v0[5] = &unk_1005F9A98;
  v17 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain(v7);
  objc_msgSend(v14, "addTextFieldWithConfigurationHandler:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  v18 = sub_10002A750(&qword_100649EF0);
  v19 = swift_allocObject(v18, 96, 7);
  v0[23] = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1005201E0;
  v20 = static TTRLocalizableStrings.Common.alertOKButton.getter();
  *((_BYTE *)v0 + 200) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v20, v21, 0, v0 + 25, &type metadata for Bool);
  v23 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v22);
  *((_BYTE *)v0 + 201) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v23, v24, 1, (char *)v0 + 201, &type metadata for Bool);
  sub_10001413C(v27, v27[3]);
  v28 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100652B20 + dword_100652B20);
  v25 = (_QWORD *)swift_task_alloc(unk_100652B24);
  v0[24] = v25;
  *v25 = v0;
  v25[1] = sub_10025B9B8;
  return v28((uint64_t)v14, v19);
}

uint64_t sub_10025B9B8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 184);
  v3 = *(_QWORD *)(*v1 + 192);
  *(_BYTE *)(*v1 + 202) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10025BA18, *(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 168));
}

void sub_10025BA18()
{
  uint64_t v0;
  int v1;
  double v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(unsigned __int8 *)(v0 + 202);
  *(_QWORD *)&v2 = swift_release().n128_u64[0];
  if (v1 == 2)
  {

LABEL_5:
    v4 = 0;
    v5 = 0;
LABEL_20:
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, unint64_t))(v0 + 8))(v4, v5);
    return;
  }
  v3 = *(void **)(v0 + 176);
  if ((*(_BYTE *)(v0 + 202) & 1) == 0)
  {

    goto LABEL_5;
  }
  v6 = objc_msgSend(v3, "textFields", v2);
  if (!v6)
  {
LABEL_19:

    v4 = 0;
    v5 = 0xE000000000000000;
    goto LABEL_20;
  }
  v7 = v6;
  v8 = sub_100005ED8(0, (unint64_t *)&qword_10065F350, UITextField_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if (!((unint64_t)v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
LABEL_18:
    swift_bridgeObjectRelease(v9);
    goto LABEL_19;
  }
  if (v9 < 0)
    v23 = v9;
  else
    v23 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v9);
  if (!v24)
    goto LABEL_18;
LABEL_9:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
LABEL_12:
    v11 = v10;
    v12 = objc_msgSend(v10, "text", swift_bridgeObjectRelease(v9).n128_f64[0]);

    if (v12)
    {
      v13 = *(void **)(v0 + 176);
      v15 = *(_QWORD *)(v0 + 136);
      v14 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 128);
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v19 = v18;

      static Locale.current.getter(v20);
      v4 = String.safeNameForHashtag(locale:)(v14, v17, v19);
      v5 = v21;
      v22 = swift_bridgeObjectRelease(v19);
      (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v14, v16, v22);

      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_10025BC04(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  NSString v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    if (Strong)
    {
      v7 = Strong;
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "setText:", v8);

      objc_msgSend(a1, "setClearButtonMode:", 3);
      objc_msgSend(a1, "addTarget:action:forControlEvents:", v7, "renameTagAlertTextFieldDidChange:", 0x20000);
      swift_release(v5);
      return swift_unknownObjectRelease(v7);
    }
    else
    {
      return swift_release(v5);
    }
  }
  return result;
}

uint64_t sub_10025BCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[9] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[10] = v10;
  v7[11] = v11;
  return swift_task_switch(sub_10025BD68, v10, v11);
}

uint64_t sub_10025BD68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t exists;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(id, uint64_t);

  v1 = *(_QWORD **)(v0 + 64);
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  v3 = v2;
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);
  *(_QWORD *)(v0 + 96) = v8;

  v9 = sub_10002A750(&qword_100649EF0);
  v10 = swift_allocObject(v9, 96, 7);
  *(_QWORD *)(v0 + 104) = v10;
  *(_OWORD *)(v10 + 16) = xmmword_1005201E0;
  exists = static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter();
  *(_BYTE *)(v0 + 120) = 1;
  v13 = TTRIValueBasedAlertAction.init(title:style:value:)(exists, v12, 0, v0 + 120, &type metadata for Bool);
  v14 = static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter(v13);
  *(_BYTE *)(v0 + 121) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v14, v15, 1, v0 + 121, &type metadata for Bool);
  sub_10001413C(v1, v1[3]);
  v18 = (uint64_t (*)(id, uint64_t))((char *)&dword_100652B20 + dword_100652B20);
  v16 = (_QWORD *)swift_task_alloc(unk_100652B24);
  *(_QWORD *)(v0 + 112) = v16;
  *v16 = v0;
  v16[1] = sub_10025BEEC;
  return v18(v8, v10);
}

uint64_t sub_10025BEEC(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 112);
  *(_BYTE *)(*v1 + 122) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10025BF4C, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10025BF4C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 122);
  v2 = *(_QWORD *)(v0 + 72);

  swift_release(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

void sub_10025BF90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter();
  v4 = v3;
  sub_10001413C(a1, a1[3]);
  v5 = sub_1004DBCE8();
  sub_100375364(v2, v4, v5);
  swift_bridgeObjectRelease(v4);

}

uint64_t sub_10025C004(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[5] = v4;
  v1[6] = v5;
  return swift_task_switch(sub_10025C074, v4, v5);
}

uint64_t sub_10025C074()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_10001413C(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  *(_QWORD *)(v0 + 56) = *v2;
  *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  return swift_task_switch(sub_10025C0E4, v4, v5);
}

uint64_t sub_10025C0E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 96);
  return swift_task_switch(sub_10025C104, 0, 0);
}

uint64_t sub_10025C104()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[11] + 16);
  v0[12] = v1;
  if (!v1)
    return swift_task_switch(sub_10025C224, v0[9], v0[10]);
  v2 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_10025C18C;
  return UIViewController.dismissAndWait(animated:)(1);
}

uint64_t sub_10025C18C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_10025C1E0, 0, 0);
}

uint64_t sub_10025C1E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 88);

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

  return swift_task_switch(sub_10025C224, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10025C224()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100049824, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10025C25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[7] = a2;
  v7 = type metadata accessor for MainActor(0);
  v6[12] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v6[13] = v9;
  v6[14] = v10;
  return swift_task_switch(sub_10025C2D0, v9, v10);
}

uint64_t sub_10025C2D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[7];
  v4 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 32), a2);
  v6 = *(int **)(v4 + 40);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[15] = v7;
  *v7 = v2;
  v7[1] = sub_10025C354;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v9)(v2[8], v2[9], v2[10], v2[11], ObjectType, v4);
}

uint64_t sub_10025C354()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10025C3E4;
  else
    v4 = sub_10025C3B4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112));
}

uint64_t sub_10025C3B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025C3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_release();
  if (qword_10063D590 != -1)
    swift_once(&qword_10063D590, sub_10025AFDC);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100652A30);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 128);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 40, v0 + 16);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIHashtagAssociationPresenter: failed to start renaming tag {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 128));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025C5DC()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release();
  sub_10025CDAC(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocClassInstance(v0, 73, 7);
}

uint64_t sub_10025C61C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a4;
  *(_BYTE *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 56) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v6 + 64) = v9;
  *(_QWORD *)(v6 + 72) = v10;
  return swift_task_switch(sub_10025C694, v9, v10);
}

uint64_t sub_10025C694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(unsigned __int8 *)(v1 + 72) == 255)
  {
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(void **)(v0 + 40);
    v10 = *(_BYTE *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 16);
    v11 = *(_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v1 + 56);
    v14 = *(_QWORD *)(v1 + 64);
    *(_QWORD *)(v1 + 56) = v12;
    *(_QWORD *)(v1 + 64) = v11;
    *(_BYTE *)(v1 + 72) = v10 & 1;
    sub_10025CDAC(v13, v14, 0xFFu);
    v15 = type metadata accessor for TTRIHashtagAssociationRouter();
    swift_allocObject(v15, 104, 7);
    v16 = v9;
    sub_10025CDC4(v12, v11, v10 & 1);
    sub_1000A6FE8(v8);
    v17 = sub_1004DBBF4(v16, v8);
    *(_QWORD *)(v0 + 80) = v17;
    if ((v10 & 1) != 0)
    {
      v18 = *(_QWORD *)(v0 + 24);
      v19 = (_QWORD *)swift_task_alloc(dword_100652B14);
      *(_QWORD *)(v0 + 96) = v19;
      *v19 = v0;
      v19[1] = sub_10025C950;
      return sub_10025DF14(*(_QWORD *)(v0 + 16), v18, v17, *(_QWORD *)(v0 + 48));
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 16);
      v21 = (_QWORD *)swift_task_alloc(dword_100652B1C);
      *(_QWORD *)(v0 + 88) = v21;
      *v21 = v0;
      v21[1] = sub_10025C8B0;
      return sub_10025CECC(v20, v17, *(_QWORD *)(v0 + 48));
    }
  }
  else
  {
    swift_release();
    if (qword_10063D590 != -1)
      swift_once(&qword_10063D590, sub_10025AFDC);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100652A30);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.fault.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIHashtagAssociationPresenter: start() called while busy", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10025C8B0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_10025C8FC, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10025C8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_release();
  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  v4 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(v1 + 72) = -1;
  sub_10025CDAC(v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025C950()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_10025EA64, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

BOOL sub_10025C99C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72) != 255;
}

uint64_t sub_10025C9AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = a3 & 1;
  v11 = (_QWORD *)swift_task_alloc(dword_100652B0C);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10006083C;
  return sub_10025C61C(a1, a2, v10, a4, a5);
}

uint64_t sub_10025CA28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[13] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[14] = v6;
  v3[15] = v7;
  return swift_task_switch(sub_10025CA98, v6, v7);
}

uint64_t sub_10025CA98()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  _QWORD *v19;

  v1 = sub_1004DBCE8();
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
  {
    if (!objc_msgSend(*(id *)(v0 + 80), "preferredStyle"))
    {
      v2 = *(_QWORD *)(v0 + 96);
      v3 = *(_QWORD *)(v2 + 72);
      if ((~*(_DWORD *)(v2 + 72) & 0xFELL) != 0)
      {
        v12 = *(_QWORD *)(v2 + 80);
        v14 = *(_QWORD *)(v2 + 56);
        v13 = *(_QWORD *)(v2 + 64);
        v16 = *(_QWORD *)(v2 + 40);
        v15 = *(_QWORD *)(v2 + 48);
        v17 = *(void **)(v2 + 32);
        v18 = *(_BYTE *)(v2 + 88);
        *(_QWORD *)(v0 + 16) = v17;
        *(_QWORD *)(v0 + 24) = v16;
        *(_QWORD *)(v0 + 32) = v15;
        *(_QWORD *)(v0 + 40) = v14;
        *(_QWORD *)(v0 + 48) = v13;
        *(_BYTE *)(v0 + 56) = v3;
        *(_QWORD *)(v0 + 64) = v12;
        *(_BYTE *)(v0 + 72) = v18 & 1;
        sub_1000A2644(v17, v16, v15, v14, v13, v3);
        UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v0 + 16);
        sub_1000866B0(v17, v16, v15, v14, v13, v3);
      }
      else
      {
        v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
        v5 = objc_msgSend(v4, "userInterfaceIdiom");

        if (v5 == (id)1)
          objc_msgSend(*(id *)(v0 + 80), "setPreferredStyle:", 1);
      }
    }
    v19 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_10025CD1C;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 73, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    if (qword_10063D888 != -1)
      swift_once(&qword_10063D888, sub_1004DBB64);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100012DC4(v6, (uint64_t)qword_100663FD0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRIHashtagAssociationRouter: failed to present alert; missing a presentingViewController",
        v10,
        2u);
      swift_slowDealloc(v10, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
}

uint64_t sub_10025CD1C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  *(_BYTE *)(v1 + 74) = *(_BYTE *)(v1 + 73);
  return swift_task_switch(sub_10025CD70, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_10025CD70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 104));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 74));
}

uint64_t sub_10025CDAC(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_10025ACC4(result, a2, a3 & 1);
  return result;
}

uint64_t sub_10025CDC4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    a1 = a2;
  return swift_bridgeObjectRetain(a1);
}

unint64_t sub_10025CDD0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id *v5;
  char v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100652B48);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (id *)(a1 + 40);
  while (1)
  {
    v6 = *(_BYTE *)v5;
    v7 = *(v5 - 1);
    result = sub_10019FA70((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    *(_BYTE *)(v3[7] + result) = v6;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10025CECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v3[31] = a1;
  v3[32] = a3;
  v3[13] = type metadata accessor for TTRIHashtagAssociationRouter();
  v3[14] = &off_10060C450;
  v3[10] = a2;
  v5 = type metadata accessor for MainActor(0);
  v6 = swift_retain();
  v3[33] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v7);
  v3[34] = v8;
  v3[35] = v9;
  return swift_task_switch(sub_10025CF5C, v8, v9);
}

uint64_t sub_10025CF5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[32];
  v4 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 32), a2);
  v6 = *(int **)(v4 + 16);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[36] = v7;
  *v7 = v2;
  v7[1] = sub_10025CFDC;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v9)(v2[31], ObjectType, v4);
}

uint64_t sub_10025CFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v7 = *(_QWORD **)v4;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 288);
  v7[37] = a3;
  v7[38] = v3;
  swift_task_dealloc(v8);
  if (v3)
  {
    v9 = v7[34];
    v10 = v7[35];
    v11 = sub_10025D800;
  }
  else
  {
    v7[39] = a2;
    v7[40] = a1;
    v9 = v7[34];
    v10 = v7[35];
    v11 = sub_10025D054;
  }
  return swift_task_switch(v11, v9, v10);
}

uint64_t sub_10025D054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v22)(id, uint64_t);

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 296), 4);
  static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(v4);
  v6 = v5;
  static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(v3, v1, v2);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = (void *)objc_opt_self(UIAlertController);
  *(_QWORD *)(v0 + 328) = v11;
  v12 = objc_msgSend(v11, "alertControllerWithTitle:message:preferredStyle:", v9, v10, 0);
  *(_QWORD *)(v0 + 336) = v12;

  v13 = sub_10002A750(&qword_100649EF0);
  *(_QWORD *)(v0 + 344) = v13;
  v14 = swift_allocObject(v13, 96, 7);
  *(_QWORD *)(v0 + 352) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_1005201E0;
  v15 = static TTRLocalizableStrings.Common.alertDeleteButton.getter(v14);
  *(_BYTE *)(v0 + 434) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v15, v16, 2, v0 + 434, &type metadata for Bool);
  v18 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v17);
  *(_BYTE *)(v0 + 432) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v18, v19, 1, v0 + 432, &type metadata for Bool);
  sub_10001413C((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  v22 = (uint64_t (*)(id, uint64_t))((char *)&dword_100652B20 + dword_100652B20);
  v20 = (_QWORD *)swift_task_alloc(unk_100652B24);
  *(_QWORD *)(v0 + 360) = v20;
  *v20 = v0;
  v20[1] = sub_10025D218;
  return v22(v12, v14);
}

uint64_t sub_10025D218(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 352);
  v3 = *(_QWORD *)(*v1 + 360);
  *(_BYTE *)(*v1 + 436) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10025D278, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_10025D278()
{
  uint64_t v0;
  char v1;
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int8x16_t *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  int8x16_t v56;

  v1 = *(_BYTE *)(v0 + 436);

  v2 = *(_QWORD *)(v0 + 296);
  if ((v1 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease_n(v2, 5);
    sub_100027F10((_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = sub_10025CDD0((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v0 + 224) = TTRHashtagAssociationDeleteTagPreferences.init(intentBySmartListID:)(v4);
  v5 = *(_QWORD *)(v0 + 296);
  if (v2 >> 62)
  {
    if (v5 < 0)
      v42 = *(_QWORD *)(v0 + 296);
    else
      v42 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 296));
    v6 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease_n(v5, 2);
    if (v6)
    {
      v43 = *(_QWORD *)(v0 + 296);
      swift_bridgeObjectRetain(v43);
      v7 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v43);
      goto LABEL_6;
    }
  }
  else
  {
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
    if (v6)
    {
      v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
      *(_QWORD *)(v0 + 368) = v6;
      v8 = *(_QWORD *)(v0 + 248);
      v9 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
      static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)(v7, v9);
      v53 = v10;
      v52 = *(_QWORD *)(v8 + 16);
      if (!v7)
      {
LABEL_15:
        v22 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
        v23 = *(_QWORD *)(v0 + 344);
        v24 = *(void **)(v0 + 328);
        v25 = *(_QWORD *)(v0 + 296);
        v26 = *(_QWORD *)(v0 + 248);
        static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)(v52, _swiftEmptyArrayStorage, v22);
        v28 = v27;
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v29 = *(_QWORD *)(v26 + 16);
        v30 = swift_bridgeObjectRelease(v25);
        v31 = static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)(v29, v7, v30);
        v33 = v32;
        v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v53);
        v35 = String._bridgeToObjectiveC()();
        v36 = objc_msgSend(v24, "alertControllerWithTitle:message:preferredStyle:", v34, v35, 1, swift_bridgeObjectRelease(v28).n128_f64[0]);
        *(_QWORD *)(v0 + 408) = v36;

        v37 = swift_allocObject(v23, 96, 7);
        *(_QWORD *)(v0 + 416) = v37;
        *(_OWORD *)(v37 + 16) = xmmword_1005201E0;
        *(_BYTE *)(v0 + 435) = 1;
        TTRIValueBasedAlertAction.init(title:style:value:)(v31, v33, 2, v0 + 435, &type metadata for Bool);
        v39 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v38);
        *(_BYTE *)(v0 + 433) = 0;
        TTRIValueBasedAlertAction.init(title:style:value:)(v39, v40, 1, v0 + 433, &type metadata for Bool);
        sub_10001413C((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
        v55 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100652B20 + dword_100652B20);
        v41 = (_QWORD *)swift_task_alloc(unk_100652B24);
        *(_QWORD *)(v0 + 424) = v41;
        *v41 = v0;
        v41[1] = sub_10025DAA4;
        return v55((uint64_t)v36, v37);
      }
      sub_1003D7FFC(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        v11 = 0;
        v12 = v2 & 0xC000000000000001;
        v54 = *(_QWORD *)(v0 + 296) + 32;
        do
        {
          if (v12)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, *(_QWORD *)(v0 + 296));
          else
            v13 = *(id *)(v54 + 8 * v11);
          v14 = v13;
          v15 = objc_msgSend(v13, "name", v52);
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          v18 = v17;

          v20 = _swiftEmptyArrayStorage[2];
          v19 = _swiftEmptyArrayStorage[3];
          if (v20 >= v19 >> 1)
            sub_1003D7FFC(v19 > 1, v20 + 1, 1);
          ++v11;
          _swiftEmptyArrayStorage[2] = v20 + 1;
          v21 = &_swiftEmptyArrayStorage[2 * v20];
          v21[4] = v16;
          v21[5] = v18;
        }
        while (v7 != v11);
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_24;
    }
  }
  v2 = v0 + 224;
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 296), 3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
  if (qword_10063D590 != -1)
LABEL_24:
    swift_once(&qword_10063D590, sub_10025AFDC);
  v44 = type metadata accessor for Logger(0);
  v56 = *(int8x16_t *)(v0 + 248);
  sub_100012DC4(v44, (uint64_t)qword_100652A30);
  v45 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Hashtag management confirm delete tags", 38, 2, v45);
  swift_bridgeObjectRelease(v45);
  sub_100010634(v0 + 80, v0 + 160);
  v46 = swift_allocObject(&unk_1005F99B8, 64, 7);
  *(_QWORD *)(v46 + 16) = v56.i64[0];
  sub_10002E37C((__int128 *)(v0 + 160), v46 + 24);
  sub_100010634(v0 + 80, v0 + 120);
  v47 = swift_allocObject(&unk_1005F99E0, 56, 7);
  sub_10002E37C((__int128 *)(v0 + 120), v47 + 16);
  v48 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
  *(_QWORD *)(v0 + 376) = swift_initStackObject(v48, v0 + 16);
  *(_QWORD *)(v0 + 384) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_10025E6D0, v46, &unk_100652B30, v47, 2.0);
  v49 = (int8x16_t *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 392) = v49;
  v49[1] = vextq_s8(v56, v56, 8uLL);
  v49[2].i64[0] = v2;
  v50 = async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1];
  swift_bridgeObjectRetain(v56.i64[0]);
  v51 = (_QWORD *)swift_task_alloc(v50);
  *(_QWORD *)(v0 + 400) = v51;
  *v51 = v0;
  v51[1] = sub_10025DA00;
  return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v51, &unk_100652B40, v49, (char *)&type metadata for () + 8);
}

uint64_t sub_10025D800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_release();
  if (qword_10063D590 != -1)
    swift_once(&qword_10063D590, sub_10025AFDC);
  v1 = *(_QWORD *)(v0 + 304);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100652A30);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 304);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 232, v0 + 200);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
    v12 = v11;
    *(_QWORD *)(v0 + 240) = sub_100027E40(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIHashtagAssociationPresenter: failed to fetch confirmation message {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 304));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  sub_100027F10((_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025DA00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 392);
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10025DA54, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_10025DA54()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));
  sub_100027F10((_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025DAA4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 416);
  v3 = *(_QWORD *)(*v1 + 424);
  *(_BYTE *)(*v1 + 437) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10025DB04, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_10025DB04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int8x16_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int8x16_t v38;

  if ((*(_BYTE *)(v0 + 437) & 1) == 0)
  {
    v1 = *(void **)(v0 + 408);
    v2 = *(_QWORD *)(v0 + 296);
    swift_release();

    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));
    sub_100027F10((_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v35 = v0 + 80;
  v4 = 0;
  v5 = (_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 296);
  v36 = v6 + 32;
  v37 = v6 & 0xC000000000000001;
  while (1)
  {
    if (v37)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 296));
    else
      v8 = *(id *)(v36 + 8 * v4);
    v9 = v8;
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v11 = objc_msgSend(v8, "objectID");
    v12 = (_QWORD *)*v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    *v5 = 0x8000000000000000;
    v15 = sub_1002AA364((uint64_t)v11);
    v16 = v12[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_25;
    v19 = v14;
    if (v12[3] < v18)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v14 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      sub_1002B0894();
      if ((v19 & 1) == 0)
      {
LABEL_17:
        v12[(v15 >> 6) + 8] |= 1 << v15;
        *(_QWORD *)(v12[6] + 8 * v15) = v11;
        *(_BYTE *)(v12[7] + v15) = 0;
        v22 = v12[2];
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
          goto LABEL_26;
        v12[2] = v24;
        v25 = v11;
        goto LABEL_5;
      }
    }
LABEL_4:
    *(_BYTE *)(v12[7] + v15) = 0;
LABEL_5:
    v7 = *(_QWORD *)(v0 + 368);
    *(_QWORD *)(v0 + 224) = v12;

    swift_bridgeObjectRelease(0x8000000000000000);
    ++v4;
    if (v10 == v7)
    {

      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
      if (qword_10063D590 == -1)
      {
LABEL_22:
        v26 = type metadata accessor for Logger(0);
        v38 = *(int8x16_t *)(v0 + 248);
        sub_100012DC4(v26, (uint64_t)qword_100652A30);
        v27 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        sub_1000143B4((uint64_t)"Hashtag management confirm delete tags", 38, 2, v27);
        swift_bridgeObjectRelease(v27);
        sub_100010634(v35, v0 + 160);
        v28 = swift_allocObject(&unk_1005F99B8, 64, 7);
        *(_QWORD *)(v28 + 16) = v38.i64[0];
        sub_10002E37C((__int128 *)(v0 + 160), v28 + 24);
        sub_100010634(v35, v0 + 120);
        v29 = swift_allocObject(&unk_1005F99E0, 56, 7);
        sub_10002E37C((__int128 *)(v0 + 120), v29 + 16);
        v30 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
        *(_QWORD *)(v0 + 376) = swift_initStackObject(v30, v0 + 16);
        *(_QWORD *)(v0 + 384) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_10025E6D0, v28, &unk_100652B30, v29, 2.0);
        v31 = (int8x16_t *)swift_task_alloc(48);
        *(_QWORD *)(v0 + 392) = v31;
        v31[1] = vextq_s8(v38, v38, 8uLL);
        v31[2].i64[0] = (uint64_t)v5;
        v32 = async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1];
        swift_bridgeObjectRetain(v38.i64[0]);
        v33 = (_QWORD *)swift_task_alloc(v32);
        *(_QWORD *)(v0 + 400) = v33;
        *v33 = v0;
        v33[1] = sub_10025DA00;
        return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v33, &unk_100652B40, v31, (char *)&type metadata for () + 8);
      }
LABEL_27:
      swift_once(&qword_10063D590, sub_10025AFDC);
      goto LABEL_22;
    }
  }
  sub_10045B160(v18, isUniquelyReferenced_nonNull_native);
  v20 = sub_1002AA364((uint64_t)v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_17;
    goto LABEL_4;
  }
  v34 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v34);
}

uint64_t sub_10025DF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[31] = a2;
  v4[32] = a4;
  v4[30] = a1;
  v4[13] = type metadata accessor for TTRIHashtagAssociationRouter();
  v4[14] = &off_10060C450;
  v4[10] = a3;
  v6 = type metadata accessor for MainActor(0);
  v7 = swift_retain();
  v4[33] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v8);
  v4[34] = v9;
  v4[35] = v10;
  return swift_task_switch(sub_10025DFA8, v9, v10);
}

uint64_t sub_10025DFA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[32];
  v4 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 32), a2);
  v6 = *(int **)(v4 + 24);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[36] = v7;
  *v7 = v2;
  v7[1] = sub_10025E028;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v9)(v2[30], v2[31], ObjectType, v4);
}

uint64_t sub_10025E028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 288);
  *(_QWORD *)(*(_QWORD *)v3 + 296) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = v6[34];
    v9 = v6[35];
    v10 = sub_10025E3F4;
  }
  else
  {
    v6[38] = a2;
    v6[39] = a1;
    v8 = v6[34];
    v9 = v6[35];
    v10 = sub_10025E0A0;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_10025E0A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v0[38];
  v1 = v0[39];
  v4 = v0[31];
  v3 = v0[32];
  v5 = v0[30];
  v6 = (_QWORD *)swift_task_alloc(64);
  v0[40] = v6;
  v6[2] = v5;
  v6[3] = v4;
  v6[4] = v1;
  v6[5] = v2;
  v6[6] = v3;
  v6[7] = v0 + 10;
  v7 = (_QWORD *)swift_task_alloc(64);
  v0[41] = v7;
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v1;
  v7[5] = v2;
  v7[6] = v0 + 10;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to TTRHashtagAssociationPresenterCapability.obtainNewHashtagNameFromUser(srcLabel:showInputUI:showMergeUI:)[1]);
  v0[42] = v8;
  *v8 = v0;
  v8[1] = sub_10025E16C;
  return TTRHashtagAssociationPresenterCapability.obtainNewHashtagNameFromUser(srcLabel:showInputUI:showMergeUI:)(v0[30], v0[31], &unk_100652B58, v6, &unk_100652B68, v7);
}

uint64_t sub_10025E16C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 328);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  v3[43] = a1;
  v3[44] = a2;
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return swift_task_switch(sub_10025E1E0, v3[34], v3[35]);
}

uint64_t sub_10025E1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 352);
  if (v1)
  {
    if (qword_10063D590 != -1)
      swift_once(&qword_10063D590, sub_10025AFDC);
    v2 = *(_QWORD *)(v0 + 344);
    v3 = *(_QWORD *)(v0 + 256);
    v12 = *(_OWORD *)(v0 + 240);
    v4 = type metadata accessor for Logger(0);
    sub_100012DC4(v4, (uint64_t)qword_100652A30);
    v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Hashtag management confirm delete tags", 38, 2, v5);
    swift_bridgeObjectRelease(v5);
    sub_100010634(v0 + 80, v0 + 120);
    v6 = swift_allocObject(&unk_1005F9A08, 56, 7);
    sub_10002E37C((__int128 *)(v0 + 120), v6 + 16);
    sub_100010634(v0 + 80, v0 + 160);
    v7 = swift_allocObject(&unk_1005F9A30, 56, 7);
    sub_10002E37C((__int128 *)(v0 + 160), v7 + 16);
    v8 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
    *(_QWORD *)(v0 + 360) = swift_initStackObject(v8, v0 + 16);
    *(_QWORD *)(v0 + 368) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_10025E92C, v6, &unk_100652B78, v7, 2.0);
    v9 = swift_task_alloc(64);
    *(_QWORD *)(v0 + 376) = v9;
    *(_QWORD *)(v9 + 16) = v3;
    *(_OWORD *)(v9 + 24) = v12;
    *(_QWORD *)(v9 + 40) = v2;
    *(_QWORD *)(v9 + 48) = v1;
    v10 = (_QWORD *)swift_task_alloc(async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1]);
    *(_QWORD *)(v0 + 384) = v10;
    *v10 = v0;
    v10[1] = sub_10025E5F4;
    return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v10, &unk_100652B88, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    sub_100027F10((_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10025E3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_release();
  if (qword_10063D590 != -1)
    swift_once(&qword_10063D590, sub_10025AFDC);
  v1 = *(_QWORD *)(v0 + 296);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100652A30);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 296);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 224, v0 + 200);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
    v12 = v11;
    *(_QWORD *)(v0 + 232) = sub_100027E40(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIHashtagAssociationPresenter: failed to fetch confirmation message {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 296));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  sub_100027F10((_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025E5F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 376);
  v3 = *(_QWORD *)(*v0 + 352);
  swift_task_dealloc(*(_QWORD *)(*v0 + 384));
  swift_bridgeObjectRelease(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10025E65C, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_10025E65C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_100027F10((_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025E6A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10025E6D0()
{
  uint64_t v0;

  sub_10025B06C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_10025E6DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_100652B2C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_10025B0E0(v0 + 16);
}

uint64_t sub_10025E728(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100652B3C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10025B300(a1, v4, v5, v6);
}

uint64_t sub_10025E794(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc(dword_100652B54);
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_10025E824;
  return sub_10025B6B4(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_10025E824(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_10025E87C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc(dword_100652B64);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1001345E4;
  return sub_10025BCF0(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_10025E908()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10025E92C()
{
  uint64_t v0;

  sub_10025BF90((_QWORD *)(v0 + 16));
}

uint64_t sub_10025E934()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_100652B74);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10004A08C;
  return sub_10025C004(v0 + 16);
}

uint64_t sub_10025E980(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_100652B84);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_10025C25C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10025EA00()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025EA24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10025EA50(void *a1)
{
  uint64_t v1;

  return sub_10025BC04(a1, *(_QWORD *)(v1 + 16));
}

id sub_10025EA68(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSString v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v5 = v4;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = a3[3];
  if (v10)
  {
    v11 = sub_10001413C(a3, a3[3]);
    v12 = *(_QWORD *)(v10 - 8);
    __chkstk_darwin(v11);
    v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    sub_100027F10(a3);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "initWithName:target:selector:", v9, v15, a4);

  swift_unknownObjectRelease(v15);
  return v16;
}

void sub_10025EB88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  id v10;

  v1 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState) != 3
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_networkActivityState) == 0)
  {
    objc_msgSend(v2, "stopAnimating");
  }
  else
  {
    if (v2)
    {
      v10 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner);
    }
    else
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
      objc_msgSend(v4, "setHidesWhenStopped:", 1);
      objc_msgSend(v4, "frame");
      v6 = v5;
      LODWORD(v5) = 1148846080;
      objc_msgSend(v4, "setLayoutSize:withContentPriority:", v6, v7, v5);
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView), "addArrangedSubview:", v4);
      v8 = *(void **)(v0 + v1);
      *(_QWORD *)(v0 + v1) = v4;
      v10 = v4;

      v2 = 0;
    }
    v9 = v2;
    objc_msgSend(v10, "startAnimating");

  }
}

uint64_t sub_10025ECB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  int v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  int v9;
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[56];

  v3 = v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel, v16, 0, 0);
  sub_1000922C0(v3, (uint64_t)v17);
  sub_1000922C0(a1, (uint64_t)v14);
  swift_beginAccess(v3, v11, 33, 0);
  sub_100260374((uint64_t)v14, v3);
  swift_endAccess(v11);
  sub_1000922C0(a1, (uint64_t)v11);
  if (*((_QWORD *)&v12 + 1))
  {
    v14[0] = v11[0];
    v14[1] = v11[1];
    v14[2] = v12;
    v15 = v13;
    sub_1000922C0((uint64_t)v17, (uint64_t)v11);
    if (*((_QWORD *)&v12 + 1))
    {
      v4 = BYTE8(v11[0]);
      sub_100092348((uint64_t)v11);
      v5 = BYTE8(v14[0]);
      if (v4 == BYTE8(v14[0]))
      {
LABEL_9:
        sub_100092348((uint64_t)v14);
        v6 = v17;
        return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_10065BDF0);
      }
    }
    else
    {
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_10065BDF0);
      v5 = BYTE8(v14[0]);
    }
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView);
    v8 = v5 == 2;
    v9 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded);
    *(_BYTE *)(v7 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded) = v8;
    if (v8 != v9)
      sub_100028358();
    goto LABEL_9;
  }
  sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_10065BDF0);
  v6 = v11;
  return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_10065BDF0);
}

void sub_10025EEFC(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(void ***, uint64_t, uint64_t);
  _BYTE *v33;
  int v34;
  uint64_t v35;
  void *v37;
  _BYTE *v38;
  char v39[24];
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t (*v44)();
  uint64_t v45;
  CGPoint v46;
  CGRect v47;

  v2 = v1;
  v4 = (char *)objc_msgSend(a1, "state");
  if ((unint64_t)(v4 - 4) < 2)
  {
    v9 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
    if (v9 != 1)
      return;
    v6 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_1005F9B08, 40, 7);
    *(_QWORD *)(v10 + 16) = v2;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v10 + 24) = _Q0;
    v44 = sub_10026031C;
    v45 = v10;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v8 = &unk_1005F9B20;
    goto LABEL_13;
  }
  if (v4 == (char *)3)
  {
    objc_msgSend(v2, "bounds");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;
    objc_msgSend(a1, "locationInView:", v2);
    v46.x = v24;
    v46.y = v25;
    v47.origin.x = v17;
    v47.origin.y = v19;
    v47.size.width = v21;
    v47.size.height = v23;
    if (CGRectContainsPoint(v47, v46))
    {
      v26 = &v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
      swift_beginAccess(&v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate], v39, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v26);
      if (Strong)
      {
        v29 = Strong;
        v30 = *((_QWORD *)v26 + 1);
        ObjectType = swift_getObjectType(Strong, v28);
        v43 = type metadata accessor for TTRIAccountsListsSectionHeaderView();
        v44 = (uint64_t (*)())&off_1005F9AC8;
        aBlock = (void **)v2;
        v32 = *(void (**)(void ***, uint64_t, uint64_t))(v30 + 8);
        v33 = v2;
        v32(&aBlock, ObjectType, v30);
        swift_unknownObjectRelease(v29);
        sub_100027F10(&aBlock);
      }
    }
    v34 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
    if (v34 == 1)
    {
      v6 = (void *)objc_opt_self(UIView);
      v35 = swift_allocObject(&unk_1005F9B58, 40, 7);
      *(_QWORD *)(v35 + 16) = v2;
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)(v35 + 24) = _Q0;
      v44 = sub_10026031C;
      v45 = v35;
      aBlock = _NSConcreteStackBlock;
      v41 = 1107296256;
      v8 = &unk_1005F9B70;
      goto LABEL_13;
    }
  }
  else if (v4 == (char *)1)
  {
    v5 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 1;
    if ((v5 & 1) == 0)
    {
      v6 = (void *)objc_opt_self(UIView);
      v7 = swift_allocObject(&unk_1005F9BA8, 40, 7);
      *(_QWORD *)(v7 + 16) = v2;
      *(_OWORD *)(v7 + 24) = xmmword_10052BE50;
      v44 = sub_10026031C;
      v45 = v7;
      aBlock = _NSConcreteStackBlock;
      v41 = 1107296256;
      v8 = &unk_1005F9BC0;
LABEL_13:
      v42 = sub_100006378;
      v43 = (uint64_t)v8;
      v37 = _Block_copy(&aBlock);
      v38 = v2;
      swift_release();
      objc_msgSend(v6, "animateWithDuration:animations:", v37, 0.2);
      _Block_release(v37);
    }
  }
}

uint64_t sub_10025F250(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_accountID);
  if (v2)
  {
    v3 = result;
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_delegate);
    if (result)
    {
      v4 = result;
      v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount);
      v6 = v2;
      sub_1000752D4(v3, v6, v5);

      return swift_unknownObjectRelease(v4);
    }
  }
  return result;
}

uint64_t sub_10025F6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;
  _OWORD v10[3];
  uint64_t v11;

  v1 = v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel, &v6, 0, 0);
  v2 = sub_1000922C0(v1, (uint64_t)v7);
  if (!*((_QWORD *)&v8 + 1))
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_10065BDF0);
    return 0;
  }
  v10[0] = v7[0];
  v10[1] = v7[1];
  v10[2] = v8;
  v11 = v9;
  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState)
     - 2 < 4)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl) == 1
      && BYTE8(v10[0]))
    {
      if (BYTE8(v10[0]) == 1)
        v3 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingExpand.unsafeMutableAddressor(v2);
      else
        v3 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingCollapse.unsafeMutableAddressor(v2);
      goto LABEL_9;
    }
    sub_100092348((uint64_t)v10);
    return 0;
  }
  v3 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingUpgrade.unsafeMutableAddressor(v2);
LABEL_9:
  v4 = *v3;
  swift_bridgeObjectRetain(v3[1]);
  sub_100092348((uint64_t)v10);
  return v4;
}

void sub_10025F7B4(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  objc_super v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = a1;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = a1;
    v9 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for TTRIAccountsListsSectionHeaderView();
  objc_msgSendSuper2(&v11, *a4, v9);

}

uint64_t sub_10025F840()
{
  unsigned __int8 *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  unsigned __int8 *v9;
  _QWORD v11[5];
  char v12[24];

  v1 = v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl];
  if ((_DWORD)v1 == 1)
  {
    v2 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
    swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate], v12, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      v5 = Strong;
      v6 = *((_QWORD *)v2 + 1);
      ObjectType = swift_getObjectType(Strong, v4);
      v11[3] = type metadata accessor for TTRIAccountsListsSectionHeaderView();
      v11[4] = &off_1005F9AC8;
      v11[0] = v0;
      v8 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 8);
      v9 = v0;
      v8(v11, ObjectType, v6);
      swift_unknownObjectRelease(v5);
      sub_100027F10(v11);
    }
  }
  return v1;
}

uint64_t sub_10025F9A0()
{
  unsigned __int8 *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v1 = v0;
  v2 = sub_10002A750(&qword_100646D60);
  __chkstk_darwin(v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState] - 2 > 3
    || v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount] == 1)
  {
    v5 = (void *)sub_10000F050();
    UIButton.configuration.getter(v5);

    v6 = type metadata accessor for UIButton.Configuration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      v7 = sub_1000073A0((uint64_t)v4, &qword_100646D60);
    }
    else
    {
      v9 = UIButton.Configuration.title.getter();
      v10 = v11;
      v7 = sub_1000073A0((uint64_t)v4, &qword_100646D60);
      if (v10)
        goto LABEL_7;
    }
    v8 = (uint64_t *)TTRAccesibility.AccountsList.Label.Migrate.unsafeMutableAddressor(v7);
    v9 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRelease(0);
LABEL_7:
    sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
    v17[3] = type metadata accessor for TTRIAccountsListsSectionHeaderView();
    v17[0] = v1;
    v12 = v1;
    v13 = sub_10025EA68(v9, v10, v17, (uint64_t)"migrateButtonAction:");
    v14 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100521140;
    *(_QWORD *)(v15 + 32) = v13;
    v17[0] = v15;
    specialized Array._endMutation()(v15);
    return v17[0];
  }
  return 0;
}

_QWORD *sub_10025FBF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  _OWORD v18[2];
  __int128 v19;
  uint64_t v20;
  _OWORD v21[3];
  uint64_t v22;

  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState)
     - 2 >= 4)
  {
    v2 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Upgradable.unsafeMutableAddressor();
    v4 = *v2;
    v3 = v2[1];
    swift_bridgeObjectRetain(v3);
    v1 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v6 = v1[2];
    v5 = v1[3];
    if (v6 >= v5 >> 1)
      v1 = sub_10001D840((_QWORD *)(v5 > 1), v6 + 1, 1, v1);
    v1[2] = v6 + 1;
    v7 = &v1[2 * v6];
    v7[4] = v4;
    v7[5] = v3;
  }
  else
  {
    v1 = _swiftEmptyArrayStorage;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl) == 1)
  {
    v8 = v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
    swift_beginAccess(v8, &v17, 0, 0);
    v9 = sub_1000922C0(v8, (uint64_t)v18);
    if (*((_QWORD *)&v19 + 1))
    {
      v21[0] = v18[0];
      v21[1] = v18[1];
      v21[2] = v19;
      v22 = v20;
      if (BYTE8(v18[0]))
      {
        if (BYTE8(v18[0]) == 1)
          v10 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Collapsed.unsafeMutableAddressor(v9);
        else
          v10 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Expanded.unsafeMutableAddressor(v9);
        v12 = *v10;
        v11 = v10[1];
        swift_bridgeObjectRetain(v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
          v1 = sub_10001D840(0, v1[2] + 1, 1, v1);
        v14 = v1[2];
        v13 = v1[3];
        if (v14 >= v13 >> 1)
          v1 = sub_10001D840((_QWORD *)(v13 > 1), v14 + 1, 1, v1);
        v1[2] = v14 + 1;
        v15 = &v1[2 * v14];
        v15[4] = v12;
        v15[5] = v11;
      }
      sub_100092348((uint64_t)v21);
    }
    else
    {
      sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_10065BDF0);
    }
  }
  return v1;
}

void sub_10025FDC8()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState);
  if (v1 == 5)
    goto LABEL_4;
  if (v1 != 3)
  {
    if (v1 != 2)
    {
      v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
      goto LABEL_8;
    }
LABEL_4:
    v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount) != 1)
    {
      v3 = 1;
LABEL_9:
      objc_msgSend(v2, "setHidden:", v3);
      goto LABEL_10;
    }
LABEL_8:
    v3 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_upgradeHintCardShowingForAccount);
    goto LABEL_9;
  }
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
  objc_msgSend(v2, "setHidden:", 1);
LABEL_10:
  if ((objc_msgSend(v2, "isHidden") & 1) == 0
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isStoreDemoMode) == 1)
  {
    objc_msgSend(v2, "setHidden:", 1);
  }
  sub_10025EB88();
}

id sub_10025FEB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsSectionHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10025FFC4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000922C0(v3, a1);
}

uint64_t sub_100260018()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate;
  swift_beginAccess(v1, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_100260068(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = *v2 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1002600D4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess(v4 + v5, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_1000DAAC0;
}

uint64_t sub_10026014C(uint64_t a1)
{
  return sub_10025ECB4(a1);
}

uint64_t type metadata accessor for MigrationButton()
{
  return objc_opt_self(_TtC9RemindersP33_7A55288D58EEB9990EBCDDE62250269515MigrationButton);
}

void sub_10026023C(_QWORD *a1, void *a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5) & 1;
  v6 = objc_msgSend(a2, "preferredContentSizeCategory");
  LODWORD(v5) = UIContentSizeCategory.isAccessibilityCategory.getter(v6) & 1;

  if ((_DWORD)v4 != (_DWORD)v5)
    (*(void (**)(void))((swift_isaMask & *a1) + 0x250))();
}

uint64_t sub_1002602F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100260320()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v0 + 32);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView), "setAlpha:", *(double *)(v0 + 24));
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView), "setAlpha:", v2);
}

uint64_t sub_100260374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_10065BDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002603C4()
{
  return 8;
}

uint64_t sub_1002603D0(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1002603D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1002603EC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1002603F8()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  NSString v14;
  unsigned __int8 v15;

  v1 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState] = 2;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_networkActivityState] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl] = 1;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_upgradeHintCardShowingForAccount] = 0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_accountID] = 0;
  v3 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_QWORD *)v3 + 6) = 0;
  v4 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  v5 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_outerStackView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v6 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v7 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton;
  *(_QWORD *)&v0[v8] = sub_10000F050();
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner] = 0;
  v9 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView;
  v10 = type metadata accessor for TTRIAccountsListsCellAccessoryView();
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_collapseGestureRecognizers] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
  v11 = objc_allocWithZone((Class)NSUserDefaults);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "initWithSuiteName:", v12);

  if (v13)
  {
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "BOOLForKey:", v14);

  }
  else
  {
    v15 = 0;
  }
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isStoreDemoMode] = v15;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIAccountsListsSectionHeaderView.swift", 50, 2, 190, 0);
  __break(1u);
}

uint64_t sub_100260694()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t sub_1002606A4(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t (*v23)(_QWORD);
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  void *v72;
  void (*v73)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, _UNKNOWN **);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v88;
  _QWORD *v89;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[4];
  __int128 v103;
  __int128 v104;
  _QWORD v105[16];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;

  v97 = a1;
  v98 = a3;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v5 = __chkstk_darwin(v4);
  v92 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v91 = (uint64_t)&v91 - v7;
  v95 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v95);
  v99 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = (char *)type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v94 = *((_QWORD *)v96 - 1);
  __chkstk_darwin(v96);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRListType.SortingCapability(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v91 - v15;
  v17 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v20);
  v22 = (void **)((char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8((uint64_t)a2, (uint64_t)v22, v23);
  v105[0] = _swiftEmptyArrayStorage;
  v24 = sub_100080C90();
  v25 = sub_10002A750(&qword_100641278);
  v26 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v105, v25, v26, v17, v24);
  sub_100041F70(v22, (uint64_t)v19, (void *)1, (uint64_t)v105);
  v27 = *a2;
  v28 = (uint64_t)a2;
  v29 = type metadata accessor for TTRShowCompletedByDateBucketsDataModelSource(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = TTRShowCompletedByDateBucketsDataModelSource.init(store:countCompleted:)(v27, 1);
  (*(void (**)(char *, _QWORD, char *))(v94 + 104))(v10, enum case for REMRemindersListDataView.SortingStyle.default(_:), v96);
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)(0, 0, v10);
  v31 = (void *)v105[0];
  v96 = v16;
  sub_10002B1E8((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v32 = type metadata accessor for TTRShowCompletedViewModelSource(0);
  v33 = (_QWORD *)swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  swift_retain(v30);
  v34 = v31;
  v35 = sub_100260E10(v30, v34, (uint64_t)v14, v33);
  v94 = v30;
  swift_release(v30);

  sub_10002B1E8(v28, (uint64_t)v22, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v105, (uint64_t)v102);
  swift_retain(v35);
  sub_100042A94((uint64_t)v22, (uint64_t)v102, v35, (uint64_t)&off_100609110, v99);
  v36 = v91;
  sub_100042C0C(v91);
  v37 = type metadata accessor for TTRIShowCompletedPresenter(0);
  v38 = *(unsigned int *)(v37 + 48);
  v39 = *(unsigned __int16 *)(v37 + 52);
  v93 = v37;
  v40 = swift_allocObject(v37, v38, v39);
  v41 = (uint64_t)v92;
  sub_10002B1E8(v36, (uint64_t)v92, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v42 = v98;
  swift_unknownObjectRetain(v98);
  v43 = (_QWORD *)sub_1002A70CC(v41, v42, v40);
  sub_10001F544(v36, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v44 = v43[18];
  ObjectType = swift_getObjectType(v43[17], v45);
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 104);
  swift_retain(v43);
  v48 = v47(ObjectType, v44);
  if (v48)
  {
    v50 = v48;
    v51 = v49;
    v52 = swift_getObjectType(v48, v49);
    LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v52, v51);
    swift_release(v43);
    swift_unknownObjectRelease(v50);
    v53 = v51 & 1;
  }
  else
  {
    swift_release(v43);
    v53 = 0;
  }
  v54 = sub_100172EB4(v53, (uint64_t)v43);
  v92 = (char *)v55;
  v57 = v56;
  v59 = v58;
  v91 = swift_getObjectType(v56, v55);
  v43[3] = *(_QWORD *)(v59 + 8);
  v98 = v57;
  swift_unknownObjectWeakAssign(v43 + 2, v57);
  v60 = v43[18];
  v62 = swift_getObjectType(v43[17], v61);
  v63 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 104);
  swift_retain_n(v43, 2);
  v64 = v54;
  v65 = v63(v62, v60);
  v67 = v65;
  if (v65)
  {
    v68 = v66;
    v69 = swift_getObjectType(v65, v66);
    v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    swift_release(v43);
    swift_unknownObjectRelease(v67);
    v67 = v70 & 1;
  }
  else
  {
    swift_release(v43);
  }
  v71 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v72 = (void *)sub_1002A8974(v43, v64, v92, v67, 0, 1, 0, v71);
  swift_release(v43);

  v73 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v59 + 32);
  v74 = v72;
  v92 = v74;
  v73(v72, &off_1005FCD60, v91, v59);
  v75 = v105[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v105[0] + direct field offset for TTRRemindersListInteractor.delegate, &v101, 1, 0);
  *(_QWORD *)(v75 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v75, v43);
  v76 = v105[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v105[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v100, 1, 0);
  *(_QWORD *)(v76 + 8) = &protocol witness table for TTRShowCompletedByDateBucketsDataModelSource;
  v77 = v94;
  swift_unknownObjectWeakAssign(v76, v94);
  swift_unknownObjectWeakAssign(v105[3] + 16, v74);
  v78 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v77 + 376);
  v79 = swift_retain(v35);
  v78(v79, &off_1005EBD80);
  swift_retain(v35);
  v80 = swift_retain(v43);
  sub_10048D4EC(v80, (uint64_t)&off_1005F30C0);
  swift_release(v35);
  swift_release(v43);
  v81 = v99;
  v82 = *(_QWORD *)(v99 + *(int *)(v95 + 28));
  *(_QWORD *)(v82 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v82 + 16, v43);
  sub_100028CFC((uint64_t)&v106, (uint64_t)v102);
  v103 = v107;
  v104 = v108;
  v83 = v107 + 32;
  *(_QWORD *)(v107 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v83, v43);
  sub_100027F10(v102);
  sub_100028CFC((uint64_t)&v109, (uint64_t)v102);
  v84 = v110;
  v103 = v110;
  v86 = swift_getObjectType(v110, v85);
  v87 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v84 + 1) + 48);
  swift_retain(v43);
  v88 = swift_unknownObjectRetain(v84);
  v87(v43, &off_1005F2FF0, v86, *((_QWORD *)&v84 + 1), v88);
  swift_unknownObjectRelease(v84);
  sub_100027F10(v102);
  v89 = v97;
  v97[3] = v93;
  v89[4] = &off_1005F9C20;
  *v89 = v43;
  swift_release(v77);
  swift_release(v35);

  swift_unknownObjectRelease(v98);
  sub_10001F544(v81, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_10001F544((uint64_t)v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  sub_100043844((uint64_t)v105);
  return (uint64_t)v92;
}

uint64_t sub_100260E10(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v8 = *a4;
  v38 = a3;
  v39 = v8;
  v9 = type metadata accessor for REMAnalyticsEvent(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_BYTE *)a4 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_cachedEmptyListMessaging) = 0x80;
  v19 = (char *)a4 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount;
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  sub_10002B1E8(a3, (uint64_t)v18, v20);
  swift_retain(a1);
  v21 = sub_1002A8704(a1, (uint64_t)a2, (uint64_t)v18, (uint64_t)a4);
  swift_retain(v21);
  sub_100039E4C((uint64_t)v15);
  v22 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 0, 1, v22);
  sub_10046ADD4((uint64_t)v15);
  v23 = sub_100080EAC((uint64_t)v15);
  v24 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v23);
  type metadata accessor for REMAnalyticsManager(0);
  v25 = v24;
  v26 = static REMAnalyticsManager.shared.getter();
  v27 = sub_10002A750(&qword_100645348);
  v28 = &v12[*(int *)(v27 + 48)];
  v29 = &v12[*(int *)(v27 + 80)];
  v30 = enum case for REMRemindersOpenUserOperation.SmartListType.completed(_:);
  v31 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v12, v30, v31);
  v32 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v33 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v12, v32, v33);
  *(_QWORD *)v28 = TTRUserDefaults.activitySessionId.getter(v34);
  *((_QWORD *)v28 + 1) = v35;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v29 = _typeName(_:qualified:)(v39, 0);
  *((_QWORD *)v29 + 1) = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMAnalyticsEvent.openListUserOperation(_:), v9);
  REMAnalyticsManager.post(event:)(v12);

  swift_release(v26);
  swift_release(v21);
  sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v21;
}

uint64_t sub_1002610D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100652D20);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100652D20);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100261240(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v14, "viewDidLoad");
  v3 = objc_msgSend(v2, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    v6 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 24, v2, "didTapClose:");
    v7 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v7, "setRightBarButtonItem:", v6);

    v8 = objc_msgSend(v2, "navigationItem");
    objc_msgSend(v8, "setLargeTitleDisplayMode:", 2);

    objc_msgSend(v2, "ttr_setNeedsUpdateContentUnavailableConfiguration");
    v9 = *(unsigned __int8 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders39TTRITemplateSharingOffineViewController_presenter]
                            + 48);
    v10 = objc_msgSend(v2, "navigationItem");
    TTRTemplateSharingViewModel.Purpose.viewTitle.getter(v9);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v10, "setTitle:", v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRITemplateSharingOffineViewController()
{
  return objc_opt_self(_TtC9Reminders39TTRITemplateSharingOffineViewController);
}

uint64_t sub_100261740()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026176C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100640914);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10005CFD4(a1, v4, v5, v6);
}

void sub_1002617D8()
{
  void *v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  Class v17;
  id v18;

  v1 = v0;
  v18 = objc_msgSend((id)objc_opt_self(TTRIContentUnavailableConfiguration), "emptyProminentConfiguration");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v2);

  objc_msgSend(v18, "setImage:", v3);
  static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v18, "setText:", v6);

  v7 = objc_msgSend(v18, "textProperties");
  v8 = objc_msgSend(v18, "textProperties");
  v9 = objc_msgSend(v8, "font");

  isa = UIFont.withRoundedDesign()().super.isa;
  objc_msgSend(v7, "setFont:", isa);

  static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v18, "setSecondaryText:", v13);

  v14 = objc_msgSend(v18, "secondaryTextProperties");
  v15 = objc_msgSend(v18, "secondaryTextProperties");
  v16 = objc_msgSend(v15, "font");

  v17 = UIFont.withRoundedDesign()().super.isa;
  objc_msgSend(v14, "setFont:", v17);

  objc_msgSend(v1, "ttr_setContentUnavailableConfiguration:", v18);
}

id sub_100261AEC(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardBackgroundView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v6 = swift_unknownObjectWeakInit(v5, 0).n128_u64[0];
  v12.receiver = v2;
  v12.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v12, "initWithCoder:", a1, v6);
  if (v7)
  {
    v8 = objc_allocWithZone((Class)UITapGestureRecognizer);
    v9 = v7;
    v10 = objc_msgSend(v8, "initWithTarget:action:", v9, "tapGestureAction:");
    objc_msgSend(v9, "addGestureRecognizer:", v10);

    a1 = v10;
  }

  return v7;
}

void sub_100261BEC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_100107414(a1, (uint64_t)v7);
  if (v8)
  {
    v2 = sub_100261D68();
    if ((swift_dynamicCast(&v6, v7, &type metadata for Any[8], v2, 6) & 1) != 0)
    {
      v3 = v6;
      if (UIAccessibilityIsVoiceOverRunning()
        || (objc_msgSend(v3, "locationInView:", v1),
            (Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardBackgroundView_delegate)) == 0))
      {

      }
      else
      {
        v5 = Strong;
        sub_100369880(v1);

        swift_unknownObjectRelease(v5);
      }
    }
  }
  else
  {
    sub_10002CAA0((uint64_t)v7);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardBackgroundView()
{
  return objc_opt_self(_TtC9Reminders32TTRIRemindersBoardBackgroundView);
}

unint64_t sub_100261D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652DA8;
  if (!qword_100652DA8)
  {
    v1 = objc_opt_self(UITapGestureRecognizer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100652DA8);
  }
  return result;
}

char *sub_100261DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  id v17;
  double v18;
  NSString v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  Class isa;
  char *v29;
  uint64_t v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  v9 = objc_msgSend(v7, "init");
  static TTRLocalizableStrings.Templates.templatePreview.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v14 = (void *)static UIFont.roundedBodyFont.getter(v13);
  objc_msgSend(v9, "setFont:", v14);

  v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v15);

  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v9, "setNumberOfLines:", 0);
  LODWORD(v16) = 1132068864;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 0, v16);
  *(_QWORD *)&v8[qword_100652DB0] = v9;
  v17 = v9;

  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  v32.receiver = v8;
  v32.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v32, "initWithStyle:reuseIdentifier:", a1, v19, v18);

  v21 = *(void **)&v20[direct field offset for TTRITableViewContainerCell.containerView];
  v22 = v20;
  v23 = v21;
  objc_msgSend(v23, "setHorizontalAlignment:", 1);
  objc_msgSend(v23, "setVerticalAlignment:", 0);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100521140;
  *(_QWORD *)(v25 + 32) = v17;
  v31 = v25;
  specialized Array._endMutation()(v25);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v26 = v17;
  v27 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  objc_msgSend(v22, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v29 = v22;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  return v29;
}

char *sub_100262088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_100261DA4(a3, a4, v6);
}

void sub_1002620D0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010056F5E0, "Reminders/TTRIRemindersListPublicTemplatePreviewStatusCell.swift", 64, 2, 46, 0);
  __break(1u);
}

void sub_100262128()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListPublicTemplatePreviewStatusCell.swift", 64, 2, 50, 0);
  __break(1u);
}

Class sub_100262180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  Class isa;

  v2 = sub_10002A750((uint64_t *)&unk_10064B8C0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100520250;
  v4 = *(void **)(a1 + qword_100652DB0);
  *(_QWORD *)(v3 + 56) = sub_100005ED8(0, &qword_10063F908, UILabel_ptr);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

void sub_10026221C()
{
  uint64_t v0;

}

void sub_10026222C(uint64_t a1)
{

}

uint64_t type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100652DE0;
  if (!qword_100652DE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListPublicTemplatePreviewStatusCell);
  return result;
}

uint64_t sub_100262278(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 152);
}

uint64_t sub_1002622BC()
{
  return type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell(0);
}

uint64_t sub_1002622C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100652EC0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100652EC0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100262390(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  void *object;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  _QWORD *v34;
  id result;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(_BYTE *, _QWORD);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_BYTE *, _QWORD);
  void *v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  _BYTE v98[32];
  objc_super v99;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750(&qword_10064F398);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  __chkstk_darwin(v5);
  v87 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v6;
  __chkstk_darwin(v7);
  v96 = (char *)&v83 - v8;
  v95 = sub_10002A750((uint64_t *)&unk_100652F90);
  v90 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v85 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v9;
  __chkstk_darwin(v10);
  v94 = (char *)&v83 - v11;
  v93 = (_QWORD *)type metadata accessor for UICollectionLayoutListConfiguration.FooterMode(0);
  v12 = *(v93 - 1);
  __chkstk_darwin(v93);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v88 = *(_QWORD *)(v19 - 8);
  v89 = v19;
  v20 = __chkstk_darwin(v19);
  v97 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99.receiver = v2;
  v99.super_class = ObjectType;
  objc_msgSendSuper2(&v99, "viewDidLoad", v20);
  v22 = objc_msgSend(v2, "navigationItem");
  if ((v2[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style] & 1) != 0)
  {
    static TTRLocalizableStrings.Templates.templatesListTitle.getter();
  }
  else
  {
    v24._object = (void *)0x8000000100570FB0;
    v25._object = (void *)0x8000000100570FD0;
    v24._countAndFlagsBits = 0xD00000000000001ALL;
    v26._countAndFlagsBits = 0x7473694C2077654ELL;
    v26._object = (void *)0xE800000000000000;
    v25._countAndFlagsBits = 0xD00000000000001ALL;
    object = TTRLocalizedString(_:value:comment:)(v24, v26, v25)._object;
  }
  v27 = object;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setTitle:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v15);
  v29 = v97;
  UICollectionLayoutListConfiguration.init(appearance:)(v18);
  (*(void (**)(char *, _QWORD, _QWORD *))(v12 + 104))(v14, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v93);
  UICollectionLayoutListConfiguration.footerMode.setter(v14);
  v30 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  v31 = swift_unknownObjectWeakInit(v30 + 16, v3);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_100266C6C, v30, v31);
  v32 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  v33 = swift_unknownObjectWeakInit(v32 + 16, v3);
  UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter(sub_100266C74, v32, v33);
  sub_100005ED8(0, (unint64_t *)&qword_10064F390, UICollectionViewCompositionalLayout_ptr);
  v34 = (_QWORD *)static UICollectionViewCompositionalLayout.list(using:)(v29);
  result = objc_msgSend(v3, "view");
  if (result)
  {
    v36 = result;
    objc_msgSend(result, "bounds");
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;

    v45 = objc_allocWithZone((Class)UICollectionView);
    v93 = v34;
    v46 = objc_msgSend(v45, "initWithFrame:collectionViewLayout:", v34, v38, v40, v42, v44);
    objc_msgSend(v46, "setAutoresizingMask:", 18);
    result = objc_msgSend(v3, "view");
    if (result)
    {
      v47 = result;
      objc_msgSend(result, "addSubview:", v46);

      objc_msgSend(v46, "setDelegate:", v3);
      objc_msgSend(v46, "setAllowsSelection:", 1);
      v48 = swift_allocObject(&unk_1005F9CA8, 24, 7);
      swift_unknownObjectWeakInit(v48 + 16, v3);
      v49 = type metadata accessor for TTRITemplatesListCell(0);
      v50 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v51 = v94;
      UICollectionView.CellRegistration.init(handler:)(sub_100266C7C, v48, v49, v50);
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
      v54 = v53;
      v55 = swift_allocObject(&unk_1005F9CA8, 24, 7);
      swift_unknownObjectWeakInit(v55 + 16, v3);
      v56 = sub_100005ED8(0, &qword_10064F3A8, UICollectionViewListCell_ptr);
      v57 = v96;
      UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v52, v54, sub_100266C84, v55, v56);
      v58 = v90;
      v59 = v85;
      v60 = v51;
      v61 = v95;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v85, v60, v95);
      v62 = *(unsigned __int8 *)(v58 + 80);
      v63 = (v62 + 16) & ~v62;
      v64 = swift_allocObject(&unk_1005F9DC0, v63 + v84, v62 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v64 + v63, v59, v61);
      v65 = objc_allocWithZone((Class)sub_10002A750(&qword_100652FA0));
      v66 = v46;
      v67 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v66, sub_100266C98, v64);
      v68 = v91;
      v69 = v87;
      v70 = v57;
      v71 = v92;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v87, v70, v92);
      v72 = *(unsigned __int8 *)(v68 + 80);
      v73 = (v72 + 16) & ~v72;
      v74 = swift_allocObject(&unk_1005F9DE8, v73 + v86, v72 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v74 + v73, v69, v71);
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_100240104, v74);
      v75 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v98);
      v76 = sub_10002A750(&qword_100652FA8);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0, v76);
      v75(v98, 0);
      v77 = swift_allocObject(&unk_1005F9CA8, 24, 7);
      swift_unknownObjectWeakInit(v77 + 16, v3);
      v78 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v98);
      UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_100266CFC, v77, v76);
      v78(v98, 0);
      v79 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView];
      *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = v66;
      v80 = v66;

      v81 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
      *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = v67;
      v82 = v67;

      sub_100264568(0);
      sub_100264864();

      (*(void (**)(char *, uint64_t))(v68 + 8))(v96, v71);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v94, v95);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v97, v89);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100262B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  _QWORD aBlock[6];
  _BYTE v28[24];

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = a2 + 16;
  static TTRLocalizableStrings.Templates.deleteTemplate.getter(v7);
  v10 = v9;
  v11 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_beginAccess(v8, v28, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  swift_unknownObjectWeakInit(v11 + 16, Strong);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005F9E38, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  aBlock[4] = sub_100266F44;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002B4CE4;
  aBlock[3] = &unk_1005F9E50;
  v17 = _Block_copy(aBlock);
  v18 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v16, v17);

  _Block_release(v17);
  swift_release();
  swift_release();
  v19 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100521140;
  *(_QWORD *)(v20 + 32) = v18;
  aBlock[0] = v20;
  specialized Array._endMutation()(v20);
  v21 = aBlock[0];
  sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
  v22 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  v24 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v24;
}

double sub_100262D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t (**v28)(unsigned __int8 *);
  double result;
  uint64_t v30;
  char v31[24];

  v30 = a6;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v13);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = a5 + 16;
  v17 = swift_allocObject(&unk_1005F9E88, 32, 7);
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
  v19 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_beginAccess(v16, v31, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
  swift_unknownObjectWeakInit(v19 + 16, Strong);
  swift_retain();

  v21 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  type metadata accessor for MainActor(0);
  swift_retain();
  v22 = swift_retain();
  v23 = static MainActor.shared.getter(v22);
  v24 = *(unsigned __int8 *)(v10 + 80);
  v25 = (v24 + 40) & ~v24;
  v26 = (v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject(&unk_1005F9EB0, v26 + 16, v24 | 7);
  *((_QWORD *)v27 + 2) = v23;
  *((_QWORD *)v27 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v27 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v25], v12, v21);
  v28 = (uint64_t (**)(unsigned __int8 *))&v27[v26];
  *v28 = sub_100266FD0;
  v28[1] = (uint64_t (*)(unsigned __int8 *))v17;
  swift_release();
  sub_100148368((uint64_t)v15, (uint64_t)&unk_100652FE8, (uint64_t)v27);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100262FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[21] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[22] = v10;
  v7[23] = v11;
  return swift_task_switch(sub_100263018, v10, v11);
}

void sub_100263018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  void (*v13)(char *, __n128);
  char v14;

  v1 = *(_QWORD *)(v0 + 136) + 16;
  swift_beginAccess(v1, v0 + 80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
  {
LABEL_6:
    v12 = swift_release();
    v13 = *(void (**)(char *, __n128))(v0 + 152);
    v14 = 0;
    v13(&v14, v12);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v3 = (void *)Strong;
  v4 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  v5 = v4;

  if (v4)
  {
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(*(_QWORD *)(v0 + 144));

    v6 = *(void **)(v0 + 128);
    *(_QWORD *)(v0 + 192) = v6;
    if (v6)
    {
      v7 = *(_QWORD *)(v0 + 136) + 16;
      swift_beginAccess(v7, v0 + 104, 0, 0);
      v8 = swift_unknownObjectWeakLoadStrong(v7);
      if (v8)
      {
        v9 = (void *)v8;
        v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
        *(_QWORD *)(v0 + 200) = v10;
        swift_unknownObjectRetain(v10);

        *(_QWORD *)(v0 + 48) = 0;
        *(_OWORD *)(v0 + 16) = 0u;
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 56) = xmmword_1005218A0;
        *(_BYTE *)(v0 + 72) = 0;
        v11 = (_QWORD *)swift_task_alloc(dword_10064BA1C);
        *(_QWORD *)(v0 + 208) = v11;
        *v11 = v0;
        v11[1] = sub_10026318C;
        sub_1001D72B0((uint64_t)v6, v0 + 16);
        return;
      }

    }
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_10026318C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 200);
  v3 = *(_QWORD *)(*v1 + 208);
  *(_BYTE *)(*v1 + 73) = a1;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  return swift_task_switch(sub_1002631EC, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_1002631EC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(char *);
  char v4;

  v1 = *(void **)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 168));

  v2 = *(void (**)(char *))(v0 + 152);
  v4 = *(_BYTE *)(v0 + 73);
  v2(&v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100263238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (!result)
    return 0;
  v5 = (char *)result;
  v6 = *(void **)(result + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v6)
  {
    v7 = v6;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if (v10)
    {
      v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
      swift_unknownObjectRetain(v8);
      v9 = sub_1001D92B0(v10);

      swift_unknownObjectRelease(v8);
      return (uint64_t)v9;
    }

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_100263308(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t (**v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Class (**v56)();
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  char *v64;
  char *v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char v116[24];
  char v117[16];

  v109 = type metadata accessor for UICellAccessory.DeleteOptions(0);
  v101 = *(_QWORD *)(v109 - 8);
  v7 = __chkstk_darwin(v109);
  v110 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for UICellAccessory.ReorderOptions(0, v7);
  v104 = *(_QWORD *)(v106 - 8);
  v9 = __chkstk_darwin(v106);
  v102 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for UICellAccessory.DisplayedState(0, v9);
  v113 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v108 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_10064F3E0);
  v13 = __chkstk_darwin(v12);
  v99 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v13);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for UICellAccessory.Placement(0);
  v95 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v94 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v92 = (char *)&v89 - v18;
  v107 = type metadata accessor for UICellAccessory(0);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v103 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v100 = (char *)&v89 - v21;
  __chkstk_darwin(v22);
  v114 = (char *)&v89 - v23;
  v24 = sub_10002A750(&qword_1006582E0);
  v91 = *(_QWORD *)(v24 - 8);
  v25 = *(_QWORD *)(v91 + 64);
  __chkstk_darwin(v24);
  v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v89 - v28;
  v30 = *a3;
  v31 = a4 + 16;
  swift_beginAccess(a4 + 16, v117, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
  v111 = a1;
  if (Strong)
  {
    v33 = (void *)Strong;
    v34 = v29;
    v35 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
    swift_unknownObjectRetain(v35);

    v36 = *(_QWORD *)(v35 + 64);
    v37 = *(unsigned __int8 *)(v35 + 72);
    v38 = *(_QWORD *)(v35 + 80);
    v39 = *(_QWORD *)(v35 + 88);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    v40 = v35;
    v29 = v34;
    swift_unknownObjectRelease(v40);
    TTRTemplatesListViewModel.template(with:)(v30, v36, v37, v38, v39, v41);
    swift_bridgeObjectRelease(v39);
    v42 = v38;
    v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    a1 = v111;
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v36);
  }
  else
  {
    v43 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v29, 1, 1, v43);
  }
  v44 = a1;
  sub_100375DCC((uint64_t)v29);
  v45 = sub_10002A750(&qword_10064F3F0);
  v46 = v92;
  v47 = (uint64_t (**)())&v92[*(int *)(v45 + 48)];
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 104);
  v90(v92, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v115);
  *v47 = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
  v47[1] = 0;
  v48 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v46, enum case for UICellAccessory.Placement.trailing(_:), v112);
  v49 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_beginAccess(v31, v116, 0, 0);
  v50 = swift_unknownObjectWeakLoadStrong(v31);
  v51 = (uint64_t)v29;
  v93 = v29;
  v52 = (void *)v50;
  swift_unknownObjectWeakInit(v49 + 16, v50);

  sub_100266D04(v51, (uint64_t)v26);
  v53 = *(unsigned __int8 *)(v91 + 80);
  v54 = (v53 + 24) & ~v53;
  v55 = swift_allocObject(&unk_1005F9E10, v54 + v25, v53 | 7);
  v89 = v49;
  *(_QWORD *)(v55 + 16) = v49;
  sub_100266E54((uint64_t)v26, v55 + v54);
  v56 = (Class (**)())(v44 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider);
  v57 = *(_QWORD *)(v44 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider);
  v58 = (uint64_t)v56[1];
  *v56 = sub_100266E9C;
  v56[1] = (Class (*)())v55;
  swift_retain();
  sub_1000381B8(v57, v58);
  swift_retain();
  v59 = sub_100376014();
  v60 = v94;
  v61 = v112;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v94, v46, v112);
  v62 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
  v64 = v99;
  v63(v99, 1, 1, v62);
  v65 = v96;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v59, v60, 2, v64, 0, 2);
  static UICellAccessory.customView(configuration:)(v65);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v65, v98);
  v66 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v46, v61, v66);
  v67 = swift_release();
  v68 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v69 = v108;
  v70 = v115;
  v71 = v90;
  ((void (*)(char *, _QWORD, uint64_t, __n128))v90)(v108, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v115, v67);
  v63(v64, 1, 1, v62);
  v72 = v102;
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v64, 0, 2);
  v73 = v100;
  static UICellAccessory.reorder(displayed:options:)(v69, v72);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v72, v106);
  v74 = *(void (**)(char *, uint64_t))(v113 + 8);
  v74(v69, v70);
  v71(v69, v68, v70);
  v63(v64, 1, 1, v62);
  v75 = v110;
  UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v64, 0, 0);
  v76 = v103;
  static UICellAccessory.delete(displayed:options:actionHandler:)(v69, v75, 0, 0);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v75, v109);
  v74(v69, v70);
  v77 = sub_10002A750((uint64_t *)&unk_100652FD0);
  v78 = v105;
  v79 = *(_QWORD *)(v105 + 72);
  v80 = *(unsigned __int8 *)(v105 + 80);
  v81 = (v80 + 32) & ~v80;
  v82 = swift_allocObject(v77, v81 + 3 * v79, v80 | 7);
  *(_OWORD *)(v82 + 16) = xmmword_1005275C0;
  v83 = v82 + v81;
  v84 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 16);
  v85 = v114;
  v86 = v107;
  v84(v83, v114, v107);
  v84(v83 + v79, v73, v86);
  v84(v83 + 2 * v79, v76, v86);
  UICollectionViewListCell.accessories.setter(v82);
  v87 = *(void (**)(char *, uint64_t))(v78 + 8);
  v87(v76, v86);
  v87(v73, v86);
  v87(v85, v86);
  return sub_1000073A0((uint64_t)v93, &qword_1006582E0);
}

Class sub_100263AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  Class v13;
  _BYTE v16[24];

  v4 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_100266D04(a2, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      sub_1001DAD48((uint64_t)v6, (uint64_t)v10);
      v13 = sub_100263C2C((uint64_t)v10);

      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
      return v13;
    }

    sub_1000073A0((uint64_t)v6, &qword_1006582E0);
  }
  return 0;
}

Class sub_100263C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  UIMenuElementSize v41;
  Swift::String v42;
  Class isa;
  Swift::OpaquePointer v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  UIImage_optional v54;

  v3 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v3);
  v49 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v5 = *(_QWORD *)(v48 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v48);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v52 = static TTRLocalizableStrings.Templates.editTemplate.getter();
  v46 = v8;
  v9 = String._bridgeToObjectiveC()();
  v51 = (id)objc_opt_self(UIImage);
  v10 = objc_msgSend(v51, "_systemImageNamed:", v9);

  v11 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  v47 = v1;
  swift_unknownObjectWeakInit(v11 + 16, v1);
  sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = v13 + v6;
  v15 = v12 | 7;
  v16 = swift_allocObject(&unk_1005F9D20, v14, v12 | 7);
  *(_QWORD *)(v16 + 16) = v11;
  sub_1001DAD48((uint64_t)v7, v16 + v13);
  v52 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v52, v46, 0, 0, v10, 0, 0, 0, 0, 0, 0, sub_1002669F4, v16);
  v17 = v49;
  sub_10002B1E8(a1 + *(int *)(v48 + 28), v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  v18 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v19 = a1;
  sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  v20 = swift_allocObject(&unk_1005F9D48, v14, v15);
  *(_QWORD *)(v20 + 16) = v18;
  sub_1001DAD48((uint64_t)v7, v20 + v13);
  swift_retain();
  v21 = (void *)sub_1000B0398(v17, 1, (uint64_t)sub_100266A04, v20);
  swift_release();
  sub_10001F544(v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  *(_QWORD *)&v22 = swift_release().n128_u64[0];
  v23 = static TTRLocalizableStrings.Templates.deleteTemplate.getter(v22);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v51, "_systemImageNamed:", v26);

  v28 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v47);
  sub_10002B1E8(v19, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  v29 = swift_allocObject(&unk_1005F9D70, v14, v15);
  *(_QWORD *)(v29 + 16) = v28;
  sub_1001DAD48((uint64_t)v7, v29 + v13);
  v30 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v23, v25, 0, 0, v27, 0, 0, 0, 0, 2, 0, sub_100266A48, v29);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v31 = sub_10002A750(&qword_100652F50);
  v32 = swift_allocObject(v31, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1005275C0;
  v33 = (void *)v52;
  *(_QWORD *)(v32 + 32) = v52;
  *(_QWORD *)(v32 + 40) = v21;
  *(_QWORD *)(v32 + 48) = v30;
  v53 = v32;
  specialized Array._endMutation()(v32);
  v34 = v53;
  v35 = v21;
  v36 = v30;
  v37 = v33;
  v38 = sub_10002A750((uint64_t *)&unk_100652F58);
  v39 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  v40 = sub_100266AA4();
  v41 = Sequence.removingNils<A>()(v38, v39, v40);
  swift_bridgeObjectRelease(v34);
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v54.value.super.isa = 0;
  v54.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v54, 0, 0xFFFFFFFFFFFFFFFFLL, v41, v45).super.super.isa;

  return isa;
}

void sub_1002640CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a5 + 16;
  swift_beginAccess(a5 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100264138();

  }
}

uint64_t sub_100264138()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  _QWORD *v15;
  _QWORD v17[5];

  v1 = type metadata accessor for UIListContentConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UICollectionViewListCell.defaultContentConfiguration()(v3);
  v7 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (v7)
  {
    v8 = v7;
    v9 = IndexPath.section.getter(v8);
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(v17, v9);

    if ((v17[0] & 1) == 0)
    {
      if ((objc_msgSend(v0, "isEditing") & 1) != 0)
      {
        countAndFlagsBits = 0;
        object = (void *)0xE000000000000000;
      }
      else
      {
        v12._countAndFlagsBits = 0xD000000000000023;
        v12._object = (void *)0x8000000100570F50;
        v13._object = (void *)0x8000000100570F80;
        v13._countAndFlagsBits = 0xD000000000000020;
        v14 = TTRLocalizedString(_:comment:)(v12, v13);
        object = v14._object;
        countAndFlagsBits = v14._countAndFlagsBits;
      }
      UIListContentConfiguration.text.setter(countAndFlagsBits, object);
    }
    v17[3] = v1;
    v17[4] = &protocol witness table for UIListContentConfiguration;
    v15 = sub_100028D70(v17);
    (*(void (**)(_QWORD *, char *, uint64_t))(v2 + 16))(v15, v5, v1);
    UICollectionViewCell.contentConfiguration.setter(v17);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10026429C(uint64_t a1, uint64_t a2, id *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v11;

  v11 = *a3;
  v6 = type metadata accessor for TTRITemplatesListCell(0);
  v7 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v8 = v11;
  v9 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, &v11, v6, v7);

  return v9;
}

void sub_100264338(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];

  v3 = sub_10002A750(&qword_100652FB0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10002A750(&qword_100652FB8);
  __chkstk_darwin(v7);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10002A750(&qword_100652FC0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = sub_10002A750(&qword_100652FC8);
    v17 = NSDiffableDataSourceTransaction.sectionTransactions.getter(v16);
    v18 = v17;
    if (*(_QWORD *)(v17 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, v17 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
    v20 = swift_bridgeObjectRelease(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v20) == 1)
    {

      sub_1000073A0((uint64_t)v9, &qword_100652FB8);
    }
    else
    {
      v21.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      NSDiffableDataSourceSectionTransaction.finalSnapshot.getter(v10, v21);
      v22 = NSDiffableDataSourceSectionSnapshot.items.getter(v3);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1001D9020(v22);
      v23 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v23);

    }
  }
}

uint64_t sub_100264568(int a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  void *v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;

  v44 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100652F40);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 72);
  v9 = *(_QWORD *)(v5 + 80);
  v8 = *(_QWORD *)(v5 + 88);
  v47 = v9;
  v48 = v1;
  v10 = (uint64_t *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  v49 = v6;
  if (!v11)
  {
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v9);
    v22 = swift_bridgeObjectRetain(v8);
    v23 = v6;
    v20 = v7;
    v21 = v8;
    TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter(v23, v7, v9, v8, v22);
    goto LABEL_5;
  }
  v12 = v4;
  v14 = v10[2];
  v13 = v10[3];
  v15 = v10[1];
  v43 = v10[1] & 1;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  sub_100265E28(v11, v15, v14, v13);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  v16 = swift_bridgeObjectRetain(v13);
  LODWORD(v15) = TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter(v11, v43, v14, v13, v16) & 1;
  v17 = v13;
  v4 = v12;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v14);
  v18 = swift_bridgeObjectRelease(v11);
  v19 = v6;
  v20 = v7;
  v21 = v8;
  if ((TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter(v19, v7, v9, v8, v18) & 1) != (_DWORD)v15)
LABEL_5:
    objc_msgSend(v48, "ttr_setNeedsUpdateContentUnavailableConfiguration");
  v24 = v4;
  v25 = *v10;
  if (*v10)
  {
    v27 = v10[2];
    v26 = v10[3];
    v28 = v10[1] & 1;
    swift_bridgeObjectRetain(*v10);
    swift_bridgeObjectRetain(v27);
    v29 = swift_bridgeObjectRetain(v26);
    LOBYTE(v28) = TTRTemplatesListViewModel.isEmpty.getter(v25, v28, v27, v26, v29);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v25);
    v30 = v28 ^ 1;
    v25 = *v10;
  }
  else
  {
    v30 = 0;
  }
  v31 = v10[1];
  v32 = v10[2];
  v33 = v10[3];
  sub_100265E28(v25, v31, v32, v33);
  v34 = v47;
  TTRTemplatesListViewModel.snapshot(previousViewModel:)(v25, v31, v32, v33, v49, v20, v47, v21);
  result = sub_100265E60(v25, v31, v32, v33);
  v36 = *(void **)&v48[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (v36)
  {
    v37 = v44 & v30;
    v38 = v36;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v24, v37 & 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v46);
    v39 = *v10;
    v40 = v10[1];
    v41 = v10[2];
    v42 = v10[3];
    *v10 = v49;
    v10[1] = v20;
    v10[2] = v34;
    v10[3] = v21;
    return sub_100265E60(v39, v40, v41, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100264864()
{
  char *v0;
  char *v1;
  char v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  Class isa;
  id v24;

  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style];
  v3 = objc_msgSend(v1, "navigationItem");
  if ((v2 & 1) != 0)
  {
    v4 = objc_msgSend(v1, "editButtonItem");
    objc_msgSend(v3, "setLeftBarButtonItem:", v4);

    v5 = objc_msgSend(v1, "navigationItem");
    if ((objc_msgSend(v1, "isEditing") & 1) != 0)
      v6 = 0;
    else
      v6 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    objc_msgSend(v5, "setRightBarButtonItem:", v6);

    v15 = objc_msgSend(v1, "editButtonItem");
    if ((objc_msgSend(v1, "isEditing") & 1) != 0)
    {
      v16 = 1;
    }
    else
    {
      v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
      v18 = *(_QWORD *)(v17 + 64);
      v19 = *(unsigned __int8 *)(v17 + 72);
      v20 = *(_QWORD *)(v17 + 80);
      v21 = *(_QWORD *)(v17 + 88);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
      v22 = swift_bridgeObjectRetain(v21);
      LOBYTE(v19) = TTRTemplatesListViewModel.isEmpty.getter(v18, v19, v20, v21, v22);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      v16 = v19 ^ 1;
    }
    objc_msgSend(v15, "setEnabled:", v16 & 1);

    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    v7 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
    objc_msgSend(v3, "setLeftBarButtonItem:", v7);

    v8 = objc_msgSend(v1, "navigationItem");
    v9 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    objc_msgSend(v8, "setRightBarButtonItem:", v9);

    v10 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    objc_msgSend(v10, "setEnabled:", 0);

    v11 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_10051FF90;
    *(_QWORD *)(v12 + 32) = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
    v13 = objc_msgSend(v1, "editButtonItem");
    *(_QWORD *)(v12 + 40) = v13;
    specialized Array._endMutation()(v13);
    sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  objc_msgSend(v1, "setToolbarItems:", isa, v14, isa);

}

void sub_100264DA0(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char v4;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char v18;
  char v19;
  void *v20;
  NSString *v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  id v26;
  objc_super v27;

  v3 = v2;
  v4 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.receiver = v3;
  v27.super_class = ObjectType;
  v12 = a1 & 1;
  objc_msgSendSuper2(&v27, "setEditing:animated:", v12, v4 & 1, v9);
  v13 = OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView;
  v14 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView];
  if (!v14)
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(v14, "setEditing:", v12);
  sub_100264864();
  v15 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = v15;
  v17 = dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
  v19 = v18;

  if ((v19 & 1) != 0)
    return;
  IndexPath.init(row:section:)(0, v17);
  v20 = *(void **)&v3[v13];
  if (!v20)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v21 = UICollectionElementKindSectionFooter;
  v22 = v20;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "supplementaryViewForElementKind:atIndexPath:", v21, isa);

  if (v24)
  {
    v25 = objc_opt_self(UICollectionViewListCell);
    if (swift_dynamicCastObjCClass(v24, v25))
    {
      v26 = v24;
      sub_100264138();

    }
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_100265004(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  void *v17;
  _BYTE v18[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
    swift_unknownObjectRetain(v7);

    v8 = *a3;
    if (qword_10063D490 != -1)
      swift_once(&qword_10063D490, sub_1001D7220);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_10064B8E8);
    v10 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Templates List Show Editor", 26, 2, v10);
    swift_bridgeObjectRelease(v10);
    if (*(_BYTE *)(v7 + 176) == 1
      || (v12 = *(_QWORD *)(v7 + 104),
          ObjectType = swift_getObjectType(*(_QWORD *)(v7 + 96), v11),
          (v14 = TTRTemplatesListInteractorType.template(with:)(v8, ObjectType, v12)) == 0))
    {
      swift_unknownObjectRelease(v7);
    }
    else
    {
      v15 = (_QWORD *)v14;
      objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_editorUndoManager), "removeAllActions");
      v16 = sub_10001413C((_QWORD *)(v7 + 112), *(_QWORD *)(v7 + 136));
      v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12);
      sub_100265E98(v15, v17, v7, *v16);
      swift_unknownObjectRelease(v7);

    }
  }
}

uint64_t sub_10026518C(char a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
    swift_unknownObjectRetain(v8);

    sub_1001D9778(a1, *a3);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

double sub_100265214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  double result;
  _BYTE v23[24];

  v5 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = a2 + 16;
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  v14 = swift_allocObject(&unk_1005F9CA8, 24, 7);
  swift_beginAccess(v12, v23, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
  swift_unknownObjectWeakInit(v14 + 16, Strong);

  sub_10002B1E8(a3, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  type metadata accessor for MainActor(0);
  v16 = swift_retain();
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (_QWORD *)swift_allocObject(&unk_1005F9D98, v19 + v7, v18 | 7);
  v20[2] = v17;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v14;
  sub_1001DAD48((uint64_t)v8, (uint64_t)v20 + v19);
  swift_release();
  sub_100148368((uint64_t)v11, (uint64_t)&unk_100652F80, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1002653D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[22] = a4;
  v5[23] = a5;
  v6 = sub_10002A750(&qword_100646950);
  v5[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v5[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[26] = v8;
  v5[27] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v5[29] = v11;
  v5[30] = v12;
  return swift_task_switch(sub_100265488, v11, v12);
}

uint64_t sub_100265488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 176) + 16;
  swift_beginAccess(v1, v0 + 144, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 248) = result;
  if (!result)
  {
    swift_release();
    v17 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = result;
  v4 = *(void **)(result + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 192);
    v6 = **(_QWORD **)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 168) = v6;
    v9 = v4;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v0 + 168);

    v29 = v6;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v8) == 1)
    {
      sub_1000073A0(*(_QWORD *)(v0 + 192), &qword_100646950);
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      LOBYTE(v16) = 0;
      goto LABEL_10;
    }
    result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
    v18 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView);
    if (v18)
    {
      v19 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v21 = *(_QWORD *)(v0 + 200);
      v22 = v18;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v16 = objc_msgSend(v22, "cellForItemAtIndexPath:", isa, v29);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
      if (v16)
      {
        static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)((_QWORD *)(v0 + 80), v16, 3, 0, v24);
        v25 = *(_QWORD *)(v0 + 80);
        v11 = *(_QWORD *)(v0 + 88);
        v12 = *(_QWORD *)(v0 + 96);
        v13 = *(_QWORD *)(v0 + 104);
        v14 = *(_QWORD *)(v0 + 112);
        v26 = *(unsigned __int8 *)(v0 + 120);
        v15 = *(_QWORD *)(v0 + 128);
        v27 = v16;
        LOBYTE(v16) = *(_BYTE *)(v0 + 136);

        v10 = v25;
LABEL_11:
        *(_BYTE *)(v0 + 73) = (_BYTE)v16;
        *(_QWORD *)(v0 + 296) = v26;
        *(_QWORD *)(v0 + 304) = v15;
        *(_QWORD *)(v0 + 280) = v13;
        *(_QWORD *)(v0 + 288) = v14;
        *(_QWORD *)(v0 + 264) = v11;
        *(_QWORD *)(v0 + 272) = v12;
        *(_QWORD *)(v0 + 256) = v10;
        *(_QWORD *)(v0 + 16) = v10;
        *(_QWORD *)(v0 + 24) = v11;
        *(_QWORD *)(v0 + 32) = v12;
        *(_QWORD *)(v0 + 40) = v13;
        *(_QWORD *)(v0 + 48) = v14;
        *(_QWORD *)(v0 + 56) = v26;
        *(_QWORD *)(v0 + 64) = v15;
        *(_BYTE *)(v0 + 72) = (_BYTE)v16;
        v28 = (_QWORD *)swift_task_alloc(dword_10064BA1C);
        *(_QWORD *)(v0 + 312) = v28;
        *v28 = v0;
        v28[1] = sub_100265704;
        return sub_1001D72B0(v29, v0 + 16);
      }
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
LABEL_10:
      v26 = 254;
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100265704()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  return swift_task_switch(sub_100265750, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_100265750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v7 = *(void **)(v0 + 248);
  v6 = *(void **)(v0 + 256);
  swift_release();
  sub_1000866B0(v6, v5, v4, v3, v2, v1);

  v8 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for TTRITemplatesListViewController()
{
  return objc_opt_self(_TtC9Reminders31TTRITemplatesListViewController);
}

double sub_100265A00@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double result;
  __int128 v14;
  _OWORD v15[2];
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char v19;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style) == 1)
  {
    if (qword_10063D5A0 != -1)
      swift_once(&qword_10063D5A0, sub_1002622C4);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100012DC4(v3, (uint64_t)qword_100652EC0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.fault.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRITemplatesListViewController: unexpected call to popoverAnchorForDiscardChangesAlert", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

  }
  v8 = sub_10023EDD0(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
  static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)(v15, v8, 0, 1);
  v9 = v16;
  v10 = v17;
  v11 = v18;
  v12 = v19;

  result = *(double *)v15;
  v14 = v15[1];
  *(_OWORD *)a1 = v15[0];
  *(_OWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  return result;
}

void sub_100265B50(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  Class isa;
  void *v7;
  id v8;
  id v9;
  Class v10;
  id v11;
  __n128 v12;
  id v13[8];

  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  v7 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v7)
  {
    v8 = v7;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

    v9 = v13[0];
    if (v13[0])
    {
      v10 = IndexPath._bridgeToObjectiveC()().super.isa;
      v11 = objc_msgSend(a1, "cellForItemAtIndexPath:", v10);

      if (v11)
      {
        static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v13, v11, 0, 1, v12);
        sub_1001DA798((uint64_t)v9);
        sub_1000A2958((uint64_t)v13);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

Class sub_100265D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  Class v7;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = (void *)Strong;
  v7 = sub_100263C2C(a3);

  return v7;
}

uint64_t sub_100265E28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a3);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_100265E60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_100265E98(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33[5];

  v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD **)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = type metadata accessor for TTRAttachmentThumbnailSizeProvider(0);
    v31 = a3;
    v14 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
    v15 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v16 = static OS_dispatch_queue.main.getter(v15);
    v30 = a1;
    v17 = v16;
    type metadata accessor for RDIDispatchQueue(0);
    v18 = static RDIDispatchQueue.utilityQueue.getter();
    v19 = type metadata accessor for TTRThumbnailGenerator(0);
    swift_allocObject(v19, 32, 7);
    v20 = TTRThumbnailGenerator.init(queue:backgroundQueue:)(v17, v18);
    v33[3] = v19;
    v33[4] = (uint64_t)&protocol witness table for TTRThumbnailGenerator;
    v33[0] = v20;
    v32[3] = v13;
    v32[4] = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
    v32[0] = v14;
    v21 = type metadata accessor for TTRAttachmentThumbnailsManager(0);
    swift_allocObject(v21, 120, 7);
    v22 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)(v32, v33);
    v23 = (char *)v10 + v8[5];
    v24 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    v25 = type metadata accessor for TTRIHashtagAssociationNoOpModuleInterface();
    v26 = swift_allocObject(v25, 16, 7);
    *v10 = a2;
    *(_QWORD *)((char *)v10 + v8[6]) = v22;
    v27 = (_QWORD *)((char *)v10 + v8[7]);
    *v27 = v26;
    v27[1] = (uint64_t)&off_1005F7BB0;
    *((_BYTE *)v10 + v8[8]) = 0;
    type metadata accessor for TTRIShowTemplateAssembly();
    v28 = a2;
    swift_retain();
    v29 = sub_100405F04(v33, (uint64_t)v10, v30, v31);
    sub_100027F10(v33);
    objc_msgSend(v12, "presentViewController:animated:completion:", v29, 1, 0);
    swift_release();

    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    swift_unknownObjectWeakAssign(a4 + 24, v29);

  }
}

void sub_1002660E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = 0;
  v5 = &v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton] = 0;

  if (qword_10063D5A0 != -1)
    swift_once(&qword_10063D5A0, sub_1002622C4);
  v6 = sub_100012DC4(v1, (uint64_t)qword_100652EC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"init(coder:) has not been implemented", 37, 2uLL, v7, v8);
  __break(1u);
}

void sub_100266200()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  Class v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  void *object;
  NSString v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  NSString v37;
  id v38;
  Swift::String v39;
  id v40;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(unsigned __int8 *)(v2 + 72);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  v7 = swift_bridgeObjectRetain(v6);
  LOBYTE(v4) = TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter(v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v3);
  if ((v4 & 1) != 0)
  {
    v40 = objc_msgSend((id)objc_opt_self(TTRIContentUnavailableConfiguration), "emptyProminentConfiguration");
    v8 = String._bridgeToObjectiveC()();
    v9 = (void *)objc_opt_self(UIImage);
    v10 = objc_msgSend(v9, "_systemImageNamed:", v8);

    objc_msgSend(v40, "setImage:", v10);
    static TTRLocalizableStrings.Templates.noTemplates.getter();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "setText:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v14 = objc_msgSend(v40, "textProperties");
    v15 = objc_msgSend(v40, "textProperties");
    v16 = objc_msgSend(v15, "font");

    isa = UIFont.withRoundedDesign()().super.isa;
    objc_msgSend(v14, "setFont:", isa);

    v18 = objc_msgSend(v40, "secondaryTextProperties");
    v19 = objc_msgSend(v40, "secondaryTextProperties");
    v20 = objc_msgSend(v19, "font");

    v21 = UIFont.withRoundedDesign()().super.isa;
    objc_msgSend(v18, "setFont:", v21);

    v22._countAndFlagsBits = 0xD00000000000002BLL;
    v23._countAndFlagsBits = 0xD000000000000062;
    v24._countAndFlagsBits = 0xD00000000000008ELL;
    v22._object = (void *)0x8000000100570E20;
    v23._object = (void *)0x8000000100570E50;
    v24._object = (void *)0x8000000100570EC0;
    object = TTRLocalizedString(_:value:comment:)(v22, v23, v24)._object;
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v9, "_systemImageNamed:", v26);

    sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    v28 = (void *)static UIImage.transformOptionalValue(_:)(v27);

    v29 = objc_msgSend(v40, "secondaryTextProperties");
    v30 = objc_msgSend(v29, "font");

    v31 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v30);
    v32 = objc_msgSend(v28, "imageWithConfiguration:", v31);

    v33 = objc_msgSend(v40, "secondaryTextProperties");
    v34 = objc_msgSend(v33, "color");

    v35 = objc_msgSend(v32, "imageWithTintColor:", v34);
    v36 = objc_allocWithZone((Class)NSMutableAttributedString);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "initWithString:", v37, swift_bridgeObjectRelease(object).n128_f64[0]);

    v39._countAndFlagsBits = 0x3E4E4F43493CLL;
    v39._object = (void *)0xE600000000000000;
    NSMutableAttributedString.replace(placeholder:with:)(v39, (UIImage)v35);
    objc_msgSend(v40, "setSecondaryAttributedText:", v38);

  }
  else
  {
    v40 = 0;
  }
  objc_msgSend(v1, "ttr_setContentUnavailableConfiguration:", v40);

}

void sub_100266694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v13)
  {
    v14 = v13;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    v15 = (void *)aBlock[0];
    if (aBlock[0])
    {
      v31 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      v32 = v12;
      v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
      v17 = *(_QWORD *)(v16 + 64);
      v18 = *(unsigned __int8 *)(v16 + 72);
      v20 = *(_QWORD *)(v16 + 80);
      v19 = *(_QWORD *)(v16 + 88);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v20);
      v21 = swift_bridgeObjectRetain(v19);
      TTRTemplatesListViewModel.template(with:)(v15, v17, v18, v20, v19, v21);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v20);
      v22 = swift_bridgeObjectRelease(v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v22) == 1)
      {

        sub_1000073A0((uint64_t)v6, &qword_1006582E0);
      }
      else
      {
        v23 = (uint64_t)v32;
        sub_1001DAD48((uint64_t)v6, (uint64_t)v32);
        v24 = swift_allocObject(&unk_1005F9CA8, 24, 7);
        swift_unknownObjectWeakInit(v24 + 16, v2);
        v25 = v31;
        sub_10002B1E8(v23, v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
        v26 = *(unsigned __int8 *)(v8 + 80);
        v27 = (v26 + 24) & ~v26;
        v28 = swift_allocObject(&unk_1005F9CD0, v27 + v9, v26 | 7);
        *(_QWORD *)(v28 + 16) = v24;
        sub_1001DAD48(v25, v28 + v27);
        v29 = (void *)objc_opt_self(UIContextMenuConfiguration);
        aBlock[4] = sub_1002669B0;
        aBlock[5] = v28;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100172B74;
        aBlock[3] = &unk_1005F9CE8;
        v30 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        objc_msgSend(v29, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v30, swift_release().n128_f64[0]);
        swift_release();
        _Block_release(v30);

        sub_10001F544(v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
        swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100266988()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

Class sub_1002669B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRTemplatesListViewModel.Template(0) - 8) + 80);
  return sub_100265D0C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1002669F4(uint64_t a1)
{
  return sub_100266A54(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100265004);
}

uint64_t sub_100266A04(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRTemplatesListViewModel.Template(0) - 8) + 80);
  return sub_10026518C(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_100266A48(uint64_t a1)
{
  return sub_100266A54(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100265214);
}

uint64_t sub_100266A54(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRTemplatesListViewModel.Template(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4));
}

unint64_t sub_100266AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652F68;
  if (!qword_100652F68)
  {
    v1 = sub_10002CA5C((uint64_t *)&unk_100652F58);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100652F68);
  }
  return result;
}

uint64_t sub_100266AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v6 = v0 + v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  sub_10002B328(*(void **)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), *(_BYTE *)(v6 + 88));
  sub_10002B318(*(void **)(v6 + 96), *(id *)(v6 + 104), *(_BYTE *)(v6 + 112));
  v7 = v0 + v4 + *(int *)(v1 + 28);
  v8 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100266BD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRTemplatesListViewModel.Template(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100652F7C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_1002653D0(a1, v5, v6, v7, v8);
}

id sub_100266C6C(uint64_t a1)
{
  uint64_t v1;

  return sub_100262B00(a1, v1);
}

uint64_t sub_100266C74(uint64_t a1)
{
  uint64_t v1;

  return sub_100263238(a1, v1);
}

uint64_t sub_100266C7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_100263308(a1, a2, a3, v3);
}

void sub_100266C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1002640CC(a1, a2, a3, a4, v4);
}

uint64_t sub_100266C8C()
{
  return sub_100123090((uint64_t *)&unk_100652F90);
}

uint64_t sub_100266C98(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100652F90) - 8) + 80);
  return sub_10026429C(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_100266CF0()
{
  return sub_100123090(&qword_10064F398);
}

void sub_100266CFC(uint64_t a1)
{
  uint64_t v1;

  sub_100264338(a1, v1);
}

uint64_t sub_100266D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006582E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100266D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(sub_10002A750(&qword_1006582E0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release();
  v5 = v0 + v3;
  v6 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {

    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 16));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 32));
    sub_10002B328(*(void **)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_BYTE *)(v5 + 88));
    sub_10002B318(*(void **)(v5 + 96), *(id *)(v5 + 104), *(_BYTE *)(v5 + 112));
    v7 = v5 + *(int *)(v6 + 28);
    v8 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    }
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100266E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006582E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Class sub_100266E9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_1006582E0) - 8) + 80);
  return sub_100263AE4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100266ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100266F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_100262D88(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_100266FAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100266FD0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1000EEE5C(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_100266FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100267074(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_100652FE4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10004A08C;
  return sub_100262FA8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100267130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100652FF0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100652FF0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002671C0()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100027F10((_QWORD *)(v0 + 48));

  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_100267224()
{
  uint64_t v0;

  sub_1002671C0();
  return swift_deallocClassInstance(v0, 146, 7);
}

BOOL sub_100267244(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[88];

  v47 = a2;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  v5 = __chkstk_darwin(v3);
  v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - v7;
  v9 = sub_10002A750(&qword_1006655A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMNavigationSpecifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v45 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D5A8 != -1)
    swift_once(&qword_10063D5A8, sub_100267130);
  v19 = sub_100012DC4(v15, (uint64_t)qword_100652FF0);
  v20 = *(void (**)(char *))(v16 + 16);
  v44 = v19;
  v20(v18);
  v21 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v21, v53);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 7107189;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v23 = URL.absoluteString.getter(inited);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v23;
  *(_QWORD *)(inited + 56) = v24;
  v25 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Navigate to url {url: %@}", 25, 2, v25);
  swift_bridgeObjectRelease(v25);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v27 = v49;
  v26 = v50;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v28(v8, a1, v49);
  REMNavigationSpecifier.init(_:)(v8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v29 == 1)
  {
    sub_1000073A0((uint64_t)v11, &qword_1006655A0);
    v34 = v48;
    v35 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v48, a1, v27);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v52 = v39;
      *(_DWORD *)v38 = 136315138;
      v40 = URL.absoluteString.getter(v39);
      v42 = v41;
      v51 = sub_100027E40(v40, v41, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v27);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to parse navigation specifier from url - failed to navigate to url {url: %s}", v38, 0xCu);
      swift_arrayDestroy(v39, 1, &type metadata for Any[8]);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v27);
    }

  }
  else
  {
    v30 = v45;
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v45, v11, v12);
    __chkstk_darwin(v31);
    v32 = v46;
    *(&v44 - 4) = (uint64_t)v30;
    *(&v44 - 3) = v32;
    *(&v44 - 2) = v47;
    v33 = firstly<A>(closure:)(sub_100289DD0, &v44 - 6, &type metadata for Any[8]);
    swift_release(v33);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v12);
  }
  return v29 != 1;
}

uint64_t sub_100267678(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  id v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  void (*v48)(id, uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  _QWORD *v59;
  _QWORD *v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  int *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v81;
  uint64_t v82;
  void *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  __n128 v91;
  _QWORD *v92;
  id v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  int *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(id, uint64_t, uint64_t, __n128);
  __n128 v113;
  uint64_t v114;
  void *v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  void *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  __n128 v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  __n128 v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(id, uint64_t, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, char *, uint64_t);
  __n128 v150;
  void (*v151)(char *, char *, uint64_t);
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v162;
  uint64_t v163;
  void *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t (*v169)(uint64_t *);
  void (*v170)(char *, char *, uint64_t);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  uint64_t result;
  __n128 v185;
  uint64_t v186;
  void (*v187)(char *, id *, uint64_t);
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  __n128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __n128 v203;
  char v204;
  int *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __n128 v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t **v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t *v226;
  void *v227;
  NSString v228;
  id v229;
  uint64_t v230;
  __n128 v231;
  _QWORD *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  _QWORD *v265;
  char *v266;
  void (*v267)(char *, char *, uint64_t);
  _QWORD *v268;
  uint64_t v269;

  v266 = a3;
  v268 = a2;
  v4 = type metadata accessor for REMAnalyticsEvent(0);
  v259 = *(_QWORD *)(v4 - 8);
  v260 = v4;
  __chkstk_darwin(v4);
  v258 = (char *)&v233 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v256 = *(_QWORD *)(v6 - 8);
  v257 = v6;
  __chkstk_darwin(v6);
  v255 = (char *)&v233 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v235 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v234 = (char *)&v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v239 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v238 = (char *)&v233 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v243 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v241 = (char *)&v233 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = v10;
  __chkstk_darwin(v11);
  v242 = (char *)&v233 - v12;
  v13 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v252 = *(_QWORD *)(v13 - 8);
  v253 = v13;
  v14 = *(_QWORD *)(v252 + 64);
  __chkstk_darwin(v13);
  v251 = (char *)&v233 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v254 = (char *)&v233 - v16;
  v17 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v249 = *(_QWORD *)(v17 - 8);
  v250 = v17;
  __chkstk_darwin(v17);
  v247 = (char *)&v233 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = v18;
  __chkstk_darwin(v19);
  v248 = (char *)&v233 - v20;
  v265 = (_QWORD *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v267 = (void (*)(char *, char *, uint64_t))*(v265 - 1);
  __chkstk_darwin(v265);
  v263 = (char *)&v233 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v261 = (char *)&v233 - v23;
  v262 = v24;
  __chkstk_darwin(v25);
  v264 = (char *)&v233 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v233 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v233 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v245 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v266 = (char *)&v233 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = *v37;
    v41 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v267 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v233 = v32;
    v267(v32, v41, v27);
    v42 = v268;
    v43 = v268[4];
    v44 = v268[5];
    ObjectType = swift_getObjectType(v43, v45);
    v269 = v43;
    v47 = *(_QWORD *)(v44 + 8);
    v48 = *(void (**)(id, uint64_t, uint64_t, __n128))(v47 + 24);
    v49 = swift_unknownObjectRetain(v43);
    v48(v40, ObjectType, v47, v49);
    v50 = swift_unknownObjectRelease(v43);
    v51 = (void *)zalgoIfMain.getter(v50);
    v52 = v266;
    v53 = v233;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v266, v233, v27);
    v54 = *(unsigned __int8 *)(v28 + 80);
    v55 = (v54 + 24) & ~v54;
    v56 = swift_allocObject(&unk_1005FA310, v55 + v29, v54 | 7);
    *(_QWORD *)(v56 + 16) = v42;
    v267((char *)(v56 + v55), v52, v27);
    swift_retain();
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_100286AB4, v56, &type metadata for Any[8]);

    swift_release();
    v58 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v53, v27, v58);
    return v57;
  }
  v59 = v268;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v60 = *v37;
    v61 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v62 = v265;
    v261 = (char *)*((_QWORD *)v267 + 4);
    ((void (*)(char *, char *, _QWORD *))v261)(v264, v61, v265);
    if ((v266 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter();
      v64 = (int *)sub_10002A750(&qword_100649F98);
      v65 = v258;
      v66 = &v258[v64[12]];
      v67 = &v258[v64[16]];
      v68 = &v258[v64[20]];
      v69 = enum case for REMUserOperation.widgetShowList(_:);
      v70 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v65, v69, v70);
      v71 = type metadata accessor for Date(0);
      *(_QWORD *)v66 = 0;
      *((_QWORD *)v66 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v67, 1, 1, v71);
      *(_QWORD *)v68 = 0;
      *((_QWORD *)v68 + 1) = 0;
      v73 = v259;
      v72 = v260;
      (*(void (**)(char *, _QWORD, uint64_t))(v259 + 104))(v65, enum case for REMAnalyticsEvent.userOperation(_:), v260);
      REMAnalyticsManager.post(event:)(v65);
      v74 = swift_release();
      v75 = v65;
      v62 = v265;
      (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v75, v72, v74);
    }
    v76 = v59[4];
    v77 = v59[5];
    v78 = swift_getObjectType(v76, v63);
    v269 = v76;
    v79 = *(_QWORD *)(v77 + 8);
    v80 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v79 + 32);
    v81 = swift_unknownObjectRetain(v76);
    v80(v60, v78, v79, v81);
    v82 = swift_unknownObjectRelease(v76);
    v83 = (void *)zalgoIfMain.getter(v82);
    v265 = v60;
    v84 = v267;
    v85 = v263;
    v86 = v264;
    (*((void (**)(char *, char *, _QWORD *))v267 + 2))(v263, v264, v62);
    v87 = *((unsigned __int8 *)v84 + 80);
    v88 = (v87 + 24) & ~v87;
    v89 = (v262 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
    v90 = swift_allocObject(&unk_1005FA2E8, v89 + 8, v87 | 7);
    *(_QWORD *)(v90 + 16) = v59;
    ((void (*)(uint64_t, char *, _QWORD *))v261)(v90 + v88, v85, v62);
    *(_QWORD *)(v90 + v89) = v266;
    swift_retain();
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v83, sub_100286A00, v90, &type metadata for Any[8]);

    swift_release();
    v91 = swift_release();
    (*((void (**)(char *, _QWORD *, __n128))v84 + 1))(v86, v62, v91);
    return v57;
  }
  v92 = v268;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v93 = *v37;
    v94 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v95 = v265;
    v264 = (char *)*((_QWORD *)v267 + 4);
    ((void (*)(char *, char *, _QWORD *))v264)(v261, v94, v265);
    if ((v266 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter();
      v97 = (int *)sub_10002A750(&qword_100649F98);
      v98 = v258;
      v99 = &v258[v97[12]];
      v100 = &v258[v97[16]];
      v101 = &v258[v97[20]];
      v102 = enum case for REMUserOperation.widgetShowList(_:);
      v103 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 104))(v98, v102, v103);
      v104 = type metadata accessor for Date(0);
      *(_QWORD *)v99 = 0;
      *((_QWORD *)v99 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v100, 1, 1, v104);
      *(_QWORD *)v101 = 0;
      *((_QWORD *)v101 + 1) = 0;
      v106 = v259;
      v105 = v260;
      (*(void (**)(char *, _QWORD, uint64_t))(v259 + 104))(v98, enum case for REMAnalyticsEvent.userOperation(_:), v260);
      REMAnalyticsManager.post(event:)(v98);
      v107 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v106 + 8))(v98, v105, v107);
    }
    v108 = v59[4];
    v109 = v59[5];
    v110 = swift_getObjectType(v108, v96);
    v269 = v108;
    v111 = *(_QWORD *)(v109 + 8);
    v112 = *(void (**)(id, uint64_t, uint64_t, __n128))(v111 + 48);
    v113 = swift_unknownObjectRetain(v108);
    v112(v93, v110, v111, v113);
    v114 = swift_unknownObjectRelease(v108);
    v115 = (void *)zalgoIfMain.getter(v114);
    v116 = v267;
    v117 = v263;
    v118 = v93;
    v119 = v261;
    (*((void (**)(char *, char *, _QWORD *))v267 + 2))(v263, v261, v95);
    v120 = *((unsigned __int8 *)v116 + 80);
    v121 = (v120 + 24) & ~v120;
    v122 = swift_allocObject(&unk_1005FA270, v121 + v262, v120 | 7);
    *(_QWORD *)(v122 + 16) = v59;
    ((void (*)(uint64_t, char *, _QWORD *))v264)(v122 + v121, v117, v95);
    swift_retain();
    v123 = v95;
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v115, sub_100286910, v122, &type metadata for Any[8]);

    swift_release();
    v124 = swift_release();
    (*((void (**)(char *, _QWORD *, __n128))v116 + 1))(v119, v123, v124);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v126 = v255;
    v125 = v256;
    v127 = v257;
    (*(void (**)(char *, id *, uint64_t))(v256 + 32))(v255, v37, v257);
    v128 = sub_10001413C(v59 + 6, v59[9]);
    __chkstk_darwin(v128);
    *(&v233 - 2) = v129;
    *(&v233 - 1) = v126;
    v57 = firstly<A>(closure:)(sub_1002868A4, &v233 - 4, &type metadata for Any[8]);
    (*(void (**)(char *, uint64_t, __n128))(v125 + 8))(v126, v127, v130);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v131 = *v37;
    v132 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v133 = v252;
    v134 = v253;
    v267 = *(void (**)(char *, char *, uint64_t))(v252 + 32);
    v135 = v254;
    v267(v254, v132, v253);
    v136 = v92[4];
    v137 = v92[5];
    v139 = swift_getObjectType(v136, v138);
    v269 = v136;
    v140 = *(_QWORD *)(v137 + 8);
    v141 = *(void (**)(id, uint64_t, uint64_t, __n128))(v140 + 64);
    v142 = swift_unknownObjectRetain(v136);
    v141(v131, v139, v140, v142);
    v143 = swift_unknownObjectRelease(v136);
    v144 = (void *)zalgoIfMain.getter(v143);
    v145 = v251;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v251, v135, v134);
    v146 = *(unsigned __int8 *)(v133 + 80);
    v147 = (v146 + 24) & ~v146;
    v148 = swift_allocObject(&unk_1005FA248, v147 + v14, v146 | 7);
    v149 = (void (*)(uint64_t, char *, uint64_t))v267;
    *(_QWORD *)(v148 + 16) = v268;
    v149(v148 + v147, v145, v134);
    swift_retain();
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v144, sub_1002868E0, v148, &type metadata for Any[8]);

    swift_release();
    v150 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v254, v134, v150);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v267 = (void (*)(char *, char *, uint64_t))*v37;
    v151 = v267;
    v152 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v154 = v249;
    v153 = v250;
    v266 = *(char **)(v249 + 32);
    v155 = v248;
    ((void (*)(char *, char *, uint64_t))v266)(v248, v152, v250);
    v157 = v59[4];
    v156 = v59[5];
    v159 = swift_getObjectType(v157, v158);
    v269 = v157;
    v160 = *(_QWORD *)(v156 + 8);
    v161 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v160 + 72);
    v162 = swift_unknownObjectRetain(v157);
    v161((void (*)(_QWORD, _QWORD, _QWORD))v151, v159, v160, v162);
    v163 = swift_unknownObjectRelease(v157);
    v164 = (void *)zalgoIfMain.getter(v163);
    v165 = v247;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v247, v155, v153);
    v166 = *(unsigned __int8 *)(v154 + 80);
    v167 = (v166 + 24) & ~v166;
    v168 = swift_allocObject(&unk_1005FA2C0, v167 + v246, v166 | 7);
    *(_QWORD *)(v168 + 16) = v59;
    ((void (*)(uint64_t, char *, uint64_t))v266)(v168 + v167, v165, v153);
    swift_retain();
    v169 = sub_1002869D8;
LABEL_19:
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v164, v169, v168, &type metadata for Any[8]);

    swift_release();
    v183 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v155, v153, v183);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v267 = (void (*)(char *, char *, uint64_t))*v37;
    v170 = v267;
    v171 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v154 = v249;
    v153 = v250;
    v266 = *(char **)(v249 + 32);
    v155 = v248;
    ((void (*)(char *, char *, uint64_t))v266)(v248, v171, v250);
    v173 = v59[4];
    v172 = v59[5];
    v175 = swift_getObjectType(v173, v174);
    v269 = v173;
    v176 = *(_QWORD *)(v172 + 8);
    v177 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v176 + 80);
    v178 = swift_unknownObjectRetain(v173);
    v177((void (*)(_QWORD, _QWORD, _QWORD))v170, v175, v176, v178);
    v179 = swift_unknownObjectRelease(v173);
    v164 = (void *)zalgoIfMain.getter(v179);
    v180 = v247;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v247, v155, v153);
    v181 = *(unsigned __int8 *)(v154 + 80);
    v182 = (v181 + 24) & ~v181;
    v168 = swift_allocObject(&unk_1005FA298, v182 + v246, v181 | 7);
    *(_QWORD *)(v168 + 16) = v59;
    ((void (*)(uint64_t, char *, uint64_t))v266)(v168 + v182, v180, v153);
    swift_retain();
    v169 = sub_1002869A8;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v268 + 6, v268[9]);
    v57 = sub_10029A9B4(0);
    (*(void (**)(id *, uint64_t, __n128))(v34 + 8))(v37, v33, v185);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v186 = v243;
    v187 = *(void (**)(char *, id *, uint64_t))(v243 + 32);
    v188 = v242;
    v189 = v244;
    v187(v242, v37, v244);
    v190 = *sub_10001413C(v59 + 6, v59[9]);
    sub_10029A9B4(0);
    v191 = v241;
    v192 = v188;
    (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v241, v188, v189);
    v193 = *(unsigned __int8 *)(v186 + 80);
    v194 = (v193 + 16) & ~v193;
    v195 = (v240 + v194 + 7) & 0xFFFFFFFFFFFFFFF8;
    v196 = swift_allocObject(&unk_1005FA220, v195 + 8, v193 | 7);
    v187((char *)(v196 + v194), (id *)v191, v189);
    *(_QWORD *)(v196 + v195) = v190;
    v197 = swift_retain();
    v198 = (void *)zalgo.getter(v197);
    v57 = dispatch thunk of Promise.then<A>(on:closure:)(v198, sub_1002868B8, v196, &type metadata for Any[8]);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v186 + 8))(v192, v189, v199);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v200 = v239;
    v201 = (uint64_t)v238;
    v202 = v237;
    (*(void (**)(char *, id *, uint64_t))(v239 + 32))(v238, v37, v237);
    sub_10001413C(v59 + 6, v59[9]);
    v57 = sub_1002835A4(v201);
    (*(void (**)(uint64_t, uint64_t, __n128))(v200 + 8))(v201, v202, v203);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    v204 = (char)v266;
    if ((v266 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter();
      v205 = (int *)sub_10002A750(&qword_100649F98);
      v206 = v258;
      v207 = &v258[v205[12]];
      v208 = &v258[v205[16]];
      v209 = &v258[v205[20]];
      v210 = enum case for REMUserOperation.widgetShowList(_:);
      v211 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 104))(v206, v210, v211);
      v212 = type metadata accessor for Date(0);
      *(_QWORD *)v207 = 0;
      *((_QWORD *)v207 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 56))(v208, 1, 1, v212);
      *(_QWORD *)v209 = 0;
      *((_QWORD *)v209 + 1) = 0;
      v214 = v259;
      v213 = v260;
      (*(void (**)(char *, _QWORD, uint64_t))(v259 + 104))(v206, enum case for REMAnalyticsEvent.userOperation(_:), v260);
      REMAnalyticsManager.post(event:)(v206);
      v215 = swift_release();
      v216 = v206;
      v92 = v59;
      (*(void (**)(char *, uint64_t, __n128))(v214 + 8))(v216, v213, v215);
    }
    sub_10001413C(v92 + 6, v92[9]);
    return sub_100280330(v245, v204 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100280AA4, &qword_100654820);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v217 = v235;
    v218 = (uint64_t)v234;
    v219 = v236;
    (*(void (**)(char *, id *, uint64_t))(v235 + 32))(v234, v37, v236);
    v220 = (uint64_t **)sub_10001413C(v92 + 6, v92[9]);
    v221 = v92[4];
    v222 = v92[5];
    v224 = swift_getObjectType(v221, v223);
    v269 = v221;
    v225 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v222 + 8) + 8))(v224);
    v226 = *v220;
    swift_retain();
    sub_1002854B8(v218, v225, (uint64_t)v92, v226);

    swift_release();
    v227 = (void *)objc_opt_self(REMError);
    v228 = String._bridgeToObjectiveC()();
    v229 = objc_msgSend(v227, "internalErrorWithDebugDescription:", v228);

    v230 = sub_10002A750(&qword_100654820);
    swift_allocObject(v230, *(unsigned int *)(v230 + 48), *(unsigned __int16 *)(v230 + 52));
    v57 = Promise.init(error:)(v229);
    (*(void (**)(uint64_t, uint64_t, __n128))(v217 + 8))(v218, v219, v231);
    return v57;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v232 = sub_10001413C(v268 + 6, v268[9]);
    return firstly<A>(closure:)(sub_10028689C, *v232, &type metadata for Any[8]);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_100268A00(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FB1E8, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_100288798, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FB1C0, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100288768, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FB148, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_1002886E0, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = firstly<A>(closure:)(sub_10028864C, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FB120, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_1002886B0, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FB198, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v177 = sub_100288740;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FB170, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v177 = sub_100288710;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029AD10(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FB0F8, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_100288688, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029AD10, (uint64_t)&unk_1005FB558, (uint64_t *)&unk_100649CC0, (uint64_t)sub_100288950);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100280FC0, &qword_100653120);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653120);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750((uint64_t *)&unk_100649CC0);
    return firstly<A>(closure:)(sub_100288624, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_100269DB0(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  void (*v37)(id *, uint64_t, uint64_t);
  int v38;
  uint64_t v39;
  id v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t (*v48)(id, uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(id, uint64_t, uint64_t, __n128);
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  id v95;
  uint64_t v96;
  void (*v97)(char *, char *, _QWORD);
  uint64_t v98;
  uint64_t v99;
  int *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(id, uint64_t, uint64_t, __n128);
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  void (*v121)(char *, char *, _QWORD);
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  id v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(id, uint64_t, uint64_t, __n128);
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t *);
  void (*v175)(char *, char *, uint64_t);
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t (*v182)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(id *, uint64_t);
  id *v189;
  uint64_t result;
  uint64_t v191;
  void (*v192)(char *, id *, uint64_t);
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id *v221;
  uint64_t v222;
  uint64_t **v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t *v229;
  void *v230;
  NSString v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  id v263;
  char *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  id v268;
  char *v269;
  void (*v270)(char *, char *, uint64_t);
  _QWORD *v271;
  uint64_t v272;

  v268 = a3;
  v271 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v262 = *(v4 - 1);
  v263 = v4;
  __chkstk_darwin(v4);
  v261 = (char *)&v236 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v258 = *(_QWORD *)(v6 - 8);
  v259 = v6;
  __chkstk_darwin(v6);
  v257 = (char *)&v236 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v238 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v237 = (char *)&v236 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v240 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v241 = (char *)&v236 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v246 = *(_QWORD *)(v247 - 8);
  v10 = __chkstk_darwin(v247);
  v244 = (char *)&v236 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = v11;
  __chkstk_darwin(v10);
  v245 = (char *)&v236 - v12;
  v260 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v255 = *(_QWORD *)(v260 - 8);
  v13 = *(_QWORD *)(v255 + 64);
  v14 = __chkstk_darwin(v260);
  v254 = (char *)&v236 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v256 = (char *)&v236 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v252 = *(_QWORD *)(v16 - 8);
  v253 = v16;
  v17 = __chkstk_darwin(v16);
  v250 = (char *)&v236 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = v18;
  __chkstk_darwin(v17);
  v251 = (char *)&v236 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v269 = (char *)*((_QWORD *)v20 - 1);
  v270 = v20;
  v21 = __chkstk_darwin(v20);
  v266 = (char *)&v236 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v264 = (char *)&v236 - v24;
  v265 = v25;
  __chkstk_darwin(v23);
  v267 = (char *)&v236 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v30 = __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v236 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (id *)((char *)&v236 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = *(void (**)(id *, uint64_t, uint64_t))(v34 + 16);
  v248 = a1;
  v37(v36, a1, v33);
  v38 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v36, v33);
  if (v38 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v269 = (char *)&v236 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v39 = v27;
    v40 = *v36;
    v41 = (char *)v36 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v270 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v236 = v32;
    v270(v32, v41, v39);
    v42 = v271;
    v43 = v271[4];
    v44 = v271[5];
    ObjectType = swift_getObjectType(v43, v45);
    v272 = v43;
    v47 = *(_QWORD *)(v44 + 8);
    v48 = *(uint64_t (**)(id, uint64_t, uint64_t, __n128))(v47 + 24);
    v49 = swift_unknownObjectRetain(v43);
    v50 = v48(v40, ObjectType, v47, v49);
    v51 = swift_unknownObjectRelease(v43);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v269;
    v54 = v236;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v269, v236, v39);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FA838, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v42;
    v270((char *)(v57 + v56), v53, v39);
    swift_retain(v42);
    v58 = sub_10002A750(&qword_100651F48);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_10028764C, v57, v58);

    swift_release(v50);
    swift_release(v57);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v54, v39);
    return v59;
  }
  v60 = v271;
  if (v38 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v61 = *v36;
    v62 = (char *)v36 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v264 = (char *)*((_QWORD *)v269 + 4);
    ((void (*)(char *, char *, _QWORD))v264)(v267, v62, v270);
    v64 = v60;
    if ((v268 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      v65 = static REMAnalyticsManager.shared.getter();
      v66 = (int *)sub_10002A750(&qword_100649F98);
      v67 = v261;
      v68 = &v261[v66[12]];
      v69 = &v261[v66[16]];
      v70 = &v261[v66[20]];
      v71 = enum case for REMUserOperation.widgetShowList(_:);
      v72 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 104))(v67, v71, v72);
      v73 = type metadata accessor for Date(0);
      *(_QWORD *)v68 = 0;
      *((_QWORD *)v68 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v69, 1, 1, v73);
      *(_QWORD *)v70 = 0;
      *((_QWORD *)v70 + 1) = 0;
      v75 = v262;
      v74 = v263;
      (*(void (**)(char *, _QWORD, id))(v262 + 104))(v67, enum case for REMAnalyticsEvent.userOperation(_:), v263);
      REMAnalyticsManager.post(event:)(v67);
      swift_release(v65);
      (*(void (**)(char *, id))(v75 + 8))(v67, v74);
    }
    v76 = v64[4];
    v77 = v64[5];
    v78 = swift_getObjectType(v76, v63);
    v272 = v76;
    v79 = *(_QWORD *)(v77 + 8);
    v80 = *(uint64_t (**)(id, uint64_t, uint64_t, __n128))(v79 + 32);
    v81 = swift_unknownObjectRetain(v76);
    v82 = v80(v61, v78, v79, v81);
    v83 = swift_unknownObjectRelease(v76);
    v84 = (void *)zalgoIfMain.getter(v83);
    v263 = v61;
    v85 = v269;
    v86 = v270;
    v87 = v266;
    v88 = v267;
    (*((void (**)(char *, char *, _QWORD))v269 + 2))(v266, v267, v270);
    v89 = v85[80];
    v90 = (v89 + 24) & ~v89;
    v91 = (v265 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
    v92 = swift_allocObject(&unk_1005FA810, v91 + 8, v89 | 7);
    *(_QWORD *)(v92 + 16) = v64;
    ((void (*)(uint64_t, char *, _QWORD))v264)(v92 + v90, v87, v86);
    *(_QWORD *)(v92 + v91) = v268;
    swift_retain(v64);
    v93 = sub_10002A750(&qword_100651F48);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_10028761C, v92, v93);

    swift_release(v82);
    swift_release(v92);
    (*((void (**)(char *, void (*)(char *, char *, uint64_t)))v85 + 1))(v88, v86);
    return v59;
  }
  v94 = v271;
  if (v38 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v95 = *v36;
    v96 = sub_10002A750((uint64_t *)&unk_100665610);
    v97 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v269 + 4);
    v97(v264, (char *)v36 + *(int *)(v96 + 48), v270);
    if ((v268 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      v99 = static REMAnalyticsManager.shared.getter();
      v100 = (int *)sub_10002A750(&qword_100649F98);
      v101 = v261;
      v102 = &v261[v100[12]];
      v103 = &v261[v100[16]];
      v104 = &v261[v100[20]];
      v105 = enum case for REMUserOperation.widgetShowList(_:);
      v106 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 104))(v101, v105, v106);
      v107 = type metadata accessor for Date(0);
      *(_QWORD *)v102 = 0;
      *((_QWORD *)v102 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v103, 1, 1, v107);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      v109 = v262;
      v108 = v263;
      (*(void (**)(char *, _QWORD, id))(v262 + 104))(v101, enum case for REMAnalyticsEvent.userOperation(_:), v263);
      REMAnalyticsManager.post(event:)(v101);
      swift_release(v99);
      (*(void (**)(char *, id))(v109 + 8))(v101, v108);
    }
    v110 = v94[4];
    v111 = v94[5];
    v112 = swift_getObjectType(v110, v98);
    v272 = v110;
    v113 = *(_QWORD *)(v111 + 8);
    v114 = *(uint64_t (**)(id, uint64_t, uint64_t, __n128))(v113 + 48);
    v115 = swift_unknownObjectRetain(v110);
    v116 = v114(v95, v112, v113, v115);
    v117 = swift_unknownObjectRelease(v110);
    v118 = (void *)zalgoIfMain.getter(v117);
    v120 = v269;
    v119 = v270;
    v121 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v269 + 2);
    v122 = v266;
    v268 = v95;
    v123 = v264;
    v121(v266, v264, v270);
    v124 = v120[80];
    v125 = (v124 + 24) & ~v124;
    v126 = swift_allocObject(&unk_1005FA798, v125 + v265, v124 | 7);
    *(_QWORD *)(v126 + 16) = v94;
    v97((char *)(v126 + v125), v122, v119);
    swift_retain(v94);
    v127 = sub_10002A750(&qword_100651F48);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v118, sub_100287594, v126, v127);

    swift_release(v116);
    swift_release(v126);
    (*((void (**)(char *, void (*)(char *, char *, uint64_t)))v120 + 1))(v123, v119);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v129 = v257;
    v128 = v258;
    v130 = v259;
    (*(void (**)(char *, id *, uint64_t))(v258 + 32))(v257, v36, v259);
    v131 = sub_10001413C(v60 + 6, v60[9]);
    __chkstk_darwin(v131);
    *(&v236 - 2) = v132;
    *(&v236 - 1) = v129;
    v133 = sub_10002A750(&qword_100651F48);
    v59 = firstly<A>(closure:)(sub_100287494, &v236 - 4, v133);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v134 = *v36;
    v135 = (char *)v36 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v137 = v255;
    v136 = v256;
    v270 = *(void (**)(char *, char *, uint64_t))(v255 + 32);
    v270(v256, v135, v260);
    v138 = v94[4];
    v139 = v94[5];
    v141 = swift_getObjectType(v138, v140);
    v272 = v138;
    v142 = *(_QWORD *)(v139 + 8);
    v143 = *(uint64_t (**)(id, uint64_t, uint64_t, __n128))(v142 + 64);
    v144 = swift_unknownObjectRetain(v138);
    v145 = v143(v134, v141, v142, v144);
    v146 = swift_unknownObjectRelease(v138);
    v147 = (void *)zalgoIfMain.getter(v146);
    v148 = v254;
    v149 = v136;
    v150 = v260;
    (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v254, v149, v260);
    v151 = *(unsigned __int8 *)(v137 + 80);
    v152 = (v151 + 24) & ~v151;
    v153 = swift_allocObject(&unk_1005FA770, v152 + v13, v151 | 7);
    *(_QWORD *)(v153 + 16) = v94;
    v270((char *)(v153 + v152), v148, v150);
    swift_retain(v94);
    v154 = sub_10002A750(&qword_100651F48);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v147, sub_100287564, v153, v154);

    swift_release(v145);
    swift_release(v153);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v256, v150);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v270 = (void (*)(char *, char *, uint64_t))*v36;
    v155 = v270;
    v156 = (char *)v36 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v157 = v252;
    v33 = v253;
    v269 = *(char **)(v252 + 32);
    v158 = v251;
    ((void (*)(char *, char *, uint64_t))v269)(v251, v156, v253);
    v160 = v94[4];
    v159 = v94[5];
    v162 = swift_getObjectType(v160, v161);
    v272 = v160;
    v163 = *(_QWORD *)(v159 + 8);
    v164 = *(uint64_t (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v163 + 72);
    v165 = swift_unknownObjectRetain(v160);
    v166 = v164((void (*)(_QWORD, _QWORD, _QWORD))v155, v162, v163, v165);
    v167 = swift_unknownObjectRelease(v160);
    v168 = (void *)zalgoIfMain.getter(v167);
    v169 = v250;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v250, v158, v33);
    v170 = *(unsigned __int8 *)(v157 + 80);
    v171 = (v170 + 24) & ~v170;
    v172 = swift_allocObject(&unk_1005FA7E8, v171 + v249, v170 | 7);
    *(_QWORD *)(v172 + 16) = v94;
    ((void (*)(uint64_t, char *, uint64_t))v269)(v172 + v171, v169, v33);
    swift_retain(v94);
    v173 = sub_10002A750(&qword_100651F48);
    v174 = sub_1002875F4;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v168, v174, v172, v173);

    swift_release(v166);
    swift_release(v172);
    v188 = *(void (**)(id *, uint64_t))(v157 + 8);
    v189 = (id *)v158;
LABEL_20:
    v188(v189, v33);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v270 = (void (*)(char *, char *, uint64_t))*v36;
    v175 = v270;
    v176 = (char *)v36 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v157 = v252;
    v33 = v253;
    v269 = *(char **)(v252 + 32);
    v158 = v251;
    ((void (*)(char *, char *, uint64_t))v269)(v251, v176, v253);
    v178 = v94[4];
    v177 = v94[5];
    v180 = swift_getObjectType(v178, v179);
    v272 = v178;
    v181 = *(_QWORD *)(v177 + 8);
    v182 = *(uint64_t (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v181 + 80);
    v183 = swift_unknownObjectRetain(v178);
    v166 = v182((void (*)(_QWORD, _QWORD, _QWORD))v175, v180, v181, v183);
    v184 = swift_unknownObjectRelease(v178);
    v168 = (void *)zalgoIfMain.getter(v184);
    v185 = v250;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v250, v158, v33);
    v186 = *(unsigned __int8 *)(v157 + 80);
    v187 = (v186 + 24) & ~v186;
    v172 = swift_allocObject(&unk_1005FA7C0, v187 + v249, v186 | 7);
    *(_QWORD *)(v172 + 16) = v94;
    ((void (*)(uint64_t, char *, uint64_t))v269)(v172 + v187, v185, v33);
    swift_retain(v94);
    v173 = sub_10002A750(&qword_100651F48);
    v174 = sub_1002875C4;
    goto LABEL_19;
  }
  if (v38 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v271 + 6, v271[9]);
    v59 = sub_10002F7D0(0);
    v188 = *(void (**)(id *, uint64_t))(v34 + 8);
    v189 = v36;
    goto LABEL_20;
  }
  if (v38 == enum case for REMNavigationSpecifier.today(_:)
    || v38 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v38 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v38 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v38 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v191 = v246;
    v192 = *(void (**)(char *, id *, uint64_t))(v246 + 32);
    v193 = v245;
    v194 = v247;
    v192(v245, v36, v247);
    v195 = *sub_10001413C(v60 + 6, v60[9]);
    v196 = sub_10029A9B4(0);
    v197 = v244;
    (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v244, v193, v194);
    v198 = *(unsigned __int8 *)(v191 + 80);
    v199 = (v198 + 16) & ~v198;
    v200 = (v243 + v199 + 7) & 0xFFFFFFFFFFFFFFF8;
    v201 = swift_allocObject(&unk_1005FA748, v200 + 8, v198 | 7);
    v192((char *)(v201 + v199), (id *)v197, v194);
    *(_QWORD *)(v201 + v200) = v195;
    v202 = swift_retain(v195);
    v203 = (void *)zalgo.getter(v202);
    v204 = sub_10002A750(&qword_100651F48);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v203, sub_1002874D0, v201, v204);
    swift_release(v196);
    swift_release(v201);

    (*(void (**)(char *, uint64_t))(v191 + 8))(v193, v194);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.assigned(_:)
    || v38 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v38 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v205 = v240;
    v206 = (uint64_t)v241;
    v207 = v242;
    (*(void (**)(char *, id *, uint64_t))(v240 + 32))(v241, v36, v242);
    sub_10001413C(v94 + 6, v94[9]);
    v59 = sub_1002837B4(v206, (uint64_t (*)(_QWORD))sub_10002F7D0, (uint64_t)&unk_1005FABA8, &qword_100651F48, (uint64_t)sub_100287B90);
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v206, v207);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v36, v33);
    if ((v268 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager(0);
      v208 = static REMAnalyticsManager.shared.getter();
      v209 = (int *)sub_10002A750(&qword_100649F98);
      v210 = v261;
      v211 = &v261[v209[12]];
      v212 = &v261[v209[16]];
      v213 = &v261[v209[20]];
      v214 = enum case for REMUserOperation.widgetShowList(_:);
      v215 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 104))(v210, v214, v215);
      v216 = type metadata accessor for Date(0);
      *(_QWORD *)v211 = 0;
      *((_QWORD *)v211 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 56))(v212, 1, 1, v216);
      *(_QWORD *)v213 = 0;
      *((_QWORD *)v213 + 1) = 0;
      v218 = v262;
      v217 = v263;
      (*(void (**)(char *, _QWORD, id))(v262 + 104))(v210, enum case for REMAnalyticsEvent.userOperation(_:), v263);
      REMAnalyticsManager.post(event:)(v210);
      swift_release(v208);
      (*(void (**)(char *, id))(v218 + 8))(v210, v217);
    }
    sub_10001413C(v94 + 6, v94[9]);
    return sub_100280330(v248, v268 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_1002814E4, &qword_100653148);
  }
  if (v38 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v36, v33);
    v219 = v238;
    v220 = (uint64_t)v237;
    v221 = v36;
    v222 = v239;
    (*(void (**)(char *, id *, uint64_t))(v238 + 32))(v237, v221, v239);
    v223 = (uint64_t **)sub_10001413C(v60 + 6, v60[9]);
    v224 = v60[4];
    v225 = v60[5];
    v227 = swift_getObjectType(v94[4], v226);
    v272 = v224;
    v228 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v225 + 8) + 8))(v227);
    v229 = *v223;
    swift_retain(v94);
    sub_1002854B8(v220, v228, (uint64_t)v94, v229);

    swift_release(v94);
    v230 = (void *)objc_opt_self(REMError);
    v231 = String._bridgeToObjectiveC()();
    v232 = objc_msgSend(v230, "internalErrorWithDebugDescription:", v231);

    v233 = sub_10002A750(&qword_100653148);
    swift_allocObject(v233, *(unsigned int *)(v233 + 48), *(unsigned __int16 *)(v233 + 52));
    v59 = Promise.init(error:)(v232);
    (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v220, v222);
    return v59;
  }
  if (v38 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v234 = *sub_10001413C(v271 + 6, v271[9]);
    v235 = sub_10002A750(&qword_100651F48);
    return firstly<A>(closure:)(sub_10028746C, v234, v235);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_10026B160(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FAD10, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750(&qword_100651F40);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_100287E0C, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FACE8, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750(&qword_100651F40);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100287D64, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FAC70, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750(&qword_100651F40);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_100287C78, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750(&qword_100651F40);
    v59 = firstly<A>(closure:)(sub_100287BE4, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FAC48, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750(&qword_100651F40);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_100287C48, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FACC0, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100651F40);
    v177 = sub_100287D3C;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FAC98, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100651F40);
    v177 = sub_100287D0C;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029AD34(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FAC20, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750(&qword_100651F40);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_100287C20, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029AD34, (uint64_t)&unk_1005FB080, &qword_100651F40, (uint64_t)sub_1002885F8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100281A08, &qword_100653128);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653128);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750(&qword_100651F40);
    return firstly<A>(closure:)(sub_100287BBC, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_10026C510(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FB6C0, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750(&qword_100653150);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_100288AF0, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FB698, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750(&qword_100653150);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100288AC0, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FB620, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750(&qword_100653150);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_100288A38, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750(&qword_100653150);
    v59 = firstly<A>(closure:)(sub_1002889A4, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FB5F8, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750(&qword_100653150);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_100288A08, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FB670, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653150);
    v177 = sub_100288A98;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FB648, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653150);
    v177 = sub_100288A68;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029AD58(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FB5D0, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750(&qword_100653150);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_1002889E0, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029AD58, (uint64_t)&unk_1005FBA30, &qword_100653150, (uint64_t)sub_100288CA8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100281F2C, &qword_100653158);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653158);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750(&qword_100653150);
    return firstly<A>(closure:)(sub_10028897C, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_10026D8C0(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FBB98, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750(&qword_100653160);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_100288E48, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FBB70, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750(&qword_100653160);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100288E18, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FBAF8, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750(&qword_100653160);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_100288D90, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750(&qword_100653160);
    v59 = firstly<A>(closure:)(sub_100288CFC, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FBAD0, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750(&qword_100653160);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_100288D60, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FBB48, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653160);
    v177 = sub_100288DF0;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FBB20, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653160);
    v177 = sub_100288DC0;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029AD7C(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FBAA8, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750(&qword_100653160);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_100288D38, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029AD7C, (uint64_t)&unk_1005FBF08, &qword_100653160, (uint64_t)sub_100289000);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100282450, &qword_100653168);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653168);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750(&qword_100653160);
    return firstly<A>(closure:)(sub_100288CD4, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_10026EC70(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FC070, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750(&qword_100653170);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_1002891A0, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FC048, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750(&qword_100653170);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100289170, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FBFD0, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750(&qword_100653170);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_1002890E8, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750(&qword_100653170);
    v59 = firstly<A>(closure:)(sub_100289054, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FBFA8, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750(&qword_100653170);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_1002890B8, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FC020, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653170);
    v177 = sub_100289148;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FBFF8, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653170);
    v177 = sub_100289118;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029ADA0(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FBF80, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750(&qword_100653170);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_100289090, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029ADA0, (uint64_t)&unk_1005FC3E0, &qword_100653170, (uint64_t)sub_100289358);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100282974, &qword_100653178);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653178);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750(&qword_100653170);
    return firstly<A>(closure:)(sub_10028902C, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

uint64_t sub_100270020(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id *v37;
  void (*v38)(id *, uint64_t, uint64_t, double);
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  void (*v49)(id, uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  _QWORD *v61;
  id v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(id, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  void *v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, char *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t, __n128);
  __n128 v118;
  uint64_t v119;
  void *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, _QWORD);
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  id v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(id, uint64_t, uint64_t, __n128);
  __n128 v148;
  uint64_t v149;
  void *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v169;
  uint64_t v170;
  void *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(uint64_t *);
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  __n128 v191;
  void (*v192)(id *, uint64_t, __n128);
  id *v193;
  uint64_t result;
  uint64_t v195;
  void (*v196)(char *, id *, uint64_t);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  int *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  __n128 v224;
  uint64_t v225;
  uint64_t v226;
  id *v227;
  uint64_t v228;
  uint64_t **v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t *v235;
  void *v236;
  NSString v237;
  id v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  id v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  _QWORD *v278;
  uint64_t v279;

  v275 = a3;
  v278 = a2;
  v4 = (_QWORD *)type metadata accessor for REMAnalyticsEvent(0);
  v269 = *(v4 - 1);
  v270 = v4;
  __chkstk_darwin(v4);
  v268 = (char *)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v265 = *(_QWORD *)(v6 - 8);
  v266 = v6;
  __chkstk_darwin(v6);
  v264 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v245 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v244 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v247 = *(_QWORD *)(v249 - 8);
  __chkstk_darwin(v249);
  v248 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v251 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = v10;
  __chkstk_darwin(v11);
  v252 = (char *)&v243 - v12;
  v267 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v262 = *(_QWORD *)(v267 - 8);
  v13 = *(_QWORD *)(v262 + 64);
  __chkstk_darwin(v267);
  v261 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v263 = (char *)&v243 - v15;
  v16 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v259 = *(_QWORD *)(v16 - 8);
  v260 = v16;
  __chkstk_darwin(v16);
  v257 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = v17;
  __chkstk_darwin(v18);
  v258 = (char *)&v243 - v19;
  v20 = (void (*)(char *, char *, uint64_t))type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v276 = (char *)*((_QWORD *)v20 - 1);
  v277 = v20;
  __chkstk_darwin(v20);
  v273 = (char *)&v243 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v271 = (char *)&v243 - v23;
  v272 = v24;
  __chkstk_darwin(v25);
  v274 = (char *)&v243 - v26;
  v27 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  __chkstk_darwin(v30);
  v32 = (char *)&v243 - v31;
  v33 = type metadata accessor for REMNavigationSpecifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (id *)((char *)&v243 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = *(void (**)(id *, uint64_t, uint64_t, double))(v34 + 16);
  v255 = a1;
  v38(v37, a1, v33, v35);
  v39 = (*(uint64_t (**)(id *, uint64_t))(v34 + 88))(v37, v33);
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v276 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v40 = v27;
    v41 = *v37;
    v42 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v277 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v243 = v32;
    v277(v32, v42, v40);
    v43 = v278;
    v44 = v278[4];
    v45 = v278[5];
    ObjectType = swift_getObjectType(v44, v46);
    v279 = v44;
    v48 = *(_QWORD *)(v45 + 8);
    v49 = *(void (**)(id, uint64_t, uint64_t, __n128))(v48 + 24);
    v50 = swift_unknownObjectRetain(v44);
    v49(v41, ObjectType, v48, v50);
    v51 = swift_unknownObjectRelease(v44);
    v52 = (void *)zalgoIfMain.getter(v51);
    v53 = v276;
    v54 = v243;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v276, v243, v40);
    v55 = *(unsigned __int8 *)(v28 + 80);
    v56 = (v55 + 24) & ~v55;
    v57 = swift_allocObject(&unk_1005FC548, v56 + v29, v55 | 7);
    *(_QWORD *)(v57 + 16) = v43;
    v277((char *)(v57 + v56), v53, v40);
    swift_retain();
    v58 = sub_10002A750(&qword_100653180);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v52, sub_1002895F0, v57, v58);

    swift_release();
    v60 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v54, v40, v60);
    return v59;
  }
  v61 = v278;
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v62 = *v37;
    v63 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v271 = (char *)*((_QWORD *)v276 + 4);
    ((void (*)(char *, char *, _QWORD))v271)(v274, v63, v277);
    v65 = v61;
    if ((v275 & 2) != 0)
    {
      v66 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v66);
      v67 = (int *)sub_10002A750(&qword_100649F98);
      v68 = v268;
      v69 = &v268[v67[12]];
      v70 = &v268[v67[16]];
      v71 = &v268[v67[20]];
      v72 = enum case for REMUserOperation.widgetShowList(_:);
      v73 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v68, v72, v73);
      v74 = type metadata accessor for Date(0);
      *(_QWORD *)v69 = 0;
      *((_QWORD *)v69 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v70, 1, 1, v74);
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v76 = v269;
      v75 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v68, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v68);
      v77 = swift_release();
      (*(void (**)(char *, id, __n128))(v76 + 8))(v68, v75, v77);
    }
    v78 = v65[4];
    v79 = v65[5];
    v80 = swift_getObjectType(v78, v64);
    v279 = v78;
    v81 = *(_QWORD *)(v79 + 8);
    v82 = *(void (**)(id, uint64_t, uint64_t, __n128))(v81 + 32);
    v83 = swift_unknownObjectRetain(v78);
    v82(v62, v80, v81, v83);
    v84 = swift_unknownObjectRelease(v78);
    v85 = (void *)zalgoIfMain.getter(v84);
    v270 = v62;
    v86 = v276;
    v87 = v277;
    v88 = v273;
    v89 = v274;
    (*((void (**)(char *, char *, _QWORD))v276 + 2))(v273, v274, v277);
    v90 = v86[80];
    v91 = (v90 + 24) & ~v90;
    v92 = (v272 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
    v93 = swift_allocObject(&unk_1005FC520, v92 + 8, v90 | 7);
    *(_QWORD *)(v93 + 16) = v65;
    ((void (*)(uint64_t, char *, _QWORD))v271)(v93 + v91, v88, v87);
    *(_QWORD *)(v93 + v92) = v275;
    swift_retain();
    v94 = sub_10002A750(&qword_100653180);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_1002895C0, v93, v94);

    swift_release();
    v95 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v86 + 1))(v89, v87, v95);
    return v59;
  }
  v96 = v278;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v97 = *v37;
    v98 = sub_10002A750((uint64_t *)&unk_100665610);
    v99 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 4);
    v99(v271, (char *)v37 + *(int *)(v98 + 48), v277);
    if ((v275 & 2) != 0)
    {
      v101 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v101);
      v102 = (int *)sub_10002A750(&qword_100649F98);
      v103 = v268;
      v104 = &v268[v102[12]];
      v105 = &v268[v102[16]];
      v106 = &v268[v102[20]];
      v107 = enum case for REMUserOperation.widgetShowList(_:);
      v108 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v103, v107, v108);
      v109 = type metadata accessor for Date(0);
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
      *(_QWORD *)v106 = 0;
      *((_QWORD *)v106 + 1) = 0;
      v111 = v269;
      v110 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v103, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v103);
      v112 = swift_release();
      (*(void (**)(char *, id, __n128))(v111 + 8))(v103, v110, v112);
    }
    v113 = v96[4];
    v114 = v96[5];
    v115 = swift_getObjectType(v113, v100);
    v279 = v113;
    v116 = *(_QWORD *)(v114 + 8);
    v117 = *(void (**)(id, uint64_t, uint64_t, __n128))(v116 + 48);
    v118 = swift_unknownObjectRetain(v113);
    v117(v97, v115, v116, v118);
    v119 = swift_unknownObjectRelease(v113);
    v120 = (void *)zalgoIfMain.getter(v119);
    v122 = v276;
    v121 = v277;
    v123 = (void (*)(char *, char *, _QWORD))*((_QWORD *)v276 + 2);
    v124 = v273;
    v275 = v97;
    v125 = v271;
    v123(v273, v271, v277);
    v126 = v122[80];
    v127 = (v126 + 24) & ~v126;
    v128 = swift_allocObject(&unk_1005FC4A8, v127 + v272, v126 | 7);
    *(_QWORD *)(v128 + 16) = v96;
    v99((char *)(v128 + v127), v124, v121);
    swift_retain();
    v129 = sub_10002A750(&qword_100653180);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v120, sub_100289440, v128, v129);

    swift_release();
    v130 = swift_release();
    (*((void (**)(char *, void (*)(char *, char *, uint64_t), __n128))v122 + 1))(v125, v121, v130);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v132 = v264;
    v131 = v265;
    v133 = v266;
    (*(void (**)(char *, id *, uint64_t))(v265 + 32))(v264, v37, v266);
    v134 = sub_10001413C(v61 + 6, v61[9]);
    __chkstk_darwin(v134);
    *(&v243 - 2) = v135;
    *(&v243 - 1) = v132;
    v136 = sub_10002A750(&qword_100653180);
    v59 = firstly<A>(closure:)(sub_1002893AC, &v243 - 4, v136);
    (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v132, v133, v137);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v138 = *v37;
    v139 = (char *)v37 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v141 = v262;
    v140 = v263;
    v277 = *(void (**)(char *, char *, uint64_t))(v262 + 32);
    v277(v263, v139, v267);
    v142 = v96[4];
    v143 = v96[5];
    v145 = swift_getObjectType(v142, v144);
    v279 = v142;
    v146 = *(_QWORD *)(v143 + 8);
    v147 = *(void (**)(id, uint64_t, uint64_t, __n128))(v146 + 64);
    v148 = swift_unknownObjectRetain(v142);
    v147(v138, v145, v146, v148);
    v149 = swift_unknownObjectRelease(v142);
    v150 = (void *)zalgoIfMain.getter(v149);
    v151 = v261;
    v152 = v140;
    v153 = v267;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v261, v152, v267);
    v154 = *(unsigned __int8 *)(v141 + 80);
    v155 = (v154 + 24) & ~v154;
    v156 = swift_allocObject(&unk_1005FC480, v155 + v13, v154 | 7);
    *(_QWORD *)(v156 + 16) = v96;
    v277((char *)(v156 + v155), v151, v153);
    swift_retain();
    v157 = sub_10002A750(&qword_100653180);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v150, sub_100289410, v156, v157);

    swift_release();
    v158 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v263, v153, v158);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v159 = v277;
    v160 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v160, v260);
    v164 = v96[4];
    v163 = v96[5];
    v166 = swift_getObjectType(v164, v165);
    v279 = v164;
    v167 = *(_QWORD *)(v163 + 8);
    v168 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v167 + 72);
    v169 = swift_unknownObjectRetain(v164);
    v168((void (*)(_QWORD, _QWORD, _QWORD))v159, v166, v167, v169);
    v170 = swift_unknownObjectRelease(v164);
    v171 = (void *)zalgoIfMain.getter(v170);
    v172 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v173 = *(unsigned __int8 *)(v161 + 80);
    v174 = (v173 + 24) & ~v173;
    v175 = swift_allocObject(&unk_1005FC4F8, v174 + v256, v173 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v174, v172, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653180);
    v177 = sub_1002894A0;
LABEL_19:
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v171, v177, v175, v176);

    swift_release();
    v191 = swift_release();
    v192 = *(void (**)(id *, uint64_t, __n128))(v161 + 8);
    v193 = (id *)v162;
LABEL_20:
    v192(v193, v33, v191);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v277 = (void (*)(char *, char *, uint64_t))*v37;
    v178 = v277;
    v179 = (char *)v37 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v161 = v259;
    v33 = v260;
    v276 = *(char **)(v259 + 32);
    v162 = v258;
    ((void (*)(char *, char *, uint64_t))v276)(v258, v179, v260);
    v181 = v96[4];
    v180 = v96[5];
    v183 = swift_getObjectType(v181, v182);
    v279 = v181;
    v184 = *(_QWORD *)(v180 + 8);
    v185 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, __n128))(v184 + 80);
    v186 = swift_unknownObjectRetain(v181);
    v185((void (*)(_QWORD, _QWORD, _QWORD))v178, v183, v184, v186);
    v187 = swift_unknownObjectRelease(v181);
    v171 = (void *)zalgoIfMain.getter(v187);
    v188 = v257;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v257, v162, v33);
    v189 = *(unsigned __int8 *)(v161 + 80);
    v190 = (v189 + 24) & ~v189;
    v175 = swift_allocObject(&unk_1005FC4D0, v190 + v256, v189 | 7);
    *(_QWORD *)(v175 + 16) = v96;
    ((void (*)(uint64_t, char *, uint64_t))v276)(v175 + v190, v188, v33);
    swift_retain();
    v176 = sub_10002A750(&qword_100653180);
    v177 = sub_100289470;
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_10001413C(v278 + 6, v278[9]);
    v59 = sub_10029ADC4(0);
    v192 = *(void (**)(id *, uint64_t, __n128))(v34 + 8);
    v193 = v37;
    goto LABEL_20;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v195 = v253;
    v196 = *(void (**)(char *, id *, uint64_t))(v253 + 32);
    v197 = v252;
    v198 = v254;
    v196(v252, v37, v254);
    v199 = *sub_10001413C(v61 + 6, v61[9]);
    sub_10029A9B4(0);
    v200 = v251;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v251, v197, v198);
    v201 = *(unsigned __int8 *)(v195 + 80);
    v202 = (v201 + 16) & ~v201;
    v203 = (v250 + v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v204 = swift_allocObject(&unk_1005FC458, v203 + 8, v201 | 7);
    v196((char *)(v204 + v202), (id *)v200, v198);
    *(_QWORD *)(v204 + v203) = v199;
    v205 = swift_retain();
    v206 = (void *)zalgo.getter(v205);
    v207 = sub_10002A750(&qword_100653180);
    v59 = dispatch thunk of Promise.then<A>(on:closure:)(v206, sub_1002893E8, v204, v207);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, __n128))(v195 + 8))(v197, v198, v208);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_35;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v209 = v247;
    v210 = (uint64_t)v248;
    v211 = v249;
    (*(void (**)(char *, id *, uint64_t))(v247 + 32))(v248, v37, v249);
    sub_10001413C(v96 + 6, v96[9]);
    v59 = sub_1002837B4(v210, (uint64_t (*)(_QWORD))sub_10029ADC4, (uint64_t)&unk_1005FC8B8, &qword_100653180, (uint64_t)sub_100289AE0);
    (*(void (**)(uint64_t, uint64_t, __n128))(v209 + 8))(v210, v211, v212);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_35:
    (*(void (**)(id *, uint64_t))(v34 + 8))(v37, v33);
    if ((v275 & 2) != 0)
    {
      v213 = type metadata accessor for REMAnalyticsManager(0);
      static REMAnalyticsManager.shared.getter(v213);
      v214 = (int *)sub_10002A750(&qword_100649F98);
      v215 = v268;
      v216 = &v268[v214[12]];
      v217 = &v268[v214[16]];
      v218 = &v268[v214[20]];
      v219 = enum case for REMUserOperation.widgetShowList(_:);
      v220 = type metadata accessor for REMUserOperation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 104))(v215, v219, v220);
      v221 = type metadata accessor for Date(0);
      *(_QWORD *)v216 = 0;
      *((_QWORD *)v216 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v217, 1, 1, v221);
      *(_QWORD *)v218 = 0;
      *((_QWORD *)v218 + 1) = 0;
      v223 = v269;
      v222 = v270;
      (*(void (**)(char *, _QWORD, id))(v269 + 104))(v215, enum case for REMAnalyticsEvent.userOperation(_:), v270);
      REMAnalyticsManager.post(event:)(v215);
      v224 = swift_release();
      (*(void (**)(char *, id, __n128))(v223 + 8))(v215, v222, v224);
    }
    sub_10001413C(v96 + 6, v96[9]);
    return sub_100280330(v255, v275 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100282E98, &qword_100653188);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v34 + 96))(v37, v33);
    v225 = v245;
    v226 = (uint64_t)v244;
    v227 = v37;
    v228 = v246;
    (*(void (**)(char *, id *, uint64_t))(v245 + 32))(v244, v227, v246);
    v229 = (uint64_t **)sub_10001413C(v61 + 6, v61[9]);
    v230 = v61[4];
    v231 = v61[5];
    v233 = swift_getObjectType(v96[4], v232);
    v279 = v230;
    v234 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v231 + 8) + 8))(v233);
    v235 = *v229;
    swift_retain();
    sub_1002854B8(v226, v234, (uint64_t)v96, v235);

    swift_release();
    v236 = (void *)objc_opt_self(REMError);
    v237 = String._bridgeToObjectiveC()();
    v238 = objc_msgSend(v236, "internalErrorWithDebugDescription:", v237);

    v239 = sub_10002A750(&qword_100653188);
    swift_allocObject(v239, *(unsigned int *)(v239 + 48), *(unsigned __int16 *)(v239 + 52));
    v59 = Promise.init(error:)(v238);
    (*(void (**)(uint64_t, uint64_t, __n128))(v225 + 8))(v226, v228, v240);
    return v59;
  }
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    v241 = *sub_10001413C(v278 + 6, v278[9]);
    v242 = sub_10002A750(&qword_100653180);
    return firstly<A>(closure:)(sub_100289384, v241, v242);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
  __break(1u);
  return result;
}

void sub_1002713D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  char *v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23[5] = a3;
  v23[1] = a2;
  v24 = type metadata accessor for URL(0);
  __chkstk_darwin(v24);
  v4 = type metadata accessor for REMNavigationSpecifier(0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  __chkstk_darwin(v4);
  v5 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v5);
  v23[6] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  v8 = __chkstk_darwin(v7);
  v23[2] = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v23[3] = (char *)v23 - v11;
  __chkstk_darwin(v10);
  v23[4] = (char *)v23 - v12;
  v13 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  __chkstk_darwin(v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (_QWORD *)((char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v19 = static OS_dispatch_queue.main.getter(v20);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v21 = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v21 & 1) != 0)
  {
    sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
    v22 = (char *)&loc_100271624 + *((int *)qword_100271C80 + swift_getEnumCaseMultiPayload(v15, v13));
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x100271C80);
}

uint64_t sub_100271CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_10002A750((uint64_t *)&unk_100653A90);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  return swift_task_switch(sub_100271D44, v9, v10);
}

uint64_t sub_100271D44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v2 = sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  Strong = swift_unknownObjectWeakLoadStrong(*v2 + 48);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(v0 + 48);
    v6 = (void *)UIViewController.topPresentedViewController.getter();

    objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);
  }
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 104);
  static Date.now.getter(Strong);
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  v10 = v8 + 24;
  swift_beginAccess(v8 + 24, v0 + 16, 33, 0);
  v11 = *(_QWORD *)(v8 + 48);
  v12 = *(_QWORD *)(v8 + 56);
  sub_100028D48(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v7, v11, v12);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100271E64(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v3 = v2;
  v5 = (_QWORD *)(v2 + 48);
  v6 = *sub_10001413C(v5, *(_QWORD *)(v3 + 72)) + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    goto LABEL_8;
  v8 = Strong;
  v9 = objc_msgSend(Strong, "traitCollection");

  v10 = objc_msgSend(v9, "horizontalSizeClass");
  if (v10 != (id)1)
    goto LABEL_8;
  v11 = (char *)swift_unknownObjectWeakLoadStrong(v6);
  if (!v11)
    return;
  v12 = v11;
  if (!objc_msgSend(v11, "isCollapsed"))
  {

    goto LABEL_8;
  }
  v13 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
  v14 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  v16 = *(id *)&v12[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
  v17 = sub_10002D318((uint64_t)v16, v15);

  swift_bridgeObjectRelease(v15);
  if ((v17 & 1) != 0)
  {
LABEL_8:
    sub_10001413C(v5, *(_QWORD *)(v3 + 72));
    sub_10029A9B4(1);
    v18 = swift_allocObject(&unk_1005FA1D0, 32, 7);
    *(_BYTE *)(v18 + 16) = a2 & 1;
    *(_QWORD *)(v18 + 24) = v3;
    v19 = swift_retain();
    v20 = (id)zalgo.getter(v19);
    dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_1002863FC, v18, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();
    swift_release();

  }
}

void sub_100272050(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0 || *(_BYTE *)(a3 + 145) == 1)
  {
    type metadata accessor for TTRIPrivacyChecker(0);
    TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded()();
    *(_BYTE *)(a3 + 145) = 0;
  }
}

id sub_1002720B0()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

void sub_1002720BC(void *a1, void *a2)
{
  uint64_t v2;

  sub_10001413C((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
  sub_10029DDA4(a1, a2, 1);
}

void *sub_100272104(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *sub_10001413C((_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 72));
  return sub_100285F5C(a1, a2, v2, v5);
}

uint64_t sub_100272148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_1002721B4, v7, v8);
}

uint64_t sub_1002721B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  __n128 v6;

  if ((TTRGeoLocationService.hasDeterminedAuthorizationStatus.getter() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 24);
    if (*(_BYTE *)(v1 + 144) == 1)
    {
      *(_BYTE *)(v1 + 144) = 0;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 96);
      v2 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
      *(_QWORD *)(v0 + 56) = v2;
      v3 = type metadata accessor for TTRIPrivacyChecker(0);
      *v2 = v0;
      v2[1] = sub_100272290;
      return TTRPrivacyChecker.checkLocationAccess()(v3, &protocol witness table for TTRIPrivacyChecker);
    }
    swift_release();
    sub_100005ED8(0, &qword_100653110, CNContactStore_ptr);
    static CNContactStore.requestContactsAuthorizationIfNeeded()();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = swift_release();
    *(_BYTE *)(v5 + 144) = 1;
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100272290()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_1002722DC, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1002722DC()
{
  uint64_t v0;

  swift_release();
  sub_100005ED8(0, &qword_100653110, CNContactStore_ptr);
  static CNContactStore.requestContactsAuthorizationIfNeeded()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10027232C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  double result;
  uint64_t v10;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor(0);
  v6 = swift_retain();
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_1005FA1F8, 40, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_100148368((uint64_t)v4, (uint64_t)&unk_100653108, (uint64_t)v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100272408(uint64_t a1, uint64_t a2)
{
  sub_1002864B0(a2);
}

uint64_t sub_100272410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10029A9B4(0);
  v8 = swift_allocObject(&unk_1005FA6A8, 24, 7);
  swift_weakInit(v8 + 16, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_1005FA720, v11 + 8, v9 | 7);
  v13 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + v10, v7, v4);
  *(_QWORD *)(v12 + v11) = v8;
  v14 = (void *)zalgo.getter(v13);
  v15 = dispatch thunk of Promise.then<A>(on:closure:)(v14, sub_1002873E4, v12, &type metadata for Any[8]);
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_100272554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a5;
  v9 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = sub_10029A9B4(0);
  v13 = swift_allocObject(&unk_1005FA6A8, 24, 7);
  swift_weakInit(v13 + 16, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(a3, v16 + 8, v14 | 7);
  v18 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(_QWORD *)(v17 + v16) = v13;
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(a4);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, v24, v17, v20);
  swift_release(v12);
  swift_release(v17);

  return v21;
}

uint64_t sub_1002726AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const mach_header_64 *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  NSString v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  int v45;
  int v46;

  v5 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v8, v5);
  if (v9 == enum case for REMNavigationSpecifier.NewListPathSpecifier.list(_:))
  {
    v10 = 0;
  }
  else if (v9 == enum case for REMNavigationSpecifier.NewListPathSpecifier.groceryList(_:))
  {
    v10 = 1;
  }
  else
  {
    if (v9 != enum case for REMNavigationSpecifier.NewListPathSpecifier.customSmartList(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
      __break(1u);
      return result;
    }
    v10 = 2;
  }
  v11 = a3 + 16;
  (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v8, v5);
  v14 = v8;
  v13 = *v8;
  v12 = v14[1];
  swift_beginAccess(v11, v44, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v16 = Strong;
    v17 = *(_QWORD *)(Strong + 32);
    swift_unknownObjectRetain(v17);
    swift_release(v16);
    v18 = *(_QWORD *)(v17 + 184);
    v19 = swift_retain(v18);
    v20 = TTRAccountsListsViewModel.accounts.getter(v19);
    swift_release(v18);
    if (*(_QWORD *)(v20 + 16))
    {
      v21 = *(_QWORD *)(v20 + 32);
      v22 = *(_QWORD *)(v20 + 40);
      v42 = v13;
      v43 = v21;
      v23 = *(void **)(v20 + 48);
      v24 = *(unsigned __int8 *)(v20 + 56);
      v46 = v10;
      v25 = *(unsigned __int8 *)(v20 + 57);
      v26 = *(unsigned __int8 *)(v20 + 58);
      v27 = *(unsigned __int8 *)(v20 + 59);
      HIDWORD(v41) = *(unsigned __int8 *)(v20 + 60);
      v45 = *(unsigned __int8 *)(v20 + 61);
      swift_bridgeObjectRetain(v22);
      v28 = v23;
      swift_bridgeObjectRelease(v20);
      v29 = 256;
      if (!v25)
        v29 = 0;
      v30 = v29 | v24;
      v31 = 0x10000;
      if (!v26)
        v31 = 0;
      v32 = 0x1000000;
      if (!v27)
        v32 = 0;
      v33 = v30 | v31 | v32;
      v34 = &_mh_execute_header;
      if (!HIDWORD(v41))
        v34 = 0;
      v35 = 0x10000000000;
      if (!v45)
        v35 = 0;
      sub_10032F308(v43, v22, v28, v33 | (unint64_t)v34 | v35, v42, v12, v46);
      swift_unknownObjectRelease(v17);

      v36 = v22;
    }
    else
    {
      swift_unknownObjectRelease(v17);
      v36 = v20;
    }
    swift_bridgeObjectRelease(v36);
  }
  swift_bridgeObjectRelease(v12);
  v37 = (void *)objc_opt_self(REMError);
  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "internalErrorWithDebugDescription:", v38);

  return swift_willThrow(v39);
}

uint64_t sub_10027296C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_10029A9B4(0);
  v2 = swift_allocObject(&unk_1005FA6A8, 24, 7);
  v3 = swift_weakInit(v2 + 16, a1);
  v4 = (void *)zalgo.getter(v3);
  v5 = dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100287454, v2, &type metadata for Any[8]);
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100272A04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_10029A9B4(0);
  v7 = swift_allocObject(&unk_1005FA6A8, 24, 7);
  v8 = swift_weakInit(v7 + 16, a1);
  v9 = (void *)zalgo.getter(v8);
  v10 = sub_10002A750(a2);
  v11 = dispatch thunk of Promise.then<A>(on:closure:)(v9, a3, v7, v10);
  swift_release(v6);
  swift_release(v7);

  return v11;
}

uint64_t sub_100272AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  void *v10;
  NSString v11;
  uint64_t v12;
  _BYTE v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD **)(Strong + 32);
    swift_unknownObjectRetain(v5);
    swift_release(v4);
    sub_10001413C(v5 + 14, v5[17]);
    v6 = v5[9];
    ObjectType = swift_getObjectType(v5[8], v7);
    v9 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 + 8) + 8))(ObjectType);
    sub_1001E4B58((uint64_t)v9, (uint64_t)v5, (uint64_t)&off_1006010A8);
    swift_unknownObjectRelease(v5);

  }
  v10 = (void *)objc_opt_self(REMError);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "internalErrorWithDebugDescription:", v11);

  return swift_willThrow(v12);
}

uint64_t sub_100272BBC(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  char *v95;
  int v96;
  uint64_t v97;
  char *v98;
  id *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110[2];
  uint64_t v111;
  char v112;
  char v113[24];
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116;
  void *v117;

  v96 = a4;
  v117 = a3;
  v105 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v101 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v7;
  __chkstk_darwin(v8);
  v99 = (id *)((char *)&v95 - v9);
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v10 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v95 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v95 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v100 = a1;
  v23((char *)&v95 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v106;
    v27 = *(void (**)(char *, id *))(v106 + 32);
    v95 = v14;
    v28 = v22;
    v29 = v103;
    v27(v14, v28);
    v30 = *((_QWORD *)v105 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FA388, v35 + v10, v34 | 7);
    v37 = v117;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FA3B0, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10017A230, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v95, v33);
    return (uint64_t)v40;
  }
  v43 = v105;
  v44 = (id *)v117;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v102;
LABEL_7:
    v46 = v104;
    goto LABEL_8;
  }
  v45 = v102;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v104;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029A9B4(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v100, v15, v25);
  v47 = (uint64_t)v101;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100654820);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v99;
  v106 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v106)(v99, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v113, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v110);
  if (v112)
  {
    sub_10000AEA4(v110);
    goto LABEL_32;
  }
  sub_10002E37C(v110, (uint64_t)v114);
  v53 = (_QWORD *)(*sub_10001413C(v114, v115)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v99;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v114);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v110);
  if (v112 != 2)
  {
    sub_10000AEA4(v110);
LABEL_46:
    memset(v110, 0, sizeof(v110));
    v111 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v110, (uint64_t)v114);
  v64 = (_QWORD *)(*sub_10001413C(v114, v115) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v114);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v115;
  v76 = v116;
  v77 = sub_10001413C(v114, v115);
  v108 = v75;
  v109 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v107);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v107, (uint64_t)v110, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v114);
LABEL_47:
  sub_10000735C((uint64_t)v110, (uint64_t)&v107, (uint64_t *)&unk_1006655F0);
  if (v108)
  {
    sub_10002E37C(&v107, (uint64_t)v114);
    v79 = v115;
    v80 = v116;
    v81 = sub_10001413C(v114, v115);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v114, (uint64_t)&v107);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v107);
    sub_100027F10(v114);
  }
  else
  {
    sub_1000073A0((uint64_t)&v107, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FA3D8, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v96 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100286C28, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v98;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v98, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v97 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FA400, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v106)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_100286C48, v92, &type metadata for Any[8]);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v110, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100273640(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FB238, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FB260, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD10(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653120);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FB288, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FB2B0, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_100288804, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_1002740CC(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  void (*v25)(char *, id *);
  id *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v98;
  int v99;
  uint64_t v100;
  char *v101;
  id *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113[2];
  uint64_t v114;
  char v115;
  char v116[24];
  _QWORD v117[3];
  uint64_t v118;
  uint64_t v119;
  void *v120;

  v99 = a4;
  v120 = a3;
  v108 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v104 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v107 = *(_QWORD *)(v105 - 8);
  v7 = __chkstk_darwin(v105);
  v101 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v8;
  __chkstk_darwin(v7);
  v102 = (id *)((char *)&v98 - v9);
  v106 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v109 = *(_QWORD *)(v106 - 8);
  v10 = *(_QWORD *)(v109 + 64);
  v11 = __chkstk_darwin(v106);
  v12 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v98 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (id *)((char *)&v98 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v103 = a1;
  v22((char *)&v98 - v20, a1, v15);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v21, v15);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v21, v15);
    v24 = v109;
    v25 = *(void (**)(char *, id *))(v109 + 32);
    v98 = v14;
    v26 = v21;
    v27 = v106;
    v25(v14, v26);
    v28 = *((_QWORD *)v108 + 4);
    v29 = *(_QWORD *)(*(_QWORD *)(v28 + 48) + 40);
    v30 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v30 + 16, v28);
    v31 = v14;
    v32 = v27;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v12, v31, v27);
    v33 = *(unsigned __int8 *)(v24 + 80);
    v34 = (v33 + 32) & ~v33;
    v35 = swift_allocObject(&unk_1005FA888, v34 + v10, v33 | 7);
    v36 = v120;
    *(_QWORD *)(v35 + 16) = v30;
    *(_QWORD *)(v35 + 24) = v36;
    ((void (*)(uint64_t, char *, uint64_t))v25)(v35 + v34, v12, v32);
    v37 = swift_allocObject(&unk_1005FA8B0, 32, 7);
    *(_QWORD *)(v37 + 16) = sub_100286C14;
    *(_QWORD *)(v37 + 24) = v35;
    swift_unknownObjectRetain(v28);
    swift_retain(v29);
    v38 = (void *)zalgo.getter(v36);
    v39 = dispatch thunk of Promise.then<A>(on:closure:)(v38, sub_10019C880, v37, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release(v39);
    swift_release(v29);
    swift_release(v37);

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v98, v32);
    return (uint64_t)v40;
  }
  v43 = v108;
  v44 = (id *)v120;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v21, v15);

    v45 = v105;
LABEL_7:
    v46 = v107;
    goto LABEL_8;
  }
  v45 = v105;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v21, v15);
    swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  v46 = v107;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10002F7D0(0);
  if (v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  v22(v19, v103, v15);
  v47 = (uint64_t)v104;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653148);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v21 = v44;
  v44 = v102;
  v109 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v109)(v102, v47, v45);
  v19 = v43;
  v22 = (void (*)(char *, uint64_t, uint64_t))(v43 + 96);
  swift_beginAccess(v43 + 96, v116, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v113);
  if (v115)
  {
    sub_10000AEA4(v113);
    goto LABEL_32;
  }
  sub_10002E37C(v113, (uint64_t)v117);
  v53 = (_QWORD *)(*sub_10001413C(v117, v118)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v21, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v19 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v102;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v117);
LABEL_32:
  sub_10000AC28((uint64_t)v22, (uint64_t)v113);
  if (v115 != 2)
  {
    sub_10000AEA4(v113);
LABEL_46:
    memset(v113, 0, sizeof(v113));
    v114 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v113, (uint64_t)v117);
  v64 = (_QWORD *)(*sub_10001413C(v117, v118) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v21, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v117);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v19 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v118;
  v76 = v119;
  v77 = sub_10001413C(v117, v118);
  v111 = v75;
  v112 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v110);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v110, (uint64_t)v113, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v117);
LABEL_47:
  sub_10000735C((uint64_t)v113, (uint64_t)&v110, (uint64_t *)&unk_1006655F0);
  if (v111)
  {
    sub_10002E37C(&v110, (uint64_t)v117);
    v79 = v118;
    v80 = v119;
    v81 = sub_10001413C(v117, v118);
    sub_10029FACC((uint64_t)v81, (uint64_t)v19, v79, v80);
    sub_100010634((uint64_t)v117, (uint64_t)&v110);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    v83 = Promise.init(value:)(&v110);
    sub_100027F10(v117);
  }
  else
  {
    sub_1000073A0((uint64_t)&v110, (uint64_t *)&unk_1006655F0);
    v84 = sub_10029A9B4(0);
    v85 = swift_allocObject(&unk_1005FA8D8, 33, 7);
    *(_QWORD *)(v85 + 16) = v19;
    *(_QWORD *)(v85 + 24) = v21;
    *(_BYTE *)(v85 + 32) = v99 & 1;
    v86 = v21;
    v87 = swift_retain(v19);
    v88 = (void *)zalgo.getter(v87);
    v89 = sub_10002A750((uint64_t *)&unk_100649CC0);
    v83 = dispatch thunk of Promise.then<A>(on:closure:)(v88, sub_100289DD4, v85, v89);
    swift_release(v84);
    swift_release(v85);

  }
  v90 = v101;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v101, v44, v45);
  v91 = *(unsigned __int8 *)(v46 + 80);
  v92 = (v91 + 16) & ~v91;
  v93 = (v100 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
  v94 = swift_allocObject(&unk_1005FA900, v93 + 8, v91 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v109)(v94 + v92, v90, v45);
  *(_QWORD *)(v94 + v93) = v21;
  v95 = (void *)zalgo.getter(v21);
  v96 = sub_10002A750(&qword_100651F48);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v95, sub_1002878FC, v94, v96);
  swift_release(v83);
  swift_release(v94);

  sub_1000073A0((uint64_t)v113, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100274B58(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FAD60, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FAD88, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD34(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653128);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FADB0, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FADD8, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750(&qword_100651F40);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_10028845C, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_1002755E4(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FB710, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FB738, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD58(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653158);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FB760, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FB788, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750(&qword_100653150);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_100288B5C, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100276070(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FBBE8, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FBC10, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD7C(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653168);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FBC38, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FBC60, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750(&qword_100653160);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_100288EB4, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100276AFC(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FC0C0, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FC0E8, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029ADA0(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653178);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FC110, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FC138, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750(&qword_100653170);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_10028920C, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100277588(uint64_t a1, char *a2, void *a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  int v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, id *);
  id *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v96;
  int v97;
  uint64_t v98;
  char *v99;
  id *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111[2];
  uint64_t v112;
  char v113;
  char v114[24];
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  void *v118;

  v97 = a4;
  v118 = a3;
  v106 = a2;
  v5 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v5);
  v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v8);
  v100 = (id *)((char *)&v96 - v9);
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v10 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v96 - v13;
  v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (id *)((char *)&v96 - v21);
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v101 = a1;
  v23((char *)&v96 - v21, a1, v15, v20);
  v24 = (*(uint64_t (**)(id *, uint64_t))(v16 + 88))(v22, v15);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v26 = v107;
    v27 = *(void (**)(char *, id *))(v107 + 32);
    v96 = v14;
    v28 = v22;
    v29 = v104;
    v27(v14, v28);
    v30 = *((_QWORD *)v106 + 4);
    v31 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v31 + 16, v30);
    v32 = v14;
    v33 = v29;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v32, v29);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(&unk_1005FC598, v35 + v10, v34 | 7);
    v37 = v118;
    *(_QWORD *)(v36 + 16) = v31;
    *(_QWORD *)(v36 + 24) = v37;
    ((void (*)(uint64_t, char *, uint64_t))v27)(v36 + v35, v11, v33);
    v38 = swift_allocObject(&unk_1005FC5C0, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100286C14;
    *(_QWORD *)(v38 + 24) = v36;
    swift_unknownObjectRetain(v30);
    swift_retain();
    v39 = (void *)zalgo.getter(v37);
    dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_10019C880, v38, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v30);
    swift_release();
    swift_release();
    swift_release();

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v96, v33);
    return (uint64_t)v40;
  }
  v43 = v106;
  v44 = (id *)v118;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);

    v45 = v103;
LABEL_7:
    v46 = v105;
    goto LABEL_8;
  }
  v45 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v16 + 96))(v22, v15);
    v25 = swift_bridgeObjectRelease(*v22);
    goto LABEL_7;
  }
  v46 = v105;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029ADC4(0);
  if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
    && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
    goto LABEL_22;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t, __n128))v23)(v18, v101, v15, v25);
  v47 = (uint64_t)v102;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
  {
    sub_1000073A0(v47, &qword_100653118);
    v48 = (void *)objc_opt_self(REMError);
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

    v51 = sub_10002A750(&qword_100653188);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    return Promise.init(error:)(v50);
  }
  v22 = v44;
  v44 = v100;
  v107 = *(_QWORD *)(v46 + 32);
  ((void (*)(id *, uint64_t, uint64_t))v107)(v100, v47, v45);
  v18 = v43;
  v23 = (void (*)(char *, uint64_t, uint64_t, double))(v43 + 96);
  swift_beginAccess(v43 + 96, v114, 0, 0);
  sub_10000AC28((uint64_t)(v43 + 96), (uint64_t)v111);
  if (v113)
  {
    sub_10000AEA4(v111);
    goto LABEL_32;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v53 = (_QWORD *)(*sub_10001413C(v115, v116)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v54 = v53[1];
  ObjectType = swift_getObjectType(*v53, v55);
  v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(ObjectType, v54);
  if (v57)
  {
    v58 = v57;
    v59 = objc_msgSend(v57, "objectID");

    goto LABEL_23;
  }
LABEL_22:
  v59 = 0;
LABEL_23:
  v60 = objc_msgSend(v22, "objectID");
  v61 = v60;
  if (v59)
  {
    if (v60)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v62 = v59;
      v18 = v43;
      v63 = static NSObject.== infix(_:_:)(v62, v61);

      v44 = v100;
      if ((v63 & 1) != 0)
        goto LABEL_42;
      goto LABEL_31;
    }
    v61 = v59;
  }
  else if (!v60)
  {
    goto LABEL_42;
  }

LABEL_31:
  sub_100027F10(v115);
LABEL_32:
  sub_10000AC28((uint64_t)v23, (uint64_t)v111);
  if (v113 != 2)
  {
    sub_10000AEA4(v111);
LABEL_46:
    memset(v111, 0, sizeof(v111));
    v112 = 0;
    goto LABEL_47;
  }
  sub_10002E37C(v111, (uint64_t)v115);
  v64 = (_QWORD *)(*sub_10001413C(v115, v116) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v65 = v64[1];
  v67 = swift_getObjectType(*v64, v66);
  v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v67, v65);
  if (v68)
  {
    v69 = v68;
    v70 = objc_msgSend(v68, "objectID");

  }
  else
  {
    v70 = 0;
  }
  v71 = objc_msgSend(v22, "objectID");
  v72 = v71;
  if (!v70)
  {
    if (!v71)
      goto LABEL_42;
LABEL_44:

LABEL_45:
    sub_100027F10(v115);
    goto LABEL_46;
  }
  if (!v71)
  {
    v72 = v70;
    goto LABEL_44;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v73 = v70;
  v74 = static NSObject.== infix(_:_:)(v73, v72);

  v18 = v43;
  if ((v74 & 1) == 0)
    goto LABEL_45;
LABEL_42:
  v75 = v116;
  v76 = v117;
  v77 = sub_10001413C(v115, v116);
  v109 = v75;
  v110 = *(_QWORD *)(v76 + 8);
  v78 = sub_100028D70(&v108);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
  sub_10000F614((uint64_t)&v108, (uint64_t)v111, (uint64_t *)&unk_1006655F0);
  sub_100027F10(v115);
LABEL_47:
  sub_10000735C((uint64_t)v111, (uint64_t)&v108, (uint64_t *)&unk_1006655F0);
  if (v109)
  {
    sub_10002E37C(&v108, (uint64_t)v115);
    v79 = v116;
    v80 = v117;
    v81 = sub_10001413C(v115, v116);
    sub_10029FACC((uint64_t)v81, (uint64_t)v18, v79, v80);
    sub_100010634((uint64_t)v115, (uint64_t)&v108);
    v82 = sub_10002A750(&qword_100653120);
    swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    Promise.init(value:)(&v108);
    sub_100027F10(v115);
  }
  else
  {
    sub_1000073A0((uint64_t)&v108, (uint64_t *)&unk_1006655F0);
    sub_10029A9B4(0);
    v83 = swift_allocObject(&unk_1005FC5E8, 33, 7);
    *(_QWORD *)(v83 + 16) = v18;
    *(_QWORD *)(v83 + 24) = v22;
    *(_BYTE *)(v83 + 32) = v97 & 1;
    v84 = v22;
    v85 = swift_retain();
    v86 = (void *)zalgo.getter(v85);
    v87 = sub_10002A750((uint64_t *)&unk_100649CC0);
    dispatch thunk of Promise.then<A>(on:closure:)(v86, sub_100289DD4, v83, v87);
    swift_release();
    swift_release();

  }
  v88 = v99;
  (*(void (**)(char *, id *, uint64_t))(v46 + 16))(v99, v44, v45);
  v89 = *(unsigned __int8 *)(v46 + 80);
  v90 = (v89 + 16) & ~v89;
  v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = swift_allocObject(&unk_1005FC610, v91 + 8, v89 | 7);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v45);
  *(_QWORD *)(v92 + v91) = v22;
  v93 = (void *)zalgo.getter(v22);
  v94 = sub_10002A750(&qword_100653180);
  v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_1002896C0, v92, v94);
  swift_release();
  swift_release();

  sub_1000073A0((uint64_t)v111, (uint64_t *)&unk_1006655F0);
  (*(void (**)(id *, uint64_t))(v46 + 8))(v44, v45);
  return (uint64_t)v40;
}

uint64_t sub_100278014(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t result;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110[24];
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  void *v114;

  v114 = a3;
  v104 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v100 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v103 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v97 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v6;
  __chkstk_darwin(v7);
  v98 = (char *)&v94 - v8;
  v102 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v105 = *(_QWORD *)(v102 - 8);
  v9 = *(_QWORD *)(v105 + 64);
  __chkstk_darwin(v102);
  v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v94 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v94 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v99 = a1;
  v22((char *)&v94 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v105;
    v26 = *(void (**)(char *, id *, uint64_t))(v105 + 32);
    v95 = v13;
    v27 = v102;
    v26(v13, v21, v102);
    v28 = v104[4];
    v104 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FA4F0, v31 + v9, v30 | 7);
    v33 = v114;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FA518, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v104;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v95, v35);
    return (uint64_t)v38;
  }
  v44 = v104;
  v45 = v114;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029A9B4(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v99, v14, v24);
    v46 = (uint64_t)v100;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v103;
    v48 = v101;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v46, 1, v101) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100654820);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v98;
    v105 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v105)(v98, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v110, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v106);
    if (v109 != 1)
    {
      sub_10000AEA4(&v106);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FA540, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100286E54, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v106, (uint64_t)v111);
    v56 = (_QWORD *)(*sub_10001413C(v111, v112)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v112;
        v71 = v113;
        v72 = sub_10001413C(v111, v112);
        v107 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v108 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v106);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v106);
        v76 = v112;
        v77 = v113;
        v78 = sub_10001413C(v111, v112);
        v107 = v76;
        v108 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v106);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v106);
        sub_100027F10(v111);
LABEL_32:
        v86 = v103;
        v87 = v97;
        (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v97, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v96 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FA568, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v105)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_100286E70, v91, &type metadata for Any[8]);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v111);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027895C(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FB3A0, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FB3C8, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD10(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653120);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FB3F0, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FB418, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750((uint64_t *)&unk_100649CC0);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_1002888CC, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_1002792AC(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  void (*v24)(char *, id *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  NSString v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  id v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t ObjectType;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  NSString v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t result;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112[24];
  _QWORD v113[3];
  uint64_t v114;
  uint64_t v115;
  void *v116;

  v116 = a3;
  v106 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v102 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v105 = *(_QWORD *)(v103 - 8);
  v6 = __chkstk_darwin(v103);
  v99 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  __chkstk_darwin(v6);
  v100 = (char *)&v96 - v8;
  v104 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v107 = *(_QWORD *)(v104 - 8);
  v9 = *(_QWORD *)(v107 + 64);
  v10 = __chkstk_darwin(v104);
  v11 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v96 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (id *)((char *)&v96 - v19);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v101 = a1;
  v21((char *)&v96 - v19, a1, v14);
  v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    v23 = v107;
    v24 = *(void (**)(char *, id *, uint64_t))(v107 + 32);
    v97 = v13;
    v25 = v104;
    v24(v13, v20, v104);
    v26 = v106[4];
    v106 = *(_QWORD **)(*(_QWORD *)(v26 + 48) + 40);
    v27 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v27 + 16, v26);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v13, v25);
    v28 = *(unsigned __int8 *)(v23 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(&unk_1005FA9F0, v29 + v9, v28 | 7);
    v31 = v116;
    *(_QWORD *)(v30 + 16) = v27;
    *(_QWORD *)(v30 + 24) = v31;
    v32 = v30 + v29;
    v33 = v25;
    v24((char *)v32, (id *)v11, v25);
    v34 = swift_allocObject(&unk_1005FAA18, 32, 7);
    *(_QWORD *)(v34 + 16) = sub_100286E40;
    *(_QWORD *)(v34 + 24) = v30;
    v35 = v31;
    swift_unknownObjectRetain(v26);
    v36 = v106;
    v37 = swift_retain(v106);
    v38 = (void *)zalgo.getter(v37);
    v39 = dispatch thunk of Promise.then<A>(on:closure:)(v38, sub_10019C880, v34, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v26);
    swift_release(v39);
    swift_release(v36);
    swift_release(v34);

    v40 = (void *)objc_opt_self(REMError);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v41);

    swift_willThrow(v42);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v97, v33);
    return (uint64_t)v36;
  }
  v43 = v106;
  v44 = v116;
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease(*v20);
    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10002F7D0(0);
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    v21(v18, v101, v14);
    v45 = (uint64_t)v102;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v18);
    v46 = v105;
    v47 = v103;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v45, 1, v103) == 1)
    {
      sub_1000073A0(v45, &qword_100653118);
      v48 = (void *)objc_opt_self(REMError);
      v49 = String._bridgeToObjectiveC()();
      v50 = objc_msgSend(v48, "internalErrorWithDebugDescription:", v49);

      v51 = sub_10002A750(&qword_100653148);
      swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
      return Promise.init(error:)(v50);
    }
    v53 = v100;
    v107 = *(_QWORD *)(v46 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v107)(v100, v45, v47);
    v54 = (uint64_t)v43;
    swift_beginAccess(v43 + 12, v112, 0, 0);
    sub_10000AC28((uint64_t)(v43 + 12), (uint64_t)&v108);
    if (v111 != 1)
    {
      sub_10000AEA4(&v108);
      v60 = v44;
LABEL_31:
      v81 = sub_10029A9B4(0);
      v82 = swift_allocObject(&unk_1005FAA40, 32, 7);
      *(_QWORD *)(v82 + 16) = v54;
      *(_QWORD *)(v82 + 24) = v60;
      v83 = v60;
      v84 = swift_retain(v54);
      v85 = (void *)zalgo.getter(v84);
      v86 = sub_10002A750((uint64_t *)&unk_100649CC0);
      v80 = dispatch thunk of Promise.then<A>(on:closure:)(v85, sub_100289DB4, v82, v86);
      swift_release(v81);
      swift_release(v82);

      goto LABEL_32;
    }
    sub_10002E37C(&v108, (uint64_t)v113);
    v55 = (_QWORD *)(*sub_10001413C(v113, v114)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v56 = v55[1];
    ObjectType = swift_getObjectType(*v55, v57);
    v59 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(ObjectType, v56);
    v60 = v44;
    if (v59)
    {
      v61 = v59;
      v62 = objc_msgSend(v59, "objectID");

    }
    else
    {
      v62 = 0;
    }
    v65 = objc_msgSend(v44, "objectID");
    v66 = v65;
    if (v62)
    {
      if (v65)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v67 = v62;
        v68 = static NSObject.== infix(_:_:)(v67, v66);

        v54 = (uint64_t)v43;
        if ((v68 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v69 = v114;
        v70 = v115;
        v71 = sub_10001413C(v113, v114);
        v109 = v69;
        v72 = *(_QWORD *)(v70 + 8);
        v110 = v72;
        v73 = v54;
        v74 = sub_100028D70(&v108);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v74, v71, v69);
        sub_10029FACC((uint64_t)v74, v73, v69, v72);
        sub_100027F10(&v108);
        v75 = v114;
        v76 = v115;
        v77 = sub_10001413C(v113, v114);
        v109 = v75;
        v110 = *(_QWORD *)(v76 + 8);
        v78 = sub_100028D70(&v108);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v78, v77, v75);
        v79 = sub_10002A750(&qword_100653120);
        swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
        v80 = Promise.init(value:)(&v108);
        sub_100027F10(v113);
LABEL_32:
        v87 = v105;
        v88 = v99;
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v53, v47);
        v89 = *(unsigned __int8 *)(v87 + 80);
        v90 = (v89 + 16) & ~v89;
        v91 = (v98 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
        v92 = swift_allocObject(&unk_1005FAA68, v91 + 8, v89 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v107)(v92 + v90, v88, v47);
        *(_QWORD *)(v92 + v91) = v60;
        v93 = (void *)zalgo.getter(v60);
        v94 = sub_10002A750(&qword_100651F48);
        v36 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v93, sub_100287B0C, v92, v94);
        swift_release(v80);
        swift_release(v92);

        (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v47);
        return (uint64_t)v36;
      }
      v66 = v62;
    }
    else if (!v65)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v113);
    goto LABEL_31;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v36 = (void *)objc_opt_self(REMError);
    v63 = String._bridgeToObjectiveC()();
    objc_msgSend(v36, "internalErrorWithDebugDescription:", v63);

    swift_willThrow(v64);
    return (uint64_t)v36;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_100279BFC(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FAEC8, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FAEF0, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD34(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653128);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FAF18, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FAF40, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750(&qword_100651F40);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_100288524, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027A54C(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FB878, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FB8A0, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD58(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653158);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FB8C8, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FB8F0, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750(&qword_100653150);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_100288C24, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027AE9C(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FBD50, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FBD78, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029AD7C(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653168);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FBDA0, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FBDC8, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750(&qword_100653160);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_100288F7C, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027B7EC(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FC228, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FC250, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029ADA0(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653178);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FC278, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FC2A0, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750(&qword_100653170);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_1002892D4, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027C13C(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, id *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  NSString v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  NSString v50;
  id v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  NSString v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111[24];
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;
  void *v115;

  v115 = a3;
  v105 = a2;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v101 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v104 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v98 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v6;
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v103 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v106 = *(_QWORD *)(v103 - 8);
  v9 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v103);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v95 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v100 = a1;
  v22((char *)&v95 - v20, a1, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v25 = v106;
    v26 = *(void (**)(char *, id *, uint64_t))(v106 + 32);
    v96 = v13;
    v27 = v103;
    v26(v13, v21, v103);
    v28 = v105[4];
    v105 = *(_QWORD **)(*(_QWORD *)(v28 + 48) + 40);
    v29 = swift_allocObject(&unk_1005FA360, 24, 7);
    swift_weakInit(v29 + 16, v28);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v10, v13, v27);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(&unk_1005FC700, v31 + v9, v30 | 7);
    v33 = v115;
    *(_QWORD *)(v32 + 16) = v29;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v32 + v31;
    v35 = v27;
    v26((char *)v34, (id *)v10, v27);
    v36 = swift_allocObject(&unk_1005FC728, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_100286E40;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v33;
    swift_unknownObjectRetain(v28);
    v38 = v105;
    v39 = swift_retain();
    v40 = (void *)zalgo.getter(v39);
    dispatch thunk of Promise.then<A>(on:closure:)(v40, sub_10019C880, v36, (char *)&type metadata for () + 8);
    swift_unknownObjectRelease(v28);
    swift_release();
    swift_release();
    swift_release();

    v41 = (void *)objc_opt_self(REMError);
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v41, "internalErrorWithDebugDescription:", v42);

    swift_willThrow(v43);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v35);
    return (uint64_t)v38;
  }
  v44 = v105;
  v45 = v115;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    v24 = swift_bridgeObjectRelease(*v21);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:))
    return sub_10029ADC4(0);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, v100, v14, v24);
    v46 = (uint64_t)v101;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(v17);
    v47 = v104;
    v48 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v46, 1, v102) == 1)
    {
      sub_1000073A0(v46, &qword_100653118);
      v49 = (void *)objc_opt_self(REMError);
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v49, "internalErrorWithDebugDescription:", v50);

      v52 = sub_10002A750(&qword_100653188);
      swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      return Promise.init(error:)(v51);
    }
    v54 = v99;
    v106 = *(_QWORD *)(v47 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v106)(v99, v46, v48);
    v55 = (uint64_t)v44;
    swift_beginAccess(v44 + 12, v111, 0, 0);
    sub_10000AC28((uint64_t)(v44 + 12), (uint64_t)&v107);
    if (v110 != 1)
    {
      sub_10000AEA4(&v107);
      v61 = v45;
LABEL_31:
      sub_10029A9B4(0);
      v81 = swift_allocObject(&unk_1005FC750, 32, 7);
      *(_QWORD *)(v81 + 16) = v55;
      *(_QWORD *)(v81 + 24) = v61;
      v82 = v61;
      v83 = swift_retain();
      v84 = (void *)zalgo.getter(v83);
      v85 = sub_10002A750((uint64_t *)&unk_100649CC0);
      dispatch thunk of Promise.then<A>(on:closure:)(v84, sub_100289DB4, v81, v85);
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_10002E37C(&v107, (uint64_t)v112);
    v56 = (_QWORD *)(*sub_10001413C(v112, v113)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v57 = v56[1];
    ObjectType = swift_getObjectType(*v56, v58);
    v60 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(ObjectType, v57);
    v61 = v45;
    if (v60)
    {
      v62 = v60;
      v63 = objc_msgSend(v60, "objectID");

    }
    else
    {
      v63 = 0;
    }
    v66 = objc_msgSend(v45, "objectID");
    v67 = v66;
    if (v63)
    {
      if (v66)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v68 = v63;
        v69 = static NSObject.== infix(_:_:)(v68, v67);

        v55 = (uint64_t)v44;
        if ((v69 & 1) == 0)
          goto LABEL_30;
LABEL_27:
        v70 = v113;
        v71 = v114;
        v72 = sub_10001413C(v112, v113);
        v108 = v70;
        v73 = *(_QWORD *)(v71 + 8);
        v109 = v73;
        v74 = v55;
        v75 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v75, v72, v70);
        sub_10029FACC((uint64_t)v75, v74, v70, v73);
        sub_100027F10(&v107);
        v76 = v113;
        v77 = v114;
        v78 = sub_10001413C(v112, v113);
        v108 = v76;
        v109 = *(_QWORD *)(v77 + 8);
        v79 = sub_100028D70(&v107);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v79, v78, v76);
        v80 = sub_10002A750(&qword_100653120);
        swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
        Promise.init(value:)(&v107);
        sub_100027F10(v112);
LABEL_32:
        v86 = v104;
        v87 = v98;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v98, v54, v48);
        v88 = *(unsigned __int8 *)(v86 + 80);
        v89 = (v88 + 16) & ~v88;
        v90 = (v97 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        v91 = swift_allocObject(&unk_1005FC778, v90 + 8, v88 | 7);
        ((void (*)(uint64_t, char *, uint64_t))v106)(v91 + v89, v87, v48);
        *(_QWORD *)(v91 + v90) = v61;
        v92 = (void *)zalgo.getter(v61);
        v93 = sub_10002A750(&qword_100653180);
        v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)(v92, sub_100289844, v91, v93);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v48);
        return (uint64_t)v38;
      }
      v67 = v63;
    }
    else if (!v66)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100027F10(v112);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    v38 = (void *)objc_opt_self(REMError);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "internalErrorWithDebugDescription:", v64);

    swift_willThrow(v65);
    return (uint64_t)v38;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_10027CA8C(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v20 = a4;
  v21 = a5;
  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = a1[3];
  v12 = a1[4];
  sub_10001413C(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(v20, v15 + 8, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v16 + v15) = a3;
  v17 = (void *)zalgo.getter(a3);
  v18 = dispatch thunk of Promise.then<A>(on:closure:)(v17, v21, v16, &type metadata for Any[8]);
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10027CBDC(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v25 = a5;
  v26 = a6;
  v24 = a4;
  v9 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = a1[3];
  v13 = a1[4];
  sub_10001413C(a1, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(v24, v17 + 8, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(_QWORD *)(v18 + v17) = a3;
  v19 = (void *)zalgo.getter(a3);
  v20 = sub_10002A750(v25);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, v26, v18, v20);
  swift_release(v14);
  swift_release(v18);

  return v21;
}

uint64_t sub_10027CD34(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  uint64_t v22;

  v21 = a3;
  v22 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a2, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  v14 = enum case for REMNavigationSpecifier.CommonListPathSpecifier.showSectionlessSection(_:);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v15 = a1[3];
  v16 = a1[4];
  sub_10001413C(a1, v15);
  if (v13 != v14)
    return (*(uint64_t (**)(uint64_t, char *, char *, uint64_t, uint64_t))(v16 + 72))(a2, &type metadata for Any[8], &type metadata for Any[8], v15, v16);
  v17 = objc_msgSend(v21, "objectID");
  v18 = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:), v22);
  v19 = (*(uint64_t (**)(id, char *, char *, char *, uint64_t, uint64_t))(v16 + 64))(v17, v7, &type metadata for Any[8], &type metadata for Any[8], v15, v16);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  return v19;
}

uint64_t sub_10027CF0C(_QWORD *a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a3;
  v7 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  v16 = enum case for REMNavigationSpecifier.CommonListPathSpecifier.showSectionlessSection(_:);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = a1[3];
  v18 = a1[4];
  sub_10001413C(a1, v17);
  if (v15 != v16)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 72))(a2, v14, v14, v17, v18);
  v19 = objc_msgSend(v25, "objectID");
  v21 = v26;
  v20 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v9, enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:), v27);
  v22 = (*(uint64_t (**)(id, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 64))(v19, v9, v14, v14, v17, v18);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  return v22;
}

uint64_t sub_10027D0E4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, int);
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FA180, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100286358;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FA1A8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10028636C;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, &type metadata for Any[8]);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027D2E8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB468, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100289C94;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FB490, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288908;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v17);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027D4E8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  char *v32;
  char v33;
  void *v34;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend(a1, "list");
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v34 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FAAB8, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v28 = v26[1];
  v29 = v10;
  v16 = v12;
  v30 = v12;
  v31 = sub_100289C94;
  v32 = &v33;
  v17 = a1;
  v18 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v19 = firstly<A>(closure:)(sub_1002863F8, v27, v18);
  v20 = swift_allocObject(&unk_1005FAAE0, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100287B48;
  *(_QWORD *)(v20 + 24) = v15;
  v21 = swift_retain(v15);
  v22 = (void *)zalgo.getter(v21);
  v23 = sub_10002A750(&qword_100651F48);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_10019C880, v20, v23);
  swift_release(v15);
  swift_bridgeObjectRelease(v16);
  swift_release(v19);
  swift_release(v20);

  return v24;
}

uint64_t sub_10027D6F4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FAF90, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C94;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FAFB8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288560;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100651F40);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027D900(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB940, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C94;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FB968, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288C60;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653150);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027DB0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FBE18, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C94;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FBE40, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288FB8;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653160);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027DD18(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC2F0, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C94;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC318, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100289310;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653170);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027DF24(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC7C8, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C94;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC7F0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1002898F4;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653180);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027E130(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_10002A750(a4);
  v8 = a1[3];
  v9 = a1[4];
  sub_10001413C(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 40))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_10027E1A8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, int);
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FA450, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100286CE0;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FA478, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100286CF4;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, &type metadata for Any[8]);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027E3AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB300, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100289C8C;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FB328, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10028885C;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v17);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027E5AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  char *v32;
  char v33;
  void *v34;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend(a1, "list");
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v34 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FA950, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v28 = v26[1];
  v29 = v10;
  v16 = v12;
  v30 = v12;
  v31 = sub_100289C8C;
  v32 = &v33;
  v17 = a1;
  v18 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v19 = firstly<A>(closure:)(sub_1002863F8, v27, v18);
  v20 = swift_allocObject(&unk_1005FA978, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100287A44;
  *(_QWORD *)(v20 + 24) = v15;
  v21 = swift_retain(v15);
  v22 = (void *)zalgo.getter(v21);
  v23 = sub_10002A750(&qword_100651F48);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_10019C880, v20, v23);
  swift_release(v15);
  swift_bridgeObjectRelease(v16);
  swift_release(v19);
  swift_release(v20);

  return v24;
}

uint64_t sub_10027E7B8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FAE28, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C8C;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FAE50, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1002884B4;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100651F40);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027E9C4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB7D8, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C8C;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FB800, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288BB4;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653150);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10017A230, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027EBD0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FBCB0, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C8C;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FBCD8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288F0C;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653160);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027EDDC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC188, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C8C;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC1B0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100289264;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653170);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027EFE8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "list", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC660, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C8C;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC688, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100289718;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653180);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027F1F4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_10002A750(a4);
  v8 = a1[3];
  v9 = a1[4];
  sub_10001413C(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_10027F26C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, int);
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FA4A0, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100286D80;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FA4C8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100286D94;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, &type metadata for Any[8]);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027F470(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[2];
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  char *v29;
  char v30;
  void *v31;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v31 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB350, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v25 = v23[1];
  v26 = v10;
  v27 = v12;
  v28 = sub_100289C90;
  v29 = &v30;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v24, v17);
  v18 = swift_allocObject(&unk_1005FB378, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288884;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v17);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_10027F670(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  char *v32;
  char v33;
  void *v34;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend(a1, "smartList");
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v34 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FA9A0, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v28 = v26[1];
  v29 = v10;
  v16 = v12;
  v30 = v12;
  v31 = sub_100289C90;
  v32 = &v33;
  v17 = a1;
  v18 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v19 = firstly<A>(closure:)(sub_1002863F8, v27, v18);
  v20 = swift_allocObject(&unk_1005FA9C8, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100287A6C;
  *(_QWORD *)(v20 + 24) = v15;
  v21 = swift_retain(v15);
  v22 = (void *)zalgo.getter(v21);
  v23 = sub_10002A750(&qword_100651F48);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_10019C880, v20, v23);
  swift_release(v15);
  swift_bridgeObjectRelease(v16);
  swift_release(v19);
  swift_release(v20);

  return v24;
}

uint64_t sub_10027F87C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FAE78, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C90;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FAEA0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1002884DC;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100651F40);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027FA88(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FB828, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C90;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FB850, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288BDC;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653150);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027FC94(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FBD00, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C90;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FBD28, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100288F34;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653160);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_10027FEA0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC1D8, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C90;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC200, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10028928C;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653170);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1002800AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  void *v32;

  v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = objc_msgSend(a1, "smartList", __chkstk_darwin(v4));
  v8 = objc_msgSend(v7, "objectID");

  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v32 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005FC6B0, v14 + v6, v13 | 7);
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v26 = v24[1];
  v27 = v10;
  v28 = v12;
  v29 = sub_100289C90;
  v30 = &v31;
  v16 = a1;
  v17 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v25, v17);
  v18 = swift_allocObject(&unk_1005FC6D8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100289740;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain();
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100653180);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1002802B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = sub_10002A750(a4);
  v8 = a1[3];
  v9 = a1[4];
  sub_10001413C(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_100280330(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, char *, uint64_t), uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  Swift::String v37;
  unint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, char *, uint64_t);
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v49 = a4;
  v47 = a3;
  v6 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v48 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v46 - v15;
  __chkstk_darwin(v14);
  v18 = (id *)((char *)&v46 - v17);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v50 = a1;
  v20 = v19;
  v19((char *)&v46 - v17, a1, v10);
  v21 = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v18, v10);
  if (v21 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);

    v22 = (char *)v18 + *(int *)(sub_10002A750(&qword_10064BBB8) + 48);
    v23 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0);
LABEL_6:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_7:
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v24 = type metadata accessor for Logger(0);
    sub_100012DC4(v24, (uint64_t)qword_100653B00);
    v25 = v20(v16, v50, v10);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v30 = (void (*)(char *, char *, uint64_t))v20;
      v31 = v29;
      v52 = v29;
      *(_DWORD *)v28 = 136315138;
      v32 = v48;
      v30(v48, v16, v10);
      v33 = String.init<A>(describing:)(v32, v10);
      v35 = v34;
      v51 = sub_100027E40(v33, v34, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease(v35);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Tried to navigate to unknown smart list {navigation: %s}", v28, 0xCu);
      swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }

    v36 = (void *)objc_opt_self(REMError);
    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    v37._object = (void *)0x8000000100571200;
    v37._countAndFlagsBits = 0xD000000000000028;
    String.append(_:)(v37);
    _print_unlocked<A, B>(_:_:)(v50, &v52, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v38 = v53;
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v40 = objc_msgSend(v36, "internalErrorWithDebugDescription:", v39);

    v41 = sub_10002A750(v49);
    swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
    return Promise.init(error:)(v40);
  }
  if (v21 == enum case for REMNavigationSpecifier.list(_:)
    || v21 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);

    v22 = (char *)v18 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
    v23 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
    goto LABEL_6;
  }
  if (v21 == enum case for REMNavigationSpecifier.newList(_:))
    goto LABEL_15;
  if (v21 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);

    v22 = (char *)v18 + *(int *)(sub_10002A750((uint64_t *)&unk_100642D20) + 48);
    v23 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
    goto LABEL_6;
  }
  if (v21 == enum case for REMNavigationSpecifier.section(_:)
    || v21 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);

    v22 = (char *)v18 + *(int *)(sub_10002A750(&qword_10064BBB0) + 48);
    v23 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
    goto LABEL_6;
  }
  if (v21 == enum case for REMNavigationSpecifier.root(_:))
    goto LABEL_15;
  if (v21 == enum case for REMNavigationSpecifier.today(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 0;
LABEL_30:
    v42 = v47(v45, v9, v44);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v42;
  }
  if (v21 == enum case for REMNavigationSpecifier.scheduled(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 1;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.allReminders(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 2;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 3;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.search(_:))
    goto LABEL_15;
  if (v21 == enum case for REMNavigationSpecifier.assigned(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 4;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 5;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.tagged(_:))
    goto LABEL_15;
  if (v21 == enum case for REMNavigationSpecifier.completed(_:))
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v18, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v18, v6);
    v44 = a2 & 1;
    v45 = 6;
    goto LABEL_30;
  }
  if (v21 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
LABEL_15:
    (*(void (**)(id *, uint64_t))(v11 + 8))(v18, v10);
    goto LABEL_7;
  }
  if (v21 == enum case for REMNavigationSpecifier.newReminder(_:))
    goto LABEL_7;
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
  return result;
}

uint64_t sub_100280AA4(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void *v28;
  NSString v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  unsigned __int8 v41;
  char v42;
  char v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  __n128 v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t result;
  int v52;
  int v53;
  char *v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  _OWORD v58[3];
  _BYTE v59[24];

  v52 = a3;
  v53 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v57 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v57 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v57);
  v56 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - v10;
  __chkstk_darwin(v12);
  v54 = (char *)&v52 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v52 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v52 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v27 = v57;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v57) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v28 = (void *)objc_opt_self(REMError);
      v29 = String._bridgeToObjectiveC()();
      v30 = objc_msgSend(v28, "internalErrorWithDebugDescription:", v29);

      v31 = sub_10002A750(&qword_100654820);
      swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      return Promise.init(error:)(v30);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v33 = v54;
      v32(v54, v6, v27);
      v34 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v34(v11, v33, v27);
      v34(v56, v11, v27);
      v35 = *(unsigned __int8 *)(v7 + 80);
      v36 = (v35 + 26) & ~v35;
      v37 = swift_allocObject(&unk_1005FA5B8, v36 + v8, v35 | 7);
      v38 = v55;
      *(_QWORD *)(v37 + 16) = v55;
      v40 = v52;
      v39 = v53;
      *(_BYTE *)(v37 + 24) = v53;
      *(_BYTE *)(v37 + 25) = v40 & 1;
      v32((char *)(v37 + v36), v11, v27);
      swift_beginAccess(v38 + 96, v59, 0, 0);
      sub_10000AC28(v38 + 96, (uint64_t)v58);
      swift_retain();
      sub_10029EF54();
      v42 = v41;
      LODWORD(v32) = v41;
      sub_10000AEA4(v58);
      if ((_DWORD)v32 == 7 || (sub_1002852B8(v42), (v43 & 1) == 0))
      {
        v47 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v47((uint64_t)v56, v27);
        sub_10029A9B4(0);
        v48 = swift_allocObject(&unk_1005FA5E0, 32, 7);
        *(_QWORD *)(v48 + 16) = sub_100286F10;
        *(_QWORD *)(v48 + 24) = v37;
        v49 = swift_retain();
        v50 = (void *)zalgo.getter(v49);
        v25 = dispatch thunk of Promise.then<A>(on:closure:)(v50, sub_10019C880, v48, &type metadata for Any[8]);
        swift_release();
        swift_release();
        swift_release();

        v47((uint64_t)v33, v27);
      }
      else
      {
        v44 = (uint64_t)v56;
        v25 = sub_1002843B4(v38, v39, v40 & 1, (uint64_t)v56);
        v45 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v45(v44, v27);
        v46 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v45)(v33, v27, v46);
      }
    }
    return v25;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v57 = *(_OWORD *)(v55 + 32);
  v58[0] = v57;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v57);
  Promise.init(value:)(v58);
  v25 = dispatch thunk of Promise.cast<A>(as:)(&type metadata for Any[8], &type metadata for Any[8]);
  swift_release();
  return v25;
}

uint64_t sub_100280FC0(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653120);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FB4B8, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FB4E0, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100288928;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750((uint64_t *)&unk_100649CC0);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_10028457C(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_1002814E4(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v54 - v11;
  __chkstk_darwin(v10);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (id *)((char *)&v54 - v19);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21((char *)&v54 - v19, a2, v14);
  v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease(*v20);
LABEL_12:
    v21(v18, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v18);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653148);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v12, v34, v28);
      v35(v58, v12, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FAB08, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v12, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain(v39);
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v47 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v47((uint64_t)v58, v28);
        v48 = sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FAB30, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100287B68;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain(v38);
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100651F48);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release(v38);
        swift_release(v48);
        swift_release(v49);

        v47((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100284744(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        swift_release(v38);
        v46((uint64_t)v34, v28);
      }
    }
    return v26;
  }
  if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v23 = sub_10002A750(&qword_100653128);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_unknownObjectRetain(v59);
  v24 = Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100651F48);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release(v24);
  return v26;
}

uint64_t sub_100281A08(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653128);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FAFE0, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FB008, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100288580;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100651F40);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100284914(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100651F40);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_100281F2C(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653158);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FB990, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FB9B8, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100288C80;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100653150);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10017A230, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100284AE4(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100653150);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_100282450(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653168);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FBE68, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FBE90, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100288FD8;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100653160);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100284CB4(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100653160);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_100282974(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653178);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FC340, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FC368, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100289330;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100653170);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100284E84(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100653170);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_100282E98(int a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __n128 v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t result;
  int v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  _OWORD v60[3];
  _BYTE v61[24];

  v54 = a3;
  v55 = a1;
  v4 = sub_10002A750(&qword_100653118);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - v13;
  v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (id *)((char *)&v54 - v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v54 - v20, a2, v14, v19);
  v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease(*v21);
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)(v17);
    v28 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v7 + 48))(v6, 1, v59) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100653118);
      v29 = (void *)objc_opt_self(REMError);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v29, "internalErrorWithDebugDescription:", v30);

      v32 = sub_10002A750(&qword_100653188);
      swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      return Promise.init(error:)(v31);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34 = v56;
      v33(v56, v6, v28);
      v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v35(v11, v34, v28);
      v35(v58, v11, v28);
      v36 = *(unsigned __int8 *)(v7 + 80);
      v37 = (v36 + 26) & ~v36;
      v38 = swift_allocObject(&unk_1005FC818, v37 + v8, v36 | 7);
      v39 = v57;
      *(_QWORD *)(v38 + 16) = v57;
      v41 = v54;
      v40 = v55;
      *(_BYTE *)(v38 + 24) = v55;
      *(_BYTE *)(v38 + 25) = v41 & 1;
      v33((char *)(v38 + v37), v11, v28);
      swift_beginAccess(v39 + 96, v61, 0, 0);
      sub_10000AC28(v39 + 96, (uint64_t)v60);
      swift_retain();
      sub_10029EF54();
      v43 = v42;
      LODWORD(v33) = v42;
      sub_10000AEA4(v60);
      if ((_DWORD)v33 == 7 || (sub_1002852B8(v43), (v44 & 1) == 0))
      {
        v48 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v48((uint64_t)v58, v28);
        sub_10029A9B4(0);
        v49 = swift_allocObject(&unk_1005FC840, 32, 7);
        *(_QWORD *)(v49 + 16) = sub_100289988;
        *(_QWORD *)(v49 + 24) = v38;
        v50 = swift_retain();
        v51 = (void *)zalgo.getter(v50);
        v52 = sub_10002A750(&qword_100653180);
        v26 = dispatch thunk of Promise.then<A>(on:closure:)(v51, sub_10019C880, v49, v52);
        swift_release();
        swift_release();
        swift_release();

        v48((uint64_t)v34, v28);
      }
      else
      {
        v45 = (uint64_t)v58;
        v26 = sub_100285054(v39, v40, v41 & 1, (uint64_t)v58);
        v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v46(v45, v28);
        v47 = swift_release();
        ((void (*)(char *, uint64_t, __n128))v46)(v34, v28, v47);
      }
    }
    return v26;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  v59 = *(_OWORD *)(v57 + 32);
  v60[0] = v59;
  v24 = sub_10002A750(&qword_100653128);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  swift_unknownObjectRetain(v59);
  Promise.init(value:)(v60);
  v25 = sub_10002A750(&qword_100653180);
  v26 = dispatch thunk of Promise.cast<A>(as:)(v25, v25);
  swift_release();
  return v26;
}

uint64_t sub_1002833BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v7 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == enum case for REMNavigationSpecifier.SearchPathSpecifier.showContents(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v7);
    v13 = *v10;
    v12 = v10[1];
    v14 = *(_QWORD *)(a3 + 32);
    Strong = swift_unknownObjectWeakLoadStrong(v14 + 16);
    if (!Strong)
    {
      swift_bridgeObjectRelease(v12);
      goto LABEL_9;
    }
    v16 = Strong;
    swift_unknownObjectRetain(v14);
    sub_100066F04(v13, v12);
    swift_unknownObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    goto LABEL_7;
  }
  if (v11 == enum case for REMNavigationSpecifier.SearchPathSpecifier.focusInAccountsList(_:))
  {
    v17 = *(_QWORD *)(a3 + 32);
    v18 = swift_unknownObjectWeakLoadStrong(v17 + 16);
    if (!v18)
    {
LABEL_9:
      v19 = (void *)objc_opt_self(REMError);
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v19, "internalErrorWithDebugDescription:", v20);

      v22 = sub_10002A750(a4);
      swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      return Promise.init(error:)(v21);
    }
    v16 = v18;
    swift_unknownObjectRetain(v17);
    sub_100066F04(0, 0xE000000000000000);
    swift_unknownObjectRelease(v17);
LABEL_7:
    swift_unknownObjectRelease(v16);
    goto LABEL_9;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v7, v7);
  __break(1u);
  return result;
}

uint64_t sub_1002835A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  v10 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a1, v10, v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showContents(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v16(v9, v14, v3);
    sub_10029A9B4(0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    v17 = *(unsigned __int8 *)(v4 + 80);
    v18 = (v17 + 24) & ~v17;
    v19 = swift_allocObject(&unk_1005FA658, v18 + v5, v17 | 7);
    *(_QWORD *)(v19 + 16) = v1;
    v16((char *)(v19 + v18), v6, v3);
    v20 = swift_retain();
    v21 = (void *)zalgo.getter(v20);
    v22 = dispatch thunk of Promise.then<A>(on:closure:)(v21, sub_100286FB4, v19, &type metadata for Any[8]);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return v22;
  }
  if (v15 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showInAccount(_:))
    return sub_10029A9B4(0);
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
  return result;
}

uint64_t sub_1002837B4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v31 = a4;
  v32 = a5;
  v29 = a2;
  v30 = a3;
  v7 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showContents(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19(v13, v17, v7);
    v20 = sub_10029A9B4(0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v21 = *(unsigned __int8 *)(v8 + 80);
    v22 = (v21 + 24) & ~v21;
    v23 = swift_allocObject(v30, v22 + v9, v21 | 7);
    *(_QWORD *)(v23 + 16) = v5;
    v19((char *)(v23 + v22), v11, v7);
    v24 = swift_retain(v5);
    v25 = (void *)zalgo.getter(v24);
    v26 = sub_10002A750(v31);
    v27 = dispatch thunk of Promise.then<A>(on:closure:)(v25, v32, v23, v26);
    swift_release(v20);
    swift_release(v23);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return v27;
  }
  if (v18 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showInAccount(_:))
    return v29(0);
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

uint64_t sub_1002839D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];
  char v17;
  uint64_t v18;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v18 = a3;
  v16[2] = sub_100287018;
  v16[3] = &v17;
  v16[4] = a2;
  firstly<A>(closure:)(sub_100287020, v16, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FA680, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100287030, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = dispatch thunk of Promise.cast<A>(as:)(&type metadata for Any[8], &type metadata for Any[8]);
  swift_release();
  return v14;
}

uint64_t sub_100283B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];
  char v17;
  uint64_t v18;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v18 = a3;
  v16[2] = sub_100289C98;
  v16[3] = &v17;
  v16[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v16, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FB580, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = dispatch thunk of Promise.cast<A>(as:)(v13, v13);
  swift_release();
  return v14;
}

uint64_t sub_100283C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];
  char v20;
  uint64_t v21;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v21 = a3;
  v19[2] = sub_100289C98;
  v19[3] = &v20;
  v19[4] = a2;
  v10 = firstly<A>(closure:)(sub_100289DCC, v19, &type metadata for Bool);
  v11 = (_QWORD *)swift_allocObject(&unk_1005FABD0, 40, 7);
  v11[2] = v7;
  v11[3] = v9;
  v11[4] = a2;
  swift_bridgeObjectRetain(v9);
  v12 = swift_retain(a2);
  v13 = (void *)zalgo.getter(v12);
  v14 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v15 = dispatch thunk of Promise.then<A>(on:closure:)(v13, sub_100289DE8, v11, v14);
  swift_bridgeObjectRelease(v9);
  swift_release(v10);
  swift_release(v11);

  v16 = sub_10002A750(&qword_100651F48);
  v17 = dispatch thunk of Promise.cast<A>(as:)(v16, v16);
  swift_release(v15);
  return v17;
}

uint64_t sub_100283D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v19 = a3;
  v17[2] = sub_100289C98;
  v17[3] = &v18;
  v17[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v17, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FB0A8, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = sub_10002A750(&qword_100651F40);
  v15 = dispatch thunk of Promise.cast<A>(as:)(v14, v14);
  swift_release();
  return v15;
}

uint64_t sub_100283EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v19 = a3;
  v17[2] = sub_100289C98;
  v17[3] = &v18;
  v17[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v17, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FBA58, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = sub_10002A750(&qword_100653150);
  v15 = dispatch thunk of Promise.cast<A>(as:)(v14, v14);
  swift_release();
  return v15;
}

uint64_t sub_100284000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v19 = a3;
  v17[2] = sub_100289C98;
  v17[3] = &v18;
  v17[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v17, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FBF30, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = sub_10002A750(&qword_100653160);
  v15 = dispatch thunk of Promise.cast<A>(as:)(v14, v14);
  swift_release();
  return v15;
}

uint64_t sub_10028413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v19 = a3;
  v17[2] = sub_100289C98;
  v17[3] = &v18;
  v17[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v17, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FC408, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = sub_10002A750(&qword_100653170);
  v15 = dispatch thunk of Promise.cast<A>(as:)(v14, v14);
  swift_release();
  return v15;
}

uint64_t sub_100284278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = sub_100286FD0();
  v7 = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v9 = v8;
  v19 = a3;
  v17[2] = sub_100289C98;
  v17[3] = &v18;
  v17[4] = a2;
  firstly<A>(closure:)(sub_100289DCC, v17, &type metadata for Bool);
  v10 = (_QWORD *)swift_allocObject(&unk_1005FC8E0, 40, 7);
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = a2;
  swift_bridgeObjectRetain(v9);
  v11 = swift_retain();
  v12 = (void *)zalgo.getter(v11);
  v13 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_100289DE8, v10, v13);
  swift_bridgeObjectRelease(v9);
  swift_release();
  swift_release();

  v14 = sub_10002A750(&qword_100653180);
  v15 = dispatch thunk of Promise.cast<A>(as:)(v14, v14);
  swift_release();
  return v15;
}

uint64_t sub_1002843B4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  _BYTE *v27;
  _BYTE v28[31];
  char v29;
  uint64_t v30;
  unint64_t v31;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v30 = 0;
  v31 = 0xE000000000000000;
  v29 = a2;
  _print_unlocked<A, B>(_:_:)(&v29, &v30, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v30;
  v11 = v31;
  v28[16] = a2;
  v28[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FA608, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v23 = a1;
  v24 = v12;
  v25 = v11;
  v26 = sub_100286F1C;
  v27 = v28;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v22, v16);
  v17 = swift_allocObject(&unk_1005FA630, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100286F2C;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, &type metadata for Any[8]);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_10028457C(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)();
  _BYTE *v27;
  _BYTE v28[31];
  char v29;
  uint64_t v30;
  unint64_t v31;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v30 = 0;
  v31 = 0xE000000000000000;
  v29 = a2;
  _print_unlocked<A, B>(_:_:)(&v29, &v30, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v30;
  v11 = v31;
  v28[16] = a2;
  v28[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FB508, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v23 = a1;
  v24 = v12;
  v25 = v11;
  v26 = sub_100289DC8;
  v27 = v28;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v22, v16);
  v17 = swift_allocObject(&unk_1005FB530, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100288938;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v16);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_100284744(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t (*v28)();
  _BYTE *v29;
  _BYTE v30[31];
  char v31;
  uint64_t v32;
  unint64_t v33;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v32 = 0;
  v33 = 0xE000000000000000;
  v31 = a2;
  _print_unlocked<A, B>(_:_:)(&v31, &v32, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v32;
  v11 = v33;
  v30[16] = a2;
  v30[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FAB58, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v25 = a1;
  v26 = v12;
  v27 = v11;
  v28 = sub_100289DC8;
  v29 = v30;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v17 = firstly<A>(closure:)(sub_1002863F8, v24, v16);
  v18 = swift_allocObject(&unk_1005FAB80, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100287B78;
  *(_QWORD *)(v18 + 24) = v15;
  v19 = swift_retain(v15);
  v20 = (void *)zalgo.getter(v19);
  v21 = sub_10002A750(&qword_100651F48);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v20, sub_10019C880, v18, v21);
  swift_release(v15);
  swift_bridgeObjectRelease(v11);
  swift_release(v17);
  swift_release(v18);

  return v22;
}

uint64_t sub_100284914(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)();
  _BYTE *v28;
  _BYTE v29[31];
  char v30;
  uint64_t v31;
  unint64_t v32;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v31 = 0;
  v32 = 0xE000000000000000;
  v30 = a2;
  _print_unlocked<A, B>(_:_:)(&v30, &v31, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v31;
  v11 = v32;
  v29[16] = a2;
  v29[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FB030, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v24 = a1;
  v25 = v12;
  v26 = v11;
  v27 = sub_100289DC8;
  v28 = v29;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v23, v16);
  v17 = swift_allocObject(&unk_1005FB058, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100288590;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(&qword_100651F40);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v20);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_100284AE4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)();
  _BYTE *v28;
  _BYTE v29[31];
  char v30;
  uint64_t v31;
  unint64_t v32;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v31 = 0;
  v32 = 0xE000000000000000;
  v30 = a2;
  _print_unlocked<A, B>(_:_:)(&v30, &v31, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v31;
  v11 = v32;
  v29[16] = a2;
  v29[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FB9E0, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v24 = a1;
  v25 = v12;
  v26 = v11;
  v27 = sub_100289DC8;
  v28 = v29;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v23, v16);
  v17 = swift_allocObject(&unk_1005FBA08, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100288C90;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(&qword_100653150);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v20);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_100284CB4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)();
  _BYTE *v28;
  _BYTE v29[31];
  char v30;
  uint64_t v31;
  unint64_t v32;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v31 = 0;
  v32 = 0xE000000000000000;
  v30 = a2;
  _print_unlocked<A, B>(_:_:)(&v30, &v31, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v31;
  v11 = v32;
  v29[16] = a2;
  v29[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FBEB8, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v24 = a1;
  v25 = v12;
  v26 = v11;
  v27 = sub_100289DC8;
  v28 = v29;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v23, v16);
  v17 = swift_allocObject(&unk_1005FBEE0, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100288FE8;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(&qword_100653160);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v20);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_100284E84(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)();
  _BYTE *v28;
  _BYTE v29[31];
  char v30;
  uint64_t v31;
  unint64_t v32;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v31 = 0;
  v32 = 0xE000000000000000;
  v30 = a2;
  _print_unlocked<A, B>(_:_:)(&v30, &v31, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v31;
  v11 = v32;
  v29[16] = a2;
  v29[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FC390, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v24 = a1;
  v25 = v12;
  v26 = v11;
  v27 = sub_100289DC8;
  v28 = v29;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v23, v16);
  v17 = swift_allocObject(&unk_1005FC3B8, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100289340;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(&qword_100653170);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v20);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_100285054(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t (*v27)();
  _BYTE *v28;
  _BYTE v29[31];
  char v30;
  uint64_t v31;
  unint64_t v32;

  v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v31 = 0;
  v32 = 0xE000000000000000;
  v30 = a2;
  _print_unlocked<A, B>(_:_:)(&v30, &v31, &type metadata for TTRListType.PredefinedSmartListType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12 = v31;
  v11 = v32;
  v29[16] = a2;
  v29[17] = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005FC868, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v24 = a1;
  v25 = v12;
  v26 = v11;
  v27 = sub_100289DC8;
  v28 = v29;
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  firstly<A>(closure:)(sub_1002863F8, v23, v16);
  v17 = swift_allocObject(&unk_1005FC890, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100289A40;
  *(_QWORD *)(v17 + 24) = v15;
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = sub_10002A750(&qword_100653180);
  v21 = dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_10019C880, v17, v20);
  swift_release();
  swift_bridgeObjectRelease(v11);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_100285224(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_10002A750(a3);
  v6 = a1[3];
  v7 = a1[4];
  sub_10001413C(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 72))(a2, v5, v5, v6, v7);
}

uint64_t sub_100285290(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1002852B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100285314(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1002853B8 + 4 * byte_10052C127[a2]))(0x7961646F74);
}

uint64_t sub_1002853B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7961646F74 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7961646F74, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_1002854B8(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *Strong;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(uint64_t, char *, uint64_t);
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  void (**v94)(void *, char);
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[16];
  uint64_t v120[4];

  v109 = a2;
  v110 = a3;
  v6 = a4 + 6;
  v114 = *a4;
  v7 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v106 = *(_QWORD *)(v10 - 8);
  v107 = v10;
  v11 = *(_QWORD *)(v106 + 64);
  __chkstk_darwin(v10);
  v113 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v115 = *(_QWORD *)(v12 - 8);
  v116 = v12;
  v13 = *(_QWORD *)(v115 + 64);
  v14 = __chkstk_darwin(v12);
  v108 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v112 = (char *)&v97 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v97 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v97 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v97 - v24;
  v26 = a1;
  REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter(v23);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);

  if (Strong)
  {
    swift_beginAccess(a4 + 11, v120, 0, 0);
    v28 = a4[11];
    swift_bridgeObjectRetain(v28);
    v29 = sub_10037C31C((uint64_t)v25, v28);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) == 0)
    {
      v62 = swift_allocObject(&unk_1005FA6A8, 24, 7);
      swift_weakInit(v62 + 16, a4);
      v63 = swift_allocObject(&unk_1005FA6A8, 24, 7);
      swift_weakInit(v63 + 16, a4);
      v64 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
      swift_allocObject(v64, 64, 7);
      v105 = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_100287070, v62, &unk_100653138, v63, 2.0);
      v101 = (char *)swift_allocObject(&unk_1005FA6A8, 24, 7);
      swift_weakInit(v101 + 16, a4);
      v100 = v9;
      v65 = v115;
      v98 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
      v66 = (uint64_t)v112;
      v98(v112, v25, v116);
      v99 = a4 + 11;
      v67 = v106;
      v68 = v26;
      v69 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v113, v68, v107);
      v102 = *(unsigned __int8 *)(v65 + 80);
      v70 = (v102 + 24) & ~v102;
      v103 = v13 + 7;
      v104 = v102 | 7;
      v71 = (v13 + 7 + v70) & 0xFFFFFFFFFFFFFFF8;
      v72 = *(unsigned __int8 *)(v67 + 80);
      v111 = v25;
      v73 = (v72 + v71 + 8) & ~v72;
      v74 = (v11 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
      v75 = swift_allocObject(&unk_1005FA6D0, v74 + 16, v102 | 7 | v72);
      *(_QWORD *)(v75 + 16) = v101;
      v101 = *(char **)(v65 + 32);
      v76 = v116;
      ((void (*)(uint64_t, uint64_t, uint64_t))v101)(v75 + v70, v66, v116);
      v77 = v109;
      *(_QWORD *)(v75 + v71) = v109;
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v75 + v73, v113, v69);
      v78 = (_QWORD *)(v75 + v74);
      v79 = v110;
      v80 = v111;
      *v78 = v110;
      v78[1] = &off_1005F9F40;
      v81 = v108;
      v82 = (void (*)(uint64_t, char *, uint64_t))v98;
      v98(v108, v80, v76);
      swift_beginAccess(v99, &v118, 33, 0);
      v83 = v77;
      swift_retain(v79);
      sub_1004824E0(v66, v81);
      swift_endAccess(&v118);
      v115 = *(_QWORD *)(v115 + 8);
      ((void (*)(uint64_t, uint64_t))v115)(v66, v76);
      v84 = type metadata accessor for TaskPriority(0);
      v85 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v100, 1, 1, v84);
      v82(v66, v80, v76);
      type metadata accessor for MainActor(0);
      v86 = v83;
      v87 = v105;
      swift_retain(v105);
      v88 = swift_retain(v75);
      v89 = static MainActor.shared.getter(v88);
      v90 = (v102 + 48) & ~v102;
      v91 = (v103 + v90) & 0xFFFFFFFFFFFFFFF8;
      v92 = (v91 + 23) & 0xFFFFFFFFFFFFFFF8;
      v93 = (_QWORD *)swift_allocObject(&unk_1005FA6F8, v92 + 8, v104);
      v93[2] = v89;
      v93[3] = &protocol witness table for MainActor;
      v93[4] = v87;
      v93[5] = v86;
      ((void (*)(char *, char *, uint64_t))v101)((char *)v93 + v90, v112, v76);
      v94 = (void (**)(void *, char))((char *)v93 + v91);
      *v94 = sub_1002871B0;
      v94[1] = (void (*)(void *, char))v75;
      *(_QWORD *)((char *)v93 + v92) = v114;
      v95 = sub_100148368(v85, (uint64_t)&unk_100653140, (uint64_t)v93);
      swift_release(v87);
      swift_release(v75);
      swift_release(v95);
      return ((uint64_t (*)(char *, uint64_t))v115)(v111, v76);
    }
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v30 = type metadata accessor for Logger(0);
    sub_100012DC4(v30, (uint64_t)qword_100653B00);
    v32 = v115;
    v31 = v116;
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v115 + 16))(v19, v25, v116);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(22, -1);
      v37 = swift_slowAlloc(64, -1);
      v118 = v37;
      *(_DWORD *)v36 = 136315394;
      v38 = sub_10029CC68(v114);
      v111 = v25;
      v40 = v39;
      v117 = sub_100027E40(v38, v39, &v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v36 + 4, v36 + 12);
      v41 = swift_bridgeObjectRelease(v40);
      *(_WORD *)(v36 + 12) = 2080;
      v42 = UUID.uuidString.getter(v41);
      v44 = v43;
      v117 = sub_100027E40(v42, v43, &v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v36 + 14, v36 + 22);
      swift_bridgeObjectRelease(v44);
      v45 = *(void (**)(char *, uint64_t))(v32 + 8);
      v45(v19, v31);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s.showPublicTemplate(_:store:delegate:) Skipped because there is already a pending request to download the same public template and then show it. {templatePublicLinkURLUUID: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy(v37, 2, &type metadata for Any[8]);
      v46 = v37;
LABEL_11:
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v45)(v111, v31);
    }

    v96 = *(void (**)(char *, uint64_t))(v32 + 8);
    v96(v19, v31);
  }
  else
  {
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v47 = type metadata accessor for Logger(0);
    sub_100012DC4(v47, (uint64_t)qword_100653B00);
    v48 = v115;
    v31 = v116;
    v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v115 + 16))(v22, v25, v116);
    v34 = Logger.logObject.getter(v49);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v50))
    {
      v51 = swift_slowAlloc(22, -1);
      v111 = v25;
      v52 = v48;
      v36 = v51;
      v53 = swift_slowAlloc(64, -1);
      v120[0] = v53;
      *(_DWORD *)v36 = 136315394;
      v54 = sub_10029CC68(v114);
      v56 = v55;
      v118 = sub_100027E40(v54, v55, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v119, v36 + 4, v36 + 12);
      v57 = swift_bridgeObjectRelease(v56);
      *(_WORD *)(v36 + 12) = 2080;
      v58 = UUID.uuidString.getter(v57);
      v60 = v59;
      v118 = sub_100027E40(v58, v59, v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v119, v36 + 14, v36 + 22);
      swift_bridgeObjectRelease(v60);
      v45 = *(void (**)(char *, uint64_t))(v52 + 8);
      v45(v22, v31);
      _os_log_impl((void *)&_mh_execute_header, v34, v50, "%s.showPublicTemplate(_:store:delegate:) Skipped because 'viewController' is nil and cannot present a modal view for showing public template. {templatePublicLinkURLUUID: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy(v53, 2, &type metadata for Any[8]);
      v46 = v53;
      goto LABEL_11;
    }

    v96 = *(void (**)(char *, uint64_t))(v48 + 8);
    v96(v22, v31);
  }
  return ((uint64_t (*)(char *, uint64_t))v96)(v25, v31);
}

uint64_t sub_100285D50(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  char v15;

  v10 = *a1;
  v11 = *sub_10001413C((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  v14[2] = a3;
  v14[3] = v11;
  v14[4] = v10;
  v15 = a4 & 1;
  v12 = sub_10002A750(a5);
  return firstly<A>(closure:)(a6, v14, v12);
}

uint64_t sub_100285DD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];

  v8 = *a1;
  v9 = *sub_10001413C((_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 72));
  v12[2] = a3;
  v12[3] = v9;
  v12[4] = v8;
  v10 = sub_10002A750(a4);
  return firstly<A>(closure:)(a5, v12, v10);
}

uint64_t sub_100285E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  _QWORD v5[4];

  v2 = *(_QWORD *)(a2 + 32);
  v5[3] = swift_getObjectType(v2, a2);
  v5[0] = v2;
  v3 = swift_unknownObjectRetain(v2);
  throwingCast<A>(_:as:failureMessage:)(v5, &type metadata for Any[8], 0, 0, &type metadata for Any[8], v3);
  return sub_100027F10(v5);
}

uint64_t sub_100285ED0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD v8[4];

  v4 = *(_QWORD *)(a2 + 32);
  v8[3] = swift_getObjectType(v4, a2);
  v8[0] = v4;
  v5 = sub_10002A750(a3);
  v6 = swift_unknownObjectRetain(v4);
  throwingCast<A>(_:as:failureMessage:)(v8, v5, 0, 0, v5, v6);
  return sub_100027F10(v8);
}

void *sub_100285F5C(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  void *result;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __int128 v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  _QWORD v49[5];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10029DC78() >= 2u)
  {
    *v17 = a2 & 1;
    v17[1] = 0;
    v41 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.revealSubtasks(_:);
    v42 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(0, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v17, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showInList(_:), v14);
    sub_10027D0E4(a1, (uint64_t)v17);
    v43 = swift_release();
    return (void *)(*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v43);
  }
  else
  {
    result = (void *)swift_unknownObjectWeakLoadStrong(a4 + 48);
    if (result)
    {
      *v17 = a2 & 1;
      v17[1] = 1;
      v21 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.revealSubtasks(_:);
      v48 = result;
      v22 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(0, v20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v17, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showInList(_:), v14);
      v23 = objc_msgSend(a1, "list");
      v24 = objc_msgSend(a1, "store");
      v45 = a3;
      v25 = v24;
      v26 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
      v46 = a1;
      v47 = v14;
      v27 = *(void **)(a4 + 56);
      sub_10000735C((uint64_t)v10, (uint64_t)v13 + v11[5], (uint64_t *)&unk_1006463C0);
      *v13 = v25;
      *(void **)((char *)v13 + v11[6]) = v27;
      v28 = v11[7];
      v44 = *(_OWORD *)(a4 + 64);
      *(_OWORD *)((char *)v13 + v28) = v44;
      *((_BYTE *)v13 + v11[8]) = 0;
      swift_retain();
      swift_unknownObjectRetain(v44);
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_1006463C0);
      type metadata accessor for TTRIShowRemindersInListAssembly();
      v29 = v23;
      v30 = (void *)sub_1004AF820(v50, v13, v23, v45, (uint64_t)&off_1005FA018, 0);

      v31 = type metadata accessor for TTRIRemindersListAssembly();
      v32 = v51;
      v33 = v52;
      v34 = sub_10001413C(v50, v51);
      v49[3] = v32;
      v35 = *(_QWORD *)(v33 + 8);
      v49[4] = v35;
      v36 = sub_100028D70(v49);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v36, v34, v32);
      v37 = sub_1000434B0((uint64_t)v30, (uint64_t)v36, v31, v32, v35);
      sub_100027F10(v49);
      v38 = v48;
      objc_msgSend(v48, "presentViewController:animated:completion:", v37, 1, 0);
      v39 = v51;
      v40 = v52;
      sub_10001413C(v50, v51);
      (*(void (**)(void *, char *, char *, char *, uint64_t))(*(_QWORD *)(v40 + 8) + 40))(v46, v17, &type metadata for Any[8], &type metadata for Any[8], v39);

      swift_release();
      sub_10001F544((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v47);
      return (void *)sub_100027F10(v50);
    }
  }
  return result;
}

uint64_t sub_100286358(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_10029B214(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100286360()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_10028636C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0) - 8)
                          + 80);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v1 + ((v3 + 24) & ~v3);
  v6 = a1[3];
  v7 = a1[4];
  sub_10001413C(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 40))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

void sub_1002863FC(uint64_t a1)
{
  uint64_t v1;

  sub_100272050(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100286418()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100286444(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100653104);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_100272148(a1, v4, v5, v6);
}

void sub_1002864B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = type metadata accessor for TTRUndoNavigationRequest(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_1006655A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMNavigationSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  if (sub_10029DC78() == 2)
  {
    TTRUndoNavigationRequest.navigationSpecifier.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_1006655A0);
      if (qword_10063D5A8 != -1)
        swift_once(&qword_10063D5A8, sub_100267130);
      v13 = type metadata accessor for Logger(0);
      sub_100012DC4(v13, (uint64_t)qword_100652FF0);
      v14 = sub_10002B1E8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUndoNavigationRequest);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(12, -1);
        v18 = swift_slowAlloc(32, -1);
        v31 = v18;
        *(_DWORD *)v17 = 136315138;
        v19 = TTRUndoNavigationRequest.description.getter();
        v21 = v20;
        v30 = sub_100027E40(v19, v20, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v17 + 4, v17 + 12);
        swift_bridgeObjectRelease(v21);
        sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUndoNavigationRequest);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRIRootPresenter: cannot perform undo navigation; no navigationSpecifier {request: %s}",
          v17,
          0xCu);
        swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
        swift_slowDealloc(v18, -1, -1);
        swift_slowDealloc(v17, -1, -1);
      }
      else
      {
        sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUndoNavigationRequest);
      }

    }
    else
    {
      v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      __chkstk_darwin(v26);
      *(&v28 - 4) = (uint64_t)v12;
      *(&v28 - 3) = v1;
      *(&v28 - 2) = 0;
      firstly<A>(closure:)(sub_100286890, &v28 - 6, &type metadata for Any[8]);
      v27 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
    }
  }
  else
  {
    if (qword_10063D5A8 != -1)
      swift_once(&qword_10063D5A8, sub_100267130);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100012DC4(v22, (uint64_t)qword_100652FF0);
    v29 = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v24, "TTRIRootPresenter: skip undo navigation because only one child is visible", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
}

uint64_t sub_100286890()
{
  uint64_t v0;

  return sub_100267678(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10028689C()
{
  uint64_t v0;

  return sub_10027296C(v0);
}

uint64_t sub_1002868A4()
{
  uint64_t v0;

  return sub_100272410(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002868AC()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1002868B8(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100654820);
}

uint64_t sub_1002868D4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1002868E0(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027D0E4);
}

uint64_t sub_100286904()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100286910(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0) - 8)
                          + 80);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v1 + ((v3 + 24) & ~v3);
  v6 = *a1;
  v7 = *sub_10001413C((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
  v9[2] = v5;
  v9[3] = v7;
  v9[4] = v6;
  return firstly<A>(closure:)(sub_100286E20, v9, &type metadata for Any[8]);
}

uint64_t sub_10028699C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002869A8(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027F26C);
}

uint64_t sub_1002869CC()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002869D8(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027E1A8);
}

uint64_t sub_100286A00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  char v12;

  v3 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + v4;
  v7 = *(_BYTE *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = *a1;
  v9 = *sub_10001413C((_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 72));
  v11[2] = v6;
  v11[3] = v9;
  v11[4] = v8;
  v12 = v7 & 1;
  return firstly<A>(closure:)(sub_100286BF0, v11, &type metadata for Any[8]);
}

uint64_t sub_100286AA8()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100286AB4(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100286AD0);
}

uint64_t sub_100286AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FA338, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_1002583EC, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_100286BD8, v0, &type metadata for Any[8]);
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100286BD8(uint64_t a1)
{
  uint64_t v1;

  return sub_100285E4C(a1, v1);
}

uint64_t sub_100286BF0()
{
  uint64_t v0;

  return sub_100272BBC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100286C14()
{
  return sub_1002897F8(sub_10033FB78);
}

uint64_t sub_100286C20()
{
  return sub_100006708(33);
}

uint64_t sub_100286C28(int a1)
{
  uint64_t v1;

  return sub_10029ADE8(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_100286C48(_QWORD *a1)
{
  return sub_100286E94(a1, (uint64_t)&unk_1005FA428, (uint64_t)sub_100286C70);
}

uint64_t sub_100286C70(_QWORD *a1)
{
  return sub_100286C84(a1);
}

uint64_t sub_100286C84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10027CD34(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100286CE0(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_10029B228(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100286CE8()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100286CF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0) - 8)
                          + 80);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v1 + ((v3 + 24) & ~v3);
  v6 = a1[3];
  v7 = a1[4];
  sub_10001413C(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 48))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

uint64_t sub_100286D80(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_10029B320(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_100286D88()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100286D94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0) - 8)
                          + 80);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v1 + ((v3 + 24) & ~v3);
  v6 = a1[3];
  v7 = a1[4];
  sub_10001413C(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 56))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

uint64_t sub_100286E20()
{
  uint64_t v0;

  return sub_100278014(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100286E40()
{
  return sub_1002897F8(sub_10033FC3C);
}

uint64_t sub_100286E4C()
{
  return sub_100006708(32);
}

uint64_t sub_100286E54(int a1)
{
  uint64_t v1;

  return sub_10029B008(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_100286E70(_QWORD *a1)
{
  return sub_100286E94(a1, (uint64_t)&unk_1005FA590, (uint64_t)sub_100286C70);
}

uint64_t sub_100286E94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_10027CA8C(a1, v3 + v8, *(void **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3);
}

uint64_t sub_100286F10()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_1002843B4);
}

uint64_t sub_100286F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10029F340(a1, a2, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17));
}

uint64_t sub_100286F2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0)
                                      - 8)
                          + 80);
  v4 = v1 + ((v3 + 16) & ~v3);
  v5 = a1[3];
  v6 = a1[4];
  sub_10001413C(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, char *, uint64_t, uint64_t))(v6 + 72))(v4, &type metadata for Any[8], &type metadata for Any[8], v5, v6);
}

uint64_t sub_100286FA8()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100286FB4(uint64_t a1)
{
  return sub_100289AFC(a1, sub_1002839D0);
}

unint64_t sub_100286FD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100653130;
  if (!qword_100653130)
  {
    v1 = type metadata accessor for REMHashtagLabelSpecifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for REMHashtagLabelSpecifier, v1);
    atomic_store(result, (unint64_t *)&qword_100653130);
  }
  return result;
}

uint64_t sub_100287018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10029B400(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100287020()
{
  uint64_t v0;

  return sub_10029EFE4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100287030(_BYTE *a1)
{
  uint64_t v1;

  return sub_10029F030(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10028704C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100287070()
{
  uint64_t v0;

  sub_10029CC6C(v0);
}

uint64_t sub_100287078()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_100653C1C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10004A08C;
  return sub_10029CD14(v0);
}

uint64_t sub_1002870C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v12 = v3 | v8 | 7;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 16, v12);
}

void sub_1002871B0(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_10029CF3C(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), v2 + v9, *v10, v10[1]);
}

uint64_t sub_100287254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100287300(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_100653BFC);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006083C;
  return sub_10029D378(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_1002873D8()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_1002873E4(uint64_t a1)
{
  return sub_1002873F8(a1);
}

uint64_t sub_1002873F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1002726AC(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100287454(uint64_t a1)
{
  uint64_t v1;

  return sub_100272AAC(a1, v1);
}

uint64_t sub_10028746C()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100651F48, (uint64_t)sub_100287454);
}

uint64_t sub_100287494()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FABF8, &qword_100651F48, (uint64_t)sub_1002873E4);
}

uint64_t sub_1002874C4()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1002874D0(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653148);
}

uint64_t sub_1002874EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1002833BC(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_100287558()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100287564(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027D4E8);
}

uint64_t sub_100287588()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100287594(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100651F48, (uint64_t)sub_100287AE0);
}

uint64_t sub_1002875B8()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002875C4(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027F670);
}

uint64_t sub_1002875E8()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002875F4(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027E5AC);
}

uint64_t sub_10028761C(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100651F48, (uint64_t)sub_1002878CC);
}

uint64_t sub_100287640()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_10028764C(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100287778);
}

uint64_t sub_100287668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FB210, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_1002887B4, v0, v8);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_100287778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 40);
  v4 = swift_allocObject(&unk_1005FA860, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_10002E400;
  *(_QWORD *)(v4 + 24) = v2;
  swift_unknownObjectRetain_n(v2, 2);
  v5 = swift_retain(v3);
  v6 = (void *)zalgo.getter(v5);
  v7 = sub_10002A750(&qword_100651F40);
  v8 = dispatch thunk of Promise.then<A>(on:closure:)(v6, sub_100289D9C, v4, v7);
  swift_unknownObjectRelease(v2);
  swift_release(v3);
  swift_release(v4);

  v9 = swift_retain(v1);
  v10 = (void *)zalgo.getter(v9);
  v11 = sub_10002A750(&qword_100651F48);
  v12 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_1002878AC, v1, v11);
  swift_release(v8);
  swift_release(v1);

  return v12;
}

uint64_t sub_100287888()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002878AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, &qword_100651F48);
}

uint64_t sub_1002878CC()
{
  uint64_t v0;

  return sub_1002740CC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1002878F0()
{
  return sub_100006708(33);
}

uint64_t sub_1002878FC(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FA928, &qword_100651F48, (uint64_t)sub_1002879B0);
}

uint64_t sub_100287928(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_10027CBDC(a1, v4 + v10, *(void **)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3, a4);
}

uint64_t sub_1002879B0(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100651F48);
}

uint64_t sub_1002879CC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10027CF0C(a1, v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_100287A38()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100287A44(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100651F48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100287A60()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100287A6C(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100651F48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_100287A88(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a4(a1, *(_QWORD *)(v4 + 16), v4 + ((v8 + 24) & ~v8), a3);
}

uint64_t sub_100287AE0()
{
  uint64_t v0;

  return sub_1002792AC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100287B00()
{
  return sub_100006708(32);
}

uint64_t sub_100287B0C(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FAA90, &qword_100651F48, (uint64_t)sub_1002879B0);
}

uint64_t sub_100287B3C()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100287B48(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100651F48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100287B68()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100284744);
}

uint64_t sub_100287B78(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100651F48);
}

uint64_t sub_100287B84()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100287B90(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100283C4C);
}

uint64_t sub_100287BB0()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100287BBC()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100651F40, (uint64_t)sub_100287454);
}

uint64_t sub_100287BE4()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FB0D0, &qword_100651F40, (uint64_t)sub_1002873E4);
}

uint64_t sub_100287C14()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100287C20(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653128);
}

uint64_t sub_100287C3C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100287C48(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027D6F4);
}

uint64_t sub_100287C6C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100287C78(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100651F40, (uint64_t)sub_1002884F8);
}

uint64_t sub_100287C9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0) - 8)
                          + 80);
  return sub_100285DD4(a1, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a2, a3);
}

uint64_t sub_100287D00()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100287D0C(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027F87C);
}

uint64_t sub_100287D30()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100287D3C(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027E7B8);
}

uint64_t sub_100287D64(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100651F40, (uint64_t)sub_10028842C);
}

uint64_t sub_100287D88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_100285D50(a1, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3);
}

uint64_t sub_100287E00()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100287E0C(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100287E28);
}

uint64_t sub_100287E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FAD38, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_100287F34, v0, v5);
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100287F34@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_1002883A0(v2, a1);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_100287F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FB6E8, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = sub_10002A750(&qword_100653150);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_100288B0C, v0, v8);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_100288070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FBBC0, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = sub_10002A750(&qword_100653160);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_100288E64, v0, v8);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_100288180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FC098, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = sub_10002A750(&qword_100653170);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_1002891BC, v0, v8);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_100288290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_allocObject(&unk_1005FC570, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_10002E400;
  *(_QWORD *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n(v1, 2);
  v3 = swift_retain();
  v4 = (void *)zalgo.getter(v3);
  v5 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v4, sub_100289D9C, v2, v5);
  swift_unknownObjectRelease(v1);
  swift_release();
  swift_release();

  v6 = swift_retain();
  v7 = (void *)zalgo.getter(v6);
  v8 = sub_10002A750(&qword_100653180);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v7, sub_100289670, v0, v8);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1002883A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t result;
  _QWORD v8[5];

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  v8[3] = swift_getObjectType(v4, a2);
  v8[0] = v4;
  v5 = sub_10002A750(&qword_100651F40);
  v6 = swift_unknownObjectRetain(v4);
  throwingCast<A>(_:as:failureMessage:)(v8, v5, 0, 0, v5, v6);
  result = sub_100027F10(v8);
  if (!v3)
    return v8[4];
  return result;
}

uint64_t sub_10028842C()
{
  uint64_t v0;

  return sub_100274B58(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100288450()
{
  return sub_100006708(33);
}

uint64_t sub_10028845C(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FAE00, &qword_100651F40, (uint64_t)sub_10028848C);
}

uint64_t sub_10028848C(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100651F40);
}

uint64_t sub_1002884A8()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002884B4(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100651F40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_1002884D0()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002884DC(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100651F40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_1002884F8()
{
  uint64_t v0;

  return sub_100279BFC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100288518()
{
  return sub_100006708(32);
}

uint64_t sub_100288524(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FAF68, &qword_100651F40, (uint64_t)sub_10028848C);
}

uint64_t sub_100288554()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288560(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100651F40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100288580()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100284914);
}

uint64_t sub_100288590(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100651F40);
}

uint64_t sub_10028859C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0)
                                      - 8)
                          + 80);
  return sub_100285224(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1002885EC()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_1002885F8(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100283D88);
}

uint64_t sub_100288618()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100288624()
{
  uint64_t v0;

  return sub_100272A04(v0, (uint64_t *)&unk_100649CC0, (uint64_t)sub_100287454);
}

uint64_t sub_10028864C()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FB5A8, (uint64_t *)&unk_100649CC0, (uint64_t)sub_1002873E4);
}

uint64_t sub_10028867C()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100288688(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653120);
}

uint64_t sub_1002886A4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1002886B0(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027D2E8);
}

uint64_t sub_1002886D4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1002886E0(uint64_t *a1)
{
  return sub_100287C9C(a1, (uint64_t *)&unk_100649CC0, (uint64_t)sub_1002888A0);
}

uint64_t sub_100288704()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288710(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027F470);
}

uint64_t sub_100288734()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288740(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027E3AC);
}

uint64_t sub_100288768(uint64_t *a1)
{
  return sub_100287D88(a1, (uint64_t *)&unk_100649CC0, (uint64_t)sub_1002887D4);
}

uint64_t sub_10028878C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100288798(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100287668);
}

uint64_t sub_1002887B4(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, (uint64_t *)&unk_100649CC0);
}

uint64_t sub_1002887D4()
{
  uint64_t v0;

  return sub_100273640(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1002887F8()
{
  return sub_100006708(33);
}

uint64_t sub_100288804(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FB2D8, (uint64_t *)&unk_100649CC0, (uint64_t)sub_100288834);
}

uint64_t sub_100288834(_QWORD *a1)
{
  return sub_1002879CC(a1, (uint64_t *)&unk_100649CC0);
}

uint64_t sub_100288850()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10028885C(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&unk_100649CC0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100288878()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288884(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&unk_100649CC0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_1002888A0()
{
  uint64_t v0;

  return sub_10027895C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1002888C0()
{
  return sub_100006708(32);
}

uint64_t sub_1002888CC(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FB440, (uint64_t *)&unk_100649CC0, (uint64_t)sub_100288834);
}

uint64_t sub_1002888FC()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288908(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&unk_100649CC0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100288928()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_10028457C);
}

uint64_t sub_100288938(_QWORD *a1)
{
  return sub_10028859C(a1, (uint64_t *)&unk_100649CC0);
}

uint64_t sub_100288944()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100288950(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100283B0C);
}

uint64_t sub_100288970()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_10028897C()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100653150, (uint64_t)sub_100287454);
}

uint64_t sub_1002889A4()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FBA80, &qword_100653150, (uint64_t)sub_1002873E4);
}

uint64_t sub_1002889D4()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1002889E0(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653158);
}

uint64_t sub_1002889FC()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288A08(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027D900);
}

uint64_t sub_100288A2C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100288A38(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100653150, (uint64_t)sub_100288BF8);
}

uint64_t sub_100288A5C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288A68(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027FA88);
}

uint64_t sub_100288A8C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288A98(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027E9C4);
}

uint64_t sub_100288AC0(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100653150, (uint64_t)sub_100288B2C);
}

uint64_t sub_100288AE4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100288AF0(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100287F60);
}

uint64_t sub_100288B0C(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, &qword_100653150);
}

uint64_t sub_100288B2C()
{
  uint64_t v0;

  return sub_1002755E4(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100288B50()
{
  return sub_100006708(33);
}

uint64_t sub_100288B5C(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FB7B0, &qword_100653150, (uint64_t)sub_100288B8C);
}

uint64_t sub_100288B8C(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100653150);
}

uint64_t sub_100288BA8()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288BB4(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653150, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100288BD0()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288BDC(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653150, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_100288BF8()
{
  uint64_t v0;

  return sub_10027A54C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100288C18()
{
  return sub_100006708(32);
}

uint64_t sub_100288C24(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FB918, &qword_100653150, (uint64_t)sub_100288B8C);
}

uint64_t sub_100288C54()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288C60(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100653150, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100288C80()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100284AE4);
}

uint64_t sub_100288C90(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100653150);
}

uint64_t sub_100288C9C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100288CA8(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100283EC4);
}

uint64_t sub_100288CC8()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100288CD4()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100653160, (uint64_t)sub_100287454);
}

uint64_t sub_100288CFC()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FBF58, &qword_100653160, (uint64_t)sub_1002873E4);
}

uint64_t sub_100288D2C()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100288D38(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653168);
}

uint64_t sub_100288D54()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288D60(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027DB0C);
}

uint64_t sub_100288D84()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100288D90(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100653160, (uint64_t)sub_100288F50);
}

uint64_t sub_100288DB4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288DC0(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027FC94);
}

uint64_t sub_100288DE4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288DF0(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027EBD0);
}

uint64_t sub_100288E18(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100653160, (uint64_t)sub_100288E84);
}

uint64_t sub_100288E3C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100288E48(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100288070);
}

uint64_t sub_100288E64(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, &qword_100653160);
}

uint64_t sub_100288E84()
{
  uint64_t v0;

  return sub_100276070(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100288EA8()
{
  return sub_100006708(33);
}

uint64_t sub_100288EB4(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FBC88, &qword_100653160, (uint64_t)sub_100288EE4);
}

uint64_t sub_100288EE4(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100653160);
}

uint64_t sub_100288F00()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288F0C(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653160, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100288F28()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100288F34(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653160, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_100288F50()
{
  uint64_t v0;

  return sub_10027AE9C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100288F70()
{
  return sub_100006708(32);
}

uint64_t sub_100288F7C(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FBDF0, &qword_100653160, (uint64_t)sub_100288EE4);
}

uint64_t sub_100288FAC()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100288FB8(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100653160, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100288FD8()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100284CB4);
}

uint64_t sub_100288FE8(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100653160);
}

uint64_t sub_100288FF4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100289000(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100284000);
}

uint64_t sub_100289020()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_10028902C()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100653170, (uint64_t)sub_100287454);
}

uint64_t sub_100289054()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FC430, &qword_100653170, (uint64_t)sub_1002873E4);
}

uint64_t sub_100289084()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100289090(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653178);
}

uint64_t sub_1002890AC()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1002890B8(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027DD18);
}

uint64_t sub_1002890DC()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1002890E8(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100653170, (uint64_t)sub_1002892A8);
}

uint64_t sub_10028910C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289118(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027FEA0);
}

uint64_t sub_10028913C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289148(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027EDDC);
}

uint64_t sub_100289170(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100653170, (uint64_t)sub_1002891DC);
}

uint64_t sub_100289194()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1002891A0(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100288180);
}

uint64_t sub_1002891BC(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, &qword_100653170);
}

uint64_t sub_1002891DC()
{
  uint64_t v0;

  return sub_100276AFC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100289200()
{
  return sub_100006708(33);
}

uint64_t sub_10028920C(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FC160, &qword_100653170, (uint64_t)sub_10028923C);
}

uint64_t sub_10028923C(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100653170);
}

uint64_t sub_100289258()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289264(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653170, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100289280()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10028928C(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653170, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_1002892A8()
{
  uint64_t v0;

  return sub_10027B7EC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1002892C8()
{
  return sub_100006708(32);
}

uint64_t sub_1002892D4(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FC2C8, &qword_100653170, (uint64_t)sub_10028923C);
}

uint64_t sub_100289304()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100289310(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100653170, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100289330()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100284E84);
}

uint64_t sub_100289340(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100653170);
}

uint64_t sub_10028934C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100289358(uint64_t a1)
{
  return sub_100289AFC(a1, sub_10028413C);
}

uint64_t sub_100289378()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100289384()
{
  uint64_t v0;

  return sub_100272A04(v0, &qword_100653180, (uint64_t)sub_100287454);
}

uint64_t sub_1002893AC()
{
  uint64_t v0;

  return sub_100272554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_1005FC908, &qword_100653180, (uint64_t)sub_1002873E4);
}

uint64_t sub_1002893DC()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1002893E8(uint64_t a1)
{
  return sub_1002874EC(a1, &qword_100653188);
}

uint64_t sub_100289404()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100289410(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027DF24);
}

uint64_t sub_100289434()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100289440(uint64_t *a1)
{
  return sub_100287C9C(a1, &qword_100653180, (uint64_t)sub_10028975C);
}

uint64_t sub_100289464()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289470(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1002800AC);
}

uint64_t sub_100289494()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1002894A0(uint64_t *a1)
{
  return sub_1002894C4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10027EFE8);
}

uint64_t sub_1002894C4(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  v7 = v3 + ((v6 + 24) & ~v6);
  v8 = *a1;
  sub_10001413C((_QWORD *)(*(_QWORD *)(v3 + 16) + 48), *(_QWORD *)(*(_QWORD *)(v3 + 16) + 72));
  return a3(v8, v7);
}

uint64_t sub_100289540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002895C0(uint64_t *a1)
{
  return sub_100287D88(a1, &qword_100653180, (uint64_t)sub_100289690);
}

uint64_t sub_1002895E4()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1002895F0(uint64_t a1)
{
  return sub_10028960C(a1, (uint64_t (*)(uint64_t))sub_100288290);
}

uint64_t sub_10028960C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier(0) - 8)
                          + 80);
  v5 = v2 + ((v4 + 24) & ~v4);
  sub_10001413C((_QWORD *)(*(_QWORD *)(v2 + 16) + 48), *(_QWORD *)(*(_QWORD *)(v2 + 16) + 72));
  return a2(v5);
}

uint64_t sub_100289670(uint64_t a1)
{
  uint64_t v1;

  return sub_100285ED0(a1, v1, &qword_100653180);
}

uint64_t sub_100289690()
{
  uint64_t v0;

  return sub_100277588(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1002896B4()
{
  return sub_100006708(33);
}

uint64_t sub_1002896C0(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FC638, &qword_100653180, (uint64_t)sub_1002896F0);
}

uint64_t sub_1002896F0(_QWORD *a1)
{
  return sub_1002879CC(a1, &qword_100653180);
}

uint64_t sub_10028970C()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289718(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653180, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027F1F4);
}

uint64_t sub_100289734()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100289740(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100653180, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_1002802B8);
}

uint64_t sub_10028975C()
{
  uint64_t v0;

  return sub_10027C13C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10028977C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002897F8(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0)
                                      - 8)
                          + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_100289838()
{
  return sub_100006708(32);
}

uint64_t sub_100289844(_QWORD *a1)
{
  return sub_100287928(a1, (uint64_t)&unk_1005FC7A0, &qword_100653180, (uint64_t)sub_1002896F0);
}

uint64_t sub_100289874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002898E8()
{
  return sub_100006B54((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1002898F4(uint64_t a1)
{
  return sub_100287A88(a1, (uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100653180, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_10027E130);
}

uint64_t sub_100289914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 26) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100289988()
{
  return sub_100289994((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_100285054);
}

uint64_t sub_100289994(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0)
                                      - 8)
                          + 80);
  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned __int8 *)(v1 + 25), v1 + ((v2 + 26) & ~v2));
}

uint64_t sub_1002899E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100289A40(_QWORD *a1)
{
  return sub_10028859C(a1, &qword_100653180);
}

uint64_t sub_100289A4C()
{
  uint64_t *v0;

  return sub_10029F264(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100289A5C()
{
  return sub_100289A68((uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100289A68(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100289AE0(uint64_t a1)
{
  return sub_100289AFC(a1, sub_100284278);
}

uint64_t sub_100289AFC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_100289B58()
{
  return sub_100289B64((uint64_t (*)(_QWORD))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100289B64(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release(*(_QWORD *)(v1 + v7));
  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_100289BE0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100289C14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100653194);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_100271CB4(a1, v4, v5, v7, v6);
}

uint64_t sub_100289D9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002583EC(a1);
}

uint64_t sub_100289DB4(int a1)
{
  return sub_100286E54(a1);
}

uint64_t sub_100289DD4(int a1)
{
  return sub_100286C28(a1);
}

uint64_t sub_100289DE8(_BYTE *a1)
{
  return sub_100287030(a1);
}

uint64_t sub_100289DFC(_QWORD *a1, void **a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  id v79;
  void *v80;
  void (*v81)(void *, _UNKNOWN **, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, _UNKNOWN **);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v95;
  _QWORD *v96;
  void **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[4];
  __int128 v110;
  __int128 v111;
  _QWORD v112[16];
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  __int128 v117;

  v106 = a1;
  v107 = a6;
  v101 = a5;
  v102 = a4;
  v105 = a3;
  v7 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v8 = __chkstk_darwin(v7);
  v100 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v99 = (uint64_t)&v98 - v10;
  v104 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v104);
  v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TTRListType.SortingCapability(0);
  v13 = __chkstk_darwin(v103);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v98 - v16;
  v18 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v25);
  v27 = (void **)((char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = a2;
  v29 = sub_10002B1E8((uint64_t)a2, (uint64_t)v27, v28);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v29);
  sub_100041F70(v27, (uint64_t)v24, 0, (uint64_t)v112);
  v30 = *a2;
  v31 = v102;
  swift_bridgeObjectRetain(v102);
  v32 = v30;
  static REMRemindersListDataView.SortingStyle.defaultForSearchResult.getter();
  v33 = type metadata accessor for TTRShowSearchResultDataModelSource(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = TTRShowSearchResultDataModelSource.init(store:searchTerm:countCompleted:sortingStyle:canChangeSortingStyle:)(v32, v105, v31, 1, v21, 0);
  v35 = (void *)v112[0];
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v17, enum case for REMRemindersListDataView.SortingStyle.default(_:), v18);
  swift_storeEnumTagMultiPayload(v17, v103, 0);
  v36 = type metadata accessor for TTRIShowSearchResultViewModelSource(0);
  v37 = (uint64_t *)swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  sub_10002B1E8((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v38 = v35;
  v39 = sub_10028A608(v34, v38, (uint64_t)v15, v37);

  sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  sub_10002B1E8((uint64_t)v98, (uint64_t)v27, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v112, (uint64_t)v109);
  swift_retain(v39);
  sub_100042A94((uint64_t)v27, (uint64_t)v109, v39, (uint64_t)&off_100609110, (uint64_t)v12);
  v40 = v99;
  v105 = v12;
  sub_100042C0C(v99);
  v41 = type metadata accessor for TTRIShowSearchResultPresenter(0);
  v42 = *(unsigned int *)(v41 + 48);
  v43 = *(unsigned __int16 *)(v41 + 52);
  v102 = v41;
  v44 = swift_allocObject(v41, v42, v43);
  v45 = (uint64_t *)(v44 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource);
  *v45 = v34;
  v45[1] = (uint64_t)&protocol witness table for TTRShowSearchResultDataModelSource;
  *(_BYTE *)(v44 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = 0;
  v46 = v100;
  sub_10002B1E8(v40, v100, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v47 = v101;
  ObjectType = swift_getObjectType(v101, v48);
  v50 = *(_QWORD *)(v107 + 8);
  v103 = v34;
  swift_retain(v34);
  swift_unknownObjectRetain(v47);
  v51 = (_QWORD *)sub_1001731D8(v46, v47, v44, ObjectType, v50);
  sub_10001F544(v40, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v52 = v51[18];
  v54 = swift_getObjectType(v51[17], v53);
  v55 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 104);
  swift_retain(v51);
  v56 = v55(v54, v52);
  if (v56)
  {
    v58 = v56;
    v59 = v57;
    v60 = swift_getObjectType(v56, v57);
    LOBYTE(v59) = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v60, v59);
    swift_release(v51);
    swift_unknownObjectRelease(v58);
    v61 = v59 & 1;
  }
  else
  {
    swift_release(v51);
    v61 = 0;
  }
  v62 = sub_100172EB4(v61, (uint64_t)v51);
  v101 = v63;
  v65 = v64;
  v67 = v66;
  v100 = swift_getObjectType(v64, v63);
  v51[3] = *(_QWORD *)(v67 + 8);
  v107 = v65;
  swift_unknownObjectWeakAssign(v51 + 2, v65);
  v68 = v51[18];
  v70 = swift_getObjectType(v51[17], v69);
  v71 = *(uint64_t (**)(uint64_t, uint64_t))(v68 + 104);
  swift_retain_n(v51, 2);
  v72 = v62;
  v73 = v71(v70, v68);
  v75 = v73;
  if (v73)
  {
    v76 = v74;
    v77 = swift_getObjectType(v73, v74);
    v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 16))(v77, v76);
    swift_release(v51);
    swift_unknownObjectRelease(v75);
    v75 = v78 & 1;
  }
  else
  {
    swift_release(v51);
  }
  v79 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v80 = (void *)sub_1002A8974(v51, v72, v101, v75, 0, 1, 0, v79);
  swift_release(v51);

  v81 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v67 + 32);
  v82 = v80;
  v101 = (uint64_t)v82;
  v81(v80, &off_1005FCD60, v100, v67);
  v83 = v112[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v112[0] + direct field offset for TTRRemindersListInteractor.delegate, &v108, 1, 0);
  *(_QWORD *)(v83 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v83, v51);
  swift_unknownObjectWeakAssign(v112[3] + 16, v82);
  v84 = v103;
  v85 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v103 + 400);
  v86 = swift_retain(v39);
  v85(v86, &off_1006074C0);
  swift_retain(v39);
  v87 = swift_retain(v51);
  sub_10048D4EC(v87, (uint64_t)&off_1005F30C0);
  swift_release(v39);
  swift_release(v51);
  v88 = (uint64_t)v105;
  v89 = *(_QWORD *)&v105[*(int *)(v104 + 28)];
  *(_QWORD *)(v89 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v89 + 16, v51);
  sub_100028CFC((uint64_t)&v113, (uint64_t)v109);
  v110 = v114;
  v111 = v115;
  v90 = v114 + 32;
  *(_QWORD *)(v114 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v90, v51);
  sub_100027F10(v109);
  sub_100028CFC((uint64_t)&v116, (uint64_t)v109);
  v91 = v117;
  v110 = v117;
  v93 = swift_getObjectType(v117, v92);
  v94 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v91 + 1) + 48);
  swift_retain(v51);
  v95 = swift_unknownObjectRetain(v91);
  v94(v51, &off_1005F2FF0, v93, *((_QWORD *)&v91 + 1), v95);
  swift_unknownObjectRelease(v91);
  sub_100027F10(v109);
  v96 = v106;
  v106[3] = v102;
  v96[4] = &off_100607478;
  *v96 = v51;
  swift_release(v84);
  swift_release(v39);

  swift_unknownObjectRelease(v107);
  sub_10001F544(v88, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100043844((uint64_t)v112);
  return v101;
}

id TTRIShowSearchResultAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSearchResultAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowSearchResultAssembly()
{
  return objc_opt_self(_TtC9Reminders28TTRIShowSearchResultAssembly);
}

id TTRIShowSearchResultAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSearchResultAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10028A608(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v8 = *a4;
  v37 = a3;
  v38 = v8;
  v9 = type metadata accessor for REMAnalyticsEvent(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (char *)a4 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount;
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = (uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  *v20 = 0;
  v20[1] = 0;
  sub_10002B1E8(a3, (uint64_t)v18, v21);
  swift_retain(a1);
  v22 = sub_1002A8704(a1, (uint64_t)a2, (uint64_t)v18, (uint64_t)a4);
  swift_retain(v22);
  sub_100433F60((uint64_t)v15);
  v23 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 0, 1, v23);
  sub_10046ADD4((uint64_t)v15);
  v24 = sub_100080EAC((uint64_t)v15);
  v25 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v24);
  type metadata accessor for REMAnalyticsManager(0);
  v26 = v25;
  v27 = static REMAnalyticsManager.shared.getter();
  v28 = sub_10002A750(&qword_100645348);
  v29 = &v12[*(int *)(v28 + 48)];
  v30 = &v12[*(int *)(v28 + 80)];
  v31 = enum case for REMRemindersOpenUserOperation.search(_:);
  v32 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v12, v31, v32);
  *(_QWORD *)v29 = TTRUserDefaults.activitySessionId.getter(v33);
  *((_QWORD *)v29 + 1) = v34;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v30 = _typeName(_:qualified:)(v38, 0);
  *((_QWORD *)v30 + 1) = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMAnalyticsEvent.openListUserOperation(_:), v9);
  REMAnalyticsManager.post(event:)(v12);

  swift_release(v27);
  swift_release(v22);
  sub_10001F544(v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v22;
}

void *sub_10028A8A4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *inited;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  id v41;
  id v42;
  _QWORD *v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  void (*v53)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128);
  __n128 v54;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char v59[72];
  _QWORD v60[5];

  v57 = a1;
  v12 = sub_10002A750(&qword_1006531C8);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a7;
  v56 = a5;
  swift_unknownObjectRetain(a2);
  if (a3)
  {
    sub_10028AD88(a3, a4);

    v14 = a4;
  }
  else
  {
    v14 = 0;
    a5 = 0;
  }
  *(_QWORD *)(v13 + 48) = v14;
  *(_QWORD *)(v13 + 56) = a5;
  v15 = sub_10002A750(&qword_1006531D0);
  v16 = sub_10002A750(&qword_1006531D8);
  v17 = sub_10028AD3C();
  v18 = Sequence.removingNils<A>()(v15, v16, v17);
  swift_bridgeObjectRelease(v13);
  v19 = type metadata accessor for TTRIListDetailContainerRouter();
  v20 = swift_allocObject(v19, 24, 7);
  v21 = v20 + 16;
  swift_unknownObjectWeakInit(v20 + 16, 0);
  v60[3] = v19;
  v60[4] = &off_1005EC888;
  v60[0] = v20;
  v22 = type metadata accessor for TTRIListDetailContainerPresenter();
  v23 = (_QWORD *)swift_allocObject(v22, 96, 7);
  v24 = sub_100028D48((uint64_t)v60, v19);
  __chkstk_darwin(v24);
  v26 = (uint64_t *)((char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  v28 = *v26;
  v23[9] = v19;
  v23[10] = &off_1005EC888;
  v23[6] = v28;
  v23[3] = 0;
  swift_unknownObjectWeakInit(v23 + 2, 0);
  v23[5] = 0;
  swift_unknownObjectWeakInit(v23 + 4, 0);
  v23[11] = v18;
  v58 = v20;
  swift_retain(v20);
  swift_bridgeObjectRetain(v18);
  sub_100027F10(v60);
  v29 = sub_10002A750(&qword_1006531E8);
  inited = (_QWORD *)swift_initStackObject(v29, v59);
  *((_OWORD *)inited + 1) = xmmword_100520250;
  v31._countAndFlagsBits = 0xD000000000000013;
  v31._object = (void *)0x8000000100563210;
  v32._countAndFlagsBits = 0x7473694C2077654ELL;
  v32._object = (void *)0xE800000000000000;
  v33._countAndFlagsBits = 0xD00000000000001ELL;
  v33._object = (void *)0x8000000100563230;
  v34 = TTRLocalizedString(_:value:comment:)(v31, v32, v33);
  inited[4] = 7824750;
  inited[5] = 0xE300000000000000;
  *((Swift::String *)inited + 3) = v34;
  v35 = v57;
  inited[8] = v57;
  if (a3)
  {
    sub_10028AD88(a3, a4);
    v36 = v35;
    v37._countAndFlagsBits = 0xD000000000000019;
    v37._object = (void *)0x80000001005712F0;
    v38._countAndFlagsBits = 0x6574616C706D6554;
    v38._object = (void *)0xE900000000000073;
    v39._countAndFlagsBits = 0xD00000000000001ELL;
    v39._object = (void *)0x8000000100563230;
    v40 = TTRLocalizedString(_:value:comment:)(v37, v38, v39);
    v41 = a3;
    inited = sub_1004561F0((_QWORD *)1, 2, 1, inited);
    inited[2] = 2;
    inited[9] = 0x6574616C706D6574;
    inited[10] = 0xE900000000000073;
    *(Swift::String *)(inited + 11) = v40;
    inited[13] = v41;
    swift_unknownObjectRelease(a4);

  }
  else
  {
    v42 = v35;
  }
  v43 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailContainerViewController())
      + OBJC_IVAR____TtC9Reminders37TTRIListDetailContainerViewController_presenter;
  *v43 = v23;
  v43[1] = &off_1006056C0;
  swift_retain(v23);
  v44 = (void *)sub_1002F5724((uint64_t)inited, 0);
  v23[3] = &off_1005F1148;
  swift_unknownObjectWeakAssign(v23 + 2, v44);
  swift_unknownObjectWeakAssign(v21, v44);
  v45 = objc_msgSend(v44, "presentationController", v56);
  if (v45)
  {
    v47 = v45;
    objc_msgSend(v45, "setDelegate:", v44);

  }
  v48 = *(_QWORD *)(v18 + 16);
  if (v48)
  {
    v49 = (uint64_t *)(v18 + 40);
    do
    {
      v50 = *(v49 - 1);
      v51 = *v49;
      ObjectType = swift_getObjectType(v50, v46);
      v53 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128))(v51 + 16);
      swift_retain(v23);
      v54 = swift_unknownObjectRetain(v50);
      v53(v23, &off_1006056A0, ObjectType, v51, v54);
      swift_unknownObjectRelease(v50);
      v49 += 2;
      --v48;
    }
    while (v48);
  }
  swift_release(v58);
  swift_bridgeObjectRelease(v18);
  swift_release(v23);
  return v44;
}

unint64_t sub_10028AD3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006531E0;
  if (!qword_1006531E0)
  {
    v1 = sub_10002CA5C(&qword_1006531D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006531E0);
  }
  return result;
}

void *sub_10028AD88(void *result, uint64_t a2)
{
  id v3;

  if (result)
  {
    v3 = result;
    return (void *)swift_unknownObjectRetain(a2);
  }
  return result;
}

void sub_10028ADB4()
{
  qword_100673758 = 0x4010000000000000;
}

void sub_10028ADC4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "ttr_systemBlueColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(v0, "layer");
  if (qword_10063D5B8 != -1)
    swift_once(&qword_10063D5B8, sub_10028B318);
  objc_msgSend(v3, "setCornerRadius:", *(double *)&qword_1006531F0);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveContinuous);

  v5 = objc_msgSend(v0, "layer");
  objc_msgSend(v5, "setBorderWidth:", 1.0);

  v6 = objc_msgSend(v0, "layer");
  v7 = objc_msgSend(v1, "whiteColor");
  v8 = objc_msgSend(v7, "CGColor");

  objc_msgSend(v6, "setBorderColor:", v8);
  v9 = objc_msgSend(v0, "layer");
  objc_msgSend(v9, "setShadowRadius:", 3.0);

  v10 = objc_msgSend(v0, "layer");
  v11 = objc_msgSend(v1, "blackColor");
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v10, "setShadowColor:", v12);
  v13 = objc_msgSend(v0, "layer");
  LODWORD(v14) = 1050253722;
  objc_msgSend(v13, "setShadowOpacity:", v14);

  v15 = objc_msgSend(v0, "layer");
  objc_msgSend(v15, "setShadowOffset:", 0.0, 1.0);

}

void sub_10028B188(uint64_t a1, uint64_t a2)
{
  char *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double *v7;
  id v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v11, "layoutSubviews");
  objc_msgSend(v2, "bounds");
  v5 = v3;
  v6 = v4;
  v7 = (double *)&v2[OBJC_IVAR____TtC9Reminders47TTRITreeViewMultiRowReorderingDropIndicatorView_shadowPathSize];
  if ((v2[OBJC_IVAR____TtC9Reminders47TTRITreeViewMultiRowReorderingDropIndicatorView_shadowPathSize + 16] & 1) != 0
    || v3 != *v7
    || v4 != v7[1])
  {
    *v7 = v3;
    v7[1] = v4;
    *((_BYTE *)v7 + 16) = 0;
    v8 = objc_msgSend(v2, "layer");
    if (qword_10063D5B8 != -1)
      swift_once(&qword_10063D5B8, sub_10028B318);
    v9 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", 0.0, 0.0, v5, v6, *(double *)&qword_1006531F0);
    v10 = objc_msgSend(v9, "CGPath");

    objc_msgSend(v8, "setShadowPath:", v10);
  }
}

void sub_10028B318()
{
  qword_1006531F0 = 0x4000000000000000;
}

uint64_t type metadata accessor for TTRITreeViewMultiRowReorderingDropIndicatorView()
{
  return objc_opt_self(_TtC9Reminders47TTRITreeViewMultiRowReorderingDropIndicatorView);
}

uint64_t sub_10028B348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  _QWORD v78[3];
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char v82;

  v2 = v1;
  v70 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v3);
  v69 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v5);
  v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665590);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v13 = (uint64_t *)((char *)&v58 - v12);
  v60 = OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation;
  v14 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v15, "displayName");
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v59 = v17;

    type metadata accessor for TTRListColors(0);
    v79 = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
    v80 = &protocol witness table for REMList;
    v78[0] = v15;
    static TTRListColors.color(for:)(&v71, v78);
    v19 = v71;
    v18 = v72;
    v21 = v73;
    v20 = v74;
    v23 = v75;
    v22 = v76;
    v24 = v77;
    sub_1000073A0((uint64_t)v78, &qword_100649C80);
  }
  else
  {
    v25 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource
                    + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1+ OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource), v11);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(ObjectType, v25);
    v29 = v10;
    v30 = v28;
    v32 = v31;
    v67 = v31;
    if (v28)
      v33 = v27;
    else
      v33 = 0;
    v58 = v33;
    v34 = 0xE000000000000000;
    if (v28)
      v34 = v28;
    v59 = v34;
    type metadata accessor for TTRListColors(0);
    swift_bridgeObjectRetain(v30);
    static TTRListColors.color(for:)(&v71, v32);
    v19 = v71;
    v21 = v73;
    v20 = v74;
    v23 = v75;
    v22 = v76;
    v24 = v77;
    v35 = v30;
    v10 = v29;
    v18 = v72;
    swift_bridgeObjectRelease(v35);

  }
  v78[0] = v19;
  v78[1] = v18;
  v78[2] = v21;
  v79 = v20;
  v80 = (void *)v23;
  v81 = v22;
  v62 = v22;
  v82 = v24;
  v36 = *(void **)(v2 + v60);
  v66 = v21;
  v67 = v19;
  if (v36 && (v37 = objc_msgSend(v36, "objectID")) != 0)
  {
    *v13 = v37;
    v38 = type metadata accessor for TTRListType(0);
    swift_storeEnumTagMultiPayload(v13, v38, 0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v13, 0, 1, v38);
  }
  else
  {
    v39 = type metadata accessor for TTRListType(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 1, 1, v39);
  }
  v40 = sub_10000735C((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_100665590);
  v41 = TTRListColors.Color.nativeColor.getter(v40);
  v42 = v2 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount;
  v43 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount + 16);
  v68 = v13;
  v64 = v20;
  v63 = v23;
  v61 = v24;
  v44 = v2;
  v45 = v18;
  v46 = v59;
  v47 = v58;
  v48 = v10;
  if ((v43 & 1) != 0)
    v49 = 0;
  else
    v49 = *(_QWORD *)(v42 + 8);
  v50 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  v51 = v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v65, 1, 1, v50);
  v52 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v53 = v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v69, 1, 1, v52);
  BYTE6(v57) = 1;
  BYTE5(v57) = 0;
  *(_DWORD *)((char *)&v57 + 1) = *(unsigned __int8 *)(v44
                                                     + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_isPreview);
  LOBYTE(v57) = 0;
  v54 = v70;
  TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)(v48, v47, v46, v41, v49, v43, 0, 3, 0, 0, 0, 0, 0, 0, 0, v51, v53, v57);
  sub_10002B328(v67, v45, v66, v64, v63, v62, v61);
  sub_1000073A0((uint64_t)v68, (uint64_t *)&unk_100665590);
  v55 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
}

double sub_10028B7F4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 16843009;
  result = 7.29290211e-304;
  *(_DWORD *)(a1 + 44) = 16777472;
  return result;
}

unint64_t sub_10028B81C()
{
  unsigned __int8 *v0;
  const mach_header_64 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (unsigned __int8 *)TTRReminderCellStyle.publicTemplate.unsafeMutableAddressor();
  v1 = &_mh_execute_header;
  if (!v0[4])
    v1 = 0;
  v2 = 0x1000000;
  if (!v0[3])
    v2 = 0;
  v3 = 0x10000;
  if (!v0[2])
    v3 = 0;
  v4 = 256;
  if (!v0[1])
    v4 = 0;
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_10028B884(uint64_t a1)
{
  id v1;
  char v2;

  v1 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v2 = TTRUserDefaults.showingLargeAttachments(forType:)(8);

  return v2 & 1;
}

void sub_10028B8C0(uint64_t a1)
{
  id v2;

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)(a1, 8);

}

uint64_t sub_10028B90C()
{
  uint64_t v0;
  uint64_t result;

  result = 64;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount) <= 0)
      return 64;
    else
      return 65;
  }
  return result;
}

void sub_10028B934()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource));

}

uint64_t sub_10028B960()
{
  uint64_t v0;

  v0 = sub_10046B320();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10028B9B0()
{
  return type metadata accessor for TTRShowPublicTemplateViewModelSource(0);
}

uint64_t type metadata accessor for TTRShowPublicTemplateViewModelSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100653270;
  if (!qword_100653270)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRShowPublicTemplateViewModelSource);
  return result;
}

uint64_t sub_10028B9F4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = &unk_10052C4D8;
  v2[1] = &unk_10052C4F0;
  v2[2] = &unk_10052C508;
  v2[3] = &unk_10052C520;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 1336);
}

uint64_t sub_10028BA50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  char v29;
  char v30;
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t Strong;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  _QWORD v62[5];

  v4 = v3;
  v57 = a3;
  v60 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.CountByCompleted(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_10063F008);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20.n128_f64[0] = __chkstk_darwin(v19);
  v22 = (char *)&v55 - v21;
  v58 = v8;
  v59 = (uint64_t)a1;
  if (!a1)
  {
    v30 = 0;
    goto LABEL_14;
  }
  v56 = v11;
  v23 = objc_msgSend(a1, "objectID");
  v24 = OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation;
  v25 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation);
  if (!v25)
  {
    if (v23)
      goto LABEL_8;
LABEL_12:
    v30 = 0;
    goto LABEL_13;
  }
  v26 = objc_msgSend(v25, "objectID");
  v27 = v26;
  if (!v23)
  {
    if (v26)
    {

      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (!v26)
  {
LABEL_8:

LABEL_11:
    v30 = 1;
    goto LABEL_13;
  }
  v55 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v28 = v23;
  v29 = static NSObject.== infix(_:_:)(v28, v27);

  v30 = v29 ^ 1;
LABEL_13:
  v31 = *(void **)(v4 + v24);
  *(_QWORD *)(v4 + v24) = v59;

  v11 = v56;
LABEL_14:
  REMRemindersListDataView.SectionsModel.remindersCount.getter(v20);
  sub_10000735C((uint64_t)v22, (uint64_t)v18, &qword_10063F008);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  if (v32 == 1)
  {
    v33 = 0;
    v34 = 0;
  }
  else
  {
    v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    v33 = REMRemindersListDataView.CountByCompleted.completed.getter(v35);
    v34 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v36 = v57;
  sub_1000073A0((uint64_t)v22, &qword_10063F008);
  v37 = v4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount;
  *(_QWORD *)v37 = v33;
  *(_QWORD *)(v37 + 8) = v34;
  *(_BYTE *)(v37 + 16) = v32 == 1;
  v38 = sub_10028B348((uint64_t)v11);
  v39 = v60;
  v40 = REMRemindersListDataView.SectionsModel.sections.getter(v38);
  __chkstk_darwin(v40);
  *(&v55 - 2) = v59;
  *(&v55 - 1) = v39;
  v42 = sub_1000ADFE4(v41, (void (*)(_QWORD, char *))sub_10028C31C, (uint64_t)(&v55 - 4));
  swift_bridgeObjectRelease(v40);
  v43 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v44 = swift_allocObject(v43, 16, 7);
  v45 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v46 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v58, 1, 1, v45);
  v62[3] = v43;
  v62[4] = &off_100604210;
  v62[0] = v44;
  sub_100010634((uint64_t)v62, (uint64_t)v61);
  v47 = swift_allocObject(&unk_1005FCA70, 72, 7);
  *(_QWORD *)(v47 + 16) = v42;
  sub_10002E37C(v61, v47 + 24);
  *(_QWORD *)(v47 + 64) = v4;
  swift_retain();
  swift_bridgeObjectRetain(v42);
  swift_retain();
  sub_10047C8F8(1, (uint64_t)v11, (uint64_t (*)(uint64_t))sub_10003E360, v47, v36, 0, v46);
  swift_release();
  sub_100027F10(v62);
  swift_bridgeObjectRelease(v42);
  sub_1000073A0(v46, (uint64_t *)&unk_100640EB0);
  swift_release();
  if ((v30 & 1) != 0)
  {
    v48 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v48);
    if (Strong)
    {
      v51 = Strong;
      v52 = *(_QWORD *)(v48 + 8);
      ObjectType = swift_getObjectType(Strong, v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 88))(1, ObjectType, v52);
      swift_unknownObjectRelease(v51);
    }
  }
  return sub_1000073A0((uint64_t)v11, &qword_100649CA0);
}

uint64_t sub_10028BEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BOOL8 v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  void *v50;
  _OWORD v51[4];
  int v52;
  char v53;
  __int16 v54;
  char v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  _OWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BYTE v66[144];

  v42 = a4;
  *(_QWORD *)&v43 = a1;
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v15);
  v44 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - v18;
  v45 = a2;
  REMRemindersListDataView.SectionLite.type.getter(v20);
  v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v14, v11);
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    v42 = a5;
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v14, v11);
    v23 = *v14;
    v22 = v14[1];
    v40 = v14[2];
    v41 = v22;
    swift_bridgeObjectRelease(v14[4]);
    if ((_QWORD)v43)
      v24 = 3;
    else
      v24 = 2;
    if (a3)
    {
      *((_QWORD *)&v49 + 1) = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
      v50 = &protocol witness table for REMList;
      *(_QWORD *)&v48 = a3;
    }
    else
    {
      v50 = 0;
      v48 = 0u;
      v49 = 0u;
    }
    type metadata accessor for TTRListColors(0);
    v31 = a3;
    static TTRListColors.color(for:)(v62, &v48);
    v43 = v62[0];
    v39 = v62[1];
    v32 = v63;
    v33 = v64;
    v34 = v65;
    sub_1000073A0((uint64_t)&v48, &qword_100649C80);
    *v10 = v23;
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    *(_QWORD *)&v51[0] = v41;
    *((_QWORD *)&v51[0] + 1) = v40;
    memset(&v51[1], 0, 48);
    v52 = 192;
    v53 = v24;
    v54 = v46;
    v55 = v47;
    v56 = v43;
    v57 = v39;
    v58 = v32;
    v59 = v33;
    v60 = v34;
    v61 = 0;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v51);
    sub_10003E0EC((uint64_t)v51, (uint64_t)v66);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v10, v66, 1, 0, 0, 0, 0, 0);
    a5 = v42;
LABEL_15:
    v35 = v44;
    v36 = sub_10028C358((uint64_t)v19, v44);
    v37 = REMRemindersListDataView.SectionLite.reminders.getter(v36);
    sub_10028C39C((uint64_t)v19);
    sub_10028C3D8(v35, a5);
    result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(_QWORD *)(a5 + *(int *)(result + 20)) = v37;
    *(_BYTE *)(a5 + *(int *)(result + 24)) = 0;
    return result;
  }
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    if (a3 && (v25 = objc_msgSend(a3, "objectID")) != 0)
    {
      *v10 = v25;
      swift_storeEnumTagMultiPayload(v10, v8, 8);
      sub_1000D2B94(v51);
      v26 = sub_10003E0EC((uint64_t)v51, (uint64_t)v66);
      v27 = REMRemindersListDataView.SectionsModel.sections.getter(v26);
      v28 = *(_QWORD *)(v27 + 16);
      swift_bridgeObjectRelease(v27);
      v29 = v28 > 1;
      v30 = v10;
    }
    else
    {
      *(_BYTE *)v10 = 2;
      swift_storeEnumTagMultiPayload(v10, v8, 0);
      sub_1000D2B94(v51);
      sub_10003E0EC((uint64_t)v51, (uint64_t)v66);
      v30 = v10;
      v29 = 0;
    }
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)(v30, v66, v29, 0, 0, 0, 0, 0);
    goto LABEL_15;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
  __break(1u);
  return result;
}

uint64_t sub_10028C2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(result, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 136))(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10028C31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10028BEE0(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_10028C324()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100027F10((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10028C358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028C39C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10028C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028C41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100653800);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100653800);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10028C4E8()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 1.0, 8.0);
  objc_msgSend(v1, "setTableHeaderView:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView] = v1;
  v4 = v1;

  objc_msgSend(v0, "setView:", v4);
}

void sub_10028C5EC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSString v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int16 v50;
  __int128 v51;
  __int128 v52;
  void *v53;
  id v54;
  _QWORD v55[4];
  char v57[24];
  char v58[48];
  objc_super v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int16 v68;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v59.receiver = v2;
  v59.super_class = ObjectType;
  objc_msgSendSuper2(&v59, "viewDidLoad");
  v5 = objc_msgSend(v2, "navigationItem");
  v6._countAndFlagsBits = 0xD000000000000016;
  v7._object = (void *)0x80000001005678D0;
  v6._object = (void *)0x80000001005714D0;
  v7._countAndFlagsBits = 0xD000000000000010;
  object = TTRLocalizedString(_:comment:)(v7, v6)._object;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:", v9, swift_bridgeObjectRelease(object).n128_f64[0]);

  v10 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v3, "didTapCancel:");
  v11 = objc_msgSend(v3, "navigationItem");
  objc_msgSend(v11, "setLeftBarButtonItem:", v10);

  static TTRLocalizableStrings.Common.saveButton.getter();
  v13 = v12;
  *((_QWORD *)&v61 + 1) = ObjectType;
  *(_QWORD *)&v60 = v3;
  v14 = v3;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v16 = *((_QWORD *)&v61 + 1);
  if (*((_QWORD *)&v61 + 1))
  {
    v17 = sub_10001413C(&v60, *((uint64_t *)&v61 + 1));
    v18 = *(_QWORD *)(v16 - 8);
    v19 = __chkstk_darwin(v17);
    v21 = &v57[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(char *, double))(v18 + 16))(v21, v19);
    v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    sub_100027F10(&v60);
  }
  else
  {
    v22 = 0;
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v15, 2, v22, "didTapCommit:");

  swift_unknownObjectRelease(v22);
  v24 = objc_msgSend(v14, "navigationItem");
  objc_msgSend(v24, "setRightBarButtonItem:", v23);

  v25 = *(void **)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton] = v10;
  v26 = v10;

  v27 = *(void **)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] = v23;
  v28 = v23;

  v29 = sub_10002A750((uint64_t *)&unk_1006415A0);
  inited = swift_initStackObject(v29, v58);
  *(_OWORD *)(inited + 16) = xmmword_10051FF90;
  *(_QWORD *)(inited + 32) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeSection, (uint64_t (*)(uint64_t))sub_10028D6F8);
  v31 = sub_10028CAA0();
  *(_QWORD *)(inited + 40) = v31;
  *(_QWORD *)&v60 = inited;
  specialized Array._endMutation()(v31);
  v32 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView;
  v33 = *(void **)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  if (!v33)
  {
    __break(1u);
    goto LABEL_12;
  }
  v34 = v60;
  v35 = v33;
  v36 = sub_1002DEA58(v34);
  swift_bridgeObjectRelease(v34);
  *((_QWORD *)&v61 + 1) = sub_10021D3BC();
  *(_QWORD *)&v62 = &protocol witness table for UITableView;
  *(_QWORD *)&v60 = v35;
  v37 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController(0));
  v38 = (char *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)(&v60, v36, 6, 0);
  v39 = &v38[direct field offset for TTRITableDataController.customSectionSpacing];
  swift_beginAccess(&v38[direct field offset for TTRITableDataController.customSectionSpacing], v57, 1, 0);
  *(_QWORD *)v39 = 0x4030000000000000;
  v39[8] = 0;
  v40 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController;
  v41 = *(void **)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController] = v38;
  v42 = v38;

  v43 = *(void **)&v14[v32];
  if (!v43)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v43, "setDataSource:", v42);
  v44 = *(void **)&v14[v32];
  if (!v44)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v45 = objc_msgSend(v44, "setDelegate:", v42);
  v46 = *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter];
  v47 = *(_OWORD *)(v46 + 112);
  v48 = *(_OWORD *)(v46 + 64);
  v49 = *(_OWORD *)(v46 + 80);
  v63 = *(_OWORD *)(v46 + 96);
  v64 = v47;
  v61 = v48;
  v62 = v49;
  v50 = *(_WORD *)(v46 + 176);
  v51 = *(_OWORD *)(v46 + 160);
  v66 = *(_OWORD *)(v46 + 144);
  v67 = v51;
  v52 = *(_OWORD *)(v46 + 128);
  v68 = v50;
  v65 = v52;
  v60 = *(_OWORD *)(v46 + 48);
  v53 = *(void **)&v14[v40];
  if (v53)
  {
    __chkstk_darwin(v45);
    v55[2] = v14;
    v55[3] = &v60;
    sub_10028DDF8((uint64_t)&v60);
    v54 = v53;
    TTRITableDataController.performBatchUpdates(by:updates:)(2, sub_10028E2E4, v55);

    sub_1001E6758((uint64_t)&v60);
  }
  else
  {

  }
}

uint64_t sub_10028CAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection);
  }
  else
  {
    v3 = v0;
    memset(v9, 0, 73);
    memset(v8, 0, 73);
    v4 = sub_10002A750(&qword_10064AAE0);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100520250;
    *(_QWORD *)(v5 + 32) = sub_10028D498();
    *(_QWORD *)(v5 + 40) = &protocol witness table for TTRITableCell<A>;
    v6 = type metadata accessor for TTRITableSection(0);
    swift_allocObject(v6, 217, 7);
    v2 = TTRITableSection.init(header:footer:items:)(v9, v8, v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_10028CBB8(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id result;
  void *v7;
  id v8;
  _QWORD v9[5];
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v5 = a1 & 1;
  result = objc_msgSendSuper2(&v10, "viewWillAppear:", v5);
  v7 = *(void **)&v2[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  if (v7)
  {
    v9[3] = sub_10021D3BC();
    v9[4] = &protocol witness table for UITableView;
    v9[0] = v7;
    v8 = v7;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)(v9, v5);
    sub_100027F10(v9);
    TTRKeyboardAvoidance<>.startAvoidingKeyboard()(ObjectType, &off_1005FCAF0);
    return objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton], "setEnabled:", *(unsigned __int8 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter]+ 48));
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10028CDF0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "viewWillLayoutSubviews");
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize) == 1)
  {
    *((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize) = 0;
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1005FCB88, 24, 7);
    *(_QWORD *)(v4 + 16) = v2;
    v5 = swift_allocObject(&unk_1005FCBB0, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_10028E15C;
    *(_QWORD *)(v5 + 24) = v4;
    v9[4] = sub_10001B278;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10001B258;
    v9[3] = &unk_1005FCBC8;
    v6 = _Block_copy(v9);
    v7 = v2;
    swift_retain();
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release().n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 131, 156, 40, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

double sub_10028CF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  __int128 v19;
  char v20;
  void *v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  double result;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  id v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[24];
  _BYTE v71[32];
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  __int128 v78;
  char v79;
  _BYTE v80[16];
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _OWORD v85[2];
  _BYTE v86[56];
  _BYTE v87[24];
  _QWORD v88[2];
  char v89;
  uint64_t v90;
  char v91;

  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - v9;
  v11 = *(id *)(sub_10028D424() + 32);
  swift_release();
  v12 = *(_OWORD *)(a2 + 72);
  v83 = *(_OWORD *)(a2 + 56);
  v84 = v12;
  v85[0] = *(_OWORD *)(a2 + 88);
  *(_OWORD *)((char *)v85 + 10) = *(_OWORD *)(a2 + 98);
  v13 = *(_OWORD *)(a2 + 40);
  v81 = *(_OWORD *)(a2 + 24);
  v82 = v13;
  sub_10021D150((uint64_t)v85 + 8, (uint64_t)v87);
  sub_10021D150((uint64_t)v87, (uint64_t)v88);
  v59 = v5;
  v60 = v4;
  v57 = v7;
  v58 = v10;
  v64 = v11;
  *(_QWORD *)&v65 = a1;
  if ((v89 & 1) != 0)
  {
    v14 = v88[1];
    v61 = v88[0];
    sub_10021D18C((uint64_t)&v81);
    sub_10021D228((uint64_t)v87);
    v15 = 0;
  }
  else
  {
    v16 = v88[0];
    sub_10021D18C((uint64_t)&v81);
    sub_10021D228((uint64_t)v87);
    v15 = REMListBadgeEmblem.image.getter(v16);
    sub_10021D2F4((uint64_t)v87);
    v61 = 0;
    v14 = 0;
  }
  sub_1000AE578((uint64_t)&v82, (uint64_t)v86);
  v62 = v83;
  v63 = v82;
  v17 = v84;
  v18 = v85[0];
  v19 = v81;
  v20 = BYTE9(v85[1]);
  sub_10028DEA4((uint64_t)v86);
  swift_bridgeObjectRetain(*((_QWORD *)&v19 + 1));
  sub_10021D258((uint64_t)&v81);
  v68 = v15;
  v69 = v61;
  *(_QWORD *)v70 = v14;
  *(_OWORD *)&v70[8] = v63;
  *(_OWORD *)v71 = v62;
  *(_OWORD *)&v71[16] = v17;
  v72 = v18;
  v78 = v19;
  v79 = v20;
  v21 = v64;
  TTRITableCellContent.state.setter(&v68);

  v22 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, sub_10028D7C0)+ 32);
  swift_release();
  TTRITextCellContent.setTextIfNotEditing(_:)(*(Swift::String *)(a2 + 8));

  v23 = *(id *)(sub_1001C0D80(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, sub_10028D7C0)+ 32);
  swift_release();
  v25 = TTRListColors.Color.nativeColor.getter(v24);
  v26 = (char *)v23 + *(_QWORD *)((swift_isaMask & *v23) + 0x78);
  swift_beginAccess(v26, &v67, 0, 0);
  v27 = *(void **)v26;
  v28 = *((_QWORD *)v26 + 1);
  v29 = v26[16];
  v30 = v26[17];
  v31 = *((_QWORD *)v26 + 3);
  v32 = *((_QWORD *)v26 + 4);
  v68 = (uint64_t)v27;
  v69 = v28;
  v70[0] = v29;
  v70[1] = v30;
  *(_QWORD *)&v70[8] = v31;
  *(_QWORD *)&v70[16] = v32;
  *(_QWORD *)v71 = v25;
  sub_10021D138(v27, v28, v29);
  swift_bridgeObjectRetain(v32);
  TTRITableCellContent.state.setter(&v68);

  sub_10000F614(a2 + 120, (uint64_t)v80, (uint64_t *)&unk_10064ACD0);
  sub_10000F614((uint64_t)v80, (uint64_t)&v90, (uint64_t *)&unk_10064ACD0);
  if ((v91 & 1) != 0 || (v33 = v90, v90 < 1))
  {
    sub_10028CAA0();
    TTRITableSection.isHidden.setter(1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    sub_10028CAA0();
    TTRITableSection.isHidden.setter(0);
    v34 = swift_release();
    v35 = v58;
    static UIListContentConfiguration.groupedFooter()(v34);
    v36 = static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)(v33);
    UIListContentConfiguration.attributedText.setter(v36);
    sub_10028CAA0();
    v38 = v59;
    v37 = v60;
    v39 = v57;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v35, v60);
    TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)(&v68, v39, 0, 1);
    TTRITableSection.footer.setter(&v68);
    swift_release();
    v40 = *(id *)(sub_10028D498() + 32);
    swift_release();
    v41 = *(_BYTE *)(a2 + 129);
    v42 = (char *)v40 + *(_QWORD *)((swift_isaMask & *v40) + 0x78);
    swift_beginAccess(v42, &v66, 0, 0);
    v43 = *(void **)v42;
    v44 = (void *)*((_QWORD *)v42 + 1);
    v46 = *((_QWORD *)v42 + 4);
    v45 = *((_QWORD *)v42 + 5);
    v47 = *((_QWORD *)v42 + 8);
    v48 = v42[73];
    v49 = v42[74];
    v50 = v42[75];
    v51 = v42[76];
    v52 = v42[77];
    v53 = *((_OWORD *)v42 + 1);
    v65 = *((_OWORD *)v42 + 3);
    v68 = (uint64_t)v43;
    v69 = (uint64_t)v44;
    *(_OWORD *)v70 = v53;
    *(_QWORD *)&v70[16] = v46;
    *(_QWORD *)v71 = v45;
    *(_OWORD *)&v71[8] = v65;
    *(_QWORD *)&v71[24] = v47;
    v72 = v41;
    v73 = v48;
    v74 = v49;
    v75 = v50;
    v76 = v51;
    v77 = v52;
    sub_1000DDA1C(v43, v44, (void *)v53);
    v54 = v65;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v54);
    TTRITableCellContent.state.setter(&v68);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
  }
  return result;
}

uint64_t sub_10028D424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell);
  }
  else
  {
    v2 = sub_10021B160();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10028D484()
{
  return sub_1001C0D80(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, sub_10028D7C0);
}

uint64_t sub_10028D498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  _QWORD v16[10];

  v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell);
  }
  else
  {
    v3 = v0;
    v4 = static TTRLocalizableStrings.Templates.includeCompletedReminders.getter();
    WORD2(v14) = 0;
    LODWORD(v14) = 0;
    TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)(v16, 1, 0, 0, v4, v5, 0, 0, 0, 0, v14);
    v6 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent(0));
    v7 = TTRIToggleCellContent.init(state:)(v16);
    v8 = swift_allocObject(&unk_1005FCB60, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v3);
    v9 = (uint64_t *)(v7 + direct field offset for TTRIToggleCellContent.stateChangeBlock);
    swift_beginAccess(v7 + direct field offset for TTRIToggleCellContent.stateChangeBlock, v15, 1, 0);
    v10 = *v9;
    v11 = v9[1];
    *v9 = (uint64_t)sub_10028DF00;
    v9[1] = v8;
    sub_1000381B8(v10, v11);
    v12 = sub_10002A750((uint64_t *)&unk_10064BD30);
    swift_allocObject(v12, 73, 7);
    v2 = TTRITableCell.init(_:)(v7);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10028D6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[10];
  _OWORD v6[5];

  memset(v6, 0, 73);
  v0 = static TTRLocalizableStrings.Templates.savingDescription.getter();
  TTRITableSectionHeaderFooter.init(title:height:)(v5, v0);
  v1 = sub_10002A750(&qword_10064AAE0);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v2 + 32) = sub_10028D424();
  *(_QWORD *)(v2 + 40) = &protocol witness table for TTRITableCell<A>;
  *(_QWORD *)(v2 + 48) = sub_1001C0D80(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, sub_10028D7C0);
  *(_QWORD *)(v2 + 56) = &protocol witness table for TTRITableCell<A>;
  v3 = type metadata accessor for TTRITableSection(0);
  swift_allocObject(v3, 217, 7);
  return TTRITableSection.init(header:footer:items:)(v6, v5, v2);
}

uint64_t sub_10028D7C0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[24];
  _QWORD v21[6];

  v2 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  v3 = static TTRLocalizableStrings.Templates.namePlaceholderText.getter();
  v5 = TTRITextCellContentState.init(attributedText:placeholder:)(v21, v2, v3, v4);
  v6 = *(_QWORD *)TTRITextCellContentStateChangeEvent.editingChanged.unsafeMutableAddressor(v5);
  v7 = objc_allocWithZone((Class)sub_10002A750(&qword_10064D8F8));
  v8 = TTRITextCellContent.init(textAutocapitalizationType:keyboardType:state:stateChangeEvent:)(2, 0, v21, v6);
  v9 = swift_allocObject(&unk_1005FCB60, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v10 = (uint64_t *)(v8 + direct field offset for TTRITextCellContent.stateChangeBlock);
  swift_beginAccess(v8 + direct field offset for TTRITextCellContent.stateChangeBlock, v20, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = (uint64_t)sub_10028DF08;
  v10[1] = v9;
  sub_1000381B8(v11, v12);
  v13 = swift_allocObject(&unk_1005FCB60, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  v14 = (uint64_t *)(v8 + direct field offset for TTRITextCellContent.didEndEditingBlock);
  swift_beginAccess(v8 + direct field offset for TTRITextCellContent.didEndEditingBlock, &v19, 1, 0);
  v15 = *v14;
  v16 = v14[1];
  *v14 = (uint64_t)sub_10028DF10;
  v14[1] = v13;
  sub_1000381B8(v15, v16);
  v17 = sub_10002A750(&qword_1006538A0);
  swift_allocObject(v17, 73, 7);
  return TTRITableCell.init(_:)(v8);
}

uint64_t sub_10028D948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter);
    swift_unknownObjectRetain(v5);

    v6._object = (void *)0x80000001005682D0;
    v6._countAndFlagsBits = 0xD000000000000019;
    TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10028D9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter);
    swift_unknownObjectRetain(v5);

    v7 = TTRITextCellContentState.text.getter(v6);
    v9 = v8;
    sub_10023AD28(v7, v8);
    swift_bridgeObjectRelease(v9);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10028DA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  char v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter);
    v7 = *(_BYTE *)(a1 + 72);
    swift_unknownObjectRetain(v6);
    sub_10023AF3C(v7);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t type metadata accessor for TTRITemplateSavingViewController()
{
  return objc_opt_self(_TtC9Reminders32TTRITemplateSavingViewController);
}

id sub_10028DBFC()
{
  char *v0;
  id result;
  uint64_t v2;
  unsigned __int8 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  result = objc_msgSend(v0, "isViewLoaded");
  if ((_DWORD)result)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter];
    v3 = (unsigned __int8 *)(v2 + 48);
    v4 = *(_OWORD *)(v2 + 64);
    v5 = *(_OWORD *)(v2 + 112);
    v6 = *(_OWORD *)(v2 + 128);
    LOWORD(v20) = *(_WORD *)(v2 + 176);
    v16 = v5;
    v17 = v6;
    v7 = *(_OWORD *)(v2 + 160);
    v18 = *(_OWORD *)(v2 + 144);
    v19 = v7;
    v8 = *(_OWORD *)(v2 + 96);
    v14 = *(_OWORD *)(v2 + 80);
    v15 = v8;
    v12 = *(_OWORD *)(v2 + 48);
    v13 = v4;
    v9 = *(void **)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController];
    if (v9)
    {
      __chkstk_darwin(result);
      v11[2] = v0;
      v11[3] = &v12;
      sub_10028DDF8((uint64_t)&v12);
      v10 = v9;
      TTRITableDataController.performBatchUpdates(by:updates:)(1, sub_10028DDF0, v11);

      sub_1001E6758((uint64_t)&v12);
    }
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton], "setEnabled:", *v3, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  }
  return result;
}

id sub_10028DD0C()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView);
  if (result)
    return result;
  __break(1u);
  return result;
}

double sub_10028DDF0()
{
  uint64_t v0;

  return sub_10028CF8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10028DDF8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v12;
  id v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(void **)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_BYTE *)(a1 + 88);
  v10 = *(void **)(a1 + 96);
  v13 = *(id *)(a1 + 104);
  v12 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRetain(v2);
  sub_10002B764(v3, v4, v5, v6, v7, v8, v9);
  sub_10002B7A0(v10, v13, v12);
  return a1;
}

uint64_t sub_10028DEA4(uint64_t a1)
{
  sub_10002B764(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_10028DEDC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028DF00(uint64_t a1)
{
  uint64_t v1;

  return sub_10028DA64(a1, v1);
}

uint64_t sub_10028DF08(uint64_t a1)
{
  uint64_t v1;

  return sub_10028D948(a1, v1);
}

uint64_t sub_10028DF10(uint64_t a1)
{
  uint64_t v1;

  return sub_10028D9D8(a1, v1);
}

void sub_10028DF18(uint64_t a1@<X8>)
{
  _QWORD *v2;
  id *v3;
  char *v4;
  _QWORD *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double top;
  double left;
  double bottom;
  double right;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _BYTE v31[24];
  _QWORD v32[5];
  _BYTE v33[40];

  v2 = *(id *)(sub_10028D424() + 32);
  swift_release();
  v3 = (id *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x68));
  swift_beginAccess(v3, v31, 0, 0);
  if (!*v3)
  {

    v6 = 0;
LABEL_7:
    v14 = 0.0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    top = 0.0;
    left = 0.0;
    bottom = 0.0;
    right = 0.0;
    goto LABEL_10;
  }
  v4 = (char *)*v3;

  v5 = *(id *)&v4[OBJC_IVAR____TtC9Reminders32TTRIListDetailBadgeCellTableCell_badgeView];
  v6 = objc_msgSend(v5, "superview");
  if (!v6)
  {

    goto LABEL_7;
  }
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v5) + 0x1F8))(v32);
  v8 = *(double *)v32;
  v7 = *(double *)&v32[1];
  v9 = *(double *)&v32[2];
  sub_10000F614((uint64_t)v32, (uint64_t)v33, &qword_1006538A8);
  if ((v33[32] & 1) != 0)
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  else
  {
    v18 = v9 + 4.0;
    top = v9 + 4.0 - v7;
    left = v18 - v8;
    bottom = v7 + v18;
    right = v8 + v18;
  }
  v19 = UIEdgeInsetsSubtract(15);
  v29 = v20;
  v30 = v19;
  objc_msgSend(v5, "frame");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v14 = sub_100038048(v22, v24, v26, v28, v30, v29);
LABEL_10:
  *(_QWORD *)a1 = v6;
  *(double *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v16;
  *(_QWORD *)(a1 + 32) = v17;
  *(double *)(a1 + 40) = top;
  *(double *)(a1 + 48) = left;
  *(double *)(a1 + 56) = bottom;
  *(double *)(a1 + 64) = right;
}

uint64_t sub_10028E138()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10028E15C()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView);
  if (result)
    return objc_msgSend(result, "performBatchUpdates:completion:", 0, 0);
  __break(1u);
  return result;
}

uint64_t sub_10028E188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10028E198()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController] = 0;
  v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell] = 0;

  if (qword_10063D5C0 != -1)
    swift_once(&qword_10063D5C0, sub_10028C41C);
  v5 = sub_100012DC4(v1, (uint64_t)qword_100653800);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"init(coder:) has not been implemented", 37, 2uLL, v6, v7);
  __break(1u);
}

uint64_t sub_10028E2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006538B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006538B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10028E39C(uint64_t a1)
{
  char *v1;
  char *v3;
  int8x16_t v4;
  id result;
  void *v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  char v10;
  char v11;
  _BYTE v12[8];
  uint64_t v13;

  v3 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates], v12, 33, 0);
  sub_10029A190(a1, (uint64_t)v3);
  swift_endAccess(v12);
  sub_10029A0D0(v3, (uint64_t)v12);
  if ((v12[0] & 1) == 0)
  {
    sub_10029A1CC((uint64_t)&v13, (uint64_t)&v7);
    if (v11 == 3 && !v10)
    {
      v4 = vorrq_s8(v8, v9);
      if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v7))
      {
        sub_10029A208(&v7);
        sub_10029A23C((uint64_t)v12);
        return (id)sub_10029A23C(a1);
      }
    }
    sub_10029A208(&v7);
  }
  sub_10029A23C((uint64_t)v12);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "setNeedsLayout");

    return (id)sub_10029A23C(a1);
  }
  __break(1u);
  return result;
}

void sub_10028E4B4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  Class isa;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t Strong;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  id v81;
  uint64_t v82;
  objc_super v83;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v5);
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100653AC0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83.receiver = v2;
  v83.super_class = ObjectType;
  objc_msgSendSuper2(&v83, "viewDidLoad", v9);
  sub_10028EC18();
  v12 = objc_msgSend(v2, "view");
  if (!v12)
  {
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  v14 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  v15 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController], "view");
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = v15;
  objc_msgSend(v13, "addSubview:", v15);

  objc_msgSend(*(id *)&v3[v14], "didMoveToParentViewController:", v3);
  v17 = sub_10028EF28();
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v18 = objc_msgSend(v3, "view");
  if (!v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = v18;
  v78 = v11;
  v79 = v8;
  v20 = sub_10028EF28();
  objc_msgSend(v19, "addSubview:", v20);

  v21 = sub_10028EF28();
  v22 = objc_msgSend(v21, "bottomAnchor");

  v23 = objc_msgSend(v3, "view");
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "safeAreaLayoutGuide");

  v26 = objc_msgSend(v25, "bottomAnchor");
  v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);

  v28 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v29 = swift_allocObject(v28, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100521130;
  v30 = sub_10028EF28();
  v31 = objc_msgSend(v30, "leadingAnchor");

  v32 = objc_msgSend(v3, "view");
  if (!v32)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v33 = v32;
  v76 = v7;
  v77 = ObjectType;
  v34 = objc_msgSend(v32, "leadingAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v29 + 32) = v35;
  v36 = sub_10028EF28();
  v37 = objc_msgSend(v36, "trailingAnchor");

  v38 = objc_msgSend(v3, "view");
  if (!v38)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v39 = v38;
  v40 = (void *)objc_opt_self(NSLayoutConstraint);
  v41 = objc_msgSend(v39, "trailingAnchor");

  v42 = objc_msgSend(v37, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(v29 + 40) = v42;
  *(_QWORD *)(v29 + 48) = v27;
  v82 = v29;
  specialized Array._endMutation()(v43);
  v44 = v82;
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  v45 = v27;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v47 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = v45;
  v48 = v45;

  v49 = sub_10028EF28();
  v50 = type metadata accessor for TTRIRemindersListToolbarController();
  v51 = swift_allocObject(v50, 96, 7);
  *(_QWORD *)(v51 + 24) = 0;
  swift_unknownObjectWeakInit(v51 + 16, 0);
  *(_QWORD *)(v51 + 40) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v51 + 48) = 0;
  *(_WORD *)(v51 + 56) = -258;
  *(_OWORD *)(v51 + 64) = 0u;
  *(_OWORD *)(v51 + 80) = 0u;
  *(_QWORD *)(v51 + 24) = &off_1005FCE10;
  *(_QWORD *)(v51 + 32) = v49;
  swift_unknownObjectWeakAssign(v52, v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = v51;
  swift_retain();
  swift_release();
  v53 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  v55 = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v54);
  v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 416))(v55, v53);
  v57 = objc_msgSend(v3, "navigationItem");
  Strong = swift_unknownObjectWeakLoadStrong(v56 + 16);
  if (Strong)
  {
    v59 = Strong;
    sub_100084618(v57, v3);
    swift_unknownObjectRelease(v56);

    swift_unknownObjectRelease(v59);
  }
  else
  {
    swift_unknownObjectRelease(v56);

  }
  v60 = (uint64_t)v80;
  v61 = objc_msgSend(v3, "navigationItem");
  objc_msgSend(v61, "setLargeTitleDisplayMode:", 1);

  objc_msgSend(v3, "setExtendedLayoutIncludesOpaqueBars:", 1);
  v62 = type metadata accessor for TTRICurrentTextInputModeObserver(0);
  swift_allocObject(v62, 40, 7);
  v63 = TTRICurrentTextInputModeObserver.init()();
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = v63;
  swift_retain();
  swift_release();
  v82 = *(_QWORD *)(v63 + 16);
  v64 = (void *)objc_opt_self(NSRunLoop);
  swift_retain();
  v81 = objc_msgSend(v64, "mainRunLoop");
  v65 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v60, 1, 1, v65);
  v66 = sub_10002A750((uint64_t *)&unk_100653AD0);
  v67 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v68 = sub_100023FEC((unint64_t *)&unk_100653AE0, (uint64_t *)&unk_100653AD0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v69 = sub_1000A2B9C();
  v70 = v78;
  Publisher.receive<A>(on:options:)(&v81, v60, v66, v67, v68, v69);
  sub_1000073A0(v60, &qword_1006547E0);

  swift_release();
  v71 = sub_100023FEC((unint64_t *)&unk_100653AF0, (uint64_t *)&unk_100653AC0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v72 = v76;
  v73 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v3, sub_10028EFA8, 0, 0, 0, v76, v77, v71);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v70, v72);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = v73;
  swift_release();
  sub_10028EFE4();
  sub_10028F4A0();
  sub_10028F950();
  sub_10028FAB0();
  sub_10028FC14();
  sub_100290008(1, v74);

  swift_release();
  swift_release();
}

void sub_10028EC18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(_QWORD *, uint64_t, uint64_t);
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t, uint64_t);
  id v36;
  _BYTE v37[24];
  _QWORD v38[4];
  char v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  __chkstk_darwin(v2);
  v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  objc_msgSend(v5, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v16 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  ObjectType = swift_getObjectType(v16, v18);
  *(double *)v38 = v8;
  *(double *)&v38[1] = v10;
  *(double *)&v38[2] = v12;
  *(double *)&v38[3] = v14;
  v39 = 0;
  v20 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 16);
  v21 = v16;
  v20(v38, ObjectType, v17);

  objc_msgSend(v1, "addChildViewController:", *(_QWORD *)v15);
  v22 = objc_msgSend(*(id *)v15, "view");
  if (!v22)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v23 = v22;
  objc_msgSend(v22, "frame");
  v41.origin.x = v8;
  v41.origin.y = v10;
  v41.size.width = v12;
  v41.size.height = v14;
  if (!CGRectEqualToRect(v40, v41))
  {
    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100012DC4(v24, (uint64_t)qword_1006538B0);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.fault.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "TTRIShowRemindersViewController: contentView is not sized to initialFrameForLoadingView; may have perf/correctness issues.",
        v28,
        2u);
      swift_slowDealloc(v28, -1, -1);
    }

    objc_msgSend(v23, "setFrame:", v8, v10, v12, v14);
  }
  objc_msgSend(v23, "setAutoresizingMask:", 18);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v29 = *(id *)v15;
  objc_msgSend(v29, "setEditing:animated:", objc_msgSend(v1, "isEditing"), 0);

  sub_100296B38();
  v30 = *(id *)v15;
  v31 = *((_QWORD *)v15 + 1);
  v33 = swift_getObjectType(*(_QWORD *)v15, v32);
  v34 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
  swift_beginAccess(v34, v37, 0, 0);
  sub_10002B1E8(v34, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v35 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v31 + 128);
  v36 = v30;
  v35(v4, v33, v31);

  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

id sub_10028EF28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIToolbar), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10028EFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 272))(ObjectType, v2);
}

void sub_10028EFE4()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  NSString *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  id v23;
  NSString *v24;
  unint64_t v25;
  Class v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class v33;
  id v34;
  uint64_t v35;
  Class v36;
  id v37;
  id v38;
  unsigned __int8 v39;
  id v40;
  void *v41;
  char v42[112];
  char v43[72];
  char v44[32];

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v2 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v44, 0, 0);
    v3 = *(void **)&v2[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 24)];
    v4 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor;
    v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor];
    if (v5)
    {
      sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
      v6 = v3;
      v7 = v5;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
LABEL_10:
        if (*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
        {
          v38 = v3;
          swift_retain();
          v39 = *(_BYTE *)(sub_100235688() + 32);
          swift_release();
          sub_100235688();
          sub_100119C68(v39, v3);
          swift_release();

          swift_release();
        }
        else
        {

        }
        return;
      }
      v9 = *(void **)&v1[v4];
    }
    else
    {
      v10 = v3;
      v9 = 0;
    }
    *(_QWORD *)&v1[v4] = v3;
    v41 = v3;
    v40 = v3;

    v11 = objc_msgSend(objc_allocWithZone((Class)UINavigationBarAppearance), "init");
    objc_msgSend(v11, "configureWithDefaultBackground");
    v12 = sub_10002A750(&qword_10064BB40);
    inited = swift_initStackObject(v12, v43);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v14 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
    v15 = NSFontAttributeName;
    v16 = static UIFont.roundedNavigationTitleFont.getter();
    *(_QWORD *)(inited + 64) = v14;
    *(_QWORD *)(inited + 40) = v16;
    v17 = sub_100350498(inited);
    type metadata accessor for Key(0);
    v19 = v18;
    v20 = sub_1000175C8((unint64_t *)&qword_10064BB50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10051FF08);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v11, "setTitleTextAttributes:", isa);

    v22 = swift_initStackObject(v12, v42);
    *(_OWORD *)(v22 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v22 + 32) = v15;
    *(_QWORD *)(v22 + 40) = static UIFont.roundedLargeNavigationTitleFont.getter(v15);
    *(_QWORD *)(v22 + 64) = v14;
    *(_QWORD *)(v22 + 72) = NSForegroundColorAttributeName;
    *(_QWORD *)(v22 + 104) = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
    *(_QWORD *)(v22 + 80) = v40;
    v23 = v40;
    v24 = NSForegroundColorAttributeName;
    v25 = sub_100350498(v22);
    v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
    objc_msgSend(v11, "setLargeTitleTextAttributes:", v26);

    v27 = objc_msgSend(v1, "navigationItem");
    objc_msgSend(v27, "setStandardAppearance:", v11);

    v28 = objc_msgSend(v1, "navigationItem");
    v29 = objc_msgSend(v28, "scrollEdgeAppearance");

    if (v29)
    {
      v30 = objc_msgSend(v29, "copy");

      v31 = objc_msgSend(v11, "titleTextAttributes");
      v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v31, v19, &type metadata for Any[8], v20);

      v33 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v32);
      objc_msgSend(v30, "setTitleTextAttributes:", v33);

      v34 = objc_msgSend(v11, "largeTitleTextAttributes");
      v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v34, v19, &type metadata for Any[8], v20);

      v36 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v35);
      objc_msgSend(v30, "setLargeTitleTextAttributes:", v36);

    }
    else
    {
      v30 = v11;
      objc_msgSend(v30, "configureWithTransparentBackground");
    }
    v37 = objc_msgSend(v1, "navigationItem");
    objc_msgSend(v37, "setScrollEdgeAppearance:", v30);

    v3 = v41;
    goto LABEL_10;
  }
}

id sub_10028F4A0()
{
  char *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char *v25;
  int *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(BOOL *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  char v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int *v55;
  char *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  char v63[24];
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v1 = v0;
  v2 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10063F568);
  __chkstk_darwin(v8);
  v10 = (BOOL *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "isViewLoaded");
  if ((_DWORD)result)
  {
    v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v15);
    v19 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 208);
    v59 = v17;
    v60 = v16;
    v58 = ObjectType;
    v19(v64, ObjectType, v17);
    v20 = v65;
    v21 = v66;
    sub_10001413C(v64, v65);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    v61 = v11;
    if ((v22 & 1) != 0)
    {
      v23 = sub_10002A750(&qword_10063F570);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
      v24 = v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout];
    }
    else
    {
      v56 = v13;
      v25 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
      swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v63, 0, 0);
      v26 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
      v27 = &v25[v26[9]];
      v28 = *((_QWORD *)v27 + 1) - 3;
      v57 = v1;
      if (v28)
      {
        v30 = *(_DWORD *)v27;
        v31 = v28 < 0xFFFFFFFFFFFFFFFELL;
        v32 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
        swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar], v62, 0, 0);
        v33 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
        sub_10000735C(v32, (uint64_t)&v10[*(int *)(v33 + 28)], &qword_100653A10);
        *v10 = v31;
        v10[1] = v30 & 1;
        v10[2] = BYTE1(v30) & 1;
        v34 = *(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
        v35 = v33;
        v1 = v57;
        v34(v10, 0, 1, v35);
      }
      else
      {
        v29 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
        (*(void (**)(BOOL *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 1, 1, v29);
      }
      v36 = v25[v26[30]];
      sub_10000735C((uint64_t)v10, (uint64_t)&v7[v5[5]], &qword_10063F568);
      sub_10000735C((uint64_t)&v25[v26[25]], (uint64_t)&v7[v5[6]], (uint64_t *)&unk_100653A00);
      v37 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
      v38 = v26;
      v54 = v25;
      v55 = v26;
      v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
      v40 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions + 8];
      v41 = v25[v38[26]];
      LOBYTE(v38) = v25[v38[13]];
      *v7 = v36;
      v42 = &v7[v5[7]];
      *(_QWORD *)v42 = v39;
      *((_QWORD *)v42 + 1) = v40;
      v42[16] = v37[16];
      v7[v5[8]] = v41;
      v7[v5[9]] = (char)v38;
      v43 = sub_10002A750(&qword_10063F570);
      v53 = *(int *)(v43 + 48);
      sub_10002B1E8((uint64_t)v7, (uint64_t)v4, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
      v44 = v65;
      v45 = v66;
      sub_10001413C(v64, v65);
      v46 = v40;
      v1 = v57;
      sub_10004E024(v39, v46);
      LOBYTE(v44) = TTRRemindersListEditingState.isEditingItem.getter(v44, v45);
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
      sub_1000073A0((uint64_t)v10, &qword_10063F568);
      v4[v53] = v44 & 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v4, 0, 1, v43);
      v24 = v54[v55[8]];
      v13 = v56;
      sub_10001F580((uint64_t)v4, (uint64_t)v56, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode);
    }
    v13[*(int *)(v61 + 20)] = v24;
    v47 = (*(uint64_t (**)(uint64_t))(v59 + 416))(v58);
    v48 = sub_10004CA14((uint64_t)v13);
    swift_unknownObjectRelease(v47);
    if ((v48 & 1) != 0)
    {
      v49 = objc_msgSend(v1, "navigationController");
      if (v49)
      {
        v50 = v49;
        v51 = objc_msgSend(v49, "navigationBar");

        objc_msgSend(v51, "ttriAccessibilityNavigationBarContentsDidChange");
      }
    }
    sub_10001F544((uint64_t)v13, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration);
    return (id)sub_100027F10(v64);
  }
  return result;
}

double sub_10028F950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  int v8;
  double result;
  void *v10;
  id v11;
  _BYTE v13[24];

  v1 = sub_10002A750((uint64_t *)&unk_100653A00);
  __chkstk_darwin(v1);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo, v13, 0, 0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  sub_10000735C(v4 + *(int *)(v5 + 100), (uint64_t)v3, (uint64_t *)&unk_100653A00);
  v6 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v7 = 1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100653A00);
  if (v8 == 1)
  {
    if (*(_BYTE *)(v4 + *(int *)(v5 + 112)))
      v7 = 2;
    else
      v7 = 0;
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController))
  {
    swift_retain();
    v10 = *(void **)(sub_100235688() + 40);
    v11 = v10;
    swift_release();
    sub_100235688();
    sub_100119C68(v7, v10);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10028FAB0()
{
  char *v0;
  unsigned __int8 v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v5;
  id v6;
  void *v7;
  _BYTE *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    objc_msgSend(v0, "ttr_setNeedsUpdateContentUnavailableConfiguration");
    v1 = v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging];
    v2 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView;
    v3 = *(_BYTE **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView];
    if ((v1 & 0xC0) != 0x40 || (v1 & 0x3E) == 0)
    {
      v5 = v3;
      v6 = objc_msgSend(v0, "view");
      if (v6)
      {
        v7 = v6;
        v8 = sub_1001DC68C(v1, v3, v6);

        v9 = *(void **)&v0[v2];
        *(_QWORD *)&v0[v2] = v8;

        v10 = *(_QWORD *)&v0[v2];
        if (v10)
        {
          *(_BYTE *)(v10 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_listLayout) = v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout];
          v11 = *(_QWORD *)&v0[v2];
          if (v11)
          {
            v12 = v11 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_messagingViewDelegate;
            *(_QWORD *)(v12 + 8) = &off_1005FCCB0;
            swift_unknownObjectWeakAssign(v12, v0);
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      if (v3)
      {
        objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView], "removeFromSuperview");
        v13 = *(void **)&v0[v2];
      }
      else
      {
        v13 = 0;
      }
      *(_QWORD *)&v0[v2] = 0;

    }
  }
}

uint64_t sub_10028FC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = type metadata accessor for AppEntityID(0);
  v16[1] = *(_QWORD *)(v1 - 8);
  v16[2] = v1;
  __chkstk_darwin(v1);
  v16[0] = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for REMFeatureFlags(0);
  __chkstk_darwin(v17);
  v3 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRListType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v16 - v11;
  v18 = v0;
  v13 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo, v19, 0, 0);
  sub_10000735C(v13, (uint64_t)v5, (uint64_t *)&unk_100665590);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    sub_10001F580((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
    sub_10002B1E8((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
    v15 = (char *)&loc_10028FDDC + *((int *)qword_10028FFF0 + swift_getEnumCaseMultiPayload(v10, v6));
    __asm { BR              X10 }
  }
  return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100665590);
}

double sub_100290008(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  double result;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType(v6, a2);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  v10 = v6;
  v9(v3, ObjectType, v7);

  v12 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v11);
  if (v12)
  {
    v14 = v12;
    v15 = objc_msgSend(v12, "viewIfLoaded");

    objc_msgSend(v15, "setNeedsLayout");
  }
  v16 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver;
  if (!*(_QWORD *)(v3
                  + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver))
  {
    v17 = swift_allocObject(&unk_1005FCFE0, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v3);
    v18 = sub_10002A750((uint64_t *)&unk_100653A50);
    swift_allocObject(v18, 56, 7);
    *(_QWORD *)(v3 + v16) = TTRViewModelObserver.init(didReceiveNewValue:)(sub_100299E34, v17);
    swift_retain();
    swift_release();
  }
  v19 = *(void **)v5;
  v20 = *(_QWORD *)(v5 + 8);
  v21 = swift_getObjectType(v19, v13);
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 56);
  swift_retain();
  v23 = v19;
  v24 = v22(v21, v20);

  TTRViewModelObserver.subscribeIfNeeded(to:)(v24);
  swift_release();
  if ((a1 & 1) == 0)
    sub_100296D10();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1002901D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v7, "viewWillLayoutSubviews");
  sub_100290260();
  v3 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint];
  if (v3)
  {
    v4 = v3;
    v5 = sub_10028EF28();
    v6 = UIToolbar.toolbarHeightAdjustment_workaround60289707.getter();

    objc_msgSend(v4, "setConstant:", -v6);
  }
}

uint64_t sub_100290260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int8x16_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  uint64_t v12;
  _BYTE v13[88];
  uint64_t v14;
  int8x16_t v15;
  _BYTE v16[25];
  char v17;
  _BYTE v18[24];
  _BYTE v19[8];
  _BYTE v20[56];

  v1 = v0;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v12);
  v2 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v2);
  v3 = (char *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates, v18, 0, 0);
  sub_10029A0D0(v3, (uint64_t)v19);
  if ((v19[0] & 1) != 0)
  {
LABEL_7:
    LOBYTE(v14) = 0;
    v15 = 0u;
    memset(v16, 0, sizeof(v16));
    v17 = 3;
    swift_beginAccess(v3, v13, 33, 0);
    sub_10029A85C((uint64_t)&v14, (uint64_t)v3);
    swift_endAccess(v13);
    if (v19[0] == 1)
    {
      v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController), v5);
      v9 = *(void (**)(uint64_t, uint64_t))(v7 + 112);
      v10 = v6;
      v9(ObjectType, v7);

    }
    sub_10029A1CC((uint64_t)v20, (uint64_t)v13);
    __asm { BR              X10 }
  }
  sub_10029A1CC((uint64_t)v20, (uint64_t)&v14);
  if (v16[17] != 3
    || v16[16]
    || (v4 = vorrq_s8(v15, *(int8x16_t *)v16),
        *(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v14))
  {
    sub_10029A208(&v14);
    goto LABEL_7;
  }
  sub_10029A208(&v14);
  return sub_10029A23C((uint64_t)v19);
}

void sub_1002908A0(char a1, char a2)
{
  char *v2;
  char *v3;
  char *v6;
  unsigned int v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double Height;
  id v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(uint64_t, uint64_t);
  id v34;
  double v35;
  _QWORD aBlock[6];
  char v37[24];
  CGRect v38;

  v3 = v2;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v6 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v37, 0, 0);
    if ((v6[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 76)] & 1) != 0)
      v7 = 1;
    else
      v7 = objc_msgSend(v3, "isEditing");
    if (*(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] > 0.0)
      v8 = 1;
    else
      v8 = v7 ^ 1;
    v9 = sub_10028EF28();
    v10 = objc_msgSend(v9, "isHidden");

    if ((_DWORD)v8 == v10)
    {
      if (!(v8 & 1 | ((a1 & 1) == 0))
        && *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
      {
        swift_retain();
        sub_100235740((char)objc_msgSend(v3, "isEditing"), a2 & 1);
        swift_release();
      }
      if (!v7)
      {
LABEL_22:
        v35 = *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
        *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
        if (v35 == 0.0)
          return;
        goto LABEL_23;
      }
    }
    else
    {
      if ((v8 & 1) == 0
        && *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
      {
        swift_retain();
        sub_100235740((char)objc_msgSend(v3, "isEditing"), 0);
        swift_release();
      }
      if ((a2 & 1) != 0)
      {
        v11 = (void *)objc_opt_self(UIView);
        v12 = swift_allocObject(&unk_1005FCEF0, 25, 7);
        *(_QWORD *)(v12 + 16) = v3;
        *(_BYTE *)(v12 + 24) = v8;
        aBlock[4] = sub_100299D1C;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100006378;
        aBlock[3] = &unk_1005FCF08;
        v13 = _Block_copy(aBlock);
        v14 = v3;
        swift_release();
        objc_msgSend(v11, "animateWithDuration:animations:", v13, 0.33);
        _Block_release(v13);
      }
      else
      {
        v29 = sub_10028EF28();
        objc_msgSend(v29, "setHidden:", v8);

      }
      v30 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v31 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
      ObjectType = swift_getObjectType(v30, v15);
      v33 = *(void (**)(uint64_t, uint64_t))(v31 + 184);
      v34 = v30;
      v33(ObjectType, v31);

      if (!v7)
        goto LABEL_22;
    }
    v16 = sub_10028EF28();
    objc_msgSend(v16, "bounds");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v38.origin.x = v18;
    v38.origin.y = v20;
    v38.size.width = v22;
    v38.size.height = v24;
    Height = CGRectGetHeight(v38);
    v26 = sub_10028EF28();
    v27 = UIToolbar.toolbarHeightAdjustment_workaround60289707.getter();

    v28 = *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
    *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = Height + v27;
    if (Height + v27 == v28)
      return;
LABEL_23:
    sub_100296D10();
  }
}

void sub_100290BFC(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  objc_super v13;

  v3 = v2;
  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v13, "viewWillAppear:", a1 & 1);
  sub_10028EFE4();
  v6 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v5);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setToolbarHidden:animated:", 1, 1);

  }
  sub_100290E04(0);
  v8 = *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  sub_100296F98(v8);
  sub_1002908A0(1, 0);
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "keyboardWillShowNotificationWithNotification:", UIKeyboardWillShowNotification, 0);
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "keyboardDidShowNotificationWithNotification:", UIKeyboardDidShowNotification, 0);
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "keyboardWillHideNotificationWithNotification:", UIKeyboardWillHideNotification, 0);
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "keyboardDidHideNotificationWithNotification:", UIKeyboardDidHideNotification, 0);
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "keyboardWillChangeFrameNotificationWithNotification:", UIKeyboardWillChangeFrameNotification, 0);
  objc_msgSend(v9, "addObserver:selector:name:object:", v3, "willAddDeactivationReasonWithNotification:", _UIApplicationWillAddDeactivationReasonNotification, 0);
  v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 696))(ObjectType, v10);
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver])
  {
    swift_retain();
    TTRICurrentTextInputModeObserver.startObserving()();
    swift_release();
  }

}

void sub_100290E04(unsigned __int8 a1)
{
  _BYTE *v1;
  int v2;
  char *v3;
  int8x16_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;
  char v10;
  char v11;
  _BYTE v12[24];
  _BYTE v13[8];
  uint64_t v14;

  v2 = v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState];
  v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = a1;
  if (v2 != a1)
  {
    v3 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
    swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates], v12, 0, 0);
    sub_10029A0D0(v3, (uint64_t)v13);
    if ((v13[0] & 1) == 0)
    {
      sub_10029A1CC((uint64_t)&v14, (uint64_t)&v7);
      if (v11 == 3 && !v10)
      {
        v4 = vorrq_s8(v8, v9);
        if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v7))
        {
          sub_10029A208(&v7);
          sub_10029A23C((uint64_t)v13);
          return;
        }
      }
      sub_10029A208(&v7);
    }
    sub_10029A23C((uint64_t)v13);
    v5 = objc_msgSend(v1, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "setNeedsLayout");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100290F58(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  objc_super v11;

  v3 = v2;
  v11.receiver = v3;
  v11.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1 & 1);
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 688))(ObjectType, v5);
  sub_100291064(1, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 408))(ObjectType, v5);
  TTRModuleState.viewDidAppear()();
  swift_release();
  sub_100291480();
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator], "prepare");
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 712))(v10, ObjectType, v5);
  sub_10001413C(v10, v10[3]);
  sub_10044A1C0(v3);
  return sub_100027F10(v10);
}

void sub_100291064(char a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  if ((a1 & 1) == 0)
  {
    v16 = objc_msgSend(v2, "userActivity");
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, "setNeedsSave:", 1);

    }
    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v18 = type metadata accessor for Logger(0);
    sub_100012DC4(v18, (uint64_t)qword_1006538B0);
    v27 = v3;
    v9 = Logger.logObject.getter(v27);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v29 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = objc_msgSend(v27, "userActivity");
      if (v22)
      {
        v23 = v22;
        v24 = NSUserActivity.ttrDescription.getter();
        v26 = v25;

      }
      else
      {
        v24 = 7104878;
        v26 = 0xE300000000000000;
      }
      v28 = sub_100027E40(v24, v26, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v20 + 4, v20 + 12);

      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v9, v19, "Reminders list mark userActivity needsSave = true {userActivity: %s}", v20, 0xCu);
      swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
      goto LABEL_23;
    }

LABEL_18:
    return;
  }
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], a2);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  v7 = objc_msgSend(v2, "userActivity");
  objc_msgSend(v7, "invalidate");

  objc_msgSend(v3, "setUserActivity:", v6);
  if (v6)
    objc_msgSend(v6, "setNeedsSave:", 1);
  if (qword_10063D5C8 != -1)
    swift_once(&qword_10063D5C8, sub_10028E2E8);
  v8 = type metadata accessor for Logger(0);
  sub_100012DC4(v8, (uint64_t)qword_1006538B0);
  v27 = v6;
  v9 = Logger.logObject.getter(v27);
  v10 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v9, v10))
  {

    goto LABEL_18;
  }
  v11 = (uint8_t *)swift_slowAlloc(12, -1);
  v12 = swift_slowAlloc(32, -1);
  v29 = v12;
  *(_DWORD *)v11 = 136315138;
  if (v6)
  {
    v13 = NSUserActivity.ttrDescription.getter();
    v15 = v14;
  }
  else
  {
    v13 = 7104878;
    v15 = 0xE300000000000000;
  }
  v28 = sub_100027E40(v13, v15, &v29);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v11 + 4, v11 + 12);

  swift_bridgeObjectRelease(v15);
  _os_log_impl((void *)&_mh_execute_header, v9, v10, "Reminders list make userActivity current {userActivity: %s}", v11, 0xCu);
  swift_arrayDestroy(v12, 1, &type metadata for Any[8]);
  swift_slowDealloc(v12, -1, -1);
  swift_slowDealloc(v11, -1, -1);

LABEL_23:
}

void sub_100291480()
{
  void *v0;
  id v1;
  UIAccessibilityNotifications v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;

  v1 = objc_msgSend(v0, "splitViewController");
  if (v1)
  {
    v7 = v1;
    if (objc_msgSend(v1, "displayMode") == (id)2)
    {
      v2 = UIAccessibilityLayoutChangedNotification;
      v3 = objc_msgSend(v0, "navigationController");
      v4 = v3;
      if (v3)
      {
        v5 = objc_msgSend(v3, "navigationBar");

        v8 = v5;
        v6 = sub_100005ED8(0, (unint64_t *)&unk_100653AB0, UINavigationBar_ptr);
        v4 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v8, v6);

      }
      UIAccessibilityPostNotification(v2, v4);

      swift_unknownObjectRelease(v4);
    }
    else
    {

    }
  }
}

double sub_1002915D0(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  double v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];
  objc_super v25;

  v3 = v2;
  v25.receiver = v2;
  v25.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v25, "viewWillDisappear:", a1 & 1);
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v6);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 712))(v24, ObjectType, v5);
  *(_QWORD *)(*sub_10001413C(v24, v24[3]) + 48) = 0;
  swift_release();
  sub_100027F10(v24);
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver])
  {
    swift_retain();
    TTRICurrentTextInputModeObserver.stopObserving()();
    *(_QWORD *)&v8 = swift_release().n128_u64[0];
  }
  objc_msgSend(v2, "resignFirstResponder", v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 368))(ObjectType, v5);
  (*(void (**)(uint64_t, uint64_t))(v5 + 704))(ObjectType, v5);
  (*(void (**)(uint64_t, uint64_t))(v5 + 112))(ObjectType, v5);
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v9, "removeObserver:name:object:", v2, UIKeyboardWillShowNotification, 0);
  objc_msgSend(v9, "removeObserver:name:object:", v2, UIKeyboardDidShowNotification, 0);
  objc_msgSend(v9, "removeObserver:name:object:", v2, UIKeyboardWillHideNotification, 0);
  objc_msgSend(v9, "removeObserver:name:object:", v2, UIKeyboardDidHideNotification, 0);
  objc_msgSend(v9, "removeObserver:name:object:", v2, UIKeyboardWillChangeFrameNotification, 0);
  objc_msgSend(v9, "removeObserver:name:object:", v2, _UIApplicationWillAddDeactivationReasonNotification, 0);
  v10 = objc_msgSend(v2, "userActivity");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v3, "userActivity");
    objc_msgSend(v12, "resignCurrent");

    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v13 = type metadata accessor for Logger(0);
    sub_100012DC4(v13, (uint64_t)qword_1006538B0);
    v14 = v11;
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v24[0] = v22;
      *(_DWORD *)v17 = 136315138;
      v18 = NSUserActivity.ttrDescription.getter();
      v20 = v19;
      v23 = sub_100027E40(v18, v19, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Make NSUserActivity resign current {activity: %s}", v17, 0xCu);
      swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 408))(ObjectType, v5);
  TTRModuleState.viewWillDisappear()();

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100291A74(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), a2);
  (*(void (**)(void *, uint64_t, uint64_t))(v4 + 24))(a1, ObjectType, v4);
  if (qword_10063D5C8 != -1)
    swift_once(&qword_10063D5C8, sub_10028E2E8);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_1006538B0);
  v14 = a1;
  v7 = Logger.logObject.getter(v14);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = NSUserActivity.ttrDescription.getter();
    v13 = v12;
    v15 = sub_100027E40(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 4, v9 + 12);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Reminders list updated userActivity state {activity: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
}

void sub_100291CAC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  NSString v16;
  char v17[24];

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    if (objc_msgSend(v0, "isEditing"))
    {
      v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController], v2);
      v6 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 152);
      v7 = v3;
      v8 = v6(0, ObjectType, v4);

      v9 = *(_QWORD *)(v8 + 16);
      v10 = swift_bridgeObjectRelease(v8);
      if (v9)
        static TTRLocalizableStrings.RemindersList.selectedCountText(withCount:)(v9);
      else
        static TTRLocalizableStrings.RemindersList.selectReminders.getter(v10);
      v15 = v11;
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      objc_msgSend(v1, "setTitle:", v16);

    }
    else
    {
      v12 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
      swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v17, 0, 0);
      v13 = *(_QWORD *)&v12[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 20) + 8];
      swift_bridgeObjectRetain(v13);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      objc_msgSend(v1, "setTitle:", v14);

    }
  }
}

uint64_t sub_100291F8C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  id v85;
  _QWORD *v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(unint64_t, uint64_t, uint64_t);
  id v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(unint64_t, uint64_t, uint64_t);
  id v126;
  char *v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t);
  id v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  __int16 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int16 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int16 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int16 v190;
  uint64_t v191;
  uint64_t *p_super_class;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int16 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t, uint64_t);
  id v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t, uint64_t);
  id v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t (*v240)(uint64_t, uint64_t, uint64_t);
  id v241;
  uint64_t v242;
  void *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(uint64_t, uint64_t);
  id v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  void *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t (*v257)(uint64_t, uint64_t, uint64_t);
  id v258;
  uint64_t v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t (*v264)(uint64_t, uint64_t);
  id v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  objc_class *ObjectType;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  objc_super v306;
  uint64_t v307;
  char v308;
  uint64_t v309;

  v304 = a2;
  v305 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v4 = __chkstk_darwin(v3);
  v289 = (uint64_t)&v273 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v288 = (uint64_t)&v273 - v7;
  v8 = __chkstk_darwin(v6);
  v287 = (uint64_t)&v273 - v9;
  v10 = __chkstk_darwin(v8);
  v291 = (uint64_t)&v273 - v11;
  v12 = __chkstk_darwin(v10);
  v292 = (uint64_t)&v273 - v13;
  v14 = __chkstk_darwin(v12);
  v293 = (uint64_t)&v273 - v15;
  v16 = __chkstk_darwin(v14);
  v294 = (uint64_t)&v273 - v17;
  v18 = __chkstk_darwin(v16);
  v295 = (uint64_t)&v273 - v19;
  v20 = __chkstk_darwin(v18);
  v297 = (uint64_t)&v273 - v21;
  v22 = __chkstk_darwin(v20);
  v298 = (uint64_t)&v273 - v23;
  v24 = __chkstk_darwin(v22);
  v296 = (uint64_t)&v273 - v25;
  v26 = __chkstk_darwin(v24);
  v299 = (uint64_t)&v273 - v27;
  v28 = __chkstk_darwin(v26);
  v300 = (uint64_t)&v273 - v29;
  __chkstk_darwin(v28);
  v303 = (char *)&v273 - v30;
  v31 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v32 = *(_QWORD *)(v31 - 8);
  v301 = v31;
  v302 = v32;
  v33 = __chkstk_darwin(v31);
  v286 = (uint64_t)&v273 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v285 = (uint64_t)&v273 - v36;
  v37 = __chkstk_darwin(v35);
  v284 = (uint64_t)&v273 - v38;
  v39 = __chkstk_darwin(v37);
  v283 = (uint64_t)&v273 - v40;
  v41 = __chkstk_darwin(v39);
  v43 = (char *)&v273 - v42;
  v44 = __chkstk_darwin(v41);
  v46 = (char *)&v273 - v45;
  v47 = __chkstk_darwin(v44);
  v49 = (char *)&v273 - v48;
  v50 = __chkstk_darwin(v47);
  v52 = (char *)&v273 - v51;
  v53 = __chkstk_darwin(v50);
  v55 = (char *)&v273 - v54;
  v56 = __chkstk_darwin(v53);
  v58 = (char *)&v273 - v57;
  v59 = __chkstk_darwin(v56);
  v61 = (char *)&v273 - v60;
  __chkstk_darwin(v59);
  v63 = (char *)&v273 - v62;
  v64 = v2;
  v65 = objc_msgSend(v2, "presentedViewController");

  if (v65)
    goto LABEL_2;
  v281 = v63;
  v67 = (uint64_t)v303;
  v278 = v58;
  v280 = v61;
  v279 = v55;
  v277 = v52;
  v276 = v49;
  v275 = v46;
  v274 = v43;
  v68 = v304;
  v282 = v64;
  v69 = v305;
  if ((static Selector.== infix(_:_:)("printListAction:", v305) & 1) != 0)
  {
    v70 = &v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], &v307, 0, 0);
    v66 = v70[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 68)];
    return v66 & 1;
  }
  if ((static Selector.== infix(_:_:)("newSectionAction:", v69) & 1) != 0)
  {
    v73 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    v74 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v72);
    v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 848))(v74, v73);
    return v75 & 1;
  }
  if ((static Selector.== infix(_:_:)("newSectionWithSelectionAction:", v69) & 1) != 0)
  {
    v76 = v282;
    v77 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
    v78 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    if (objc_msgSend(v282, "isEditing"))
    {
      v80 = &v76[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v81 = *(void **)&v76[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v82 = *((_QWORD *)v80 + 1);
      v83 = swift_getObjectType(v81, v79);
      v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 152);
      v85 = v81;
      v86 = (_QWORD *)v84(1, v83, v82);

    }
    else
    {
      v86 = _swiftEmptyArrayStorage;
    }
    v87 = swift_getObjectType(v77, v79);
    v88 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v78 + 896))(v86, v87, v78);
LABEL_16:
    v89 = v88;
    swift_bridgeObjectRelease(v86);
    return v89 & 1;
  }
  if ((static Selector.== infix(_:_:)("postponeAllOverdueToTodayAction:", v69) & 1) != 0)
  {
    v66 = 1;
    return v66 & 1;
  }
  if ((static Selector.== infix(_:_:)("toggleShowCompletedAction:", v69) & 1) != 0)
  {
    v91 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    v92 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v90);
    v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 800))(v92, v91);
    return v75 & 1;
  }
  if ((static Selector.== infix(_:_:)("expandAllItemsAction:", v69) & 1) != 0)
  {
    v94 = v282;
    v95 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    v96 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v93);
    v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 448))(v96, v95);
    v99 = v97;
    v100 = *(_QWORD *)(v97 + 16);
    if (v100)
    {
      v101 = v97 + ((*(unsigned __int8 *)(v302 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v302 + 80));
      v102 = &v94[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v103 = *(_QWORD *)(v302 + 72);
      while (1)
      {
        v104 = *(void **)v102;
        v105 = *((_QWORD *)v102 + 1);
        v106 = swift_getObjectType(*(_QWORD *)v102, v98);
        v107 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v105 + 192);
        v108 = v104;
        LOBYTE(v105) = v107(v101, v106, v105);

        if ((v105 & 1) == 0)
          break;
        v101 += v103;
        if (!--v100)
          goto LABEL_30;
      }
LABEL_35:
      swift_bridgeObjectRelease(v99);
      v66 = 1;
      return v66 & 1;
    }
    goto LABEL_30;
  }
  v109 = static Selector.== infix(_:_:)("collapseAllItemsAction:", v69);
  v111 = v302;
  if ((v109 & 1) != 0)
  {
    v112 = v282;
    v113 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    v114 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v110);
    v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 448))(v114, v113);
    v99 = v115;
    v117 = *(_QWORD *)(v115 + 16);
    if (v117)
    {
      v118 = v111;
      v119 = v115 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
      v120 = &v112[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v121 = *(_QWORD *)(v118 + 72);
      do
      {
        v122 = *(void **)v120;
        v123 = *((_QWORD *)v120 + 1);
        v124 = swift_getObjectType(*(_QWORD *)v120, v116);
        v125 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v123 + 192);
        v126 = v122;
        LOBYTE(v123) = v125(v119, v124, v123);

        if ((v123 & 1) != 0)
          goto LABEL_35;
        v119 += v121;
      }
      while (--v117);
    }
LABEL_30:
    swift_bridgeObjectRelease(v99);
    v66 = 0;
    return v66 & 1;
  }
  if ((static Selector.== infix(_:_:)("deleteReminderAction:", v69) & 1) != 0)
  {
    v127 = v282;
    sub_100293C70(v67);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v67, 1, v301) == 1)
    {
      v128 = v67;
LABEL_34:
      sub_1000073A0(v128, (uint64_t *)&unk_100640EB0);
      v66 = 0;
      return v66 & 1;
    }
    v130 = (uint64_t)v281;
    sub_10001F580(v67, (uint64_t)v281, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v131 = *(void **)&v127[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v132 = *(_QWORD *)&v127[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    v134 = swift_getObjectType(v131, v133);
    v135 = *(uint64_t (**)(uint64_t, uint64_t))(v132 + 64);
    v136 = v131;
    v137 = (void *)v135(v134, v132);

    if (!v137)
    {
      v141 = *(_QWORD *)&v127[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v142 = swift_getObjectType(*(_QWORD *)&v127[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v138);
      v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 56))(v130, v142, v141);
      sub_10001F544(v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v66 & 1;
    }
    v139 = v130;
LABEL_40:
    sub_10001F544(v139, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v66 = 0;
    return v66 & 1;
  }
  if ((static Selector.== infix(_:_:)("expandReminderSubtasksWithArrowKeyAction:", v69) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("collapseReminderSubtasksWithArrowKeyAction:", v69) & 1) != 0)
    {
      v129 = 0;
      goto LABEL_43;
    }
    if ((static Selector.== infix(_:_:)("expandReminderSubtasksAlternativeShortcutAction:", v69) & 1) != 0)
    {
      v129 = 1;
      v140 = 0;
      return sub_1002939DC(v129, v140, (uint64_t)v282);
    }
    if ((static Selector.== infix(_:_:)("collapseReminderSubtasksAlternativeShortcutAction:", v69) & 1) != 0)
    {
      v129 = 0;
      v140 = 0;
      return sub_1002939DC(v129, v140, (uint64_t)v282);
    }
    if ((static Selector.== infix(_:_:)("startEditingReminderAction:", v69) & 1) != 0
      || (static Selector.== infix(_:_:)("endEditingReminderAction:", v69) & 1) != 0)
    {
      v144 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v145 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v143);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v144 + 600))(v145, v144) & 1) == 0)
      {
LABEL_2:
        v66 = 0;
        return v66 & 1;
      }
      v146 = v300;
      sub_100293C70(v300);
      v147 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v146, 1, v301);
      goto LABEL_54;
    }
    v148 = v69;
    if ((static Selector.== infix(_:_:)("showReminderInfoAction:", v69) & 1) != 0)
    {
      v149 = v299;
      sub_100293C70(v299);
      v150 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48);
      if (v150(v149, 1, v301) == 1)
      {
        v128 = v299;
        goto LABEL_34;
      }
      v152 = (uint64_t)v280;
      sub_10001F580(v299, (uint64_t)v280, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v153 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v155 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v154);
      v156 = sub_10002A750((uint64_t *)&unk_1006469C0);
      v157 = *(unsigned __int8 *)(v302 + 80);
      v158 = (v157 + 32) & ~v157;
      v159 = swift_allocObject(v156, v158 + *(_QWORD *)(v302 + 72), v157 | 7);
      *(_OWORD *)(v159 + 16) = xmmword_100520250;
      sub_10002B1E8(v152, v159 + v158, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v160 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 592))(v159, v155, v153);
      swift_bridgeObjectRelease(v159);
      if ((v160 & 1) == 0)
      {
        v139 = (uint64_t)v280;
        goto LABEL_40;
      }
      v146 = v296;
      sub_100293C70(v296);
      sub_10001F544((uint64_t)v280, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v147 = v150(v146, 1, v301);
LABEL_54:
      v66 = v147 != 1;
      sub_1000073A0(v146, (uint64_t *)&unk_100640EB0);
      return v66 & 1;
    }
    if ((static Selector.== infix(_:_:)("toggleReminderCompletionStateAction:", v69) & 1) != 0)
    {
      v151 = v298;
      sub_100293C70(v298);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v151, 1, v301) == 1)
      {
        v128 = v298;
        goto LABEL_34;
      }
      v162 = (uint64_t)v278;
      sub_10001F580(v298, (uint64_t)v278, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v163 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v165 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v164);
      v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v163 + 64))(v162, v165, v163);
LABEL_67:
      v66 = v166;
      sub_10001F544(v162, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v66 & 1;
    }
    if ((static Selector.== infix(_:_:)("setReminderDueDateToTodayAction:", v69) & 1) != 0)
    {
      v161 = v297;
      sub_100293C70(v297);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v161, 1, v301) == 1)
      {
        v128 = v297;
        goto LABEL_34;
      }
      v168 = (uint64_t)v279;
      sub_10001F580(v297, (uint64_t)v279, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v169 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v171 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v170);
      v172 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v169 + 616))(v168, v171, v169);
      if ((v172 & 1) != 0)
        __asm { BR              X10 }
      v66 = 0;
      p_super_class = &v309;
    }
    else if ((static Selector.== infix(_:_:)("setReminderDueDateToTomorrowAction:", v69) & 1) != 0)
    {
      v167 = v295;
      sub_100293C70(v295);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v167, 1, v301) == 1)
      {
        v128 = v295;
        goto LABEL_34;
      }
      v174 = (uint64_t)v277;
      sub_10001F580(v295, (uint64_t)v277, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v175 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v177 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v176);
      v178 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 616))(v174, v177, v175);
      if ((v178 & 1) != 0)
        __asm { BR              X10 }
      v66 = 0;
      p_super_class = (uint64_t *)&v308;
    }
    else if ((static Selector.== infix(_:_:)("setReminderDueDateToWeekendAction:", v69) & 1) != 0)
    {
      v173 = v294;
      sub_100293C70(v294);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v173, 1, v301) == 1)
      {
        v128 = v294;
        goto LABEL_34;
      }
      v180 = (uint64_t)v276;
      sub_10001F580(v294, (uint64_t)v276, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v181 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v183 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v182);
      v184 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 616))(v180, v183, v181);
      if ((v184 & 1) != 0)
        __asm { BR              X10 }
      v66 = 0;
      p_super_class = &v307;
    }
    else if ((static Selector.== infix(_:_:)("setReminderDueDateToNextWeekAction:", v69) & 1) != 0)
    {
      v179 = v293;
      sub_100293C70(v293);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v179, 1, v301) == 1)
      {
        v128 = v293;
        goto LABEL_34;
      }
      v186 = (uint64_t)v275;
      sub_10001F580(v293, (uint64_t)v275, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v187 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v189 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v188);
      v190 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 616))(v186, v189, v187);
      if ((v190 & 1) != 0)
        __asm { BR              X10 }
      v66 = 0;
      p_super_class = (uint64_t *)&v306.super_class;
    }
    else
    {
      if ((static Selector.== infix(_:_:)("setReminderDueDateToNoneAction:", v69) & 1) == 0)
      {
        if ((static Selector.== infix(_:_:)("indentSelectedReminderAction:", v69) & 1) != 0)
        {
          v191 = v291;
          sub_100293C70(v291);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v191, 1, v301) == 1)
          {
            v128 = v291;
            goto LABEL_34;
          }
          v162 = v283;
          sub_10001F580(v291, v283, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v199 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
          v201 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v200);
          v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 648))(v162, v201, v199);
        }
        else
        {
          if ((static Selector.== infix(_:_:)("outdentSelectedReminderAction:", v69) & 1) == 0)
          {
            if ((static Selector.== infix(_:_:)("toggleFlaggedForSelectedReminderAction:", v69) & 1) != 0)
            {
              v202 = v288;
              sub_100293C70(v288);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v202, 1, v301) == 1)
              {
                v128 = v288;
                goto LABEL_34;
              }
              v207 = v285;
              sub_10001F580(v288, v285, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v208 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
              v210 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v209);
              v211 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v208 + 72))(v207, v210, v208);
            }
            else
            {
              if ((static Selector.== infix(_:_:)("addStructuredHashtagForSelectedReminderAction:", v69) & 1) == 0)
              {
                if ((static Selector.== infix(_:_:)("cut:", v69) & 1) != 0)
                {
                  v213 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
                  v214 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
                  v215 = &v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v216 = *(void **)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v217 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController
                                        + 8];
                  v218 = swift_getObjectType(v216, v212);
                  v219 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v217 + 152);
                  v220 = v216;
                  v86 = (_QWORD *)v219(1, v218, v217);

                  if (!v86[2])
                  {
                    swift_bridgeObjectRelease(v86);
                    v222 = *(void **)v215;
                    v223 = *((_QWORD *)v215 + 1);
                    v225 = swift_getObjectType(*(_QWORD *)v215, v224);
                    v226 = *(uint64_t (**)(uint64_t, uint64_t))(v223 + 80);
                    v227 = v222;
                    v86 = (_QWORD *)v226(v225, v223);

                  }
                  v228 = swift_getObjectType(v213, v221);
                  v88 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v214 + 544))(v86, v228, v214);
                }
                else if ((static Selector.== infix(_:_:)("copy:", v69) & 1) != 0)
                {
                  v234 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
                  v235 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
                  v236 = &v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v237 = *(void **)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v238 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController
                                        + 8];
                  v239 = swift_getObjectType(v237, v233);
                  v240 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v238 + 152);
                  v241 = v237;
                  v86 = (_QWORD *)v240(1, v239, v238);

                  if (!v86[2])
                  {
                    swift_bridgeObjectRelease(v86);
                    v243 = *(void **)v236;
                    v244 = *((_QWORD *)v236 + 1);
                    v246 = swift_getObjectType(*(_QWORD *)v236, v245);
                    v247 = *(uint64_t (**)(uint64_t, uint64_t))(v244 + 80);
                    v248 = v243;
                    v86 = (_QWORD *)v247(v246, v244);

                  }
                  v249 = swift_getObjectType(v234, v242);
                  v88 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v235 + 552))(v86, v249, v235);
                }
                else
                {
                  if ((static Selector.== infix(_:_:)("paste:", v69) & 1) == 0)
                  {
                    sub_10000735C(v68, (uint64_t)&v307, &qword_100640E50);
                    v267 = v309;
                    if (v309)
                    {
                      v268 = sub_10001413C(&v307, v309);
                      v269 = *(_QWORD *)(v267 - 8);
                      __chkstk_darwin(v268);
                      v271 = (char *)&v273 - ((v270 + 15) & 0xFFFFFFFFFFFFFFF0);
                      (*(void (**)(char *))(v269 + 16))(v271);
                      v272 = _bridgeAnythingToObjectiveC<A>(_:)(v271, v267);
                      (*(void (**)(char *, uint64_t))(v269 + 8))(v271, v267);
                      sub_100027F10(&v307);
                    }
                    else
                    {
                      v272 = 0;
                    }
                    v306.receiver = v282;
                    v306.super_class = ObjectType;
                    v66 = objc_msgSendSuper2(&v306, "canPerformAction:withSender:", v148, v272);
                    swift_unknownObjectRelease(v272);
                    return v66 & 1;
                  }
                  v251 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
                  v252 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
                  v253 = &v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v254 = *(void **)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
                  v255 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController
                                        + 8];
                  v256 = swift_getObjectType(v254, v250);
                  v257 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v255 + 152);
                  v258 = v254;
                  v86 = (_QWORD *)v257(1, v256, v255);

                  if (!v86[2])
                  {
                    swift_bridgeObjectRelease(v86);
                    v260 = *(void **)v253;
                    v261 = *((_QWORD *)v253 + 1);
                    v263 = swift_getObjectType(*(_QWORD *)v253, v262);
                    v264 = *(uint64_t (**)(uint64_t, uint64_t))(v261 + 80);
                    v265 = v260;
                    v86 = (_QWORD *)v264(v263, v261);

                  }
                  v266 = swift_getObjectType(v251, v259);
                  v88 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v252 + 560))(v86, v266, v252);
                }
                goto LABEL_16;
              }
              v206 = v289;
              sub_100293C70(v289);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v206, 1, v301) == 1)
              {
                v128 = v289;
                goto LABEL_34;
              }
              v207 = v286;
              sub_10001F580(v289, v286, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v229 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
              v231 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v230);
              v211 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v229 + 168))(v207, v231, v229);
            }
            v232 = v211;
            sub_10001F544(v207, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v66 = v232 != 2;
            return v66 & 1;
          }
          v198 = v287;
          sub_100293C70(v287);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v198, 1, v301) == 1)
          {
            v128 = v287;
            goto LABEL_34;
          }
          v162 = v284;
          sub_10001F580(v287, v284, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v203 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
          v205 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v204);
          v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v203 + 656))(v162, v205, v203);
        }
        goto LABEL_67;
      }
      v185 = v292;
      sub_100293C70(v292);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v185, 1, v301) == 1)
      {
        v128 = v292;
        goto LABEL_34;
      }
      v193 = (uint64_t)v274;
      sub_10001F580(v292, (uint64_t)v274, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v194 = *(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v196 = swift_getObjectType(*(_QWORD *)&v282[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v195);
      v197 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v194 + 616))(v193, v196, v194);
      if ((v197 & 1) != 0)
        __asm { BR              X10 }
      v66 = 0;
      p_super_class = (uint64_t *)&v306;
    }
    sub_10001F544(*(p_super_class - 32), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v66 & 1;
  }
  v129 = 1;
LABEL_43:
  v140 = 1;
  return sub_1002939DC(v129, v140, (uint64_t)v282);
}

uint64_t sub_1002939DC(int a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  _BYTE *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t, uint64_t);
  id v39;
  char v40;
  _BYTE v42[12];
  int v43;
  _BYTE *v44;
  _BYTE *v45;

  v43 = a1;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v44 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v45 = &v42[-v12];
  v13 = (_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v14 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v15 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v14, v16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 96);
  v19 = v14;
  LODWORD(v15) = v18(ObjectType, v15);

  if (((v15 ^ a2) & 1) != 0)
    goto LABEL_10;
  sub_100293C70((uint64_t)v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
LABEL_10:
    v40 = 0;
    return v40 & 1;
  }
  v20 = v45;
  sub_10001F580((uint64_t)v7, (uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v21 = (void *)*v13;
  v22 = v13[1];
  v24 = swift_getObjectType(*v13, v23);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 64);
  v26 = v21;
  v27 = (void *)v25(v24, v22);

  if (v27)
  {
    v29 = (uint64_t)v20;
LABEL_9:
    sub_10001F544(v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_10;
  }
  v30 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v31 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v32 = swift_getObjectType(v30, v28);
  LOBYTE(v30) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v31 + 456))(v20, v32, v31);
  v33 = v44;
  sub_10002B1E8((uint64_t)v20, (uint64_t)v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v30 & 1) == 0)
  {
    sub_10001F544((uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v29 = (uint64_t)v20;
    goto LABEL_9;
  }
  v35 = (void *)*v13;
  v36 = v13[1];
  v37 = swift_getObjectType(*v13, v34);
  v38 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v36 + 192);
  v39 = v35;
  LOBYTE(v36) = v38(v33, v37, v36);

  sub_10001F544((uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v40 = v36 ^ v43;
  return v40 & 1;
}

uint64_t sub_100293C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v8 = v6[1];
  ObjectType = swift_getObjectType(v7, v9);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 64);
  v12 = v7;
  v13 = (void *)v11(ObjectType, v8);
  v15 = v14;

  if (!v13)
  {
    v17 = (void *)*v6;
    v18 = v6[1];
    v19 = swift_getObjectType(*v6, v16);
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 72);
    v21 = v17;
    v13 = (void *)v20(v19, v18);
    v15 = v22;

    if (!v13)
      goto LABEL_7;
  }
  v23 = swift_getObjectType(v13, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 16))(v31, v23, v15);

  v24 = v32;
  if (!v32)
  {
    sub_1000073A0((uint64_t)v31, (uint64_t *)&unk_1006547B0);
LABEL_7:
    v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
    goto LABEL_8;
  }
  v25 = v33;
  sub_10001413C(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v28(v5, 0, 1, v26);
  sub_100027F10(v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v5, 1, v26) != 1)
  {
    sub_10001F580((uint64_t)v5, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v28)(a1, 0, 1, v26);
  }
LABEL_8:
  sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
  type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);
}

uint64_t sub_100293F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = v5[1];
  ObjectType = swift_getObjectType(v6, a2);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 152);
  v10 = v6;
  v11 = v9(1, ObjectType, v7);

  if (!*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRelease(v11);
    v13 = (void *)*v5;
    v14 = v5[1];
    v16 = swift_getObjectType(*v5, v15);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 80);
    v18 = v13;
    v11 = v17(v16, v14);

  }
  v19 = swift_getObjectType(v3, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 568))(v11, v19, v4);
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_100294014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = v5[1];
  ObjectType = swift_getObjectType(v6, a2);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 152);
  v10 = v6;
  v11 = v9(1, ObjectType, v7);

  if (!*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRelease(v11);
    v13 = (void *)*v5;
    v14 = v5[1];
    v16 = swift_getObjectType(*v5, v15);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 80);
    v18 = v13;
    v11 = v17(v16, v14);

  }
  v19 = swift_getObjectType(v3, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 576))(v11, v19, v4);
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_100294104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = v5[1];
  ObjectType = swift_getObjectType(v6, a2);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 152);
  v10 = v6;
  v11 = v9(1, ObjectType, v7);

  if (!*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRelease(v11);
    v13 = (void *)*v5;
    v14 = v5[1];
    v16 = swift_getObjectType(*v5, v15);
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 80);
    v18 = v13;
    v11 = v17(v16, v14);

  }
  v19 = swift_getObjectType(v3, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 584))(v11, v19, v4);
  return swift_bridgeObjectRelease(v11);
}

void sub_1002941F4(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  int v30;
  void *v31;
  void *v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  uint64_t v37;
  double v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  id v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  void *v73;
  Swift::String v74;
  Swift::String v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  BOOL v80;
  void *v81;
  void *v82;
  NSString v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  Swift::String v93;
  Swift::String v94;
  void *v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  void *v99;
  void *v100;
  NSString v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  uint64_t v109;
  id v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116;
  objc_super v117;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v109 - v9;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v109 - v17;
  v19 = objc_msgSend(a1, "action", v16);
  if ((static Selector.== infix(_:_:)("newReminderAction:", v19) & 1) != 0)
  {
    v20._countAndFlagsBits = 0xD00000000000002DLL;
    v20._object = (void *)0x8000000100571A50;
    v21._countAndFlagsBits = 0x696D65522077654ELL;
    v21._object = (void *)0xEC0000007265646ELL;
    object = TTRLocalizedString(_:comment:)(v21, v20)._object;
    v23 = 0xD000000000000029;
    v24 = 0x8000000100571A80;
    v25 = 0x6D6574492077654ELL;
    v26 = 0xE800000000000000;
LABEL_3:
    v27 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v25, *(Swift::String *)&v23)._object;
    v28 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(v28, v114, 0, 0);
    v29 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    v30 = v28[*(int *)(v29 + 112)];
    if (v28[*(int *)(v29 + 112)])
      v31 = object;
    else
      v31 = v27;
    if (v30)
      v32 = v27;
    else
      v32 = object;
LABEL_9:
    swift_bridgeObjectRelease(v31);
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setDiscoverabilityTitle:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

    return;
  }
  if ((static Selector.== infix(_:_:)("newSectionAction:", v19) & 1) != 0)
  {
    static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)(v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout]);
LABEL_14:
    v35 = v34;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setTitle:", v36);

    v110 = String._bridgeToObjectiveC()();
    v37 = v35;
LABEL_15:
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(v37).n128_u64[0];
    objc_msgSend(a1, "setDiscoverabilityTitle:", v110, v38);

    return;
  }
  if ((static Selector.== infix(_:_:)("newSectionWithSelectionAction:", v19) & 1) != 0)
  {
    static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)(v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout]);
    goto LABEL_14;
  }
  if ((static Selector.== infix(_:_:)("toggleShowCompletedAction:", v19) & 1) != 0)
  {
    v39._object = (void *)0x80000001005719D0;
    v40._countAndFlagsBits = 0x6D6F4320776F6853;
    v40._object = (void *)0xEE00646574656C70;
    v39._countAndFlagsBits = 0xD000000000000037;
    v41 = TTRLocalizedString(_:comment:)(v40, v39)._object;
    v42._object = (void *)0x8000000100571A10;
    v43._countAndFlagsBits = 0x6D6F432065646948;
    v43._object = (void *)0xEE00646574656C70;
    v42._countAndFlagsBits = 0xD000000000000037;
    v44 = TTRLocalizedString(_:comment:)(v43, v42)._object;
    v45 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(v45, v114, 0, 0);
    v46 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    v47 = v45[*(int *)(v46 + 72)];
    if (v45[*(int *)(v46 + 72)])
      v31 = v41;
    else
      v31 = v44;
    if (v47)
      v32 = v44;
    else
      v32 = v41;
    goto LABEL_9;
  }
  if ((static Selector.== infix(_:_:)("setReminderDueDateToWeekendAction:", v19) & 1) != 0)
  {
    v49 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    v50 = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 608))(3, v50, v49);
    v52 = v51;
    v110 = String._bridgeToObjectiveC()();
    v37 = v52;
    goto LABEL_15;
  }
  if ((static Selector.== infix(_:_:)("toggleReminderCompletionStateAction:", v19) & 1) != 0)
  {
    v54 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v55 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v56 = *((_QWORD *)v54 + 1);
    v57 = swift_getObjectType(v55, v53);
    v58 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 64);
    v59 = v55;
    v60 = (void *)v58(v57, v56);
    v62 = v61;

    if (v60)
      goto LABEL_28;
    v64 = *(void **)v54;
    v65 = *((_QWORD *)v54 + 1);
    v66 = swift_getObjectType(*(_QWORD *)v54, v63);
    v67 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 72);
    v68 = v64;
    v60 = (void *)v67(v66, v65);
    v62 = v69;

    if (v60)
    {
LABEL_28:
      v70 = swift_getObjectType(v60, v63);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v62 + 16))(&v111, v70, v62);

      if (*((_QWORD *)&v112 + 1))
      {
        sub_10002E37C(&v111, (uint64_t)v114);
        v71._countAndFlagsBits = 0xD000000000000011;
        v71._object = (void *)0x8000000100567830;
        v72._object = (void *)0x8000000100571950;
        v72._countAndFlagsBits = 0xD000000000000032;
        v73 = TTRLocalizedString(_:comment:)(v71, v72)._object;
        v74._countAndFlagsBits = 0xD000000000000012;
        v75._countAndFlagsBits = 0xD000000000000034;
        v74._object = (void *)0x80000001005677E0;
        v75._object = (void *)0x8000000100571990;
        v76 = TTRLocalizedString(_:comment:)(v74, v75)._object;
        v77 = v115;
        v78 = v116;
        sub_10001413C(v114, v115);
        v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 40))(v77, v78);
        v80 = (v79 & 1) == 0;
        if ((v79 & 1) != 0)
          v81 = v73;
        else
          v81 = v76;
        if (v80)
          v82 = v73;
        else
          v82 = v76;
        swift_bridgeObjectRelease(v81);
        v83 = String._bridgeToObjectiveC()();
        objc_msgSend(a1, "setDiscoverabilityTitle:", v83, swift_bridgeObjectRelease(v82).n128_f64[0]);

        sub_100027F10(v114);
        return;
      }
    }
    else
    {
      v113 = 0;
      v111 = 0u;
      v112 = 0u;
    }
    sub_1000073A0((uint64_t)&v111, (uint64_t *)&unk_1006547B0);
    return;
  }
  if ((static Selector.== infix(_:_:)("indentSelectedReminderAction:", v19) & 1) != 0)
  {
    v84._countAndFlagsBits = 0xD000000000000036;
    v84._object = (void *)0x80000001005718D0;
    v85._countAndFlagsBits = 0x5220746E65646E49;
    v85._object = (void *)0xEF7265646E696D65;
    object = TTRLocalizedString(_:comment:)(v85, v84)._object;
    v24 = 0x8000000100571910;
    v25 = 0x4920746E65646E49;
    v26 = 0xEB000000006D6574;
    v23 = 0xD000000000000032;
    goto LABEL_3;
  }
  if ((static Selector.== infix(_:_:)("outdentSelectedReminderAction:", v19) & 1) != 0)
  {
    v86._countAndFlagsBits = 0xD000000000000010;
    v87._countAndFlagsBits = 0xD000000000000038;
    v86._object = (void *)0x8000000100571830;
    v87._object = (void *)0x8000000100571850;
    object = TTRLocalizedString(_:comment:)(v86, v87)._object;
    v23 = 0xD000000000000034;
    v24 = 0x8000000100571890;
    v25 = 0x20746E656474754FLL;
    v26 = 0xEC0000006D657449;
    goto LABEL_3;
  }
  if ((static Selector.== infix(_:_:)("toggleFlaggedForSelectedReminderAction:", v19) & 1) != 0)
  {
    sub_100293C70((uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      sub_10001F580((uint64_t)v10, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v88 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v90 = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v89);
      v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 72))(v18, v90, v88);
      if (v91 != 2)
      {
        v92 = v91;
        v93._countAndFlagsBits = 0xD000000000000025;
        v93._object = (void *)0x80000001005717D0;
        v94._countAndFlagsBits = 1734437958;
        v94._object = (void *)0xE400000000000000;
        v95 = TTRLocalizedString(_:comment:)(v94, v93)._object;
        v96._countAndFlagsBits = 0xD000000000000027;
        v96._object = (void *)0x8000000100571800;
        v97._countAndFlagsBits = 0x67616C666E55;
        v97._object = (void *)0xE600000000000000;
        v98 = TTRLocalizedString(_:comment:)(v97, v96);
        if ((v92 & 1) != 0)
          v99 = v98._object;
        else
          v99 = v95;
        if ((v92 & 1) != 0)
          v100 = v95;
        else
          v100 = v98._object;
        swift_bridgeObjectRelease(v99);
        v101 = String._bridgeToObjectiveC()();
        objc_msgSend(a1, "setDiscoverabilityTitle:", v101, swift_bridgeObjectRelease(v100).n128_f64[0]);

      }
      sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  else if ((static Selector.== infix(_:_:)("addStructuredHashtagForSelectedReminderAction:", v19) & 1) != 0)
  {
    sub_100293C70((uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      sub_10001F580((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v102 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      v104 = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v103);
      v105 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 168))(v14, v104, v102);
      if (v105 != 2)
      {
        static TTRLocalizableStrings.RemindersList.keyCommandTitleForAddingStructuredHashtag(hasExistingStructuredHashtags:)(v105 & 1);
        v107 = v106;
        v108 = String._bridgeToObjectiveC()();
        objc_msgSend(a1, "setDiscoverabilityTitle:", v108, swift_bridgeObjectRelease(v107).n128_f64[0]);

      }
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  else
  {
    v117.receiver = v2;
    v117.super_class = ObjectType;
    objc_msgSendSuper2(&v117, "validateCommand:", a1);
  }
}

