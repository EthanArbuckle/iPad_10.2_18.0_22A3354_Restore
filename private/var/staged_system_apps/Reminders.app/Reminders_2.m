uint64_t sub_10010C50C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t Strong;
  uint64_t v52;
  uint64_t (*v53)(char *, unint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_BYTE *, _QWORD);
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t (*v133)(char *, unint64_t, uint64_t, __n128);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(char *, unint64_t, uint64_t, __n128);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char *v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE v163[32];
  _BYTE v164[32];

  v153 = a3;
  v162 = a4;
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v7);
  v154 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v155 = (void (*)(char *, uint64_t))((char *)&v141 - v10);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v147 = (uint64_t)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v150 = (char *)&v141 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v141 - v16;
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v151 = *(_QWORD *)(v18 - 8);
  v152 = v18;
  __chkstk_darwin(v18);
  v146 = (uint64_t)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v141 - v21;
  __chkstk_darwin(v23);
  v148 = (uint64_t)&v141 - v24;
  __chkstk_darwin(v25);
  v156 = (uint64_t)&v141 - v26;
  __chkstk_darwin(v27);
  v149 = (uint64_t (*)(char *, unint64_t, uint64_t, __n128))((char *)&v141 - v28);
  v161 = sub_10002A750(&qword_1006469B8);
  __chkstk_darwin(v161);
  v158 = (uint64_t)&v141 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for IndexPath(0);
  v30 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v32 = (char *)&v141 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v141 - v34;
  v160 = v4;
  v36 = sub_10006B3DC();
  v38 = v37;
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v38);
  v40 = *(_QWORD *)(v36 + 16);
  swift_bridgeObjectRelease(v36);
  v42 = IndexPath.section.getter(v41);
  if (v42 < 0)
    return swift_storeEnumTagMultiPayload(v162, v161, 4);
  if (v42 >= v40)
    return swift_storeEnumTagMultiPayload(v162, v161, 4);
  v43 = sub_10006B3DC();
  v45 = v44;
  v157 = v35;
  v47 = v46;
  v48 = sub_1000F8FE4(a1, v43);
  v49 = v47;
  v50 = v157;
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v43);
  if (!v48)
    return swift_storeEnumTagMultiPayload(v162, v161, 4);
  Strong = swift_weakLoadStrong(v48 + 56);
  if (!Strong)
  {
    if (qword_10063D3C8 == -1)
      goto LABEL_13;
    goto LABEL_47;
  }
  v141 = v48 + 56;
  v144 = v48;
  v52 = *(_QWORD *)(Strong + 16);
  swift_release();
  v53 = (uint64_t (*)(char *, unint64_t, uint64_t, __n128))sub_10006B3DC();
  v55 = v54;
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v55);
  v58 = IndexPath.section.getter(v57);
  if ((v58 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  v142 = v52;
  if (v58 >= *((_QWORD *)v53 + 2))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v59 = (char *)v53 + 16 * v58;
  v60 = *((_QWORD *)v59 + 5);
  v143 = *((_QWORD *)v59 + 4);
  swift_retain();
  v145 = v60;
  swift_bridgeObjectRetain(v60);
  v61 = swift_bridgeObjectRelease(v53);
  v53 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v30 + 16);
  v62 = v53(v50, a2, v159, v61);
  v63 = IndexPath.section.getter(v62);
  v64 = IndexPath.section.getter(v63);
  if (v63 != v64)
  {
    LODWORD(a2) = 0;
    goto LABEL_16;
  }
  v65 = IndexPath.row.getter(v64);
  v64 = IndexPath.row.getter(v65);
  a2 = v65 < v64;
  if (v65 >= v64)
  {
LABEL_16:
    v52 = v145;
    goto LABEL_17;
  }
  v52 = v145;
  if ((v153 & 1) != 0)
  {
    v66 = (uint64_t (*)(_BYTE *, _QWORD))IndexPath.row.modify(v163);
    if (__OFADD__(*v67, 1))
    {
      __break(1u);
LABEL_49:
      swift_once(&qword_10063D3C8, sub_1000E35C8);
      goto LABEL_26;
    }
    ++*v67;
    v64 = v66(v163, 0);
    LODWORD(a2) = 1;
  }
LABEL_17:
  if (!((unint64_t)v52 >> 62))
  {
    v73 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    v74 = IndexPath.row.getter(v64);
    if (v74 < 0)
      goto LABEL_51;
    goto LABEL_19;
  }
LABEL_42:
  if (v52 < 0)
    v116 = v52;
  else
    v116 = v52 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v52);
  v73 = _CocoaArrayWrapper.endIndex.getter(v116);
  swift_bridgeObjectRelease(v52);
  v74 = IndexPath.row.getter(v117);
  if (v73 < 0)
  {
    __break(1u);
LABEL_47:
    swift_once(&qword_10063D3C8, sub_1000E35C8);
LABEL_13:
    v68 = type metadata accessor for Logger(0);
    v69 = sub_100012DC4(v68, (uint64_t)qword_100645EC0);
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.fault.getter(v70);
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "section node cannot be moved", v72, 2u);
      swift_slowDealloc(v72, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return swift_storeEnumTagMultiPayload(v162, v161, 4);
  }
  v50 = v157;
  v52 = v145;
  if (v74 < 0)
  {
LABEL_51:
    if (v73 == v74)
    {
      v118 = v159;
      ((void (*)(char *, char *, uint64_t))v53)(v32, v50, v159);
      sub_10010E570(v142, (uint64_t)v17);
      v119 = *(void (**)(char *, uint64_t))(v30 + 8);
      v119(v32, v118);
      v120 = v151;
      v121 = v152;
      v122 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
      if (v122(v17, 1, v152) != 1)
      {
        v133 = v149;
        v134 = sub_10001F580((uint64_t)v17, (uint64_t)v149, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v135 = (uint64_t)v155;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v134);
        v136 = v144 + *(_QWORD *)(*(_QWORD *)v144 + 144);
        swift_beginAccess(v136, v163, 0, 0);
        v137 = v156;
        v138 = sub_10002B1E8(v136, v156, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v139 = (uint64_t)v154;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v138);
        sub_10001F544(v137, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        LOBYTE(v136) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v135, v139);
        swift_bridgeObjectRelease(v145);
        swift_release();
        swift_release();
        sub_10001F544(v139, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v119(v157, v118);
        if ((v136 & 1) != 0)
        {
          sub_10001F544((uint64_t)v133, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          goto LABEL_59;
        }
        v102 = v158;
        sub_10001F580((uint64_t)v133, v158, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v114 = v102;
        v115 = v161;
        goto LABEL_62;
      }
      sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
      v123 = sub_10002A750((uint64_t *)&unk_1006469C0);
      v124 = *(unsigned __int8 *)(v120 + 80);
      v125 = (v124 + 32) & ~v124;
      v126 = swift_allocObject(v123, v125 + *(_QWORD *)(v120 + 72), v124 | 7);
      *(_OWORD *)(v126 + 16) = xmmword_100520250;
      v155 = v119;
      v127 = v126 + v125;
      v128 = v144 + *(_QWORD *)(*(_QWORD *)v144 + 144);
      swift_beginAccess(v128, v163, 0, 0);
      sub_10002B1E8(v128, v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v129 = v143 + *(_QWORD *)(*(_QWORD *)v143 + 144);
      swift_beginAccess(v129, v164, 0, 0);
      v130 = v156;
      sub_10002B1E8(v129, v156, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v131 = v150;
      sub_10010DFD0(v126, 0, v130, (uint64_t)v150);
      swift_release();
      swift_bridgeObjectRelease(v145);
      swift_release();
      swift_bridgeObjectRelease(v126);
      sub_10001F544(v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v155(v157, v118);
      if (v122(v131, 1, v121) != 1)
      {
        v140 = v148;
        sub_10001F580((uint64_t)v131, v148, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v102 = v158;
        sub_10001F580(v140, v158, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v114 = v102;
        v115 = v161;
        v132 = 2;
        goto LABEL_63;
      }
      sub_1000073A0((uint64_t)v131, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v50, v159);
      swift_release();
      swift_bridgeObjectRelease(v52);
      swift_release();
    }
    v102 = v158;
    v114 = v158;
    v115 = v161;
    v132 = 4;
LABEL_63:
    swift_storeEnumTagMultiPayload(v114, v115, v132);
    return sub_10000F614(v102, v162, &qword_1006469B8);
  }
LABEL_19:
  if (v74 >= v73)
    goto LABEL_51;
  v153 = a2;
  v75 = sub_10006B3DC();
  v76 = v50;
  v78 = v77;
  v80 = v79;
  v81 = v159;
  ((void (*)(char *, char *, uint64_t))v53)(v32, v76, v159);
  v82 = sub_1000F8FE4(v32, v75);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v78);
  v83 = swift_bridgeObjectRelease(v75);
  a2 = *(_QWORD *)(v30 + 8);
  ((void (*)(char *, uint64_t, __n128))a2)(v32, v81, v83);
  if (v82)
  {
    v149 = v53;
    v150 = (char *)a2;
    v84 = v82 + *(_QWORD *)(*(_QWORD *)v82 + 144);
    swift_beginAccess(v84, v163, 0, 0);
    v85 = v156;
    v86 = sub_10002B1E8(v84, v156, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v87 = (uint64_t)v155;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v86);
    sub_10001F544(v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v88 = v144 + *(_QWORD *)(*(_QWORD *)v144 + 144);
    swift_beginAccess(v88, v164, 0, 0);
    v89 = sub_10002B1E8(v88, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v90 = v82;
    v91 = (uint64_t)v154;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v89);
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    LOBYTE(v88) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v87, v91);
    sub_10001F544(v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v88 & 1) != 0)
    {
      ((void (*)(char *, uint64_t))v150)(v157, v159);
      swift_release();
      swift_bridgeObjectRelease(v145);
      swift_release();
      swift_release();
LABEL_59:
      v102 = v158;
      v114 = v158;
      v115 = v161;
      v132 = 3;
      goto LABEL_63;
    }
    v101 = v84;
    v102 = v158;
    sub_10002B1E8(v101, v158, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v103 = v161;
    swift_storeEnumTagMultiPayload(v102, v161, 1);
    v104 = v145;
    v105 = (void (*)(char *, uint64_t))v150;
    if (!v153 || (v106 = swift_weakLoadStrong(v141)) == 0)
    {
      v105(v157, v159);
      swift_release();
      swift_bridgeObjectRelease(v104);
      swift_release();
      swift_release();
      return sub_10000F614(v102, v162, &qword_1006469B8);
    }
    v107 = *(_QWORD *)(v106 + 16);
    v108 = swift_release();
    v109 = v159;
    if ((*(_BYTE *)(v144 + 32) & 1) != 0)
    {
      ((void (*)(char *, uint64_t, __n128))v105)(v157, v159, v108);
      swift_bridgeObjectRelease(v145);
      swift_release();
      swift_release();
      swift_release();
      return sub_10000F614(v102, v162, &qword_1006469B8);
    }
    if ((*(_BYTE *)(v90 + 32) & 1) != 0 || *(_QWORD *)(v90 + 24) >= *(_QWORD *)(v144 + 24))
    {
      ((void (*)(char *, uint64_t, __n128))v105)(v157, v159, v108);
      swift_release();
      swift_bridgeObjectRelease(v145);
      swift_release();
      swift_release();
      return sub_10000F614(v102, v162, &qword_1006469B8);
    }
    v110 = v157;
    v149(v32, (unint64_t)v157, v159, v108);
    v111 = v147;
    sub_10010E570(v107, v147);
    swift_release();
    swift_bridgeObjectRelease(v145);
    swift_release();
    v112 = swift_release();
    ((void (*)(char *, uint64_t, __n128))v105)(v32, v109, v112);
    v105(v110, v109);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v111, 1, v152) == 1)
    {
      sub_1000073A0(v111, (uint64_t *)&unk_100640EB0);
      return sub_10000F614(v102, v162, &qword_1006469B8);
    }
    sub_1000073A0(v102, &qword_1006469B8);
    v113 = v146;
    sub_10001F580(v111, v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580(v113, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v114 = v102;
    v115 = v103;
LABEL_62:
    v132 = 0;
    goto LABEL_63;
  }
  if (qword_10063D3C8 != -1)
    goto LABEL_49;
LABEL_26:
  v93 = type metadata accessor for Logger(0);
  v94 = sub_100012DC4(v93, (uint64_t)qword_100645EC0);
  v95 = Logger.logObject.getter(v94);
  v96 = static os_log_type_t.fault.getter(v95);
  v97 = os_log_type_enabled(v95, v96);
  v98 = v159;
  v99 = v145;
  if (v97)
  {
    v100 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v100 = 0;
    _os_log_impl((void *)&_mh_execute_header, v95, v96, "Failed to lookup node given a valid destinationIndexPath", v100, 2u);
    swift_slowDealloc(v100, -1, -1);
  }
  swift_release();
  swift_bridgeObjectRelease(v99);
  swift_release();

  ((void (*)(char *, uint64_t))a2)(v157, v98);
  return swift_storeEnumTagMultiPayload(v162, v161, 4);
}

uint64_t sub_10010D2F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char v54[24];
  char v55[24];

  v53 = a1;
  v5 = type metadata accessor for IndexPath(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v52 = (char *)&v46 - v15;
  v16 = sub_10006B64C();
  v18 = v17;
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease(v16);
  if (!v20)
  {
    v28 = sub_10002A750(qword_100646A90);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a3, 1, 1, v28);
  }
  v21 = sub_10006B64C();
  v23 = v22;
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v23);
  if (v20 > *(_QWORD *)(v21 + 16))
  {
    __break(1u);
  }
  else
  {
    v51 = a3;
    v47 = v20 - 1;
    v25 = v21 + 16 * (v20 - 1);
    v23 = *(_QWORD *)(v25 + 32);
    v26 = *(_QWORD *)(v25 + 40);
    swift_retain(v23);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v21);
    v27 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 144);
    swift_beginAccess(v27, v55, 0, 0);
    sub_10002B1E8(v27, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_retain(v23);
    sub_10010DBD8(v53, a2 & 1, (uint64_t)v14, (uint64_t)v9);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      swift_bridgeObjectRelease(v26);
      swift_release_n(v23, 2);
      sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640E00);
      v20 = v51;
LABEL_13:
      v43 = sub_10002A750(qword_100646A90);
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v20, 1, 1, v43);
    }
    v11 = v26;
    v30 = (uint64_t)v9;
    v9 = v52;
    sub_10001F580(v30, (uint64_t)v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v31 = sub_10006B64C();
    v33 = v32;
    v35 = v34;
    v10 = sub_100073338((uint64_t)v9, v32);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v31);
    v20 = v51;
    if (!v10)
    {
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_bridgeObjectRelease(v11);
      swift_release_n(v23, 2);
      goto LABEL_13;
    }
    if (!((unint64_t)v11 >> 62))
    {
      v36 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
  }
  if (v11 < 0)
    v44 = v11;
  else
    v44 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v36 = _CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease(v11);
LABEL_9:
  v37 = v48;
  IndexPath.init(row:section:)(v36, v47);
  sub_10002B1E8((uint64_t)v9, v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  swift_beginAccess(v10 + 64, v54, 0, 0);
  v38 = *(_QWORD *)(v10 + 64);
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v45 = *(_QWORD *)(v10 + 64);
    else
      v45 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v10 + 64));
    v39 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_release_n(v23, 2);
    swift_release(v10);
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release_n(v23, 2);
    swift_release(v10);
  }
  v40 = sub_10002A750(qword_100646A90);
  v41 = *(int *)(v40 + 48);
  v42 = *(int *)(v40 + 64);
  swift_bridgeObjectRelease(v11);
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  *(_QWORD *)(v20 + v41) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v20 + v42, v37, v50);
  return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v20, 0, 1, v40);
}

uint64_t sub_10010D764@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char v54[24];
  char v55[24];

  v53 = a1;
  v5 = type metadata accessor for IndexPath(0);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin(v5);
  v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v52 = (char *)&v46 - v15;
  v16 = sub_10006B3DC();
  v18 = v17;
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease(v16);
  if (!v20)
  {
    v28 = sub_10002A750((uint64_t *)&unk_100646A00);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a3, 1, 1, v28);
  }
  v21 = sub_10006B3DC();
  v23 = v22;
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v23);
  if (v20 > *(_QWORD *)(v21 + 16))
  {
    __break(1u);
  }
  else
  {
    v51 = a3;
    v47 = v20 - 1;
    v25 = v21 + 16 * (v20 - 1);
    v23 = *(_QWORD *)(v25 + 32);
    v26 = *(_QWORD *)(v25 + 40);
    swift_retain();
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v21);
    v27 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 144);
    swift_beginAccess(v27, v55, 0, 0);
    sub_10002B1E8(v27, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    sub_10010DFD0(v53, a2 & 1, (uint64_t)v13, (uint64_t)v9);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      swift_bridgeObjectRelease(v26);
      swift_release_n(v23, 2);
      sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
      v20 = v51;
LABEL_13:
      v43 = sub_10002A750((uint64_t *)&unk_100646A00);
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v20, 1, 1, v43);
    }
    v11 = v26;
    v30 = (uint64_t)v9;
    v9 = v52;
    sub_10001F580(v30, (uint64_t)v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v31 = sub_10006B3DC();
    v33 = v32;
    v35 = v34;
    v10 = sub_100073228((uint64_t)v9, v32);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v31);
    v20 = v51;
    if (!v10)
    {
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease(v11);
      swift_release_n(v23, 2);
      goto LABEL_13;
    }
    if (!((unint64_t)v11 >> 62))
    {
      v36 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
  }
  if (v11 < 0)
    v44 = v11;
  else
    v44 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v36 = _CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease(v11);
LABEL_9:
  v37 = v48;
  IndexPath.init(row:section:)(v36, v47);
  sub_10002B1E8((uint64_t)v9, v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_beginAccess(v10 + 64, v54, 0, 0);
  v38 = *(_QWORD *)(v10 + 64);
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v45 = *(_QWORD *)(v10 + 64);
    else
      v45 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v10 + 64));
    v39 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_release_n(v23, 2);
    swift_release();
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release_n(v23, 2);
    swift_release();
  }
  v40 = sub_10002A750((uint64_t *)&unk_100646A00);
  v41 = *(int *)(v40 + 48);
  v42 = *(int *)(v40 + 64);
  swift_bridgeObjectRelease(v11);
  sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v20 + v41) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v20 + v42, v37, v50);
  return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v20, 0, 1, v40);
}

unint64_t sub_10010DBD8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *Strong;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];

  v5 = v4;
  v36 = a2;
  v37 = a1;
  v8 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10006B64C();
  v17 = v16;
  v19 = v18;
  v38 = a3;
  v20 = sub_100073338(a3, v16);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  v39 = a4;
  if (!v20)
  {
    v21 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
      goto LABEL_27;
    goto LABEL_24;
  }
  swift_retain(v20);
  v21 = _swiftEmptyArrayStorage;
  if (*(_BYTE *)(v20 + 72) != 2)
  {
LABEL_26:
    swift_release_n(v20, 2);
    if (v21[2])
    {
LABEL_27:
      v30 = *(_QWORD *)(v5 + qword_100645F28);
      if (v30)
      {
        v31 = *(uint64_t (**)(uint64_t))(v30 + 16);
        v32 = swift_retain(*(_QWORD *)(v5 + qword_100645F28));
        if ((v31(v32) & 1) != 0)
        {
          v33 = v36 & 1;
          Strong = (void *)swift_unknownObjectUnownedLoadStrong(v5 + qword_100645EF8);
          (*(void (**)(void *, uint64_t, uint64_t, _QWORD *, uint64_t))(v30 + 368))(Strong, v37, v33, v21, v38);
          swift_release(v30);

LABEL_32:
          swift_bridgeObjectRelease(v21);
          return sub_10000F614((uint64_t)v10, v39, (uint64_t *)&unk_100640E00);
        }
        swift_release(v30);
        if (!v21[2])
        {
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
          goto LABEL_32;
        }
      }
      sub_10002B1E8((uint64_t)v21 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      goto LABEL_32;
    }
LABEL_24:
    swift_bridgeObjectRelease(v21);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v39, 1, 1, v11);
  }
  v22 = (_QWORD *)v20;
  while (1)
  {
    v23 = (uint64_t)v22 + *(_QWORD *)(*v22 + 144);
    swift_beginAccess(v23, v41, 0, 0);
    sub_10002B1E8(v23, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = (_QWORD *)sub_1004561DC(0, v21[2] + 1, 1, (unint64_t)v21);
    v25 = v21[2];
    v24 = v21[3];
    if (v25 >= v24 >> 1)
      v21 = (_QWORD *)sub_1004561DC(v24 > 1, v25 + 1, 1, (unint64_t)v21);
    v21[2] = v25 + 1;
    sub_10001F580((uint64_t)v14, (uint64_t)v21+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_beginAccess(v22 + 8, v40, 0, 0);
    v26 = v22[8];
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v29 = v22[8];
      else
        v29 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v22[8], 2);
      v27 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v26);
      if (!v27)
      {
LABEL_25:
        swift_bridgeObjectRelease(v26);
        v20 = (uint64_t)v22;
        goto LABEL_26;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v22[8]);
      if (!v27)
        goto LABEL_25;
    }
    result = v27 - 1;
    if (__OFSUB__(v27, 1))
      break;
    if ((v26 & 0xC000000000000001) != 0)
    {
      v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v26);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_35;
      if (result >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_36;
      v20 = *(_QWORD *)(v26 + 8 * result + 32);
      swift_retain(v20);
    }
    swift_release_n(v22, 2);
    swift_bridgeObjectRelease(v26);
    swift_retain(v20);
    v22 = (_QWORD *)v20;
    if (*(_BYTE *)(v20 + 72) != 2)
      goto LABEL_26;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_10010DFD0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *Strong;
  _BYTE v36[4];
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];

  v5 = v4;
  v37 = a2;
  v38 = a1;
  v40 = a4;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10006B3DC();
  v16 = v15;
  v18 = v17;
  v39 = a3;
  v19 = sub_100073228(a3, v15);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  if (v19)
  {
    v20 = _swiftEmptyArrayStorage;
    if (*(_BYTE *)(v19 + 72) == 2)
    {
      v21 = (_QWORD *)v19;
      while (1)
      {
        v22 = (uint64_t)v21 + *(_QWORD *)(*v21 + 144);
        swift_beginAccess(v22, v42, 0, 0);
        sub_10002B1E8(v22, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
          v20 = (_QWORD *)sub_100454EEC(0, v20[2] + 1, 1, (unint64_t)v20);
        v24 = v20[2];
        v23 = v20[3];
        if (v24 >= v23 >> 1)
          v20 = (_QWORD *)sub_100454EEC(v23 > 1, v24 + 1, 1, (unint64_t)v20);
        v20[2] = v24 + 1;
        sub_10001F580((uint64_t)v13, (uint64_t)v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_beginAccess(v21 + 8, v41, 0, 0);
        v25 = v21[8];
        if ((unint64_t)v25 >> 62)
        {
          if (v25 < 0)
            v29 = v21[8];
          else
            v29 = v25 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v21[8], 2);
          v26 = _CocoaArrayWrapper.endIndex.getter(v29);
          swift_bridgeObjectRelease(v25);
          if (!v26)
          {
LABEL_25:
            swift_bridgeObjectRelease(v25);
            swift_release();
            goto LABEL_26;
          }
        }
        else
        {
          v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v21[8]);
          if (!v26)
            goto LABEL_25;
        }
        v27 = v26 - 1;
        if (__OFSUB__(v26, 1))
          break;
        if ((v25 & 0xC000000000000001) != 0)
        {
          v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
        }
        else
        {
          if ((v27 & 0x8000000000000000) != 0)
            goto LABEL_34;
          if (v27 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_35;
          v28 = *(_QWORD *)(v25 + 8 * v27 + 32);
          swift_retain();
        }
        swift_release_n(v21, 2);
        swift_bridgeObjectRelease(v25);
        v21 = (_QWORD *)v28;
        if (*(_BYTE *)(v28 + 72) != 2)
          goto LABEL_26;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_26:
    swift_release();
    if (v20[2])
      goto LABEL_27;
LABEL_24:
    v30 = swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v40, 1, 1, v10, v30);
    return;
  }
  v20 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
    goto LABEL_24;
LABEL_27:
  v31 = *(_QWORD *)(v5 + qword_100645F28);
  if (!v31)
    goto LABEL_31;
  v32 = *(uint64_t (**)(uint64_t))(v31 + 16);
  v33 = swift_retain();
  if ((v32(v33) & 1) != 0)
  {
    v34 = v37 & 1;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v5 + qword_100645EF8);
    (*(void (**)(void *, uint64_t, uint64_t, _QWORD *, uint64_t))(v31 + 368))(Strong, v38, v34, v20, v39);
    swift_release();

LABEL_32:
    swift_bridgeObjectRelease(v20);
    sub_10000F614((uint64_t)v9, v40, (uint64_t *)&unk_100640EB0);
    return;
  }
  swift_release();
  if (v20[2])
  {
LABEL_31:
    sub_10002B1E8((uint64_t)v20 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    goto LABEL_32;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_10010E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = IndexPath.row.getter(v6);
  v10 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = IndexPath.section.getter(result);
    IndexPath.init(row:section:)(v10, v11);
    v12 = sub_10006B64C();
    v14 = v13;
    v16 = v15;
    v17 = sub_1000F8FE4(v8, v12);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    if (v17)
    {
      Strong = swift_weakLoadStrong(v17 + 56);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if (Strong)
      {
        v19 = *(_QWORD *)(Strong + 16);
        swift_release(Strong);
        if (v19 == a1)
        {
          v20 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 144);
          swift_beginAccess(v20, v24, 0, 0);
          sub_10002B1E8(v20, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_release(v17);
          v21 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 0, 1, v21);
        }
      }
      swift_release(v17);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v22 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  return result;
}

uint64_t sub_10010E570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = IndexPath.row.getter(v8);
  v10 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v11 = IndexPath.section.getter(result);
    IndexPath.init(row:section:)(v10, v11);
    v12 = sub_10006B3DC();
    v14 = v13;
    v16 = v15;
    v17 = sub_1000F8FE4(v7, v12);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    v18 = swift_bridgeObjectRelease(v12);
    if (v17)
    {
      Strong = swift_weakLoadStrong(v17 + 56);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (Strong)
      {
        v20 = *(_QWORD *)(Strong + 16);
        swift_release();
        if (v20 == a1)
        {
          v21 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 144);
          swift_beginAccess(v21, v25, 0, 0);
          sub_10002B1E8(v21, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
          v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
        }
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
    }
    v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
  return result;
}

uint64_t sub_10010E72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100646710);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100646710);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10010E7BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  sub_10010E7F8(a1);
  return v3;
}

uint64_t *sub_10010E7F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;

  v3 = *v1;
  v4 = (uint64_t *)((char *)v1 + qword_1006736E0);
  v5 = (char *)v4 + *(int *)(type metadata accessor for TTRITreeViewDropProposal(0) + 20);
  v6 = sub_10002A750(&qword_100653E50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 4, v6);
  *v4 = 0;
  v7 = (uint64_t)v1 + qword_1006736E8;
  v8 = sub_10002A750((uint64_t *)&unk_100654900);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v9, 1, 1, updated);
  *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 128)) = 0;
  *(uint64_t *)((char *)v1 + qword_100646728) = a1;
  return v1;
}

void (*sub_10010E8F4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>))(uint64_t *, _QWORD)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  void *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  Class isa;
  void *v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  BOOL v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void (*v73)(char *, uint64_t);
  BOOL v74;
  Class v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  char *v84;
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  double v91;
  double v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  void (*v122)(char *, uint64_t);
  void (*v123)(char *, uint64_t);
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134[5];
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;

  v131 = a2;
  v132 = a4;
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = __chkstk_darwin(v6);
  v125 = (uint64_t)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v126 = (uint64_t)&v124 - v9;
  v10 = sub_10002A750(&qword_100646950);
  v11 = __chkstk_darwin(v10);
  v130 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v124 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v124 - v16;
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v124 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v124 - v24;
  v26 = __chkstk_darwin(v23);
  v129 = (char *)&v124 - v27;
  v28 = __chkstk_darwin(v26);
  v127 = (char *)&v124 - v29;
  __chkstk_darwin(v28);
  v31 = (char *)&v124 - v30;
  sub_10000735C(a3, (uint64_t)v17, &qword_100646950);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v32(v17, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v17, &qword_100646950);
LABEL_3:
    v33 = 2;
    v34 = v132;
LABEL_26:
    v111 = sub_10002A750((uint64_t *)&unk_100640E40);
    return (void (*)(uint64_t *, _QWORD))swift_storeEnumTagMultiPayload(v34, v111, v33);
  }
  v124 = v22;
  v35 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v128 = v31;
  v35(v31, v17, v18);
  objc_msgSend(v131, "locationInView:", a1);
  v37 = v36;
  v38 = objc_msgSend(a1, "indexPathForRowAtPoint:");
  v39 = v18;
  if (v38)
  {
    v40 = v38;
    v41 = v129;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v38);

    v35(v15, v41, v39);
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v42(v15, 0, 1, v39);
    v43 = v35;
    if (v32(v15, 1, v39) != 1)
    {
      v44 = v19;
      v45 = v39;
      v46 = v127;
      v47 = (void (*)(uint64_t, char *, uint64_t))v43;
      v48 = v45;
      v49 = v47;
      ((void (*)(char *, char *))v47)(v127, v15);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a1, "rectForRowAtIndexPath:", isa);
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v58 = v57;

      *(_QWORD *)&v135.origin.x = v52;
      v135.origin.y = v54;
      v135.size.width = v56;
      v135.size.height = v58;
      v59 = CGRectGetHeight(v135) * 0.5;
      *(_QWORD *)&v136.origin.x = v52;
      v136.origin.y = v54;
      v136.size.width = v56;
      v136.size.height = v58;
      CGRectGetHeight(v136);
      v131 = v52;
      v137.origin.x = sub_100038048(*(double *)&v52, v54, v56, v58, v59, 0.0);
      x = v137.origin.x;
      y = v137.origin.y;
      width = v137.size.width;
      height = v137.size.height;
      if (v37 >= CGRectGetMinY(v137))
      {
        v140.origin.x = x;
        v140.origin.y = y;
        v140.size.width = width;
        v140.size.height = height;
        v64 = CGRectGetMaxY(v140) < v37;
      }
      else
      {
        v64 = 0;
      }
      v91 = *(double *)&v131;
      *(_QWORD *)&v141.origin.x = v131;
      v141.origin.y = v54;
      v141.size.width = v56;
      v141.size.height = v58;
      v92 = CGRectGetHeight(v141) * 0.2;
      v142.origin.x = v91;
      v142.origin.y = v54;
      v142.size.width = v56;
      v142.size.height = v58;
      CGRectGetHeight(v142);
      v143.origin.x = sub_100038048(v91, v54, v56, v58, v92, 0.0);
      v93 = v143.origin.x;
      v94 = v143.origin.y;
      v95 = v143.size.width;
      v96 = v143.size.height;
      v97 = 0;
      if (v37 >= CGRectGetMinY(v143))
      {
        v144.origin.x = v93;
        v144.origin.y = v94;
        v144.size.width = v95;
        v144.size.height = v96;
        if (CGRectGetMaxY(v144) >= v37)
          v97 = 1;
      }
      v98 = sub_10006B64C();
      v100 = v99;
      v102 = v101;
      v103 = sub_1000F8FE4(v46, v98);
      swift_bridgeObjectRelease(v102);
      swift_bridgeObjectRelease(v100);
      swift_bridgeObjectRelease(v98);
      if (v103)
      {
        v104 = v103 + *(_QWORD *)(*(_QWORD *)v103 + 144);
        swift_beginAccess(v104, v134, 0, 0);
        v105 = v104;
        v106 = v125;
        sub_10002B1E8(v105, v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v107 = swift_release(v103);
        v108 = v48;
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v128, v48, v107);
        v109 = v126;
        sub_10001F580(v106, v126, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v34 = v132;
        v49(v132, v46, v108);
        v110 = (int *)sub_10002A750(&qword_100646A10);
        sub_10001F580(v109, v34 + v110[9], (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v33 = 0;
        *(_BYTE *)(v34 + v110[10]) = v64;
        *(_BYTE *)(v34 + v110[11]) = v97;
        goto LABEL_26;
      }
      if (qword_10063D3D8 != -1)
        swift_once(&qword_10063D3D8, sub_10010E72C);
      v112 = type metadata accessor for Logger(0);
      sub_100012DC4(v112, (uint64_t)qword_100646710);
      v113 = v124;
      v114 = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 16))(v124, v46, v48);
      v115 = Logger.logObject.getter(v114);
      v116 = static os_log_type_t.fault.getter(v115);
      if (os_log_type_enabled(v115, v116))
      {
        v117 = (uint8_t *)swift_slowAlloc(12, -1);
        v118 = swift_slowAlloc(32, -1);
        v134[0] = v118;
        *(_DWORD *)v117 = 136315138;
        v131 = v117 + 4;
        v119 = IndexPath.description.getter();
        v121 = v120;
        v133 = sub_100027E40(v119, v120, v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, v134, v131, v117 + 12);
        swift_bridgeObjectRelease(v121);
        v122 = *(void (**)(char *, uint64_t))(v44 + 8);
        v122(v113, v48);
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "TTRITreeViewDropUpdateCoordinator: internal inconsistency: can't lookup item {at: %s}", v117, 0xCu);
        swift_arrayDestroy(v118, 1, &type metadata for Any[8]);
        swift_slowDealloc(v118, -1, -1);
        swift_slowDealloc(v117, -1, -1);

        v122(v46, v48);
        v122(v128, v48);
      }
      else
      {

        v123 = *(void (**)(char *, uint64_t))(v44 + 8);
        v123(v113, v48);
        v123(v46, v48);
        v123(v128, v48);
      }
      goto LABEL_3;
    }
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v42(v15, 1, 1, v18);
    v43 = v35;
  }
  v65 = sub_1000073A0((uint64_t)v15, &qword_100646950);
  v66 = v128;
  v67 = IndexPath.row.getter(v65);
  v68 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 16);
  v69 = v68(v25, v66, v39);
  if (!v67)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v39);
LABEL_16:
    v87 = (uint64_t)v130;
    v88 = v130;
    v89 = v66;
    goto LABEL_17;
  }
  v70 = IndexPath.row.getter(v69);
  v71 = objc_msgSend(a1, "numberOfRowsInSection:", IndexPath.section.getter(v70));
  v72 = a1;
  v73 = *(void (**)(char *, uint64_t))(v19 + 8);
  v73(v25, v39);
  v74 = v70 == (_QWORD)v71;
  v66 = v128;
  if (v74)
    goto LABEL_16;
  v75 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v72, "rectForRowAtIndexPath:", v75);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v138.origin.x = v77;
  v138.origin.y = v79;
  v138.size.width = v81;
  v138.size.height = v83;
  if (v37 < CGRectGetMinY(v138))
    goto LABEL_16;
  v139.origin.x = v77;
  v139.origin.y = v79;
  v139.size.width = v81;
  v139.size.height = v83;
  if (CGRectGetMinY(v139) >= v37)
  {
    v73(v66, v39);
    v90 = 1;
    v87 = (uint64_t)v130;
    goto LABEL_18;
  }
  v84 = v129;
  v68(v129, v66, v39);
  result = (void (*)(uint64_t *, _QWORD))IndexPath.row.modify(v134);
  if (!__OFADD__(*v86, 1))
  {
    ++*v86;
    result(v134, 0);
    v73(v66, v39);
    v87 = (uint64_t)v130;
    v88 = v130;
    v89 = v84;
LABEL_17:
    v43(v88, v89, v39);
    v90 = 0;
LABEL_18:
    v33 = 1;
    v42((char *)v87, v90, 1, v39);
    v34 = v132;
    sub_10000F614(v87, v132, &qword_100646950);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void (*sub_10010F21C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>))(uint64_t *, _QWORD)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  void *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  Class isa;
  void *v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  BOOL v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void (*v73)(char *, uint64_t);
  BOOL v74;
  Class v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  char *v84;
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  double v91;
  double v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  __n128 v122;
  void (*v123)(char *, uint64_t, __n128);
  void (*v124)(char *, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135[5];
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;

  v132 = a2;
  v133 = a4;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v126 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v127 = (uint64_t)&v125 - v9;
  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v131 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v125 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v125 - v16;
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v125 - v23;
  __chkstk_darwin(v25);
  v130 = (char *)&v125 - v26;
  __chkstk_darwin(v27);
  v128 = (char *)&v125 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v125 - v30;
  sub_10000735C(a3, (uint64_t)v17, &qword_100646950);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v32(v17, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v17, &qword_100646950);
LABEL_3:
    v33 = 2;
    v34 = v133;
LABEL_26:
    v111 = sub_10002A750(&qword_100640ED0);
    return (void (*)(uint64_t *, _QWORD))swift_storeEnumTagMultiPayload(v34, v111, v33);
  }
  v125 = v24;
  v35 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v129 = v31;
  v35(v31, v17, v18);
  objc_msgSend(v132, "locationInView:", a1);
  v37 = v36;
  v38 = objc_msgSend(a1, "indexPathForRowAtPoint:");
  v39 = v18;
  if (v38)
  {
    v40 = v38;
    v41 = v130;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v38);

    v35(v14, v41, v39);
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v42(v14, 0, 1, v39);
    v43 = v35;
    if (v32(v14, 1, v39) != 1)
    {
      v44 = v19;
      v45 = v39;
      v46 = v128;
      v47 = (void (*)(uint64_t, char *, uint64_t))v43;
      v48 = v45;
      v49 = v47;
      ((void (*)(char *, char *))v47)(v128, v14);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a1, "rectForRowAtIndexPath:", isa);
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v58 = v57;

      *(_QWORD *)&v136.origin.x = v52;
      v136.origin.y = v54;
      v136.size.width = v56;
      v136.size.height = v58;
      v59 = CGRectGetHeight(v136) * 0.5;
      *(_QWORD *)&v137.origin.x = v52;
      v137.origin.y = v54;
      v137.size.width = v56;
      v137.size.height = v58;
      CGRectGetHeight(v137);
      v132 = v52;
      v138.origin.x = sub_100038048(*(double *)&v52, v54, v56, v58, v59, 0.0);
      x = v138.origin.x;
      y = v138.origin.y;
      width = v138.size.width;
      height = v138.size.height;
      if (v37 >= CGRectGetMinY(v138))
      {
        v141.origin.x = x;
        v141.origin.y = y;
        v141.size.width = width;
        v141.size.height = height;
        v64 = CGRectGetMaxY(v141) < v37;
      }
      else
      {
        v64 = 0;
      }
      v91 = *(double *)&v132;
      *(_QWORD *)&v142.origin.x = v132;
      v142.origin.y = v54;
      v142.size.width = v56;
      v142.size.height = v58;
      v92 = CGRectGetHeight(v142) * 0.2;
      v143.origin.x = v91;
      v143.origin.y = v54;
      v143.size.width = v56;
      v143.size.height = v58;
      CGRectGetHeight(v143);
      v144.origin.x = sub_100038048(v91, v54, v56, v58, v92, 0.0);
      v93 = v144.origin.x;
      v94 = v144.origin.y;
      v95 = v144.size.width;
      v96 = v144.size.height;
      v97 = 0;
      if (v37 >= CGRectGetMinY(v144))
      {
        v145.origin.x = v93;
        v145.origin.y = v94;
        v145.size.width = v95;
        v145.size.height = v96;
        if (CGRectGetMaxY(v145) >= v37)
          v97 = 1;
      }
      v98 = sub_10006B3DC();
      v100 = v99;
      v102 = v101;
      v103 = sub_1000F8FE4(v46, v98);
      swift_bridgeObjectRelease(v102);
      swift_bridgeObjectRelease(v100);
      swift_bridgeObjectRelease(v98);
      if (v103)
      {
        v104 = v103 + *(_QWORD *)(*(_QWORD *)v103 + 144);
        swift_beginAccess(v104, v135, 0, 0);
        v105 = v104;
        v106 = v126;
        sub_10002B1E8(v105, v126, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v107 = swift_release();
        v108 = v48;
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v129, v48, v107);
        v109 = v127;
        sub_10001F580(v106, v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v34 = v133;
        v49(v133, v46, v108);
        v110 = (int *)sub_10002A750(&qword_100646958);
        sub_10001F580(v109, v34 + v110[9], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v33 = 0;
        *(_BYTE *)(v34 + v110[10]) = v64;
        *(_BYTE *)(v34 + v110[11]) = v97;
        goto LABEL_26;
      }
      if (qword_10063D3D8 != -1)
        swift_once(&qword_10063D3D8, sub_10010E72C);
      v112 = type metadata accessor for Logger(0);
      sub_100012DC4(v112, (uint64_t)qword_100646710);
      v113 = v125;
      v114 = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 16))(v125, v46, v48);
      v115 = Logger.logObject.getter(v114);
      v116 = static os_log_type_t.fault.getter(v115);
      if (os_log_type_enabled(v115, v116))
      {
        v117 = (uint8_t *)swift_slowAlloc(12, -1);
        v118 = swift_slowAlloc(32, -1);
        v135[0] = v118;
        *(_DWORD *)v117 = 136315138;
        v132 = v117 + 4;
        v119 = IndexPath.description.getter(v118);
        v121 = v120;
        v134 = sub_100027E40(v119, v120, v135);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v132, v117 + 12);
        v122 = swift_bridgeObjectRelease(v121);
        v123 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
        v123(v113, v48, v122);
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "TTRITreeViewDropUpdateCoordinator: internal inconsistency: can't lookup item {at: %s}", v117, 0xCu);
        swift_arrayDestroy(v118, 1, &type metadata for Any[8]);
        swift_slowDealloc(v118, -1, -1);
        swift_slowDealloc(v117, -1, -1);

        ((void (*)(char *, uint64_t))v123)(v46, v48);
        ((void (*)(char *, uint64_t))v123)(v129, v48);
      }
      else
      {

        v124 = *(void (**)(char *, uint64_t))(v44 + 8);
        v124(v113, v48);
        v124(v46, v48);
        v124(v129, v48);
      }
      goto LABEL_3;
    }
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v42(v14, 1, 1, v18);
    v43 = v35;
  }
  v65 = sub_1000073A0((uint64_t)v14, &qword_100646950);
  v66 = v129;
  v67 = IndexPath.row.getter(v65);
  v68 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 16);
  v69 = v68(v21, v66, v39);
  if (!v67)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
LABEL_16:
    v87 = (uint64_t)v131;
    v88 = v131;
    v89 = v66;
    goto LABEL_17;
  }
  v70 = IndexPath.row.getter(v69);
  v71 = objc_msgSend(a1, "numberOfRowsInSection:", IndexPath.section.getter(v70));
  v72 = a1;
  v73 = *(void (**)(char *, uint64_t))(v19 + 8);
  v73(v21, v39);
  v74 = v70 == (_QWORD)v71;
  v66 = v129;
  if (v74)
    goto LABEL_16;
  v75 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v72, "rectForRowAtIndexPath:", v75);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  v83 = v82;

  v139.origin.x = v77;
  v139.origin.y = v79;
  v139.size.width = v81;
  v139.size.height = v83;
  if (v37 < CGRectGetMinY(v139))
    goto LABEL_16;
  v140.origin.x = v77;
  v140.origin.y = v79;
  v140.size.width = v81;
  v140.size.height = v83;
  if (CGRectGetMinY(v140) >= v37)
  {
    v73(v66, v39);
    v90 = 1;
    v87 = (uint64_t)v131;
    goto LABEL_18;
  }
  v84 = v130;
  v68(v130, v66, v39);
  result = (void (*)(uint64_t *, _QWORD))IndexPath.row.modify(v135);
  if (!__OFADD__(*v86, 1))
  {
    ++*v86;
    result(v135, 0);
    v73(v66, v39);
    v87 = (uint64_t)v131;
    v88 = v131;
    v89 = v84;
LABEL_17:
    v43(v88, v89, v39);
    v90 = 0;
LABEL_18:
    v33 = 1;
    v42((char *)v87, v90, 1, v39);
    v34 = v133;
    sub_10000F614(v87, v133, &qword_100646950);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void sub_10010FB44(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void (*v54)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  id v57;
  uint64_t *Strong;
  uint64_t v59;
  void **v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  int v73;
  _BYTE *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t *v150;
  uint64_t v151;
  _BYTE v152[32];

  v149 = a6;
  v150 = (uint64_t *)a7;
  v143 = a5;
  v151 = a4;
  v146 = a2;
  v142 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v142);
  v144 = (uint64_t)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100646A40);
  v11 = __chkstk_darwin(v10);
  v138 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v137 = (uint64_t)&v128 - v14;
  __chkstk_darwin(v13);
  v136 = (uint64_t)&v128 - v15;
  v141 = sub_10002A750(&qword_100646A48);
  v16 = __chkstk_darwin(v141);
  v134 = (uint64_t)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v132 = (uint64_t)&v128 - v19;
  __chkstk_darwin(v18);
  v130 = (uint64_t)&v128 - v20;
  v21 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v22 = __chkstk_darwin(v21);
  v135 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v133 = (uint64_t)&v128 - v25;
  __chkstk_darwin(v24);
  v131 = (uint64_t)&v128 - v26;
  v27 = sub_10002A750(&qword_100646A50);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v148 = (uint64_t)&v128 - v31;
  v32 = sub_10002A750(&qword_100646A58);
  __chkstk_darwin(v32);
  v34 = (char *)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10002A750(&qword_100646950);
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v128 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v40 = (char *)&v128 - v39;
  v41 = type metadata accessor for IndexPath(0);
  v42 = __chkstk_darwin(v41);
  v140 = (char *)&v128 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v45 = (char *)&v128 - v44;
  v46 = a1;
  v48 = v47;
  sub_10000735C(v46, (uint64_t)v40, &qword_100646950);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v49(v40, 1, v41) != 1)
  {
    v145 = a3;
    v147 = v48;
    v128 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v128(v45, v40, v41);
    v53 = sub_10002A750(&qword_100646A60);
    v54 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
    v139 = v34;
    v129 = v54;
    v54(v34, 1, 1, v53);
    v55 = objc_msgSend(v146, "localDragSession");
    v146 = v45;
    if (v55
      && (v57 = v55,
          swift_getObjectType(v55, v56),
          Strong = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v145 + qword_100646728) + qword_100645EF8),
          v59 = sub_1002A16D0(Strong),
          Strong,
          swift_unknownObjectRelease(v57),
          v59))
    {
      v60 = (void **)(v59 + qword_1006738F8);
      swift_beginAccess(v59 + qword_1006738F8, v152, 0, 0);
      v61 = *v60;
      swift_bridgeObjectRetain(v61);
      swift_release(v59);
    }
    else
    {
      v61 = &_swiftEmptySetSingleton;
    }
    v62 = v61[2];
    if (v62 == 1)
    {
      v63 = sub_10002CDC0((uint64_t)v61);
      v65 = v64;
      v67 = v66 & 1;
      v68 = v148;
      sub_10047892C(v63, v64, v66 & 1, (uint64_t)v61, v148);
      sub_10003E0E0(v63, v65, v67);
      v69 = v61;
      v70 = v68;
      swift_bridgeObjectRelease(v69);
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56);
      v71(v68, 0, 2, v41);
    }
    else
    {
      swift_bridgeObjectRelease(v61);
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56);
      v70 = v148;
      if (v62)
        v72 = 1;
      else
        v72 = 2;
      v71(v148, v72, 2, v41);
    }
    v52 = v149;
    sub_10000735C(v70, (uint64_t)v30, &qword_100646A50);
    v73 = v49(v30, 2, v41);
    if (v73)
    {
      if (v73 == 1)
      {
        v74 = v139;
        sub_1000073A0((uint64_t)v139, &qword_100646A58);
        v75 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
        v76 = v146;
        v75(&v74[*(int *)(v53 + 36)], v146, v41);
        *v74 = 0;
        v129(v74, 0, 1, v53);
        v77 = sub_10010755C();
        v79 = v78 & 1;
        v75(v38, v76, v41);
        v71((uint64_t)v38, 0, 1, v41);
        v80 = v138;
        sub_100108978(v77, v79, (uint64_t)v38, v138);
        swift_bridgeObjectRelease(v77);
        sub_1000073A0((uint64_t)v38, &qword_100646950);
        v81 = sub_10002A750(&qword_100640FF8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v80, 1, v81) == 1)
        {
          sub_1000073A0(v80, &qword_100646A40);
          v82 = 0;
          v51 = v151;
        }
        else
        {
          v92 = *(_QWORD *)(v80 + *(int *)(v81 + 48));
          v93 = v141;
          v94 = *(int *)(v141 + 48);
          v95 = v80;
          v96 = v134;
          sub_10001F580(v95, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(_QWORD *)(v96 + v94) = v92;
          v97 = *(_QWORD *)(v96 + *(int *)(v93 + 48));
          v98 = v96;
          v99 = v135;
          sub_10001F580(v98, v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v100 = *(int *)(v81 + 48);
          v101 = v144;
          sub_10002B1E8(v99, v144, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(_QWORD *)(v101 + v100) = v97;
          swift_storeEnumTagMultiPayload(v101, v142, 0);
          v51 = v151;
          sub_100066BA8(v101, v151, v143, (uint64_t)v52);
          v82 = v102;
          sub_1000073A0(v101, (uint64_t *)&unk_100640FE0);
          sub_10001F544(v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
        v103 = v150;
        v104 = (uint64_t)v139;
        v86 = v147;
        goto LABEL_27;
      }
      v87 = sub_10010755C();
      v89 = v88 & 1;
      v86 = v147;
      (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v38, v146, v41);
      v71((uint64_t)v38, 0, 1, v41);
      v90 = v136;
      sub_100108978(v87, v89, (uint64_t)v38, v136);
      swift_bridgeObjectRelease(v87);
      sub_1000073A0((uint64_t)v38, &qword_100646950);
      v91 = sub_10002A750(&qword_100640FF8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v90, 1, v91) != 1)
      {
        v116 = *(_QWORD *)(v90 + *(int *)(v91 + 48));
        v117 = v141;
        v118 = *(int *)(v141 + 48);
        v119 = v90;
        v120 = v130;
        sub_10001F580(v119, v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(_QWORD *)(v120 + v118) = v116;
        v121 = *(_QWORD *)(v120 + *(int *)(v117 + 48));
        v122 = v120;
        v123 = v131;
        sub_10001F580(v122, v131, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v124 = *(int *)(v91 + 48);
        v125 = v144;
        sub_10002B1E8(v123, v144, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(_QWORD *)(v125 + v124) = v121;
        swift_storeEnumTagMultiPayload(v125, v142, 0);
        v51 = v151;
        sub_100066BA8(v125, v151, v143, (uint64_t)v52);
        v82 = v126;
        sub_1000073A0(v125, (uint64_t *)&unk_100640FE0);
        sub_10001F544(v123, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        goto LABEL_26;
      }
      sub_1000073A0(v90, &qword_100646A40);
    }
    else
    {
      v83 = (uint64_t)v140;
      v128(v140, v30, v41);
      v84 = v137;
      sub_100109358(v83, v146, 0, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t *)&unk_100640E00, &qword_100646A68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, v137, (void (*)(uint64_t, char *, _QWORD))sub_10010B6B4, (uint64_t)&qword_100640FF8, (uint64_t)sub_10006B64C, (uint64_t)sub_1000F8FE4, (uint64_t)sub_100073338, (uint64_t)sub_1002BB9D8, (uint64_t)sub_1002BC048, (uint64_t)&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t)&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
      v85 = sub_10002A750(&qword_100640FF8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v84, 1, v85) != 1)
      {
        v105 = *(_QWORD *)(v84 + *(int *)(v85 + 48));
        v106 = v141;
        v107 = *(int *)(v141 + 48);
        v108 = v84;
        v109 = v132;
        sub_10001F580(v108, v132, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(_QWORD *)(v109 + v107) = v105;
        v110 = *(_QWORD *)(v109 + *(int *)(v106 + 48));
        v111 = v109;
        v112 = v133;
        sub_10001F580(v111, v133, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v113 = *(int *)(v85 + 48);
        v114 = v144;
        sub_10002B1E8(v112, v144, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(_QWORD *)(v114 + v113) = v110;
        swift_storeEnumTagMultiPayload(v114, v142, 0);
        v51 = v151;
        sub_100066BA8(v114, v151, v143, (uint64_t)v52);
        v82 = v115;
        sub_1000073A0(v114, (uint64_t *)&unk_100640FE0);
        sub_10001F544(v112, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v86 = v147;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v140, v41);
        goto LABEL_26;
      }
      sub_1000073A0(v84, &qword_100646A40);
      v86 = v147;
      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v83, v41);
    }
    v82 = 0;
    v51 = v151;
LABEL_26:
    v103 = v150;
    v104 = (uint64_t)v139;
LABEL_27:
    v127 = v148;
    sub_1001156F8(v148, v82 & 1, 0, 0, v104, &qword_100646A58, &qword_100646A60, &qword_100646A50, v103);
    sub_1000073A0(v127, &qword_100646A50);
    sub_1000073A0(v104, &qword_100646A58);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v146, v41);
    goto LABEL_28;
  }
  sub_1000073A0((uint64_t)v40, &qword_100646950);
  v50 = a3 + qword_1006736E0;
  swift_beginAccess(a3 + qword_1006736E0, v152, 0, 0);
  sub_10002B1E8(v50, (uint64_t)v150, type metadata accessor for TTRITreeViewDropProposal);
  v51 = v151;
  v52 = v149;
LABEL_28:
  swift_release(v51);

}

void sub_1001106C0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  void *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void *v121;
  uint64_t *v122;
  uint64_t v123;
  _BYTE v124[32];

  v120 = a3;
  v121 = (void *)a5;
  v122 = a6;
  v123 = a4;
  v117 = a2;
  v119 = (char *)a1;
  v116 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v116);
  v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100646980);
  __chkstk_darwin(v8);
  v113 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v112 = (uint64_t)&v102 - v11;
  __chkstk_darwin(v12);
  v111 = (uint64_t)&v102 - v13;
  v115 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v115);
  v109 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v107 = (uint64_t)&v102 - v16;
  __chkstk_darwin(v17);
  v105 = (uint64_t)&v102 - v18;
  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v19);
  v110 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v108 = (uint64_t)&v102 - v22;
  __chkstk_darwin(v23);
  v106 = (char *)&v102 - v24;
  v25 = sub_10002A750(&qword_100646990);
  __chkstk_darwin(v25);
  v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v102 - v29;
  v31 = sub_10002A750(&qword_100646998);
  __chkstk_darwin(v31);
  v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v34);
  v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v39 = (char *)&v102 - v38;
  v40 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v114 = (char *)&v102 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v45 = (char *)&v102 - v44;
  sub_10000735C((uint64_t)v119, (uint64_t)v39, &qword_100646950);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v46(v39, 1, v40) != 1)
  {
    v103 = v7;
    v104 = v41;
    v49 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v118 = v45;
    v49(v45, v39, v40);
    v50 = sub_10002A750(&qword_1006469A0);
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v119 = v33;
    v51(v33, 1, 1, v50);
    sub_10011557C(v117, (uint64_t)v30);
    v117 = v30;
    sub_10000735C((uint64_t)v30, (uint64_t)v27, &qword_100646990);
    v52 = v46(v27, 2, v40);
    v53 = v40;
    if (!v52)
    {
      v74 = (uint64_t)v114;
      v49(v114, v27, v40);
      v75 = v112;
      sub_100109358(v74, v118, 0, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t *)&unk_100640EB0, &qword_1006469B8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, v112, (void (*)(uint64_t, char *, _QWORD))sub_10010C50C, (uint64_t)&unk_1006469A8, (uint64_t)sub_10006B3DC, (uint64_t)sub_1000F8FE4, (uint64_t)sub_100073228, (uint64_t)sub_1002BB9FC, (uint64_t)sub_1002BC37C, (uint64_t)&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t)&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
      v76 = sub_10002A750((uint64_t *)&unk_1006469A8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v75, 1, v76) == 1)
      {
        sub_1000073A0(v75, (uint64_t *)&unk_100646980);
        v59 = v104;
        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v74, v40);
        v77 = 0;
        v47 = v121;
      }
      else
      {
        v82 = *(_QWORD *)(v75 + *(int *)(v76 + 48));
        v83 = v115;
        v84 = *(int *)(v115 + 48);
        v85 = v75;
        v86 = v107;
        sub_10001F580(v85, v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v86 + v84) = v82;
        v87 = *(_QWORD *)(v86 + *(int *)(v83 + 48));
        v88 = v108;
        sub_10001F580(v86, v108, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v89 = *(int *)(v76 + 48);
        v90 = (uint64_t)v103;
        sub_10002B1E8(v88, (uint64_t)v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v90 + v89) = v87;
        swift_storeEnumTagMultiPayload(v90, v116, 0);
        v47 = v121;
        sub_1002CE16C(v90, v123, (uint64_t)v121);
        v77 = v91;
        sub_1000073A0(v90, (uint64_t *)&unk_1006548F0);
        sub_10001F544(v88, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v59 = v104;
        (*(void (**)(char *, uint64_t))(v104 + 8))(v114, v53);
      }
      goto LABEL_14;
    }
    if (v52 == 1)
    {
      v54 = v119;
      sub_1000073A0((uint64_t)v119, &qword_100646998);
      v55 = v104;
      v56 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
      v57 = v118;
      v56(&v54[*(int *)(v50 + 36)], v118, v53);
      *v54 = 0;
      v58 = v50;
      v59 = v55;
      v51(v54, 0, 1, v58);
      v60 = sub_100107718();
      LOBYTE(v54) = v61 & 1;
      v56(v36, v57, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v36, 0, 1, v53);
      v62 = v113;
      sub_100108E68(v60, (char)v54, (uint64_t)v36, v113);
      swift_bridgeObjectRelease(v60);
      sub_1000073A0((uint64_t)v36, &qword_100646950);
      v63 = sub_10002A750((uint64_t *)&unk_1006469A8);
      v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63);
      v65 = (uint64_t)v121;
      if (v64 != 1)
      {
        v66 = *(_QWORD *)(v62 + *(int *)(v63 + 48));
        v67 = v115;
        v68 = v62;
        v69 = *(int *)(v115 + 48);
        v70 = v109;
        sub_10001F580(v68, v109, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v70 + v69) = v66;
        v71 = *(_QWORD *)(v70 + *(int *)(v67 + 48));
        v72 = v70;
        v73 = (uint64_t)v110;
LABEL_13:
        sub_10001F580(v72, v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v97 = *(int *)(v63 + 48);
        v98 = (uint64_t)v103;
        sub_10002B1E8(v73, (uint64_t)v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v98 + v97) = v71;
        swift_storeEnumTagMultiPayload(v98, v116, 0);
        v47 = (void *)v65;
        sub_1002CE16C(v98, v123, v65);
        v77 = v99;
        sub_1000073A0(v98, (uint64_t *)&unk_1006548F0);
        sub_10001F544(v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_14;
      }
    }
    else
    {
      v78 = sub_100107718();
      v80 = v79 & 1;
      v59 = v104;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v36, v118, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v36, 0, 1, v53);
      v62 = v111;
      sub_100108E68(v78, v80, (uint64_t)v36, v111);
      swift_bridgeObjectRelease(v78);
      sub_1000073A0((uint64_t)v36, &qword_100646950);
      v63 = sub_10002A750((uint64_t *)&unk_1006469A8);
      v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63);
      v65 = (uint64_t)v121;
      if (v81 != 1)
      {
        v92 = *(_QWORD *)(v62 + *(int *)(v63 + 48));
        v93 = v115;
        v94 = v62;
        v95 = *(int *)(v115 + 48);
        v96 = v105;
        sub_10001F580(v94, v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)(v96 + v95) = v92;
        v71 = *(_QWORD *)(v96 + *(int *)(v93 + 48));
        v72 = v96;
        v73 = (uint64_t)v106;
        goto LABEL_13;
      }
    }
    v47 = (void *)v65;
    sub_1000073A0(v62, (uint64_t *)&unk_100646980);
    v77 = 0;
LABEL_14:
    v100 = (uint64_t)v117;
    v101 = (uint64_t)v119;
    sub_1001156F8((uint64_t)v117, v77 & 1, 0, 0, (uint64_t)v119, &qword_100646998, &qword_1006469A0, &qword_100646990, v122);
    sub_1000073A0(v100, &qword_100646990);
    sub_1000073A0(v101, &qword_100646998);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v118, v53);
    goto LABEL_15;
  }
  v47 = v121;
  sub_1000073A0((uint64_t)v39, &qword_100646950);
  v48 = v120 + qword_1006736E0;
  swift_beginAccess(v120 + qword_1006736E0, v124, 0, 0);
  sub_10002B1E8(v48, (uint64_t)v122, type metadata accessor for TTRITreeViewDropProposal);
LABEL_15:
  swift_release();

}

void sub_100111074(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t *Strong;
  uint64_t v32;
  void **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char v55;
  char v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char v87[24];

  v84 = a3;
  v85 = (void *)a5;
  v82 = a4;
  v83 = a6;
  v80 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v80);
  v81 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100646A80);
  __chkstk_darwin(v9);
  v78 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10002A750(&qword_100646A88);
  __chkstk_darwin(v76);
  v75 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v79 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v15);
  v77 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v17);
  v86 = (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_100646A50);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v74 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v74 - v26;
  v28 = objc_msgSend(a1, "localDragSession");
  if (v28
    && (v30 = v28,
        swift_getObjectType(v28, v29),
        Strong = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(a2 + qword_100646728) + qword_100645EF8),
        v32 = sub_1002A16D0(Strong),
        Strong,
        swift_unknownObjectRelease(v30),
        v32))
  {
    v33 = (void **)(v32 + qword_1006738F8);
    swift_beginAccess(v32 + qword_1006738F8, v87, 0, 0);
    v34 = *v33;
    swift_bridgeObjectRetain(v34);
    swift_release(v32);
  }
  else
  {
    v34 = &_swiftEmptySetSingleton;
  }
  v35 = v34[2];
  if (v35 == 1)
  {
    v36 = sub_10002CDC0((uint64_t)v34);
    v38 = v37;
    v40 = v39 & 1;
    sub_10047892C(v36, v37, v39 & 1, (uint64_t)v34, (uint64_t)v27);
    sub_10003E0E0(v36, v38, v40);
    swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 2, v12);
  }
  else
  {
    swift_bridgeObjectRelease(v34);
    if (v35)
      v41 = 1;
    else
      v41 = 2;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v27, v41, 2, v12);
  }
  v42 = v86;
  v43 = sub_10002A750(&qword_100653E50);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v44(v42, 1, 4, v43);
  sub_10000735C((uint64_t)v27, (uint64_t)v25, &qword_100646A50);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v46 = v45(v25, 2, v12);
  if (!v46)
  {
    sub_1000073A0((uint64_t)v27, &qword_100646A50);
    sub_1000073A0((uint64_t)v25, &qword_100646A50);
    v51 = 0;
LABEL_22:
    v54 = v84;
    v53 = v85;
    goto LABEL_29;
  }
  if (v46 == 1)
  {
    v47 = sub_10010755C();
    v49 = v78;
    sub_10010D2F0(v47, v48 & 1, (unint64_t)v78);
    swift_bridgeObjectRelease(v47);
    v50 = sub_10002A750(qword_100646A90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50) == 1)
    {
      sub_1000073A0((uint64_t)v49, &qword_100646A80);
      sub_1000073A0((uint64_t)v27, &qword_100646A50);
LABEL_25:
      v51 = 0;
      v54 = v84;
      v53 = v85;
      v42 = v86;
      goto LABEL_29;
    }
    v58 = (uint64_t)v49;
    v59 = *(_QWORD *)&v49[*(int *)(v50 + 48)];
    v74 = v58 + *(int *)(v50 + 64);
    v61 = v75;
    v60 = v76;
    v62 = *(int *)(v76 + 48);
    v63 = v75 + *(int *)(v76 + 64);
    sub_10001F580(v58, v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)(v61 + v62) = v59;
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    v64(v63, v74, v12);
    v65 = *(_QWORD *)(v61 + *(int *)(v60 + 48));
    v66 = v61 + *(int *)(v60 + 64);
    v67 = v61;
    v68 = v77;
    sub_10001F580(v67, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v78 = (char *)v64;
    v64((uint64_t)v79, v66, v12);
    v69 = *(int *)(sub_10002A750(&qword_100640FF8) + 48);
    v70 = v81;
    sub_10002B1E8(v68, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)(v70 + v69) = v65;
    swift_storeEnumTagMultiPayload(v70, v80, 0);
    sub_100066BA8(v70, v84, v82, (uint64_t)v85);
    LOBYTE(v69) = v71;
    sub_1000073A0(v70, (uint64_t *)&unk_100640FE0);
    sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1000073A0((uint64_t)v27, &qword_100646A50);
    if ((v69 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v79, v12);
      goto LABEL_25;
    }
    v42 = v86;
    sub_10001F544(v86, type metadata accessor for TTRITreeViewDropProposal.Intent);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v42, v79, v12);
    v44(v42, 0, 4, v43);
    v51 = 3;
    goto LABEL_22;
  }
  v52 = v81;
  swift_storeEnumTagMultiPayload(v81, v80, 3);
  v54 = v84;
  v53 = v85;
  sub_100066BA8(v52, v84, v82, (uint64_t)v85);
  v56 = v55;
  sub_1000073A0(v52, (uint64_t *)&unk_100640FE0);
  if ((v56 & 1) != 0)
  {
    sub_10000735C((uint64_t)v27, (uint64_t)v22, &qword_100646A50);
    v57 = v45(v22, 2, v12);
    if (v57)
    {
      if (v57 == 1)
        v51 = 3;
      else
        v51 = 2;
    }
    else
    {
      sub_1000073A0((uint64_t)v22, &qword_100646A50);
      v51 = 3;
    }
  }
  else
  {
    v51 = 1;
  }
  sub_1000073A0((uint64_t)v27, &qword_100646A50);
LABEL_29:
  v72 = type metadata accessor for TTRITreeViewDropProposal(0);
  v73 = v83;
  sub_10001F580(v42, (uint64_t)v83 + *(int *)(v72 + 20), type metadata accessor for TTRITreeViewDropProposal.Intent);
  swift_release(v54);
  *v73 = v51;

}

void sub_100111730(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  void *v71;

  v70 = a4;
  v71 = (void *)a3;
  v69 = a2;
  v66 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v66);
  v67 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_1006469F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10002A750(&qword_1006469F8);
  __chkstk_darwin(v63);
  v62 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v65 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v13);
  v64 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_100646990);
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v60 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v60 - v25;
  sub_10011557C(a1, (uint64_t)&v60 - v25);
  v27 = sub_10002A750(&qword_100653E50);
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v68 = v17;
  v29 = v17;
  v30 = v10;
  v61 = v28;
  v28((uint64_t)v29, 1, 4, v27);
  sub_10000735C((uint64_t)v26, (uint64_t)v23, &qword_100646990);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v32 = v31(v23, 2, v10);
  if (!v32)
  {
    sub_1000073A0((uint64_t)v26, &qword_100646990);
    v36 = (uint64_t)v23;
    goto LABEL_6;
  }
  if (v32 == 1)
  {
    v33 = sub_100107718();
    sub_10010D764(v33, v34 & 1, (unint64_t)v8);
    swift_bridgeObjectRelease(v33);
    v35 = sub_10002A750((uint64_t *)&unk_100646A00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v8, 1, v35) == 1)
    {
      sub_1000073A0((uint64_t)v8, &qword_1006469F0);
      v36 = (uint64_t)v26;
LABEL_6:
      sub_1000073A0(v36, &qword_100646990);
      v37 = 0;
      v38 = v71;
      v39 = (uint64_t)v68;
      goto LABEL_18;
    }
    v44 = *(_QWORD *)&v8[*(int *)(v35 + 48)];
    v60 = &v8[*(int *)(v35 + 64)];
    v45 = v62;
    v46 = v63;
    v47 = *(int *)(v63 + 48);
    v48 = v62 + *(int *)(v63 + 64);
    sub_10001F580((uint64_t)v8, v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v45 + v47) = v44;
    v49 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v49(v48, v60, v30);
    v50 = *(_QWORD *)(v45 + *(int *)(v46 + 48));
    v51 = v45 + *(int *)(v46 + 64);
    v52 = v64;
    sub_10001F580(v45, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v62 = v11;
    v63 = (uint64_t)v49;
    v53 = v65;
    v49((uint64_t)v65, (char *)v51, v30);
    v54 = *(int *)(sub_10002A750((uint64_t *)&unk_1006469A8) + 48);
    v55 = v67;
    sub_10002B1E8(v52, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v55 + v54) = v50;
    swift_storeEnumTagMultiPayload(v55, v66, 0);
    v38 = v71;
    sub_1002CE16C(v55, v69, (uint64_t)v71);
    LOBYTE(v54) = v56;
    sub_1000073A0(v55, (uint64_t *)&unk_1006548F0);
    sub_10001F544(v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000073A0((uint64_t)v26, &qword_100646990);
    if ((v54 & 1) != 0)
    {
      v57 = v30;
      v39 = (uint64_t)v68;
      sub_10001F544((uint64_t)v68, type metadata accessor for TTRITreeViewDropProposal.Intent);
      ((void (*)(uint64_t, char *, uint64_t))v63)(v39, v53, v57);
      v61(v39, 0, 4, v27);
      v37 = 3;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v30);
      v37 = 0;
      v39 = (uint64_t)v68;
    }
  }
  else
  {
    v40 = v67;
    swift_storeEnumTagMultiPayload(v67, v66, 3);
    v38 = v71;
    sub_1002CE16C(v40, v69, (uint64_t)v71);
    v42 = v41;
    sub_1000073A0(v40, (uint64_t *)&unk_1006548F0);
    if ((v42 & 1) != 0)
    {
      sub_10000735C((uint64_t)v26, (uint64_t)v20, &qword_100646990);
      v43 = v31(v20, 2, v10);
      v39 = (uint64_t)v68;
      if (v43)
      {
        if (v43 == 1)
          v37 = 3;
        else
          v37 = 2;
      }
      else
      {
        sub_1000073A0((uint64_t)v20, &qword_100646990);
        v37 = 3;
      }
    }
    else
    {
      v37 = 1;
      v39 = (uint64_t)v68;
    }
    sub_1000073A0((uint64_t)v26, &qword_100646990);
  }
LABEL_18:
  v58 = type metadata accessor for TTRITreeViewDropProposal(0);
  v59 = v70;
  sub_10001F580(v39, (uint64_t)v70 + *(int *)(v58 + 20), type metadata accessor for TTRITreeViewDropProposal.Intent);
  swift_release();
  *v59 = v37;

}

void sub_100111CE4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t *Strong;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int v68;
  int v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  _BYTE *v76;
  void (*v77)(char *, _QWORD);
  _QWORD *v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, _QWORD);
  _QWORD *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  char v119;
  id v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  id v144;
  _BYTE *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157[24];
  char v158[8];
  char v159[8];
  char v160[8];
  char v161[8];

  v139 = a5;
  v155 = a1;
  v143 = a7;
  v11 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v11);
  v138 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100646A40);
  __chkstk_darwin(v13);
  v136 = (uint64_t)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_10002A750(&qword_100646A48);
  __chkstk_darwin(v129);
  v128 = (uint64_t)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for IndexPath(0);
  v148 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v137 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v134 = (char *)&v128 - v23;
  v24 = __chkstk_darwin(v22);
  v147 = (char *)&v128 - v25;
  v26 = __chkstk_darwin(v24);
  v135 = (char *)&v128 - v27;
  __chkstk_darwin(v26);
  v140 = (char *)&v128 - v28;
  v29 = sub_10002A750(&qword_100646A50);
  v30 = __chkstk_darwin(v29);
  v146 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v153 = (uint64_t)&v128 - v32;
  v33 = sub_10002A750(&qword_100646A58);
  v34 = __chkstk_darwin(v33);
  v133 = (char *)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v154 = (uint64_t)&v128 - v36;
  swift_retain_n(a4, 2);
  v37 = a6;
  v152 = a4;
  swift_retain_n(a4, 5);
  v144 = v37;
  v38 = objc_msgSend(a2, "localDragSession");
  v156 = a3;
  v131 = v11;
  v130 = v18;
  if (v38)
  {
    v40 = v38;
    swift_getObjectType(v38, v39);
    Strong = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(a3 + qword_100646728) + qword_100645EF8);
    v42 = sub_1002A16D0(Strong);

    swift_unknownObjectRelease(v40);
    if (v42)
    {
      v43 = (_QWORD *)(v42 + qword_1006738F8);
      swift_beginAccess(v42 + qword_1006738F8, v157, 0, 0);
      v44 = (void *)*v43;
      swift_bridgeObjectRetain(*v43);
      swift_release(v42);
    }
    else
    {
      v44 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    v44 = &_swiftEmptySetSingleton;
  }
  v45 = swift_allocObject(&unk_1005F2018, 17, 7);
  v142 = v45;
  *(_BYTE *)(v45 + 16) = 0;
  v149 = (_BYTE *)(v45 + 16);
  v46 = swift_allocObject(&unk_1005F2018, 17, 7);
  v150 = v46;
  *(_BYTE *)(v46 + 16) = 0;
  v141 = v46 + 16;
  v47 = swift_allocObject(&unk_1005F2018, 17, 7);
  v151 = v47;
  *(_BYTE *)(v47 + 16) = 0;
  v145 = (_BYTE *)(v47 + 16);
  v48 = sub_10002A750(&qword_100646A60);
  v132 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v132(v154, 1, 1, v48);
  v49 = objc_msgSend(a2, "localDragSession");
  if (v49
    && (v51 = v49,
        swift_getObjectType(v49, v50),
        v52 = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v156 + qword_100646728) + qword_100645EF8),
        v53 = sub_1002A16D0(v52),
        v52,
        swift_unknownObjectRelease(v51),
        v53))
  {
    v54 = (_QWORD *)(v53 + qword_1006738F8);
    swift_beginAccess(v53 + qword_1006738F8, v158, 0, 0);
    v55 = (_QWORD *)*v54;
    swift_bridgeObjectRetain(*v54);
    swift_release(v53);
  }
  else
  {
    v55 = &_swiftEmptySetSingleton;
  }
  v56 = v55[2];
  if (v56 == 1)
  {
    v57 = sub_10002CDC0((uint64_t)v55);
    v59 = v58;
    v61 = v60 & 1;
    v62 = v153;
    sub_10047892C(v57, v58, v60 & 1, (uint64_t)v55, v153);
    sub_10003E0E0(v57, v59, v61);
    swift_bridgeObjectRelease(v55);
    v63 = v148;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v62, 0, 2, v19);
  }
  else
  {
    swift_bridgeObjectRelease(v55);
    v63 = v148;
    if (v56)
    {
      v62 = v153;
      v64 = v153;
      v65 = 1;
    }
    else
    {
      v62 = v153;
      v64 = v153;
      v65 = 2;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v64, v65, 2, v19);
  }
  v66 = v147;
  v67 = (uint64_t)v146;
  v68 = sub_10037B850(v155, (uint64_t)v44);
  swift_bridgeObjectRelease(v44);
  sub_10000735C(v62, v67, &qword_100646A50);
  v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v67, 2, v19);
  if (!v69)
  {
    v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32);
    v90((uint64_t)v140, v67, v19);
    v91 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v66, v155, v19);
    v92 = sub_10002A750(&qword_100646A10);
    v85 = v150;
    v93 = (uint64_t)v138;
    if ((*(_BYTE *)(v91 + *(int *)(v92 + 40)) & 1) != 0)
    {
      v94 = (void (*)(char *, _QWORD))IndexPath.row.modify(v159);
      if (__OFADD__(*v95, 1))
        goto LABEL_38;
      ++*v95;
      v94(v159, 0);
    }
    v96 = v66;
    v97 = v135;
    v90((uint64_t)v135, (uint64_t)v96, v19);
    v98 = v136;
    sub_100109358((uint64_t)v140, v97, 0, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t *)&unk_100640E00, &qword_100646A68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, v136, (void (*)(uint64_t, char *, _QWORD))sub_10010B6B4, (uint64_t)&qword_100640FF8, (uint64_t)sub_10006B64C, (uint64_t)sub_1000F8FE4, (uint64_t)sub_100073338, (uint64_t)sub_1002BB9D8, (uint64_t)sub_1002BC048, (uint64_t)&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t)&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
    v99 = *(void (**)(char *, uint64_t))(v63 + 8);
    v148 = v19;
    v99(v97, v19);
    v100 = sub_10002A750(&qword_100640FF8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48))(v98, 1, v100) == 1)
    {
      sub_1000073A0(v98, &qword_100646A40);
      v101 = v152;
      v102 = v139;
      v76 = v145;
      v70 = v144;
      if ((v68 & 1) != 0)
        goto LABEL_34;
    }
    else
    {
      v147 = (char *)v99;
      v107 = *(_QWORD *)(v98 + *(int *)(v100 + 48));
      v108 = v129;
      v109 = *(int *)(v129 + 48);
      v110 = v98;
      v111 = v128;
      sub_10001F580(v110, v128, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      *(_QWORD *)(v111 + v109) = v107;
      v112 = *(_QWORD *)(v111 + *(int *)(v108 + 48));
      v113 = (uint64_t)v130;
      sub_10001F580(v111, (uint64_t)v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v114 = *(int *)(v100 + 48);
      sub_10002B1E8(v113, v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      *(_QWORD *)(v93 + v114) = v112;
      v115 = v131;
      swift_storeEnumTagMultiPayload(v93, v131, 0);
      v101 = v152;
      v102 = v139;
      v70 = v144;
      sub_100066BA8(v93, v152, v139, (uint64_t)v144);
      v117 = v116;
      sub_1000073A0(v93, (uint64_t *)&unk_100640FE0);
      *v149 = v117 & 1;
      if ((v68 & 1) != 0)
      {
        sub_10001F544(v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v85 = v150;
        v76 = v145;
        ((void (*)(char *, uint64_t))v147)(v140, v148);
LABEL_35:
        v84 = v142;
        goto LABEL_36;
      }
      v118 = *(int *)(v100 + 48);
      sub_10002B1E8(v113, v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      *(_QWORD *)(v93 + v118) = v112;
      swift_storeEnumTagMultiPayload(v93, v115, 2);
      sub_100066BA8(v93, v101, v102, (uint64_t)v70);
      LOBYTE(v118) = v119;
      sub_1000073A0(v93, (uint64_t *)&unk_100640FE0);
      sub_10001F544(v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v76 = v145;
      *v145 = v118 & 1;
      v85 = v150;
      v99 = (void (*)(char *, uint64_t))v147;
    }
    swift_retain(v101);
    v120 = v70;
    sub_1001182A8(v156, v155, v85, v101, v102, (uint64_t)v120);
    swift_release(v101);

LABEL_34:
    v99(v140, v148);
    goto LABEL_35;
  }
  v70 = v144;
  v71 = v156;
  if (v69 != 1)
  {
    v103 = v152;
    swift_retain(v152);
    v104 = v70;
    v105 = v155;
    v84 = v142;
    v106 = v139;
    sub_100118580(v71, v155, v142, v103, v139, (uint64_t)v104, 0);
    v85 = v150;
    sub_1001182A8(v71, v105, v150, v103, v106, (uint64_t)v104);
    sub_100118580(v71, v105, v151, v103, v106, (uint64_t)v104, 2u);
    swift_release(v103);

    v76 = v145;
LABEL_36:
    swift_beginAccess(v149, v159, 0, 0);
    v121 = *(unsigned __int8 *)(v84 + 16);
    swift_beginAccess(v141, v161, 0, 0);
    v122 = *(unsigned __int8 *)(v85 + 16);
    swift_beginAccess(v76, v160, 0, 0);
    v123 = v151;
    v124 = v85;
    v125 = v153;
    v126 = v121;
    v127 = v154;
    sub_1001156F8(v153, v126, v122, *(unsigned __int8 *)(v151 + 16), v154, &qword_100646A58, &qword_100646A60, &qword_100646A50, v143);
    sub_1000073A0(v125, &qword_100646A50);
    sub_1000073A0(v127, &qword_100646A58);

    swift_release_n(v152, 8);
    swift_release(v84);
    swift_release(v124);
    swift_release(v123);
    return;
  }
  LODWORD(v148) = v68;
  v72 = sub_10002A750(&qword_100646A10);
  v73 = v155;
  v74 = *(_BYTE *)(v155 + *(int *)(v72 + 44));
  v75 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v137, v155, v19);
  v76 = v145;
  if ((*(_BYTE *)(v73 + *(int *)(v72 + 40)) & 1) == 0)
    goto LABEL_21;
  v77 = (void (*)(char *, _QWORD))IndexPath.row.modify(v159);
  if (!__OFADD__(*v78, 1))
  {
    ++*v78;
    v77(v159, 0);
LABEL_21:
    v79 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    v80 = v134;
    v79(v134, v75, v19);
    v81 = v154;
    sub_1000073A0(v154, &qword_100646A58);
    v82 = (uint64_t)v133;
    *v133 = v74;
    v79((char *)(v82 + *(int *)(v48 + 36)), v80, v19);
    v132(v82, 0, 1, v48);
    sub_10000F614(v82, v81, &qword_100646A58);
    v83 = v152;
    v84 = v142;
    v85 = v150;
    v86 = v156;
    if ((v148 & 1) == 0)
    {
      swift_retain(v152);
      v87 = v70;
      v88 = v155;
      v89 = v139;
      sub_100118580(v86, v155, v84, v83, v139, (uint64_t)v87, 0);
      sub_1001182A8(v86, v88, v85, v83, v89, (uint64_t)v87);
      sub_100118580(v86, v88, v151, v83, v89, (uint64_t)v87, 2u);
      swift_release(v83);

    }
    goto LABEL_36;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_100112A7C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t *Strong;
  uint64_t v42;
  void **v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(_BYTE *, _QWORD);
  _QWORD *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  void (*v77)(uint64_t, char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(_BYTE *, _QWORD);
  _QWORD *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  char v104;
  id v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  int v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  _BYTE *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136[24];
  _BYTE v137[24];
  char v138[8];
  char v139[4];

  v130 = a1;
  v125 = a6;
  v112 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v112);
  v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100646980);
  __chkstk_darwin(v12);
  v116 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v111);
  v110 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v15);
  v120 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for IndexPath(0);
  v128 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v119 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v117 = (char *)&v110 - v19;
  __chkstk_darwin(v20);
  v118 = (char *)&v110 - v21;
  __chkstk_darwin(v22);
  v115 = (char *)&v110 - v23;
  __chkstk_darwin(v24);
  v123 = (char *)&v110 - v25;
  v26 = sub_10002A750(&qword_100646990);
  __chkstk_darwin(v26);
  v28 = (char *)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v133 = (uint64_t)&v110 - v30;
  v31 = sub_10002A750(&qword_100646998);
  __chkstk_darwin(v31);
  v33 = (char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v110 - v35;
  swift_retain_n(a4, 2);
  v37 = a5;
  v126 = a4;
  swift_retain_n(a4, 5);
  v127 = v37;
  v38 = objc_msgSend(a2, "localDragSession");
  v134 = a3;
  v113 = v11;
  if (v38
    && (v40 = v38,
        swift_getObjectType(v38, v39),
        Strong = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(a3 + qword_100646728) + qword_100645EF8),
        v42 = sub_1002A16D0(Strong),
        Strong,
        swift_unknownObjectRelease(v40),
        v42))
  {
    v43 = (void **)(v42 + qword_1006738F8);
    swift_beginAccess(v42 + qword_1006738F8, v136, 0, 0);
    v44 = *v43;
    swift_bridgeObjectRetain(v44);
    swift_release();
  }
  else
  {
    v44 = &_swiftEmptySetSingleton;
  }
  v45 = swift_allocObject(&unk_1005F2018, 17, 7);
  v124 = v45;
  *(_BYTE *)(v45 + 16) = 0;
  v129 = (_BYTE *)(v45 + 16);
  v46 = swift_allocObject(&unk_1005F2018, 17, 7);
  v132 = v46;
  *(_BYTE *)(v46 + 16) = 0;
  v122 = v46 + 16;
  v47 = swift_allocObject(&unk_1005F2018, 17, 7);
  v131 = v47;
  *(_BYTE *)(v47 + 16) = 0;
  v121 = (_BYTE *)(v47 + 16);
  v48 = sub_10002A750(&qword_1006469A0);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v50 = v36;
  v49(v36, 1, 1, v48);
  v51 = v133;
  sub_10011557C(a2, v133);
  v52 = v130;
  v53 = sub_10037B850(v130, (uint64_t)v44);
  swift_bridgeObjectRelease(v44);
  sub_10000735C(v51, (uint64_t)v28, &qword_100646990);
  v54 = v128;
  v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48))(v28, 2, v135);
  if (!v55)
  {
    v114 = v53;
    v74 = v127;
    v77 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
    v78 = v135;
    v77((uint64_t)v123, v28, v135);
    v79 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v118, v52, v78);
    v80 = sub_10002A750(&qword_100646958);
    v81 = (uint64_t)v120;
    if ((*(_BYTE *)(v52 + *(int *)(v80 + 40)) & 1) != 0)
    {
      v82 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v137);
      if (__OFADD__(*v83, 1))
        goto LABEL_26;
      ++*v83;
      v82(v137, 0);
    }
    v119 = v50;
    v84 = v115;
    v85 = v79;
    v86 = v135;
    v77((uint64_t)v115, v85, v135);
    v87 = v116;
    sub_100109358((uint64_t)v123, v84, 0, 0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t *)&unk_100640EB0, &qword_1006469B8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, v116, (void (*)(uint64_t, char *, _QWORD))sub_10010C50C, (uint64_t)&unk_1006469A8, (uint64_t)sub_10006B3DC, (uint64_t)sub_1000F8FE4, (uint64_t)sub_100073228, (uint64_t)sub_1002BB9FC, (uint64_t)sub_1002BC37C, (uint64_t)&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t)&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
    v88 = *(void (**)(char *, uint64_t))(v54 + 8);
    v88(v84, v86);
    v89 = sub_10002A750((uint64_t *)&unk_1006469A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v87, 1, v89) == 1)
    {
      sub_1000073A0(v87, (uint64_t *)&unk_100646980);
      v67 = v126;
      v70 = v132;
      v72 = v121;
      if ((v114 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      v92 = *(_QWORD *)(v87 + *(int *)(v89 + 48));
      v93 = v111;
      v94 = *(int *)(v111 + 48);
      v95 = v87;
      v96 = v110;
      sub_10001F580(v95, v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)(v96 + v94) = v92;
      v97 = *(_QWORD *)(v96 + *(int *)(v93 + 48));
      sub_10001F580(v96, v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v98 = *(int *)(v89 + 48);
      v99 = (uint64_t)v113;
      sub_10002B1E8(v81, (uint64_t)v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)(v99 + v98) = v97;
      v100 = v112;
      swift_storeEnumTagMultiPayload(v99, v112, 0);
      v67 = v126;
      sub_1002CE16C(v99, v126, (uint64_t)v74);
      v102 = v101;
      sub_1000073A0(v99, (uint64_t *)&unk_1006548F0);
      *v129 = v102 & 1;
      if ((v114 & 1) != 0)
      {
        sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v70 = v132;
        v72 = v121;
LABEL_23:
        v88(v123, v135);
        v71 = v131;
        v73 = (uint64_t)v119;
        v69 = v124;
        goto LABEL_24;
      }
      v103 = *(int *)(v89 + 48);
      sub_10002B1E8(v81, v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)(v99 + v103) = v97;
      swift_storeEnumTagMultiPayload(v99, v100, 2);
      sub_1002CE16C(v99, v67, (uint64_t)v74);
      LOBYTE(v103) = v104;
      sub_1000073A0(v99, (uint64_t *)&unk_1006548F0);
      sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v72 = v121;
      *v121 = v103 & 1;
      v70 = v132;
    }
    swift_retain();
    v105 = v74;
    sub_10011891C(v134, v130, v70, v67, (uint64_t)v105);
    swift_release();

    goto LABEL_23;
  }
  if (v55 != 1)
  {
    v67 = v126;
    swift_retain();
    v74 = v127;
    v90 = v127;
    v91 = v134;
    v69 = v124;
    sub_100118BEC(v134, v52, v124, v67, (uint64_t)v90, 0);
    v70 = v132;
    sub_10011891C(v91, v52, v132, v67, (uint64_t)v90);
    v71 = v131;
    sub_100118BEC(v91, v52, v131, v67, (uint64_t)v90, 2u);
    swift_release();

    v73 = (uint64_t)v50;
    v72 = v121;
LABEL_24:
    swift_beginAccess(v129, v137, 0, 0);
    v106 = *(unsigned __int8 *)(v69 + 16);
    swift_beginAccess(v122, v139, 0, 0);
    v107 = *(unsigned __int8 *)(v70 + 16);
    swift_beginAccess(v72, v138, 0, 0);
    v108 = *(unsigned __int8 *)(v71 + 16);
    v109 = v133;
    sub_1001156F8(v133, v106, v107, v108, v73, &qword_100646998, &qword_1006469A0, &qword_100646990, v125);
    sub_1000073A0(v109, &qword_100646990);
    sub_1000073A0(v73, &qword_100646998);

    swift_release_n(v67, 8);
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v114 = v53;
  v56 = v117;
  v57 = sub_10002A750(&qword_100646958);
  v58 = *(_BYTE *)(v52 + *(int *)(v57 + 44));
  v59 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v119, v52, v135);
  v60 = *(int *)(v57 + 40);
  v61 = v59;
  v62 = (uint64_t)v50;
  if ((*(_BYTE *)(v52 + v60) & 1) == 0)
    goto LABEL_10;
  v63 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v137);
  if (!__OFADD__(*v64, 1))
  {
    ++*v64;
    v63(v137, 0);
LABEL_10:
    v65 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v66 = v135;
    v65(v56, v61, v135);
    sub_1000073A0(v62, &qword_100646998);
    *v33 = v58;
    v65(&v33[*(int *)(v48 + 36)], v56, v66);
    v49(v33, 0, 1, v48);
    sub_10000F614((uint64_t)v33, v62, &qword_100646998);
    v67 = v126;
    v68 = v134;
    v69 = v124;
    v71 = v131;
    v70 = v132;
    v72 = v121;
    v73 = v62;
    v74 = v127;
    if ((v114 & 1) == 0)
    {
      swift_retain();
      v75 = v74;
      v76 = v130;
      sub_100118BEC(v68, v130, v69, v67, (uint64_t)v75, 0);
      sub_10011891C(v68, v76, v70, v67, (uint64_t)v75);
      sub_100118BEC(v68, v76, v71, v67, (uint64_t)v75, 2u);
      swift_release();

    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_100113630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1006736E0;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100118F80(a1, v3);
  return swift_endAccess(v5);
}

uint64_t sub_100113688()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  __n128 v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v1 = *v0;
  v2 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v5);
  v7 = type metadata accessor for Optional(0, updated);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v19[-v10 - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(updated - 8) + 56))(&v19[-v10 - 8], 1, 1, updated, v9);
  v12 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  v13 = swift_beginAccess(v12, v19, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v8 + 40))(v12, v11, v7, v13);
  swift_endAccess(v19);
  v14 = (char *)v4 + *(int *)(v2 + 20);
  v15 = sub_10002A750(&qword_100653E50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 4, v15);
  *v4 = 0;
  v16 = (uint64_t)v0 + qword_1006736E0;
  swift_beginAccess(v16, v19, 33, 0);
  sub_100076238((uint64_t)v4, v16);
  return swift_endAccess(v19);
}

id sub_100113804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  void *v21;
  uint64_t v22;
  id v23;
  double v24;
  void *v25;
  char v26;
  char v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  char **v36;
  id v37;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[40];
  _QWORD v42[4];
  char v43;

  v1 = v0;
  v2 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v2);
  v4 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v5);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v8);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = (_QWORD *)(v1 + qword_1006736E0);
  swift_beginAccess(v1 + qword_1006736E0, v40, 0, 0);
  sub_10002B1E8((uint64_t)v15, (uint64_t)v10, type metadata accessor for TTRITreeViewDropProposal);
  sub_10001F580((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)v7, type metadata accessor for TTRITreeViewDropProposal.Intent);
  v16 = sub_10002A750(&qword_100653E50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v7, 4, v16))
  {
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRITreeViewDropProposal.Intent);
    goto LABEL_6;
  }
  v17 = (uint64_t)v4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v7, v11);
  if (*v15 != 3
    || (v18 = v1 + qword_1006736E8,
        swift_beginAccess(v1 + qword_1006736E8, v39, 0, 0),
        v19 = sub_10002A750((uint64_t *)&unk_100654900),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19)))
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  v21 = *(void **)(v18 + 8);
  v22 = qword_10063D5B0;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_10063D5B0, sub_10028ADB4);
  v24 = *(double *)&qword_100673758;
  v25 = sub_1001078D4();
  v27 = v26 & 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  sub_1000F3964((uint64_t)v25, v27, v17, (uint64_t)v41, v24);
  swift_bridgeObjectRelease(v25);
  sub_1000073A0(v17, &qword_100646950);
  sub_10000F614((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_1006547A0);
  if (v43 == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

LABEL_6:
    result = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
    if (result)
      return objc_msgSend(result, "removeFromSuperview");
    return result;
  }
  v28 = *(double *)v42;
  v29 = *(double *)&v42[1];
  v30 = *(double *)&v42[2];
  v31 = *(double *)&v42[3];
  v32 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  if (v32)
  {
    v33 = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  }
  else
  {
    v33 = sub_100113C04(v1);
    v32 = 0;
  }
  v34 = v32;
  v35 = objc_msgSend(v33, "superview");
  v36 = &selRef_addSubview_;
  if (v35)
  {
    v37 = v35;

    if (v37 == v23)
      v36 = &selRef_bringSubviewToFront_;
  }
  objc_msgSend(v23, *v36, v33);
  objc_msgSend(v33, "setFrame:", v28, v29, v30, v31);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_100113C04(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRITreeViewMultiRowReorderingDropIndicatorView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  v4 = *(void **)(a1 + v3);
  *(_QWORD *)(a1 + v3) = v2;
  v5 = v2;

  return v5;
}

id sub_100113C68()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  if (result)
    return objc_msgSend(result, "removeFromSuperview");
  return result;
}

BOOL sub_100113C88(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100113C98(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int sub_100113CBC(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t sub_100113D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = type metadata accessor for IndexPath(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_10002A750(&qword_100646948);
  __chkstk_darwin(v45);
  v48 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100646950);
  v7 = __chkstk_darwin(v6);
  v44 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v46 = (uint64_t)&v42 - v9;
  v10 = sub_10002A750(&qword_100646A10);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640E40);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v42 - v17;
  v19 = sub_10002A750((uint64_t *)&unk_100646A30);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_10000735C(a1, (uint64_t)v22, (uint64_t *)&unk_100640E40);
  sub_10000735C(a2, v23, (uint64_t *)&unk_100640E40);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v13);
  if (!EnumCaseMultiPayload)
  {
    sub_10000735C((uint64_t)v22, (uint64_t)v18, (uint64_t *)&unk_100640E40);
    if (!swift_getEnumCaseMultiPayload(v23, v13))
    {
      sub_10000F614(v23, (uint64_t)v12, &qword_100646A10);
      v35 = sub_100114C48((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_100646A10, (void (*)(uint64_t))&TTRAccountsListsViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *, char *))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
      sub_1000073A0((uint64_t)v12, &qword_100646A10);
      sub_1000073A0((uint64_t)v18, &qword_100646A10);
LABEL_24:
      v34 = (uint64_t *)&unk_100640E40;
      goto LABEL_25;
    }
    v31 = &qword_100646A10;
    v32 = (uint64_t)v18;
LABEL_16:
    sub_1000073A0(v32, v31);
    v35 = 0;
    v34 = (uint64_t *)&unk_100646A30;
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10000735C((uint64_t)v22, (uint64_t)v16, (uint64_t *)&unk_100640E40);
    if (swift_getEnumCaseMultiPayload(v23, v13) == 1)
    {
      v25 = v46;
      sub_10000F614(v23, v46, &qword_100646950);
      v26 = v48;
      v27 = v48 + *(int *)(v45 + 48);
      sub_10000F614((uint64_t)v16, v48, &qword_100646950);
      sub_10000735C(v25, v27, &qword_100646950);
      v28 = v47;
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      v30 = v49;
      if (v29(v26, 1, v49) == 1)
      {
        sub_1000073A0(v25, &qword_100646950);
        if (v29(v27, 1, v30) == 1)
        {
          sub_1000073A0(v26, &qword_100646950);
LABEL_22:
          v35 = 1;
          goto LABEL_24;
        }
      }
      else
      {
        v36 = v44;
        sub_10000735C(v26, v44, &qword_100646950);
        if (v29(v27, 1, v30) != 1)
        {
          v37 = v43;
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v43, v27, v30);
          v38 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
          v39 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v30, v38);
          v40 = *(void (**)(char *, uint64_t))(v28 + 8);
          v40(v37, v30);
          sub_1000073A0(v25, &qword_100646950);
          v40((char *)v36, v30);
          sub_1000073A0(v26, &qword_100646950);
          if ((v39 & 1) != 0)
            goto LABEL_22;
LABEL_23:
          v35 = 0;
          goto LABEL_24;
        }
        sub_1000073A0(v25, &qword_100646950);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v36, v30);
      }
      sub_1000073A0(v26, &qword_100646948);
      goto LABEL_23;
    }
    v31 = &qword_100646950;
    v32 = (uint64_t)v16;
    goto LABEL_16;
  }
  v33 = swift_getEnumCaseMultiPayload(v23, v13);
  if (v33 == 2)
    v34 = (uint64_t *)&unk_100640E40;
  else
    v34 = (uint64_t *)&unk_100646A30;
  if (v33 == 2)
    v35 = -1;
  else
    v35 = 0;
LABEL_25:
  sub_1000073A0((uint64_t)v22, v34);
  return v35 & 1;
}

uint64_t sub_1001141E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = type metadata accessor for IndexPath(0);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_10002A750(&qword_100646948);
  __chkstk_darwin(v45);
  v48 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v44 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v46 = (uint64_t)&v42 - v9;
  v10 = sub_10002A750(&qword_100646958);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100640ED0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  v19 = sub_10002A750((uint64_t *)&unk_100646970);
  __chkstk_darwin(v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v21[*(int *)(v22 + 48)];
  sub_10000735C(a1, (uint64_t)v21, &qword_100640ED0);
  sub_10000735C(a2, v23, &qword_100640ED0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v13);
  if (!EnumCaseMultiPayload)
  {
    sub_10000735C((uint64_t)v21, (uint64_t)v18, &qword_100640ED0);
    if (!swift_getEnumCaseMultiPayload(v23, v13))
    {
      sub_10000F614(v23, (uint64_t)v12, &qword_100646958);
      v35 = sub_100114C48((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_100646958, (void (*)(uint64_t))&TTRRemindersListViewModel.Item.treeItemIdentifier.getter, (uint64_t (*)(char *, char *))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
      sub_1000073A0((uint64_t)v12, &qword_100646958);
      sub_1000073A0((uint64_t)v18, &qword_100646958);
LABEL_24:
      v34 = &qword_100640ED0;
      goto LABEL_25;
    }
    v31 = &qword_100646958;
    v32 = (uint64_t)v18;
LABEL_16:
    sub_1000073A0(v32, v31);
    v35 = 0;
    v34 = (uint64_t *)&unk_100646970;
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10000735C((uint64_t)v21, (uint64_t)v15, &qword_100640ED0);
    if (swift_getEnumCaseMultiPayload(v23, v13) == 1)
    {
      v25 = v46;
      sub_10000F614(v23, v46, &qword_100646950);
      v26 = v48;
      v27 = v48 + *(int *)(v45 + 48);
      sub_10000F614((uint64_t)v15, v48, &qword_100646950);
      sub_10000735C(v25, v27, &qword_100646950);
      v28 = v47;
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      v30 = v49;
      if (v29(v26, 1, v49) == 1)
      {
        sub_1000073A0(v25, &qword_100646950);
        if (v29(v27, 1, v30) == 1)
        {
          sub_1000073A0(v26, &qword_100646950);
LABEL_22:
          v35 = 1;
          goto LABEL_24;
        }
      }
      else
      {
        v36 = v44;
        sub_10000735C(v26, v44, &qword_100646950);
        if (v29(v27, 1, v30) != 1)
        {
          v37 = v43;
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v43, v27, v30);
          v38 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
          v39 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37, v30, v38);
          v40 = *(void (**)(char *, uint64_t))(v28 + 8);
          v40(v37, v30);
          sub_1000073A0(v25, &qword_100646950);
          v40((char *)v36, v30);
          sub_1000073A0(v26, &qword_100646950);
          if ((v39 & 1) != 0)
            goto LABEL_22;
LABEL_23:
          v35 = 0;
          goto LABEL_24;
        }
        sub_1000073A0(v25, &qword_100646950);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v36, v30);
      }
      sub_1000073A0(v26, &qword_100646948);
      goto LABEL_23;
    }
    v31 = &qword_100646950;
    v32 = (uint64_t)v15;
    goto LABEL_16;
  }
  v33 = swift_getEnumCaseMultiPayload(v23, v13);
  if (v33 == 2)
    v34 = &qword_100640ED0;
  else
    v34 = (uint64_t *)&unk_100646970;
  if (v33 == 2)
    v35 = -1;
  else
    v35 = 0;
LABEL_25:
  sub_1000073A0((uint64_t)v21, v34);
  return v35 & 1;
}

uint64_t sub_1001146C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  int EnumCaseMultiPayload;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t updated;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a1;
  v64 = a2;
  v58 = type metadata accessor for IndexPath(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v51 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_10002A750(&qword_100646948);
  __chkstk_darwin(v54);
  v57 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646950);
  v9 = __chkstk_darwin(v8);
  v52 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v51 - v11;
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.Hit(0, a3, a4, v12);
  v13 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v15 = (char *)&v51 - v14;
  v60 = a3;
  v53 = a4;
  v17 = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult(0, a3, a4, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v51 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v17, v17, 0, 0);
  v62 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v25 = __chkstk_darwin(TupleTypeMetadata2);
  v27 = (char *)&v51 - v26;
  v28 = (char *)&v51 + *(int *)(v25 + 48) - v26;
  v61 = v18;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v29((char *)&v51 - v26, v63, v17);
  v29(v28, v64, v17);
  v30 = v27;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v17);
  if (!EnumCaseMultiPayload)
  {
    v42 = updated;
    v43 = v60;
    v29(v23, (uint64_t)v30, v17);
    if (!swift_getEnumCaseMultiPayload(v28, v17))
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v28, v42);
      v41 = sub_100114FEC((uint64_t)v23, (uint64_t)v15, v43, v53);
      v45 = *(void (**)(char *, uint64_t))(v13 + 8);
      v45(v15, v42);
      v45(v23, v42);
      v40 = v61;
      v32 = v30;
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v42);
    v32 = v30;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v32 = v27;
    if (swift_getEnumCaseMultiPayload(v28, v17) == 2)
    {
      v41 = 1;
      v40 = v61;
      goto LABEL_13;
    }
LABEL_12:
    v41 = 0;
    v40 = v62;
    v17 = TupleTypeMetadata2;
    goto LABEL_13;
  }
  v32 = v27;
  v29(v21, (uint64_t)v27, v17);
  if (swift_getEnumCaseMultiPayload(v28, v17) != 1)
  {
    sub_1000073A0((uint64_t)v21, &qword_100646950);
    goto LABEL_12;
  }
  v33 = v55;
  sub_10000F614((uint64_t)v28, v55, &qword_100646950);
  v34 = v57;
  v35 = v57 + *(int *)(v54 + 48);
  sub_10000F614((uint64_t)v21, v57, &qword_100646950);
  sub_10000735C(v33, v35, &qword_100646950);
  v36 = v56;
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v38 = v58;
  if (v37(v34, 1, v58) != 1)
  {
    v46 = v52;
    sub_10000735C(v34, v52, &qword_100646950);
    if (v37(v35, 1, v38) != 1)
    {
      v47 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v51, v35, v38);
      v48 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
      v49 = dispatch thunk of static Equatable.== infix(_:_:)(v46, v47, v38, v48);
      v50 = *(void (**)(char *, uint64_t))(v36 + 8);
      v50(v47, v38);
      sub_1000073A0(v33, &qword_100646950);
      v50((char *)v46, v38);
      sub_1000073A0(v34, &qword_100646950);
      v40 = v61;
      if ((v49 & 1) != 0)
      {
        v41 = 1;
        goto LABEL_13;
      }
      goto LABEL_18;
    }
    sub_1000073A0(v33, &qword_100646950);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v46, v38);
    v40 = v61;
LABEL_17:
    sub_1000073A0(v34, &qword_100646948);
LABEL_18:
    v41 = 0;
    goto LABEL_13;
  }
  sub_1000073A0(v33, &qword_100646950);
  v39 = v37(v35, 1, v38);
  v40 = v61;
  if (v39 != 1)
    goto LABEL_17;
  sub_1000073A0(v34, &qword_100646950);
  v41 = 1;
LABEL_13:
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v17);
  return v41 & 1;
}

BOOL sub_100114BE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100113C88(*a1, *a2);
}

Swift::Int sub_100114BF0()
{
  char *v0;

  return sub_100113CBC(*v0);
}

void sub_100114BF8(uint64_t a1)
{
  char *v1;

  sub_100113C98(a1, *v1);
}

Swift::Int sub_100114C00(uint64_t a1)
{
  char *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  sub_100113C98((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

uint64_t sub_100114C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001146C8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_100114C48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(char *, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t (*v49)(char *, char *);
  uint64_t (*v50)(_QWORD);
  char *v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v52 = a5;
  v11 = a3(0);
  v12 = __chkstk_darwin(v11);
  v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v49 - v14;
  v53 = sub_10002A750(a4);
  v16 = __chkstk_darwin(v53);
  v56 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v55 = (uint64_t)&v49 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v49 - v21;
  v23 = __chkstk_darwin(v20);
  v54 = (uint64_t)&v49 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v49 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v49 - v28;
  v30 = static IndexPath.== infix(_:_:)(a1, a2);
  sub_10000735C(a1, (uint64_t)v29, a4);
  v31 = sub_10000735C(a2, (uint64_t)v27, a4);
  if ((v30 & 1) == 0)
  {
    sub_1000073A0((uint64_t)v27, a4);
    sub_1000073A0((uint64_t)v29, a4);
    v38 = v54;
    sub_10000735C(a1, v54, a4);
    sub_10000735C(a2, (uint64_t)v22, a4);
    goto LABEL_6;
  }
  v49 = a6;
  v50 = a3;
  v32 = v52;
  v33 = ((uint64_t (*)(uint64_t))v52)(v31);
  v34 = v51;
  v32(v33);
  v35 = v49(v15, v34);
  v36 = (uint64_t)v34;
  v37 = v50;
  sub_10001F544(v36, v50);
  sub_10001F544((uint64_t)v15, v37);
  sub_1000073A0((uint64_t)v27, a4);
  sub_1000073A0((uint64_t)v29, a4);
  v38 = v54;
  sub_10000735C(a1, v54, a4);
  sub_10000735C(a2, (uint64_t)v22, a4);
  if ((v35 & 1) == 0)
  {
LABEL_6:
    sub_1000073A0((uint64_t)v22, a4);
    sub_1000073A0(v38, a4);
    v43 = v55;
    sub_10000735C(a1, v55, a4);
    v44 = v56;
    sub_10000735C(a2, v56, a4);
    goto LABEL_7;
  }
  v39 = a2;
  v40 = v53;
  v41 = *(unsigned __int8 *)(v38 + *(int *)(v53 + 40));
  sub_1000073A0(v38, a4);
  v42 = v22[*(int *)(v40 + 40)];
  sub_1000073A0((uint64_t)v22, a4);
  v43 = v55;
  sub_10000735C(a1, v55, a4);
  v44 = v56;
  sub_10000735C(v39, v56, a4);
  if (v41 != v42)
  {
LABEL_7:
    sub_1000073A0(v44, a4);
    sub_1000073A0(v43, a4);
    v47 = 0;
    return v47 & 1;
  }
  v45 = v53;
  v46 = *(_BYTE *)(v43 + *(int *)(v53 + 44));
  sub_1000073A0(v43, a4);
  LOBYTE(v45) = *(_BYTE *)(v44 + *(int *)(v45 + 44));
  sub_1000073A0(v44, a4);
  v47 = v46 ^ v45 ^ 1;
  return v47 & 1;
}

uint64_t sub_100114FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t AssociatedConformanceWitness;
  char v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  char *v44;
  char *v45;
  char v46;
  char v47;
  char v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4, a3, &unk_1005987EC, &unk_1005987FC);
  v52 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v53 = AssociatedTypeWitness;
  v9 = __chkstk_darwin(AssociatedTypeWitness);
  v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - v11;
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.Hit(0, a3, a4, v13);
  v15 = *(_QWORD *)(updated - 8);
  v16 = __chkstk_darwin(updated);
  v55 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v54 = (char *)&v50 - v19;
  v20 = __chkstk_darwin(v18);
  v58 = (char *)&v50 - v21;
  v22 = __chkstk_darwin(v20);
  v57 = (char *)&v50 - v23;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v50 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v50 - v27;
  v29 = static IndexPath.== infix(_:_:)(a1, a2);
  v56 = v15;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v59 = a1;
  v30(v28, a1, updated);
  v31 = a2;
  v30(v26, a2, updated);
  if ((v29 & 1) == 0)
  {
    v38 = *(void (**)(char *, uint64_t))(v56 + 8);
    v38(v26, updated);
    v38(v28, updated);
    v39 = v57;
    v40 = v59;
    v30(v57, v59, updated);
    v41 = v58;
    v30(v58, a2, updated);
    goto LABEL_6;
  }
  v50 = a2;
  v32 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v32(a3, a4);
  v33 = v51;
  v32(a3, a4);
  v34 = v53;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, v53, &unk_1005987EC, &unk_1005987F4);
  v36 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v33, v34, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v37 = *(void (**)(char *, uint64_t))(v52 + 8);
  v37(v33, v34);
  v37(v12, v34);
  v38 = *(void (**)(char *, uint64_t))(v56 + 8);
  v38(v26, updated);
  v38(v28, updated);
  v39 = v57;
  v40 = v59;
  v30(v57, v59, updated);
  v41 = v58;
  v31 = v50;
  ((void (*)(char *))v30)(v58);
  if ((v36 & 1) == 0)
  {
LABEL_6:
    v44 = v54;
    v45 = v55;
    v38(v41, updated);
    v38(v39, updated);
    v30(v44, v40, updated);
    v30(v45, v31, updated);
    goto LABEL_7;
  }
  v42 = v39[*(int *)(updated + 40)];
  v38(v39, updated);
  v43 = v41[*(int *)(updated + 40)];
  v38(v41, updated);
  v44 = v54;
  v30(v54, v40, updated);
  v45 = v55;
  v30(v55, v31, updated);
  if (v42 != v43)
  {
LABEL_7:
    v38(v45, updated);
    v38(v44, updated);
    v48 = 0;
    return v48 & 1;
  }
  v46 = v44[*(int *)(updated + 44)];
  v38(v44, updated);
  v47 = v45[*(int *)(updated + 44)];
  v38(v45, updated);
  v48 = v46 ^ v47 ^ 1;
  return v48 & 1;
}

uint64_t sub_1001153F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3 = type metadata accessor for IndexPath(0);
  v4 = sub_100117768((unint64_t *)&qword_100644910, (uint64_t)&protocol conformance descriptor for IndexPath);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v3, v4);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x6E6F6974726F7020;
  v7._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  if (*(_BYTE *)(v1 + *(int *)(a1 + 40)))
    v8 = 0x6D6F74746F62;
  else
    v8 = 7368564;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 40)))
    v9 = 0xE600000000000000;
  else
    v9 = 0xE300000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  v11._object = (void *)0x8000000100565870;
  v11._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v11);
  if (*(_BYTE *)(v1 + *(int *)(a1 + 44)))
    v12 = 1702195828;
  else
    v12 = 0x65736C6166;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 44)))
    v13 = 0xE400000000000000;
  else
    v13 = 0xE500000000000000;
  v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease(v13);
  return 0x203A746948;
}

uint64_t sub_10011556C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100114FEC(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_10011557C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t *Strong;
  uint64_t v8;
  void **v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v4 = objc_msgSend(a1, "localDragSession");
  if (v4
    && (v6 = v4,
        swift_getObjectType(v4, v5),
        Strong = (uint64_t *)swift_unknownObjectUnownedLoadStrong(*(_QWORD *)(v2 + qword_100646728) + qword_100645EF8),
        v8 = sub_1002A16D0(Strong),
        Strong,
        swift_unknownObjectRelease(v6),
        v8))
  {
    v9 = (void **)(v8 + qword_1006738F8);
    swift_beginAccess(v8 + qword_1006738F8, v21, 0, 0);
    v10 = *v9;
    swift_bridgeObjectRetain(v10);
    swift_release();
  }
  else
  {
    v10 = &_swiftEmptySetSingleton;
  }
  v11 = v10[2];
  if (v11 == 1)
  {
    v12 = sub_10002CDC0((uint64_t)v10);
    v14 = v13;
    v16 = v15 & 1;
    sub_10047892C(v12, v13, v15 & 1, (uint64_t)v10, a2);
    sub_10003E0E0(v12, v14, v16);
    swift_bridgeObjectRelease(v10);
    v17 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 2, v17);
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v19 = type metadata accessor for IndexPath(0);
    if (v11)
      v20 = 1;
    else
      v20 = 2;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, v20, 2, v19);
  }
}

uint64_t sub_1001156F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  uint64_t *v59;
  int v60;
  int v61;

  v56 = a5;
  v57 = a6;
  v55 = a4;
  v60 = a2;
  v61 = a3;
  v59 = a9;
  v12 = sub_10002A750(a6);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v53 - v16;
  v54 = a7;
  v18 = sub_10002A750(a7);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v53 - v23;
  v25 = sub_10002A750(a8);
  __chkstk_darwin(v25);
  v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  v29 = __chkstk_darwin(v28);
  v53 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v58 = (char *)&v53 - v31;
  sub_10000735C(a1, (uint64_t)v27, a8);
  v32 = type metadata accessor for IndexPath(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v27, 2, v32);
  if (!v34)
  {
    sub_1000073A0((uint64_t)v27, a8);
LABEL_7:
    v35 = 3;
    if ((v60 & 1) == 0)
      goto LABEL_4;
    goto LABEL_8;
  }
  if (v34 == 1)
    goto LABEL_7;
  v35 = 2;
  if ((v60 & 1) == 0)
  {
LABEL_4:
    v36 = sub_10002A750(&qword_100653E50);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    if ((v61 & 1) == 0)
    {
      v38 = (uint64_t)v58;
      v37(v58, 1, 4, v36);
      if ((v55 & 1) != 0)
        v35 = 2;
      else
        v35 = 1;
      goto LABEL_20;
    }
    v38 = (uint64_t)v58;
    v39 = v58;
    v40 = 3;
    goto LABEL_19;
  }
LABEL_8:
  if ((v61 & 1) == 0)
  {
    v43 = v57;
    sub_10000735C(v56, (uint64_t)v15, v57);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) != 1)
    {
      sub_10000F614((uint64_t)v15, (uint64_t)v22, v54);
      v38 = (uint64_t)v58;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v58, &v22[*(int *)(v18 + 36)], v32);
      v36 = sub_10002A750(&qword_100653E50);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
      v39 = (char *)v38;
      v40 = 0;
LABEL_19:
      v37(v39, v40, 4, v36);
      goto LABEL_20;
    }
    sub_1000073A0((uint64_t)v15, v43);
    v44 = sub_10002A750(&qword_100653E50);
    v38 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v58, 2, 4, v44);
LABEL_20:
    v47 = v59;
    goto LABEL_21;
  }
  v41 = v57;
  sub_10000735C(v56, (uint64_t)v17, v57);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v17, v41);
    v42 = sub_10002A750(&qword_100653E50);
    v38 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v58, 4, 4, v42);
    goto LABEL_20;
  }
  v45 = (uint64_t)v17;
  v46 = v54;
  sub_10000F614(v45, (uint64_t)v24, v54);
  v38 = (uint64_t)v58;
  v47 = v59;
  v48 = (uint64_t)v53;
  if ((*v24 & 1) != 0)
  {
    sub_1000073A0((uint64_t)v24, v46);
    v49 = sub_10002A750(&qword_100653E50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 3, 4, v49);
  }
  else
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v33 + 32))(v53, &v24[*(int *)(v18 + 36)], v32);
    v52 = sub_10002A750(&qword_100653E50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v48, 0, 4, v52);
  }
  sub_10001F580(v48, v38, type metadata accessor for TTRITreeViewDropProposal.Intent);
LABEL_21:
  v50 = type metadata accessor for TTRITreeViewDropProposal(0);
  result = sub_10001F580(v38, (uint64_t)v47 + *(int *)(v50 + 20), type metadata accessor for TTRITreeViewDropProposal.Intent);
  *v47 = v35;
  return result;
}

uint64_t *sub_100115B34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t updated;
  uint64_t v5;

  v1 = *v0;
  sub_10001F544((uint64_t)v0 + qword_1006736E0, type metadata accessor for TTRITreeViewDropProposal);
  sub_1000073A0((uint64_t)v0 + qword_1006736E8, (uint64_t *)&unk_100653F70);

  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  v5 = type metadata accessor for Optional(0, updated);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);

  return v0;
}

uint64_t sub_100115BE4()
{
  uint64_t v0;

  sub_100115B34();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator);
}

void sub_100115C14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006467B0[0])
  {
    v2 = sub_10002CA5C((uint64_t *)&unk_100654900);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1006467B0);
  }
}

uint64_t *sub_100115C6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE *v25;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = v8 + 1;
  if (v14 <= v13 + ((v8 + v11) & (unint64_t)~v11) + 2)
    v15 = v13 + ((v8 + v11) & ~v11) + 2;
  else
    v15 = v14;
  v16 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v10 + 80));
  if (v16 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (unint64_t)(v15 + 1) > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain(v19);
  }
  else
  {
    v20 = v6;
    v21 = *((unsigned __int8 *)a2 + v15);
    if (v21 >= 2)
    {
      if (v15 <= 3)
        v22 = v15;
      else
        v22 = 4;
      __asm { BR              X13 }
    }
    if (v21 == 1)
    {
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v14);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v20);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v20);
      }
      *((_BYTE *)a1 + v15) = 1;
    }
    else
    {
      v23 = ~v11;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v24 = ((unint64_t)a2 + v12) & v23;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v23, v24, v9);
      v25 = (_BYTE *)((((unint64_t)a1 + v12) & v23) + v13);
      *v25 = *(_BYTE *)(v24 + v13);
      v25[1] = *(_BYTE *)(v24 + v13 + 1);
      *((_BYTE *)a1 + v15) = 0;
    }
  }
  return a1;
}

uint64_t sub_100115E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = *(_QWORD *)(v8 + 64) + ((v6 + v9) & ~v9) + 2;
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  if (v6 <= v11)
    v6 = v11;
  v12 = *(unsigned __int8 *)(a1 + v6);
  if (v12 >= 2)
  {
    if (v6 <= 3)
      v13 = v6;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  else
  {
    v14 = ~v9;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))((v10 + a1) & v14, v7);
  }
  return result;
}

void *sub_100115FE4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = v8 + 1;
  if (v14 <= v13 + ((v8 + v11) & (unint64_t)~v11) + 2)
    v15 = v13 + ((v8 + v11) & ~v11) + 2;
  else
    v15 = v14;
  v16 = a2[v15];
  if (v16 >= 2)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X13 }
  }
  if (v16 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v14);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    *((_BYTE *)a1 + v15) = 1;
  }
  else
  {
    v18 = ~v11;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
    v19 = (unint64_t)&a2[v12] & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v18, v19, v9);
    v20 = (_BYTE *)((((unint64_t)a1 + v12) & v18) + v13);
    *v20 = *(_BYTE *)(v19 + v13);
    v20[1] = *(_BYTE *)(v19 + v13 + 1);
    *((_BYTE *)a1 + v15) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1001161C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t v24;

  if (a1 != a2)
  {
    v6 = type metadata accessor for IndexPath(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v8 + v11;
    v13 = *(_QWORD *)(v10 + 64);
    if (*(_DWORD *)(v7 + 84))
      v14 = *(_QWORD *)(v7 + 64);
    else
      v14 = v8 + 1;
    if (v14 <= v13 + ((v8 + v11) & (unint64_t)~v11) + 2)
      v15 = v13 + ((v8 + v11) & ~v11) + 2;
    else
      v15 = v14;
    v16 = a1[v15];
    if (v16 >= 2)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    v18 = ~v11;
    v24 = *(_QWORD *)(v10 + 64);
    if (v16 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6))
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v18, v9);
    }
    v19 = a2[v15];
    if (v19 >= 2)
    {
      if (v15 <= 3)
        v20 = v15;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v14);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      a1[v15] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      v21 = (unint64_t)&a2[v12] & v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((unint64_t)&a1[v12] & v18, v21, v9);
      v22 = (_BYTE *)(((unint64_t)&a1[v12] & v18) + v24);
      *v22 = *(_BYTE *)(v21 + v24);
      v22[1] = *(_BYTE *)(v21 + v24 + 1);
      a1[v15] = 0;
    }
  }
  return a1;
}

void *sub_10011647C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = v8 + 1;
  if (v14 <= v13 + ((v8 + v11) & (unint64_t)~v11) + 2)
    v15 = v13 + ((v8 + v11) & ~v11) + 2;
  else
    v15 = v14;
  v16 = a2[v15];
  if (v16 >= 2)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X13 }
  }
  if (v16 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v14);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    *((_BYTE *)a1 + v15) = 1;
  }
  else
  {
    v18 = ~v11;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
    v19 = (unint64_t)&a2[v12] & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v12) & v18, v19, v9);
    v20 = (_BYTE *)((((unint64_t)a1 + v12) & v18) + v13);
    *v20 = *(_BYTE *)(v19 + v13);
    v20[1] = *(_BYTE *)(v19 + v13 + 1);
    *((_BYTE *)a1 + v15) = 0;
  }
  return a1;
}

unsigned __int8 *sub_100116658(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t v24;

  if (a1 != a2)
  {
    v6 = type metadata accessor for IndexPath(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v8 + v11;
    v13 = *(_QWORD *)(v10 + 64);
    if (*(_DWORD *)(v7 + 84))
      v14 = *(_QWORD *)(v7 + 64);
    else
      v14 = v8 + 1;
    if (v14 <= v13 + ((v8 + v11) & (unint64_t)~v11) + 2)
      v15 = v13 + ((v8 + v11) & ~v11) + 2;
    else
      v15 = v14;
    v16 = a1[v15];
    if (v16 >= 2)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    v18 = ~v11;
    v24 = *(_QWORD *)(v10 + 64);
    if (v16 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6))
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v18, v9);
    }
    v19 = a2[v15];
    if (v19 >= 2)
    {
      if (v15 <= 3)
        v20 = v15;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        memcpy(a1, a2, v14);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      a1[v15] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      v21 = (unint64_t)&a2[v12] & v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))((unint64_t)&a1[v12] & v18, v21, v9);
      v22 = (_BYTE *)(((unint64_t)&a1[v12] & v18) + v24);
      *v22 = *(_BYTE *)(v21 + v24);
      v22[1] = *(_BYTE *)(v21 + v24 + 1);
      a1[v15] = 0;
    }
  }
  return a1;
}

uint64_t sub_100116914(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v6 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = v7 + 1;
  if (v8 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
           + ((v7 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
           + 2)
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
       + ((v7 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
       + 2;
  else
    v9 = v8;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_25;
  v10 = v9 + 1;
  v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    v14 = ((a2 + ~(-1 << v11) - 253) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_25:
      v16 = *(unsigned __int8 *)(a1 + v9);
      if (v16 >= 3)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_25;
LABEL_18:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if ((_DWORD)v10)
  {
    if (v10 > 3)
      LODWORD(v10) = 4;
    __asm { BR              X11 }
  }
  return (v15 + 254);
}

void sub_100116A78(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v8 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = v9 + 1;
  if (v10 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64)
            + ((v9 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
            + 2)
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64)
        + ((v9 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 80))
        + 2;
  v11 = v10 + 1;
  if (a3 < 0xFE)
  {
    v12 = 0;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 + ~(-1 << (8 * v11)) - 253) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = &dword_100000004;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v13 = a2 - 254;
  if (v11 < 4)
  {
    if ((_DWORD)v10 != -1)
    {
      v15 = v13 & ~(-1 << (8 * v11));
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if ((_DWORD)v11 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
  }
  else
  {
    bzero(a1, v10 + 1);
    *(_DWORD *)a1 = v13;
  }
  __asm { BR              X10 }
}

uint64_t sub_100116C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = v5 + 1;
  if (v6 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64)
           + ((v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
           + 2)
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64)
       + ((v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80))
       + 2;
  result = *(unsigned __int8 *)(a1 + v6);
  if (result >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_100116D2C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  char v11;
  int v12;

  result = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(result - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = v8 + 1;
  if (v9 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
           + ((v8 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
           + 2)
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64)
        + ((v8 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80))
        + 2;
  else
    v10 = v9;
  if (a2 > 1)
  {
    if (v10 <= 3)
      v11 = ((a2 - 2) >> (8 * v10)) + 2;
    else
      v11 = 2;
    a1[v10] = v11;
    if (v10 >= 4)
      v12 = 4;
    else
      v12 = v10;
    bzero(a1, v10);
    __asm { BR              X10 }
  }
  a1[v10] = a2;
  return result;
}

uint64_t *sub_100116E30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v9 + 80));
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || v12 + (v11 & (unint64_t)~v10) + 2 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain(v16);
  }
  else
  {
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v18 = ((unint64_t)a2 + v11) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v8);
    v19 = (_BYTE *)((((unint64_t)a1 + v11) & v17) + v12);
    *v19 = *(_BYTE *)(v18 + v12);
    v19[1] = *(_BYTE *)(v18 + v12 + 1);
  }
  return a1;
}

uint64_t sub_100116F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_100116F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_BYTE *)(v12 + v14);
  v16 = (_BYTE *)(v13 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t sub_100117038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_BYTE *)(v12 + v14);
  v16 = (_BYTE *)(v13 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t sub_1001170D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_BYTE *)(v12 + v14);
  v16 = (_BYTE *)(v13 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t sub_100117178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_BYTE *)(v12 + v14);
  v16 = (_BYTE *)(v13 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t sub_100117218(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int v26;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0xFE)
    v12 = 254;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64);
  if (a2 <= v12)
    goto LABEL_26;
  v17 = v16 + (v15 & ~v14) + 2;
  v18 = 8 * v17;
  if (v17 > 3)
    goto LABEL_9;
  v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v21))
  {
    v19 = *(_DWORD *)(a1 + v17);
    if (v19)
      goto LABEL_17;
  }
  else
  {
    if (v21 <= 0xFF)
    {
      if (v21 < 2)
        goto LABEL_26;
LABEL_9:
      v19 = *(unsigned __int8 *)(a1 + v17);
      if (!*(_BYTE *)(a1 + v17))
        goto LABEL_26;
LABEL_17:
      v22 = (v19 - 1) << v18;
      if (v17 > 3)
        v22 = 0;
      if ((_DWORD)v16 + (v15 & ~(_DWORD)v14) != -2)
      {
        if (v17 <= 3)
          v23 = v16 + (v15 & ~(_DWORD)v14) + 2;
        else
          v23 = 4;
        __asm { BR              X12 }
      }
      return v12 + v22 + 1;
    }
    v19 = *(unsigned __int16 *)(a1 + v17);
    if (*(_WORD *)(a1 + v17))
      goto LABEL_17;
  }
LABEL_26:
  if (v8 == v12)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v25 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v24(v25, v11, v9);
  }
  v25 = (v15 + a1) & ~v14;
  if ((_DWORD)v11 == v12)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v24(v25, v11, v9);
  }
  v26 = *(unsigned __int8 *)(v25 + v16);
  if (v26 >= 2)
    return v26 - 1;
  else
    return 0;
}

void sub_1001173D0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + 2;
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v12 < 4)
    {
      if (*(_DWORD *)(v9 + 64) + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11) != -2)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + 2);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + v11) & ~v11) + 2);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

uint64_t sub_100117608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_100117610(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *sub_100117644(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t *sub_100117684(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100117748(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100117750(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDragItemSources(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDragItemSources);
}

uint64_t sub_100117768(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1001177A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *result;
  int64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char v55[24];
  char *v56;

  v51 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v52 = *(_QWORD *)(v50 - 8);
  v6 = __chkstk_darwin(v50);
  v44 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v43 = (uint64_t)&v43 - v8;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 56);
  v46 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v47 = (unint64_t)(v16 + 63) >> 6;
  v48 = qword_100646728;
  v53 = a1;
  result = (_QWORD *)swift_bridgeObjectRetain(a1);
  v20 = 0;
  v45 = _swiftEmptyArrayStorage;
  v49 = v14;
  v21 = v56;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v22 | (v20 << 6); ; i = __clz(__rbit64(v25)) + (v20 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v14, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v10 + 72) * i, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9) == 1)
      goto LABEL_35;
    v54 = v20;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v14, v9);
    v27 = sub_10006B64C();
    v29 = v28;
    v31 = v30;
    v32 = sub_1000F8FE4(v21, v27);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v27);
    if (v32)
    {
      v34 = v32 + *(_QWORD *)(*(_QWORD *)v32 + 144);
      swift_beginAccess(v34, v55, 0, 0);
      sub_10002B1E8(v34, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v33 = swift_release(v32);
      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    v36 = v52;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v52 + 56))(v5, v35, 1, v50, v33);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v37) == 1)
    {
      result = (_QWORD *)sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640E00);
    }
    else
    {
      v38 = v43;
      sub_10001F580((uint64_t)v5, v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_10001F580(v38, v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        v45 = (_QWORD *)sub_1004561DC(0, v45[2] + 1, 1, (unint64_t)v45);
      v40 = v45[2];
      v39 = v45[3];
      if (v40 >= v39 >> 1)
        v45 = (_QWORD *)sub_1004561DC(v39 > 1, v40 + 1, 1, (unint64_t)v45);
      v41 = v44;
      v42 = v45;
      v45[2] = v40 + 1;
      result = (_QWORD *)sub_10001F580(v41, (uint64_t)v42+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    }
    v14 = v49;
    v20 = v54;
    if (v18)
      goto LABEL_4;
LABEL_5:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v47)
      goto LABEL_34;
    v25 = *(_QWORD *)(v46 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v47)
        goto LABEL_34;
      v25 = *(_QWORD *)(v46 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v47)
          goto LABEL_34;
        v25 = *(_QWORD *)(v46 + 8 * v20);
        if (!v25)
        {
          v20 = v24 + 3;
          if (v24 + 3 >= v47)
            goto LABEL_34;
          v25 = *(_QWORD *)(v46 + 8 * v20);
          if (!v25)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v47)
  {
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, 1, 1, v9);
LABEL_35:
    swift_release(v53);
    return v45;
  }
  v25 = *(_QWORD *)(v46 + 8 * v26);
  if (v25)
  {
    v20 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v47)
      goto LABEL_34;
    v25 = *(_QWORD *)(v46 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_100117CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  int64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char v55[24];
  char *v56;

  v51 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v52 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v43 = (uint64_t)&v43 - v8;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 56);
  v46 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v47 = (unint64_t)(v16 + 63) >> 6;
  v48 = qword_100646728;
  v53 = a1;
  v19 = swift_bridgeObjectRetain(a1);
  v20 = 0;
  v45 = _swiftEmptyArrayStorage;
  v49 = v14;
  v21 = v56;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v22 | (v20 << 6); ; i = __clz(__rbit64(v25)) + (v20 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v14, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v10 + 72) * i, v9, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9) == 1)
      goto LABEL_35;
    v54 = v20;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v14, v9);
    v27 = sub_10006B3DC();
    v29 = v28;
    v31 = v30;
    v32 = sub_1000F8FE4(v21, v27);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v29);
    v33 = swift_bridgeObjectRelease(v27);
    if (v32)
    {
      v34 = v32 + *(_QWORD *)(*(_QWORD *)v32 + 144);
      swift_beginAccess(v34, v55, 0, 0);
      sub_10002B1E8(v34, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v33 = swift_release();
      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    v36 = v52;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v52 + 56))(v5, v35, 1, v50, v33);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v56, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v37) == 1)
    {
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v38 = v43;
      sub_10001F580((uint64_t)v5, v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F580(v38, v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        v45 = (_QWORD *)sub_100454EEC(0, v45[2] + 1, 1, (unint64_t)v45);
      v40 = v45[2];
      v39 = v45[3];
      if (v40 >= v39 >> 1)
        v45 = (_QWORD *)sub_100454EEC(v39 > 1, v40 + 1, 1, (unint64_t)v45);
      v41 = v44;
      v42 = v45;
      v45[2] = v40 + 1;
      sub_10001F580(v41, (uint64_t)v42+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    v14 = v49;
    v20 = v54;
    if (v18)
      goto LABEL_4;
LABEL_5:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v47)
      goto LABEL_34;
    v25 = *(_QWORD *)(v46 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v47)
        goto LABEL_34;
      v25 = *(_QWORD *)(v46 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v47)
          goto LABEL_34;
        v25 = *(_QWORD *)(v46 + 8 * v20);
        if (!v25)
        {
          v20 = v24 + 3;
          if (v24 + 3 >= v47)
            goto LABEL_34;
          v25 = *(_QWORD *)(v46 + 8 * v20);
          if (!v25)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v47)
  {
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v14, 1, 1, v9, v19);
LABEL_35:
    swift_release();
    return;
  }
  v25 = *(_QWORD *)(v46 + 8 * v26);
  if (v25)
  {
    v20 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v47)
      goto LABEL_34;
    v25 = *(_QWORD *)(v46 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1001181A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = v0 + qword_1006736E8;
  swift_beginAccess(v0 + qword_1006736E8, v4, 0, 0);
  v2 = sub_10002A750((uint64_t *)&unk_100654900);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  if ((_DWORD)result != 1)
    return *(_QWORD *)v1;
  __break(1u);
  return result;
}

uint64_t sub_10011821C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1000F1E70(a1, a2, a3, a4);
}

unint64_t sub_10011824C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006469E8;
  if (!qword_1006469E8)
  {
    v1 = sub_10002CA5C(&qword_1006469E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1006469E8);
  }
  return result;
}

uint64_t sub_100118298()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1001182A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v34 = a5;
  v35 = a6;
  v33 = a4;
  v36 = a3;
  v32 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v32);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646A40);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646A48);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for IndexPath(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v11, a2, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
  sub_10010AE34((uint64_t)v11, (uint64_t)v14);
  sub_1000073A0((uint64_t)v11, &qword_100646950);
  v23 = sub_10002A750(&qword_100640FF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v14, 1, v23) == 1)
  {
    sub_1000073A0((uint64_t)v14, &qword_100646A40);
  }
  else
  {
    v24 = v36;
    v31 = v36 + 16;
    v25 = *(_QWORD *)&v14[*(int *)(v23 + 48)];
    v26 = *(int *)(v15 + 48);
    sub_10001F580((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)&v17[v26] = v25;
    v27 = *(_QWORD *)&v17[*(int *)(v15 + 48)];
    sub_10001F580((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v28 = *(int *)(v23 + 48);
    sub_10002B1E8((uint64_t)v20, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)&v8[v28] = v27;
    swift_storeEnumTagMultiPayload(v8, v32, 1);
    sub_100066BA8((uint64_t)v8, v33, v34, v35);
    LOBYTE(v28) = v29;
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640FE0);
    sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_beginAccess(v31, v37, 1, 0);
    *(_BYTE *)(v24 + 16) = v28 & 1;
  }
}

void sub_100118580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  void (*v26)(_BYTE *, _QWORD);
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[32];

  v43 = a7;
  v45 = a5;
  v46 = a6;
  v44 = a4;
  v40 = a3;
  v47 = a2;
  v41 = sub_10002A750((uint64_t *)&unk_100640FE0);
  __chkstk_darwin(v41);
  v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646A40);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750(&qword_100646A48);
  __chkstk_darwin(v38);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v20);
  v39 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10010755C();
  v24 = v23;
  v25 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v47, v8);
  if (*(_BYTE *)(v25 + *(int *)(sub_10002A750(&qword_100646A10) + 40)) == 1)
  {
    v26 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v48);
    if (__OFADD__(*v27, 1))
    {
      __break(1u);
      return;
    }
    ++*v27;
    v26(v48, 0);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  sub_100108978(v22, v24 & 1, (uint64_t)v14, (uint64_t)v17);
  swift_bridgeObjectRelease(v22);
  sub_1000073A0((uint64_t)v14, &qword_100646950);
  v28 = sub_10002A750(&qword_100640FF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v17, 1, v28) == 1)
  {
    sub_1000073A0((uint64_t)v17, &qword_100646A40);
  }
  else
  {
    v29 = (_BYTE *)(v40 + 16);
    v30 = *(_QWORD *)&v17[*(int *)(v28 + 48)];
    v31 = v38;
    v32 = *(int *)(v38 + 48);
    sub_10001F580((uint64_t)v17, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)&v19[v32] = v30;
    v33 = *(_QWORD *)&v19[*(int *)(v31 + 48)];
    v34 = v39;
    sub_10001F580((uint64_t)v19, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v35 = *(int *)(v28 + 48);
    v36 = v42;
    sub_10002B1E8(v34, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(_QWORD *)(v36 + v35) = v33;
    swift_storeEnumTagMultiPayload(v36, v41, v43);
    sub_100066BA8(v36, v44, v45, v46);
    LOBYTE(v35) = v37;
    sub_1000073A0(v36, (uint64_t *)&unk_100640FE0);
    sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_beginAccess(v29, v48, 1, 0);
    *v29 = v35 & 1;
  }
}

void sub_10011891C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  v31 = a4;
  v32 = a5;
  v33 = a3;
  v30 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v30);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100646980);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for IndexPath(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v10, a2, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v20);
  sub_10010B274((uint64_t)v10, (uint64_t)v13);
  sub_1000073A0((uint64_t)v10, &qword_100646950);
  v22 = sub_10002A750((uint64_t *)&unk_1006469A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v13, 1, v22) == 1)
  {
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100646980);
  }
  else
  {
    v23 = v33;
    v29 = v33 + 16;
    v24 = *(_QWORD *)&v13[*(int *)(v22 + 48)];
    v25 = *(int *)(v14 + 48);
    sub_10001F580((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v16[v25] = v24;
    v26 = *(_QWORD *)&v16[*(int *)(v14 + 48)];
    sub_10001F580((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27 = *(int *)(v22 + 48);
    sub_10002B1E8((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v7[v27] = v26;
    swift_storeEnumTagMultiPayload(v7, v30, 1);
    sub_1002CE16C((uint64_t)v7, v31, v32);
    LOBYTE(v27) = v28;
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_1006548F0);
    sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_beginAccess(v29, v34, 1, 0);
    *(_BYTE *)(v23 + 16) = v27 & 1;
  }
}

void sub_100118BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  void (*v25)(_BYTE *, _QWORD);
  _QWORD *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];

  v43 = a6;
  v44 = a4;
  v45 = a5;
  v40 = a3;
  v46 = a2;
  v41 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v41);
  v42 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100646980);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v38);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v19);
  v39 = (uint64_t)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100107718();
  v23 = v22;
  v24 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v46, v7);
  if (*(_BYTE *)(v24 + *(int *)(sub_10002A750(&qword_100646958) + 40)) == 1)
  {
    v25 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v47);
    if (__OFADD__(*v26, 1))
    {
      __break(1u);
      return;
    }
    ++*v26;
    v25(v47, 0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  sub_100108E68(v21, v23 & 1, (uint64_t)v13, (uint64_t)v16);
  swift_bridgeObjectRelease(v21);
  sub_1000073A0((uint64_t)v13, &qword_100646950);
  v27 = sub_10002A750((uint64_t *)&unk_1006469A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v16, 1, v27) == 1)
  {
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100646980);
  }
  else
  {
    v28 = (_BYTE *)(v40 + 16);
    v29 = *(_QWORD *)&v16[*(int *)(v27 + 48)];
    v30 = v38;
    v31 = *(int *)(v38 + 48);
    sub_10001F580((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v18[v31] = v29;
    v32 = *(_QWORD *)&v18[*(int *)(v30 + 48)];
    v33 = v39;
    sub_10001F580((uint64_t)v18, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v34 = *(int *)(v27 + 48);
    v35 = v42;
    sub_10002B1E8(v33, v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v35 + v34) = v32;
    swift_storeEnumTagMultiPayload(v35, v41, v43);
    sub_1002CE16C(v35, v44, v45);
    LOBYTE(v34) = v36;
    sub_1000073A0(v35, (uint64_t *)&unk_1006548F0);
    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_beginAccess(v28, v47, 1, 0);
    *v28 = v34 & 1;
  }
}

uint64_t sub_100118F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRITreeViewDropProposal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100118FC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100524BA8;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100119038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 36);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1001190C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_1001190F8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_100119154(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1001191B0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10011920C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100119268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100119274);
}

uint64_t sub_100119274(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v10);
  }
}

uint64_t sub_1001192F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001192FC);
}

_BYTE *sub_1001192FC(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator.MultiRowReorderState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator.MultiRowReorderState);
}

uint64_t sub_100119378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100119380(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 0, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

uint64_t *sub_1001193D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_10011949C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_100119504(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1001195A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_100119698(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10011973C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10011982C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100119838);
}

uint64_t sub_100119838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for IndexPath(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_100119884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100119890);
}

uint64_t sub_100119890(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1001198E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_10011991C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator.DragType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator.DragType);
}

uint64_t sub_100119968(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001199B4 + 4 * byte_100524B02[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001199E8 + 4 * byte_100524AFD[v4]))();
}

uint64_t sub_1001199E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001199F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001199F8);
  return result;
}

uint64_t sub_100119A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100119A0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100119A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100119A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropUpdateCoordinator.Portion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropUpdateCoordinator.Portion);
}

uint64_t sub_100119A30(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100524D20, a1);
}

ValueMetadata *type metadata accessor for TTRIReminderPrintingAssembly()
{
  return &type metadata for TTRIReminderPrintingAssembly;
}

uint64_t sub_100119A54(uint64_t a1)
{
  __n128 v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  _QWORD v20[5];

  type metadata accessor for RDIDispatchQueue(0);
  v3 = (id)static RDIDispatchQueue.storeUserInteractiveQueue.getter(v2);
  v4 = static RDIDispatchQueue.storeQueue.getter();
  v5 = type metadata accessor for REMContactsProvider(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v20[3] = v5;
  v20[4] = &protocol witness table for REMContactsProvider;
  v20[0] = REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(sub_10004931C, 0, v3, v4);
  v6 = type metadata accessor for TTRParticipantAvatarProvider(0);
  swift_allocObject(v6, 128, 7);
  v7 = v3;
  swift_retain();
  v8 = TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)(v20, sub_100042A70, 0, v7);
  sub_100010634(a1, (uint64_t)v20);
  v19[3] = v6;
  v19[4] = &protocol witness table for TTRParticipantAvatarProvider;
  v9 = swift_release();
  v19[0] = v8;
  v10 = type metadata accessor for TTRReminderPrintingInteractor(0, v9);
  swift_allocObject(v10, 104, 7);
  v11 = TTRReminderPrintingInteractor.init(dataModelSource:participantAvatarProvider:participantAvatarProviderInvocationQueue:)(v20, v19, v7);
  v12 = type metadata accessor for TTRIReminderPrintingPresenter();
  v13 = (_QWORD *)swift_allocObject(v12, 56, 7);
  v13[3] = 0;
  v14 = swift_unknownObjectWeakInit(v13 + 2, 0);
  v13[4] = v11;
  v13[5] = &protocol witness table for TTRReminderPrintingInteractor;
  v15 = type metadata accessor for TTRReminderPrintingPresenterCapability(0, v14);
  swift_allocObject(v15, 32, 7);
  v13[6] = TTRReminderPrintingPresenterCapability.init(interactor:)(v11, &protocol witness table for TTRReminderPrintingInteractor);
  v16 = type metadata accessor for TTRIReminderPrintingController();
  v17 = swift_allocObject(v16, 32, 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &off_1005F7410;
  v13[3] = &off_100609A58;
  swift_unknownObjectWeakAssign(v13 + 2, v17);
  swift_retain();
  swift_retain();
  return v17;
}

uint64_t sub_100119C50(uint64_t a1, uint64_t a2)
{
  return sub_10011A084(*(_BYTE *)a1, *(void **)(a1 + 8), *(_BYTE *)a2, *(void **)(a2 + 8));
}

void sub_100119C68(unsigned __int8 a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;

  v3 = v2;
  v6 = *(unsigned __int8 *)(v3 + 32);
  v7 = *(void **)(v3 + 40);
  *(_BYTE *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  v11 = a2;
  if (v6 != a1)
    goto LABEL_7;
  if (!a2)
  {
    if (!v7)
    {
LABEL_8:
      v8 = v7;
      goto LABEL_9;
    }
LABEL_7:
    sub_10000BAC0();
    goto LABEL_8;
  }
  if (!v7)
    goto LABEL_7;
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v8 = v7;
  v9 = v11;
  v10 = static NSObject.== infix(_:_:)(v9, v8);

  if ((v10 & 1) == 0)
    goto LABEL_7;
LABEL_9:

}

uint64_t sub_100119D30()
{
  id *v0;

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t sub_100119D6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_10002A750((uint64_t *)&unk_100646D80);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_100119DC4()
{
  uint64_t v0;

  v0 = sub_10002A750((uint64_t *)&unk_100646D80);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_100119E08(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100019EC8();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_100119E2C()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIAddReminderBarButtonModule.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for TTRIAddReminderBarButtonModule.ViewModel(uint64_t a1)
{

}

uint64_t assignWithCopy for TTRIAddReminderBarButtonModule.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v4;

  return a1;
}

uint64_t assignWithTake for TTRIAddReminderBarButtonModule.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAddReminderBarButtonModule.ViewModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAddReminderBarButtonModule.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAddReminderBarButtonModule.ViewModel()
{
  return &type metadata for TTRIAddReminderBarButtonModule.ViewModel;
}

uint64_t sub_10011A084(char a1, void *a2, char a3, void *a4)
{
  id v6;
  id v7;
  char v8;

  if (a1 != a3)
    return 0;
  if (a2)
  {
    if (a4)
    {
      sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
      v6 = a4;
      v7 = a2;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        return 1;
    }
  }
  else if (!a4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_10011A120()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10011A130()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_10011A14C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100019EC8();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10011A170()
{
  return 8;
}

uint64_t sub_10011A17C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10011A184(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10011A194()
{
  uint64_t v0;

  v0 = sub_10002A750((uint64_t *)&unk_100646D80);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_10011A1D8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10011A1E4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  double x;
  double y;
  CGFloat width;
  double height;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  id v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  id v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  uint64_t v61;
  CGFloat v62;
  char *v63;
  uint64_t v64;
  id v66;
  char *v67;
  id v68;
  uint64_t v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;

  v2 = sub_10002A750(&qword_100646D98);
  __chkstk_darwin(v2);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIPointerShape(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIPointerEffect(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (id *)((char *)&v66 - v14);
  v16 = objc_msgSend(a1, "view");
  if (!v16)
    return 0;
  v17 = v16;
  v18 = objc_opt_self(UIButton);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  if (!v19)
  {

    return 0;
  }
  v20 = v19;
  objc_msgSend(v19, "bounds");
  x = v70.origin.x;
  y = v70.origin.y;
  width = v70.size.width;
  height = v70.size.height;
  v25 = CGRectGetWidth(v70);
  objc_msgSend(v20, "intrinsicContentSize");
  v27 = v26;
  v71.origin.x = x;
  v71.origin.y = y;
  v71.size.width = width;
  v71.size.height = height;
  v28 = CGRectGetWidth(v71);
  if (v27 >= v28)
    v29 = v28;
  else
    v29 = v27;
  v69 = v9;
  v30 = CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)(objc_msgSend(v20, "effectiveUserInterfaceLayoutDirection"), v25, x, y, v29, height);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
  v38 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRect:", v30, v32, v34, v36);
  v67 = v13;
  v68 = v37;
  v39 = v38;
  objc_msgSend(v37, "setVisiblePath:", v38);

  v40 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:", v20, v37);
  v41 = *(double *)UIBarButtonItem.cursorHeightForCustomView.unsafeMutableAddressor();
  v72.origin.x = v30;
  v72.origin.y = v32;
  v72.size.width = v34;
  v72.size.height = v36;
  v42 = (v41 - CGRectGetHeight(v72)) * 0.5;
  if (v42 < 0.0)
    v42 = 0.0;
  v43 = NSDirectionalEdgeInsets.resolved(for:)(objc_msgSend(v20, "effectiveUserInterfaceLayoutDirection"), -v42, -8.5, -v42, -12.0);
  v45 = sub_100038048(v30, v32, v34, v36, v43, v44);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = objc_msgSend(v20, "superview");
  objc_msgSend(v20, "convertRect:toView:", v52, v45, v47, v49, v51);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  *v15 = v40;
  v61 = v69;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for UIPointerEffect.highlight(_:), v69);
  v66 = v40;
  v73.origin.x = v54;
  v73.origin.y = v56;
  v73.size.width = v58;
  v73.size.height = v60;
  v62 = CGRectGetHeight(v73);
  *(CGFloat *)v8 = v54;
  *((CGFloat *)v8 + 1) = v56;
  *((CGFloat *)v8 + 2) = v58;
  *((CGFloat *)v8 + 3) = v60;
  *((CGFloat *)v8 + 4) = v62 * 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UIPointerShape.roundedRect(_:), v5);
  sub_100005ED8(0, &qword_100646DA0, UIPointerStyle_ptr);
  v63 = v67;
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 16))(v67, v15, v61);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v64 = UIPointerStyle.init(effect:shape:)(v63, v4);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v15, v61);
  return v64;
}

id sub_10011A66C(void *a1, void *a2)
{
  id result;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double x;
  double y;
  CGFloat width;
  double height;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  _OWORD v26[2];
  uint64_t v27;
  CGPoint v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  result = objc_msgSend(a1, "view");
  if (result)
  {
    v4 = result;
    v5 = objc_opt_self(UIButton);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "bounds");
      x = v29.origin.x;
      y = v29.origin.y;
      width = v29.size.width;
      height = v29.size.height;
      v12 = CGRectGetWidth(v29);
      objc_msgSend(v7, "intrinsicContentSize");
      v14 = v13;
      v30.origin.x = x;
      v30.origin.y = y;
      v30.size.width = width;
      v30.size.height = height;
      v15 = CGRectGetWidth(v30);
      if (v14 >= v15)
        v16 = v15;
      else
        v16 = v14;
      v17 = CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)(objc_msgSend(v7, "effectiveUserInterfaceLayoutDirection"), v12, x, y, v16, height);
      v19 = v18;
      v21 = v20;
      v23 = v22;

      objc_msgSend(a2, "location");
      v28.x = v24;
      v28.y = v25;
      v31.origin.x = v17;
      v31.origin.y = v19;
      v31.size.width = v21;
      v31.size.height = v23;
      if (CGRectContainsPoint(v31, v28))
      {
        sub_100005ED8(0, &qword_100646D90, UIPointerRegion_ptr);
        v27 = 0;
        memset(v26, 0, sizeof(v26));
        return (id)UIPointerRegion.init(rect:identifier:)(v26, v17, v19, v21, v23);
      }
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIAddReminderBarButtonModule.Title(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10011A844 + 4 * byte_100524DA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10011A878 + 4 * asc_100524DA0[v4]))();
}

uint64_t sub_10011A878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011A880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10011A888);
  return result;
}

uint64_t sub_10011A894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10011A89CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10011A8A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011A8A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIAddReminderBarButtonModule.Title()
{
  return &type metadata for TTRIAddReminderBarButtonModule.Title;
}

unint64_t sub_10011A8C8()
{
  unint64_t result;

  result = qword_100646DA8;
  if (!qword_100646DA8)
  {
    result = swift_getWitnessTable(&unk_100524EF8, &type metadata for TTRIAddReminderBarButtonModule.Title);
    atomic_store(result, (unint64_t *)&qword_100646DA8);
  }
  return result;
}

void sub_10011A910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  _QWORD v35[4];
  _OWORD v36[2];
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  void *v40;

  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v32 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v29 = (uint64_t)&v28 - v9;
  v10 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v31 = (unint64_t)(v11 + 63) >> 6;
  v33 = a1;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  v15 = _swiftEmptyArrayStorage;
  if (v13)
    goto LABEL_6;
LABEL_7:
  v18 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v18 < v31)
    {
      v19 = *(_QWORD *)(v30 + 8 * v18);
      ++v14;
      if (v19)
        goto LABEL_22;
      v14 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v30 + 8 * v14);
      if (v19)
        goto LABEL_22;
      v14 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v30 + 8 * v14);
      if (v19)
        goto LABEL_22;
      v14 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v30 + 8 * v14);
      if (v19)
      {
LABEL_22:
        v13 = (v19 - 1) & v19;
        for (i = __clz(__rbit64(v19)) + (v14 << 6); ; i = v16 | (v14 << 6))
        {
          sub_1001033E8(*(_QWORD *)(v33 + 48) + 40 * i, (uint64_t)v38);
          v36[0] = v38[0];
          v36[1] = v38[1];
          v37 = v39;
          v35[3] = &type metadata for AnyHashable;
          v35[0] = swift_allocObject(&unk_1005F2508, 56, 7);
          sub_1001033E8((uint64_t)v36, v35[0] + 16);
          sub_100028CFC((uint64_t)v35, (uint64_t)v34);
          v21 = type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
          v22 = swift_dynamicCast(&v40, v34, &type metadata for Any[8], v21, 6);
          if ((_DWORD)v22)
          {
            v23 = v40;
            AnyHashable.base.getter(v34, v22);

            v24 = swift_dynamicCast(v4, v34, &type metadata for Any[8], v5, 6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v24 ^ 1u, 1, v5);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
          }
          sub_100027F10(v35);
          sub_100041DDC((uint64_t)v36);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {
            sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
            if (!v13)
              goto LABEL_7;
          }
          else
          {
            v25 = v29;
            sub_10001F580((uint64_t)v4, v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            sub_10001F580(v25, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
              v15 = (_QWORD *)sub_10045618C(0, v15[2] + 1, 1, (unint64_t)v15);
            v27 = v15[2];
            v26 = v15[3];
            if (v27 >= v26 >> 1)
              v15 = (_QWORD *)sub_10045618C(v26 > 1, v27 + 1, 1, (unint64_t)v15);
            v15[2] = v27 + 1;
            sub_10001F580(v32, (uint64_t)v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            if (!v13)
              goto LABEL_7;
          }
LABEL_6:
          v16 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      v20 = v18 + 4;
      if (v20 < v31)
      {
        v19 = *(_QWORD *)(v30 + 8 * v20);
        if (v19)
        {
          v14 = v20;
          goto LABEL_22;
        }
        while (1)
        {
          v14 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_35;
          if (v14 >= v31)
            break;
          v19 = *(_QWORD *)(v30 + 8 * v14);
          ++v20;
          if (v19)
            goto LABEL_22;
        }
      }
    }
LABEL_33:
    swift_release();
    return;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_10011AD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  void *v10;
  _QWORD v11[4];

  sub_100028CFC(a1, (uint64_t)v11);
  v3 = type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
  v4 = swift_dynamicCast(&v10, v11, &type metadata for Any[8], v3, 6);
  if ((_DWORD)v4)
  {
    v5 = v10;
    AnyHashable.base.getter(v11, v4);

    v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v7 = swift_dynamicCast(a2, v11, &type metadata for Any[8], v6, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, v7 ^ 1u, 1, v6);
  }
  else
  {
    v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
}

uint64_t sub_10011AE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (!v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100646950);
    return 0;
  }
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (!v14)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v15 = v14;
  v16 = (void *)UICollectionView.visibleCellForItem(at:)(v11);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (v16)
  {
    v17 = type metadata accessor for TTRIBoardReminderCell(0);
    result = swift_dynamicCastClass(v16, v17);
    if (result)
      return result;

  }
  return 0;
}

void *sub_10011AFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *result;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v23 - v14;
  result = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v17 = objc_msgSend(result, "indexPathForCell:", a1, v13);
  if (v17)
  {
    v18 = v17;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v17);

    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v7, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      result = (void *)((uint64_t (*)(char *, char *, uint64_t))v19)(v15, v7, v8);
      v20 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
      if (v20)
      {
        v21 = v20;
        dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v15);

        return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      }
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1000073A0((uint64_t)v7, &qword_100646950);
  v22 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
}

id sub_10011B1DC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver] = 0;
  v12 = &v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_chromelessBarsStateContributor] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability] = 0;
  v13 = (uint64_t *)&v6[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_eventPublishers];
  v14 = sub_10002A750(&qword_100646F70);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = v6;
  v16 = PassthroughSubject.init()();
  v17 = sub_10002A750(&qword_100646F60);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = PassthroughSubject.init()();
  *v13 = v16;
  v13[1] = v18;
  v19 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_prefetchExtender;
  v20 = type metadata accessor for TTRListContentsPrefetchExtender(0);
  swift_allocObject(v20, 32, 7);
  *(_QWORD *)&v15[v19] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)(20);
  *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator] = 0;
  swift_unknownObjectWeakInit(&v15[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnDraggingHandler], 0);

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  sub_10011B398();

  return v21;
}

void sub_10011B398()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD v34[35];
  char v35[24];
  objc_super v36;

  v1 = v0;
  sub_10011BAE8();
  sub_10011BF64();
  v2 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource;
  v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource];
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = &v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_eventPublishers];
  v34[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_eventPublishers];
  v7 = v3;
  v8 = v5;
  v9 = sub_10002A750(&qword_100646F70);
  v10 = sub_100023FEC(&qword_100646F78, &qword_100646F70, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v11 = Publisher.eraseToAnyPublisher()(v9, v10);
  v34[0] = *((_QWORD *)v6 + 1);
  v12 = sub_10002A750(&qword_100646F60);
  v13 = sub_100023FEC(&qword_100646F80, &qword_100646F60, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v14 = Publisher.eraseToAnyPublisher()(v12, v13);
  v15 = (objc_class *)type metadata accessor for TTRIBoardColumnScrollingController();
  v16 = (char *)objc_allocWithZone(v15);
  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView] = v7;
  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_dataSource] = v8;
  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_willDisplayCell] = v11;
  *(_QWORD *)&v16[OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_didEndScrollingAnimation] = v14;
  v36.receiver = v16;
  v36.super_class = v15;
  v17 = objc_msgSendSuper2(&v36, "init", v34[0]);
  v18 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController] = v17;

  v19 = *(void **)&v1[v4];
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v20 = type metadata accessor for TTRBoardColumnPresentationTreesManagementViewCapability(0);
  swift_allocObject(v20, 64, 7);
  v21 = TTRBoardColumnPresentationTreesManagementViewCapability.init(dataSource:)(v19);
  v22 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability] = v21;
  swift_release();
  v23 = *(_QWORD *)&v1[v22];
  if (!v23)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  swift_beginAccess(v23 + 16, v35, 1, 0);
  *(_QWORD *)(v23 + 24) = &off_1005F24D8;
  swift_unknownObjectWeakAssign(v23 + 16, v1);
  v24 = swift_allocObject(&unk_1005F2530, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v1);
  v25 = sub_10002A750(&qword_100646F88);
  swift_allocObject(v25, 72, 7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver] = TTRViewModelObserver.init(didReceiveNewValue:)(sub_100123000, v24);
  swift_release();
  v26 = swift_allocObject(&unk_1005F2530, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, v1);
  v27 = sub_10002A750((uint64_t *)&unk_100646F90);
  swift_allocObject(v27, 88, 7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver] = TTRViewModelObserver.init(didReceiveNewValue:)(sub_100123008, v26);
  v28 = objc_msgSend(v1, "contentView", swift_release().n128_f64[0]);
  v29 = *(void **)&v1[v2];
  if (v29)
  {
    v30 = v28;
    v31 = type metadata accessor for TTRIBoardColumnDraggingAnimator();
    v32 = swift_allocObject(v31, 312, 7);
    sub_10007EEC8((uint64_t)v34);
    sub_10000F614((uint64_t)v34, v32 + 32, &qword_100641248);
    *(_QWORD *)(v32 + 16) = v30;
    *(_QWORD *)(v32 + 24) = v29;
    *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator] = v32;
    v33 = v29;
    swift_release();
    return;
  }
LABEL_11:
  __break(1u);
}

id sub_10011B718(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver] = 0;
  v5 = &v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_chromelessBarsStateContributor] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability] = 0;
  v6 = (uint64_t *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_eventPublishers];
  v7 = sub_10002A750(&qword_100646F70);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = v2;
  v9 = PassthroughSubject.init()();
  v10 = sub_10002A750(&qword_100646F60);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = PassthroughSubject.init()();
  *v6 = v9;
  v6[1] = v11;
  v12 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_prefetchExtender;
  v13 = type metadata accessor for TTRListContentsPrefetchExtender(0);
  swift_allocObject(v13, 32, 7);
  *(_QWORD *)&v8[v12] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)(20);
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator] = 0;
  swift_unknownObjectWeakInit(&v8[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnDraggingHandler], 0);

  v18.receiver = v8;
  v18.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v18, "initWithCoder:", a1);
  v15 = v14;
  if (v14)
  {
    v16 = v14;
    sub_10011B398();

  }
  return v15;
}

void sub_10011B8DC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  NSString *v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  char v17[24];
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v18.receiver = v3;
  v18.super_class = ObjectType;
  objc_msgSendSuper2(&v18, "prepareForReuse");
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability];
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess(v9 + 32, v17, 0, 0);
  if (!*(_QWORD *)(v9 + 32))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  swift_retain();
  TTRViewModelObserver.unsubscribe()();
  swift_release();
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_retain();
  TTRViewModelObserver.unsubscribe()();
  swift_release();
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_retain();
  TTRViewModelObserver.unsubscribe()();
  swift_release();
  v10 = *(void **)&v3[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
  if (!v10)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v11 = UICollectionElementKindSectionHeader;
  v12 = v10;
  IndexPath.init(item:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = objc_msgSend(v12, "supplementaryViewForElementKind:atIndexPath:", v11, isa);

  if (v14)
  {
    v15 = type metadata accessor for TTRIBoardEditableColumnHeader();
    if (swift_dynamicCastClass(v14, v15))
      sub_10050609C();

  }
}

void sub_10011BAE8()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  Class isa;

  v1 = objc_msgSend(v0, "contentView");
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v10 = sub_100121F1C();
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIBoardColumnCollectionView()), "initWithFrame:collectionViewLayout:", v10, v3, v5, v7, v9);

  objc_msgSend(v11, "setClipsToBounds:", 0);
  objc_msgSend(v11, "setAllowsSelection:", 1);
  objc_msgSend(v11, "setAllowsMultipleSelection:", 0);
  objc_msgSend(v11, "setAllowsSelectionDuringEditing:", 1);
  objc_msgSend(v11, "setAllowsMultipleSelectionDuringEditing:", 1);
  objc_msgSend(v11, "setAlwaysBounceVertical:", 1);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v11;
  v14 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(v13, "setDelegate:", v0);
  objc_msgSend(v13, "setPrefetchDataSource:", v0);
  v15 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView] = v13;
  v16 = v13;

  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = objc_msgSend(v0, "contentView");
  objc_msgSend(v17, "addSubview:", v16);

  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100520050;
  v21 = objc_msgSend(v0, "contentView");
  v22 = objc_msgSend(v21, "leadingAnchor");

  v23 = objc_msgSend(v16, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v20 + 32) = v24;
  v25 = objc_msgSend(v0, "contentView");
  v26 = objc_msgSend(v25, "trailingAnchor");

  v27 = objc_msgSend(v16, "trailingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v20 + 40) = v28;
  v29 = objc_msgSend(v0, "contentView");
  v30 = objc_msgSend(v29, "topAnchor");

  v31 = objc_msgSend(v16, "topAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 48) = v32;
  v33 = objc_msgSend(v0, "contentView");
  v34 = objc_msgSend(v33, "bottomAnchor");

  v35 = objc_msgSend(v16, "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v20 + 56) = v36;
  specialized Array._endMutation()(v37);
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v18, "activateConstraints:", isa);

}

void sub_10011BF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v1 = v0;
  v41 = sub_10002A750(&qword_100646FA0);
  v2 = *(_QWORD *)(v41 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = __chkstk_darwin(v41);
  v39 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - v5;
  v43 = sub_10002A750(&qword_100646FA8);
  v7 = *(_QWORD *)(v43 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v43);
  v10 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - v11;
  v13 = swift_allocObject(&unk_1005F2530, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = type metadata accessor for TTRIBoardReminderCell(0);
  v15 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v42 = v12;
  UICollectionView.CellRegistration.init(handler:)(sub_100123010, v13, v14, v15);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v18 = v17;
  v19 = swift_allocObject(&unk_1005F2530, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  v20 = type metadata accessor for TTRIBoardEditableColumnHeader();
  v40 = v6;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v16, v18, sub_100123018, v19, v20);
  v21 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (v21)
  {
    v22 = v43;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v42, v43);
    v23 = *(unsigned __int8 *)(v7 + 80);
    v24 = (v23 + 16) & ~v23;
    v25 = swift_allocObject(&unk_1005F2558, v24 + v8, v23 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25 + v24, v10, v22);
    v26 = objc_allocWithZone((Class)type metadata accessor for TTRBoardColumnDiffableDataSource(0));
    v27 = TTRBoardColumnDiffableDataSource.init(collectionView:cellProvider:)(v21, sub_10012302C, v25);
    v28 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource;
    v29 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource) = v27;

    v30 = *(void **)(v1 + v28);
    if (v30)
    {
      v32 = v39;
      v31 = v40;
      v33 = v41;
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v39, v40, v41);
      v34 = *(unsigned __int8 *)(v2 + 80);
      v35 = (v34 + 16) & ~v34;
      v36 = swift_allocObject(&unk_1005F2580, v35 + v3, v34 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v36 + v35, v32, v33);
      v37 = v30;
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1001230EC, v36);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v31, v33);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v43);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10011C24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  char v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver);
    if (v5)
    {
      swift_beginAccess(v5 + 16, &v11, 0, 0);
      if ((*(_BYTE *)(v5 + 32) & 1) != 0)
      {
LABEL_7:

        return;
      }
      v6 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView;
      v7 = *(void **)&v4[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v8, "contentInset");
        objc_msgSend(v8, "setContentInset:");

        v9 = *(void **)&v4[v6];
        if (v9)
        {
          v10 = v9;
          objc_msgSend(v10, "verticalScrollIndicatorInsets");
          objc_msgSend(v10, "setVerticalScrollIndicatorInsets:");

          v4 = v10;
          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_10011C360(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10011C3BC(v2, v2 ^ 1);

  }
}

void sub_10011C3BC(int a1, int a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t i;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  void (*v55)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v56;
  id v57;
  Class v58;
  __n128 v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int64_t v68;
  unint64_t v69;
  int64_t v70;
  void *v71;
  id v72;
  Class v73;
  int64_t v74;
  char *v75;
  uint64_t v76;
  int64_t v77;
  int64_t v78;
  void *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void (*v84)(_BYTE *, unint64_t, uint64_t);
  void (*v85)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v86;
  id v87;
  Class isa;
  _BYTE v89[4];
  int v90;
  _BYTE *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int64_t v96;
  int64_t v97;
  _QWORD *v98;
  int64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  id v102;
  int v103;
  _QWORD *v104;
  char v105[32];

  v103 = a2;
  v95 = a1;
  v94 = 0;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v89[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v89[-v9];
  __chkstk_darwin(v8);
  v12 = &v89[-v11];
  v13 = sub_10002A750(&qword_100646950);
  v14 = __chkstk_darwin(v13);
  v16 = &v89[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v89[-v18];
  __chkstk_darwin(v17);
  v21 = &v89[-v20];
  v102 = v2;
  v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver];
  if (!v22)
    goto LABEL_93;
  swift_beginAccess(v22 + 16, v105, 0, 0);
  v23 = *(_QWORD **)(v22 + 24);
  if (!v23)
    return;
  v100 = v16;
  v91 = v7;
  v92 = v23;
  v90 = *(unsigned __int8 *)(v22 + 48);
  v25 = *(_QWORD *)(v22 + 32);
  v24 = *(_QWORD *)(v22 + 40);
  v26 = *(_QWORD *)(v22 + 16);
  v93 = v24;
  if ((v95 & 1) == 0 && (v26 & 0x100) != 0)
  {
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    if ((v25 & 1) == 0)
      goto LABEL_11;
LABEL_10:
    v30 = v91;
    v31 = v100;
    v32 = v102;
LABEL_72:
    if ((v90 & 1) != 0)
    {
      swift_bridgeObjectRelease(v93);
      v74 = (int64_t)v92;
LABEL_84:
      swift_bridgeObjectRelease(v74);
      return;
    }
LABEL_74:
    swift_bridgeObjectRelease(v92);
    v75 = v32;
    v76 = v93;
    sub_100121B18(v93, (uint64_t)v75);
    v78 = v77;
    swift_bridgeObjectRelease(v76);

    v101 = (_BYTE *)OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView;
    v102 = v75;
    v79 = *(void **)&v75[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
    if (!v79)
      goto LABEL_95;
    objc_msgSend(v79, "_highlightItemAtIndexPath:animated:scrollPosition:", 0, v103 & 1, 0);
    v80 = *(_QWORD *)(v78 + 16);
    if (v80)
    {
      v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v99 = v78;
      v82 = v78 + v81;
      v83 = *(_QWORD *)(v4 + 72);
      v84 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v4 + 16);
      while (1)
      {
        v84(v31, v82, v3);
        v85 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v85(v31, 0, 1, v3);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v31, 1, v3) == 1)
          break;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v30, v31, v3);
        v86 = *(void **)&v101[(_QWORD)v102];
        if (!v86)
          goto LABEL_92;
        v87 = v86;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v87, "_highlightItemAtIndexPath:animated:scrollPosition:", isa, v103 & 1, 0);

        (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v30, v3);
        v82 += v83;
        --v80;
        v31 = v100;
        if (!v80)
        {
          v78 = v99;
          goto LABEL_82;
        }
      }
      v74 = v99;
    }
    else
    {
      v85 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_82:
      v85(v31, 1, 1, v3);
      v74 = v78;
    }
    goto LABEL_84;
  }
  v28 = *(void **)((char *)v102 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (!v28)
    goto LABEL_94;
  v29 = v26 & 1;
  swift_bridgeObjectRetain(v23);
  v27 = objc_msgSend(v28, "setEditing:", v29, swift_bridgeObjectRetain(v93).n128_f64[0]);
  if ((v95 & 1) == 0 && (v25 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  v101 = v89;
  v33 = v92;
  v104 = v92;
  __chkstk_darwin(v27);
  *(_QWORD *)&v89[-16] = v102;
  swift_bridgeObjectRetain(v33);
  v99 = sub_10002A750((uint64_t *)&unk_100646F30);
  v34 = sub_100023FEC((unint64_t *)&unk_100640F10, (uint64_t *)&unk_100646F30, (uint64_t)&protocol conformance descriptor for Set<A>);
  v35 = sub_100117768((unint64_t *)&qword_1006463A0, (uint64_t)&protocol conformance descriptor for IndexPath);
  v36 = v94;
  v37 = Sequence.compactMapToSet<A>(_:)(sub_10011F04C, &v89[-32], v99, v3, v34, v35);
  swift_bridgeObjectRelease(v33);
  v38 = *(_QWORD *)(v37 + 16);
  v94 = v36;
  if (!v38)
  {
    swift_bridgeObjectRelease(v37);
    v32 = v102;
    v43 = *(void **)((char *)v102 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
    if (!v43)
      goto LABEL_97;
    objc_msgSend(v43, "selectItemAtIndexPath:animated:scrollPosition:", 0, v103 & 1, 0);
    v30 = v91;
    v31 = v100;
LABEL_71:
    if ((v95 & 1) != 0)
      goto LABEL_74;
    goto LABEL_72;
  }
  v101 = (_BYTE *)OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView;
  v39 = *(void **)((char *)v102 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (!v39)
    goto LABEL_96;
  v40 = objc_msgSend(v39, "indexPathsForSelectedItems");
  if (v40)
  {
    v41 = v40;
    v42 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v3);

  }
  else
  {
    v42 = _swiftEmptyArrayStorage;
  }
  v44 = sub_1003E7E28((uint64_t)v42);
  swift_bridgeObjectRelease(v42);
  if (*(_QWORD *)(v37 + 16) <= *(_QWORD *)(v44 + 16) >> 3)
  {
    v104 = (_QWORD *)v44;
    swift_bridgeObjectRetain(v44);
    sub_1000F6DC8(v37);
    v99 = (int64_t)v104;
  }
  else
  {
    swift_bridgeObjectRetain(v44);
    v99 = (int64_t)sub_10011FCBC(v37, v44);
  }
  if (*(_QWORD *)(v44 + 16) <= *(_QWORD *)(v37 + 16) >> 3)
  {
    v104 = (_QWORD *)v37;
    sub_1000F6DC8(v44);
    swift_bridgeObjectRelease(v44);
    v98 = v104;
  }
  else
  {
    v98 = sub_10011FCBC(v44, v37);
    swift_bridgeObjectRelease(v44);
  }
  v45 = 0;
  v46 = *(_QWORD *)(v99 + 56);
  v96 = v99 + 56;
  v47 = 1 << *(_BYTE *)(v99 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v97 = (unint64_t)(v47 + 63) >> 6;
  if ((v48 & v46) == 0)
    goto LABEL_28;
LABEL_27:
  v50 = __clz(__rbit64(v49));
  v49 &= v49 - 1;
  for (i = v50 | (v45 << 6); ; i = __clz(__rbit64(v53)) + (v45 << 6))
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v4 + 16))(v21, *(_QWORD *)(v99 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    v55 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v55(v21, 0, 1, v3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v21, 1, v3) == 1)
      goto LABEL_47;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v21, v3);
    v56 = *(void **)&v101[(_QWORD)v102];
    if (!v56)
      goto LABEL_90;
    v57 = v56;
    v58 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v57, "deselectItemAtIndexPath:animated:", v58, v103 & 1);

    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v12, v3);
    if (v49)
      goto LABEL_27;
LABEL_28:
    v52 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    if (v52 >= v97)
      goto LABEL_46;
    v53 = *(_QWORD *)(v96 + 8 * v52);
    ++v45;
    if (!v53)
    {
      v45 = v52 + 1;
      if (v52 + 1 >= v97)
        goto LABEL_46;
      v53 = *(_QWORD *)(v96 + 8 * v45);
      if (!v53)
      {
        v45 = v52 + 2;
        if (v52 + 2 >= v97)
          goto LABEL_46;
        v53 = *(_QWORD *)(v96 + 8 * v45);
        if (!v53)
          break;
      }
    }
LABEL_41:
    v49 = (v53 - 1) & v53;
  }
  v54 = v52 + 3;
  if (v54 < v97)
  {
    v53 = *(_QWORD *)(v96 + 8 * v54);
    if (!v53)
    {
      while (1)
      {
        v45 = v54 + 1;
        if (__OFADD__(v54, 1))
          break;
        if (v45 >= v97)
          goto LABEL_46;
        v53 = *(_QWORD *)(v96 + 8 * v45);
        ++v54;
        if (v53)
          goto LABEL_41;
      }
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    v45 = v54;
    goto LABEL_41;
  }
LABEL_46:
  v55 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v55(v21, 1, 1, v3);
LABEL_47:
  v59 = swift_release();
  v60 = 0;
  v62 = (char *)(v98 + 7);
  v61 = v98[7];
  v63 = 1 << *((_BYTE *)v98 + 32);
  v64 = -1;
  if (v63 < 64)
    v64 = ~(-1 << v63);
  v65 = v64 & v61;
  v99 = (unint64_t)(v63 + 63) >> 6;
  if ((v64 & v61) == 0)
    goto LABEL_51;
  while (2)
  {
    v66 = __clz(__rbit64(v65));
    v65 &= v65 - 1;
    v67 = v66 | (v60 << 6);
LABEL_65:
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v4 + 16))(v19, v98[6] + *(_QWORD *)(v4 + 72) * v67, v3, v59);
    v55(v19, 0, 1, v3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v19, 1, v3) == 1)
      goto LABEL_70;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v10, v19, v3);
    v71 = *(void **)&v101[(_QWORD)v102];
    if (!v71)
      goto LABEL_91;
    v72 = v71;
    v73 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v72, "selectItemAtIndexPath:animated:scrollPosition:", v73, v103 & 1, 0);

    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v10, v3);
    if (v65)
      continue;
    break;
  }
LABEL_51:
  v68 = v60 + 1;
  if (__OFADD__(v60, 1))
    goto LABEL_87;
  if (v68 >= v99)
  {
LABEL_69:
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v55)(v19, 1, 1, v3, v59);
LABEL_70:
    swift_release();
    v30 = v91;
    v31 = v100;
    v32 = v102;
    goto LABEL_71;
  }
  v69 = *(_QWORD *)&v62[8 * v68];
  ++v60;
  if (v69)
    goto LABEL_64;
  v60 = v68 + 1;
  if (v68 + 1 >= v99)
    goto LABEL_69;
  v69 = *(_QWORD *)&v62[8 * v60];
  if (v69)
    goto LABEL_64;
  v60 = v68 + 2;
  if (v68 + 2 >= v99)
    goto LABEL_69;
  v69 = *(_QWORD *)&v62[8 * v60];
  if (v69)
  {
LABEL_64:
    v65 = (v69 - 1) & v69;
    v67 = __clz(__rbit64(v69)) + (v60 << 6);
    goto LABEL_65;
  }
  v70 = v68 + 3;
  if (v70 >= v99)
    goto LABEL_69;
  v69 = *(_QWORD *)&v62[8 * v70];
  if (v69)
  {
    v60 = v70;
    goto LABEL_64;
  }
  while (1)
  {
    v60 = v70 + 1;
    if (__OFADD__(v70, 1))
      break;
    if (v60 >= v99)
      goto LABEL_69;
    v69 = *(_QWORD *)&v62[8 * v60];
    ++v70;
    if (v69)
      goto LABEL_64;
  }
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
}

uint64_t sub_10011CD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability);
    if (v9)
    {
      result = swift_beginAccess(v9 + 40, &v14, 0, 0);
      v10 = *(_QWORD *)(v9 + 40);
      if (v10)
      {
        swift_retain(*(_QWORD *)(v9 + 40));
        v11 = TTRObservableViewModelCollection.observableViewModel(forItemID:)(a3);
        swift_release(v10);
        v12 = a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_delegate;
        *(_QWORD *)(v12 + 8) = &off_1005F2428;
        result = swift_unknownObjectWeakAssign(v12, v8);
        v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver);
        if (v13)
        {
          swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver));
          TTRViewModelObserver.subscribeIfNeeded(to:)(v11);

          swift_release(v11);
          return swift_release(v13);
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_10011CE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability);
    if (!v9)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return;
    }
    swift_beginAccess(v9 + 48, &v13, 0, 0);
    v10 = *(_QWORD *)(v9 + 48);
    if (v10)
    {
      v11 = a1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate;
      *(_QWORD *)(v11 + 8) = &off_1005F2410;
      swift_unknownObjectWeakAssign(v11, v8);
      v12 = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnDraggingHandler]);
      swift_retain();
      sub_100505CE0(v12);
      if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver))
      {
        swift_retain();
        TTRViewModelObserver.subscribeIfNeeded(to:)(v10);

        swift_release();
        swift_release();
        return;
      }
      goto LABEL_9;
    }

  }
}

uint64_t sub_10011CF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = type metadata accessor for TTRIBoardReminderCell(0);
  v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v11, v10);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  return v12;
}

uint64_t sub_10011D058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      return 0;
  }
  v15 = type metadata accessor for TTRIBoardEditableColumnHeader();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(a5, a4, v15);
}

void sub_10011D100(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (v2)
  {
    v4 = v2;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRIBoardColumnCollectionViewCell()
{
  return objc_opt_self(_TtC9Reminders33TTRIBoardColumnCollectionViewCell);
}

void sub_10011D274(uint64_t a1, char a2)
{
  void *v2;
  id v4;

  v4 = objc_msgSend(v2, "contentView");
  objc_msgSend(v4, "setUserInteractionEnabled:", a2 & 1);

}

void sub_10011D2C8(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;

  if ((a2 & 1) == 0)
    goto LABEL_4;
  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (v3)
  {
    objc_msgSend(v3, "_scrollToTopIfPossible:", 0);
LABEL_4:
    sub_10011C3BC(1, 0);
    return;
  }
  __break(1u);
}

uint64_t sub_10011D3C0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60[16];
  uint64_t v61;
  char v62[16];
  uint64_t v63;
  _QWORD *v64;

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  v58 = v10;
  v11 = __chkstk_darwin(v9);
  v56 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v52 = (uint64_t)&v50 - v13;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a1;
  v61 = a1;
  v21 = TTRListContentsPrefetchExtender.extendFetchIndexPaths(_:sectionCountProvider:rowCountProvider:)(a2, sub_100122FB8, v62, sub_100122FC8, v60);
  v22 = v21;
  v23 = *(_QWORD *)(v21 + 16);
  if (v23)
  {
    v24 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v50 = v21;
    v25 = v21 + v24;
    v53 = *(_QWORD *)(v15 + 72);
    v54 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource;
    v55 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v26 = v3;
    v59 = _swiftEmptyArrayStorage;
    v27 = v3;
    v51 = v3;
    while (1)
    {
      v55(v20, v25, v14);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v28(v20, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
      {
        v22 = v50;
        goto LABEL_17;
      }
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
      v30 = *(void **)&v27[v54];
      if (!v30)
        break;
      v31 = v30;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v17);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v8, 1, v57) == 1)
      {
        sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006463C0);
      }
      else
      {
        v32 = v52;
        sub_10001F580((uint64_t)v8, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10001F580(v32, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) != 0)
          v33 = (unint64_t)v59;
        else
          v33 = sub_10045618C(0, v59[2] + 1, 1, (unint64_t)v59);
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
          v33 = sub_10045618C(v34 > 1, v35 + 1, 1, v33);
        *(_QWORD *)(v33 + 16) = v35 + 1;
        v36 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        v59 = (_QWORD *)v33;
        sub_10001F580(v56, v33 + v36 + *(_QWORD *)(v58 + 72) * v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v27 = v51;
      }
      v25 += v53;
      if (!--v23)
      {
        v22 = v50;
        v28(v20, 1, 1, v14);
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  v27 = v3;
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v38 = v27;
  v59 = _swiftEmptyArrayStorage;
  v37(v20, 1, 1, v14);
LABEL_17:
  swift_bridgeObjectRelease(v22);

  result = swift_unknownObjectWeakLoadStrong(&v27[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate]);
  if (!result)
  {
    v49 = v59;
    return swift_bridgeObjectRelease(v49);
  }
  v39 = result;
  v40 = *(void **)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  v41 = v59;
  if (v40)
  {
    v64 = v59;
    v42 = v40;
    v43 = sub_10002A750((uint64_t *)&unk_100646F50);
    v44 = sub_100023FEC((unint64_t *)&qword_100642EB8, (uint64_t *)&unk_100646F50, (uint64_t)&protocol conformance descriptor for [A]);
    v45 = TTRRemindersBoardMainDiffableDataSource.items<A>(withIDs:)(&v64, v43, v44);

    v46 = *(_QWORD *)(v39 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v39 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v47);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 + 8) + 432))(v45, ObjectType);
    swift_bridgeObjectRelease(v41);
    swift_unknownObjectRelease(v39);
    v49 = (_QWORD *)v45;
    return swift_bridgeObjectRelease(v49);
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10011D970@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a4;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v22 - v16;
  v18 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController);
  if (v18)
  {
    v19 = v18;
    sub_1002EC998(a1, a2, a3, (uint64_t)v17);

    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, v20, 1, v8);
  sub_10000F614((uint64_t)v17, (uint64_t)v15, &qword_100646950);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v11, v8);
    return sub_1000073A0((uint64_t)v15, &qword_100646950);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v15, v8);
  }
}

uint64_t sub_10011DCEC(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  sub_1001226AC((uint64_t)v12, a5);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10011DE24(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = a5(v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

uint64_t sub_10011DEE4(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  NSString *v42;
  id v43;
  Class isa;
  id v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t Strong;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, __n128);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  CGPoint v71;
  CGRect v72;

  v5 = v4;
  v10 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  v69 = v14;
  v15 = __chkstk_darwin(v13);
  v67 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v63 = (uint64_t)&v59 - v17;
  v18 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for IndexPath(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v23);
  v28 = (char *)&v59 - v27;
  v29 = *(_QWORD *)(a2 + 16);
  v61 = a2;
  if (v29)
  {
    v60 = a1;
    v30 = a2;
    v31 = a2 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v64 = *(_QWORD *)(v22 + 72);
    v65 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource;
    v66 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
    v59 = v5;
    v32 = swift_bridgeObjectRetain(v30);
    v70 = _swiftEmptyArrayStorage;
    v62 = v5;
    while (1)
    {
      v66(v20, v31, v21, v32);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v33(v20, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
      {
        v48 = v61;
        v49 = v59;
        goto LABEL_22;
      }
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, v21);
      v34 = *(void **)&v5[v65];
      if (!v34)
        break;
      v35 = v34;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v25);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v12, 1, v68) == 1)
      {
        sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_1006463C0);
      }
      else
      {
        v36 = v63;
        sub_10001F580((uint64_t)v12, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10001F580(v36, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((swift_isUniquelyReferenced_nonNull_native(v70) & 1) != 0)
          v37 = v70;
        else
          v37 = (_QWORD *)sub_10045618C(0, v70[2] + 1, 1, (unint64_t)v70);
        v39 = v37[2];
        v38 = v37[3];
        if (v39 >= v38 >> 1)
          v37 = (_QWORD *)sub_10045618C(v38 > 1, v39 + 1, 1, (unint64_t)v37);
        v37[2] = v39 + 1;
        v40 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v70 = v37;
        sub_10001F580(v67, (uint64_t)v37 + v40 + *(_QWORD *)(v69 + 72) * v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v5 = v62;
      }
      v31 += v64;
      if (!--v29)
      {
        v48 = v61;
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  v41 = *(void **)&v5[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
  if (!v41)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v42 = UICollectionElementKindSectionHeader;
  v43 = v41;
  IndexPath.init(item:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
  v45 = objc_msgSend(v43, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", v42, isa);

  if (v45)
  {
    objc_msgSend(v45, "frame");
    v71.x = a3;
    v71.y = a4;
    v46 = CGRectContainsPoint(v72, v71);

    if (v46)
      return 0;
  }
  v60 = a1;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v50 = v5;
  v48 = v61;
  swift_bridgeObjectRetain(v61);
  v70 = _swiftEmptyArrayStorage;
LABEL_21:
  v33(v20, 1, 1, v21);
  v49 = v5;
LABEL_22:

  swift_bridgeObjectRelease(v48);
  objc_msgSend(v5, "convertPoint:fromCoordinateSpace:", v60, a3, a4);
  v52 = v51;
  v54 = v53;
  Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate]);
  if (Strong)
  {
    v56 = Strong;
    v57 = v70;
    v47 = sub_100368430((uint64_t)v5, (uint64_t)v70, v52, v54);
    swift_unknownObjectRelease(v56);
    v58 = v57;
  }
  else
  {
    v47 = 0;
    v58 = v70;
  }
  swift_bridgeObjectRelease(v58);
  return v47;
}

void sub_10011E57C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain(a5);
  v12 = a1;
  a6(v11);

  swift_unknownObjectRelease(a5);
}

void sub_10011E600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v3 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v20[-v11 - 8];
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver);
  if (v13)
  {
    v14 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 88);
    v15 = swift_beginAccess(v14, v20, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v14, 1, v3, v15))
    {
      sub_10002B1E8(v14, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F580((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v17 = Strong;
        v18 = type metadata accessor for TTRRemindersBoardCollapsedStatesPresenterCapability(0);
        swift_retain();
        TTRRemindersBoardItemCollapsedStates.toggleCollapsed(for:)(v12, v18, &protocol witness table for TTRRemindersBoardCollapsedStatesPresenterCapability);
        swift_unknownObjectRelease(v17);
        swift_release();
      }
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10011E7C0(uint64_t a1)
{
  sub_10011E7D8(a1, (void (*)(char *))sub_10036D9AC);
}

void sub_10011E7CC(uint64_t a1)
{
  sub_10011E7D8(a1, (void (*)(char *))sub_10036DBB4);
}

void sub_10011E7D8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t Strong;
  uint64_t v19;
  _BYTE v21[24];

  v5 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v21[-v13 - 8];
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver);
  if (v15)
  {
    v16 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 88);
    v17 = swift_beginAccess(v16, v21, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v16, 1, v5, v17))
    {
      sub_10002B1E8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v19 = Strong;
        a2(v14);
        swift_unknownObjectRelease(v19);
      }
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10011E964(uint64_t a1)
{
  sub_10011E7D8(a1, (void (*)(char *))sub_10036DF4C);
}

void sub_10011E970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t Strong;
  uint64_t v19;
  _BYTE v21[24];

  v5 = type metadata accessor for TTRBoardColumnItemIntermediateViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v21[-v13 - 8];
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_intermediateViewModelObserver);
  if (v15)
  {
    v16 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 88);
    v17 = swift_beginAccess(v16, v21, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v16, 1, v5, v17))
    {
      sub_10002B1E8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRBoardColumnItemIntermediateViewModel);
      sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v19 = Strong;
        sub_10036E154((uint64_t)v14, a2);
        swift_unknownObjectRelease(v19);
      }
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_10011EB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  _BYTE v29[24];

  v5 = v4;
  v28 = a4;
  v9 = sub_10002A750((uint64_t *)&unk_1006572F0);
  __chkstk_darwin(v9);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v12);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v19 = a1 + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState;
  swift_beginAccess(v19, v29, 0, 0);
  sub_100122F4C(v19, (uint64_t)v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_10000F614((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_100646F40);
    else
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  else
  {
    sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100646F40);
  }
  else
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v22 = protocol witness table for TTRRemindersListViewModel.Reminder[14](v15);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    if (v22)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v25 = Strong;
        v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v24);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8) + 152))(v22, a2, a3, v28, ObjectType);
        swift_bridgeObjectRelease(v22);
        swift_unknownObjectRelease(v25);
      }
      else
      {
        *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
      }
    }
  }
  return result;
}

char *sub_10011ED78@<X0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  char *result;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  result = (char *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (result)
  {
    v6 = result;
    v8 = *(_QWORD *)&result[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
    v7 = *(_QWORD *)&result[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
    v9 = objc_msgSend(result, "parentViewController");
    v11 = v9;
    if (v9)
    {
      ObjectType = swift_getObjectType(v9, v10);
      v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
      if (v13)
        v14 = v13;
      else
        v14 = 0;
      if (v13)
        v15 = v11;
      else
        v15 = 0;
      if (v15)
      {
        v11 = *(void **)(v14 + 8);
      }
      else
      {

        v11 = 0;
      }
    }
    else
    {
      v15 = 0;
    }
    v16 = swift_getObjectType(v8, v10);
    (*(void (**)(uint64_t, void *, void *, char *, uint64_t))(*(_QWORD *)(v7 + 8) + 256))(a1, v15, v11, v6, v16);
    swift_unknownObjectRelease(v6);
    return (char *)swift_unknownObjectRelease(v15);
  }
  else
  {
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_10011EE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;

  result = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v8);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 224))(a3, a4, ObjectType);
    swift_unknownObjectRelease(v9);
    return v12 & 1;
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardColumnCollectionViewCell.LayoutSection_rdar104564290()
{
  return objc_opt_self(_TtCFC9Reminders33TTRIBoardColumnCollectionViewCellP33_85F1736C0F3FCA12F0884E9AB390A8FE12createLayoutFT_CSo22UICollectionViewLayoutL_27LayoutSection_rdar104564290);
}

uint64_t destroy for TTRIBoardColumnCollectionViewCell.EventPublishers(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s9Reminders33TTRIBoardColumnCollectionViewCellC15EventPublishersVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for TTRIBoardColumnCollectionViewCell.EventPublishers(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for TTRIBoardColumnCollectionViewCell.EventPublishers(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnCollectionViewCell.EventPublishers()
{
  return &type metadata for TTRIBoardColumnCollectionViewCell.EventPublishers;
}

void sub_10011F04C(uint64_t a1)
{
  uint64_t v1;

  sub_10011D100(a1, *(_QWORD *)(v1 + 16));
}

void *sub_10011F064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t isStackAllocationSafe;
  char v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t i;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[9];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;

  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v57);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - v11;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v59 = v10;
  v55 = v6;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v62 = a1;
  v63 = a1 + 56;
  v58 = a1 + 56;
  v56 = ~v14;
  v64 = ~v14;
  v65 = 0;
  v66 = v15 & v13;
  v17 = a2 + 56;
  v18 = (unint64_t)(63 - v14) >> 6;
  v48 = v18 - 1;
  swift_bridgeObjectRetain(a1);
  v19 = 0;
  v51 = v18;
  v50 = v18 - 6;
  v49 = a1 + 104;
  for (i = a1; ; a1 = i)
  {
    v53 = v16;
    v54 = v19;
    if (v16)
    {
      v60 = (v16 - 1) & v16;
      v20 = __clz(__rbit64(v16)) | (v19 << 6);
      v21 = v19;
      v22 = (uint64_t)v55;
      v23 = v59;
LABEL_9:
      sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v23 + 72) * v20, v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v24 = 0;
      goto LABEL_10;
    }
    v21 = v19 + 1;
    v22 = (uint64_t)v55;
    v23 = v59;
    if (__OFADD__(v19, 1))
      __break(1u);
    if (v21 >= v51)
    {
LABEL_35:
      v60 = 0;
      v24 = 1;
      v21 = v19;
      goto LABEL_10;
    }
    v33 = *(_QWORD *)(v58 + 8 * v21);
    if (v33)
      goto LABEL_19;
    v34 = v19 + 2;
    if (v19 + 2 >= v51)
    {
      v60 = 0;
      v24 = 1;
      goto LABEL_10;
    }
    v33 = *(_QWORD *)(v58 + 8 * v34);
    if (v33)
      goto LABEL_22;
    v19 += 3;
    if (v21 + 2 >= v51)
      goto LABEL_36;
    v33 = *(_QWORD *)(v58 + 8 * v19);
    if (v33)
    {
      v21 += 2;
      goto LABEL_19;
    }
    v34 = v21 + 3;
    if (v21 + 3 >= v51)
      goto LABEL_35;
    v33 = *(_QWORD *)(v58 + 8 * v34);
    if (v33)
    {
LABEL_22:
      v21 = v34;
LABEL_19:
      v60 = (v33 - 1) & v33;
      v20 = __clz(__rbit64(v33)) + (v21 << 6);
      goto LABEL_9;
    }
    v21 += 4;
    if (v21 >= v51)
    {
LABEL_36:
      v60 = 0;
      v24 = 1;
      v21 = v34;
    }
    else
    {
      v33 = *(_QWORD *)(v58 + 8 * v21);
      if (v33)
        goto LABEL_19;
      v35 = v54;
      while (v50 != v35)
      {
        v33 = *(_QWORD *)(v49 + 8 * v35++);
        if (v33)
        {
          v21 = v35 + 5;
          goto LABEL_19;
        }
      }
      v60 = 0;
      v24 = 1;
      v21 = v48;
    }
LABEL_10:
    v25 = v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, v24, 1, v57);
    v62 = a1;
    v63 = v58;
    v64 = v56;
    v65 = v21;
    v66 = v60;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v25) == 1)
    {
      sub_10003E410(a1);
      sub_1000073A0(v22, (uint64_t *)&unk_1006463C0);
      return (void *)a2;
    }
    sub_10001F580(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)(v61, *(_QWORD *)(a2 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v61, v26);
    v27 = Hasher._finalize()();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
      break;
LABEL_6:
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v19 = v21;
    v16 = v60;
  }
  v30 = ~v28;
  v31 = *(_QWORD *)(v59 + 72);
  while (1)
  {
    sub_10002B1E8(*(_QWORD *)(a2 + 48) + v31 * v29, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v32 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v12);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v32 & 1) != 0)
      break;
    v29 = (v29 + 1) & v30;
    if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      goto LABEL_6;
  }
  isStackAllocationSafe = sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v37 = *(_BYTE *)(a2 + 32);
  v38 = v37 & 0x3F;
  v39 = (1 << v37) + 63;
  v40 = v39 >> 6;
  v41 = 8 * (v39 >> 6);
  if (v38 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v39 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v48 - ((v41 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v41);
    sub_10012097C((unint64_t *)((char *)&v48 - ((v41 + 15) & 0x3FFFFFFFFFFFFFF0)), v40, a2, v29, &v62);
    v43 = v42;
    swift_release();
    sub_10003E410(v62);
    return (void *)v43;
  }
  else
  {
    v44 = (void *)swift_slowAlloc(v41, -1);
    memcpy(v44, (const void *)(a2 + 56), v41);
    sub_10012097C((unint64_t *)v44, v40, a2, v29, &v62);
    v46 = v45;
    swift_release();
    sub_10003E410(v62);
    swift_slowDealloc(v44, -1, -1);
    return (void *)v46;
  }
}

void *sub_10011F690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t isStackAllocationSafe;
  char v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t v39;
  size_t v40;
  void *v41;
  void *v42;
  void *v43;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t i;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[9];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;

  v4 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v7 = __chkstk_darwin(v54);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v12 = (char *)&v45 - v11;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v56 = v10;
  v52 = v6;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v59 = a1;
  v60 = a1 + 56;
  v55 = a1 + 56;
  v53 = ~v14;
  v61 = ~v14;
  v62 = 0;
  v63 = v15 & v13;
  v17 = a2 + 56;
  v18 = (unint64_t)(63 - v14) >> 6;
  v45 = v18 - 1;
  swift_bridgeObjectRetain(a1);
  v19 = 0;
  v48 = v18;
  v47 = v18 - 6;
  v46 = a1 + 104;
  for (i = a1; ; a1 = i)
  {
    v50 = v16;
    v51 = v19;
    if (v16)
    {
      v57 = (v16 - 1) & v16;
      v20 = __clz(__rbit64(v16)) | (v19 << 6);
      v21 = v19;
      v22 = (uint64_t)v52;
      v23 = v56;
LABEL_9:
      sub_10002B1E8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v23 + 72) * v20, v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v24 = 0;
      goto LABEL_10;
    }
    v21 = v19 + 1;
    v22 = (uint64_t)v52;
    v23 = v56;
    if (__OFADD__(v19, 1))
      __break(1u);
    if (v21 >= v48)
    {
LABEL_35:
      v57 = 0;
      v24 = 1;
      v21 = v19;
      goto LABEL_10;
    }
    v32 = *(_QWORD *)(v55 + 8 * v21);
    if (v32)
      goto LABEL_19;
    v33 = v19 + 2;
    if (v19 + 2 >= v48)
    {
      v57 = 0;
      v24 = 1;
      goto LABEL_10;
    }
    v32 = *(_QWORD *)(v55 + 8 * v33);
    if (v32)
      goto LABEL_22;
    v19 += 3;
    if (v21 + 2 >= v48)
      goto LABEL_36;
    v32 = *(_QWORD *)(v55 + 8 * v19);
    if (v32)
    {
      v21 += 2;
      goto LABEL_19;
    }
    v33 = v21 + 3;
    if (v21 + 3 >= v48)
      goto LABEL_35;
    v32 = *(_QWORD *)(v55 + 8 * v33);
    if (v32)
    {
LABEL_22:
      v21 = v33;
LABEL_19:
      v57 = (v32 - 1) & v32;
      v20 = __clz(__rbit64(v32)) + (v21 << 6);
      goto LABEL_9;
    }
    v21 += 4;
    if (v21 >= v48)
    {
LABEL_36:
      v57 = 0;
      v24 = 1;
      v21 = v33;
    }
    else
    {
      v32 = *(_QWORD *)(v55 + 8 * v21);
      if (v32)
        goto LABEL_19;
      v34 = v51;
      while (v47 != v34)
      {
        v32 = *(_QWORD *)(v46 + 8 * v34++);
        if (v32)
        {
          v21 = v34 + 5;
          goto LABEL_19;
        }
      }
      v57 = 0;
      v24 = 1;
      v21 = v45;
    }
LABEL_10:
    v25 = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, v24, 1, v54);
    v59 = a1;
    v60 = v55;
    v61 = v53;
    v62 = v21;
    v63 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v25) == 1)
    {
      sub_10003E410(a1);
      sub_1000073A0(v22, (uint64_t *)&unk_1006462C0);
      return (void *)a2;
    }
    sub_10001F580(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)(v58, *(_QWORD *)(a2 + 40));
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v58);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(a2 + 32);
    v28 = v26 & ~v27;
    if (((*(_QWORD *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
      break;
LABEL_6:
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v19 = v21;
    v16 = v57;
  }
  v29 = ~v27;
  v30 = *(_QWORD *)(v56 + 72);
  while (1)
  {
    sub_10002B1E8(*(_QWORD *)(a2 + 48) + v30 * v28, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v31 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v9, v12);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if ((v31 & 1) != 0)
      break;
    v28 = (v28 + 1) & v29;
    if (((*(_QWORD *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_6;
  }
  isStackAllocationSafe = sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v36 = *(_BYTE *)(a2 + 32);
  v37 = v36 & 0x3F;
  v38 = (1 << v36) + 63;
  v39 = v38 >> 6;
  v40 = 8 * (v38 >> 6);
  if (v37 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v38 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v45 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v40);
    v41 = sub_100120DA8((unint64_t *)((char *)&v45 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0)), v39, a2, v28, &v59);
    swift_release(a2);
    sub_10003E410(v59);
    return v41;
  }
  else
  {
    v42 = (void *)swift_slowAlloc(v40, -1);
    memcpy(v42, (const void *)(a2 + 56), v40);
    v43 = sub_100120DA8((unint64_t *)v42, v39, a2, v28, &v59);
    swift_release(a2);
    sub_10003E410(v59);
    swift_slowDealloc(v42, -1, -1);
    return v43;
  }
}

void *sub_10011FCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  size_t v51;
  void *v52;
  void *v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;

  v4 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v55 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v62 = a1;
  v63 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v64 = v15;
  v65 = 0;
  v66 = v17 & v14;
  v60 = (char *)(a2 + 56);
  v22 = v18;
  v23 = swift_bridgeObjectRetain(v18);
  v24 = 0;
  v56 = v6;
  v59 = a2;
  v57 = v20;
  v58 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v25 = (v20 - 1) & v20;
  v26 = __clz(__rbit64(v20)) | (v24 << 6);
  v27 = v24;
  v28 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v26, v7, v23);
  v29 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v29, 1, v7);
    v62 = v22;
    v63 = v28;
    v64 = v21;
    v65 = v27;
    v66 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10003E410(v22);
      sub_1000073A0((uint64_t)v6, &qword_100646950);
      return (void *)v59;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v61, v6, v7);
    v33 = v59;
    v34 = *(_QWORD *)(v59 + 40);
    v35 = sub_100117768((unint64_t *)&qword_1006463A0, (uint64_t)&protocol conformance descriptor for IndexPath);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    v37 = -1 << *(_BYTE *)(v33 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)&v60[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) != 0)
      break;
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v45(v61, v7);
    v24 = v65;
    v20 = v66;
    v22 = v62;
    v19 = v63;
    v21 = v64;
    v6 = v56;
    v57 = v66;
    v58 = v65;
    if (v66)
      goto LABEL_6;
LABEL_8:
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
      __break(1u);
    v28 = v19;
    v30 = (unint64_t)(v21 + 64) >> 6;
    if (v27 >= v30)
      goto LABEL_26;
    v31 = *(_QWORD *)(v19 + 8 * v27);
    if (v31)
      goto LABEL_11;
    v24 += 2;
    if (v27 + 1 >= v30)
      goto LABEL_36;
    v31 = *(_QWORD *)(v19 + 8 * v24);
    if (v31)
      goto LABEL_14;
    if (v27 + 2 >= v30)
    {
LABEL_26:
      v25 = 0;
      v29 = 1;
      v27 = v24;
    }
    else
    {
      v31 = *(_QWORD *)(v19 + 8 * (v27 + 2));
      if (v31)
      {
        v27 += 2;
        goto LABEL_11;
      }
      v24 = v27 + 3;
      if (v27 + 3 >= v30)
      {
        v25 = 0;
        v29 = 1;
        v27 += 2;
      }
      else
      {
        v31 = *(_QWORD *)(v19 + 8 * v24);
        if (v31)
        {
LABEL_14:
          v27 = v24;
LABEL_11:
          v25 = (v31 - 1) & v31;
          v26 = __clz(__rbit64(v31)) + (v27 << 6);
          goto LABEL_7;
        }
        v27 += 4;
        if (v27 >= v30)
          goto LABEL_26;
        v31 = *(_QWORD *)(v19 + 8 * v27);
        if (v31)
          goto LABEL_11;
        v27 = v30 - 1;
        v32 = v58 + 6;
        while (v30 != v32)
        {
          v31 = *(_QWORD *)(v19 + 8 * v32++);
          if (v31)
          {
            v27 = v32 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v25 = 0;
        v29 = 1;
      }
    }
  }
  v39 = v33;
  v40 = ~v37;
  v41 = *(_QWORD *)(v8 + 72);
  v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v42(v11, *(_QWORD *)(v39 + 48) + v41 * v38, v7);
    v43 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
    v44 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v61, v7, v43);
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
    v45(v11, v7);
    if ((v44 & 1) != 0)
      break;
    v38 = (v38 + 1) & v40;
    if (((*(_QWORD *)&v60[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v45)(v61, v7);
  v47 = *(_BYTE *)(v39 + 32);
  v48 = v47 & 0x3F;
  v49 = (1 << v47) + 63;
  v50 = v49 >> 6;
  v51 = 8 * (v49 >> 6);
  if (v48 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v49 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v55 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v51);
    v52 = sub_1001211D4((unint64_t *)((char *)&v55 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0)), v50, v39, v38, &v62);
    swift_release();
    sub_10003E410(v62);
  }
  else
  {
    v54 = (void *)swift_slowAlloc(v51, -1);
    memcpy(v54, v60, v51);
    v52 = sub_1001211D4((unint64_t *)v54, v50, v39, v38, &v62);
    swift_release();
    sub_10003E410(v62);
    swift_slowDealloc(v54, -1, -1);
  }
  return v52;
}

void *sub_100120268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t isStackAllocationSafe;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v33[9];
  _QWORD v34[2];

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  if (*(_QWORD *)(a2 + 16))
  {
    v34[0] = a1;
    v11 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain(a1);
    if (v11)
    {
      v12 = 0;
      v13 = a2 + 56;
      v31 = v5;
      while (1)
      {
        if (v12 >= v11)
          __break(1u);
        v14 = *(_QWORD *)(v5 + 72);
        v32 = v12 + 1;
        sub_10002B1E8(a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v14 * v12, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        Hasher.init(_seed:)(v33, *(_QWORD *)(a2 + 40));
        TTRRemindersListViewModel.ItemID.hash(into:)(v33, v15);
        v16 = Hasher._finalize()();
        v17 = -1 << *(_BYTE *)(a2 + 32);
        v18 = v16 & ~v17;
        if (((*(_QWORD *)(v13 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
          break;
LABEL_4:
        sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v11 = *(_QWORD *)(a1 + 16);
        v5 = v31;
        v12 = v32;
        if (v32 == v11)
          goto LABEL_15;
      }
      v19 = ~v17;
      while (1)
      {
        sub_10002B1E8(*(_QWORD *)(a2 + 48) + v18 * v14, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v10);
        sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((v20 & 1) != 0)
          break;
        v18 = (v18 + 1) & v19;
        if (((*(_QWORD *)(v13 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          goto LABEL_4;
      }
      v34[1] = v32;
      isStackAllocationSafe = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v22 = *(_BYTE *)(a2 + 32);
      v23 = v22 & 0x3F;
      v24 = (1 << v22) + 63;
      v25 = v24 >> 6;
      v26 = 8 * (v24 >> 6);
      if (v23 <= 0xD
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v24 >> 6), 8),
            (_DWORD)isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v26);
        v27 = sub_10012161C((unint64_t *)((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, a2, v18, v34);
        swift_release();
        swift_bridgeObjectRelease(v34[0]);
      }
      else
      {
        v28 = (void *)swift_slowAlloc(v26, -1);
        memcpy(v28, (const void *)(a2 + 56), v26);
        v27 = sub_10012161C((unint64_t *)v28, v25, a2, v18, v34);
        swift_release();
        swift_bridgeObjectRelease(v34[0]);
        swift_slowDealloc(v28, -1, -1);
      }
      return v27;
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease(a1);
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_1001205D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[9];
  uint64_t v35[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain(a1);
                    sub_10003E410(v31);
                    return (void *)v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v13);
        Hasher.init(_seed:)(v34, *(_QWORD *)(v2 + 40));
        Hasher._combine(_:)(v18);
        v19 = Hasher._finalize()();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v22 + v21) == (_DWORD)v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v35[0] = a1;
    v35[1] = v6;
    v35[2] = v33;
    v35[3] = v4;
    v35[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain(a1);
    if (v23 < 0x81
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v24, 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      v27 = (char *)&v32 - v26;
      memcpy((char *)&v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1001218BC((Swift::Int)v27, v23, v2, v21, v35);
      swift_release();
      sub_10003E410(v35[0]);
    }
    else
    {
      v29 = (void *)swift_slowAlloc(v24, -1);
      memcpy(v29, (const void *)(v2 + 56), v24);
      v28 = sub_1001218BC((Swift::Int)v29, v23, v2, v21, v35);
      swift_release();
      sub_10003E410(v35[0]);
      swift_slowDealloc(v29, -1, -1);
    }
    return (void *)v28;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void sub_10012097C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[10];
  uint64_t v61;

  v50 = a2;
  v54 = a3;
  v9 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v19 = *(unint64_t *)((char *)a1 + v18) & ((-1 << a4) - 1);
  v52 = a1;
  *(unint64_t *)((char *)a1 + v18) = v19;
  v20 = v17 - 1;
  v61 = a3 + 56;
  v53 = a5;
  while (2)
  {
    v51 = v20;
    do
    {
      while (1)
      {
        v22 = *a5;
        v21 = a5[1];
        v23 = a5[2];
        v24 = a5[3];
        v25 = a5[4];
        v58 = v23;
        v59 = v21;
        if (v25)
        {
          v57 = (v25 - 1) & v25;
          v26 = __clz(__rbit64(v25)) | (v24 << 6);
LABEL_6:
          v27 = v55;
          sub_10002B1E8(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v11 + 72) * v26, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v28 = 0;
          goto LABEL_7;
        }
        v42 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
          __break(1u);
          goto LABEL_40;
        }
        v43 = (unint64_t)(v23 + 64) >> 6;
        if (v42 >= v43)
        {
          v57 = 0;
          v28 = 1;
          v27 = v55;
          goto LABEL_7;
        }
        v44 = *(_QWORD *)(v21 + 8 * v42);
        if (v44)
          goto LABEL_16;
        if (v24 + 2 >= v43)
          goto LABEL_33;
        v44 = *(_QWORD *)(v21 + 8 * (v24 + 2));
        if (v44)
        {
          v42 = v24 + 2;
LABEL_16:
          v57 = (v44 - 1) & v44;
          v26 = __clz(__rbit64(v44)) + (v42 << 6);
          v24 = v42;
          goto LABEL_6;
        }
        if (v24 + 3 >= v43)
        {
          v57 = 0;
          v28 = 1;
          v24 += 2;
          v27 = v55;
          goto LABEL_7;
        }
        v44 = *(_QWORD *)(v21 + 8 * (v24 + 3));
        if (v44)
        {
          v42 = v24 + 3;
          goto LABEL_16;
        }
        v42 = v24 + 4;
        if (v24 + 4 < v43)
        {
          v44 = *(_QWORD *)(v21 + 8 * v42);
          if (v44)
            goto LABEL_16;
          v42 = v43 - 1;
          v47 = v24 + 5;
          while (v43 != v47)
          {
            v44 = *(_QWORD *)(v21 + 8 * v47++);
            if (v44)
            {
              v42 = v47 - 1;
              goto LABEL_16;
            }
          }
LABEL_33:
          v57 = 0;
          v28 = 1;
          v24 = v42;
          v27 = v55;
          goto LABEL_7;
        }
        v57 = 0;
        v28 = 1;
        v24 += 3;
        v27 = v55;
LABEL_7:
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v30 = v11;
        v31 = v56;
        v29(v27, v28, 1, v56);
        v32 = v59;
        *a5 = v22;
        a5[1] = v32;
        a5[2] = v58;
        a5[3] = v24;
        a5[4] = v57;
        v33 = v30;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v31) == 1)
        {
          sub_1000073A0(v27, (uint64_t *)&unk_1006463C0);
          v48 = v54;
          swift_retain();
          sub_100463310(v52, v50, v51, v48);
          return;
        }
        sub_10001F580(v27, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v34 = v54;
        Hasher.init(_seed:)(v60, *(_QWORD *)(v54 + 40));
        TTRRemindersListViewModel.ItemID.hash(into:)(v60, v35);
        v36 = Hasher._finalize()();
        v37 = -1 << *(_BYTE *)(v34 + 32);
        v38 = v36 & ~v37;
        if (((*(_QWORD *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
          break;
LABEL_3:
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        a5 = v53;
        v11 = v33;
      }
      v39 = ~v37;
      v40 = *(_QWORD *)(v33 + 72);
      while (1)
      {
        sub_10002B1E8(*(_QWORD *)(v34 + 48) + v40 * v38, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v41 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v13, v16);
        sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((v41 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_3;
      }
      sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v45 = (v38 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v53;
      v46 = *(unint64_t *)((char *)v52 + v45);
      *(unint64_t *)((char *)v52 + v45) = v46 & ~(1 << v38);
      v11 = v33;
    }
    while ((v46 & (1 << v38)) == 0);
    v20 = v51 - 1;
    if (__OFSUB__(v51, 1))
    {
LABEL_40:
      __break(1u);
      return;
    }
    if (v51 != 1)
      continue;
    break;
  }
}

void *sub_100120DA8(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[10];
  uint64_t v61;

  v50 = a2;
  v54 = a3;
  v9 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v11 = *(_QWORD *)(v56 - 8);
  v12 = __chkstk_darwin(v56);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)__chkstk_darwin(v12);
  v17 = (char *)&v49 - v16;
  v18 = *(_QWORD *)(a3 + 16);
  v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v20 = *(unint64_t *)((char *)a1 + v19) & ((-1 << a4) - 1);
  v52 = a1;
  *(unint64_t *)((char *)a1 + v19) = v20;
  v21 = v18 - 1;
  v61 = a3 + 56;
  v53 = a5;
  while (2)
  {
    v51 = v21;
    do
    {
      while (1)
      {
        v23 = *a5;
        v22 = a5[1];
        v24 = a5[2];
        v25 = a5[3];
        v26 = a5[4];
        v58 = v24;
        v59 = v22;
        if (v26)
        {
          v57 = (v26 - 1) & v26;
          v27 = __clz(__rbit64(v26)) | (v25 << 6);
LABEL_6:
          v28 = v55;
          sub_10002B1E8(*(_QWORD *)(v23 + 48) + *(_QWORD *)(v11 + 72) * v27, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          v29 = 0;
          goto LABEL_7;
        }
        v42 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v43 = (unint64_t)(v24 + 64) >> 6;
        if (v42 >= v43)
        {
          v57 = 0;
          v29 = 1;
          v28 = v55;
          goto LABEL_7;
        }
        v44 = *(_QWORD *)(v22 + 8 * v42);
        if (v44)
          goto LABEL_16;
        if (v25 + 2 >= v43)
          goto LABEL_33;
        v44 = *(_QWORD *)(v22 + 8 * (v25 + 2));
        if (v44)
        {
          v42 = v25 + 2;
LABEL_16:
          v57 = (v44 - 1) & v44;
          v27 = __clz(__rbit64(v44)) + (v42 << 6);
          v25 = v42;
          goto LABEL_6;
        }
        if (v25 + 3 >= v43)
        {
          v57 = 0;
          v29 = 1;
          v25 += 2;
          v28 = v55;
          goto LABEL_7;
        }
        v44 = *(_QWORD *)(v22 + 8 * (v25 + 3));
        if (v44)
        {
          v42 = v25 + 3;
          goto LABEL_16;
        }
        v42 = v25 + 4;
        if (v25 + 4 < v43)
        {
          v44 = *(_QWORD *)(v22 + 8 * v42);
          if (v44)
            goto LABEL_16;
          v42 = v43 - 1;
          v47 = v25 + 5;
          while (v43 != v47)
          {
            v44 = *(_QWORD *)(v22 + 8 * v47++);
            if (v44)
            {
              v42 = v47 - 1;
              goto LABEL_16;
            }
          }
LABEL_33:
          v57 = 0;
          v29 = 1;
          v25 = v42;
          v28 = v55;
          goto LABEL_7;
        }
        v57 = 0;
        v29 = 1;
        v25 += 3;
        v28 = v55;
LABEL_7:
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v31 = v11;
        v32 = v56;
        v30(v28, v29, 1, v56);
        v33 = v59;
        *a5 = v23;
        a5[1] = v33;
        a5[2] = v58;
        a5[3] = v25;
        a5[4] = v57;
        v34 = v31;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v28, 1, v32) == 1)
        {
          sub_1000073A0(v28, (uint64_t *)&unk_1006462C0);
          v48 = v54;
          swift_retain(v54);
          return (void *)sub_1004635E0(v52, v50, v51, v48);
        }
        sub_10001F580(v28, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v35 = v54;
        Hasher.init(_seed:)(v60, *(_QWORD *)(v54 + 40));
        TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v60);
        v36 = Hasher._finalize()();
        v37 = -1 << *(_BYTE *)(v35 + 32);
        v38 = v36 & ~v37;
        if (((*(_QWORD *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
          break;
LABEL_3:
        result = (void *)sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        a5 = v53;
        v11 = v34;
      }
      v39 = ~v37;
      v40 = *(_QWORD *)(v34 + 72);
      while (1)
      {
        sub_10002B1E8(*(_QWORD *)(v35 + 48) + v40 * v38, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v41 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v14, v17);
        sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        if ((v41 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_3;
      }
      result = (void *)sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v45 = (v38 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v53;
      v46 = *(unint64_t *)((char *)v52 + v45);
      *(unint64_t *)((char *)v52 + v45) = v46 & ~(1 << v38);
      v11 = v34;
    }
    while ((v46 & (1 << v38)) == 0);
    v21 = v51 - 1;
    if (__OFSUB__(v51, 1))
    {
LABEL_41:
      __break(1u);
      return result;
    }
    if (v51 != 1)
      continue;
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1001211D4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  char v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;

  v52 = a2;
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)__chkstk_darwin(v14);
  v60 = (char *)&v51 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v54 = a1;
  v55 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v58 = a3 + 56;
  v59 = a3;
  v56 = a5;
  while (2)
  {
    v53 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v57 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v43 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v44 = (unint64_t)(v27 + 64) >> 6;
        if (v43 >= v44)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v24 + 8 * v43);
        if (v45)
          goto LABEL_17;
        v48 = v26 + 2;
        if (v26 + 2 >= v44)
          goto LABEL_35;
        v45 = *(_QWORD *)(v24 + 8 * v48);
        if (v45)
          goto LABEL_23;
        if (v26 + 3 >= v44)
          goto LABEL_36;
        v45 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v45)
        {
          v43 = v26 + 3;
          goto LABEL_17;
        }
        v48 = v26 + 4;
        if (v26 + 4 < v44)
        {
          v45 = *(_QWORD *)(v24 + 8 * v48);
          if (v45)
          {
LABEL_23:
            v43 = v48;
LABEL_17:
            v29 = (v45 - 1) & v45;
            v30 = __clz(__rbit64(v45)) + (v43 << 6);
            v26 = v43;
            goto LABEL_7;
          }
          v43 = v26 + 5;
          if (v26 + 5 < v44)
          {
            v45 = *(_QWORD *)(v24 + 8 * v43);
            if (v45)
              goto LABEL_17;
            v43 = v44 - 1;
            v49 = v26 + 6;
            while (v44 != v49)
            {
              v45 = *(_QWORD *)(v24 + 8 * v49++);
              if (v45)
              {
                v43 = v49 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v43;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v48;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v57;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1000073A0((uint64_t)v11, &qword_100646950);
          v50 = v59;
          swift_retain();
          return (void *)sub_1004638C4(v54, v52, v53, v50);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v60, v11, v12);
        v32 = v59;
        v33 = *(_QWORD *)(v59 + 40);
        v34 = sub_100117768((unint64_t *)&qword_1006463A0, (uint64_t)&protocol conformance descriptor for IndexPath);
        v35 = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v12, v34);
        v36 = -1 << *(_BYTE *)(v32 + 32);
        v37 = v35 & ~v36;
        if (((*(_QWORD *)(v58 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = (void *)v23(v60, v12);
        v11 = v55;
        a5 = v56;
      }
      v38 = ~v36;
      v39 = *(_QWORD *)(v13 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v40(v16, *(_QWORD *)(v59 + 48) + v39 * v37, v12);
        v41 = sub_100117768((unint64_t *)&qword_10063F648, (uint64_t)&protocol conformance descriptor for IndexPath);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v60, v12, v41);
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v42 & 1) != 0)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v58 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_4;
      }
      result = (void *)v23(v60, v12);
      v46 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v55;
      v47 = *(unint64_t *)((char *)v54 + v46);
      *(unint64_t *)((char *)v54 + v46) = v47 & ~(1 << v37);
      a5 = v56;
    }
    while ((v47 & (1 << v37)) == 0);
    v22 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1)
      continue;
    return &_swiftEmptySetSingleton;
  }
}

void *sub_10012161C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[9];
  uint64_t v46;

  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  result = (void *)__chkstk_darwin(v14);
  v19 = (char *)&v39 - v18;
  v20 = *(_QWORD *)(a3 + 16);
  v21 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v22 = *(unint64_t *)((char *)a1 + v21);
  v41 = a1;
  *(unint64_t *)((char *)a1 + v21) = v22 & ((-1 << a4) - 1);
  v23 = v20 - 1;
  v24 = *a5;
  v25 = a5[1];
  v26 = *(_QWORD *)(*a5 + 16);
  v40 = a2;
  v42 = v23;
  if (v25 == v26)
  {
LABEL_2:
    swift_retain();
    return (void *)sub_100463310(v41, v40, v42, a3);
  }
  v46 = v17;
  v27 = a3 + 56;
  v43 = v16;
  v44 = a5;
  while (v25 < v26)
  {
    v28 = *(_QWORD *)(v16 + 72);
    v29 = v46;
    sub_10002B1E8(v24 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)) + v28 * v25, v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    a5[1] = v25 + 1;
    sub_10001F580(v29, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)(v45, *(_QWORD *)(a3 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v45, v30);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(a3 + 32);
    v33 = v31 & ~v32;
    if (((*(_QWORD *)(v27 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
    {
LABEL_5:
      result = (void *)sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_6:
      v16 = v43;
      a5 = v44;
      goto LABEL_7;
    }
    v34 = ~v32;
    while (1)
    {
      sub_10002B1E8(*(_QWORD *)(a3 + 48) + v33 * v28, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v35 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v13, v19);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if ((v35 & 1) != 0)
        break;
      v33 = (v33 + 1) & v34;
      if (((*(_QWORD *)(v27 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        goto LABEL_5;
    }
    result = (void *)sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v36 = (v33 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v37 = *(unint64_t *)((char *)v41 + v36);
    *(unint64_t *)((char *)v41 + v36) = v37 & ~(1 << v33);
    if ((v37 & (1 << v33)) == 0)
      goto LABEL_6;
    v16 = v43;
    v38 = v42 - 1;
    a5 = v44;
    if (__OFSUB__(v42, 1))
      goto LABEL_19;
    --v42;
    if (!v38)
      return &_swiftEmptySetSingleton;
LABEL_7:
    v24 = *a5;
    v25 = a5[1];
    v26 = *(_QWORD *)(*a5 + 16);
    if (v25 == v26)
      goto LABEL_2;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

Swift::Int sub_1001218BC(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  Swift::UInt v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  uint64_t v33[9];

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v15 = a5[3];
    v16 = a5[4];
    if (!v16)
      break;
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_22:
    v25 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v18);
    a5[3] = v15;
    a5[4] = v17;
    Hasher.init(_seed:)(v33, *(_QWORD *)(a3 + 40));
    Hasher._combine(_:)(v25);
    result = Hasher._finalize()();
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v27 = result & ~v26;
    v11 = v27 >> 6;
    v12 = 1 << v27;
    if (((1 << v27) & *(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (*(unsigned __int8 *)(v28 + v27) == (_DWORD)v25)
      {
LABEL_3:
        v13 = v11;
        v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_34;
          if (!v9)
            return (Swift::Int)&_swiftEmptySetSingleton;
        }
      }
      else
      {
        for (i = v27 + 1; ; i = v30 + 1)
        {
          v30 = i & ~v26;
          if (((*(_QWORD *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v28 + v30) == (_DWORD)v25)
          {
            v11 = v30 >> 6;
            v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    v20 = (unint64_t)(a5[2] + 64) >> 6;
    v21 = a5[3];
    if (v19 >= v20)
      goto LABEL_31;
    v22 = a5[1];
    v23 = *(_QWORD *)(v22 + 8 * v19);
    if (!v23)
    {
      v21 = v15 + 1;
      if (v15 + 2 >= v20)
        goto LABEL_31;
      v23 = *(_QWORD *)(v22 + 8 * (v15 + 2));
      if (v23)
      {
        v19 = v15 + 2;
      }
      else
      {
        v21 = v15 + 2;
        if (v15 + 3 >= v20)
          goto LABEL_31;
        v23 = *(_QWORD *)(v22 + 8 * (v15 + 3));
        if (v23)
        {
          v19 = v15 + 3;
        }
        else
        {
          v19 = v15 + 4;
          v21 = v15 + 3;
          if (v15 + 4 >= v20)
            goto LABEL_31;
          v23 = *(_QWORD *)(v22 + 8 * v19);
          if (!v23)
          {
            v21 = v20 - 1;
            v24 = v15 + 5;
            while (v20 != v24)
            {
              v23 = *(_QWORD *)(v22 + 8 * v24++);
              if (v23)
              {
                v19 = v24 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v21;
            a5[4] = 0;
            swift_retain();
            return sub_100463BAC(v7, a2, v9, a3);
          }
        }
      }
    }
LABEL_21:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    v15 = v19;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_100121B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void *v27;
  id v28;
  void (*v29)(char *, char *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a2;
  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for IndexPath(0);
  v46 = *(_QWORD *)(v47 - 8);
  v6 = __chkstk_darwin(v47);
  v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v36 - v8;
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v44 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v36 - v13;
  v15 = *(_QWORD *)(a1 + 56);
  v42 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource;
  v43 = (unint64_t)(v16 + 63) >> 6;
  v20 = a1;
  swift_bridgeObjectRetain(a1);
  v21 = 0;
  v41 = (char *)_swiftEmptyArrayStorage;
  if (v18)
    goto LABEL_6;
LABEL_7:
  v24 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
  }
  else
  {
    if (v24 >= v43)
      goto LABEL_31;
    v25 = *(_QWORD *)(v42 + 8 * v24);
    ++v21;
    if (v25)
      goto LABEL_22;
    v21 = v24 + 1;
    if (v24 + 1 >= v43)
      goto LABEL_31;
    v25 = *(_QWORD *)(v42 + 8 * v21);
    if (v25)
      goto LABEL_22;
    v21 = v24 + 2;
    if (v24 + 2 >= v43)
      goto LABEL_31;
    v25 = *(_QWORD *)(v42 + 8 * v21);
    if (v25)
      goto LABEL_22;
    v21 = v24 + 3;
    if (v24 + 3 >= v43)
      goto LABEL_31;
    v25 = *(_QWORD *)(v42 + 8 * v21);
    if (v25)
      goto LABEL_22;
    v26 = v24 + 4;
    if (v26 >= v43)
    {
LABEL_31:
      swift_release();
      return;
    }
    v25 = *(_QWORD *)(v42 + 8 * v26);
    if (v25)
    {
      v21 = v26;
LABEL_22:
      v18 = (v25 - 1) & v25;
      for (i = __clz(__rbit64(v25)) + (v21 << 6); ; i = v22 | (v21 << 6))
      {
        sub_10002B1E8(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v44 + 72) * i, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10001F580((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v27 = *(void **)(v45 + v19);
        if (!v27)
          break;
        v28 = v27;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v12);

        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v5, 1, v47) == 1)
        {
          sub_1000073A0((uint64_t)v5, &qword_100646950);
          if (!v18)
            goto LABEL_7;
        }
        else
        {
          v29 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
          v29(v39, v5, v47);
          v38 = v29;
          v29(v40, v39, v47);
          if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
            v41 = (char *)sub_1004557D0(0, *((_QWORD *)v41 + 2) + 1, 1, (unint64_t)v41);
          v31 = *((_QWORD *)v41 + 2);
          v30 = *((_QWORD *)v41 + 3);
          v32 = v31 + 1;
          if (v31 >= v30 >> 1)
          {
            v37 = v31 + 1;
            v35 = (char *)sub_1004557D0(v30 > 1, v31 + 1, 1, (unint64_t)v41);
            v32 = v37;
            v41 = v35;
          }
          v33 = v40;
          v34 = v41;
          *((_QWORD *)v41 + 2) = v32;
          v38(&v34[((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v31], v33, v47);
          if (!v18)
            goto LABEL_7;
        }
LABEL_6:
        v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
      }
      goto LABEL_34;
    }
    while (1)
    {
      v21 = v26 + 1;
      if (__OFADD__(v26, 1))
        break;
      if (v21 >= v43)
        goto LABEL_31;
      v25 = *(_QWORD *)(v42 + 8 * v21);
      ++v26;
      if (v25)
        goto LABEL_22;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_100121F1C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  Class v28;
  uint64_t v29;
  id v30;
  id v31;
  __int128 v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;

  v36 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  objc_msgSend(v36, "setContentInsetsReference:", 1);
  v0 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v1 = objc_msgSend(v0, "fractionalWidthDimension:", 1.0);
  v2 = objc_msgSend(v0, "estimatedDimension:", 44.0);
  v3 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v4 = objc_msgSend(v3, "sizeWithWidthDimension:heightDimension:", v1, v2);

  v35 = v4;
  v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v4);
  v6 = objc_msgSend(v0, "fractionalWidthDimension:", 1.0);
  v7 = objc_msgSend(v0, "estimatedDimension:", 44.0);
  v8 = objc_msgSend(v3, "sizeWithWidthDimension:heightDimension:", v6, v7);

  v9 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v10 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100521140;
  *(_QWORD *)(v11 + 32) = v5;
  v37 = v11;
  specialized Array._endMutation()(v11);
  sub_100005ED8(0, &qword_100646FB0, NSCollectionLayoutItem_ptr);
  v34 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  v13 = objc_msgSend(v9, "verticalGroupWithLayoutSize:subitems:", v8, isa);

  v14 = type metadata accessor for TTRIBoardColumnCollectionViewCell.LayoutSection_rdar104564290();
  v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(v14), "sectionWithGroup:", v13);
  v16 = qword_10063D8A8;
  v17 = v15;
  if (v16 != -1)
    swift_once(&qword_10063D8A8, sub_1005016B0);
  objc_msgSend(v17, "setInterGroupSpacing:", *(double *)&qword_100673A58, 1, 3);

  v18 = objc_msgSend(v0, "fractionalWidthDimension:", 1.0);
  v19 = objc_msgSend(v0, "estimatedDimension:", 44.0);
  v20 = objc_msgSend(v3, "sizeWithWidthDimension:heightDimension:", v18, v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v20, v23, 1);

  objc_msgSend(v24, "setPinToVisibleBounds:", 1);
  v25 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v25 + 16) = v33;
  *(_QWORD *)(v25 + 32) = v24;
  v38 = v25;
  specialized Array._endMutation()(v25);
  sub_100005ED8(0, &qword_100646FB8, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v26 = v17;
  v27 = v24;
  v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v38);
  objc_msgSend(v26, "setBoundarySupplementaryItems:", v28);

  v29 = qword_10063D8B8;
  v30 = v26;
  if (v29 != -1)
    swift_once(&qword_10063D8B8, sub_1005016D0);
  objc_msgSend(v30, "setContentInsets:", *(double *)&qword_100673A68, *(double *)&qword_100673A70, *(double *)&qword_100673A78, *(double *)&qword_100673A80);

  v31 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIBoardColumnCollectionViewLayout()), "initWithSection:", v30);
  return v31;
}

uint64_t sub_1001223D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v3 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  PassthroughSubject.send(_:)(a1);
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (result)
  {
    v11 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
    if (v11)
    {
      v12 = result;
      v13 = v11;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        swift_unknownObjectRelease(v12);
        return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_1006463C0);
      }
      else
      {
        sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_10036C890((uint64_t)v9);
        swift_unknownObjectRelease(v12);
        return sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100122544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;

  v3 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (!result)
    goto LABEL_5;
  v11 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (v11)
  {
    v12 = result;
    v13 = v11;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v14 = sub_10036CA84((uint64_t)v9);
      swift_unknownObjectRelease(v12);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return v14 & 1;
    }
    swift_unknownObjectRelease(v12);
    sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_1006463C0);
LABEL_5:
    v14 = 0;
    return v14 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001226AC(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;

  v4 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (v14)
  {
    v15 = v14;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_1006463C0);
    }
    else
    {
      sub_10001F580((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v17 = Strong;
        a2(v13);
        swift_unknownObjectRelease(v17);
      }
      return sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100122808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (v8)
  {
    v9 = v8;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10);
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_1006463C0);
    if (v11 == 1
      || (Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate)) == 0)
    {
      v17 = 0;
    }
    else
    {
      v14 = Strong;
      v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v13);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 8) + 216))(ObjectType);
      swift_unknownObjectRelease(v14);
    }
    return v17 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012292C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
  if (v12)
  {
    v13 = v12;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_1006463C0);
      v14 = 0;
    }
    else
    {
      sub_10001F580((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
      if (Strong)
      {
        v16 = Strong;
        v14 = sub_10036D6B4((uint64_t)v11);
        swift_unknownObjectRelease(v16);
      }
      else
      {
        v14 = 0;
      }
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    return v14 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100122A98(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t Strong;
  uint64_t v24;
  _BYTE v25[16];
  _QWORD v26[4];
  Swift::OpaquePointer_optional v27;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = objc_msgSend(a1, "identifier");
  v26[3] = swift_getObjectType(v11, v12);
  v26[0] = v11;
  sub_10011AD88((uint64_t)v26, (uint64_t)v6);
  sub_100027F10(v26);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_1006463C0);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v14 = objc_msgSend(a1, "secondaryItemIdentifiers");
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  sub_10011A910(v15);
  v17 = v16;
  swift_bridgeObjectRelease(v15);
  v18 = sub_10002A750(&qword_100642EB0);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v18, v20 + *(_QWORD *)(v8 + 72), v19 | 7);
  *(_OWORD *)(v21 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v10, v21 + v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v26[0] = v21;
  sub_100450BA8(v17);
  v22 = (void *)v26[0];
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (Strong)
  {
    v24 = Strong;
    swift_retain();
    v27.value._rawValue = v22;
    TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleContextMenuStateChange(_:)(v27);
    swift_bridgeObjectRelease(v22);
    swift_unknownObjectRelease(v24);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease(v22);
  }
  return sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100122CE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  _QWORD v27[4];
  Swift::OpaquePointer_optional v28;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = objc_msgSend(a1, "identifier");
  v27[3] = swift_getObjectType(v11, v12);
  v27[0] = v11;
  sub_10011AD88((uint64_t)v27, (uint64_t)v6);
  sub_100027F10(v27);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_1006463C0);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v14 = objc_msgSend(a1, "secondaryItemIdentifiers");
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  sub_10011A910(v15);
  v17 = v16;
  swift_bridgeObjectRelease(v15);
  v18 = sub_10002A750(&qword_100642EB0);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v18, v20 + *(_QWORD *)(v8 + 72), v19 | 7);
  *(_OWORD *)(v21 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v10, v21 + v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v27[0] = v21;
  sub_100450BA8(v17);
  v22 = v27[0];
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate);
  if (Strong)
  {
    v24 = Strong;
    swift_retain();
    v28.value._rawValue = 0;
    TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleContextMenuStateChange(_:)(v28);
    swift_release();
    v25 = *(_QWORD *)(v24
                    + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu);
    *(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    swift_unknownObjectRelease(v24);
    v22 = v25;
  }
  swift_bridgeObjectRelease(v22);
  return sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100122F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006572F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100122F94()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

id sub_100122FB8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "numberOfSections");
}

id sub_100122FC8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "numberOfItemsInSection:", a1);
}

uint64_t sub_100122FDC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100123000(uint64_t a1)
{
  uint64_t v1;

  sub_10011C24C(a1, v1);
}

void sub_100123008(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10011C360(a1, v1);
}

uint64_t sub_100123010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10011CD48(a1, a2, a3, v3);
}

void sub_100123018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10011CE5C(a1, a2, a3, a4, v4);
}

uint64_t sub_100123020()
{
  return sub_100123090(&qword_100646FA8);
}

uint64_t sub_10012302C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100646FA8) - 8) + 80);
  return sub_10011CF6C(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_100123084()
{
  return sub_100123090(&qword_100646FA0);
}

uint64_t sub_100123090(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_10002A750(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1001230EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100646FA0) - 8) + 80);
  return sub_10011D058(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

ValueMetadata *type metadata accessor for TTRIBoardReminderCellLayoutMetrics()
{
  return &type metadata for TTRIBoardReminderCellLayoutMetrics;
}

double sub_100123164()
{
  double result;

  result = 11.0;
  xmmword_100646FC0 = xmmword_100525020;
  *(_OWORD *)&qword_100646FD0 = xmmword_100525020;
  return result;
}

id TTRIGroupDetailAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupDetailAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIGroupDetailAssembly()
{
  return objc_opt_self(_TtC9Reminders23TTRIGroupDetailAssembly);
}

id TTRIGroupDetailAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupDetailAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for TTRIGroupDetailPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100123284 + 4 * byte_100525065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001232B8 + 4 * asc_100525060[v4]))();
}

uint64_t sub_1001232B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001232C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001232C8);
  return result;
}

uint64_t sub_1001232D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001232DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001232E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001232E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupDetailPresentationStyle()
{
  return &type metadata for TTRIGroupDetailPresentationStyle;
}

unint64_t sub_100123308()
{
  unint64_t result;

  result = qword_100647008;
  if (!qword_100647008)
  {
    result = swift_getWitnessTable(&unk_100525134, &type metadata for TTRIGroupDetailPresentationStyle);
    atomic_store(result, (unint64_t *)&qword_100647008);
  }
  return result;
}

uint64_t sub_10012334C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100123370(a1, sub_10006B64C, (uint64_t (*)(uint64_t))sub_100073338, sub_1002AA398, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, a2);
}

uint64_t sub_100123370@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v12 = a2();
  v14 = v13;
  v16 = v15;
  v17 = a3(a1);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  v18 = swift_bridgeObjectRelease(v12);
  if (!v17)
    goto LABEL_8;
  v19 = ((uint64_t (*)(uint64_t))a2)(v18);
  v21 = v20;
  v23 = v22;
  if (!*(_QWORD *)(v22 + 16) || (result = a4(v17), (v25 & 1) == 0))
  {
    swift_release(v17);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
LABEL_8:
    v31 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a6, 1, 1, v31);
  }
  v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * result);
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v26 < *(_QWORD *)(v19 + 16))
  {
    v27 = *(_QWORD *)(v19 + 16 * v26 + 32);
    swift_retain(v27);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    swift_release(v17);
    v28 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 144);
    swift_beginAccess(v28, v32, 0, 0);
    sub_10002B1E8(v28, a6, a5);
    v29 = swift_release(v27);
    v30 = ((uint64_t (*)(_QWORD, __n128))a5)(0, v29);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a6, 0, 1, v30);
  }
  __break(1u);
  return result;
}

uint64_t sub_100123530@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[5];
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[2];
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v5 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v69 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - v12;
  v14 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v68 - v22;
  v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 56);
  v75 = a2;
  v74 = v24;
  v73 = v25;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(a2, 1, 1);
  v76 = v2;
  v26 = objc_msgSend(*(id *)(v2 + qword_100645F00), "indexPathForCell:", a1);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_6:
    sub_1000073A0((uint64_t)v16, &qword_100646950);
    v77[0] = a1;
    v40 = sub_100125764();
    v41 = a1;
    v42 = sub_10002A750(&qword_1006462E8);
    if ((swift_dynamicCast(&v78, v77, v40, v42, 6) & 1) == 0)
    {
      v80 = 0;
      v78 = 0u;
      v79 = 0u;
      return sub_1000073A0((uint64_t)&v78, (uint64_t *)&unk_1006462F0);
    }
    sub_10002E37C(&v78, (uint64_t)v83);
    v43 = v84;
    v44 = v85;
    sub_10001413C(v83, v84);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v44 + 8))(&v78, v43, v44);
    if (v81)
    {
      sub_1001033E8((uint64_t)&v79, (uint64_t)v77);
      v45 = sub_100092348((uint64_t)&v78);
      AnyHashable.base.getter(v82, v45);
      sub_100041DDC((uint64_t)v77);
    }
    else
    {
      sub_1000073A0((uint64_t)&v78, (uint64_t *)&unk_10065BDF0);
      memset(v82, 0, sizeof(v82));
    }
    v47 = v72;
    v48 = sub_10002A750(&qword_100640E50);
    v49 = swift_dynamicCast(v7, v82, v48, v47, 6);
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
    if (!v49)
    {
      v50(v7, 1, 1, v47);
      sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_1006463C0);
      return sub_100027F10(v83);
    }
    v50(v7, 0, 1, v47);
    v51 = v70;
    sub_10001F580((uint64_t)v7, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v52 = sub_10006B3DC();
    v54 = v53;
    v56 = v55;
    if (*(_QWORD *)(v53 + 16) && (v57 = sub_1002AA39C(v51), (v58 & 1) != 0))
    {
      v59 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v57);
      swift_bridgeObjectRetain(v59);
      v61 = sub_1000CE5E4(v60);
      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(v59);
      sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v62 = v75;
      sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
      if (v61)
      {
        v64 = v61 + *(_QWORD *)(*(_QWORD *)v61 + 144);
        swift_beginAccess(v64, &v78, 0, 0);
        v65 = v64;
        v66 = v69;
        sub_10002B1E8(v65, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v67 = swift_release();
        v73(v66, 0, 1, v74, v67);
LABEL_19:
        sub_10000F614(v66, v62, (uint64_t *)&unk_100640EB0);
        return sub_100027F10(v83);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v52);
      sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v62 = v75;
      sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
    }
    v66 = v69;
    v73(v69, 1, 1, v74, v63);
    goto LABEL_19;
  }
  v27 = v26;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v28(v16, v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_6;
  v28(v23, v16, v17);
  v29 = sub_10006B3DC();
  v31 = v30;
  v33 = v32;
  v34 = sub_1000F8FE4(v23, v29);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v31);
  v35 = swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v23, v17, v35);
  v36 = v75;
  sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
  if (v34)
  {
    v38 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 144);
    swift_beginAccess(v38, &v78, 0, 0);
    sub_10002B1E8(v38, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v37 = swift_release();
    v39 = 0;
  }
  else
  {
    v39 = 1;
  }
  v73((uint64_t)v13, v39, 1, v74, v37);
  return sub_10000F614((uint64_t)v13, v36, (uint64_t *)&unk_100640EB0);
}

uint64_t sub_100123BB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[2];
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v5 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640E00);
  v10 = __chkstk_darwin(v9);
  v68 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - v12;
  v14 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v67 - v22;
  v24 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 56);
  v74 = a2;
  v73 = v24;
  v72 = v25;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(a2, 1, 1);
  v75 = v2;
  v26 = objc_msgSend(*(id *)(v2 + qword_100645F00), "indexPathForCell:", a1);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_6:
    sub_1000073A0((uint64_t)v16, &qword_100646950);
    v76[0] = a1;
    v39 = sub_100125764();
    v40 = a1;
    v41 = sub_10002A750(&qword_1006462E8);
    if (!swift_dynamicCast(&v77, v76, v39, v41, 6))
    {
      v79 = 0;
      v77 = 0u;
      v78 = 0u;
      return sub_1000073A0((uint64_t)&v77, (uint64_t *)&unk_1006462F0);
    }
    sub_10002E37C(&v77, (uint64_t)v82);
    v42 = v83;
    v43 = v84;
    sub_10001413C(v82, v83);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 8))(&v77, v42, v43);
    if (v80)
    {
      sub_1001033E8((uint64_t)&v78, (uint64_t)v76);
      v44 = sub_100092348((uint64_t)&v77);
      AnyHashable.base.getter(v81, v44);
      sub_100041DDC((uint64_t)v76);
    }
    else
    {
      sub_1000073A0((uint64_t)&v77, (uint64_t *)&unk_10065BDF0);
      memset(v81, 0, sizeof(v81));
    }
    v46 = v71;
    v47 = sub_10002A750(&qword_100640E50);
    v48 = swift_dynamicCast(v7, v81, v47, v46, 6);
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56);
    if (!v48)
    {
      v49(v7, 1, 1, v46);
      sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_1006462C0);
      return sub_100027F10(v82);
    }
    v49(v7, 0, 1, v46);
    v50 = v69;
    sub_10001F580((uint64_t)v7, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v51 = sub_10006B64C();
    v53 = v52;
    v55 = v54;
    if (*(_QWORD *)(v52 + 16) && (v56 = sub_1002AA6DC(v50), (v57 & 1) != 0))
    {
      v58 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v56);
      swift_bridgeObjectRetain(v58);
      v60 = sub_1000CE774(v59);
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v58);
      sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v61 = v74;
      sub_1000073A0(v74, (uint64_t *)&unk_100640E00);
      if (v60)
      {
        v63 = v60 + *(_QWORD *)(*(_QWORD *)v60 + 144);
        swift_beginAccess(v63, &v77, 0, 0);
        v64 = v63;
        v65 = v68;
        sub_10002B1E8(v64, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v66 = swift_release();
        v72(v65, 0, 1, v73, v66);
LABEL_19:
        sub_10000F614(v65, v61, (uint64_t *)&unk_100640E00);
        return sub_100027F10(v82);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v51);
      sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v61 = v74;
      sub_1000073A0(v74, (uint64_t *)&unk_100640E00);
    }
    v65 = v68;
    v72(v68, 1, 1, v73, v62);
    goto LABEL_19;
  }
  v27 = v26;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v28(v16, v21, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_6;
  v28(v23, v16, v17);
  v29 = sub_10006B64C();
  v31 = v30;
  v33 = v32;
  v34 = sub_1000F8FE4(v23, v29);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  v35 = v74;
  sub_1000073A0(v74, (uint64_t *)&unk_100640E00);
  if (v34)
  {
    v37 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 144);
    swift_beginAccess(v37, &v77, 0, 0);
    sub_10002B1E8(v37, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v36 = swift_release();
    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  v72((uint64_t)v13, v38, 1, v73, v36);
  return sub_10000F614((uint64_t)v13, v35, (uint64_t *)&unk_100640E00);
}

uint64_t sub_100124230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100647010);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100647010);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1001242C0()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;

  v2 = v0;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = qword_10065D8D8;
  v8 = *(void **)&v2[qword_10065D8D8];
  if (v8)
  {
    v9 = type metadata accessor for TTRIRemindersListTreeTableView();
    if (swift_dynamicCastClass(v8, v9))
    {
      v10 = v8;
      return;
    }
    if (qword_10063D3E8 != -1)
      swift_once(&qword_10063D3E8, sub_100124230);
    v11 = sub_100012DC4(v3, (uint64_t)qword_100647010);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
    v1 = v2;
    v12 = Logger.logObject.getter(v1);
    v13 = static os_log_type_t.fault.getter(v12);
    if (!os_log_type_enabled(v12, v13))
    {

      goto LABEL_10;
    }
    v14 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(64, -1);
    v29 = v27;
    *(_DWORD *)v14 = 136315394;
    v16 = *(_QWORD *)&v2[v7];
    if (v16)
    {
      ObjectType = swift_getObjectType(v16, v15);
      v17 = sub_10002A750(&qword_1006476B0);
      v18 = String.init<A>(describing:)(&ObjectType, v17);
      v20 = v19;
      ObjectType = sub_100027E40(v18, v19, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v29, v14 + 4, v14 + 12);

      swift_bridgeObjectRelease(v20);
      *(_WORD *)(v14 + 12) = 2080;
      ObjectType = v9;
      v21 = sub_10002A750(&qword_1006476B8);
      v22 = String.init<A>(describing:)(&ObjectType, v21);
      v24 = v23;
      ObjectType = sub_100027E40(v22, v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v29, v14 + 14, v14 + 22);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "TTRIRemindersListTreeView.scrollView is an instance of %s, expect %s", (uint8_t *)v14, 0x16u);
      v25 = v27;
      swift_arrayDestroy(v27, 2, &type metadata for Any[8]);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v14, -1, -1);

LABEL_10:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
  }
  else
  {
    __break(1u);
  }

  __break(1u);
}

void sub_10012456C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t ObjectType;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(void **)&v2[qword_10065D8D8];
  if (v3)
  {
    ObjectType = swift_getObjectType(v2, a2);
    v5 = v3;
    v6 = objc_msgSend(v2, "traitCollection");
    v7 = (void *)static TTRIRemindersListBackground.color(for:)();

    objc_msgSend(v5, "setBackgroundColor:", v7);
    v8 = sub_10002A750(&qword_1006415F0);
    v9 = swift_allocObject(v8, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100520250;
    *(_QWORD *)(v9 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v9 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v10 = UIView.registerForTraitChanges<A>(_:handler:)(v9, sub_100125128, 0, ObjectType);
    swift_unknownObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    __break(1u);
  }
}

id sub_10012465C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = a3;
  v5 = objc_msgSendSuper2(&v10, "initWithCoder:", v4);
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    sub_10012456C((uint64_t)v7, v8);

  }
  return v6;
}

id sub_1001246D4(uint64_t a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;

  objc_msgSend(v1, "bounds");
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListTreeTableView()), "initWithFrame:style:", a1, v3, v4, v5, v6);
}

void sub_100124744(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[14];
  _QWORD *v41;

  v4 = v3;
  ObjectType = swift_getObjectType(v3, a2);
  v9 = qword_10065D8D8;
  v10 = *(void **)&v4[qword_10065D8D8];
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v10, "bounds");
  v15 = *(void **)&v4[v9];
  if (!v15)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v16 = v11;
  v17 = v12;
  v18 = v13;
  v19 = v14;
  objc_msgSend(v15, "adjustedContentInset");
  v22 = *(void **)&v4[v9];
  if (v22)
  {
    v23 = sub_100038048(v16, v17, v18, v19, v20, v21);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v30 = v22;
    v31 = UITableView.orderedVisibleCell.getter();

    v32 = v4;
    v33 = sub_1001251AC(v31, (uint64_t)v32);
    swift_bridgeObjectRelease(v31);

    v41 = v33;
    __chkstk_darwin(v34);
    v40[6] = v32;
    *(double *)&v40[7] = v23;
    v40[8] = v25;
    v40[9] = v27;
    v40[10] = v29;
    v40[11] = a1;
    v40[12] = a2;
    v40[13] = ObjectType;
    __chkstk_darwin(v35);
    v40[2] = sub_1001255C0;
    v40[3] = v36;
    v37 = sub_10002A750(&qword_100647690);
    v38 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v39 = sub_100125634();
    Sequence.firstMap<A>(_:)(a3, sub_1001255D8, v40, v37, v38, v39);
    swift_bridgeObjectRelease(v41);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100124924(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, CGFloat a7@<D0>, CGFloat a8@<D1>, CGFloat a9@<D2>, CGFloat a10@<D3>)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  CGFloat MinY;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  double v51;
  unsigned __int8 v52;
  void *v53;
  id v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  CGFloat MaxY;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  CGRect v68;
  CGRect v69;

  v66 = a5;
  v19 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v67 = (uint64_t)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = qword_10065D8D8;
  v26 = *(void **)(a3 + qword_10065D8D8);
  if (!v26)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v27 = v26;
  objc_msgSend(a2, "bounds");
  objc_msgSend(v27, "convertRect:fromCoordinateSpace:", a2);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v68.origin.x = a7;
  v68.origin.y = a8;
  v68.size.width = a9;
  v68.size.height = a10;
  MinY = CGRectGetMinY(v68);
  if (!sub_100125680(v29, v31, v33, v35, MinY))
    goto LABEL_6;
  v65 = a4;
  v37 = qword_10065D8E0;
  v38 = *(void **)(a3 + qword_10065D8E0);
  if (!v38)
    goto LABEL_19;
  v39 = v38;
  sub_100123370(a1, sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, sub_1002AA398, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)v21);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    goto LABEL_15;
  }
  v64 = a6;
  v40 = (uint64_t)v21;
  v41 = v67;
  sub_10001F580(v40, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v42 = *(void **)(a3 + v37);
  if (!v42)
    goto LABEL_20;
  v43 = v42;
  v44 = sub_10006B3DC();
  v46 = v45;
  v48 = v47;
  v50 = (void *)sub_1000E9370(v41, v44, v45, v47, v49 & 1);

  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v46);
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v44).n128_u64[0];
  if (!v50)
  {
    sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    a6 = v64;
    goto LABEL_15;
  }
  v52 = objc_msgSend(v50, "floating", v51);
  a6 = v64;
  if ((v52 & 1) == 0)
  {
    sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

LABEL_15:
    if ((v65(a1) & 1) != 0)
    {
      sub_10002B1E8(a1, a6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(a6, 0, 1, v22);
      return;
    }
LABEL_6:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a6, 1, 1, v22);
    return;
  }
  v53 = *(void **)(a3 + v25);
  if (v53)
  {
    v54 = v53;
    objc_msgSend(v50, "bounds");
    objc_msgSend(v54, "convertRect:fromCoordinateSpace:", v50);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v62 = v61;

    v69.origin.x = v56;
    v69.origin.y = v58;
    v69.size.width = v60;
    v69.size.height = v62;
    MaxY = CGRectGetMaxY(v69);
    LOBYTE(v54) = sub_100125680(v29, v31, v33, v35, MaxY);

    sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((v54 & 1) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
}

uint64_t type metadata accessor for TTRIRemindersListTreeView(uint64_t a1)
{
  uint64_t result;

  result = qword_100647050;
  if (!qword_100647050)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListTreeView);
  return result;
}

uint64_t sub_100124D48(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 1488);
}

uint64_t sub_100124D7C()
{
  return type metadata accessor for TTRIRemindersListTreeView(0);
}

void sub_100124E0C(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t ObjectType;
  void *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[6];
  objc_super v18;

  isEscapingClosureAtFileLocation = v4;
  ObjectType = swift_getObjectType(v4, a4);
  v9 = (void *)objc_opt_self(UIView);
  if (objc_msgSend(v9, "areAnimationsEnabled"))
  {
    v10 = *(uint64_t (**)(uint64_t))(v4
                                            + OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514);
    if (v10)
    {
      v11 = *(_QWORD *)(v4
                      + OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514
                      + 8);
      v12 = swift_retain();
      v13 = (void *)v10(v12);
      sub_1000381B8((uint64_t)v10, v11);
      if (v13)
      {
        if (objc_msgSend(v13, "_appearState") == 1)
        {
          ObjectType = swift_allocObject(&unk_1005F26C8, 40, 7);
          *(_QWORD *)(ObjectType + 16) = isEscapingClosureAtFileLocation;
          *(double *)(ObjectType + 24) = a1;
          *(double *)(ObjectType + 32) = a2;
          v14 = swift_allocObject(&unk_1005F26F0, 32, 7);
          *(_QWORD *)(v14 + 16) = sub_1001257C4;
          *(_QWORD *)(v14 + 24) = ObjectType;
          v17[4] = sub_10001B278;
          v17[5] = v14;
          v17[0] = _NSConcreteStackBlock;
          v17[1] = 1107296256;
          v17[2] = sub_10001B258;
          v17[3] = &unk_1005F2708;
          v15 = _Block_copy(v17);
          v16 = (id)isEscapingClosureAtFileLocation;
          swift_retain();
          objc_msgSend(v9, "performWithoutAnimation:", v15, swift_release().n128_f64[0]);

          _Block_release(v15);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 136, 130, 48, 1);
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
            return;
          __break(1u);
        }

      }
    }
  }
  v18.receiver = (id)isEscapingClosureAtFileLocation;
  v18.super_class = (Class)ObjectType;
  objc_msgSendSuper2(&v18, "setContentOffset:", a1, a2);
}

uint64_t sub_1001250E0()
{
  uint64_t v0;

  return sub_1000381B8(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514 + 8));
}

uint64_t type metadata accessor for TTRIRemindersListTreeTableView()
{
  return objc_opt_self(_TtC9Reminders30TTRIRemindersListTreeTableView);
}

void sub_100125128(char *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)&a1[qword_10065D8D8];
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(a1, "traitCollection");
    v5 = (id)static TTRIRemindersListBackground.color(for:)();

    objc_msgSend(v3, "setBackgroundColor:", v5);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_1001251AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *result;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v3 = v2;
  v47 = a2;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v41 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_1006476A8);
  __chkstk_darwin(v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_1006476A0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v40 = (uint64_t)v38 - v18;
  if (!((unint64_t)a1 >> 62))
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v19)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
LABEL_22:
  if (a1 < 0)
    v37 = a1;
  else
    v37 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v19 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v19)
    goto LABEL_26;
LABEL_3:
  v38[1] = v3;
  v43 = qword_10065D8E0;
  v44 = a1 & 0xC000000000000001;
  v48 = _swiftEmptyArrayStorage;
  v20 = 4;
  v42 = a1;
  v39 = v19;
  while (1)
  {
    v3 = v20 - 4;
    if (v44)
      result = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1);
    else
      result = *(id *)(a1 + 8 * v20);
    a1 = (uint64_t)result;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    v49 = v20 - 3;
    v22 = *(void **)(v47 + v43);
    if (!v22)
      break;
    v23 = v22;
    sub_100123530((void *)a1, (uint64_t)v7);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v7, 1, v46) == 1)
    {
      sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);

    }
    else
    {
      v24 = (uint64_t)v7;
      v25 = v12;
      v26 = v16;
      v27 = v14;
      v28 = v7;
      v29 = v13;
      v30 = v41;
      sub_10001F580(v24, v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v31 = *(int *)(v29 + 48);
      v32 = v30;
      v13 = v29;
      v7 = v28;
      v14 = v27;
      v16 = v26;
      v12 = v25;
      v19 = v39;
      sub_10001F580(v32, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)&v12[v31] = a1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1000073A0((uint64_t)v12, &qword_1006476A8);
    }
    else
    {
      v33 = v40;
      sub_10000F614((uint64_t)v12, v40, &qword_1006476A0);
      sub_10000F614(v33, (uint64_t)v16, &qword_1006476A0);
      if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
        v48 = (_QWORD *)sub_100455924(0, v48[2] + 1, 1, (unint64_t)v48);
      v35 = v48[2];
      v34 = v48[3];
      if (v35 >= v34 >> 1)
        v48 = (_QWORD *)sub_100455924(v34 > 1, v35 + 1, 1, (unint64_t)v48);
      v36 = v48;
      v48[2] = v35 + 1;
      sub_10000F614((uint64_t)v16, (uint64_t)v36+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v35, &qword_1006476A0);
    }
    ++v20;
    a1 = v42;
    if (v49 == v19)
    {
      swift_bridgeObjectRelease(v42);
      return v48;
    }
  }
  __break(1u);
  return result;
}

void sub_1001255C0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_100124924(a1, a2, *(_QWORD *)(v3 + 16), *(uint64_t (**)(uint64_t))(v3 + 56), *(_QWORD *)(v3 + 64), a3, *(CGFloat *)(v3 + 24), *(CGFloat *)(v3 + 32), *(CGFloat *)(v3 + 40), *(CGFloat *)(v3 + 48));
}

uint64_t sub_1001255D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = sub_10002A750(&qword_1006476A0);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_100125634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100647698;
  if (!qword_100647698)
  {
    v1 = sub_10002CA5C(&qword_100647690);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100647698);
  }
  return result;
}

BOOL sub_100125680(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double Height;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  if (CGRectGetHeight(*(CGRect *)&a1) <= 0.0)
    return 0;
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  if (CGRectGetMinY(v12) >= a5)
  {
    v15.origin.x = a1;
    v15.origin.y = a2;
    v15.size.width = a3;
    v15.size.height = a4;
    Height = CGRectGetHeight(v15);
  }
  else
  {
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    Height = 0.0;
    if (CGRectGetMaxY(v13) > a5)
    {
      v14.origin.x = a1;
      v14.origin.y = a2;
      v14.size.width = a3;
      v14.size.height = a4;
      Height = CGRectGetMaxY(v14) - a5;
    }
  }
  v16.origin.x = a1;
  v16.origin.y = a2;
  v16.size.width = a3;
  v16.size.height = a4;
  return CGRectGetHeight(v16) * 0.5 <= Height;
}

unint64_t sub_100125764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006462D0;
  if (!qword_1006462D0)
  {
    v1 = objc_opt_self(UITableViewCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006462D0);
  }
  return result;
}

uint64_t sub_1001257A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1001257C4()
{
  uint64_t v0;
  double v1;
  double v2;
  objc_super v4;

  v1 = *(double *)(v0 + 24);
  v2 = *(double *)(v0 + 32);
  v4.receiver = *(id *)(v0 + 16);
  v4.super_class = (Class)type metadata accessor for TTRIRemindersListTreeTableView();
  return objc_msgSendSuper2(&v4, "setContentOffset:", v1, v2);
}

uint64_t sub_100125814()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100125824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
  v10 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = (_QWORD *)(v11
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter);
  *v12 = 0;
  v12[1] = 0;
  v13 = v11
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 24) = -1;
  v14 = v11
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  v15 = sub_10002A750(&qword_100641740);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_BYTE *)(v11
           + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_10000F614((uint64_t)v9, v11+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_childIndex) = a2;
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability) = v3;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_1005F2808;
  *a3 = v11;
  return swift_retain();
}

uint64_t sub_100125984@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  v12 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v14 = (_QWORD *)(v13
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter);
  *v14 = 0;
  v14[1] = 0;
  v15 = v13
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 24) = -1;
  v16 = v13
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  v17 = sub_10002A750(&qword_100641740);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_BYTE *)(v13
           + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_10000F614((uint64_t)v11, v13+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v13
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_childIndex) = 0;
  *(_QWORD *)(v13
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability) = v2;
  v18 = swift_allocObject(&unk_1005F2958, 24, 7);
  swift_weakInit(v18 + 16, v2);
  sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = *(unsigned __int8 *)(v6 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_1005F2980, v21 + 8, v19 | 7);
  sub_10001F580((uint64_t)v8, v22 + v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v22 + v21) = v18;
  v23 = (_QWORD *)(v13
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter);
  v24 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter);
  v25 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter
                  + 8);
  *v23 = sub_10012B534;
  v23[1] = v22;
  swift_retain();
  result = sub_1000381B8(v24, v25);
  a2[3] = v12;
  a2[4] = (uint64_t)&off_1005F2808;
  *a2 = v13;
  return result;
}

uint64_t sub_100125BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(v1, a1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return v8;
  }
  else
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_1006476C0);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.fault.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_100125D04()
{
  return 0;
}

id sub_100125D18@<X0>(uint64_t a1@<X1>, void *a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  id v28;

  v5 = v4;
  v10 = sub_10002A750(&qword_100647B40);
  v11 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v12 = sub_100023FEC(&qword_100647B48, &qword_100647B40, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_10003E3B8();
  v14 = Sequence.mapToSet<A>(_:)(sub_1001265EC, 0, v10, v11, v12, v13);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v17 = Strong;
    v18 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType(Strong, v16);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(v5, v14, ObjectType, v18);
    swift_bridgeObjectRelease(v14);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100012DC4(v21, (uint64_t)qword_1006476C0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    swift_bridgeObjectRelease(v14);

    v20 = 0;
  }
  v26 = *(void **)(v5 + 32);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = v26;
  *(_QWORD *)(a4 + 16) = a2;
  *(_BYTE *)(a4 + 24) = a3;
  *(_QWORD *)(a4 + 32) = v20;
  v27 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  swift_storeEnumTagMultiPayload(a4, v27, 2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a4, 0, 1, v27);
  swift_bridgeObjectRetain(a1);
  v28 = v26;
  return sub_1000898F4(a2, a3);
}

uint64_t sub_100125F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006476C0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006476C0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100125FE0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t Strong;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  id v37;
  void *v38;
  char v39;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  _BYTE v51[24];

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v11, v9) != 1)
  {
    v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
    v42 = (uint64_t)v11;
LABEL_26:
    sub_10001F544(v42, v41);
    return 0;
  }
  sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10002B1E8((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
  {
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID;
    v42 = (uint64_t)v8;
    goto LABEL_26;
  }
  v15 = *v8;
  v16 = a1[3];
  v17 = a1[4];
  sub_10001413C(a1, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (!v18)
  {
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

    return 0;
  }
  v19 = (void *)v18;
  swift_beginAccess(a3 + 16, v51, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (!Strong)
    goto LABEL_15;
  v21 = Strong;
  v22 = objc_msgSend(v19, "objectID");
  v23 = sub_10002A750((uint64_t *)&unk_1006415A0);
  inited = swift_initStackObject(v23, v50);
  *(_OWORD *)(inited + 16) = xmmword_100521140;
  *(_QWORD *)(inited + 32) = v22;
  v49 = inited;
  specialized Array._endMutation()(inited);
  v25 = v49;
  v26 = v22;
  v27 = sub_100017684(v25);
  swift_bridgeObjectRelease(v25);
  v28 = swift_unknownObjectWeakLoadStrong(v21 + 16);
  if (!v28)
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100012DC4(v43, (uint64_t)qword_1006476C0);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.fault.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }
    swift_bridgeObjectRelease(v27);

    goto LABEL_21;
  }
  v30 = v28;
  v31 = *(_QWORD *)(v21 + 24);
  ObjectType = swift_getObjectType(v28, v29);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 32))(v21, v27, ObjectType, v31);
  swift_bridgeObjectRelease(v27);
  swift_unknownObjectRelease(v30);
  if (!v33)
  {
LABEL_21:

    swift_release();
    goto LABEL_25;
  }
  if (!*(_QWORD *)(v33 + 16))
  {

    swift_release();
LABEL_24:

    swift_bridgeObjectRelease(v33);
    goto LABEL_25;
  }
  v26 = v26;
  v34 = sub_1002AA364((uint64_t)v26);
  if ((v35 & 1) == 0)
  {

    swift_release();
    goto LABEL_24;
  }
  v36 = *(void **)(*(_QWORD *)(v33 + 56) + 8 * v34);
  v37 = v36;
  swift_release();

  swift_bridgeObjectRelease(v33);
  v38 = (void *)TTRSectionID.remObjectID.getter(v36);

  if (!v38)
  {
LABEL_15:

LABEL_25:
    v41 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader;
    v42 = (uint64_t)v14;
    goto LABEL_26;
  }
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v39 = static NSObject.== infix(_:_:)(v15, v38);

  sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if ((v39 & 1) != 0)
    return 2;
  return 0;
}

uint64_t sub_100126458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  _BYTE v18[40];

  v4 = sub_10002A750(&qword_100647B30);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100010634(a1, (uint64_t)v18);
  v11 = sub_10002A750(&qword_100647B38);
  v12 = swift_dynamicCast(v6, v18, v11, v7, 6);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    sub_10002B1E8((uint64_t)v10, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_1000073A0((uint64_t)v6, &qword_100647B30);
    v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

id sub_1001265EC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "objectID");
  *a2 = result;
  return result;
}

uint64_t sub_10012662C()
{
  uint64_t v0;

  return sub_100125BE8(v0);
}

uint64_t sub_100126658(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_100126664(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  id v88;
  char *v89;
  char *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[24];

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v93 = *(_QWORD *)(v2 - 8);
  v94 = v2;
  __chkstk_darwin(v2);
  v97 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v5 = __chkstk_darwin(v4);
  v90 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v95 = (char *)&v88 - v7;
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v9 = __chkstk_darwin(v8);
  v92 = (id *)((char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v12 = (char *)&v88 - v11;
  v13 = sub_10002A750(&qword_100647AE0);
  __chkstk_darwin(v13);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100647AE8);
  __chkstk_darwin(v16);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  sub_10001413C(a1, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
  v25 = (void *)v24(v22, v23);

  if (!v25)
    return 0;
  sub_100126FD4((uint64_t)v15);
  v26 = sub_10002A750(&qword_100647AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v15, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v15, &qword_100647AE0);
    return 0;
  }
  v89 = v12;
  v27 = (uint64_t)&v15[*(int *)(v26 + 48)];
  v28 = *(int *)(v16 + 48);
  v91 = v21;
  v29 = &v18[v28];
  sub_10001F580((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v30 = (uint64_t)v29;
  v31 = (uint64_t)v91;
  sub_10001F580(v27, v30, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10001F580((uint64_t)v18, v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  sub_10001F544(v32, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v33 = v24(v22, v23);
  if (!v33)
  {
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 0;
  }
  v34 = (void *)v33;
  v35 = *(_QWORD *)(v96
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v35 + 16);
  if (!Strong)
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_100012DC4(v54, (uint64_t)qword_1006476C0);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.fault.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v58, 2u);
      swift_slowDealloc(v58, -1, -1);
    }

    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 0;
  }
  v38 = Strong;
  v39 = *(_QWORD *)(v35 + 24);
  ObjectType = swift_getObjectType(Strong, v37);
  v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 8))(v35, ObjectType, v39);
  swift_unknownObjectRelease(v38);
  if (!*(_BYTE *)(v35 + 40))
  {
    swift_release();

    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 1;
  }
  if (*(_BYTE *)(v35 + 40) == 1)
  {
    v41 = objc_msgSend(v34, "objectID");
    v42 = v96;
    swift_beginAccess(v96 + 96, v98, 32, 0);
    v43 = *(_QWORD *)(v42 + 96);
    v44 = *(_QWORD *)(v43 + 16);
    v46 = v93;
    v45 = v94;
    v88 = v34;
    if (v44)
    {
      v47 = v41;
      v48 = sub_1002AA364((uint64_t)v47);
      if ((v49 & 1) != 0)
      {
        v50 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v48);
        swift_endAccess(v98);
        swift_bridgeObjectRetain(v50);

        v51 = v47;
        v52 = (_QWORD *)v96;
        swift_retain();
        v53 = (_QWORD *)sub_10003D6CC(v50, v52, (uint64_t)v51);
        swift_bridgeObjectRelease(v50);
        swift_release();

LABEL_25:
        v71 = v53[2];
        if (v71)
        {
          v72 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) - 8);
          v73 = (uint64_t)v53
              + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
          v74 = *(_QWORD *)(v72 + 72);
          v92 = v53;
          swift_bridgeObjectRetain(v53);
          do
          {
            v75 = v97;
            sub_10002B1E8(v73, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            swift_storeEnumTagMultiPayload(v75, v45, 2);
            swift_retain();
            v76 = (uint64_t)v95;
            TTRMutableTreeStorage.parent(of:)(v75);
            swift_release();
            sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v76, 1, v45) == 1)
            {
              sub_1000073A0(v76, (uint64_t *)&unk_100640EB0);
            }
            else if (swift_getEnumCaseMultiPayload(v76, v45) == 1)
            {
              v77 = (uint64_t)v89;
              sub_10001F580(v76, (uint64_t)v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              v78 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v77, v91);
              sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              if ((v78 & 1) != 0)
              {

                swift_release();
                v53 = v92;
                swift_bridgeObjectRelease(v92);
                v59 = 0;
                goto LABEL_53;
              }
            }
            else
            {
              sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            }
            v73 += v74;
            --v71;
          }
          while (v71);

          swift_release();
          v53 = v92;
          swift_bridgeObjectRelease(v92);
          v59 = 1;
LABEL_53:
          v31 = (uint64_t)v91;
        }
        else
        {

          swift_release();
          v59 = 1;
        }
        sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        swift_bridgeObjectRelease(v53);
        return v59;
      }

    }
    swift_endAccess(v98);
    v53 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  v61 = objc_msgSend(v34, "objectID");
  v62 = v96;
  swift_beginAccess(v96 + 96, v98, 32, 0);
  v63 = *(_QWORD *)(v62 + 96);
  v64 = (uint64_t)v90;
  if (!*(_QWORD *)(v63 + 16))
    goto LABEL_37;
  v65 = v61;
  v66 = sub_1002AA364((uint64_t)v65);
  if ((v67 & 1) == 0)
  {

LABEL_37:
    swift_endAccess(v98);
    v95 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_38;
  }
  v68 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v66);
  swift_endAccess(v98);
  swift_bridgeObjectRetain(v68);

  v69 = (_QWORD *)v96;
  swift_retain();
  v70 = v65;
  v95 = (char *)sub_10003D6CC(v68, v69, (uint64_t)v70);
  swift_bridgeObjectRelease(v68);
  swift_release();

LABEL_38:
  v79 = *((_QWORD *)v95 + 2);
  if (!v79)
  {

    swift_release();
LABEL_46:
    v59 = 1;
    goto LABEL_51;
  }
  v88 = v34;
  v80 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) - 8);
  v81 = (uint64_t)&v95[(*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80)];
  v82 = *(_QWORD *)(v80 + 72);
  swift_bridgeObjectRetain(v95);
  v83 = v94;
  while (1)
  {
    v84 = v97;
    sub_10002B1E8(v81, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    swift_storeEnumTagMultiPayload(v84, v83, 2);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v84);
    swift_release();
    sub_10001F544(v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v64, 1, v83) == 1)
    {
      sub_1000073A0(v64, (uint64_t *)&unk_100640EB0);
LABEL_49:
      v87 = (uint64_t)v91;
      swift_release();
      swift_bridgeObjectRelease(v95);

      v59 = 0;
      goto LABEL_52;
    }
    if (swift_getEnumCaseMultiPayload(v64, v83) != 1)
    {
      sub_10001F544(v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_49;
    }
    v85 = (uint64_t)v92;
    sub_10001F580(v64, (uint64_t)v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v86 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v85, v91);
    sub_10001F544(v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if ((v86 & 1) == 0)
      break;
    v81 += v82;
    if (!--v79)
    {

      swift_release();
      swift_bridgeObjectRelease(v95);
      goto LABEL_46;
    }
  }

  swift_release();
  swift_bridgeObjectRelease(v95);
  v59 = 0;
LABEL_51:
  v87 = (uint64_t)v91;
LABEL_52:
  sub_10001F544(v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_bridgeObjectRelease(v95);
  return v59;
}

uint64_t sub_100126FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v3 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v3);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v49 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v47 - v21;
  sub_10012763C((uint64_t)v13);
  v23 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v13, 1, v23) == 1)
  {
    v24 = &qword_100641740;
    v25 = (uint64_t)v13;
LABEL_3:
    sub_1000073A0(v25, v24);
    v26 = sub_10002A750(&qword_100647AF0);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28 = a1;
    return v27(v28, 1, 1, v26);
  }
  v48 = a1;
  sub_10001F580((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v17);
  if ((EnumCaseMultiPayload - 2) < 8)
    goto LABEL_5;
  if ((EnumCaseMultiPayload - 10) < 2)
  {
    v20 = v22;
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
LABEL_5:
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_6:
    sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = sub_10002A750(&qword_100647AF0);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28 = v48;
    return v27(v28, 1, 1, v26);
  }
  sub_10001F580((uint64_t)v20, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v31 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v31 + 16);
  if (Strong)
  {
    v34 = Strong;
    v35 = *(_QWORD *)(v31 + 24);
    ObjectType = swift_getObjectType(Strong, v33);
    v37 = (uint64_t)v50;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v35 + 16))(v31, v10, ObjectType, v35);
    swift_unknownObjectRelease(v34);
  }
  else
  {
    v37 = (uint64_t)v50;
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100012DC4(v38, (uint64_t)qword_1006476C0);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.fault.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v37, 1, 1, v5);
  }
  a1 = v48;
  sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v37, 1, v5) == 1)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v24 = &qword_1006436F0;
    v25 = v37;
    goto LABEL_3;
  }
  v43 = v49;
  sub_10001F580(v37, v49, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  v44 = sub_10002A750(&qword_100647AF0);
  v45 = a1;
  v46 = a1 + *(int *)(v44 + 48);
  sub_10002B1E8((uint64_t)v10, v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10001F580(v43, v46, type metadata accessor for TTRRemindersListMatchedAttributeValue);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v45, 0, 1, v44);
}

uint64_t sub_1001274A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_10002A750(&qword_100647AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100647AE8);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100126FD4((uint64_t)v4);
  v8 = sub_10002A750(&qword_100647AF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100647AE0);
    v9 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    v11 = (uint64_t)&v4[*(int *)(v8 + 48)];
    v12 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F580(v11, v12, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    sub_10001F580((uint64_t)&v7[*(int *)(v5 + 48)], a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v13 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
}

uint64_t sub_10012763C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10002A750(&qword_100654860);
  v9 = __chkstk_darwin(v59);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v53 - v12;
  v14 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10002A750(&qword_100647B00);
  v17 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v19 + 16);
  if (!Strong)
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v40 = type metadata accessor for Logger(0);
    v41 = sub_100012DC4(v40, (uint64_t)qword_1006476C0);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.fault.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    goto LABEL_14;
  }
  v22 = Strong;
  v56 = a1;
  v23 = *(_QWORD *)(v19 + 24);
  ObjectType = swift_getObjectType(Strong, v21);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v19, ObjectType, v23);
  swift_unknownObjectRelease(v22);
  v26 = v2
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent;
  v27 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_childIndex);
  v54 = v7;
  v55 = v6;
  v28 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v6);
  sub_1000B5F7C(v26, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v59 + 36)] = v27;
  sub_10000F614((uint64_t)v11, (uint64_t)v13, &qword_100654860);
  v29 = *(_QWORD *)(v25 + 32);
  v31 = swift_getObjectType(*(_QWORD *)(v25 + 24), v30);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 24))(v13, 1, v31, v29);
  v33 = v32;
  if (*(_QWORD *)(v32 + 16))
  {
    sub_10000735C(v32 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v16, &qword_100647B00);
    v28 = 0;
  }
  v34 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v28, 1, v60);
  swift_release();
  swift_bridgeObjectRelease(v33);
  sub_1000073A0((uint64_t)v13, &qword_100654860);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v34);
  v36 = v55;
  a1 = v56;
  v37 = v54;
  if (v35 == 1)
  {
    v38 = &qword_100647AF8;
    v39 = (uint64_t)v16;
LABEL_13:
    sub_1000073A0(v39, v38);
LABEL_14:
    v47 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a1, 1, 1, v47);
  }
  v45 = v57;
  sub_10000F614((uint64_t)v16, v57, &qword_100647B00);
  v46 = v58;
  sub_10000735C(v45, v58, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v46, 1, v36) == 1)
  {
    sub_1000073A0(v45, &qword_100647B00);
    v38 = (uint64_t *)&unk_100640EB0;
    v39 = v46;
    goto LABEL_13;
  }
  v49 = v53;
  sub_10001F580(v46, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v50 = sub_10002A750(&qword_100641750);
  v51 = *(int *)(v50 + 48);
  sub_10001F580(v49, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v52 = *(_QWORD *)(v45 + *(int *)(v34 + 36));
  sub_1000073A0(v45, &qword_100647B00);
  *(_QWORD *)(a1 + v51) = v52;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a1, 0, 1, v50);
}

uint64_t sub_100127AF8()
{
  uint64_t v0;

  sub_1000073A0(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent, (uint64_t *)&unk_100640EB0);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100127B40(_QWORD *a1)
{
  return sub_100126664(a1) & 1;
}

uint64_t sub_100127B64()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(*v0
                                            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability)
                              + 168))();
}

uint64_t sub_100127B98()
{
  return 1;
}

uint64_t sub_100127BA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001274A4(a1);
}

void *sub_100127BC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  void *v12;
  void *v13;
  void *v14;

  v1 = v0
     + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget);
  v3 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget
                + 8);
  v4 = *(void **)(v1 + 16);
  v5 = v2;
  v6 = *(unsigned __int8 *)(v1 + 24);
  if (v6 == 255)
  {
    v5 = (void *)sub_100127CA8();
    v13 = *(void **)(v1 + 8);
    v14 = *(void **)v1;
    v12 = *(void **)(v1 + 16);
    *(_QWORD *)v1 = v5;
    *(_QWORD *)(v1 + 8) = v7;
    *(_QWORD *)(v1 + 16) = v8;
    v9 = *(_BYTE *)(v1 + 24);
    *(_BYTE *)(v1 + 24) = v10;
    sub_100089894(v5, v7, v8, v10);
    sub_10012B0D4(v14, v13, v12, v9);
  }
  sub_10012B0E8(v2, v3, v4, v6);
  return v5;
}

uint64_t sub_100127CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v0);
  v1 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v20 - v15;
  sub_100128304((uint64_t)v7);
  v17 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17) != 1)
  {
    v20[1] = v4;
    sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v10, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = (char *)&loc_100127EE4 + 4 * byte_1005251A0[swift_getEnumCaseMultiPayload(v14, v11)];
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v7, &qword_100641740);
  return 0;
}

void sub_100128134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;

  v6 = *v3;
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v9 = Strong;
    v10 = v1;
    v11 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 40))(v2, v6, ObjectType, v11);
    LODWORD(v11) = ~v13;

    swift_unknownObjectRelease(v9);
    sub_10001F544(v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((_DWORD)v11)
      JUMPOUT(0x10012810CLL);
    JUMPOUT(0x1001282C0);
  }
  if (qword_10063D3F0 != -1)
    swift_once(&qword_10063D3F0, sub_100125F50);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_1006476C0);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.fault.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v18, 2u);
    v19 = v18;
    v1 = *(_QWORD *)(v5 - 88);
    swift_slowDealloc(v19, -1, -1);
  }

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  JUMPOUT(0x1001282BCLL);
}

uint64_t sub_100128304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = sub_10002A750(&qword_100647B28);
  v4 = __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v13[-v7];
  v9 = v1
     + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  swift_beginAccess(v1+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___actualInsertionLocation, v14, 0, 0);
  sub_10000735C(v9, (uint64_t)v8, &qword_100647B28);
  v10 = sub_10002A750(&qword_100641740);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10000F614((uint64_t)v8, a1, &qword_100641740);
  sub_1000073A0((uint64_t)v8, &qword_100647B28);
  sub_1001284D0(v1, a1);
  sub_10000735C(a1, (uint64_t)v6, &qword_100641740);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v13, 33, 0);
  sub_100041F2C((uint64_t)v6, v9, &qword_100647B28);
  return swift_endAccess(v13);
}

uint64_t sub_100128488()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder);
  if (v2 == 2)
  {
    v3 = sub_10012898C(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_1001284D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10002A750(&qword_100654860);
  v9 = __chkstk_darwin(v59);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v53 - v12;
  v14 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10002A750(&qword_100647B00);
  v17 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v19 + 16);
  if (!Strong)
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v40 = type metadata accessor for Logger(0);
    v41 = sub_100012DC4(v40, (uint64_t)qword_1006476C0);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.fault.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    goto LABEL_14;
  }
  v22 = Strong;
  v56 = a2;
  v23 = *(_QWORD *)(v19 + 24);
  ObjectType = swift_getObjectType(Strong, v21);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v19, ObjectType, v23);
  swift_unknownObjectRelease(v22);
  v26 = a1
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent;
  v27 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_childIndex);
  v54 = v7;
  v55 = v6;
  v28 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v6);
  sub_1000B5F7C(v26, (uint64_t)v11);
  *(_QWORD *)&v11[*(int *)(v59 + 36)] = v27;
  sub_10000F614((uint64_t)v11, (uint64_t)v13, &qword_100654860);
  v29 = *(_QWORD *)(v25 + 32);
  v31 = swift_getObjectType(*(_QWORD *)(v25 + 24), v30);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 24))(v13, 1, v31, v29);
  v33 = v32;
  if (*(_QWORD *)(v32 + 16))
  {
    sub_10000735C(v32 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v16, &qword_100647B00);
    v28 = 0;
  }
  v34 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v28, 1, v60);
  swift_release();
  swift_bridgeObjectRelease(v33);
  sub_1000073A0((uint64_t)v13, &qword_100654860);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v34);
  v36 = v55;
  a2 = v56;
  v37 = v54;
  if (v35 == 1)
  {
    v38 = &qword_100647AF8;
    v39 = (uint64_t)v16;
LABEL_13:
    sub_1000073A0(v39, v38);
LABEL_14:
    v47 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a2, 1, 1, v47);
  }
  v45 = v57;
  sub_10000F614((uint64_t)v16, v57, &qword_100647B00);
  v46 = v58;
  sub_10000735C(v45, v58, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v46, 1, v36) == 1)
  {
    sub_1000073A0(v45, &qword_100647B00);
    v38 = (uint64_t *)&unk_100640EB0;
    v39 = v46;
    goto LABEL_13;
  }
  v49 = v53;
  sub_10001F580(v46, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v50 = sub_10002A750(&qword_100641750);
  v51 = *(int *)(v50 + 48);
  sub_10001F580(v49, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v52 = *(_QWORD *)(v45 + *(int *)(v34 + 36));
  sub_1000073A0(v45, &qword_100647B00);
  *(_QWORD *)(a2 + v51) = v52;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a2, 0, 1, v50);
}

BOOL sub_10012898C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD v31[2];

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)v31 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)v31 - v9;
  v11 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_childIndex);
  v12 = v11 - 1;
  if (v11 < 1)
    return 0;
  v13 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v13 + 16);
  if (!Strong)
  {
    if (qword_10063D3F0 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100012DC4(v25, (uint64_t)qword_1006476C0);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.fault.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    return 0;
  }
  v16 = Strong;
  v17 = *(_QWORD *)(v13 + 24);
  ObjectType = swift_getObjectType(Strong, v15);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(v13, ObjectType, v17);
  swift_unknownObjectRelease(v16);
  v21 = *(_QWORD *)(v19 + 24);
  v20 = *(_QWORD *)(v19 + 32);
  swift_unknownObjectRetain(v21);
  swift_release();
  v23 = swift_getObjectType(v21, v22);
  v31[1] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 32))(v12, a1+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent, v23);
  swift_unknownObjectRelease(v21);
  sub_10001F580((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580((uint64_t)v10, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v24 = swift_getEnumCaseMultiPayload(v5, v2) == 4;
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v24;
}

uint64_t sub_100128BE8()
{
  uint64_t v0;

  sub_1000073A0(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent, (uint64_t *)&unk_100640EB0);
  swift_release();
  sub_1000381B8(*(_QWORD *)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter), *(_QWORD *)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter+ 8));
  sub_10012B0D4(*(void **)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget+ 8), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget+ 16), *(_BYTE *)(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___creationTarget+ 24));
  sub_1000073A0(v0+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest____lazy_storage___actualInsertionLocation, &qword_100647B28);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void *sub_100128C78()
{
  return sub_100127BC4();
}

uint64_t sub_100128C98@<X0>(uint64_t a1@<X8>)
{
  return sub_100128304(a1);
}

void sub_100128CB8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  v6 = (uint64_t *)(*v2
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_additionalSubjectFilter);
  v7 = *v6;
  v8 = v6[1];
  v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionPlan();
  swift_allocObject(v9, 88, 7);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  sub_100053DE4(v7, v8);
  v10 = sub_10012ABFC(v5, a1, v7, v8);
  sub_1000381B8(v7, v8);
  swift_release();
  swift_bridgeObjectRelease(a1);
  a2[3] = v9;
  a2[4] = (uint64_t)&off_1005F27D8;
  *a2 = v10;
}

void *sub_100128D80()
{
  uint64_t v0;
  void *v1;
  int v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v1 = *(void **)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 40);
  v3 = v1;
  if (v2 == 254)
  {
    v3 = (void *)sub_100128E0C(v0);
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v5 = *(_BYTE *)(v0 + 40);
    *(_BYTE *)(v0 + 40) = v6;
    sub_10012B0FC(v3, v6);
    sub_10012B110(v4, v5);
  }
  sub_10012B124(v1, v2);
  return v3;
}

uint64_t sub_100128E0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = sub_10002A750(&qword_100647B50);
  v2 = __chkstk_darwin(v67);
  v66 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v68 = (uint64_t)&v58 - v4;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v60 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10002A750(&qword_100647B00);
  v7 = __chkstk_darwin(v61);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (uint64_t)&v58 - v10;
  v11 = sub_10002A750(&qword_100647B58);
  __chkstk_darwin(v11);
  v65 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10002A750(&qword_100647B60);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v59 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v69 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(*(_QWORD *)(a1 + 64)
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v23 + 16);
  if (!Strong)
  {
    v31 = qword_10063D3F0;
    swift_retain();
    if (v31 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100012DC4(v32, (uint64_t)qword_1006476C0);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.fault.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }
    swift_release();

    return 0;
  }
  v26 = Strong;
  v58 = a1;
  v27 = *(_QWORD *)(v23 + 24);
  ObjectType = swift_getObjectType(Strong, v25);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v23, ObjectType, v27);
  swift_unknownObjectRelease(v26);
  sub_100128304((uint64_t)v16);
  v30 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30) == 1)
  {
    sub_1000073A0((uint64_t)v16, &qword_100641740);
    swift_release();
    return 0;
  }
  v37 = v29;
  v38 = *(_QWORD *)&v16[*(int *)(v30 + 48)];
  v39 = *(int *)(v17 + 48);
  sub_10001F580((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)&v19[v39] = v38;
  v40 = *(_QWORD *)&v19[*(int *)(v17 + 48)];
  v41 = (uint64_t)v19;
  v42 = v69;
  sub_10001F580(v41, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v43 = v42;
  v44 = v60;
  sub_10002B1E8(v43, v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v45(v44, 0, 1, v20);
  v45((uint64_t)v9, 1, 1, v20);
  sub_100041F2C(v44, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
  v46 = v61;
  *(_QWORD *)&v9[*(int *)(v61 + 36)] = v40;
  v47 = v63;
  sub_10000F614((uint64_t)v9, v63, &qword_100647B00);
  v48 = v58;
  v49 = *(_QWORD *)(v58 + 80);
  v60 = v37;
  v50 = *(_QWORD *)(v47 + *(int *)(v46 + 36));
  v51 = (uint64_t)v66;
  v45((uint64_t)v66, 1, 1, v20);
  swift_bridgeObjectRetain(v49);
  swift_retain();
  sub_1000B5F7C(v47, v51);
  *(_QWORD *)(v51 + *(int *)(v67 + 36)) = v50;
  v52 = v68;
  sub_10000F614(v51, v68, &qword_100647B50);
  v53 = (uint64_t)v65;
  TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)(v52, v49);
  swift_release();
  sub_1000073A0(v52, &qword_100647B50);
  swift_bridgeObjectRelease(v49);
  sub_1000073A0(v47, &qword_100647B00);
  v54 = v64;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v53, 1, v64) == 1)
  {
    sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    sub_1000073A0(v53, &qword_100647B58);
    return 0;
  }
  v56 = v59;
  sub_10000F614(v53, v59, &qword_100647B60);
  v57 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  TTRRelativeInsertionPosition.optionalMapSibling<A>(_:)(&v70, sub_10012B138, v48, v54, v57);
  swift_release();
  sub_1000073A0(v56, &qword_100647B60);
  sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v70;
}

void sub_100129424(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 64)
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType(Strong, v7);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    v12 = swift_retain();
    v13 = v11(v12, a1, ObjectType, v9);
    swift_release();
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v14 = qword_10063D3F0;
    swift_retain();
    if (v14 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_1006476C0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    swift_release();

    v13 = 0;
  }
  *a3 = v13;
}

double sub_100129580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[3];
  __int128 v78[2];
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  _QWORD v82[5];
  unsigned __int8 v83;
  char v84[8];

  v3 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v74 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v74);
  v73 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v72 = (uint64_t)&v69 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v69 - v11;
  v13 = swift_allocObject(&unk_1005F2868, 24, 7);
  *(_QWORD *)(v13 + 16) = a1;
  v14 = sub_10002A750(&qword_100647B08);
  inited = (_QWORD *)swift_initStackObject(v14, v84);
  *((_OWORD *)inited + 1) = xmmword_100520250;
  v16 = swift_allocObject(&unk_1005F2890, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_10012AC94;
  *(_QWORD *)(v16 + 24) = v13;
  inited[4] = sub_1000B5D74;
  inited[5] = v16;
  v76 = v1;
  v17 = *(_QWORD *)(*(_QWORD *)(v1 + 64)
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v17 + 16);
  v75 = v13;
  if (Strong)
  {
    v20 = Strong;
    v71 = v7;
    v70 = v6;
    v21 = a1;
    v22 = *(_QWORD *)(v17 + 24);
    v23 = v5;
    v24 = inited;
    v25 = v12;
    ObjectType = swift_getObjectType(Strong, v19);
    v27 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain(v21);
    swift_retain();
    v28 = ObjectType;
    v12 = v25;
    inited = v24;
    v5 = v23;
    v29 = v22;
    a1 = v21;
    v6 = v70;
    v7 = v71;
    v30 = v27(v28, v29);
    swift_unknownObjectRelease(v20);
    if ((v30 & 1) == 0)
    {
LABEL_7:
      v32 = 0;
      v33 = v76;
      v34 = *(_QWORD *)(v76 + 48);
      if (!v34)
        goto LABEL_8;
LABEL_13:
      v46 = *(_QWORD *)(v33 + 56);
      v47 = swift_allocObject(&unk_1005F28B8, 32, 7);
      *(_QWORD *)(v47 + 16) = v34;
      *(_QWORD *)(v47 + 24) = v46;
      v49 = inited[2];
      v48 = inited[3];
      swift_retain_n(v46, 2);
      if (v49 >= v48 >> 1)
        inited = sub_100455AFC((_QWORD *)(v48 > 1), v49 + 1, 1, inited);
      inited[2] = v49 + 1;
      v50 = &inited[2 * v49];
      v50[4] = sub_1001301C4;
      v50[5] = v47;
      sub_1000381B8(v34, v46);
      if (v32)
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_retain();
  }
  sub_100128304((uint64_t)v5);
  v31 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v5, 1, v31))
  {
    sub_1000073A0((uint64_t)v5, &qword_100641740);
    goto LABEL_7;
  }
  v36 = v72;
  sub_10002B1E8((uint64_t)v5, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0((uint64_t)v5, &qword_100641740);
  sub_10001F580(v36, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v37 = swift_allocObject(&unk_1005F28E0, 24, 7);
  v33 = v76;
  swift_weakInit(v37 + 16, v76);
  v38 = v73;
  sub_10002B1E8((uint64_t)v12, v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v39 = *(unsigned __int8 *)(v6 + 80);
  v40 = (v39 + 24) & ~v39;
  v41 = swift_allocObject(&unk_1005F2908, v40 + v7, v39 | 7);
  *(_QWORD *)(v41 + 16) = v37;
  sub_10001F580(v38, v41 + v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v42 = swift_allocObject(&unk_1005F2930, 32, 7);
  *(_QWORD *)(v42 + 16) = sub_10012B05C;
  *(_QWORD *)(v42 + 24) = v41;
  v44 = inited[2];
  v43 = inited[3];
  swift_retain();
  if (v44 >= v43 >> 1)
    inited = sub_100455AFC((_QWORD *)(v43 > 1), v44 + 1, 1, inited);
  inited[2] = v44 + 1;
  v45 = &inited[2 * v44];
  v45[4] = sub_1001301C4;
  v45[5] = v42;
  swift_release();
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v32 = 1;
  v34 = *(_QWORD *)(v33 + 48);
  if (v34)
    goto LABEL_13;
LABEL_8:
  if (v32)
  {
LABEL_9:
    v35 = *(_QWORD *)(a1 + 16) == 0;
    goto LABEL_17;
  }
LABEL_16:
  v35 = 1;
LABEL_17:
  type metadata accessor for TTRProcessMoveSubjects(0);
  v82[0] = a1;
  swift_bridgeObjectRetain(inited);
  v51 = sub_10002A750(&qword_100647B10);
  v52 = sub_100023FEC(&qword_100647B18, &qword_100647B10, (uint64_t)&protocol conformance descriptor for [A]);
  v53 = static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)(v82, v35, inited, v51, v52);
  v55 = v54;
  swift_bridgeObjectRelease(inited);
  *(_BYTE *)(v33 + 24) = v53 & 1;
  v56 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v33 + 16) = v55;
  swift_bridgeObjectRelease(v56);
  v57 = *(_QWORD *)(v33 + 16);
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v72 = v52;
    v73 = v51;
    v59 = v57 + 32;
    swift_bridgeObjectRetain(v57);
    v60 = _swiftEmptyArrayStorage;
    do
    {
      sub_10000735C(v59, (uint64_t)v82, &qword_100647B20);
      sub_100010634((uint64_t)v82, (uint64_t)v77);
      v61 = v83;
      sub_10002E37C(v77, (uint64_t)v78);
      if (v61 == 1)
      {
        sub_10002E37C(v78, (uint64_t)&v79);
      }
      else
      {
        sub_100027F10(v78);
        v81 = 0;
        v79 = 0u;
        v80 = 0u;
      }
      sub_1000073A0((uint64_t)v82, &qword_100647B20);
      if (*((_QWORD *)&v80 + 1))
      {
        sub_10002E37C(&v79, (uint64_t)v77);
        sub_10002E37C(v77, (uint64_t)&v79);
        if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
          v60 = sub_100455AE8(0, v60[2] + 1, 1, v60);
        v63 = v60[2];
        v62 = v60[3];
        if (v63 >= v62 >> 1)
          v60 = sub_100455AE8((_QWORD *)(v62 > 1), v63 + 1, 1, v60);
        v60[2] = v63 + 1;
        sub_10002E37C(&v79, (uint64_t)&v60[5 * v63 + 4]);
      }
      else
      {
        sub_1000073A0((uint64_t)&v79, (uint64_t *)&unk_10064A020);
      }
      v59 += 48;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease(v57);
    v33 = v76;
    v51 = v73;
    v52 = v72;
  }
  else
  {
    v60 = _swiftEmptyArrayStorage;
  }
  v64 = *(_QWORD *)(v33 + 72);
  *(_QWORD *)(v33 + 72) = v60;
  swift_bridgeObjectRelease(v64);
  v65 = *(_QWORD *)(v33 + 72);
  if (!v65)
    __break(1u);
  v82[0] = *(_QWORD *)(v33 + 72);
  swift_bridgeObjectRetain(v65);
  v66 = Sequence.completeCompactMap<A>(_:)(sub_10012A6FC, 0, v51, v74, v52);
  swift_bridgeObjectRelease(inited);
  swift_bridgeObjectRelease(v65);
  swift_release();
  v67 = *(_QWORD *)(v33 + 80);
  *(_QWORD *)(v33 + 80) = v66;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v67).n128_u64[0];
  return result;
}

uint64_t sub_100129CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v1 + 72);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x10012A164);
  }
  v23 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2 + 32;
    swift_bridgeObjectRetain(v2);
    do
    {
      sub_100010634(v5, (uint64_t)v20);
      v7 = v21;
      v8 = v22;
      sub_10001413C(v20, v21);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      v10 = sub_100027F10(v20);
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v6);
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    v13 = v23;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v13 = (uint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v2);
  if (!((unint64_t)v13 >> 62))
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
    goto LABEL_13;
  }
  if (v13 < 0)
    v18 = v13;
  else
    v18 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v13);
  if (v19)
  {
LABEL_13:
    sub_100128D80();
    if (v14 != -1)
    {
      sub_100127BC4();
      __asm { BR              X10 }
    }
  }
LABEL_15:
  swift_bridgeObjectRelease(v13);
  v16 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

uint64_t sub_10012A180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD v34[2];

  v1 = sub_10002A750(&qword_100654860);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)v34 - v5;
  v7 = *(_QWORD *)(v0 + 80);
  if (!v7)
    return 0;
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v8
                 + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability);
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 16);
  if (!Strong)
  {
    v27 = qword_10063D3F0;
    swift_retain();
    swift_bridgeObjectRetain(v7);
    if (v27 != -1)
      swift_once(&qword_10063D3F0, sub_100125F50);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100012DC4(v28, (uint64_t)qword_1006476C0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.fault.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    swift_release();

    swift_bridgeObjectRelease(v7);
    return 0;
  }
  v12 = Strong;
  v13 = *(_QWORD *)(v9 + 24);
  ObjectType = swift_getObjectType(Strong, v11);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v9, ObjectType, v13);
  swift_bridgeObjectRetain(v7);
  swift_unknownObjectRelease(v12);
  v16 = v8
      + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_parent;
  v17 = *(_QWORD *)(v8
                  + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_childIndex);
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  sub_1000B5F7C(v16, (uint64_t)v4);
  *(_QWORD *)&v4[*(int *)(v1 + 36)] = v17;
  sub_10000F614((uint64_t)v4, (uint64_t)v6, &qword_100654860);
  v34[1] = v7;
  v19 = sub_10002A750(&qword_100649DF0);
  v20 = sub_10002A750(&qword_1006445E0);
  v21 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = Sequence.completeCompactMap<A>(_:)(sub_1000B5FC4, v15, v19, v20, v21);
  if (v22)
  {
    v23 = v22;
    sub_10002A750(&qword_1006445E8);
    v24 = sub_100023FEC(&qword_1006445F0, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v25 = sub_100023FEC(&qword_1006445F8, &qword_100654860, (uint64_t)&protocol conformance descriptor for TTRDerivedTreeLocation<A>);
    v26 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)(v23, v6, v1, v24, v25);
    swift_bridgeObjectRelease(v7);
    swift_release();
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    swift_release();
    v26 = 0;
  }
  sub_1000073A0((uint64_t)v6, &qword_100654860);
  return v26;
}

uint64_t sub_10012A4B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;

  v3 = a1[3];
  v4 = a1[4];
  sub_10001413C(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(_QWORD *)(a2 + 16);
    if (v7)
    {
      v8 = (_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain(a2);
      do
      {
        v9 = v8[3];
        v10 = v8[4];
        sub_10001413C(v8, v9);
        v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, "objectID");

          if (v13)
          {
            sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
            v14 = v6;
            v15 = static NSObject.== infix(_:_:)(v14, v13);

            if ((v15 & 1) != 0)
            {

              swift_bridgeObjectRelease(a2);
              return 1;
            }
          }
        }
        v8 += 5;
        --v7;
      }
      while (v7);

      swift_bridgeObjectRelease(a2);
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_10012A604@<X0>(uint64_t (*a1)(void)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10012A62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = *(_QWORD *)(result + 64);
    swift_retain();
    if ((sub_100128488() & 1) != 0)
    {
      swift_release();
      swift_release();
      return 2;
    }
    else
    {
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v7
                                                                     + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24925RemindersInsertionRequest_dragAndDropCapability)
                                                       + 176))(a1, a3);
      swift_release();
      swift_release();
      if ((v8 & 1) != 0)
        return 0;
      else
        return 2;
    }
  }
  return result;
}

uint64_t sub_10012A6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRSmartListDragAndDropPresenterCapability();
  sub_100126458(a1, (uint64_t)v6);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    return sub_1003E98E4(a1, a2);
  }
  else
  {
    sub_10001F580((uint64_t)v6, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
}

uint64_t sub_10012A808()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_10012B110(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1000381B8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t sub_10012A858()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_10012A864()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 24);
}

void *sub_10012A870()
{
  return sub_100128D80();
}

uint64_t sub_10012A890()
{
  return sub_10012A180();
}

uint64_t sub_10012A8B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100129CA4(a1);
}

uint64_t type metadata accessor for TTRSmartListDragAndDropPresenterCapability()
{
  return objc_opt_self(_TtC9Reminders42TTRSmartListDragAndDropPresenterCapability);
}

uint64_t sub_10012A8F0()
{
  return type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(0);
}

uint64_t type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(uint64_t a1)
{
  return sub_100007328(a1, qword_100647850, (uint64_t)&nominal type descriptor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest);
}

void sub_10012A90C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_10012A994()
{
  return type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
}

uint64_t type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionRequest(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100647948, (uint64_t)&nominal type descriptor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionRequest);
}

void sub_10012A9B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[3] = &unk_1005254E0;
    v6[4] = &unk_1005254F8;
    sub_10012AA70(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100525510;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

void sub_10012AA70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100647958)
  {
    v2 = sub_10002CA5C(&qword_100641740);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100647958);
  }
}

uint64_t type metadata accessor for TTRSmartListDragAndDropPresenterCapability.RemindersInsertionPlan()
{
  return objc_opt_self(_TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24922RemindersInsertionPlan);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListDragAndDropPresenterCapability.DisallowedDropSections(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10012AB34 + 4 * byte_1005251BB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10012AB68 + 4 * byte_1005251B6[v4]))();
}

uint64_t sub_10012AB68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012AB70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10012AB78);
  return result;
}

uint64_t sub_10012AB84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10012AB8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10012AB90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012AB98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListDragAndDropPresenterCapability.DisallowedDropSections()
{
  return &type metadata for TTRSmartListDragAndDropPresenterCapability.DisallowedDropSections;
}

unint64_t sub_10012ABB8()
{
  unint64_t result;

  result = qword_100647AD8;
  if (!qword_100647AD8)
  {
    result = swift_getWitnessTable(&unk_1005255D8, &type metadata for TTRSmartListDragAndDropPresenterCapability.DisallowedDropSections);
    atomic_store(result, (unint64_t *)&qword_100647AD8);
  }
  return result;
}

uint64_t sub_10012ABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v4 + 24) = 1;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = -2;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 56) = a4;
  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 48) = a3;
  swift_retain();
  sub_100053DE4(a3, a4);
  sub_100129580(a2);
  return v4;
}

uint64_t sub_10012AC70()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012AC94(_QWORD *a1)
{
  uint64_t v1;

  return sub_10012A4B8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10012AC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10012B05C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_10012A62C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10012B09C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(uint64_t a1)
{
  return sub_100007328(a1, qword_100647BC0, (uint64_t)&nominal type descriptor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
}

void sub_10012B0D4(void *a1, void *a2, void *a3, char a4)
{
  if (a4 != -1)
    sub_1000893FC(a1, a2, a3, a4);
}

id sub_10012B0E8(id result, void *a2, void *a3, char a4)
{
  if (a4 != -1)
    return sub_100089894(result, a2, a3, a4);
  return result;
}

id sub_10012B0FC(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1000898F4(result, a2);
  return result;
}

void sub_10012B110(id a1, unsigned __int8 a2)
{
  if (a2 != 254)
    sub_1000894A4(a1, a2);
}

id sub_10012B124(id result, unsigned __int8 a2)
{
  if (a2 != 254)
    return sub_10012B0FC(result, a2);
  return result;
}

void sub_10012B138(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_100129424(a1, v2, a2);
}

uint64_t sub_10012B140()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012B164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10012B534(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100125FE0(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

char *sub_10012B584(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void **, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 v190;
  void *v191;
  uint64_t v192;
  void *v193;
  char *v194;
  uint64_t v195;
  char v196;
  unsigned __int8 v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v7;
        v201 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *(_QWORD *)a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v100 = *a2;
            *(_QWORD *)a1 = *a2;
            v101 = v100;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v102 = *a2;
            *(_QWORD *)a1 = *a2;
            v103 = v102;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v104 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v105 = v104[5];
        v106 = &a1[v105];
        v107 = (char *)a2 + v105;
        v108 = *(uint64_t *)((char *)a2 + v105 + 8);
        if (v108)
        {
          *(_QWORD *)v106 = *(_QWORD *)v107;
          *((_QWORD *)v106 + 1) = v108;
          v109 = (void *)*((_QWORD *)v107 + 2);
          v110 = *((_QWORD *)v107 + 3);
          v111 = *((_QWORD *)v107 + 4);
          v112 = *((_QWORD *)v107 + 5);
          v113 = *((_QWORD *)v107 + 6);
          v195 = *((_QWORD *)v107 + 7);
          v190 = v107[64];
          swift_bridgeObjectRetain(v108);
          sub_10003E1F0(v109, v110, v111, v112, v113, v195, v190);
          *((_QWORD *)v106 + 2) = v109;
          *((_QWORD *)v106 + 3) = v110;
          *((_QWORD *)v106 + 4) = v111;
          *((_QWORD *)v106 + 5) = v112;
          *((_QWORD *)v106 + 6) = v113;
          *((_QWORD *)v106 + 7) = v195;
          v106[64] = v190;
          *(_DWORD *)(v106 + 65) = *(_DWORD *)(v107 + 65);
          v114 = v107[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v107 + 88);
            *(_OWORD *)(v106 + 72) = *(_OWORD *)(v107 + 72);
            *(_OWORD *)(v106 + 88) = v115;
            *(_OWORD *)(v106 + 104) = *(_OWORD *)(v107 + 104);
            v106[120] = v107[120];
          }
          else
          {
            v196 = v114 & 1;
            v120 = *((_QWORD *)v107 + 10);
            v191 = (void *)*((_QWORD *)v107 + 9);
            v121 = *((_QWORD *)v107 + 11);
            v122 = *((_QWORD *)v107 + 12);
            v123 = *((_QWORD *)v107 + 13);
            v124 = *((_QWORD *)v107 + 14);
            sub_10002B764(v191, v120, v121, v122, v123, v124, v114 & 1);
            *((_QWORD *)v106 + 9) = v191;
            *((_QWORD *)v106 + 10) = v120;
            *((_QWORD *)v106 + 11) = v121;
            *((_QWORD *)v106 + 12) = v122;
            *((_QWORD *)v106 + 13) = v123;
            *((_QWORD *)v106 + 14) = v124;
            v106[120] = v196;
          }
          v119 = v199;
          v6 = v201;
          v106[121] = v107[121];
        }
        else
        {
          v116 = *((_OWORD *)v107 + 5);
          *((_OWORD *)v106 + 4) = *((_OWORD *)v107 + 4);
          *((_OWORD *)v106 + 5) = v116;
          *((_OWORD *)v106 + 6) = *((_OWORD *)v107 + 6);
          *(_OWORD *)(v106 + 106) = *(_OWORD *)(v107 + 106);
          v117 = *((_OWORD *)v107 + 1);
          *(_OWORD *)v106 = *(_OWORD *)v107;
          *((_OWORD *)v106 + 1) = v117;
          v118 = *((_OWORD *)v107 + 3);
          *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
          *((_OWORD *)v106 + 3) = v118;
          v119 = v7;
        }
        a1[v104[6]] = *((_BYTE *)a2 + v104[6]);
        a1[v104[7]] = *((_BYTE *)a2 + v104[7]);
        a1[v104[8]] = *((_BYTE *)a2 + v104[8]);
        a1[v104[9]] = *((_BYTE *)a2 + v104[9]);
        a1[v104[10]] = *((_BYTE *)a2 + v104[10]);
        v125 = v104[11];
        v126 = *(char **)((char *)a2 + v125);
        *(_QWORD *)&a1[v125] = v126;
        v127 = v126;
        v50 = a1;
        v51 = v119;
        v52 = 0;
        goto LABEL_100;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v200 = v7;
        v202 = v6;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *(_QWORD *)a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_59;
          case 2u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_59;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_59;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_59;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_59;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_59;
          case 8u:
            v133 = *a2;
            *(_QWORD *)a1 = *a2;
            v134 = v133;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_59;
          case 9u:
            v135 = *a2;
            *(_QWORD *)a1 = *a2;
            v136 = v135;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v138 = v137[5];
        v139 = &a1[v138];
        v140 = (char *)a2 + v138;
        v141 = *(uint64_t *)((char *)a2 + v138 + 8);
        if (v141)
        {
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = v141;
          v142 = (void *)*((_QWORD *)v140 + 2);
          v143 = *((_QWORD *)v140 + 3);
          v144 = *((_QWORD *)v140 + 4);
          v145 = *((_QWORD *)v140 + 5);
          v146 = *((_QWORD *)v140 + 6);
          v192 = *((_QWORD *)v140 + 7);
          v197 = v140[64];
          swift_bridgeObjectRetain(v141);
          sub_10003E1F0(v142, v143, v144, v145, v146, v192, v197);
          *((_QWORD *)v139 + 2) = v142;
          *((_QWORD *)v139 + 3) = v143;
          *((_QWORD *)v139 + 4) = v144;
          *((_QWORD *)v139 + 5) = v145;
          *((_QWORD *)v139 + 6) = v146;
          *((_QWORD *)v139 + 7) = v192;
          v139[64] = v197;
          *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
          v147 = v140[120];
          if (v147 == 255)
          {
            v148 = *(_OWORD *)(v140 + 88);
            *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
            *(_OWORD *)(v139 + 88) = v148;
            *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
            v139[120] = v140[120];
          }
          else
          {
            v198 = v147 & 1;
            v153 = *((_QWORD *)v140 + 10);
            v193 = (void *)*((_QWORD *)v140 + 9);
            v154 = *((_QWORD *)v140 + 11);
            v155 = *((_QWORD *)v140 + 12);
            v156 = *((_QWORD *)v140 + 13);
            v157 = *((_QWORD *)v140 + 14);
            sub_10002B764(v193, v153, v154, v155, v156, v157, v147 & 1);
            *((_QWORD *)v139 + 9) = v193;
            *((_QWORD *)v139 + 10) = v153;
            *((_QWORD *)v139 + 11) = v154;
            *((_QWORD *)v139 + 12) = v155;
            *((_QWORD *)v139 + 13) = v156;
            *((_QWORD *)v139 + 14) = v157;
            v139[120] = v198;
          }
          v152 = v200;
          v6 = v202;
          v139[121] = v140[121];
        }
        else
        {
          v149 = *((_OWORD *)v140 + 5);
          *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
          *((_OWORD *)v139 + 5) = v149;
          *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
          *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
          v150 = *((_OWORD *)v140 + 1);
          *(_OWORD *)v139 = *(_OWORD *)v140;
          *((_OWORD *)v139 + 1) = v150;
          v151 = *((_OWORD *)v140 + 3);
          *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
          *((_OWORD *)v139 + 3) = v151;
          v152 = v7;
        }
        a1[v137[6]] = *((_BYTE *)a2 + v137[6]);
        a1[v137[7]] = *((_BYTE *)a2 + v137[7]);
        a1[v137[8]] = *((_BYTE *)a2 + v137[8]);
        a1[v137[9]] = *((_BYTE *)a2 + v137[9]);
        a1[v137[10]] = *((_BYTE *)a2 + v137[10]);
        v158 = v137[11];
        v159 = *(char **)((char *)a2 + v158);
        *(_QWORD *)&a1[v158] = v159;
        v160 = v159;
        v50 = a1;
        v51 = v152;
        v52 = 1;
        goto LABEL_100;
      case 2u:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v23 = (void **)&a1[v22];
        v24 = (void **)((char *)a2 + v22);
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
        v28 = v21;
        if (v27(v24, 1, v25))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v24, v25))
          {
            case 1u:
              v65 = *v24;
              *v23 = *v24;
              v66 = v65;
              v67 = v23;
              v68 = v25;
              v69 = 1;
              goto LABEL_75;
            case 2u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v23, v24, v161);
              v67 = v23;
              v68 = v25;
              v69 = 2;
              goto LABEL_75;
            case 3u:
              v162 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v23, v24, v162);
              v67 = v23;
              v68 = v25;
              v69 = 3;
              goto LABEL_75;
            case 4u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v23, v24, v163);
              v67 = v23;
              v68 = v25;
              v69 = 4;
              goto LABEL_75;
            case 5u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v23, v24, v164);
              v67 = v23;
              v68 = v25;
              v69 = 5;
              goto LABEL_75;
            case 6u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v23, v24, v165);
              v67 = v23;
              v68 = v25;
              v69 = 6;
              goto LABEL_75;
            case 8u:
              v166 = *v24;
              *v23 = *v24;
              v167 = v166;
              v67 = v23;
              v68 = v25;
              v69 = 8;
              goto LABEL_75;
            case 9u:
              v168 = *v24;
              *v23 = *v24;
              v169 = v168;
              v67 = v23;
              v68 = v25;
              v69 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v67, v68, v69);
              break;
            default:
              memcpy(v23, v24, *(_QWORD *)(v26 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v50 = a1;
        v51 = v7;
        v52 = 2;
        goto LABEL_100;
      case 3u:
        v30 = *a2;
        *(_QWORD *)a1 = *a2;
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v32 = (void **)&a1[v31];
        v33 = (void **)((char *)a2 + v31);
        v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
        v37 = v30;
        if (v36(v33, 1, v34))
        {
          v38 = sub_10002A750(&qword_100644980);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v33, v34))
          {
            case 1u:
              v70 = *v33;
              *v32 = *v33;
              v71 = v70;
              v72 = v32;
              v73 = v34;
              v74 = 1;
              goto LABEL_97;
            case 2u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v32, v33, v170);
              v72 = v32;
              v73 = v34;
              v74 = 2;
              goto LABEL_97;
            case 3u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v32, v33, v171);
              v72 = v32;
              v73 = v34;
              v74 = 3;
              goto LABEL_97;
            case 4u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v32, v33, v172);
              v72 = v32;
              v73 = v34;
              v74 = 4;
              goto LABEL_97;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v32, v33, v187);
              v72 = v32;
              v73 = v34;
              v74 = 5;
              goto LABEL_97;
            case 6u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v32, v33, v173);
              v72 = v32;
              v73 = v34;
              v74 = 6;
              goto LABEL_97;
            case 8u:
              v174 = *v33;
              *v32 = *v33;
              v175 = v174;
              v72 = v32;
              v73 = v34;
              v74 = 8;
              goto LABEL_97;
            case 9u:
              v176 = *v33;
              *v32 = *v33;
              v177 = v176;
              v72 = v32;
              v73 = v34;
              v74 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v32, v33, *(_QWORD *)(v35 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v50 = a1;
        v51 = v7;
        v52 = 3;
        goto LABEL_100;
      case 4u:
        v39 = *a2;
        *(_QWORD *)a1 = *a2;
        v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v41 = (void **)&a1[v40];
        v42 = (void **)((char *)a2 + v40);
        v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
        v46 = v39;
        if (v45(v42, 1, v43))
        {
          v47 = sub_10002A750(&qword_100644980);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v42, v43))
          {
            case 1u:
              v75 = *v42;
              *v41 = *v42;
              v76 = v75;
              v77 = v41;
              v78 = v43;
              v79 = 1;
              goto LABEL_93;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v41, v42, v178);
              v77 = v41;
              v78 = v43;
              v79 = 2;
              goto LABEL_93;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v41, v42, v179);
              v77 = v41;
              v78 = v43;
              v79 = 3;
              goto LABEL_93;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v41, v42, v180);
              v77 = v41;
              v78 = v43;
              v79 = 4;
              goto LABEL_93;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v41, v42, v181);
              v77 = v41;
              v78 = v43;
              v79 = 5;
              goto LABEL_93;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v41, v42, v182);
              v77 = v41;
              v78 = v43;
              v79 = 6;
              goto LABEL_93;
            case 8u:
              v183 = *v42;
              *v41 = *v42;
              v184 = v183;
              v77 = v41;
              v78 = v43;
              v79 = 8;
              goto LABEL_93;
            case 9u:
              v185 = *v42;
              *v41 = *v42;
              v186 = v185;
              v77 = v41;
              v78 = v43;
              v79 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v41, v42, *(_QWORD *)(v44 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        v50 = a1;
        v51 = v7;
        v52 = 4;
        goto LABEL_100;
      case 5u:
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v48 = a2[2];
        *((_QWORD *)a1 + 2) = v48;
        v49 = v48;
        v50 = a1;
        v51 = v7;
        v52 = 5;
        goto LABEL_100;
      case 6u:
        v60 = *a2;
        *(_QWORD *)a1 = *a2;
        v61 = v60;
        v50 = a1;
        v51 = v7;
        v52 = 6;
        goto LABEL_100;
      case 7u:
        v53 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v54 + 48))(a2, 1, v53))
        {
          v55 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(v53 + 20);
          v194 = &a1[v81];
          v82 = (char *)a2 + v81;
          v83 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v84 = v7;
          v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
          v86 = swift_bridgeObjectRetain(v80);
          v85(v194, v82, v83, v86);
          v7 = v84;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(a1, 0, 1, v53);
        }
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v88 = &a1[v87];
        v89 = (char **)((char *)a2 + v87);
        v90 = v89[1];
        if (v90)
        {
          *(_QWORD *)v88 = *v89;
          *((_QWORD *)v88 + 1) = v90;
          v91 = (void *)v89[2];
          *((_QWORD *)v88 + 2) = v91;
          swift_bridgeObjectRetain(v90);
          v92 = v91;
        }
        else
        {
          *(_OWORD *)v88 = *(_OWORD *)v89;
          *((_QWORD *)v88 + 2) = v89[2];
        }
        v50 = a1;
        v51 = v7;
        v52 = 7;
        goto LABEL_100;
      case 8u:
        v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
        {
          v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          a1[*(int *)(v62 + 20)] = *((_BYTE *)a2 + *(int *)(v62 + 20));
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
        }
        v94 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)&a1[*(int *)(v94 + 20)] = *(char **)((char *)a2 + *(int *)(v94 + 20));
        v50 = a1;
        v51 = v7;
        v52 = 8;
        goto LABEL_100;
      case 9u:
        *a1 = *(_BYTE *)a2;
        v56 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v57 = &a1[v56];
        v58 = (char *)a2 + v56;
        v59 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        v50 = a1;
        v51 = v7;
        v52 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v188 = *(int *)(v6 + 24);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(char **)((char *)a2 + *(int *)(v6 + 20));
    a1[v188] = *((_BYTE *)a2 + v188);
  }
  swift_retain();
  return a1;
}

double sub_10012C57C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  double result;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v3))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v4))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v5 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          break;
      }
LABEL_24:
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v20 = (char *)a1 + *(int *)(v19 + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (v21)
      {
        swift_bridgeObjectRelease(v21);
        sub_10003E2EC(*((void **)v20 + 2), *((_QWORD *)v20 + 3), *((_QWORD *)v20 + 4), *((_QWORD *)v20 + 5), *((_QWORD *)v20 + 6), *((_QWORD *)v20 + 7), v20[64]);
        v22 = v20[120];
        if (v22 != 255)
          sub_10002B328(*((void **)v20 + 9), *((_QWORD *)v20 + 10), *((_QWORD *)v20 + 11), *((_QWORD *)v20 + 12), *((_QWORD *)v20 + 13), *((_QWORD *)v20 + 14), v22 & 1);
      }
      v11 = *(id *)((char *)a1 + *(int *)(v19 + 44));
      goto LABEL_28;
    case 2u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v9))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_30:
            v11 = *v6;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v10 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      v11 = (id)a1[2];
      goto LABEL_28;
    case 6u:
      v11 = (id)*a1;
      goto LABEL_28;
    case 7u:
      v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a1, 1, v12))
      {
        swift_bridgeObjectRelease(*a1);
        v13 = (char *)a1 + *(int *)(v12 + 20);
        v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v16 = *((_QWORD *)v15 + 1);
      if (!v16)
        goto LABEL_29;
      swift_bridgeObjectRelease(v16);
      v11 = (id)*((_QWORD *)v15 + 2);
LABEL_28:

LABEL_29:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    case 8u:
      v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a1, 1, v17))
      {
        v18 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
      }
      goto LABEL_29;
    case 9u:
      v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v10 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_10012C938(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  id v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  int v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v194;
  char v195;
  void **v196;
  char *v197;
  void **v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v200 = v6;
      v202 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v93 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(a1, a2, v93);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v95 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v98 = *a2;
          *a1 = *a2;
          v99 = v98;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v100 = *a2;
          *a1 = *a2;
          v101 = v100;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v102 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v103 = v102[5];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      v106 = *(uint64_t *)((char *)a2 + v103 + 8);
      if (v106)
      {
        v198 = a2;
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        v107 = (void *)*((_QWORD *)v105 + 2);
        v108 = *((_QWORD *)v105 + 3);
        v109 = *((_QWORD *)v105 + 4);
        v110 = *((_QWORD *)v105 + 5);
        v111 = *((_QWORD *)v105 + 6);
        v112 = *((_QWORD *)v105 + 7);
        v194 = v105[64];
        swift_bridgeObjectRetain(v106);
        sub_10003E1F0(v107, v108, v109, v110, v111, v112, v194);
        *((_QWORD *)v104 + 2) = v107;
        *((_QWORD *)v104 + 3) = v108;
        *((_QWORD *)v104 + 4) = v109;
        *((_QWORD *)v104 + 5) = v110;
        *((_QWORD *)v104 + 6) = v111;
        *((_QWORD *)v104 + 7) = v112;
        v104[64] = v194;
        *(_DWORD *)(v104 + 65) = *(_DWORD *)(v105 + 65);
        v113 = v105[120];
        if (v113 == 255)
        {
          v114 = *(_OWORD *)(v105 + 88);
          *(_OWORD *)(v104 + 72) = *(_OWORD *)(v105 + 72);
          *(_OWORD *)(v104 + 88) = v114;
          *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
          v104[120] = v105[120];
        }
        else
        {
          v195 = v113 & 1;
          v120 = (void *)*((_QWORD *)v105 + 9);
          v119 = *((_QWORD *)v105 + 10);
          v121 = *((_QWORD *)v105 + 11);
          v122 = *((_QWORD *)v105 + 12);
          v123 = *((_QWORD *)v105 + 13);
          v124 = *((_QWORD *)v105 + 14);
          sub_10002B764(v120, v119, v121, v122, v123, v124, v113 & 1);
          *((_QWORD *)v104 + 9) = v120;
          *((_QWORD *)v104 + 10) = v119;
          *((_QWORD *)v104 + 11) = v121;
          *((_QWORD *)v104 + 12) = v122;
          *((_QWORD *)v104 + 13) = v123;
          *((_QWORD *)v104 + 14) = v124;
          v104[120] = v195;
        }
        v118 = v200;
        a3 = v202;
        v104[121] = v105[121];
        a2 = v198;
      }
      else
      {
        v115 = *((_OWORD *)v105 + 5);
        *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
        *((_OWORD *)v104 + 5) = v115;
        *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
        *(_OWORD *)(v104 + 106) = *(_OWORD *)(v105 + 106);
        v116 = *((_OWORD *)v105 + 1);
        *(_OWORD *)v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v116;
        v117 = *((_OWORD *)v105 + 3);
        *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
        *((_OWORD *)v104 + 3) = v117;
        v118 = v6;
      }
      *((_BYTE *)a1 + v102[6]) = *((_BYTE *)a2 + v102[6]);
      *((_BYTE *)a1 + v102[7]) = *((_BYTE *)a2 + v102[7]);
      *((_BYTE *)a1 + v102[8]) = *((_BYTE *)a2 + v102[8]);
      *((_BYTE *)a1 + v102[9]) = *((_BYTE *)a2 + v102[9]);
      *((_BYTE *)a1 + v102[10]) = *((_BYTE *)a2 + v102[10]);
      v125 = v102[11];
      v126 = *(void **)((char *)a2 + v125);
      *(void **)((char *)a1 + v125) = v126;
      v127 = v126;
      v48 = a1;
      v49 = v118;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v201 = v6;
      v203 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v128 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v129 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v130 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v131 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, a2, v131);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v132 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v133 = *a2;
          *a1 = *a2;
          v134 = v133;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v135 = *a2;
          *a1 = *a2;
          v136 = v135;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v138 = v137[5];
      v139 = (char *)a1 + v138;
      v140 = (char *)a2 + v138;
      v141 = *(uint64_t *)((char *)a2 + v138 + 8);
      if (v141)
      {
        v196 = a1;
        v199 = a2;
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v141;
        v142 = (void *)*((_QWORD *)v140 + 2);
        v143 = *((_QWORD *)v140 + 3);
        v144 = *((_QWORD *)v140 + 4);
        v145 = *((_QWORD *)v140 + 5);
        v147 = *((_QWORD *)v140 + 6);
        v146 = *((_QWORD *)v140 + 7);
        v148 = v140[64];
        swift_bridgeObjectRetain(v141);
        sub_10003E1F0(v142, v143, v144, v145, v147, v146, v148);
        *((_QWORD *)v139 + 2) = v142;
        *((_QWORD *)v139 + 3) = v143;
        *((_QWORD *)v139 + 4) = v144;
        *((_QWORD *)v139 + 5) = v145;
        *((_QWORD *)v139 + 6) = v147;
        *((_QWORD *)v139 + 7) = v146;
        v139[64] = v148;
        *(_DWORD *)(v139 + 65) = *(_DWORD *)(v140 + 65);
        v149 = v140[120];
        if (v149 == 255)
        {
          v150 = *(_OWORD *)(v140 + 88);
          *(_OWORD *)(v139 + 72) = *(_OWORD *)(v140 + 72);
          *(_OWORD *)(v139 + 88) = v150;
          *(_OWORD *)(v139 + 104) = *(_OWORD *)(v140 + 104);
          v139[120] = v140[120];
        }
        else
        {
          v155 = (void *)*((_QWORD *)v140 + 9);
          v156 = *((_QWORD *)v140 + 10);
          v157 = *((_QWORD *)v140 + 11);
          v158 = *((_QWORD *)v140 + 12);
          v159 = *((_QWORD *)v140 + 13);
          v160 = *((_QWORD *)v140 + 14);
          v161 = v149 & 1;
          sub_10002B764(v155, v156, v157, v158, v159, v160, v149 & 1);
          *((_QWORD *)v139 + 9) = v155;
          *((_QWORD *)v139 + 10) = v156;
          *((_QWORD *)v139 + 11) = v157;
          *((_QWORD *)v139 + 12) = v158;
          *((_QWORD *)v139 + 13) = v159;
          *((_QWORD *)v139 + 14) = v160;
          v139[120] = v161;
        }
        v154 = v201;
        a3 = v203;
        v139[121] = v140[121];
        a1 = v196;
        a2 = v199;
      }
      else
      {
        v151 = *((_OWORD *)v140 + 5);
        *((_OWORD *)v139 + 4) = *((_OWORD *)v140 + 4);
        *((_OWORD *)v139 + 5) = v151;
        *((_OWORD *)v139 + 6) = *((_OWORD *)v140 + 6);
        *(_OWORD *)(v139 + 106) = *(_OWORD *)(v140 + 106);
        v152 = *((_OWORD *)v140 + 1);
        *(_OWORD *)v139 = *(_OWORD *)v140;
        *((_OWORD *)v139 + 1) = v152;
        v153 = *((_OWORD *)v140 + 3);
        *((_OWORD *)v139 + 2) = *((_OWORD *)v140 + 2);
        *((_OWORD *)v139 + 3) = v153;
        v154 = v6;
      }
      *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
      *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
      *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
      *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
      *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
      v162 = v137[11];
      v163 = *(void **)((char *)a2 + v162);
      *(void **)((char *)a1 + v162) = v163;
      v164 = v163;
      v48 = a1;
      v49 = v154;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v63 = *v22;
            *v21 = *v22;
            v64 = v63;
            v65 = v21;
            v66 = v23;
            v67 = 1;
            goto LABEL_73;
          case 2u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v21, v22, v165);
            v65 = v21;
            v66 = v23;
            v67 = 2;
            goto LABEL_73;
          case 3u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v21, v22, v166);
            v65 = v21;
            v66 = v23;
            v67 = 3;
            goto LABEL_73;
          case 4u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v21, v22, v167);
            v65 = v21;
            v66 = v23;
            v67 = 4;
            goto LABEL_73;
          case 5u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v21, v22, v168);
            v65 = v21;
            v66 = v23;
            v67 = 5;
            goto LABEL_73;
          case 6u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v21, v22, v169);
            v65 = v21;
            v66 = v23;
            v67 = 6;
            goto LABEL_73;
          case 8u:
            v170 = *v22;
            *v21 = *v22;
            v171 = v170;
            v65 = v21;
            v66 = v23;
            v67 = 8;
            goto LABEL_73;
          case 9u:
            v172 = *v22;
            *v21 = *v22;
            v173 = v172;
            v65 = v21;
            v66 = v23;
            v67 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v65, v66, v67);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v68 = *v31;
            *v30 = *v31;
            v69 = v68;
            v70 = v30;
            v71 = v32;
            v72 = 1;
            goto LABEL_95;
          case 2u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v30, v31, v174);
            v70 = v30;
            v71 = v32;
            v72 = 2;
            goto LABEL_95;
          case 3u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v30, v31, v175);
            v70 = v30;
            v71 = v32;
            v72 = 3;
            goto LABEL_95;
          case 4u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v30, v31, v176);
            v70 = v30;
            v71 = v32;
            v72 = 4;
            goto LABEL_95;
          case 5u:
            v191 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v30, v31, v191);
            v70 = v30;
            v71 = v32;
            v72 = 5;
            goto LABEL_95;
          case 6u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v30, v31, v177);
            v70 = v30;
            v71 = v32;
            v72 = 6;
            goto LABEL_95;
          case 8u:
            v178 = *v31;
            *v30 = *v31;
            v179 = v178;
            v70 = v30;
            v71 = v32;
            v72 = 8;
            goto LABEL_95;
          case 9u:
            v180 = *v31;
            *v30 = *v31;
            v181 = v180;
            v70 = v30;
            v71 = v32;
            v72 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v70, v71, v72);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v73 = *v40;
            *v39 = *v40;
            v74 = v73;
            v75 = v39;
            v76 = v41;
            v77 = 1;
            goto LABEL_91;
          case 2u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v39, v40, v182);
            v75 = v39;
            v76 = v41;
            v77 = 2;
            goto LABEL_91;
          case 3u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v39, v40, v183);
            v75 = v39;
            v76 = v41;
            v77 = 3;
            goto LABEL_91;
          case 4u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v39, v40, v184);
            v75 = v39;
            v76 = v41;
            v77 = 4;
            goto LABEL_91;
          case 5u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v39, v40, v185);
            v75 = v39;
            v76 = v41;
            v77 = 5;
            goto LABEL_91;
          case 6u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v39, v40, v186);
            v75 = v39;
            v76 = v41;
            v77 = 6;
            goto LABEL_91;
          case 8u:
            v187 = *v40;
            *v39 = *v40;
            v188 = v187;
            v75 = v39;
            v76 = v41;
            v77 = 8;
            goto LABEL_91;
          case 9u:
            v189 = *v40;
            *v39 = *v40;
            v190 = v189;
            v75 = v39;
            v76 = v41;
            v77 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v75, v76, v77);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v58 = *a2;
      *a1 = *a2;
      v59 = v58;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v78 = *a2;
        *a1 = *a2;
        v79 = *(int *)(v51 + 20);
        v197 = (char *)a1 + v79;
        v80 = (char *)a2 + v79;
        v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v82 = v6;
        v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
        v84 = swift_bridgeObjectRetain(v78);
        v83(v197, v80, v81, v84);
        v6 = v82;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v86 = (void **)((char *)a1 + v85);
      v87 = (void **)((char *)a2 + v85);
      v88 = v87[1];
      if (v88)
      {
        *v86 = *v87;
        v86[1] = v88;
        v89 = (void *)v87[2];
        v86[2] = v89;
        swift_bridgeObjectRetain(v88);
        v90 = v89;
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v86[2] = v87[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
      {
        v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
        *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
      }
      v92 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v92 + 20)) = *(void **)((char *)a2 + *(int *)(v92 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v192 = *(int *)(a3 + 24);
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v192) = *((_BYTE *)a2 + v192);
  swift_retain();
  return a1;
}

void **sub_10012D8F0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  int v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  unsigned __int8 v200;
  void *v201;
  uint64_t v202;
  char v203;
  char *v204;
  uint64_t v205;
  char v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v208 = v6;
        v210 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v205 = *((_QWORD *)v106 + 7);
          v200 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v205, v200);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v205;
          v105[64] = v200;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v113 = v106[120];
          if (v113 == 255)
          {
            v114 = *(_OWORD *)(v106 + 72);
            v115 = *(_OWORD *)(v106 + 88);
            v116 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v115;
            *(_OWORD *)(v105 + 104) = v116;
            *(_OWORD *)(v105 + 72) = v114;
          }
          else
          {
            v206 = v113 & 1;
            v124 = *((_QWORD *)v106 + 10);
            v201 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 11);
            v126 = *((_QWORD *)v106 + 12);
            v127 = *((_QWORD *)v106 + 13);
            v128 = *((_QWORD *)v106 + 14);
            sub_10002B764(v201, v124, v125, v126, v127, v128, v113 & 1);
            *((_QWORD *)v105 + 9) = v201;
            *((_QWORD *)v105 + 10) = v124;
            *((_QWORD *)v105 + 11) = v125;
            *((_QWORD *)v105 + 12) = v126;
            *((_QWORD *)v105 + 13) = v127;
            *((_QWORD *)v105 + 14) = v128;
            v105[120] = v206;
          }
          v123 = v208;
          a3 = v210;
          v105[121] = v106[121];
        }
        else
        {
          v117 = *(_OWORD *)v106;
          v118 = *((_OWORD *)v106 + 1);
          v119 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v119;
          *(_OWORD *)v105 = v117;
          *((_OWORD *)v105 + 1) = v118;
          v120 = *((_OWORD *)v106 + 4);
          v121 = *((_OWORD *)v106 + 5);
          v122 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v121;
          *((_OWORD *)v105 + 6) = v122;
          *((_OWORD *)v105 + 4) = v120;
          v123 = v6;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v129 = v103[11];
        v130 = *(void **)((char *)a2 + v129);
        *(void **)((char *)a1 + v129) = v130;
        v131 = v130;
        v48 = a1;
        v49 = v123;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v209 = v6;
        v211 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *a1 = *a2;
            v15 = v14;
            v16 = a1;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
            v16 = a1;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
            v16 = a1;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
            v16 = a1;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
            v16 = a1;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
            v16 = a1;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v137 = *a2;
            *a1 = *a2;
            v138 = v137;
            v16 = a1;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v139 = *a2;
            *a1 = *a2;
            v140 = v139;
            v16 = a1;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v142 = v141[5];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        if (*(void **)((char *)a2 + v142 + 8))
        {
          v207 = v141;
          *(_QWORD *)v143 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          *((_QWORD *)v143 + 1) = v145;
          v146 = (void *)*((_QWORD *)v144 + 2);
          v147 = *((_QWORD *)v144 + 3);
          v148 = *((_QWORD *)v144 + 4);
          v149 = *((_QWORD *)v144 + 5);
          v150 = *((_QWORD *)v144 + 6);
          v202 = *((_QWORD *)v144 + 7);
          v151 = v144[64];
          swift_bridgeObjectRetain(v145);
          sub_10003E1F0(v146, v147, v148, v149, v150, v202, v151);
          *((_QWORD *)v143 + 2) = v146;
          *((_QWORD *)v143 + 3) = v147;
          *((_QWORD *)v143 + 4) = v148;
          *((_QWORD *)v143 + 5) = v149;
          *((_QWORD *)v143 + 6) = v150;
          *((_QWORD *)v143 + 7) = v202;
          v143[64] = v151;
          v143[65] = v144[65];
          v143[66] = v144[66];
          v143[67] = v144[67];
          v143[68] = v144[68];
          v152 = v144[120];
          if (v152 == 255)
          {
            v153 = *(_OWORD *)(v144 + 72);
            v154 = *(_OWORD *)(v144 + 88);
            v155 = *(_OWORD *)(v144 + 104);
            v143[120] = v144[120];
            *(_OWORD *)(v143 + 88) = v154;
            *(_OWORD *)(v143 + 104) = v155;
            *(_OWORD *)(v143 + 72) = v153;
          }
          else
          {
            v203 = v152 & 1;
            v164 = (void *)*((_QWORD *)v144 + 9);
            v163 = *((_QWORD *)v144 + 10);
            v165 = *((_QWORD *)v144 + 11);
            v166 = *((_QWORD *)v144 + 12);
            v167 = *((_QWORD *)v144 + 13);
            v168 = *((_QWORD *)v144 + 14);
            sub_10002B764(v164, v163, v165, v166, v167, v168, v152 & 1);
            *((_QWORD *)v143 + 9) = v164;
            *((_QWORD *)v143 + 10) = v163;
            *((_QWORD *)v143 + 11) = v165;
            *((_QWORD *)v143 + 12) = v166;
            *((_QWORD *)v143 + 13) = v167;
            *((_QWORD *)v143 + 14) = v168;
            v143[120] = v203;
          }
          v162 = v209;
          a3 = v211;
          v143[121] = v144[121];
          v141 = v207;
        }
        else
        {
          v156 = *(_OWORD *)v144;
          v157 = *((_OWORD *)v144 + 1);
          v158 = *((_OWORD *)v144 + 3);
          *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
          *((_OWORD *)v143 + 3) = v158;
          *(_OWORD *)v143 = v156;
          *((_OWORD *)v143 + 1) = v157;
          v159 = *((_OWORD *)v144 + 4);
          v160 = *((_OWORD *)v144 + 5);
          v161 = *((_OWORD *)v144 + 6);
          *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
          *((_OWORD *)v143 + 5) = v160;
          *((_OWORD *)v143 + 6) = v161;
          *((_OWORD *)v143 + 4) = v159;
          v162 = v6;
        }
        *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
        *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
        *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
        *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
        *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
        v169 = v141[11];
        v170 = *(void **)((char *)a2 + v169);
        *(void **)((char *)a1 + v169) = v170;
        v171 = v170;
        v48 = a1;
        v49 = v162;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)a1 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = a1;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = a1;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)a1 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = a1;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        a1[2] = v46;
        v47 = v46;
        v48 = a1;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v48 = a1;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *a1 = *a2;
          v79 = *(int *)(v51 + 20);
          v204 = (char *)a1 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = v6;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v204, v80, v81, v84);
          v6 = v82;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (void **)((char *)a1 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = a1;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = a1;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = a1;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_10012E930(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v105) = *((_BYTE *)a2 + v105);
  return a1;
}

_QWORD *sub_10012F49C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10013002C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100130038);
}

uint64_t sub_100130038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001300B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001300C0);
}

uint64_t sub_1001300C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100130138(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = &unk_100525650;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1001301C8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001265EC(a1, a2);
}

uint64_t sub_1001301DC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  char v12;
  _OWORD v13[6];
  char v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_BYTE *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_BYTE *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_100130E48((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_100130244(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  __n128 v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(void *);
  id v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;
  void (*v25)(void **);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v31;
  void *v32[6];
  char v33;
  __int128 v34;
  __int128 v35;
  char v36;
  _OWORD v37[2];
  uint64_t v38;
  char v39;

  v2 = v1;
  v3 = *(_QWORD **)(a1 + OBJC_IVAR____TtC9Reminders32TTRIListDetailBadgeCellTableCell_badgeView);
  v4 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78);
  v5 = swift_beginAccess(v4, &v31, 0, 0);
  if ((v4[96] & 1) != 0)
  {
    v6 = TTRListBadgeView.Shape.customSmartListInListDetailView.unsafeMutableAddressor(v5);
    sub_100130FA0(v6, (uint64_t)v37);
  }
  else
  {
    v38 = 0;
    memset(v37, 0, sizeof(v37));
    v39 = 2;
  }
  (*(void (**)(_OWORD *))((swift_isaMask & *v3) + 0x110))(v37);
  v7 = *(void **)v4;
  if (*(_QWORD *)v4)
  {
    v8 = *(uint64_t (**)(void *))((swift_isaMask & *v3) + 0x140);
    v9 = v7;
    v10 = v8(v7);
    v11 = static TTRListBadgeView.ShadowParams.defaultShadowOpacity.getter(v10);
    *(_QWORD *)&v34 = TTRListBadgeView.ShadowParams.init(offset:radius:opacity:)(0.0, 4.0, 12.0, v11);
    *((_QWORD *)&v34 + 1) = v12;
    *(_QWORD *)&v35 = v13;
    *((_QWORD *)&v35 + 1) = v14;
    v36 = 0;
    (*(void (**)(__int128 *))((swift_isaMask & *v3) + 0x200))(&v34);

  }
  else
  {
    v15 = *((_QWORD *)v4 + 2);
    if (v15)
    {
      v16 = *((_QWORD *)v4 + 1);
      v17 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v3) + 0x158);
      v18 = swift_bridgeObjectRetain(*((_QWORD *)v4 + 2));
      v17(v16, v15, v18);
      v34 = 0u;
      v35 = 0u;
      v36 = 1;
      (*(void (**)(__int128 *))((swift_isaMask & *v3) + 0x200))(&v34);
    }
  }
  v19 = (void *)*((_QWORD *)v4 + 4);
  v20 = (void *)*((_QWORD *)v4 + 5);
  v21 = (void *)*((_QWORD *)v4 + 6);
  v22 = (void *)*((_QWORD *)v4 + 7);
  v23 = (void *)*((_QWORD *)v4 + 8);
  v24 = v4[72];
  v32[0] = *((void **)v4 + 3);
  v32[1] = v19;
  v32[2] = v20;
  v32[3] = v21;
  v32[4] = v22;
  v32[5] = v23;
  v33 = v24;
  v25 = *(void (**)(void **))((swift_isaMask & *v3) + 0x128);
  sub_10002B764(v32[0], (uint64_t)v19, (uint64_t)v20, (uint64_t)v21, (uint64_t)v22, (uint64_t)v23, v24);
  v25(v32);
  v26 = *((_QWORD *)v4 + 10);
  v27 = *((_QWORD *)v4 + 11);
  v28 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v3) + 0x390);
  v29 = swift_bridgeObjectRetain(v27);
  v28(v26, v27, v29);
  return (*(uint64_t (**)(BOOL))((swift_isaMask & *v3) + 0x3A8))(*((_QWORD *)v4 + 11) == 0);
}

uint64_t sub_10013044C()
{
  uint64_t v0;

  return sub_1000381B8(*(_QWORD *)(v0 + qword_100647C00), *(_QWORD *)(v0 + qword_100647C00 + 8));
}

uint64_t sub_100130460(uint64_t a1)
{
  return sub_1000381B8(*(_QWORD *)(a1 + qword_100647C00), *(_QWORD *)(a1 + qword_100647C00 + 8));
}

uint64_t type metadata accessor for TTRIListDetailBadgeCellContent(uint64_t a1)
{
  uint64_t result;

  result = qword_100647C30;
  if (!qword_100647C30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIListDetailBadgeCellContent);
  return result;
}

uint64_t sub_1001304B0(uint64_t a1)
{
  void *v2;

  v2 = &unk_1005256B0;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 232);
}

void sub_1001304F0()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIListDetailBadgeCellContent", 40, "init(state:prototypeCellView:reuseIdentifier:)", 46, 0);
  __break(1u);
}

uint64_t sub_10013051C()
{
  return type metadata accessor for TTRIListDetailBadgeCellContent(0);
}

id sub_100130524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  _QWORD *v9;
  id v10;
  void (*v11)(_QWORD *, _QWORD);
  _BYTE *v12;
  NSString v13;
  _QWORD *v14;
  double v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  Class isa;
  objc_super v43;
  _QWORD v44[4];

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = objc_allocWithZone((Class)type metadata accessor for TTRListBadgeView(0));
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 96.0, 96.0);
  v10 = objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  (*(void (**)(id, double))((swift_isaMask & *v9) + 0x170))(v10, 56.0);
  v11 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))((swift_isaMask & *v9) + 0x1F0))(v44);
  *v12 = 1;
  v11(v44, 0);
  objc_msgSend(v9, "setAccessibilityRespondsToUserInteraction:", 0);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v13);

  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders32TTRIListDetailBadgeCellTableCell_badgeView] = v9;
  v14 = v9;

  if (a3)
  {
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  v43.receiver = v8;
  v43.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v43, "initWithStyle:reuseIdentifier:", a1, v16, v15);

  v18 = v17;
  v19 = objc_msgSend(v18, "contentView");
  objc_msgSend(v19, "addSubview:", v14);

  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100525680;
  v23 = objc_msgSend(v18, "contentView");
  v24 = objc_msgSend(v23, "centerXAnchor");

  v25 = objc_msgSend(v14, "centerXAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v22 + 32) = v26;
  v27 = objc_msgSend(v18, "contentView");
  v28 = objc_msgSend(v27, "topAnchor");

  v29 = objc_msgSend(v14, "topAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, -20.0);

  *(_QWORD *)(v22 + 40) = v30;
  v31 = objc_msgSend(v18, "contentView");
  v32 = objc_msgSend(v31, "bottomAnchor");

  v33 = objc_msgSend(v14, "bottomAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, 20.0);

  *(_QWORD *)(v22 + 48) = v34;
  v35 = objc_msgSend(v14, "widthAnchor");
  v36 = objc_msgSend(v35, "constraintEqualToConstant:", 96.0);

  *(_QWORD *)(v22 + 56) = v36;
  v37 = objc_msgSend(v14, "heightAnchor");
  v38 = objc_msgSend(v37, "constraintEqualToConstant:", 96.0);

  *(_QWORD *)(v22 + 64) = v38;
  v44[0] = v22;
  specialized Array._endMutation()(v39);
  v40 = v44[0];
  sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v40).n128_f64[0]);

  return v18;
}

uint64_t type metadata accessor for TTRIListDetailBadgeCellTableCell()
{
  return objc_opt_self(_TtC9Reminders32TTRIListDetailBadgeCellTableCell);
}

double destroy for TTRIListDetailBadgeCellContentState(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  sub_10002B328(*(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TTRIListDetailBadgeCellContentState(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_BYTE *)(a2 + 72);
  v14 = v4;
  swift_bridgeObjectRetain(v6);
  sub_10002B764(v7, v8, v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  v15 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v15;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t assignWithCopy for TTRIListDetailBadgeCellContentState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  sub_10002B764(v9, v10, v11, v12, v13, v14, v15);
  v16 = *(void **)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  sub_10002B328(v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v23 = *(_QWORD *)(a2 + 88);
  v24 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

__n128 initializeWithTake for TTRIListDetailBadgeCellContentState(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for TTRIListDetailBadgeCellContentState(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_BYTE *)(a2 + 72);
  v8 = *(void **)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 72);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = v7;
  sub_10002B328(v8, v9, v10, v11, v12, v13, v14);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v15;
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailBadgeCellContentState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 97))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailBadgeCellContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailBadgeCellContentState()
{
  return &type metadata for TTRIListDetailBadgeCellContentState;
}

uint64_t sub_100130E48(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v21[56];
  _BYTE v22[56];

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
      goto LABEL_21;
    sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      goto LABEL_21;
  }
  else if (v5)
  {
    goto LABEL_21;
  }
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  if (!v9)
  {
    if (v10)
      goto LABEL_21;
LABEL_13:
    sub_1000AE578(a1 + 24, (uint64_t)v22);
    sub_1000AE578(a2 + 24, (uint64_t)v21);
    if ((static TTRListColors.Color.__derived_enum_equals(_:_:)(v22, v21) & 1) != 0)
    {
      v15 = *(_QWORD *)(a1 + 88);
      v16 = *(_QWORD *)(a2 + 88);
      if (v15)
      {
        if (v16)
        {
          v17 = *(_QWORD *)(a1 + 80);
          v18 = *(_QWORD *)(a2 + 80);
          if (v17 != v18 || v15 != v16)
          {
            v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v15, v18, v16, 0);
            v14 = 0;
            if ((v19 & 1) == 0)
              return v14 & 1;
          }
LABEL_23:
          v14 = *(_BYTE *)(a1 + 96) ^ *(_BYTE *)(a2 + 96) ^ 1;
          return v14 & 1;
        }
      }
      else if (!v16)
      {
        goto LABEL_23;
      }
    }
LABEL_21:
    v14 = 0;
    return v14 & 1;
  }
  if (!v10)
    goto LABEL_21;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a2 + 8);
  if (v11 == v12 && v9 == v10)
    goto LABEL_13;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v9, v12, v10, 0);
  v14 = 0;
  if ((v13 & 1) != 0)
    goto LABEL_13;
  return v14 & 1;
}

uint64_t sub_100130FA0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListBadgeView.Shape - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100130FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100647D98);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100647D98);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10013106C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100131084((uint64_t)&off_1005F2B20, a1);
}

uint64_t sub_100131078@<X0>(_QWORD *a1@<X8>)
{
  return sub_100131084((uint64_t)&off_1005F2B00, a1);
}

uint64_t sub_100131084@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  a2[3] = type metadata accessor for TTRIShowTemplatePresenter(0);
  a2[4] = a1;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1001310C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v4;
  char v5;
  char v6;
  char v7;

  v0 = sub_10002A750(&qword_1006487F0);
  v1 = swift_allocObject(v0, 368, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100520EB0;
  v7 = 0;
  v2 = sub_1001346A8();
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 32), &v7, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem, v2);
  *(_BYTE *)(v1 + 72) = 1;
  v6 = 1;
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 80), &v6, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem, v2);
  *(_BYTE *)(v1 + 120) = 1;
  v5 = 2;
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 128), &v5, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem, v2);
  *(_BYTE *)(v1 + 168) = 1;
  *(_BYTE *)(v1 + 176) = 1;
  *(_BYTE *)(v1 + 216) = 0;
  *(_BYTE *)(v1 + 224) = 2;
  *(_BYTE *)(v1 + 264) = 0;
  *(_BYTE *)(v1 + 272) = 3;
  *(_BYTE *)(v1 + 312) = 0;
  v4 = 3;
  AnyHashable.init<A>(_:)((_QWORD *)(v1 + 320), &v4, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem, v2);
  *(_BYTE *)(v1 + 360) = 1;
  return v1;
}

uint64_t sub_1001311C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  _QWORD v5[4];

  v0 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v2 = __chkstk_darwin(v1);
  AnyHashable.base.getter(v5, v2);
  if (swift_dynamicCast(&v4, v5, &type metadata for Any[8], &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem, 6))
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_100131640(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    a3();
    return swift_release(v6);
  }
  return result;
}

double sub_100131698(char a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    sub_1001328FC(a1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001316F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v12[24];

  v3 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject(&unk_1005F2C08, 40, 7);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    sub_100148368((uint64_t)v5, (uint64_t)&unk_1006487B0, (uint64_t)v10);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001317D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v4[2] = a4;
  v5 = sub_10002A750(&qword_100649BA0);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[4] = v6;
  v4[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  return swift_task_switch(sub_100131864, v8, v9);
}

uint64_t sub_100131864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  swift_release();
  if (qword_10063D3F8 != -1)
    swift_once(&qword_10063D3F8, sub_100130FDC);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100647D98);
  v4 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Template Editor Delete Template", 31, 2, v4);
  swift_bridgeObjectRelease(v4);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v6 = swift_retain();
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_1005F2C30, 40, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v2;
  sub_100148368(v1, (uint64_t)&unk_1006487C0, (uint64_t)v8);
  swift_release();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_UNKNOWN **sub_100131998()
{
  return &off_1005EA278;
}

void *sub_1001319A8()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1001319B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v1 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource), v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);
  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  v15 = TTRTemplatePublicLinkData.init(template:now:)(v13, v6);
  v16 = *(_QWORD *)&v9[*(int *)(v7 + 20)];
  if ((*(_QWORD *)TTRTemplatePublicLinkData.Capabilities.createLink.unsafeMutableAddressor(v15) & ~v16) == 0)
  {
    v17 = 0;
LABEL_7:
    sub_1001328FC(v17);
    return sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  }
  if ((*(_QWORD *)TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor() & ~v16) == 0)
  {
    v17 = 1;
    goto LABEL_7;
  }
  sub_1000B08E4((uint64_t)v9, (uint64_t)v3);
  v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v3, 1, v18) != 1)
  {
    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
    v17 = 2;
    goto LABEL_7;
  }
  return sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
}

double sub_100131B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  double result;
  uint64_t v10;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D3F8 != -1)
    swift_once(&qword_10063D3F8, sub_100130FDC);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100647D98);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Template Editor Done", 20, 2, v6);
  swift_bridgeObjectRelease(v6);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject(&unk_1005F2BB8, 40, 7);
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  swift_retain();
  sub_100148368((uint64_t)v4, (uint64_t)&unk_1006487A0, (uint64_t)v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100131CB8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100647E04);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006083C;
  return sub_100133084();
}

void sub_100131D00()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (qword_10063D3F8 != -1)
    swift_once(&qword_10063D3F8, sub_100130FDC);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_100647D98);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Template Editor Show Template Info", 34, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[10];
  ObjectType = swift_getObjectType(v0[9], v4);
  v6 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource + 8);
  v8 = swift_getObjectType(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource), v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v8, v6);
  v10 = (id)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 264))(v9, ObjectType, v3);

  sub_100134070(v10, (uint64_t)v0, v0[11]);
}

uint64_t sub_100131E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[18] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[19] = v5;
  v4[20] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[21] = v7;
  v4[22] = v8;
  return swift_task_switch(sub_100131E7C, v7, v8);
}

uint64_t sub_100131E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = swift_allocObject(&unk_1005F2BE0, 24, 7);
  swift_weakInit(v3 + 16, v2);
  v4 = swift_allocObject(&unk_1005F2BE0, 24, 7);
  swift_weakInit(v4 + 16, v2);
  v5 = type metadata accessor for TTRPotentiallyLongOperationPerformer(0);
  *(_QWORD *)(v0 + 184) = swift_initStackObject(v5, v0 + 16);
  *(_QWORD *)(v0 + 192) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)(0, sub_100134534, v3, &unk_1006487D0, v4, 2.0);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_removeTemplateCapability);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(v6, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  *(_QWORD *)(v0 + 208) = v10;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_QWORD *)(v0 + 112) = 0;
  *(_OWORD *)(v0 + 120) = xmmword_1005218A0;
  *(_BYTE *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 216) = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v11);
  *(_QWORD *)(v0 + 224) = v12;
  *(_QWORD *)(v0 + 232) = v13;
  return swift_task_switch(sub_100131FCC, v12, v13);
}

uint64_t sub_100131FCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = v0[26];
  v2 = v0[18];
  v3 = (_QWORD *)swift_task_alloc(48);
  v0[30] = v3;
  v3[2] = v1;
  v3[3] = v0 + 10;
  v3[4] = &unk_1006487E0;
  v3[5] = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)[1]);
  v0[31] = v4;
  *v4 = v0;
  v4[1] = sub_100132060;
  return TTRRemoveTemplatePresenterCapability.deleteTemplate(_:potentiallyLongOperationPerformer:presentAlert:)(v0[26], v0[24], &unk_1006487E8, v3);
}

uint64_t sub_100132060()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  swift_task_dealloc(*(_QWORD *)(*v0 + 248));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001320B4, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_1001320B4()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[26];
  swift_release();

  return swift_task_switch(sub_1001320F0, v0[21], v0[22]);
}

uint64_t sub_1001320F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 192));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10013212C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v3);
    v4 = swift_release();
    v5 = static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter(v4);
    v7 = v6;
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v3 + 16);
    if (!v8
      || (v9 = v8,
          v10 = objc_msgSend(v8, "navigationController"),
          v9,
          !v10))
    {
      v10 = (id)swift_unknownObjectWeakLoadStrong(v3 + 16);
    }
    sub_100375364(v5, v7, v10);
    swift_bridgeObjectRelease(v7);
    swift_unknownObjectRelease(v3);

  }
}

uint64_t sub_100132214(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[7] = v4;
  v1[8] = v5;
  return swift_task_switch(sub_100132280, v4, v5);
}

uint64_t sub_100132280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD *)(Strong + 88);
    *(_QWORD *)(v0 + 72) = v3;
    swift_unknownObjectRetain(v3);
    swift_release();
    return swift_task_switch(sub_100132310, 0, 0);
  }
  else
  {
    v5 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100132310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[9];
  v2 = *(_QWORD *)(v1 + 80);
  v0[10] = v2;
  v3 = *(void **)(v2 + 16);
  v0[11] = v3;
  if (v3)
  {
    v4 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
    v3;
    v5 = (_QWORD *)swift_task_alloc(v4);
    v0[12] = v5;
    *v5 = v0;
    v5[1] = sub_1001323A4;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_unknownObjectRelease(v1);
    return swift_task_switch(sub_100132450, v0[7], v0[8]);
  }
}

uint64_t sub_1001323A4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_task_switch(sub_1001323F8, 0, 0);
}

uint64_t sub_1001323F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);

  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  swift_unknownObjectRelease(v2);

  return swift_task_switch(sub_100132450, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100132450()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100132480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = v4;
  v3[6] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[7] = v6;
  v3[8] = v7;
  return swift_task_switch(sub_1001324F4, v6, v7);
}

uint64_t sub_1001324F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[5];
  v1[9] = *(_QWORD *)(v1[4] + 88);
  v1[10] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[11] = v4;
  v1[12] = v5;
  return swift_task_switch(sub_10013255C, v4, v5);
}

uint64_t sub_10013255C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 72) + 16);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_10013260C;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 120, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    *(_BYTE *)(v0 + 122) = 2;
    return swift_task_switch(sub_1001326A4, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_10013260C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));

  *(_BYTE *)(v1 + 121) = *(_BYTE *)(v1 + 120);
  return swift_task_switch(sub_100132664, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_100132664()
{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 122) = *(_BYTE *)(v0 + 121);
  return swift_task_switch(sub_1001326A4, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1001326A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 122));
}

void sub_1001326D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;

  v1 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D3F8 != -1)
    swift_once(&qword_10063D3F8, sub_100130FDC);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100647D98);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Template Editor Create List from Template", 41, 2, v5);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource), v7);
  v19 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 152);
  if (Strong)
  {
    v11 = Strong;
    v12 = swift_getObjectType(Strong, v10);
    if (swift_conformsToProtocol2(v12, &protocol descriptor for TTRIShowTemplateModuleDelegate))
      v13 = v11;
    else
      v13 = 0;
    if (v13)
    {
      *(_BYTE *)(v13 + 176) = 1;
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
      type metadata accessor for MainActor(0);
      swift_retain();
      swift_unknownObjectRetain(v11);
      v15 = v19;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_1005F2C80, 48, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v13;
      v17[5] = v15;
      sub_100148368((uint64_t)v3, (uint64_t)&unk_100648810, (uint64_t)v17);
      swift_release();

      swift_unknownObjectRelease(v11);
      swift_release();
    }
    else
    {

      swift_unknownObjectRelease(v11);
    }
  }
  else
  {

  }
}

double sub_1001328FC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  _BYTE v21[80];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D3F8 != -1)
    swift_once(&qword_10063D3F8, sub_100130FDC);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100647D98);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v21);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for TTRTemplateSharingAction;
  *(_BYTE *)(inited + 48) = a1;
  v14 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Templates Editor Perform Sharing Action {action: %@}", 52, 2, v14);
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v15);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = swift_retain();
  v18 = static MainActor.shared.getter(v17);
  v19 = swift_allocObject(&unk_1005F2C58, 41, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v19 + 32) = v2;
  *(_BYTE *)(v19 + 40) = a1;
  sub_100148368((uint64_t)v6, (uint64_t)&unk_100648808, v19);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100132AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 169) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 32) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v5 + 40) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  return swift_task_switch(sub_100132B68, v8, v9);
}

uint64_t sub_100132B68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v2[2];
  v3 = v2[3];
  v2[7] = *(_QWORD *)(v4 + 88);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource), a2);
  v2[8] = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  v7 = swift_allocObject(&unk_1005F2BE0, 24, 7);
  v2[9] = v7;
  swift_weakInit(v7 + 16, v4);
  v8 = swift_retain();
  v2[10] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v9);
  v2[11] = v10;
  v2[12] = v11;
  return swift_task_switch(sub_100132C30, v10, v11);
}

uint64_t sub_100132C30()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 56) + 16);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = sub_1000CE22C(*(void **)(v0 + 64), Strong, (uint64_t)sub_1001347B8, *(_QWORD *)(v0 + 72));
    *(_QWORD *)(v0 + 112) = v3;
    *(_QWORD *)(v0 + 120) = static MainActor.shared.getter(v3);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v4);
    v7 = v6;
    *(_QWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 136) = v6;
    v8 = sub_100132CE8;
    v9 = v5;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 72);
    swift_release();
    swift_release_n(v10, 2);

    v9 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = sub_100049824;
  }
  return swift_task_switch(v8, v9, v7);
}

uint64_t sub_100132CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_BYTE *)(v1 + 169);
  v4 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 144) = v4;
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v1 + 152) = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = 1;
  *(_BYTE *)(v5 + 25) = v3;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 160) = v6;
  *v6 = v1;
  v6[1] = sub_100132DBC;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 168, v4, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100566240, sub_100134A10, v5, &type metadata for Bool);
}

uint64_t sub_100132DBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100132E24, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_100132E24()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100132E5C, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_100132E5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release();
  swift_unknownObjectRelease(v1);

  swift_release_n(v3, 2);
  return swift_task_switch(sub_100049824, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_100132EC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[24];
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  char v27;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v23, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  v5 = 0uLL;
  if (!Strong)
  {
    v16 = 0;
    v18 = 0;
    v19 = 0;
    v17 = 254;
    v20 = 0uLL;
    goto LABEL_10;
  }
  v6 = Strong + 264;
  sub_100028CFC(Strong + 264, (uint64_t)v24);
  v25 = *(_OWORD *)(v6 + 32);
  v7 = v25;
  swift_unknownObjectRetain(v25);
  sub_100027F10(v24);
  swift_release();
  v8 = swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (!v8)
  {
LABEL_9:
    swift_unknownObjectRelease(v7);
    v16 = 0;
    v18 = 0;
    v19 = 0;
    v17 = 254;
    v20 = 0uLL;
    v5 = 0uLL;
    goto LABEL_10;
  }
  v9 = v8;
  v10 = sub_1000831D4();
  v11 = *(void **)(v9 + 40);
  if (!v11
    || (v12 = objc_msgSend(v11, "rightBarButtonItems")) == 0
    || (v13 = v12,
        v14 = sub_100005ED8(0, &qword_100640E70, UIBarButtonItem_ptr),
        v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14),
        v13,
        LOBYTE(v13) = sub_10001B050((uint64_t)v10, v15),
        swift_bridgeObjectRelease(v15),
        (v13 & 1) == 0))
  {
    swift_unknownObjectRelease(v9);

    goto LABEL_9;
  }
  static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)(v24, v10, 0, 1);
  v21 = v24[1];
  v22 = v24[0];
  v16 = v25;
  v17 = BYTE8(v25);
  v18 = v26;
  v19 = v27;
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v9);

  v20 = v21;
  v5 = v22;
LABEL_10:
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v18;
  *(_BYTE *)(a2 + 56) = v19;
}

uint64_t sub_100133084()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1[7] = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100653A90);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[11] = v4;
  v1[12] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v1[13] = v6;
  v1[14] = v7;
  return swift_task_switch(sub_10013313C, v6, v7);
}

uint64_t sub_10013313C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  __n128 v46;
  uint64_t v47;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_isConfirmingUpdate;
  *(_QWORD *)(v2 + 120) = OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_isConfirmingUpdate;
  if ((*(_BYTE *)(v3 + v4) & 1) != 0)
  {
    swift_release();
    if (qword_10063D3F8 != -1)
      swift_once(&qword_10063D3F8, sub_100130FDC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100647D98);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIShowTemplatePresenter: confirmUpdateAndDismiss called twice with the first one still in progress.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = *(_QWORD *)(v2 + 64);
    swift_task_dealloc(*(_QWORD *)(v2 + 80));
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v2 + 72);
    v12 = *(_QWORD *)(v2 + 80);
    v14 = *(_QWORD *)(v2 + 64);
    *(_BYTE *)(v3 + v4) = 1;
    v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource);
    v16 = *v15;
    *(_QWORD *)(v2 + 128) = *v15;
    v17 = v15[1];
    *(_QWORD *)(v2 + 136) = v17;
    *(_QWORD *)(v2 + 144) = swift_getObjectType(v16, a2);
    v18 = *(uint64_t (**)(void))(v17 + 16);
    *(_QWORD *)(v2 + 152) = v18;
    v19 = v18();
    v20 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
    v21 = TTRTemplatePublicLinkData.init(template:now:)(v19, v14);
    v22 = *(_QWORD *)(v12 + *(int *)(v13 + 20));
    v23 = *(_QWORD *)TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor(v21) & ~v22;
    v24 = sub_10001F544(v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    v25 = *(_QWORD *)(v2 + 88);
    if (v23)
    {
      *(_QWORD *)(v2 + 320) = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 88);
      *(_QWORD *)(v2 + 328) = static MainActor.shared.getter(v24);
      v42 = dispatch thunk of Actor.unownedExecutor.getter(v25, &protocol witness table for MainActor, v46);
      v44 = v47;
      *(_QWORD *)(v2 + 336) = v42;
      *(_QWORD *)(v2 + 344) = v47;
      v45 = sub_100133AB0;
    }
    else
    {
      v26 = *(_QWORD *)(v2 + 56);
      static TTRLocalizableStrings.Templates.updateSharedTemplateAlertTitle.getter(v24);
      v28 = v27;
      static TTRLocalizableStrings.Templates.updateSharedTemplateAlertMessage.getter();
      v30 = v29;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      *(_QWORD *)(v2 + 160) = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 1);

      *(_QWORD *)(v2 + 168) = *(_QWORD *)(v26 + 88);
      v33 = sub_10002A750(&qword_100649EF0);
      v34 = swift_allocObject(v33, 96, 7);
      *(_QWORD *)(v2 + 176) = v34;
      *(_OWORD *)(v34 + 16) = xmmword_1005201E0;
      v35 = static TTRLocalizableStrings.Common.updateButton.getter();
      *(_BYTE *)(v2 + 368) = 1;
      v37 = TTRIValueBasedAlertAction.init(title:style:value:)(v35, v36, 0, v2 + 368, &type metadata for Bool);
      v38 = static TTRLocalizableStrings.Common.notNowButton.getter(v37);
      *(_BYTE *)(v2 + 369) = 0;
      v40 = TTRIValueBasedAlertAction.init(title:style:value:)(v38, v39, 1, v2 + 369, &type metadata for Bool);
      *(_QWORD *)(v2 + 184) = static MainActor.shared.getter(v40);
      v42 = dispatch thunk of Actor.unownedExecutor.getter(v25, &protocol witness table for MainActor, v41);
      v44 = v43;
      *(_QWORD *)(v2 + 192) = v42;
      *(_QWORD *)(v2 + 200) = v43;
      v45 = sub_1001334B8;
    }
    return swift_task_switch(v45, v42, v44);
  }
}

uint64_t sub_1001334B8()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[21] + 16);
  v0[26] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    v0[27] = v2;
    *v2 = v0;
    v2[1] = sub_10013356C;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)((char *)v0 + 370, v0[20], v0[22], 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_bridgeObjectRelease(v0[22]);
    swift_release();
    return swift_task_switch(sub_100133764, v0[13], v0[14]);
  }
}

uint64_t sub_10013356C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));

  *(_BYTE *)(v1 + 372) = *(_BYTE *)(v1 + 370);
  return swift_task_switch(sub_1001335C4, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_1001335C4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[22]);
  swift_release();
  return swift_task_switch(sub_100133604, v0[13], v0[14]);
}

uint64_t sub_100133604()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v1 = *(unsigned __int8 *)(v0 + 372);

  if (v1 == 1)
  {
    if (qword_10063D3F8 != -1)
      swift_once(&qword_10063D3F8, sub_100130FDC);
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 152);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = type metadata accessor for Logger(0);
    sub_100012DC4(v7, (uint64_t)qword_100647D98);
    v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Templates Editor Update Link And Dismiss", 40, 2, v8);
    v9 = swift_bridgeObjectRelease(v8);
    v10 = v4(v3, v5, v9);
    *(_QWORD *)(v0 + 224) = v10;
    *(_QWORD *)(v0 + 232) = static MainActor.shared.getter(v10);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 240) = v12;
    *(_QWORD *)(v0 + 248) = v13;
    v15 = sub_1001337D8;
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 320) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 88);
    *(_QWORD *)(v0 + 328) = static MainActor.shared.getter(v2);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor, v17);
    v14 = v18;
    *(_QWORD *)(v0 + 336) = v12;
    *(_QWORD *)(v0 + 344) = v18;
    v15 = sub_100133AB0;
  }
  return swift_task_switch(v15, v12, v14);
}

uint64_t sub_100133764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 88);
  *(_QWORD *)(v0 + 328) = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v3);
  *(_QWORD *)(v0 + 336) = v4;
  *(_QWORD *)(v0 + 344) = v5;
  return swift_task_switch(sub_100133AB0, v4, v5);
}

uint64_t sub_1001337D8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 168) + 16);
  *(_QWORD *)(v0 + 256) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 88);
    v3 = sub_1000CE22C(*(void **)(v0 + 224), Strong, (uint64_t)sub_100133CB8, 0);
    *(_QWORD *)(v0 + 264) = v3;
    *(_QWORD *)(v0 + 272) = static MainActor.shared.getter(v3);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v4);
    v7 = v6;
    *(_QWORD *)(v0 + 280) = v5;
    *(_QWORD *)(v0 + 288) = v6;
    v8 = sub_100133888;
    v9 = v5;
  }
  else
  {

    swift_release();
    v9 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = sub_100133A44;
  }
  return swift_task_switch(v8, v9, v7);
}

uint64_t sub_100133888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[33];
  v3 = static MainActor.shared.getter(a1);
  v1[37] = v3;
  v4 = swift_task_alloc(32);
  v1[38] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_WORD *)(v4 + 24) = 256;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[39] = v5;
  *v5 = v1;
  v5[1] = sub_10013394C;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 371, v3, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100566240, sub_1001346EC, v4, &type metadata for Bool);
}

uint64_t sub_10013394C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001339B4, *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288));
}

uint64_t sub_1001339B4()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_1001339EC, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
}

uint64_t sub_1001339EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);

  swift_unknownObjectRelease(v1);
  swift_release();
  return swift_task_switch(sub_100133A44, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100133A44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[11];
  v1[40] = *(_QWORD *)(v1[7] + 88);
  v1[41] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[42] = v4;
  v1[43] = v5;
  return swift_task_switch(sub_100133AB0, v4, v5);
}

uint64_t sub_100133AB0()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[40] + 16);
  v0[44] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[45] = v2;
    *v2 = v0;
    v2[1] = sub_100133B38;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_100133BC0, v0[13], v0[14]);
  }
}

uint64_t sub_100133B38()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 352);
  swift_task_dealloc(*(_QWORD *)(*v0 + 360));

  return swift_task_switch(sub_100133B88, *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 344));
}

uint64_t sub_100133B88()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100133BC0, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100133BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 152);
  if (Strong)
  {
    v4 = Strong;
    ObjectType = swift_getObjectType(Strong, v3);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRemindersListModalPresentationModuleDelegate);
    if (v6)
      v8 = v6;
    else
      v8 = 0;
    if (v6)
      v9 = v4;
    else
      v9 = 0;
    if (v9)
    {
      v10 = *(_QWORD *)(v0 + 56);
      v11 = swift_getObjectType(v9, v7);
      *(_QWORD *)(v0 + 40) = type metadata accessor for TTRIShowTemplatePresenter(0);
      *(_QWORD *)(v0 + 48) = &off_1005F31C8;
      *(_QWORD *)(v0 + 16) = v10;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v0 + 16, v11, v8);
      swift_retain();
      swift_unknownObjectRelease(v4);
      sub_100027F10((_QWORD *)(v0 + 16));
    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120)) = 0;
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100133CB8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)&result = 254;
  *(_OWORD *)(a1 + 40) = xmmword_1005218A0;
  *(_BYTE *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_100133CD8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_removeTemplateCapability));
}

uint64_t sub_100133D04()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource));
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100133D54()
{
  return type metadata accessor for TTRIShowTemplatePresenter(0);
}

uint64_t type metadata accessor for TTRIShowTemplatePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100647DF0;
  if (!qword_100647DF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowTemplatePresenter);
  return result;
}

uint64_t sub_100133D98(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100525780;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = &unk_100525798;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 2296);
}

uint64_t sub_100133DF0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100647E04);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100133E54;
  return sub_100133084();
}

uint64_t sub_100133E54()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_100133EC4, v3, v4);
}

uint64_t sub_100133EC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100133EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  v1 = v0;
  result = swift_unknownObjectWeakLoadStrong(v0 + 152);
  if (result)
  {
    v4 = result;
    ObjectType = swift_getObjectType(result, v3);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIRemindersListModalPresentationModuleDelegate);
    if (v6)
      v8 = v6;
    else
      v8 = 0;
    if (v6)
      v9 = v4;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType(v9, v7);
      v11[3] = type metadata accessor for TTRIShowTemplatePresenter(0);
      v11[4] = &off_1005F31C8;
      v11[0] = v1;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v11, v10, v8);
      swift_retain();
      swift_unknownObjectRelease(v4);
      return sub_100027F10(v11);
    }
    else
    {
      return swift_unknownObjectRelease(v4);
    }
  }
  return result;
}

void sub_100133FC4(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v9 = *(_QWORD *)(a1 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 72), a2);
  v11 = TTRListDetailSavedObjectID.undoNavigationEditingTarget.getter(a2, a3);
  v13 = swift_getObjectType(a4, v12);
  v14 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(v13, a5);
  (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v9 + 520))(v11, v14, ObjectType, v9);
  swift_bridgeObjectRelease(v11);

}

void sub_100134070(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *Strong;
  void *v13;
  id v14;

  v6 = objc_msgSend(a1, "saveRequest");
  v7 = objc_msgSend(v6, "store");

  v8 = sub_10034730C(v7, a1, 1, a2, (uint64_t)&off_1005F2AD0);
  v10 = v9;

  v11 = v8;
  swift_retain();
  v14 = sub_100342EF0(v11, v10, 0, 0, 0);
  swift_release_n(v10, 2);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
}

void sub_100134178(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v5 = v4;
  static TTRLocalizableStrings.UndoAction.changeTemplate.getter();
  v11 = v10;
  v12 = (void *)objc_opt_self(TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = swift_allocObject(&unk_1005F2B40, 56, 7);
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = a3;
  *(_BYTE *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a1;
  *(_QWORD *)(v14 + 48) = a2;
  v15 = swift_allocObject(&unk_1005F2B68, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100134348;
  *(_QWORD *)(v15 + 24) = v14;
  v18[4] = sub_10001B278;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10001B258;
  v18[3] = &unk_1005F2B80;
  v16 = _Block_copy(v18);
  swift_retain();
  v17 = a3;
  swift_unknownObjectRetain(a1);
  swift_retain();
  objc_msgSend(v12, "withActionName:block:", v13, v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 124, 270, 51, 1);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

uint64_t sub_100134314()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100134348()
{
  uint64_t v0;

  sub_100133FC4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100134358()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100134368()
{
  return sub_100134704(40);
}

uint64_t sub_100134370()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10064879C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006083C;
  v2 = (_QWORD *)swift_task_alloc(dword_100647E04);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_100133084();
}

uint64_t sub_1001343D8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001343FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001316F4(a1, v1);
}

double sub_100134404(char a1)
{
  uint64_t v1;

  return sub_100131698(a1, v1);
}

uint64_t sub_10013440C(uint64_t a1)
{
  uint64_t v1;

  return sub_100131640(a1, v1, sub_1001326D8);
}

uint64_t sub_10013442C(uint64_t a1)
{
  uint64_t v1;

  return sub_100131640(a1, v1, sub_100131D00);
}

uint64_t sub_10013444C()
{
  return sub_100134704(40);
}

uint64_t sub_100134454(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1006487AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_1001317D0(a1, v4, v5, v6);
}

uint64_t sub_1001344C0()
{
  return sub_100134704(40);
}

uint64_t sub_1001344C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1006487BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_100131E0C(a1, v4, v5, v6);
}

void sub_100134534()
{
  uint64_t v0;

  sub_10013212C(v0);
}

uint64_t sub_10013453C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1006487CC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006083C;
  return sub_100132214(v0);
}

uint64_t sub_100134584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1006487DC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1001345E4;
  return sub_100132480(a1, a2, v2);
}

uint64_t sub_1001345E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_100134634(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10064BA7C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001345E4;
  return sub_1001DAF84(a1, v4, v5, v7, v6);
}

unint64_t sub_1001346A8()
{
  unint64_t result;

  result = qword_1006487F8;
  if (!qword_1006487F8)
  {
    result = swift_getWitnessTable(&unk_100525830, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem);
    atomic_store(result, &qword_1006487F8);
  }
  return result;
}

double sub_1001346EC(uint64_t a1)
{
  uint64_t v1;

  return sub_10005D9D4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25));
}

uint64_t sub_1001346FC()
{
  return sub_100134704(41);
}

uint64_t sub_100134704(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10013473C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_100648804);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_100132AF4(a1, v4, v5, v6, v7);
}

void sub_1001347B8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100132EC0(v1, a1);
}

uint64_t sub_1001347C0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001347F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10064BA6C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_1001DA300(a1, v4, v5, v7, v6);
}

uint64_t getEnumTagSinglePayload for TTRIShowTemplatePresenter.ActionMenuCustomItem(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIShowTemplatePresenter.ActionMenuCustomItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100134948 + 4 * byte_100525755[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10013497C + 4 * byte_100525750[v4]))();
}

uint64_t sub_10013497C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100134984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013498CLL);
  return result;
}

uint64_t sub_100134998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001349A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001349A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001349AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowTemplatePresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem;
}

unint64_t sub_1001349CC()
{
  unint64_t result;

  result = qword_100648818;
  if (!qword_100648818)
  {
    result = swift_getWitnessTable(&unk_100525808, &type metadata for TTRIShowTemplatePresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100648818);
  }
  return result;
}

id TTRIDebugMenuAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIDebugMenuAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIDebugMenuAssembly()
{
  return objc_opt_self(_TtC9Reminders21TTRIDebugMenuAssembly);
}

id TTRIDebugMenuAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIDebugMenuAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_100134AD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = *a2;
  v3 = v15;
  v16 = &off_1006040A0;
  v14[0] = a2;
  v4 = type metadata accessor for TTRIDebugMenuEventHandler();
  v5 = (_QWORD *)swift_allocObject(v4, 88, 7);
  v6 = sub_100028D48((uint64_t)v14, v15);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  v10 = *v8;
  v13[3] = v3;
  v13[4] = &off_1006040A0;
  v13[0] = v10;
  v5[3] = 0;
  swift_unknownObjectWeakInit(v5 + 2, 0);
  v5[4] = a1;
  v5[5] = &off_1005EDE10;
  sub_100010634((uint64_t)v13, (uint64_t)(v5 + 6));
  v11 = v5[4];
  *(_QWORD *)(v11 + 24) = &off_100607558;
  swift_unknownObjectWeakAssign(v11 + 16, v5);
  sub_100027F10(v13);
  sub_100027F10(v14);
  return v5;
}

id sub_100134BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  id v8;
  _QWORD v10[2];
  void *v11;

  v0 = type metadata accessor for TTRIDebugMenuDataManager();
  v1 = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)REMStore), "init");
  v2 = type metadata accessor for TTRIDebugMenuInteractor();
  v3 = (_QWORD *)swift_allocObject(v2, 48, 7);
  v3[3] = 0;
  swift_unknownObjectWeakInit(v3 + 2, 0);
  v3[4] = v1;
  v3[5] = &off_1005FEBE0;
  v4 = type metadata accessor for TTRIDebugMenuRouter();
  v5 = (uint64_t *)swift_allocObject(v4, 24, 7);
  swift_unknownObjectWeakInit(v5 + 2, 0);
  swift_retain(v1);
  swift_retain(v3);
  swift_retain(v5);
  v6 = sub_100134AD0((uint64_t)v3, v5);
  type metadata accessor for TTRIDebugMenuViewController();
  v10[0] = v6;
  v10[1] = &off_100607560;
  static TTRTypedController<>.instantiateFromStoryboard(with:)(&v11, v10);
  v7 = v11;
  v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v11);

  swift_release(v6);
  swift_release(v3);
  swift_release(v1);
  swift_unknownObjectWeakAssign(v5 + 2, v8);
  swift_release(v5);
  return v8;
}

char *sub_100134D60(char *a1, char **a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void **v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(void **, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  void **v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  void **v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t, __n128);
  __n128 v145;
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t, __n128);
  __n128 v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  uint64_t v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  int *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  int *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  int *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  id v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  int *v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  int v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  void *v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  id v316;
  void *v317;
  id v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  void *v326;
  id v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void *v335;
  id v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  id v346;
  void *v347;
  id v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unsigned __int8 v374;
  void *v375;
  unsigned __int8 v376;
  void *v377;
  unsigned __int8 v378;
  void *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char v385;
  uint64_t v386;
  char v387;
  uint64_t v388;
  char v389;
  unsigned __int8 v390;
  char v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;

  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = v4;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v17))
      {
        case 0u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v394 = v17;
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 1u:
              v19 = *a2;
              *(_QWORD *)a1 = *a2;
              v20 = v19;
              v21 = a1;
              v22 = v18;
              v23 = 1;
              goto LABEL_94;
            case 2u:
              v215 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(a1, a2, v215);
              v21 = a1;
              v22 = v18;
              v23 = 2;
              goto LABEL_94;
            case 3u:
              v216 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
              v21 = a1;
              v22 = v18;
              v23 = 3;
              goto LABEL_94;
            case 4u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v21 = a1;
              v22 = v18;
              v23 = 4;
              goto LABEL_94;
            case 5u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v21 = a1;
              v22 = v18;
              v23 = 5;
              goto LABEL_94;
            case 6u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v21 = a1;
              v22 = v18;
              v23 = 6;
              goto LABEL_94;
            case 8u:
              v220 = *a2;
              *(_QWORD *)a1 = *a2;
              v221 = v220;
              v21 = a1;
              v22 = v18;
              v23 = 8;
              goto LABEL_94;
            case 9u:
              v222 = *a2;
              *(_QWORD *)a1 = *a2;
              v223 = v222;
              v21 = a1;
              v22 = v18;
              v23 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v21, v22, v23);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v224 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v225 = v224[5];
          v226 = &a1[v225];
          v227 = (char *)a2 + v225;
          v228 = *(uint64_t *)((char *)a2 + v225 + 8);
          if (v228)
          {
            *(_QWORD *)v226 = *(_QWORD *)v227;
            *((_QWORD *)v226 + 1) = v228;
            v229 = (void *)*((_QWORD *)v227 + 2);
            v230 = *((_QWORD *)v227 + 3);
            v231 = *((_QWORD *)v227 + 4);
            v232 = *((_QWORD *)v227 + 5);
            v370 = *((_QWORD *)v227 + 6);
            v386 = *((_QWORD *)v227 + 7);
            v376 = v227[64];
            swift_bridgeObjectRetain(v228);
            sub_10003E1F0(v229, v230, v231, v232, v370, v386, v376);
            *((_QWORD *)v226 + 2) = v229;
            *((_QWORD *)v226 + 3) = v230;
            *((_QWORD *)v226 + 4) = v231;
            *((_QWORD *)v226 + 5) = v232;
            *((_QWORD *)v226 + 6) = v370;
            *((_QWORD *)v226 + 7) = v386;
            v226[64] = v376;
            *(_DWORD *)(v226 + 65) = *(_DWORD *)(v227 + 65);
            v233 = v227[120];
            if (v233 == 255)
            {
              v234 = *(_OWORD *)(v227 + 88);
              *(_OWORD *)(v226 + 72) = *(_OWORD *)(v227 + 72);
              *(_OWORD *)(v226 + 88) = v234;
              *(_OWORD *)(v226 + 104) = *(_OWORD *)(v227 + 104);
              v226[120] = v227[120];
            }
            else
            {
              v387 = v233 & 1;
              v239 = *((_QWORD *)v227 + 10);
              v240 = *((_QWORD *)v227 + 11);
              v241 = *((_QWORD *)v227 + 12);
              v242 = *((_QWORD *)v227 + 13);
              v371 = *((_QWORD *)v227 + 14);
              v377 = (void *)*((_QWORD *)v227 + 9);
              sub_10002B764(v377, v239, v240, v241, v242, v371, v233 & 1);
              *((_QWORD *)v226 + 9) = v377;
              *((_QWORD *)v226 + 10) = v239;
              *((_QWORD *)v226 + 11) = v240;
              *((_QWORD *)v226 + 12) = v241;
              *((_QWORD *)v226 + 13) = v242;
              *((_QWORD *)v226 + 14) = v371;
              v226[120] = v387;
            }
            v238 = v394;
            v226[121] = v227[121];
          }
          else
          {
            v235 = *((_OWORD *)v227 + 5);
            *((_OWORD *)v226 + 4) = *((_OWORD *)v227 + 4);
            *((_OWORD *)v226 + 5) = v235;
            *((_OWORD *)v226 + 6) = *((_OWORD *)v227 + 6);
            *(_OWORD *)(v226 + 106) = *(_OWORD *)(v227 + 106);
            v236 = *((_OWORD *)v227 + 1);
            *(_OWORD *)v226 = *(_OWORD *)v227;
            *((_OWORD *)v226 + 1) = v236;
            v237 = *((_OWORD *)v227 + 3);
            *((_OWORD *)v226 + 2) = *((_OWORD *)v227 + 2);
            *((_OWORD *)v226 + 3) = v237;
            v238 = v17;
          }
          a1[v224[6]] = *((_BYTE *)a2 + v224[6]);
          a1[v224[7]] = *((_BYTE *)a2 + v224[7]);
          a1[v224[8]] = *((_BYTE *)a2 + v224[8]);
          a1[v224[9]] = *((_BYTE *)a2 + v224[9]);
          a1[v224[10]] = *((_BYTE *)a2 + v224[10]);
          v243 = v224[11];
          v244 = *(char **)((char *)a2 + v243);
          *(_QWORD *)&a1[v243] = v244;
          v245 = v244;
          v109 = a1;
          v110 = v238;
          v111 = 0;
          goto LABEL_202;
        case 1u:
          v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v392 = v7;
          v396 = v17;
          switch(swift_getEnumCaseMultiPayload(a2, v74))
          {
            case 1u:
              v75 = *a2;
              *(_QWORD *)a1 = *a2;
              v76 = v75;
              v77 = a1;
              v78 = v74;
              v79 = 1;
              goto LABEL_126;
            case 2u:
              v277 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(a1, a2, v277);
              v77 = a1;
              v78 = v74;
              v79 = 2;
              goto LABEL_126;
            case 3u:
              v278 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(a1, a2, v278);
              v77 = a1;
              v78 = v74;
              v79 = 3;
              goto LABEL_126;
            case 4u:
              v279 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v279 - 8) + 16))(a1, a2, v279);
              v77 = a1;
              v78 = v74;
              v79 = 4;
              goto LABEL_126;
            case 5u:
              v280 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(a1, a2, v280);
              v77 = a1;
              v78 = v74;
              v79 = 5;
              goto LABEL_126;
            case 6u:
              v281 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
              v77 = a1;
              v78 = v74;
              v79 = 6;
              goto LABEL_126;
            case 8u:
              v282 = *a2;
              *(_QWORD *)a1 = *a2;
              v283 = v282;
              v77 = a1;
              v78 = v74;
              v79 = 8;
              goto LABEL_126;
            case 9u:
              v284 = *a2;
              *(_QWORD *)a1 = *a2;
              v285 = v284;
              v77 = a1;
              v78 = v74;
              v79 = 9;
LABEL_126:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
              break;
          }
          v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v287 = v286[5];
          v288 = &a1[v287];
          v289 = (char *)a2 + v287;
          v290 = *(uint64_t *)((char *)a2 + v287 + 8);
          if (v290)
          {
            *(_QWORD *)v288 = *(_QWORD *)v289;
            *((_QWORD *)v288 + 1) = v290;
            v291 = (void *)*((_QWORD *)v289 + 2);
            v292 = *((_QWORD *)v289 + 3);
            v293 = *((_QWORD *)v289 + 4);
            v294 = *((_QWORD *)v289 + 5);
            v295 = *((_QWORD *)v289 + 6);
            v380 = *((_QWORD *)v289 + 7);
            v390 = v289[64];
            swift_bridgeObjectRetain(v290);
            sub_10003E1F0(v291, v292, v293, v294, v295, v380, v390);
            *((_QWORD *)v288 + 2) = v291;
            *((_QWORD *)v288 + 3) = v292;
            *((_QWORD *)v288 + 4) = v293;
            *((_QWORD *)v288 + 5) = v294;
            *((_QWORD *)v288 + 6) = v295;
            *((_QWORD *)v288 + 7) = v380;
            v288[64] = v390;
            *(_DWORD *)(v288 + 65) = *(_DWORD *)(v289 + 65);
            v296 = v289[120];
            if (v296 == 255)
            {
              v297 = *(_OWORD *)(v289 + 88);
              *(_OWORD *)(v288 + 72) = *(_OWORD *)(v289 + 72);
              *(_OWORD *)(v288 + 88) = v297;
              *(_OWORD *)(v288 + 104) = *(_OWORD *)(v289 + 104);
              v288[120] = v289[120];
            }
            else
            {
              v391 = v296 & 1;
              v303 = (void *)*((_QWORD *)v289 + 9);
              v302 = *((_QWORD *)v289 + 10);
              v304 = *((_QWORD *)v289 + 11);
              v305 = *((_QWORD *)v289 + 12);
              v306 = *((_QWORD *)v289 + 13);
              v381 = *((_QWORD *)v289 + 14);
              sub_10002B764(v303, v302, v304, v305, v306, v381, v296 & 1);
              *((_QWORD *)v288 + 9) = v303;
              *((_QWORD *)v288 + 10) = v302;
              *((_QWORD *)v288 + 11) = v304;
              *((_QWORD *)v288 + 12) = v305;
              *((_QWORD *)v288 + 13) = v306;
              *((_QWORD *)v288 + 14) = v381;
              v288[120] = v391;
            }
            v7 = v392;
            v301 = v396;
            v288[121] = v289[121];
          }
          else
          {
            v298 = *((_OWORD *)v289 + 5);
            *((_OWORD *)v288 + 4) = *((_OWORD *)v289 + 4);
            *((_OWORD *)v288 + 5) = v298;
            *((_OWORD *)v288 + 6) = *((_OWORD *)v289 + 6);
            *(_OWORD *)(v288 + 106) = *(_OWORD *)(v289 + 106);
            v299 = *((_OWORD *)v289 + 1);
            *(_OWORD *)v288 = *(_OWORD *)v289;
            *((_OWORD *)v288 + 1) = v299;
            v300 = *((_OWORD *)v289 + 3);
            *((_OWORD *)v288 + 2) = *((_OWORD *)v289 + 2);
            *((_OWORD *)v288 + 3) = v300;
            v301 = v17;
          }
          a1[v286[6]] = *((_BYTE *)a2 + v286[6]);
          a1[v286[7]] = *((_BYTE *)a2 + v286[7]);
          a1[v286[8]] = *((_BYTE *)a2 + v286[8]);
          a1[v286[9]] = *((_BYTE *)a2 + v286[9]);
          a1[v286[10]] = *((_BYTE *)a2 + v286[10]);
          v307 = v286[11];
          v308 = *(char **)((char *)a2 + v307);
          *(_QWORD *)&a1[v307] = v308;
          v309 = v308;
          v109 = a1;
          v110 = v301;
          v111 = 1;
          goto LABEL_202;
        case 2u:
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v82 = (void **)&a1[v81];
          v83 = (void **)((char *)a2 + v81);
          v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v85 = *(_QWORD *)(v84 - 8);
          v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
          v87 = v80;
          if (v86(v83, 1, v84))
          {
            v88 = sub_10002A750(&qword_100644980);
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v83, v84))
            {
              case 1u:
                v154 = *v83;
                *v82 = *v83;
                v155 = v154;
                v156 = v82;
                v157 = v84;
                v158 = 1;
                goto LABEL_177;
              case 2u:
                v340 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v82, v83, v340);
                v156 = v82;
                v157 = v84;
                v158 = 2;
                goto LABEL_177;
              case 3u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v82, v83, v341);
                v156 = v82;
                v157 = v84;
                v158 = 3;
                goto LABEL_177;
              case 4u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v82, v83, v342);
                v156 = v82;
                v157 = v84;
                v158 = 4;
                goto LABEL_177;
              case 5u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v82, v83, v343);
                v156 = v82;
                v157 = v84;
                v158 = 5;
                goto LABEL_177;
              case 6u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v82, v83, v344);
                v156 = v82;
                v157 = v84;
                v158 = 6;
                goto LABEL_177;
              case 8u:
                v345 = *v83;
                *v82 = *v83;
                v346 = v345;
                v156 = v82;
                v157 = v84;
                v158 = 8;
                goto LABEL_177;
              case 9u:
                v347 = *v83;
                *v82 = *v83;
                v348 = v347;
                v156 = v82;
                v157 = v84;
                v158 = 9;
LABEL_177:
                swift_storeEnumTagMultiPayload(v156, v157, v158);
                break;
              default:
                memcpy(v82, v83, *(_QWORD *)(v85 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
          }
          v109 = a1;
          v110 = v17;
          v111 = 2;
          goto LABEL_202;
        case 3u:
          v89 = *a2;
          *(_QWORD *)a1 = *a2;
          v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v91 = (void **)&a1[v90];
          v92 = (void **)((char *)a2 + v90);
          v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v94 = *(_QWORD *)(v93 - 8);
          v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
          v96 = v89;
          if (v95(v92, 1, v93))
          {
            v97 = sub_10002A750(&qword_100644980);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v92, v93))
            {
              case 1u:
                v159 = *v92;
                *v91 = *v92;
                v160 = v159;
                v161 = v91;
                v162 = v93;
                v163 = 1;
                goto LABEL_188;
              case 2u:
                v349 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v91, v92, v349);
                v161 = v91;
                v162 = v93;
                v163 = 2;
                goto LABEL_188;
              case 3u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v91, v92, v350);
                v161 = v91;
                v162 = v93;
                v163 = 3;
                goto LABEL_188;
              case 4u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v91, v92, v351);
                v161 = v91;
                v162 = v93;
                v163 = 4;
                goto LABEL_188;
              case 5u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v91, v92, v352);
                v161 = v91;
                v162 = v93;
                v163 = 5;
                goto LABEL_188;
              case 6u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v91, v92, v353);
                v161 = v91;
                v162 = v93;
                v163 = 6;
                goto LABEL_188;
              case 8u:
                v354 = *v92;
                *v91 = *v92;
                v355 = v354;
                v161 = v91;
                v162 = v93;
                v163 = 8;
                goto LABEL_188;
              case 9u:
                v356 = *v92;
                *v91 = *v92;
                v357 = v356;
                v161 = v91;
                v162 = v93;
                v163 = 9;
LABEL_188:
                swift_storeEnumTagMultiPayload(v161, v162, v163);
                break;
              default:
                memcpy(v91, v92, *(_QWORD *)(v94 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          v109 = a1;
          v110 = v17;
          v111 = 3;
          goto LABEL_202;
        case 4u:
          v98 = *a2;
          *(_QWORD *)a1 = *a2;
          v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v100 = (void **)&a1[v99];
          v101 = (void **)((char *)a2 + v99);
          v102 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v103 = *(_QWORD *)(v102 - 8);
          v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48);
          v105 = v98;
          if (v104(v101, 1, v102))
          {
            v106 = sub_10002A750(&qword_100644980);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v101, v102))
            {
              case 1u:
                v164 = *v101;
                *v100 = *v101;
                v165 = v164;
                v166 = v100;
                v167 = v102;
                v168 = 1;
                goto LABEL_199;
              case 2u:
                v358 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v100, v101, v358);
                v166 = v100;
                v167 = v102;
                v168 = 2;
                goto LABEL_199;
              case 3u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v100, v101, v359);
                v166 = v100;
                v167 = v102;
                v168 = 3;
                goto LABEL_199;
              case 4u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v100, v101, v360);
                v166 = v100;
                v167 = v102;
                v168 = 4;
                goto LABEL_199;
              case 5u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v100, v101, v361);
                v166 = v100;
                v167 = v102;
                v168 = 5;
                goto LABEL_199;
              case 6u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v100, v101, v362);
                v166 = v100;
                v167 = v102;
                v168 = 6;
                goto LABEL_199;
              case 8u:
                v363 = *v101;
                *v100 = *v101;
                v364 = v363;
                v166 = v100;
                v167 = v102;
                v168 = 8;
                goto LABEL_199;
              case 9u:
                v365 = *v101;
                *v100 = *v101;
                v366 = v365;
                v166 = v100;
                v167 = v102;
                v168 = 9;
LABEL_199:
                swift_storeEnumTagMultiPayload(v166, v167, v168);
                break;
              default:
                memcpy(v100, v101, *(_QWORD *)(v103 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
          }
          v109 = a1;
          v110 = v17;
          v111 = 4;
          goto LABEL_202;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v107 = a2[2];
          *((_QWORD *)a1 + 2) = v107;
          v108 = v107;
          v109 = a1;
          v110 = v17;
          v111 = 5;
          goto LABEL_202;
        case 6u:
          v119 = *a2;
          *(_QWORD *)a1 = *a2;
          v120 = v119;
          v109 = a1;
          v110 = v17;
          v111 = 6;
          goto LABEL_202;
        case 7u:
          v112 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v113 = *(_QWORD *)(v112 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v113 + 48))(a2, 1, v112))
          {
            v114 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
          }
          else
          {
            v169 = *a2;
            *(_QWORD *)a1 = *a2;
            v170 = *(int *)(v112 + 20);
            v383 = &a1[v170];
            v171 = (char *)a2 + v170;
            v172 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v173 = v17;
            v174 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v172 - 8) + 16);
            v175 = swift_bridgeObjectRetain(v169);
            v174(v383, v171, v172, v175);
            v17 = v173;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(a1, 0, 1, v112);
          }
          v176 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v177 = &a1[v176];
          v178 = (char **)((char *)a2 + v176);
          v179 = v178[1];
          if (v179)
          {
            *(_QWORD *)v177 = *v178;
            *((_QWORD *)v177 + 1) = v179;
            v180 = (void *)v178[2];
            *((_QWORD *)v177 + 2) = v180;
            swift_bridgeObjectRetain(v179);
            v181 = v180;
          }
          else
          {
            *(_OWORD *)v177 = *(_OWORD *)v178;
            *((_QWORD *)v177 + 2) = v178[2];
          }
          v109 = a1;
          v110 = v17;
          v111 = 7;
          goto LABEL_202;
        case 8u:
          v121 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v122 = *(_QWORD *)(v121 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v122 + 48))(a2, 1, v121))
          {
            v123 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
          }
          else
          {
            v182 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            a1[*(int *)(v121 + 20)] = *((_BYTE *)a2 + *(int *)(v121 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(a1, 0, 1, v121);
          }
          v183 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v183 + 20)] = *(char **)((char *)a2 + *(int *)(v183 + 20));
          v109 = a1;
          v110 = v17;
          v111 = 8;
          goto LABEL_202;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v115 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v116 = &a1[v115];
          v117 = (char *)a2 + v115;
          v118 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
          v109 = a1;
          v110 = v17;
          v111 = 9;
LABEL_202:
          swift_storeEnumTagMultiPayload(v109, v110, v111);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v337 = a1;
      v338 = v7;
      v339 = 1;
      goto LABEL_204;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 0u:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v393 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *(_QWORD *)a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_78;
            case 2u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_78;
            case 3u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_78;
            case 4u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_78;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_78;
            case 6u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_78;
            case 8u:
              v189 = *a2;
              *(_QWORD *)a1 = *a2;
              v190 = v189;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_78;
            case 9u:
              v191 = *a2;
              *(_QWORD *)a1 = *a2;
              v192 = v191;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_78:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v193 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v194 = v193[5];
          v195 = &a1[v194];
          v196 = (char *)a2 + v194;
          v197 = *(uint64_t *)((char *)a2 + v194 + 8);
          if (v197)
          {
            *(_QWORD *)v195 = *(_QWORD *)v196;
            *((_QWORD *)v195 + 1) = v197;
            v198 = (void *)*((_QWORD *)v196 + 2);
            v199 = *((_QWORD *)v196 + 3);
            v200 = *((_QWORD *)v196 + 4);
            v201 = *((_QWORD *)v196 + 5);
            v368 = *((_QWORD *)v196 + 6);
            v384 = *((_QWORD *)v196 + 7);
            v374 = v196[64];
            swift_bridgeObjectRetain(v197);
            sub_10003E1F0(v198, v199, v200, v201, v368, v384, v374);
            *((_QWORD *)v195 + 2) = v198;
            *((_QWORD *)v195 + 3) = v199;
            *((_QWORD *)v195 + 4) = v200;
            *((_QWORD *)v195 + 5) = v201;
            *((_QWORD *)v195 + 6) = v368;
            *((_QWORD *)v195 + 7) = v384;
            v195[64] = v374;
            *(_DWORD *)(v195 + 65) = *(_DWORD *)(v196 + 65);
            v202 = v196[120];
            if (v202 == 255)
            {
              v203 = *(_OWORD *)(v196 + 88);
              *(_OWORD *)(v195 + 72) = *(_OWORD *)(v196 + 72);
              *(_OWORD *)(v195 + 88) = v203;
              *(_OWORD *)(v195 + 104) = *(_OWORD *)(v196 + 104);
              v195[120] = v196[120];
            }
            else
            {
              v385 = v202 & 1;
              v208 = *((_QWORD *)v196 + 10);
              v209 = *((_QWORD *)v196 + 11);
              v210 = *((_QWORD *)v196 + 12);
              v211 = *((_QWORD *)v196 + 13);
              v369 = *((_QWORD *)v196 + 14);
              v375 = (void *)*((_QWORD *)v196 + 9);
              sub_10002B764(v375, v208, v209, v210, v211, v369, v202 & 1);
              *((_QWORD *)v195 + 9) = v375;
              *((_QWORD *)v195 + 10) = v208;
              *((_QWORD *)v195 + 11) = v209;
              *((_QWORD *)v195 + 12) = v210;
              *((_QWORD *)v195 + 13) = v211;
              *((_QWORD *)v195 + 14) = v369;
              v195[120] = v385;
            }
            v207 = v393;
            v195[121] = v196[121];
          }
          else
          {
            v204 = *((_OWORD *)v196 + 5);
            *((_OWORD *)v195 + 4) = *((_OWORD *)v196 + 4);
            *((_OWORD *)v195 + 5) = v204;
            *((_OWORD *)v195 + 6) = *((_OWORD *)v196 + 6);
            *(_OWORD *)(v195 + 106) = *(_OWORD *)(v196 + 106);
            v205 = *((_OWORD *)v196 + 1);
            *(_OWORD *)v195 = *(_OWORD *)v196;
            *((_OWORD *)v195 + 1) = v205;
            v206 = *((_OWORD *)v196 + 3);
            *((_OWORD *)v195 + 2) = *((_OWORD *)v196 + 2);
            *((_OWORD *)v195 + 3) = v206;
            v207 = v9;
          }
          a1[v193[6]] = *((_BYTE *)a2 + v193[6]);
          a1[v193[7]] = *((_BYTE *)a2 + v193[7]);
          a1[v193[8]] = *((_BYTE *)a2 + v193[8]);
          a1[v193[9]] = *((_BYTE *)a2 + v193[9]);
          a1[v193[10]] = *((_BYTE *)a2 + v193[10]);
          v212 = v193[11];
          v213 = *(char **)((char *)a2 + v212);
          *(_QWORD *)&a1[v212] = v213;
          v214 = v213;
          v59 = a1;
          v60 = v207;
          v61 = 0;
          goto LABEL_167;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v395 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 1u:
              v25 = *a2;
              *(_QWORD *)a1 = *a2;
              v26 = v25;
              v27 = a1;
              v28 = v24;
              v29 = 1;
              goto LABEL_110;
            case 2u:
              v246 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(a1, a2, v246);
              v27 = a1;
              v28 = v24;
              v29 = 2;
              goto LABEL_110;
            case 3u:
              v247 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
              v27 = a1;
              v28 = v24;
              v29 = 3;
              goto LABEL_110;
            case 4u:
              v248 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
              v27 = a1;
              v28 = v24;
              v29 = 4;
              goto LABEL_110;
            case 5u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
              v27 = a1;
              v28 = v24;
              v29 = 5;
              goto LABEL_110;
            case 6u:
              v250 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
              v27 = a1;
              v28 = v24;
              v29 = 6;
              goto LABEL_110;
            case 8u:
              v251 = *a2;
              *(_QWORD *)a1 = *a2;
              v252 = v251;
              v27 = a1;
              v28 = v24;
              v29 = 8;
              goto LABEL_110;
            case 9u:
              v253 = *a2;
              *(_QWORD *)a1 = *a2;
              v254 = v253;
              v27 = a1;
              v28 = v24;
              v29 = 9;
LABEL_110:
              swift_storeEnumTagMultiPayload(v27, v28, v29);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v255 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v256 = v255[5];
          v257 = &a1[v256];
          v258 = (char *)a2 + v256;
          v259 = *(uint64_t *)((char *)a2 + v256 + 8);
          if (v259)
          {
            *(_QWORD *)v257 = *(_QWORD *)v258;
            *((_QWORD *)v257 + 1) = v259;
            v260 = (void *)*((_QWORD *)v258 + 2);
            v261 = *((_QWORD *)v258 + 3);
            v262 = *((_QWORD *)v258 + 4);
            v263 = *((_QWORD *)v258 + 5);
            v372 = *((_QWORD *)v258 + 6);
            v388 = *((_QWORD *)v258 + 7);
            v378 = v258[64];
            swift_bridgeObjectRetain(v259);
            sub_10003E1F0(v260, v261, v262, v263, v372, v388, v378);
            *((_QWORD *)v257 + 2) = v260;
            *((_QWORD *)v257 + 3) = v261;
            *((_QWORD *)v257 + 4) = v262;
            *((_QWORD *)v257 + 5) = v263;
            *((_QWORD *)v257 + 6) = v372;
            *((_QWORD *)v257 + 7) = v388;
            v257[64] = v378;
            *(_DWORD *)(v257 + 65) = *(_DWORD *)(v258 + 65);
            v264 = v258[120];
            if (v264 == 255)
            {
              v265 = *(_OWORD *)(v258 + 88);
              *(_OWORD *)(v257 + 72) = *(_OWORD *)(v258 + 72);
              *(_OWORD *)(v257 + 88) = v265;
              *(_OWORD *)(v257 + 104) = *(_OWORD *)(v258 + 104);
              v257[120] = v258[120];
            }
            else
            {
              v389 = v264 & 1;
              v270 = *((_QWORD *)v258 + 10);
              v271 = *((_QWORD *)v258 + 11);
              v272 = *((_QWORD *)v258 + 12);
              v273 = *((_QWORD *)v258 + 13);
              v373 = *((_QWORD *)v258 + 14);
              v379 = (void *)*((_QWORD *)v258 + 9);
              sub_10002B764(v379, v270, v271, v272, v273, v373, v264 & 1);
              *((_QWORD *)v257 + 9) = v379;
              *((_QWORD *)v257 + 10) = v270;
              *((_QWORD *)v257 + 11) = v271;
              *((_QWORD *)v257 + 12) = v272;
              *((_QWORD *)v257 + 13) = v273;
              *((_QWORD *)v257 + 14) = v373;
              v257[120] = v389;
            }
            v269 = v395;
            v257[121] = v258[121];
          }
          else
          {
            v266 = *((_OWORD *)v258 + 5);
            *((_OWORD *)v257 + 4) = *((_OWORD *)v258 + 4);
            *((_OWORD *)v257 + 5) = v266;
            *((_OWORD *)v257 + 6) = *((_OWORD *)v258 + 6);
            *(_OWORD *)(v257 + 106) = *(_OWORD *)(v258 + 106);
            v267 = *((_OWORD *)v258 + 1);
            *(_OWORD *)v257 = *(_OWORD *)v258;
            *((_OWORD *)v257 + 1) = v267;
            v268 = *((_OWORD *)v258 + 3);
            *((_OWORD *)v257 + 2) = *((_OWORD *)v258 + 2);
            *((_OWORD *)v257 + 3) = v268;
            v269 = v9;
          }
          a1[v255[6]] = *((_BYTE *)a2 + v255[6]);
          a1[v255[7]] = *((_BYTE *)a2 + v255[7]);
          a1[v255[8]] = *((_BYTE *)a2 + v255[8]);
          a1[v255[9]] = *((_BYTE *)a2 + v255[9]);
          a1[v255[10]] = *((_BYTE *)a2 + v255[10]);
          v274 = v255[11];
          v275 = *(char **)((char *)a2 + v274);
          *(_QWORD *)&a1[v274] = v275;
          v276 = v275;
          v59 = a1;
          v60 = v269;
          v61 = 1;
          goto LABEL_167;
        case 2u:
          v30 = *a2;
          *(_QWORD *)a1 = *a2;
          v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v32 = (void **)&a1[v31];
          v33 = (void **)((char *)a2 + v31);
          v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
          v37 = v30;
          if (v36(v33, 1, v34))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v33, v34))
            {
              case 1u:
                v124 = *v33;
                *v32 = *v33;
                v125 = v124;
                v126 = v32;
                v127 = v34;
                v128 = 1;
                goto LABEL_142;
              case 2u:
                v310 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v310 - 8) + 16))(v32, v33, v310);
                v126 = v32;
                v127 = v34;
                v128 = 2;
                goto LABEL_142;
              case 3u:
                v311 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v32, v33, v311);
                v126 = v32;
                v127 = v34;
                v128 = 3;
                goto LABEL_142;
              case 4u:
                v312 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v312 - 8) + 16))(v32, v33, v312);
                v126 = v32;
                v127 = v34;
                v128 = 4;
                goto LABEL_142;
              case 5u:
                v313 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v32, v33, v313);
                v126 = v32;
                v127 = v34;
                v128 = 5;
                goto LABEL_142;
              case 6u:
                v314 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v32, v33, v314);
                v126 = v32;
                v127 = v34;
                v128 = 6;
                goto LABEL_142;
              case 8u:
                v315 = *v33;
                *v32 = *v33;
                v316 = v315;
                v126 = v32;
                v127 = v34;
                v128 = 8;
                goto LABEL_142;
              case 9u:
                v317 = *v33;
                *v32 = *v33;
                v318 = v317;
                v126 = v32;
                v127 = v34;
                v128 = 9;
LABEL_142:
                swift_storeEnumTagMultiPayload(v126, v127, v128);
                break;
              default:
                memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          v59 = a1;
          v60 = v9;
          v61 = 2;
          goto LABEL_167;
        case 3u:
          v39 = *a2;
          *(_QWORD *)a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (void **)&a1[v40];
          v42 = (void **)((char *)a2 + v40);
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
          v46 = v39;
          if (v45(v42, 1, v43))
          {
            v47 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 1u:
                v129 = *v42;
                *v41 = *v42;
                v130 = v129;
                v131 = v41;
                v132 = v43;
                v133 = 1;
                goto LABEL_153;
              case 2u:
                v319 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v319 - 8) + 16))(v41, v42, v319);
                v131 = v41;
                v132 = v43;
                v133 = 2;
                goto LABEL_153;
              case 3u:
                v320 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v320 - 8) + 16))(v41, v42, v320);
                v131 = v41;
                v132 = v43;
                v133 = 3;
                goto LABEL_153;
              case 4u:
                v321 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v41, v42, v321);
                v131 = v41;
                v132 = v43;
                v133 = 4;
                goto LABEL_153;
              case 5u:
                v322 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v41, v42, v322);
                v131 = v41;
                v132 = v43;
                v133 = 5;
                goto LABEL_153;
              case 6u:
                v323 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v41, v42, v323);
                v131 = v41;
                v132 = v43;
                v133 = 6;
                goto LABEL_153;
              case 8u:
                v324 = *v42;
                *v41 = *v42;
                v325 = v324;
                v131 = v41;
                v132 = v43;
                v133 = 8;
                goto LABEL_153;
              case 9u:
                v326 = *v42;
                *v41 = *v42;
                v327 = v326;
                v131 = v41;
                v132 = v43;
                v133 = 9;
LABEL_153:
                swift_storeEnumTagMultiPayload(v131, v132, v133);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v59 = a1;
          v60 = v9;
          v61 = 3;
          goto LABEL_167;
        case 4u:
          v48 = *a2;
          *(_QWORD *)a1 = *a2;
          v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v50 = (void **)&a1[v49];
          v51 = (void **)((char *)a2 + v49);
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v53 = *(_QWORD *)(v52 - 8);
          v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
          v55 = v48;
          if (v54(v51, 1, v52))
          {
            v56 = sub_10002A750(&qword_100644980);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v51, v52))
            {
              case 1u:
                v134 = *v51;
                *v50 = *v51;
                v135 = v134;
                v136 = v50;
                v137 = v52;
                v138 = 1;
                goto LABEL_164;
              case 2u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v50, v51, v328);
                v136 = v50;
                v137 = v52;
                v138 = 2;
                goto LABEL_164;
              case 3u:
                v329 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v50, v51, v329);
                v136 = v50;
                v137 = v52;
                v138 = 3;
                goto LABEL_164;
              case 4u:
                v330 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v50, v51, v330);
                v136 = v50;
                v137 = v52;
                v138 = 4;
                goto LABEL_164;
              case 5u:
                v331 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v50, v51, v331);
                v136 = v50;
                v137 = v52;
                v138 = 5;
                goto LABEL_164;
              case 6u:
                v332 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v50, v51, v332);
                v136 = v50;
                v137 = v52;
                v138 = 6;
                goto LABEL_164;
              case 8u:
                v333 = *v51;
                *v50 = *v51;
                v334 = v333;
                v136 = v50;
                v137 = v52;
                v138 = 8;
                goto LABEL_164;
              case 9u:
                v335 = *v51;
                *v50 = *v51;
                v336 = v335;
                v136 = v50;
                v137 = v52;
                v138 = 9;
LABEL_164:
                swift_storeEnumTagMultiPayload(v136, v137, v138);
                break;
              default:
                memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v59 = a1;
          v60 = v9;
          v61 = 4;
          goto LABEL_167;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v57 = a2[2];
          *((_QWORD *)a1 + 2) = v57;
          v58 = v57;
          v59 = a1;
          v60 = v9;
          v61 = 5;
          goto LABEL_167;
        case 6u:
          v62 = *a2;
          *(_QWORD *)a1 = *a2;
          v63 = v62;
          v59 = a1;
          v60 = v9;
          v61 = 6;
          goto LABEL_167;
        case 7u:
          v64 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v65 + 48))(a2, 1, v64))
          {
            v66 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            v139 = *a2;
            *(_QWORD *)a1 = *a2;
            v140 = *(int *)(v64 + 20);
            v382 = &a1[v140];
            v141 = (char *)a2 + v140;
            v142 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v143 = v9;
            v144 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v142 - 8) + 16);
            v145 = swift_bridgeObjectRetain(v139);
            v144(v382, v141, v142, v145);
            v9 = v143;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v64);
          }
          v146 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v147 = &a1[v146];
          v148 = (char **)((char *)a2 + v146);
          v149 = v148[1];
          if (v149)
          {
            *(_QWORD *)v147 = *v148;
            *((_QWORD *)v147 + 1) = v149;
            v150 = (void *)v148[2];
            *((_QWORD *)v147 + 2) = v150;
            swift_bridgeObjectRetain(v149);
            v151 = v150;
          }
          else
          {
            *(_OWORD *)v147 = *(_OWORD *)v148;
            *((_QWORD *)v147 + 2) = v148[2];
          }
          v59 = a1;
          v60 = v9;
          v61 = 7;
          goto LABEL_167;
        case 8u:
          v67 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v68 + 48))(a2, 1, v67))
          {
            v69 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            v152 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(a1, a2, v152);
            a1[*(int *)(v67 + 20)] = *((_BYTE *)a2 + *(int *)(v67 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(a1, 0, 1, v67);
          }
          v153 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v153 + 20)] = *(char **)((char *)a2 + *(int *)(v153 + 20));
          v59 = a1;
          v60 = v9;
          v61 = 8;
          goto LABEL_167;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v70 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v71 = &a1[v70];
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
          v59 = a1;
          v60 = v9;
          v61 = 9;
LABEL_167:
          swift_storeEnumTagMultiPayload(v59, v60, v61);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      v337 = a1;
      v338 = v7;
      v339 = 0;
LABEL_204:
      swift_storeEnumTagMultiPayload(v337, v338, v339);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(uint64_t a1)
{
  return sub_100007328(a1, qword_100648948, (uint64_t)&nominal type descriptor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
}

void sub_100136D30(_QWORD *a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v2);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a1, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 1u:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v19))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_24:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_23:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
            break;
          default:
            break;
        }
LABEL_25:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v22 = (char *)a1 + *(int *)(v21 + 20);
        v23 = *((_QWORD *)v22 + 1);
        if (v23)
        {
          swift_bridgeObjectRelease(v23);
          sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
          v24 = v22[120];
          if (v24 != 255)
            sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
        }
        v12 = *(id *)((char *)a1 + *(int *)(v21 + 44));
        goto LABEL_39;
      case 2u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(a1, 1, v25))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v25))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(a1, 1, v26))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v26))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(a1, 1, v27))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v27))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_11;
      case 6u:
LABEL_38:
        v12 = (id)*a1;
        goto LABEL_39;
      case 7u:
LABEL_7:
        v8 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8))
        {
          swift_bridgeObjectRelease(*a1);
          v9 = (char *)a1 + *(int *)(v8 + 20);
          v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        a1 = (_QWORD *)((char *)a1
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v11 = a1[1];
        if (!v11)
          return;
        swift_bridgeObjectRelease(v11);
LABEL_11:
        v12 = (id)a1[2];
LABEL_39:

        break;
      case 8u:
LABEL_12:
        v13 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(a1, 1, v13))
          return;
LABEL_36:
        v14 = type metadata accessor for Date(0);
LABEL_37:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
        break;
      case 9u:
LABEL_14:
        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v14 = type metadata accessor for AnyTip(0);
        goto LABEL_37;
      default:
        return;
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a1, v4))
    {
      case 0u:
        v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v5))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 2u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(a1, 1, v16))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v16))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 3u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a1, 1, v17))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v17))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 4u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(a1, 1, v18))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v18))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 5u:
        goto LABEL_11;
      case 6u:
        goto LABEL_38;
      case 7u:
        goto LABEL_7;
      case 8u:
        goto LABEL_12;
      case 9u:
        goto LABEL_14;
      default:
        return;
    }
  }
}

void **sub_1001372E4(void **a1, void **a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void **v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(void **, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(void **, uint64_t, uint64_t);
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(void **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void **v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void **, uint64_t, uint64_t);
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  void **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  void **v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t, __n128);
  __n128 v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  void *v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  id v151;
  void **v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  void **v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void **v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t, __n128);
  __n128 v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  int *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  id v219;
  void *v220;
  id v221;
  int *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  id v252;
  void *v253;
  id v254;
  int *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  id v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  void *v284;
  id v285;
  void *v286;
  id v287;
  int *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  void *v310;
  id v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  void *v317;
  id v318;
  void *v319;
  id v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  id v327;
  void *v328;
  id v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  void *v335;
  id v336;
  void *v337;
  id v338;
  void **v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  id v348;
  void *v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  void *v356;
  id v357;
  void *v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  void *v365;
  id v366;
  void *v367;
  id v368;
  unsigned __int8 v370;
  void *v371;
  uint64_t v372;
  void *v373;
  uint64_t v374;
  void *v375;
  uint64_t v376;
  void *v377;
  char *v378;
  char *v379;
  uint64_t v380;
  char v381;
  unsigned __int8 v382;
  char v383;
  unsigned __int8 v384;
  char v385;
  unsigned __int8 v386;
  char v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;

  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v13))
    {
      case 0u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v389 = v13;
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 1u:
            v15 = *a2;
            *a1 = *a2;
            v16 = v15;
            v17 = a1;
            v18 = v14;
            v19 = 1;
            goto LABEL_92;
          case 2u:
            v213 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v213 - 8) + 16))(a1, a2, v213);
            v17 = a1;
            v18 = v14;
            v19 = 2;
            goto LABEL_92;
          case 3u:
            v214 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(a1, a2, v214);
            v17 = a1;
            v18 = v14;
            v19 = 3;
            goto LABEL_92;
          case 4u:
            v215 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(a1, a2, v215);
            v17 = a1;
            v18 = v14;
            v19 = 4;
            goto LABEL_92;
          case 5u:
            v216 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
            v17 = a1;
            v18 = v14;
            v19 = 5;
            goto LABEL_92;
          case 6u:
            v217 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
            v17 = a1;
            v18 = v14;
            v19 = 6;
            goto LABEL_92;
          case 8u:
            v218 = *a2;
            *a1 = *a2;
            v219 = v218;
            v17 = a1;
            v18 = v14;
            v19 = 8;
            goto LABEL_92;
          case 9u:
            v220 = *a2;
            *a1 = *a2;
            v221 = v220;
            v17 = a1;
            v18 = v14;
            v19 = 9;
LABEL_92:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v222 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v223 = v222[5];
        v224 = (char *)a1 + v223;
        v225 = (char *)a2 + v223;
        v226 = *(uint64_t *)((char *)a2 + v223 + 8);
        if (v226)
        {
          v394 = v4;
          *(_QWORD *)v224 = *(_QWORD *)v225;
          *((_QWORD *)v224 + 1) = v226;
          v227 = (void *)*((_QWORD *)v225 + 2);
          v228 = *((_QWORD *)v225 + 3);
          v229 = *((_QWORD *)v225 + 4);
          v230 = *((_QWORD *)v225 + 5);
          v231 = *((_QWORD *)v225 + 6);
          v372 = *((_QWORD *)v225 + 7);
          v382 = v225[64];
          swift_bridgeObjectRetain(v226);
          sub_10003E1F0(v227, v228, v229, v230, v231, v372, v382);
          *((_QWORD *)v224 + 2) = v227;
          *((_QWORD *)v224 + 3) = v228;
          *((_QWORD *)v224 + 4) = v229;
          *((_QWORD *)v224 + 5) = v230;
          *((_QWORD *)v224 + 6) = v231;
          *((_QWORD *)v224 + 7) = v372;
          v224[64] = v382;
          *(_DWORD *)(v224 + 65) = *(_DWORD *)(v225 + 65);
          v232 = v225[120];
          if (v232 == 255)
          {
            v233 = *(_OWORD *)(v225 + 88);
            *(_OWORD *)(v224 + 72) = *(_OWORD *)(v225 + 72);
            *(_OWORD *)(v224 + 88) = v233;
            *(_OWORD *)(v224 + 104) = *(_OWORD *)(v225 + 104);
            v224[120] = v225[120];
          }
          else
          {
            v383 = v232 & 1;
            v238 = *((_QWORD *)v225 + 10);
            v373 = (void *)*((_QWORD *)v225 + 9);
            v239 = *((_QWORD *)v225 + 11);
            v240 = *((_QWORD *)v225 + 12);
            v241 = *((_QWORD *)v225 + 13);
            v242 = *((_QWORD *)v225 + 14);
            sub_10002B764(v373, v238, v239, v240, v241, v242, v232 & 1);
            *((_QWORD *)v224 + 9) = v373;
            *((_QWORD *)v224 + 10) = v238;
            *((_QWORD *)v224 + 11) = v239;
            *((_QWORD *)v224 + 12) = v240;
            *((_QWORD *)v224 + 13) = v241;
            *((_QWORD *)v224 + 14) = v242;
            v224[120] = v383;
          }
          v237 = v389;
          v4 = v394;
          v224[121] = v225[121];
        }
        else
        {
          v234 = *((_OWORD *)v225 + 5);
          *((_OWORD *)v224 + 4) = *((_OWORD *)v225 + 4);
          *((_OWORD *)v224 + 5) = v234;
          *((_OWORD *)v224 + 6) = *((_OWORD *)v225 + 6);
          *(_OWORD *)(v224 + 106) = *(_OWORD *)(v225 + 106);
          v235 = *((_OWORD *)v225 + 1);
          *(_OWORD *)v224 = *(_OWORD *)v225;
          *((_OWORD *)v224 + 1) = v235;
          v236 = *((_OWORD *)v225 + 3);
          *((_OWORD *)v224 + 2) = *((_OWORD *)v225 + 2);
          *((_OWORD *)v224 + 3) = v236;
          v237 = v13;
        }
        *((_BYTE *)a1 + v222[6]) = *((_BYTE *)a2 + v222[6]);
        *((_BYTE *)a1 + v222[7]) = *((_BYTE *)a2 + v222[7]);
        *((_BYTE *)a1 + v222[8]) = *((_BYTE *)a2 + v222[8]);
        *((_BYTE *)a1 + v222[9]) = *((_BYTE *)a2 + v222[9]);
        *((_BYTE *)a1 + v222[10]) = *((_BYTE *)a2 + v222[10]);
        v243 = v222[11];
        v244 = *(void **)((char *)a2 + v243);
        *(void **)((char *)a1 + v243) = v244;
        v245 = v244;
        v105 = a1;
        v106 = v237;
        v107 = 0;
        goto LABEL_200;
      case 1u:
        v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v391 = v13;
        switch(swift_getEnumCaseMultiPayload(a2, v70))
        {
          case 1u:
            v71 = *a2;
            *a1 = *a2;
            v72 = v71;
            v73 = a1;
            v74 = v70;
            v75 = 1;
            goto LABEL_124;
          case 2u:
            v279 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v279 - 8) + 16))(a1, a2, v279);
            v73 = a1;
            v74 = v70;
            v75 = 2;
            goto LABEL_124;
          case 3u:
            v280 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(a1, a2, v280);
            v73 = a1;
            v74 = v70;
            v75 = 3;
            goto LABEL_124;
          case 4u:
            v281 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
            v73 = a1;
            v74 = v70;
            v75 = 4;
            goto LABEL_124;
          case 5u:
            v282 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(a1, a2, v282);
            v73 = a1;
            v74 = v70;
            v75 = 5;
            goto LABEL_124;
          case 6u:
            v283 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1, a2, v283);
            v73 = a1;
            v74 = v70;
            v75 = 6;
            goto LABEL_124;
          case 8u:
            v284 = *a2;
            *a1 = *a2;
            v285 = v284;
            v73 = a1;
            v74 = v70;
            v75 = 8;
            goto LABEL_124;
          case 9u:
            v286 = *a2;
            *a1 = *a2;
            v287 = v286;
            v73 = a1;
            v74 = v70;
            v75 = 9;
LABEL_124:
            swift_storeEnumTagMultiPayload(v73, v74, v75);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            break;
        }
        v288 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v289 = v288[5];
        v290 = (char *)a1 + v289;
        v291 = (char *)a2 + v289;
        v292 = *(uint64_t *)((char *)a2 + v289 + 8);
        if (v292)
        {
          v395 = v4;
          *(_QWORD *)v290 = *(_QWORD *)v291;
          *((_QWORD *)v290 + 1) = v292;
          v293 = (void *)*((_QWORD *)v291 + 2);
          v294 = *((_QWORD *)v291 + 3);
          v295 = *((_QWORD *)v291 + 4);
          v296 = *((_QWORD *)v291 + 5);
          v297 = *((_QWORD *)v291 + 6);
          v376 = *((_QWORD *)v291 + 7);
          v386 = v291[64];
          swift_bridgeObjectRetain(v292);
          sub_10003E1F0(v293, v294, v295, v296, v297, v376, v386);
          *((_QWORD *)v290 + 2) = v293;
          *((_QWORD *)v290 + 3) = v294;
          *((_QWORD *)v290 + 4) = v295;
          *((_QWORD *)v290 + 5) = v296;
          *((_QWORD *)v290 + 6) = v297;
          *((_QWORD *)v290 + 7) = v376;
          v290[64] = v386;
          *(_DWORD *)(v290 + 65) = *(_DWORD *)(v291 + 65);
          v298 = v291[120];
          if (v298 == 255)
          {
            v299 = *(_OWORD *)(v291 + 88);
            *(_OWORD *)(v290 + 72) = *(_OWORD *)(v291 + 72);
            *(_OWORD *)(v290 + 88) = v299;
            *(_OWORD *)(v290 + 104) = *(_OWORD *)(v291 + 104);
            v290[120] = v291[120];
          }
          else
          {
            v387 = v298 & 1;
            v304 = *((_QWORD *)v291 + 10);
            v377 = (void *)*((_QWORD *)v291 + 9);
            v305 = *((_QWORD *)v291 + 11);
            v306 = *((_QWORD *)v291 + 12);
            v307 = *((_QWORD *)v291 + 13);
            v308 = *((_QWORD *)v291 + 14);
            sub_10002B764(v377, v304, v305, v306, v307, v308, v298 & 1);
            *((_QWORD *)v290 + 9) = v377;
            *((_QWORD *)v290 + 10) = v304;
            *((_QWORD *)v290 + 11) = v305;
            *((_QWORD *)v290 + 12) = v306;
            *((_QWORD *)v290 + 13) = v307;
            *((_QWORD *)v290 + 14) = v308;
            v290[120] = v387;
          }
          v303 = v391;
          v4 = v395;
          v290[121] = v291[121];
        }
        else
        {
          v300 = *((_OWORD *)v291 + 5);
          *((_OWORD *)v290 + 4) = *((_OWORD *)v291 + 4);
          *((_OWORD *)v290 + 5) = v300;
          *((_OWORD *)v290 + 6) = *((_OWORD *)v291 + 6);
          *(_OWORD *)(v290 + 106) = *(_OWORD *)(v291 + 106);
          v301 = *((_OWORD *)v291 + 1);
          *(_OWORD *)v290 = *(_OWORD *)v291;
          *((_OWORD *)v290 + 1) = v301;
          v302 = *((_OWORD *)v291 + 3);
          *((_OWORD *)v290 + 2) = *((_OWORD *)v291 + 2);
          *((_OWORD *)v290 + 3) = v302;
          v303 = v13;
        }
        *((_BYTE *)a1 + v288[6]) = *((_BYTE *)a2 + v288[6]);
        *((_BYTE *)a1 + v288[7]) = *((_BYTE *)a2 + v288[7]);
        *((_BYTE *)a1 + v288[8]) = *((_BYTE *)a2 + v288[8]);
        *((_BYTE *)a1 + v288[9]) = *((_BYTE *)a2 + v288[9]);
        *((_BYTE *)a1 + v288[10]) = *((_BYTE *)a2 + v288[10]);
        v309 = v288[11];
        v310 = *(void **)((char *)a2 + v309);
        *(void **)((char *)a1 + v309) = v310;
        v311 = v310;
        v105 = a1;
        v106 = v303;
        v107 = 1;
        goto LABEL_200;
      case 2u:
        v76 = *a2;
        *a1 = *a2;
        v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v78 = (void **)((char *)a1 + v77);
        v79 = (void **)((char *)a2 + v77);
        v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
        v83 = v76;
        if (v82(v79, 1, v80))
        {
          v84 = sub_10002A750(&qword_100644980);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v79, v80))
          {
            case 1u:
              v150 = *v79;
              *v78 = *v79;
              v151 = v150;
              v152 = v78;
              v153 = v80;
              v154 = 1;
              goto LABEL_175;
            case 2u:
              v342 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v78, v79, v342);
              v152 = v78;
              v153 = v80;
              v154 = 2;
              goto LABEL_175;
            case 3u:
              v343 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v78, v79, v343);
              v152 = v78;
              v153 = v80;
              v154 = 3;
              goto LABEL_175;
            case 4u:
              v344 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v78, v79, v344);
              v152 = v78;
              v153 = v80;
              v154 = 4;
              goto LABEL_175;
            case 5u:
              v345 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v78, v79, v345);
              v152 = v78;
              v153 = v80;
              v154 = 5;
              goto LABEL_175;
            case 6u:
              v346 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v78, v79, v346);
              v152 = v78;
              v153 = v80;
              v154 = 6;
              goto LABEL_175;
            case 8u:
              v347 = *v79;
              *v78 = *v79;
              v348 = v347;
              v152 = v78;
              v153 = v80;
              v154 = 8;
              goto LABEL_175;
            case 9u:
              v349 = *v79;
              *v78 = *v79;
              v350 = v349;
              v152 = v78;
              v153 = v80;
              v154 = 9;
LABEL_175:
              swift_storeEnumTagMultiPayload(v152, v153, v154);
              break;
            default:
              memcpy(v78, v79, *(_QWORD *)(v81 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        }
        v105 = a1;
        v106 = v13;
        v107 = 2;
        goto LABEL_200;
      case 3u:
        v85 = *a2;
        *a1 = *a2;
        v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v87 = (void **)((char *)a1 + v86);
        v88 = (void **)((char *)a2 + v86);
        v89 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v90 + 48);
        v92 = v85;
        if (v91(v88, 1, v89))
        {
          v93 = sub_10002A750(&qword_100644980);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v88, v89))
          {
            case 1u:
              v155 = *v88;
              *v87 = *v88;
              v156 = v155;
              v157 = v87;
              v158 = v89;
              v159 = 1;
              goto LABEL_186;
            case 2u:
              v351 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v87, v88, v351);
              v157 = v87;
              v158 = v89;
              v159 = 2;
              goto LABEL_186;
            case 3u:
              v352 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v87, v88, v352);
              v157 = v87;
              v158 = v89;
              v159 = 3;
              goto LABEL_186;
            case 4u:
              v353 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v87, v88, v353);
              v157 = v87;
              v158 = v89;
              v159 = 4;
              goto LABEL_186;
            case 5u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v87, v88, v354);
              v157 = v87;
              v158 = v89;
              v159 = 5;
              goto LABEL_186;
            case 6u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v87, v88, v355);
              v157 = v87;
              v158 = v89;
              v159 = 6;
              goto LABEL_186;
            case 8u:
              v356 = *v88;
              *v87 = *v88;
              v357 = v356;
              v157 = v87;
              v158 = v89;
              v159 = 8;
              goto LABEL_186;
            case 9u:
              v358 = *v88;
              *v87 = *v88;
              v359 = v358;
              v157 = v87;
              v158 = v89;
              v159 = 9;
LABEL_186:
              swift_storeEnumTagMultiPayload(v157, v158, v159);
              break;
            default:
              memcpy(v87, v88, *(_QWORD *)(v90 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        }
        v105 = a1;
        v106 = v13;
        v107 = 3;
        goto LABEL_200;
      case 4u:
        v94 = *a2;
        *a1 = *a2;
        v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v96 = (void **)((char *)a1 + v95);
        v97 = (void **)((char *)a2 + v95);
        v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v99 = *(_QWORD *)(v98 - 8);
        v100 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
        v101 = v94;
        if (v100(v97, 1, v98))
        {
          v102 = sub_10002A750(&qword_100644980);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v97, v98))
          {
            case 1u:
              v160 = *v97;
              *v96 = *v97;
              v161 = v160;
              v162 = v96;
              v163 = v98;
              v164 = 1;
              goto LABEL_197;
            case 2u:
              v360 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v96, v97, v360);
              v162 = v96;
              v163 = v98;
              v164 = 2;
              goto LABEL_197;
            case 3u:
              v361 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v96, v97, v361);
              v162 = v96;
              v163 = v98;
              v164 = 3;
              goto LABEL_197;
            case 4u:
              v362 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v96, v97, v362);
              v162 = v96;
              v163 = v98;
              v164 = 4;
              goto LABEL_197;
            case 5u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v96, v97, v363);
              v162 = v96;
              v163 = v98;
              v164 = 5;
              goto LABEL_197;
            case 6u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v96, v97, v364);
              v162 = v96;
              v163 = v98;
              v164 = 6;
              goto LABEL_197;
            case 8u:
              v365 = *v97;
              *v96 = *v97;
              v366 = v365;
              v162 = v96;
              v163 = v98;
              v164 = 8;
              goto LABEL_197;
            case 9u:
              v367 = *v97;
              *v96 = *v97;
              v368 = v367;
              v162 = v96;
              v163 = v98;
              v164 = 9;
LABEL_197:
              swift_storeEnumTagMultiPayload(v162, v163, v164);
              break;
            default:
              memcpy(v96, v97, *(_QWORD *)(v99 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        v105 = a1;
        v106 = v13;
        v107 = 4;
        goto LABEL_200;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v103 = a2[2];
        a1[2] = v103;
        v104 = v103;
        v105 = a1;
        v106 = v13;
        v107 = 5;
        goto LABEL_200;
      case 6u:
        v115 = *a2;
        *a1 = *a2;
        v116 = v115;
        v105 = a1;
        v106 = v13;
        v107 = 6;
        goto LABEL_200;
      case 7u:
        v108 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v109 = *(_QWORD *)(v108 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v109 + 48))(a2, 1, v108))
        {
          v110 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          v165 = *a2;
          *a1 = *a2;
          v166 = *(int *)(v108 + 20);
          v379 = (char *)a1 + v166;
          v167 = (char *)a2 + v166;
          v168 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v169 = v13;
          v170 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v168 - 8) + 16);
          v171 = swift_bridgeObjectRetain(v165);
          v170(v379, v167, v168, v171);
          v13 = v169;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v109 + 56))(a1, 0, 1, v108);
        }
        v172 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v173 = (void **)((char *)a1 + v172);
        v174 = (void **)((char *)a2 + v172);
        v175 = v174[1];
        if (v175)
        {
          *v173 = *v174;
          v173[1] = v175;
          v176 = (void *)v174[2];
          v173[2] = v176;
          swift_bridgeObjectRetain(v175);
          v177 = v176;
        }
        else
        {
          *(_OWORD *)v173 = *(_OWORD *)v174;
          v173[2] = v174[2];
        }
        v105 = a1;
        v106 = v13;
        v107 = 7;
        goto LABEL_200;
      case 8u:
        v117 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v118 = *(_QWORD *)(v117 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v118 + 48))(a2, 1, v117))
        {
          v119 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          v178 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(a1, a2, v178);
          *((_BYTE *)a1 + *(int *)(v117 + 20)) = *((_BYTE *)a2 + *(int *)(v117 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v117);
        }
        v179 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v179 + 20)) = *(void **)((char *)a2 + *(int *)(v179 + 20));
        v105 = a1;
        v106 = v13;
        v107 = 8;
        goto LABEL_200;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v111 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v112 = (char *)a1 + v111;
        v113 = (char *)a2 + v111;
        v114 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
        v105 = a1;
        v106 = v13;
        v107 = 9;
LABEL_200:
        swift_storeEnumTagMultiPayload(v105, v106, v107);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v339 = a1;
    v340 = v4;
    v341 = 1;
    goto LABEL_202;
  }
  if (!EnumCaseMultiPayload)
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v388 = v6;
        v392 = v4;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *a1 = *a2;
            v9 = v8;
            v10 = a1;
            v11 = v7;
            v12 = 1;
            goto LABEL_76;
          case 2u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(a1, a2, v180);
            v10 = a1;
            v11 = v7;
            v12 = 2;
            goto LABEL_76;
          case 3u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            v10 = a1;
            v11 = v7;
            v12 = 3;
            goto LABEL_76;
          case 4u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            v10 = a1;
            v11 = v7;
            v12 = 4;
            goto LABEL_76;
          case 5u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
            v10 = a1;
            v11 = v7;
            v12 = 5;
            goto LABEL_76;
          case 6u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
            v10 = a1;
            v11 = v7;
            v12 = 6;
            goto LABEL_76;
          case 8u:
            v185 = *a2;
            *a1 = *a2;
            v186 = v185;
            v10 = a1;
            v11 = v7;
            v12 = 8;
            goto LABEL_76;
          case 9u:
            v187 = *a2;
            *a1 = *a2;
            v188 = v187;
            v10 = a1;
            v11 = v7;
            v12 = 9;
LABEL_76:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v189 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v190 = v189[5];
        v191 = (char *)a1 + v190;
        v192 = (char *)a2 + v190;
        v193 = *(uint64_t *)((char *)a2 + v190 + 8);
        if (v193)
        {
          *(_QWORD *)v191 = *(_QWORD *)v192;
          *((_QWORD *)v191 + 1) = v193;
          v194 = (void *)*((_QWORD *)v192 + 2);
          v195 = *((_QWORD *)v192 + 3);
          v196 = *((_QWORD *)v192 + 4);
          v197 = *((_QWORD *)v192 + 5);
          v198 = *((_QWORD *)v192 + 6);
          v380 = *((_QWORD *)v192 + 7);
          v370 = v192[64];
          swift_bridgeObjectRetain(v193);
          sub_10003E1F0(v194, v195, v196, v197, v198, v380, v370);
          *((_QWORD *)v191 + 2) = v194;
          *((_QWORD *)v191 + 3) = v195;
          *((_QWORD *)v191 + 4) = v196;
          *((_QWORD *)v191 + 5) = v197;
          *((_QWORD *)v191 + 6) = v198;
          *((_QWORD *)v191 + 7) = v380;
          v191[64] = v370;
          *(_DWORD *)(v191 + 65) = *(_DWORD *)(v192 + 65);
          v199 = v192[120];
          if (v199 == 255)
          {
            v200 = *(_OWORD *)(v192 + 88);
            *(_OWORD *)(v191 + 72) = *(_OWORD *)(v192 + 72);
            *(_OWORD *)(v191 + 88) = v200;
            *(_OWORD *)(v191 + 104) = *(_OWORD *)(v192 + 104);
            v191[120] = v192[120];
          }
          else
          {
            v381 = v199 & 1;
            v205 = *((_QWORD *)v192 + 10);
            v371 = (void *)*((_QWORD *)v192 + 9);
            v206 = *((_QWORD *)v192 + 11);
            v207 = *((_QWORD *)v192 + 12);
            v208 = *((_QWORD *)v192 + 13);
            v209 = *((_QWORD *)v192 + 14);
            sub_10002B764(v371, v205, v206, v207, v208, v209, v199 & 1);
            *((_QWORD *)v191 + 9) = v371;
            *((_QWORD *)v191 + 10) = v205;
            *((_QWORD *)v191 + 11) = v206;
            *((_QWORD *)v191 + 12) = v207;
            *((_QWORD *)v191 + 13) = v208;
            *((_QWORD *)v191 + 14) = v209;
            v191[120] = v381;
          }
          v204 = v388;
          v4 = v392;
          v191[121] = v192[121];
        }
        else
        {
          v201 = *((_OWORD *)v192 + 5);
          *((_OWORD *)v191 + 4) = *((_OWORD *)v192 + 4);
          *((_OWORD *)v191 + 5) = v201;
          *((_OWORD *)v191 + 6) = *((_OWORD *)v192 + 6);
          *(_OWORD *)(v191 + 106) = *(_OWORD *)(v192 + 106);
          v202 = *((_OWORD *)v192 + 1);
          *(_OWORD *)v191 = *(_OWORD *)v192;
          *((_OWORD *)v191 + 1) = v202;
          v203 = *((_OWORD *)v192 + 3);
          *((_OWORD *)v191 + 2) = *((_OWORD *)v192 + 2);
          *((_OWORD *)v191 + 3) = v203;
          v204 = v6;
        }
        *((_BYTE *)a1 + v189[6]) = *((_BYTE *)a2 + v189[6]);
        *((_BYTE *)a1 + v189[7]) = *((_BYTE *)a2 + v189[7]);
        *((_BYTE *)a1 + v189[8]) = *((_BYTE *)a2 + v189[8]);
        *((_BYTE *)a1 + v189[9]) = *((_BYTE *)a2 + v189[9]);
        *((_BYTE *)a1 + v189[10]) = *((_BYTE *)a2 + v189[10]);
        v210 = v189[11];
        v211 = *(void **)((char *)a2 + v210);
        *(void **)((char *)a1 + v210) = v211;
        v212 = v211;
        v55 = a1;
        v56 = v204;
        v57 = 0;
        goto LABEL_165;
      case 1u:
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v390 = v6;
        v393 = v4;
        switch(swift_getEnumCaseMultiPayload(a2, v20))
        {
          case 1u:
            v21 = *a2;
            *a1 = *a2;
            v22 = v21;
            v23 = a1;
            v24 = v20;
            v25 = 1;
            goto LABEL_108;
          case 2u:
            v246 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(a1, a2, v246);
            v23 = a1;
            v24 = v20;
            v25 = 2;
            goto LABEL_108;
          case 3u:
            v247 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
            v23 = a1;
            v24 = v20;
            v25 = 3;
            goto LABEL_108;
          case 4u:
            v248 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
            v23 = a1;
            v24 = v20;
            v25 = 4;
            goto LABEL_108;
          case 5u:
            v249 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
            v23 = a1;
            v24 = v20;
            v25 = 5;
            goto LABEL_108;
          case 6u:
            v250 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
            v23 = a1;
            v24 = v20;
            v25 = 6;
            goto LABEL_108;
          case 8u:
            v251 = *a2;
            *a1 = *a2;
            v252 = v251;
            v23 = a1;
            v24 = v20;
            v25 = 8;
            goto LABEL_108;
          case 9u:
            v253 = *a2;
            *a1 = *a2;
            v254 = v253;
            v23 = a1;
            v24 = v20;
            v25 = 9;
LABEL_108:
            swift_storeEnumTagMultiPayload(v23, v24, v25);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            break;
        }
        v255 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v256 = v255[5];
        v257 = (char *)a1 + v256;
        v258 = (char *)a2 + v256;
        v259 = *(uint64_t *)((char *)a2 + v256 + 8);
        if (v259)
        {
          *(_QWORD *)v257 = *(_QWORD *)v258;
          *((_QWORD *)v257 + 1) = v259;
          v260 = (void *)*((_QWORD *)v258 + 2);
          v261 = *((_QWORD *)v258 + 3);
          v262 = *((_QWORD *)v258 + 4);
          v263 = *((_QWORD *)v258 + 5);
          v264 = *((_QWORD *)v258 + 6);
          v374 = *((_QWORD *)v258 + 7);
          v384 = v258[64];
          swift_bridgeObjectRetain(v259);
          sub_10003E1F0(v260, v261, v262, v263, v264, v374, v384);
          *((_QWORD *)v257 + 2) = v260;
          *((_QWORD *)v257 + 3) = v261;
          *((_QWORD *)v257 + 4) = v262;
          *((_QWORD *)v257 + 5) = v263;
          *((_QWORD *)v257 + 6) = v264;
          *((_QWORD *)v257 + 7) = v374;
          v257[64] = v384;
          *(_DWORD *)(v257 + 65) = *(_DWORD *)(v258 + 65);
          v265 = v258[120];
          if (v265 == 255)
          {
            v266 = *(_OWORD *)(v258 + 88);
            *(_OWORD *)(v257 + 72) = *(_OWORD *)(v258 + 72);
            *(_OWORD *)(v257 + 88) = v266;
            *(_OWORD *)(v257 + 104) = *(_OWORD *)(v258 + 104);
            v257[120] = v258[120];
          }
          else
          {
            v385 = v265 & 1;
            v271 = *((_QWORD *)v258 + 10);
            v375 = (void *)*((_QWORD *)v258 + 9);
            v272 = *((_QWORD *)v258 + 11);
            v273 = *((_QWORD *)v258 + 12);
            v274 = *((_QWORD *)v258 + 13);
            v275 = *((_QWORD *)v258 + 14);
            sub_10002B764(v375, v271, v272, v273, v274, v275, v265 & 1);
            *((_QWORD *)v257 + 9) = v375;
            *((_QWORD *)v257 + 10) = v271;
            *((_QWORD *)v257 + 11) = v272;
            *((_QWORD *)v257 + 12) = v273;
            *((_QWORD *)v257 + 13) = v274;
            *((_QWORD *)v257 + 14) = v275;
            v257[120] = v385;
          }
          v270 = v390;
          v4 = v393;
          v257[121] = v258[121];
        }
        else
        {
          v267 = *((_OWORD *)v258 + 5);
          *((_OWORD *)v257 + 4) = *((_OWORD *)v258 + 4);
          *((_OWORD *)v257 + 5) = v267;
          *((_OWORD *)v257 + 6) = *((_OWORD *)v258 + 6);
          *(_OWORD *)(v257 + 106) = *(_OWORD *)(v258 + 106);
          v268 = *((_OWORD *)v258 + 1);
          *(_OWORD *)v257 = *(_OWORD *)v258;
          *((_OWORD *)v257 + 1) = v268;
          v269 = *((_OWORD *)v258 + 3);
          *((_OWORD *)v257 + 2) = *((_OWORD *)v258 + 2);
          *((_OWORD *)v257 + 3) = v269;
          v270 = v6;
        }
        *((_BYTE *)a1 + v255[6]) = *((_BYTE *)a2 + v255[6]);
        *((_BYTE *)a1 + v255[7]) = *((_BYTE *)a2 + v255[7]);
        *((_BYTE *)a1 + v255[8]) = *((_BYTE *)a2 + v255[8]);
        *((_BYTE *)a1 + v255[9]) = *((_BYTE *)a2 + v255[9]);
        *((_BYTE *)a1 + v255[10]) = *((_BYTE *)a2 + v255[10]);
        v276 = v255[11];
        v277 = *(void **)((char *)a2 + v276);
        *(void **)((char *)a1 + v276) = v277;
        v278 = v277;
        v55 = a1;
        v56 = v270;
        v57 = 1;
        goto LABEL_165;
      case 2u:
        v26 = *a2;
        *a1 = *a2;
        v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v28 = (void **)((char *)a1 + v27);
        v29 = (void **)((char *)a2 + v27);
        v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
        v33 = v26;
        if (v32(v29, 1, v30))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v29, v30))
          {
            case 1u:
              v120 = *v29;
              *v28 = *v29;
              v121 = v120;
              v122 = v28;
              v123 = v30;
              v124 = 1;
              goto LABEL_140;
            case 2u:
              v312 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v312 - 8) + 16))(v28, v29, v312);
              v122 = v28;
              v123 = v30;
              v124 = 2;
              goto LABEL_140;
            case 3u:
              v313 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v28, v29, v313);
              v122 = v28;
              v123 = v30;
              v124 = 3;
              goto LABEL_140;
            case 4u:
              v314 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v28, v29, v314);
              v122 = v28;
              v123 = v30;
              v124 = 4;
              goto LABEL_140;
            case 5u:
              v315 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v315 - 8) + 16))(v28, v29, v315);
              v122 = v28;
              v123 = v30;
              v124 = 5;
              goto LABEL_140;
            case 6u:
              v316 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v316 - 8) + 16))(v28, v29, v316);
              v122 = v28;
              v123 = v30;
              v124 = 6;
              goto LABEL_140;
            case 8u:
              v317 = *v29;
              *v28 = *v29;
              v318 = v317;
              v122 = v28;
              v123 = v30;
              v124 = 8;
              goto LABEL_140;
            case 9u:
              v319 = *v29;
              *v28 = *v29;
              v320 = v319;
              v122 = v28;
              v123 = v30;
              v124 = 9;
LABEL_140:
              swift_storeEnumTagMultiPayload(v122, v123, v124);
              break;
            default:
              memcpy(v28, v29, *(_QWORD *)(v31 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        v55 = a1;
        v56 = v6;
        v57 = 2;
        goto LABEL_165;
      case 3u:
        v35 = *a2;
        *a1 = *a2;
        v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v37 = (void **)((char *)a1 + v36);
        v38 = (void **)((char *)a2 + v36);
        v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v40 = *(_QWORD *)(v39 - 8);
        v41 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48);
        v42 = v35;
        if (v41(v38, 1, v39))
        {
          v43 = sub_10002A750(&qword_100644980);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v38, v39))
          {
            case 1u:
              v125 = *v38;
              *v37 = *v38;
              v126 = v125;
              v127 = v37;
              v128 = v39;
              v129 = 1;
              goto LABEL_151;
            case 2u:
              v321 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v37, v38, v321);
              v127 = v37;
              v128 = v39;
              v129 = 2;
              goto LABEL_151;
            case 3u:
              v322 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v37, v38, v322);
              v127 = v37;
              v128 = v39;
              v129 = 3;
              goto LABEL_151;
            case 4u:
              v323 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v37, v38, v323);
              v127 = v37;
              v128 = v39;
              v129 = 4;
              goto LABEL_151;
            case 5u:
              v324 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v37, v38, v324);
              v127 = v37;
              v128 = v39;
              v129 = 5;
              goto LABEL_151;
            case 6u:
              v325 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v37, v38, v325);
              v127 = v37;
              v128 = v39;
              v129 = 6;
              goto LABEL_151;
            case 8u:
              v326 = *v38;
              *v37 = *v38;
              v327 = v326;
              v127 = v37;
              v128 = v39;
              v129 = 8;
              goto LABEL_151;
            case 9u:
              v328 = *v38;
              *v37 = *v38;
              v329 = v328;
              v127 = v37;
              v128 = v39;
              v129 = 9;
LABEL_151:
              swift_storeEnumTagMultiPayload(v127, v128, v129);
              break;
            default:
              memcpy(v37, v38, *(_QWORD *)(v40 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v55 = a1;
        v56 = v6;
        v57 = 3;
        goto LABEL_165;
      case 4u:
        v44 = *a2;
        *a1 = *a2;
        v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v46 = (void **)((char *)a1 + v45);
        v47 = (void **)((char *)a2 + v45);
        v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v49 = *(_QWORD *)(v48 - 8);
        v50 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48);
        v51 = v44;
        if (v50(v47, 1, v48))
        {
          v52 = sub_10002A750(&qword_100644980);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v47, v48))
          {
            case 1u:
              v130 = *v47;
              *v46 = *v47;
              v131 = v130;
              v132 = v46;
              v133 = v48;
              v134 = 1;
              goto LABEL_162;
            case 2u:
              v330 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v46, v47, v330);
              v132 = v46;
              v133 = v48;
              v134 = 2;
              goto LABEL_162;
            case 3u:
              v331 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v46, v47, v331);
              v132 = v46;
              v133 = v48;
              v134 = 3;
              goto LABEL_162;
            case 4u:
              v332 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v46, v47, v332);
              v132 = v46;
              v133 = v48;
              v134 = 4;
              goto LABEL_162;
            case 5u:
              v333 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v46, v47, v333);
              v132 = v46;
              v133 = v48;
              v134 = 5;
              goto LABEL_162;
            case 6u:
              v334 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v46, v47, v334);
              v132 = v46;
              v133 = v48;
              v134 = 6;
              goto LABEL_162;
            case 8u:
              v335 = *v47;
              *v46 = *v47;
              v336 = v335;
              v132 = v46;
              v133 = v48;
              v134 = 8;
              goto LABEL_162;
            case 9u:
              v337 = *v47;
              *v46 = *v47;
              v338 = v337;
              v132 = v46;
              v133 = v48;
              v134 = 9;
LABEL_162:
              swift_storeEnumTagMultiPayload(v132, v133, v134);
              break;
            default:
              memcpy(v46, v47, *(_QWORD *)(v49 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        v55 = a1;
        v56 = v6;
        v57 = 4;
        goto LABEL_165;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v53 = a2[2];
        a1[2] = v53;
        v54 = v53;
        v55 = a1;
        v56 = v6;
        v57 = 5;
        goto LABEL_165;
      case 6u:
        v58 = *a2;
        *a1 = *a2;
        v59 = v58;
        v55 = a1;
        v56 = v6;
        v57 = 6;
        goto LABEL_165;
      case 7u:
        v60 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v135 = *a2;
          *a1 = *a2;
          v136 = *(int *)(v60 + 20);
          v378 = (char *)a1 + v136;
          v137 = (char *)a2 + v136;
          v138 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v139 = v6;
          v140 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v138 - 8) + 16);
          v141 = swift_bridgeObjectRetain(v135);
          v140(v378, v137, v138, v141);
          v6 = v139;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
        }
        v142 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v143 = (void **)((char *)a1 + v142);
        v144 = (void **)((char *)a2 + v142);
        v145 = v144[1];
        if (v145)
        {
          *v143 = *v144;
          v143[1] = v145;
          v146 = (void *)v144[2];
          v143[2] = v146;
          swift_bridgeObjectRetain(v145);
          v147 = v146;
        }
        else
        {
          *(_OWORD *)v143 = *(_OWORD *)v144;
          v143[2] = v144[2];
        }
        v55 = a1;
        v56 = v6;
        v57 = 7;
        goto LABEL_165;
      case 8u:
        v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
        {
          v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v148 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(a1, a2, v148);
          *((_BYTE *)a1 + *(int *)(v63 + 20)) = *((_BYTE *)a2 + *(int *)(v63 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
        }
        v149 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v149 + 20)) = *(void **)((char *)a2 + *(int *)(v149 + 20));
        v55 = a1;
        v56 = v6;
        v57 = 8;
        goto LABEL_165;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        v55 = a1;
        v56 = v6;
        v57 = 9;
LABEL_165:
        swift_storeEnumTagMultiPayload(v55, v56, v57);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v339 = a1;
    v340 = v4;
    v341 = 0;
LABEL_202:
    swift_storeEnumTagMultiPayload(v339, v340, v341);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

void **sub_100139260(void **a1, void **a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void **v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(void **, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(void **, uint64_t, uint64_t);
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void **v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(void **, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(void **, uint64_t, uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void **v96;
  void **v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void **, uint64_t, uint64_t);
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  void **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  void **v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  void **v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t, __n128);
  __n128 v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  void *v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  id v151;
  void **v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  void **v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  void **v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t, __n128);
  __n128 v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  void *v176;
  id v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  id v226;
  void *v227;
  id v228;
  int *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unsigned __int8 v239;
  int v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  id v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  id v266;
  void *v267;
  id v268;
  int *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unsigned __int8 v279;
  int v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void *v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  id v306;
  void *v307;
  id v308;
  int *v309;
  uint64_t v310;
  char *v311;
  char *v312;
  uint64_t v313;
  void *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unsigned __int8 v319;
  int v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  uint64_t v330;
  uint64_t v331;
  void *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void *v338;
  id v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  id v346;
  void *v347;
  id v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  void **v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  void *v375;
  id v376;
  void *v377;
  id v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  void *v384;
  id v385;
  void *v386;
  id v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  id v394;
  void *v395;
  id v396;
  unsigned __int8 v398;
  void *v399;
  uint64_t v400;
  char v401;
  uint64_t v402;
  char v403;
  uint64_t v404;
  char v405;
  char *v406;
  char *v407;
  uint64_t v408;
  char v409;
  int *v410;
  int *v411;
  int *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
    v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 0u:
          v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v414 = v13;
          switch(swift_getEnumCaseMultiPayload(a2, v14))
          {
            case 1u:
              v15 = *a2;
              *a1 = *a2;
              v16 = v15;
              v17 = a1;
              v18 = v14;
              v19 = 1;
              goto LABEL_93;
            case 2u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
              v17 = a1;
              v18 = v14;
              v19 = 2;
              goto LABEL_93;
            case 3u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v17 = a1;
              v18 = v14;
              v19 = 3;
              goto LABEL_93;
            case 4u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(a1, a2, v222);
              v17 = a1;
              v18 = v14;
              v19 = 4;
              goto LABEL_93;
            case 5u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
              v17 = a1;
              v18 = v14;
              v19 = 5;
              goto LABEL_93;
            case 6u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
              v17 = a1;
              v18 = v14;
              v19 = 6;
              goto LABEL_93;
            case 8u:
              v225 = *a2;
              *a1 = *a2;
              v226 = v225;
              v17 = a1;
              v18 = v14;
              v19 = 8;
              goto LABEL_93;
            case 9u:
              v227 = *a2;
              *a1 = *a2;
              v228 = v227;
              v17 = a1;
              v18 = v14;
              v19 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v17, v18, v19);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
              break;
          }
          v229 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v230 = v229[5];
          v231 = (char *)a1 + v230;
          v232 = (char *)a2 + v230;
          if (*(void **)((char *)a2 + v230 + 8))
          {
            v410 = v229;
            v419 = v4;
            *(_QWORD *)v231 = *(_QWORD *)v232;
            v233 = *((_QWORD *)v232 + 1);
            *((_QWORD *)v231 + 1) = v233;
            v234 = (void *)*((_QWORD *)v232 + 2);
            v235 = *((_QWORD *)v232 + 3);
            v236 = *((_QWORD *)v232 + 4);
            v237 = *((_QWORD *)v232 + 5);
            v238 = *((_QWORD *)v232 + 6);
            v400 = *((_QWORD *)v232 + 7);
            v239 = v232[64];
            swift_bridgeObjectRetain(v233);
            sub_10003E1F0(v234, v235, v236, v237, v238, v400, v239);
            *((_QWORD *)v231 + 2) = v234;
            *((_QWORD *)v231 + 3) = v235;
            *((_QWORD *)v231 + 4) = v236;
            *((_QWORD *)v231 + 5) = v237;
            *((_QWORD *)v231 + 6) = v238;
            *((_QWORD *)v231 + 7) = v400;
            v231[64] = v239;
            v231[65] = v232[65];
            v231[66] = v232[66];
            v231[67] = v232[67];
            v231[68] = v232[68];
            v240 = v232[120];
            if (v240 == 255)
            {
              v241 = *(_OWORD *)(v232 + 72);
              v242 = *(_OWORD *)(v232 + 88);
              v243 = *(_OWORD *)(v232 + 104);
              v231[120] = v232[120];
              *(_OWORD *)(v231 + 88) = v242;
              *(_OWORD *)(v231 + 104) = v243;
              *(_OWORD *)(v231 + 72) = v241;
            }
            else
            {
              v401 = v240 & 1;
              v252 = (void *)*((_QWORD *)v232 + 9);
              v251 = *((_QWORD *)v232 + 10);
              v253 = *((_QWORD *)v232 + 11);
              v254 = *((_QWORD *)v232 + 12);
              v255 = *((_QWORD *)v232 + 13);
              v256 = *((_QWORD *)v232 + 14);
              sub_10002B764(v252, v251, v253, v254, v255, v256, v240 & 1);
              *((_QWORD *)v231 + 9) = v252;
              *((_QWORD *)v231 + 10) = v251;
              *((_QWORD *)v231 + 11) = v253;
              *((_QWORD *)v231 + 12) = v254;
              *((_QWORD *)v231 + 13) = v255;
              *((_QWORD *)v231 + 14) = v256;
              v231[120] = v401;
            }
            v250 = v414;
            v4 = v419;
            v231[121] = v232[121];
            v229 = v410;
          }
          else
          {
            v244 = *(_OWORD *)v232;
            v245 = *((_OWORD *)v232 + 1);
            v246 = *((_OWORD *)v232 + 3);
            *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
            *((_OWORD *)v231 + 3) = v246;
            *(_OWORD *)v231 = v244;
            *((_OWORD *)v231 + 1) = v245;
            v247 = *((_OWORD *)v232 + 4);
            v248 = *((_OWORD *)v232 + 5);
            v249 = *((_OWORD *)v232 + 6);
            *(_OWORD *)(v231 + 106) = *(_OWORD *)(v232 + 106);
            *((_OWORD *)v231 + 5) = v248;
            *((_OWORD *)v231 + 6) = v249;
            *((_OWORD *)v231 + 4) = v247;
            v250 = v13;
          }
          *((_BYTE *)a1 + v229[6]) = *((_BYTE *)a2 + v229[6]);
          *((_BYTE *)a1 + v229[7]) = *((_BYTE *)a2 + v229[7]);
          *((_BYTE *)a1 + v229[8]) = *((_BYTE *)a2 + v229[8]);
          *((_BYTE *)a1 + v229[9]) = *((_BYTE *)a2 + v229[9]);
          *((_BYTE *)a1 + v229[10]) = *((_BYTE *)a2 + v229[10]);
          v257 = v229[11];
          v258 = *(void **)((char *)a2 + v257);
          *(void **)((char *)a1 + v257) = v258;
          v259 = v258;
          v105 = a1;
          v106 = v250;
          v107 = 0;
          goto LABEL_201;
        case 1u:
          v70 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v416 = v13;
          switch(swift_getEnumCaseMultiPayload(a2, v70))
          {
            case 1u:
              v71 = *a2;
              *a1 = *a2;
              v72 = v71;
              v73 = a1;
              v74 = v70;
              v75 = 1;
              goto LABEL_125;
            case 2u:
              v300 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v300 - 8) + 16))(a1, a2, v300);
              v73 = a1;
              v74 = v70;
              v75 = 2;
              goto LABEL_125;
            case 3u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(a1, a2, v301);
              v73 = a1;
              v74 = v70;
              v75 = 3;
              goto LABEL_125;
            case 4u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(a1, a2, v302);
              v73 = a1;
              v74 = v70;
              v75 = 4;
              goto LABEL_125;
            case 5u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(a1, a2, v303);
              v73 = a1;
              v74 = v70;
              v75 = 5;
              goto LABEL_125;
            case 6u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(a1, a2, v304);
              v73 = a1;
              v74 = v70;
              v75 = 6;
              goto LABEL_125;
            case 8u:
              v305 = *a2;
              *a1 = *a2;
              v306 = v305;
              v73 = a1;
              v74 = v70;
              v75 = 8;
              goto LABEL_125;
            case 9u:
              v307 = *a2;
              *a1 = *a2;
              v308 = v307;
              v73 = a1;
              v74 = v70;
              v75 = 9;
LABEL_125:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
              break;
          }
          v309 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v310 = v309[5];
          v311 = (char *)a1 + v310;
          v312 = (char *)a2 + v310;
          if (*(void **)((char *)a2 + v310 + 8))
          {
            v412 = v309;
            v420 = v4;
            *(_QWORD *)v311 = *(_QWORD *)v312;
            v313 = *((_QWORD *)v312 + 1);
            *((_QWORD *)v311 + 1) = v313;
            v314 = (void *)*((_QWORD *)v312 + 2);
            v315 = *((_QWORD *)v312 + 3);
            v316 = *((_QWORD *)v312 + 4);
            v317 = *((_QWORD *)v312 + 5);
            v318 = *((_QWORD *)v312 + 6);
            v404 = *((_QWORD *)v312 + 7);
            v319 = v312[64];
            swift_bridgeObjectRetain(v313);
            sub_10003E1F0(v314, v315, v316, v317, v318, v404, v319);
            *((_QWORD *)v311 + 2) = v314;
            *((_QWORD *)v311 + 3) = v315;
            *((_QWORD *)v311 + 4) = v316;
            *((_QWORD *)v311 + 5) = v317;
            *((_QWORD *)v311 + 6) = v318;
            *((_QWORD *)v311 + 7) = v404;
            v311[64] = v319;
            v311[65] = v312[65];
            v311[66] = v312[66];
            v311[67] = v312[67];
            v311[68] = v312[68];
            v320 = v312[120];
            if (v320 == 255)
            {
              v321 = *(_OWORD *)(v312 + 72);
              v322 = *(_OWORD *)(v312 + 88);
              v323 = *(_OWORD *)(v312 + 104);
              v311[120] = v312[120];
              *(_OWORD *)(v311 + 88) = v322;
              *(_OWORD *)(v311 + 104) = v323;
              *(_OWORD *)(v311 + 72) = v321;
            }
            else
            {
              v405 = v320 & 1;
              v332 = (void *)*((_QWORD *)v312 + 9);
              v331 = *((_QWORD *)v312 + 10);
              v333 = *((_QWORD *)v312 + 11);
              v334 = *((_QWORD *)v312 + 12);
              v335 = *((_QWORD *)v312 + 13);
              v336 = *((_QWORD *)v312 + 14);
              sub_10002B764(v332, v331, v333, v334, v335, v336, v320 & 1);
              *((_QWORD *)v311 + 9) = v332;
              *((_QWORD *)v311 + 10) = v331;
              *((_QWORD *)v311 + 11) = v333;
              *((_QWORD *)v311 + 12) = v334;
              *((_QWORD *)v311 + 13) = v335;
              *((_QWORD *)v311 + 14) = v336;
              v311[120] = v405;
            }
            v330 = v416;
            v4 = v420;
            v311[121] = v312[121];
            v309 = v412;
          }
          else
          {
            v324 = *(_OWORD *)v312;
            v325 = *((_OWORD *)v312 + 1);
            v326 = *((_OWORD *)v312 + 3);
            *((_OWORD *)v311 + 2) = *((_OWORD *)v312 + 2);
            *((_OWORD *)v311 + 3) = v326;
            *(_OWORD *)v311 = v324;
            *((_OWORD *)v311 + 1) = v325;
            v327 = *((_OWORD *)v312 + 4);
            v328 = *((_OWORD *)v312 + 5);
            v329 = *((_OWORD *)v312 + 6);
            *(_OWORD *)(v311 + 106) = *(_OWORD *)(v312 + 106);
            *((_OWORD *)v311 + 5) = v328;
            *((_OWORD *)v311 + 6) = v329;
            *((_OWORD *)v311 + 4) = v327;
            v330 = v13;
          }
          *((_BYTE *)a1 + v309[6]) = *((_BYTE *)a2 + v309[6]);
          *((_BYTE *)a1 + v309[7]) = *((_BYTE *)a2 + v309[7]);
          *((_BYTE *)a1 + v309[8]) = *((_BYTE *)a2 + v309[8]);
          *((_BYTE *)a1 + v309[9]) = *((_BYTE *)a2 + v309[9]);
          *((_BYTE *)a1 + v309[10]) = *((_BYTE *)a2 + v309[10]);
          v337 = v309[11];
          v338 = *(void **)((char *)a2 + v337);
          *(void **)((char *)a1 + v337) = v338;
          v339 = v338;
          v105 = a1;
          v106 = v330;
          v107 = 1;
          goto LABEL_201;
        case 2u:
          v76 = *a2;
          *a1 = *a2;
          v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v78 = (void **)((char *)a1 + v77);
          v79 = (void **)((char *)a2 + v77);
          v80 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v81 = *(_QWORD *)(v80 - 8);
          v82 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v81 + 48);
          v83 = v76;
          if (v82(v79, 1, v80))
          {
            v84 = sub_10002A750(&qword_100644980);
            memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v79, v80))
            {
              case 1u:
                v150 = *v79;
                *v78 = *v79;
                v151 = v150;
                v152 = v78;
                v153 = v80;
                v154 = 1;
                goto LABEL_176;
              case 2u:
                v370 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v78, v79, v370);
                v152 = v78;
                v153 = v80;
                v154 = 2;
                goto LABEL_176;
              case 3u:
                v371 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v78, v79, v371);
                v152 = v78;
                v153 = v80;
                v154 = 3;
                goto LABEL_176;
              case 4u:
                v372 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v78, v79, v372);
                v152 = v78;
                v153 = v80;
                v154 = 4;
                goto LABEL_176;
              case 5u:
                v373 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v78, v79, v373);
                v152 = v78;
                v153 = v80;
                v154 = 5;
                goto LABEL_176;
              case 6u:
                v374 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v78, v79, v374);
                v152 = v78;
                v153 = v80;
                v154 = 6;
                goto LABEL_176;
              case 8u:
                v375 = *v79;
                *v78 = *v79;
                v376 = v375;
                v152 = v78;
                v153 = v80;
                v154 = 8;
                goto LABEL_176;
              case 9u:
                v377 = *v79;
                *v78 = *v79;
                v378 = v377;
                v152 = v78;
                v153 = v80;
                v154 = 9;
LABEL_176:
                swift_storeEnumTagMultiPayload(v152, v153, v154);
                break;
              default:
                memcpy(v78, v79, *(_QWORD *)(v81 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
          }
          v105 = a1;
          v106 = v13;
          v107 = 2;
          goto LABEL_201;
        case 3u:
          v85 = *a2;
          *a1 = *a2;
          v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v87 = (void **)((char *)a1 + v86);
          v88 = (void **)((char *)a2 + v86);
          v89 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v90 = *(_QWORD *)(v89 - 8);
          v91 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v90 + 48);
          v92 = v85;
          if (v91(v88, 1, v89))
          {
            v93 = sub_10002A750(&qword_100644980);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v88, v89))
            {
              case 1u:
                v155 = *v88;
                *v87 = *v88;
                v156 = v155;
                v157 = v87;
                v158 = v89;
                v159 = 1;
                goto LABEL_187;
              case 2u:
                v379 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v87, v88, v379);
                v157 = v87;
                v158 = v89;
                v159 = 2;
                goto LABEL_187;
              case 3u:
                v380 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v87, v88, v380);
                v157 = v87;
                v158 = v89;
                v159 = 3;
                goto LABEL_187;
              case 4u:
                v381 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v87, v88, v381);
                v157 = v87;
                v158 = v89;
                v159 = 4;
                goto LABEL_187;
              case 5u:
                v382 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v87, v88, v382);
                v157 = v87;
                v158 = v89;
                v159 = 5;
                goto LABEL_187;
              case 6u:
                v383 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v87, v88, v383);
                v157 = v87;
                v158 = v89;
                v159 = 6;
                goto LABEL_187;
              case 8u:
                v384 = *v88;
                *v87 = *v88;
                v385 = v384;
                v157 = v87;
                v158 = v89;
                v159 = 8;
                goto LABEL_187;
              case 9u:
                v386 = *v88;
                *v87 = *v88;
                v387 = v386;
                v157 = v87;
                v158 = v89;
                v159 = 9;
LABEL_187:
                swift_storeEnumTagMultiPayload(v157, v158, v159);
                break;
              default:
                memcpy(v87, v88, *(_QWORD *)(v90 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
          }
          v105 = a1;
          v106 = v13;
          v107 = 3;
          goto LABEL_201;
        case 4u:
          v94 = *a2;
          *a1 = *a2;
          v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v96 = (void **)((char *)a1 + v95);
          v97 = (void **)((char *)a2 + v95);
          v98 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v99 = *(_QWORD *)(v98 - 8);
          v100 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48);
          v101 = v94;
          if (v100(v97, 1, v98))
          {
            v102 = sub_10002A750(&qword_100644980);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v97, v98))
            {
              case 1u:
                v160 = *v97;
                *v96 = *v97;
                v161 = v160;
                v162 = v96;
                v163 = v98;
                v164 = 1;
                goto LABEL_198;
              case 2u:
                v388 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v96, v97, v388);
                v162 = v96;
                v163 = v98;
                v164 = 2;
                goto LABEL_198;
              case 3u:
                v389 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v96, v97, v389);
                v162 = v96;
                v163 = v98;
                v164 = 3;
                goto LABEL_198;
              case 4u:
                v390 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v96, v97, v390);
                v162 = v96;
                v163 = v98;
                v164 = 4;
                goto LABEL_198;
              case 5u:
                v391 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v96, v97, v391);
                v162 = v96;
                v163 = v98;
                v164 = 5;
                goto LABEL_198;
              case 6u:
                v392 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v392 - 8) + 16))(v96, v97, v392);
                v162 = v96;
                v163 = v98;
                v164 = 6;
                goto LABEL_198;
              case 8u:
                v393 = *v97;
                *v96 = *v97;
                v394 = v393;
                v162 = v96;
                v163 = v98;
                v164 = 8;
                goto LABEL_198;
              case 9u:
                v395 = *v97;
                *v96 = *v97;
                v396 = v395;
                v162 = v96;
                v163 = v98;
                v164 = 9;
LABEL_198:
                swift_storeEnumTagMultiPayload(v162, v163, v164);
                break;
              default:
                memcpy(v96, v97, *(_QWORD *)(v99 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          v105 = a1;
          v106 = v13;
          v107 = 4;
          goto LABEL_201;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v103 = a2[2];
          a1[2] = v103;
          v104 = v103;
          v105 = a1;
          v106 = v13;
          v107 = 5;
          goto LABEL_201;
        case 6u:
          v115 = *a2;
          *a1 = *a2;
          v116 = v115;
          v105 = a1;
          v106 = v13;
          v107 = 6;
          goto LABEL_201;
        case 7u:
          v108 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v109 = *(_QWORD *)(v108 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v109 + 48))(a2, 1, v108))
          {
            v110 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          }
          else
          {
            v165 = *a2;
            *a1 = *a2;
            v166 = *(int *)(v108 + 20);
            v407 = (char *)a1 + v166;
            v167 = (char *)a2 + v166;
            v168 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v169 = v13;
            v170 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v168 - 8) + 16);
            v171 = swift_bridgeObjectRetain(v165);
            v170(v407, v167, v168, v171);
            v13 = v169;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v109 + 56))(a1, 0, 1, v108);
          }
          v172 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v173 = (void **)((char *)a1 + v172);
          v174 = (void **)((char *)a2 + v172);
          if (v174[1])
          {
            *v173 = *v174;
            v175 = v174[1];
            v173[1] = v175;
            v176 = (void *)v174[2];
            v173[2] = v176;
            swift_bridgeObjectRetain(v175);
            v177 = v176;
          }
          else
          {
            v179 = *(_OWORD *)v174;
            v173[2] = v174[2];
            *(_OWORD *)v173 = v179;
          }
          v105 = a1;
          v106 = v13;
          v107 = 7;
          goto LABEL_201;
        case 8u:
          v117 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v118 = *(_QWORD *)(v117 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v118 + 48))(a2, 1, v117))
          {
            v119 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
          }
          else
          {
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(a1, a2, v180);
            *((_BYTE *)a1 + *(int *)(v117 + 20)) = *((_BYTE *)a2 + *(int *)(v117 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v117);
          }
          v181 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v181 + 20)) = *(void **)((char *)a2 + *(int *)(v181 + 20));
          v105 = a1;
          v106 = v13;
          v107 = 8;
          goto LABEL_201;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v111 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v112 = (char *)a1 + v111;
          v113 = (char *)a2 + v111;
          v114 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
          v105 = a1;
          v106 = v13;
          v107 = 9;
LABEL_201:
          swift_storeEnumTagMultiPayload(v105, v106, v107);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v367 = a1;
      v368 = v4;
      v369 = 1;
      goto LABEL_203;
    }
    if (!EnumCaseMultiPayload)
    {
      v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v413 = v6;
          v417 = v4;
          switch(swift_getEnumCaseMultiPayload(a2, v7))
          {
            case 1u:
              v8 = *a2;
              *a1 = *a2;
              v9 = v8;
              v10 = a1;
              v11 = v7;
              v12 = 1;
              goto LABEL_77;
            case 2u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
              v10 = a1;
              v11 = v7;
              v12 = 2;
              goto LABEL_77;
            case 3u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v10 = a1;
              v11 = v7;
              v12 = 3;
              goto LABEL_77;
            case 4u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v10 = a1;
              v11 = v7;
              v12 = 4;
              goto LABEL_77;
            case 5u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v10 = a1;
              v11 = v7;
              v12 = 5;
              goto LABEL_77;
            case 6u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v10 = a1;
              v11 = v7;
              v12 = 6;
              goto LABEL_77;
            case 8u:
              v187 = *a2;
              *a1 = *a2;
              v188 = v187;
              v10 = a1;
              v11 = v7;
              v12 = 8;
              goto LABEL_77;
            case 9u:
              v189 = *a2;
              *a1 = *a2;
              v190 = v189;
              v10 = a1;
              v11 = v7;
              v12 = 9;
LABEL_77:
              swift_storeEnumTagMultiPayload(v10, v11, v12);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v191 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v192 = v191[5];
          v193 = (char *)a1 + v192;
          v194 = (char *)a2 + v192;
          if (*(void **)((char *)a2 + v192 + 8))
          {
            *(_QWORD *)v193 = *(_QWORD *)v194;
            v195 = *((_QWORD *)v194 + 1);
            *((_QWORD *)v193 + 1) = v195;
            v196 = (void *)*((_QWORD *)v194 + 2);
            v197 = *((_QWORD *)v194 + 3);
            v198 = *((_QWORD *)v194 + 4);
            v199 = *((_QWORD *)v194 + 5);
            v200 = *((_QWORD *)v194 + 6);
            v408 = *((_QWORD *)v194 + 7);
            v398 = v194[64];
            swift_bridgeObjectRetain(v195);
            sub_10003E1F0(v196, v197, v198, v199, v200, v408, v398);
            *((_QWORD *)v193 + 2) = v196;
            *((_QWORD *)v193 + 3) = v197;
            *((_QWORD *)v193 + 4) = v198;
            *((_QWORD *)v193 + 5) = v199;
            *((_QWORD *)v193 + 6) = v200;
            *((_QWORD *)v193 + 7) = v408;
            v193[64] = v398;
            v193[65] = v194[65];
            v193[66] = v194[66];
            v193[67] = v194[67];
            v193[68] = v194[68];
            v201 = v194[120];
            if (v201 == 255)
            {
              v202 = *(_OWORD *)(v194 + 72);
              v203 = *(_OWORD *)(v194 + 88);
              v204 = *(_OWORD *)(v194 + 104);
              v193[120] = v194[120];
              *(_OWORD *)(v193 + 88) = v203;
              *(_OWORD *)(v193 + 104) = v204;
              *(_OWORD *)(v193 + 72) = v202;
            }
            else
            {
              v409 = v201 & 1;
              v212 = *((_QWORD *)v194 + 10);
              v399 = (void *)*((_QWORD *)v194 + 9);
              v213 = *((_QWORD *)v194 + 11);
              v214 = *((_QWORD *)v194 + 12);
              v215 = *((_QWORD *)v194 + 13);
              v216 = *((_QWORD *)v194 + 14);
              sub_10002B764(v399, v212, v213, v214, v215, v216, v201 & 1);
              *((_QWORD *)v193 + 9) = v399;
              *((_QWORD *)v193 + 10) = v212;
              *((_QWORD *)v193 + 11) = v213;
              *((_QWORD *)v193 + 12) = v214;
              *((_QWORD *)v193 + 13) = v215;
              *((_QWORD *)v193 + 14) = v216;
              v193[120] = v409;
            }
            v211 = v413;
            v4 = v417;
            v193[121] = v194[121];
          }
          else
          {
            v205 = *(_OWORD *)v194;
            v206 = *((_OWORD *)v194 + 1);
            v207 = *((_OWORD *)v194 + 3);
            *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
            *((_OWORD *)v193 + 3) = v207;
            *(_OWORD *)v193 = v205;
            *((_OWORD *)v193 + 1) = v206;
            v208 = *((_OWORD *)v194 + 4);
            v209 = *((_OWORD *)v194 + 5);
            v210 = *((_OWORD *)v194 + 6);
            *(_OWORD *)(v193 + 106) = *(_OWORD *)(v194 + 106);
            *((_OWORD *)v193 + 5) = v209;
            *((_OWORD *)v193 + 6) = v210;
            *((_OWORD *)v193 + 4) = v208;
            v211 = v6;
          }
          *((_BYTE *)a1 + v191[6]) = *((_BYTE *)a2 + v191[6]);
          *((_BYTE *)a1 + v191[7]) = *((_BYTE *)a2 + v191[7]);
          *((_BYTE *)a1 + v191[8]) = *((_BYTE *)a2 + v191[8]);
          *((_BYTE *)a1 + v191[9]) = *((_BYTE *)a2 + v191[9]);
          *((_BYTE *)a1 + v191[10]) = *((_BYTE *)a2 + v191[10]);
          v217 = v191[11];
          v218 = *(void **)((char *)a2 + v217);
          *(void **)((char *)a1 + v217) = v218;
          v219 = v218;
          v55 = a1;
          v56 = v211;
          v57 = 0;
          goto LABEL_166;
        case 1u:
          v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v415 = v6;
          v418 = v4;
          switch(swift_getEnumCaseMultiPayload(a2, v20))
          {
            case 1u:
              v21 = *a2;
              *a1 = *a2;
              v22 = v21;
              v23 = a1;
              v24 = v20;
              v25 = 1;
              goto LABEL_109;
            case 2u:
              v260 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(a1, a2, v260);
              v23 = a1;
              v24 = v20;
              v25 = 2;
              goto LABEL_109;
            case 3u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(a1, a2, v261);
              v23 = a1;
              v24 = v20;
              v25 = 3;
              goto LABEL_109;
            case 4u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(a1, a2, v262);
              v23 = a1;
              v24 = v20;
              v25 = 4;
              goto LABEL_109;
            case 5u:
              v263 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(a1, a2, v263);
              v23 = a1;
              v24 = v20;
              v25 = 5;
              goto LABEL_109;
            case 6u:
              v264 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(a1, a2, v264);
              v23 = a1;
              v24 = v20;
              v25 = 6;
              goto LABEL_109;
            case 8u:
              v265 = *a2;
              *a1 = *a2;
              v266 = v265;
              v23 = a1;
              v24 = v20;
              v25 = 8;
              goto LABEL_109;
            case 9u:
              v267 = *a2;
              *a1 = *a2;
              v268 = v267;
              v23 = a1;
              v24 = v20;
              v25 = 9;
LABEL_109:
              swift_storeEnumTagMultiPayload(v23, v24, v25);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
              break;
          }
          v269 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v270 = v269[5];
          v271 = (char *)a1 + v270;
          v272 = (char *)a2 + v270;
          if (*(void **)((char *)a2 + v270 + 8))
          {
            v411 = v269;
            *(_QWORD *)v271 = *(_QWORD *)v272;
            v273 = *((_QWORD *)v272 + 1);
            *((_QWORD *)v271 + 1) = v273;
            v274 = (void *)*((_QWORD *)v272 + 2);
            v275 = *((_QWORD *)v272 + 3);
            v276 = *((_QWORD *)v272 + 4);
            v277 = *((_QWORD *)v272 + 5);
            v278 = *((_QWORD *)v272 + 6);
            v402 = *((_QWORD *)v272 + 7);
            v279 = v272[64];
            swift_bridgeObjectRetain(v273);
            sub_10003E1F0(v274, v275, v276, v277, v278, v402, v279);
            *((_QWORD *)v271 + 2) = v274;
            *((_QWORD *)v271 + 3) = v275;
            *((_QWORD *)v271 + 4) = v276;
            *((_QWORD *)v271 + 5) = v277;
            *((_QWORD *)v271 + 6) = v278;
            *((_QWORD *)v271 + 7) = v402;
            v271[64] = v279;
            v271[65] = v272[65];
            v271[66] = v272[66];
            v271[67] = v272[67];
            v271[68] = v272[68];
            v280 = v272[120];
            if (v280 == 255)
            {
              v281 = *(_OWORD *)(v272 + 72);
              v282 = *(_OWORD *)(v272 + 88);
              v283 = *(_OWORD *)(v272 + 104);
              v271[120] = v272[120];
              *(_OWORD *)(v271 + 88) = v282;
              *(_OWORD *)(v271 + 104) = v283;
              *(_OWORD *)(v271 + 72) = v281;
            }
            else
            {
              v403 = v280 & 1;
              v292 = (void *)*((_QWORD *)v272 + 9);
              v291 = *((_QWORD *)v272 + 10);
              v293 = *((_QWORD *)v272 + 11);
              v294 = *((_QWORD *)v272 + 12);
              v295 = *((_QWORD *)v272 + 13);
              v296 = *((_QWORD *)v272 + 14);
              sub_10002B764(v292, v291, v293, v294, v295, v296, v280 & 1);
              *((_QWORD *)v271 + 9) = v292;
              *((_QWORD *)v271 + 10) = v291;
              *((_QWORD *)v271 + 11) = v293;
              *((_QWORD *)v271 + 12) = v294;
              *((_QWORD *)v271 + 13) = v295;
              *((_QWORD *)v271 + 14) = v296;
              v271[120] = v403;
            }
            v290 = v415;
            v4 = v418;
            v271[121] = v272[121];
            v269 = v411;
          }
          else
          {
            v284 = *(_OWORD *)v272;
            v285 = *((_OWORD *)v272 + 1);
            v286 = *((_OWORD *)v272 + 3);
            *((_OWORD *)v271 + 2) = *((_OWORD *)v272 + 2);
            *((_OWORD *)v271 + 3) = v286;
            *(_OWORD *)v271 = v284;
            *((_OWORD *)v271 + 1) = v285;
            v287 = *((_OWORD *)v272 + 4);
            v288 = *((_OWORD *)v272 + 5);
            v289 = *((_OWORD *)v272 + 6);
            *(_OWORD *)(v271 + 106) = *(_OWORD *)(v272 + 106);
            *((_OWORD *)v271 + 5) = v288;
            *((_OWORD *)v271 + 6) = v289;
            *((_OWORD *)v271 + 4) = v287;
            v290 = v6;
          }
          *((_BYTE *)a1 + v269[6]) = *((_BYTE *)a2 + v269[6]);
          *((_BYTE *)a1 + v269[7]) = *((_BYTE *)a2 + v269[7]);
          *((_BYTE *)a1 + v269[8]) = *((_BYTE *)a2 + v269[8]);
          *((_BYTE *)a1 + v269[9]) = *((_BYTE *)a2 + v269[9]);
          *((_BYTE *)a1 + v269[10]) = *((_BYTE *)a2 + v269[10]);
          v297 = v269[11];
          v298 = *(void **)((char *)a2 + v297);
          *(void **)((char *)a1 + v297) = v298;
          v299 = v298;
          v55 = a1;
          v56 = v290;
          v57 = 1;
          goto LABEL_166;
        case 2u:
          v26 = *a2;
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (void **)((char *)a1 + v27);
          v29 = (void **)((char *)a2 + v27);
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
          v33 = v26;
          if (v32(v29, 1, v30))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 1u:
                v120 = *v29;
                *v28 = *v29;
                v121 = v120;
                v122 = v28;
                v123 = v30;
                v124 = 1;
                goto LABEL_141;
              case 2u:
                v340 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v28, v29, v340);
                v122 = v28;
                v123 = v30;
                v124 = 2;
                goto LABEL_141;
              case 3u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v28, v29, v341);
                v122 = v28;
                v123 = v30;
                v124 = 3;
                goto LABEL_141;
              case 4u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v28, v29, v342);
                v122 = v28;
                v123 = v30;
                v124 = 4;
                goto LABEL_141;
              case 5u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v28, v29, v343);
                v122 = v28;
                v123 = v30;
                v124 = 5;
                goto LABEL_141;
              case 6u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v28, v29, v344);
                v122 = v28;
                v123 = v30;
                v124 = 6;
                goto LABEL_141;
              case 8u:
                v345 = *v29;
                *v28 = *v29;
                v346 = v345;
                v122 = v28;
                v123 = v30;
                v124 = 8;
                goto LABEL_141;
              case 9u:
                v347 = *v29;
                *v28 = *v29;
                v348 = v347;
                v122 = v28;
                v123 = v30;
                v124 = 9;
LABEL_141:
                swift_storeEnumTagMultiPayload(v122, v123, v124);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v55 = a1;
          v56 = v6;
          v57 = 2;
          goto LABEL_166;
        case 3u:
          v35 = *a2;
          *a1 = *a2;
          v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v37 = (void **)((char *)a1 + v36);
          v38 = (void **)((char *)a2 + v36);
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v40 = *(_QWORD *)(v39 - 8);
          v41 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48);
          v42 = v35;
          if (v41(v38, 1, v39))
          {
            v43 = sub_10002A750(&qword_100644980);
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v38, v39))
            {
              case 1u:
                v125 = *v38;
                *v37 = *v38;
                v126 = v125;
                v127 = v37;
                v128 = v39;
                v129 = 1;
                goto LABEL_152;
              case 2u:
                v349 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v37, v38, v349);
                v127 = v37;
                v128 = v39;
                v129 = 2;
                goto LABEL_152;
              case 3u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v37, v38, v350);
                v127 = v37;
                v128 = v39;
                v129 = 3;
                goto LABEL_152;
              case 4u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v37, v38, v351);
                v127 = v37;
                v128 = v39;
                v129 = 4;
                goto LABEL_152;
              case 5u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v37, v38, v352);
                v127 = v37;
                v128 = v39;
                v129 = 5;
                goto LABEL_152;
              case 6u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v37, v38, v353);
                v127 = v37;
                v128 = v39;
                v129 = 6;
                goto LABEL_152;
              case 8u:
                v354 = *v38;
                *v37 = *v38;
                v355 = v354;
                v127 = v37;
                v128 = v39;
                v129 = 8;
                goto LABEL_152;
              case 9u:
                v356 = *v38;
                *v37 = *v38;
                v357 = v356;
                v127 = v37;
                v128 = v39;
                v129 = 9;
LABEL_152:
                swift_storeEnumTagMultiPayload(v127, v128, v129);
                break;
              default:
                memcpy(v37, v38, *(_QWORD *)(v40 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          v55 = a1;
          v56 = v6;
          v57 = 3;
          goto LABEL_166;
        case 4u:
          v44 = *a2;
          *a1 = *a2;
          v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v46 = (void **)((char *)a1 + v45);
          v47 = (void **)((char *)a2 + v45);
          v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v49 = *(_QWORD *)(v48 - 8);
          v50 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48);
          v51 = v44;
          if (v50(v47, 1, v48))
          {
            v52 = sub_10002A750(&qword_100644980);
            memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v47, v48))
            {
              case 1u:
                v130 = *v47;
                *v46 = *v47;
                v131 = v130;
                v132 = v46;
                v133 = v48;
                v134 = 1;
                goto LABEL_163;
              case 2u:
                v358 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v46, v47, v358);
                v132 = v46;
                v133 = v48;
                v134 = 2;
                goto LABEL_163;
              case 3u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v46, v47, v359);
                v132 = v46;
                v133 = v48;
                v134 = 3;
                goto LABEL_163;
              case 4u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v46, v47, v360);
                v132 = v46;
                v133 = v48;
                v134 = 4;
                goto LABEL_163;
              case 5u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v46, v47, v361);
                v132 = v46;
                v133 = v48;
                v134 = 5;
                goto LABEL_163;
              case 6u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v46, v47, v362);
                v132 = v46;
                v133 = v48;
                v134 = 6;
                goto LABEL_163;
              case 8u:
                v363 = *v47;
                *v46 = *v47;
                v364 = v363;
                v132 = v46;
                v133 = v48;
                v134 = 8;
                goto LABEL_163;
              case 9u:
                v365 = *v47;
                *v46 = *v47;
                v366 = v365;
                v132 = v46;
                v133 = v48;
                v134 = 9;
LABEL_163:
                swift_storeEnumTagMultiPayload(v132, v133, v134);
                break;
              default:
                memcpy(v46, v47, *(_QWORD *)(v49 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
          }
          v55 = a1;
          v56 = v6;
          v57 = 4;
          goto LABEL_166;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v53 = a2[2];
          a1[2] = v53;
          v54 = v53;
          v55 = a1;
          v56 = v6;
          v57 = 5;
          goto LABEL_166;
        case 6u:
          v58 = *a2;
          *a1 = *a2;
          v59 = v58;
          v55 = a1;
          v56 = v6;
          v57 = 6;
          goto LABEL_166;
        case 7u:
          v60 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v61 = *(_QWORD *)(v60 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
          {
            v62 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            v135 = *a2;
            *a1 = *a2;
            v136 = *(int *)(v60 + 20);
            v406 = (char *)a1 + v136;
            v137 = (char *)a2 + v136;
            v138 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v139 = v6;
            v140 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v138 - 8) + 16);
            v141 = swift_bridgeObjectRetain(v135);
            v140(v406, v137, v138, v141);
            v6 = v139;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(a1, 0, 1, v60);
          }
          v142 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v143 = (void **)((char *)a1 + v142);
          v144 = (void **)((char *)a2 + v142);
          if (v144[1])
          {
            *v143 = *v144;
            v145 = v144[1];
            v143[1] = v145;
            v146 = (void *)v144[2];
            v143[2] = v146;
            swift_bridgeObjectRetain(v145);
            v147 = v146;
          }
          else
          {
            v178 = *(_OWORD *)v144;
            v143[2] = v144[2];
            *(_OWORD *)v143 = v178;
          }
          v55 = a1;
          v56 = v6;
          v57 = 7;
          goto LABEL_166;
        case 8u:
          v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v148 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(a1, a2, v148);
            *((_BYTE *)a1 + *(int *)(v63 + 20)) = *((_BYTE *)a2 + *(int *)(v63 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v149 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v149 + 20)) = *(void **)((char *)a2 + *(int *)(v149 + 20));
          v55 = a1;
          v56 = v6;
          v57 = 8;
          goto LABEL_166;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v67 = (char *)a1 + v66;
          v68 = (char *)a2 + v66;
          v69 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
          v55 = a1;
          v56 = v6;
          v57 = 9;
LABEL_166:
          swift_storeEnumTagMultiPayload(v55, v56, v57);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      v367 = a1;
      v368 = v4;
      v369 = 0;
LABEL_203:
      swift_storeEnumTagMultiPayload(v367, v368, v369);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10013B27C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  _OWORD *v135;
  _OWORD *v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  _OWORD *v147;
  _OWORD *v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  _OWORD *v159;
  _OWORD *v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  _OWORD *v171;
  _OWORD *v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v12))
    {
      case 0u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 2u:
            v14 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
            v15 = a1;
            v16 = v13;
            v17 = 2;
            goto LABEL_70;
          case 3u:
            v141 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(a1, a2, v141);
            v15 = a1;
            v16 = v13;
            v17 = 3;
            goto LABEL_70;
          case 4u:
            v142 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(a1, a2, v142);
            v15 = a1;
            v16 = v13;
            v17 = 4;
            goto LABEL_70;
          case 5u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
            v15 = a1;
            v16 = v13;
            v17 = 5;
            goto LABEL_70;
          case 6u:
            v144 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
            v15 = a1;
            v16 = v13;
            v17 = 6;
LABEL_70:
            swift_storeEnumTagMultiPayload(v15, v16, v17);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v145 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v146 = v145[5];
        v147 = (_OWORD *)((char *)a1 + v146);
        v148 = (_OWORD *)((char *)a2 + v146);
        v149 = v148[3];
        v147[2] = v148[2];
        v147[3] = v149;
        v150 = v148[1];
        *v147 = *v148;
        v147[1] = v150;
        *(_OWORD *)((char *)v147 + 106) = *(_OWORD *)((char *)v148 + 106);
        v151 = v148[6];
        v152 = v148[4];
        v147[5] = v148[5];
        v147[6] = v151;
        v147[4] = v152;
        *((_BYTE *)a1 + v145[6]) = *((_BYTE *)a2 + v145[6]);
        *((_BYTE *)a1 + v145[7]) = *((_BYTE *)a2 + v145[7]);
        *((_BYTE *)a1 + v145[8]) = *((_BYTE *)a2 + v145[8]);
        *((_BYTE *)a1 + v145[9]) = *((_BYTE *)a2 + v145[9]);
        *((_BYTE *)a1 + v145[10]) = *((_BYTE *)a2 + v145[10]);
        *(_QWORD *)((char *)a1 + v145[11]) = *(_QWORD *)((char *)a2 + v145[11]);
        v87 = a1;
        v88 = v12;
        v89 = 0;
        goto LABEL_135;
      case 1u:
        v54 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v54))
        {
          case 2u:
            v55 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(a1, a2, v55);
            v56 = a1;
            v57 = v54;
            v58 = 2;
            goto LABEL_84;
          case 3u:
            v165 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(a1, a2, v165);
            v56 = a1;
            v57 = v54;
            v58 = 3;
            goto LABEL_84;
          case 4u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(a1, a2, v166);
            v56 = a1;
            v57 = v54;
            v58 = 4;
            goto LABEL_84;
          case 5u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
            v56 = a1;
            v57 = v54;
            v58 = 5;
            goto LABEL_84;
          case 6u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
            v56 = a1;
            v57 = v54;
            v58 = 6;
LABEL_84:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        v169 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v170 = v169[5];
        v171 = (_OWORD *)((char *)a1 + v170);
        v172 = (_OWORD *)((char *)a2 + v170);
        v173 = v172[3];
        v171[2] = v172[2];
        v171[3] = v173;
        v174 = v172[1];
        *v171 = *v172;
        v171[1] = v174;
        *(_OWORD *)((char *)v171 + 106) = *(_OWORD *)((char *)v172 + 106);
        v175 = v172[6];
        v176 = v172[4];
        v171[5] = v172[5];
        v171[6] = v175;
        v171[4] = v176;
        *((_BYTE *)a1 + v169[6]) = *((_BYTE *)a2 + v169[6]);
        *((_BYTE *)a1 + v169[7]) = *((_BYTE *)a2 + v169[7]);
        *((_BYTE *)a1 + v169[8]) = *((_BYTE *)a2 + v169[8]);
        *((_BYTE *)a1 + v169[9]) = *((_BYTE *)a2 + v169[9]);
        *((_BYTE *)a1 + v169[10]) = *((_BYTE *)a2 + v169[10]);
        *(_QWORD *)((char *)a1 + v169[11]) = *(_QWORD *)((char *)a2 + v169[11]);
        v87 = a1;
        v88 = v12;
        v89 = 1;
        goto LABEL_135;
      case 2u:
        *a1 = *a2;
        v59 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        v62 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          v64 = sub_10002A750(&qword_100644980);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v61, v62))
          {
            case 2u:
              v111 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v60, v61, v111);
              v112 = v60;
              v113 = v62;
              v114 = 2;
              goto LABEL_117;
            case 3u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v60, v61, v192);
              v112 = v60;
              v113 = v62;
              v114 = 3;
              goto LABEL_117;
            case 4u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v60, v61, v193);
              v112 = v60;
              v113 = v62;
              v114 = 4;
              goto LABEL_117;
            case 5u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v60, v61, v194);
              v112 = v60;
              v113 = v62;
              v114 = 5;
              goto LABEL_117;
            case 6u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v60, v61, v195);
              v112 = v60;
              v113 = v62;
              v114 = 6;
LABEL_117:
              swift_storeEnumTagMultiPayload(v112, v113, v114);
              break;
            default:
              memcpy(v60, v61, *(_QWORD *)(v63 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        v87 = a1;
        v88 = v12;
        v89 = 2;
        goto LABEL_135;
      case 3u:
        *a1 = *a2;
        v65 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          v70 = sub_10002A750(&qword_100644980);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v67, v68))
          {
            case 2u:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v66, v67, v115);
              v116 = v66;
              v117 = v68;
              v118 = 2;
              goto LABEL_125;
            case 3u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v66, v67, v196);
              v116 = v66;
              v117 = v68;
              v118 = 3;
              goto LABEL_125;
            case 4u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v66, v67, v197);
              v116 = v66;
              v117 = v68;
              v118 = 4;
              goto LABEL_125;
            case 5u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v66, v67, v198);
              v116 = v66;
              v117 = v68;
              v118 = 5;
              goto LABEL_125;
            case 6u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v66, v67, v199);
              v116 = v66;
              v117 = v68;
              v118 = 6;
LABEL_125:
              swift_storeEnumTagMultiPayload(v116, v117, v118);
              break;
            default:
              memcpy(v66, v67, *(_QWORD *)(v69 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        v87 = a1;
        v88 = v12;
        v89 = 3;
        goto LABEL_135;
      case 4u:
        *a1 = *a2;
        v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v75 = *(_QWORD *)(v74 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
        {
          v76 = sub_10002A750(&qword_100644980);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v73, v74))
          {
            case 2u:
              v119 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v72, v73, v119);
              swift_storeEnumTagMultiPayload(v72, v74, 2);
              break;
            case 3u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v72, v73, v200);
              swift_storeEnumTagMultiPayload(v72, v74, 3);
              break;
            case 4u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v72, v73, v201);
              swift_storeEnumTagMultiPayload(v72, v74, 4);
              break;
            case 5u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v72, v73, v202);
              swift_storeEnumTagMultiPayload(v72, v74, 5);
              break;
            case 6u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v72, v73, v203);
              swift_storeEnumTagMultiPayload(v72, v74, 6);
              break;
            default:
              memcpy(v72, v73, *(_QWORD *)(v75 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        v87 = a1;
        v88 = v12;
        v89 = 4;
        goto LABEL_135;
      case 7u:
        v77 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v78 = *(_QWORD *)(v77 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v78 + 48))(a2, 1, v77))
        {
          v79 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v120 = *(int *)(v77 + 20);
          v121 = (char *)a1 + v120;
          v122 = (char *)a2 + v120;
          v123 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v78 + 56))(a1, 0, 1, v77);
        }
        v124 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v125 = (char *)a1 + v124;
        v126 = (char *)a2 + v124;
        *(_OWORD *)v125 = *(_OWORD *)v126;
        *((_QWORD *)v125 + 2) = *((_QWORD *)v126 + 2);
        v87 = a1;
        v88 = v12;
        v89 = 7;
        goto LABEL_135;
      case 8u:
        v80 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v81 = *(_QWORD *)(v80 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v81 + 48))(a2, 1, v80))
        {
          v82 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v127 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
          *((_BYTE *)a1 + *(int *)(v80 + 20)) = *((_BYTE *)a2 + *(int *)(v80 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56))(a1, 0, 1, v80);
        }
        v128 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v128 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v128 + 20));
        v87 = a1;
        v88 = v12;
        v89 = 8;
        goto LABEL_135;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v83 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        v86 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
        v87 = a1;
        v88 = v12;
        v89 = 9;
LABEL_135:
        swift_storeEnumTagMultiPayload(v87, v88, v89);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v189 = a1;
    v190 = v4;
    v191 = 1;
    goto LABEL_137;
  }
  if (!EnumCaseMultiPayload)
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_63;
          case 3u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(a1, a2, v129);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_63;
          case 4u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(a1, a2, v130);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_63;
          case 5u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_63;
          case 6u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v133 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v134 = v133[5];
        v135 = (_OWORD *)((char *)a1 + v134);
        v136 = (_OWORD *)((char *)a2 + v134);
        v137 = v136[3];
        v135[2] = v136[2];
        v135[3] = v137;
        v138 = v136[1];
        *v135 = *v136;
        v135[1] = v138;
        *(_OWORD *)((char *)v135 + 106) = *(_OWORD *)((char *)v136 + 106);
        v139 = v136[6];
        v140 = v136[4];
        v135[5] = v136[5];
        v135[6] = v139;
        v135[4] = v140;
        *((_BYTE *)a1 + v133[6]) = *((_BYTE *)a2 + v133[6]);
        *((_BYTE *)a1 + v133[7]) = *((_BYTE *)a2 + v133[7]);
        *((_BYTE *)a1 + v133[8]) = *((_BYTE *)a2 + v133[8]);
        *((_BYTE *)a1 + v133[9]) = *((_BYTE *)a2 + v133[9]);
        *((_BYTE *)a1 + v133[10]) = *((_BYTE *)a2 + v133[10]);
        *(_QWORD *)((char *)a1 + v133[11]) = *(_QWORD *)((char *)a2 + v133[11]);
        v51 = a1;
        v52 = v6;
        v53 = 0;
        goto LABEL_110;
      case 1u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v18))
        {
          case 2u:
            v19 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
            v20 = a1;
            v21 = v18;
            v22 = 2;
            goto LABEL_77;
          case 3u:
            v153 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(a1, a2, v153);
            v20 = a1;
            v21 = v18;
            v22 = 3;
            goto LABEL_77;
          case 4u:
            v154 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(a1, a2, v154);
            v20 = a1;
            v21 = v18;
            v22 = 4;
            goto LABEL_77;
          case 5u:
            v155 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
            v20 = a1;
            v21 = v18;
            v22 = 5;
            goto LABEL_77;
          case 6u:
            v156 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
            v20 = a1;
            v21 = v18;
            v22 = 6;
LABEL_77:
            swift_storeEnumTagMultiPayload(v20, v21, v22);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v157 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v158 = v157[5];
        v159 = (_OWORD *)((char *)a1 + v158);
        v160 = (_OWORD *)((char *)a2 + v158);
        v161 = v160[3];
        v159[2] = v160[2];
        v159[3] = v161;
        v162 = v160[1];
        *v159 = *v160;
        v159[1] = v162;
        *(_OWORD *)((char *)v159 + 106) = *(_OWORD *)((char *)v160 + 106);
        v163 = v160[6];
        v164 = v160[4];
        v159[5] = v160[5];
        v159[6] = v163;
        v159[4] = v164;
        *((_BYTE *)a1 + v157[6]) = *((_BYTE *)a2 + v157[6]);
        *((_BYTE *)a1 + v157[7]) = *((_BYTE *)a2 + v157[7]);
        *((_BYTE *)a1 + v157[8]) = *((_BYTE *)a2 + v157[8]);
        *((_BYTE *)a1 + v157[9]) = *((_BYTE *)a2 + v157[9]);
        *((_BYTE *)a1 + v157[10]) = *((_BYTE *)a2 + v157[10]);
        *(_QWORD *)((char *)a1 + v157[11]) = *(_QWORD *)((char *)a2 + v157[11]);
        v51 = a1;
        v52 = v6;
        v53 = 1;
        goto LABEL_110;
      case 2u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v90 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v24, v25, v90);
              v91 = v24;
              v92 = v26;
              v93 = 2;
              goto LABEL_91;
            case 3u:
              v177 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v24, v25, v177);
              v91 = v24;
              v92 = v26;
              v93 = 3;
              goto LABEL_91;
            case 4u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v24, v25, v178);
              v91 = v24;
              v92 = v26;
              v93 = 4;
              goto LABEL_91;
            case 5u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v24, v25, v179);
              v91 = v24;
              v92 = v26;
              v93 = 5;
              goto LABEL_91;
            case 6u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v24, v25, v180);
              v91 = v24;
              v92 = v26;
              v93 = 6;
LABEL_91:
              swift_storeEnumTagMultiPayload(v91, v92, v93);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v51 = a1;
        v52 = v6;
        v53 = 2;
        goto LABEL_110;
      case 3u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v30, v31, v94);
              v95 = v30;
              v96 = v32;
              v97 = 2;
              goto LABEL_99;
            case 3u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v30, v31, v181);
              v95 = v30;
              v96 = v32;
              v97 = 3;
              goto LABEL_99;
            case 4u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v30, v31, v182);
              v95 = v30;
              v96 = v32;
              v97 = 4;
              goto LABEL_99;
            case 5u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v30, v31, v183);
              v95 = v30;
              v96 = v32;
              v97 = 5;
              goto LABEL_99;
            case 6u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v30, v31, v184);
              v95 = v30;
              v96 = v32;
              v97 = 6;
LABEL_99:
              swift_storeEnumTagMultiPayload(v95, v96, v97);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v51 = a1;
        v52 = v6;
        v53 = 3;
        goto LABEL_110;
      case 4u:
        *a1 = *a2;
        v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
        {
          v40 = sub_10002A750(&qword_100644980);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v37, v38))
          {
            case 2u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v36, v37, v98);
              v99 = v36;
              v100 = v38;
              v101 = 2;
              goto LABEL_107;
            case 3u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v36, v37, v185);
              v99 = v36;
              v100 = v38;
              v101 = 3;
              goto LABEL_107;
            case 4u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v36, v37, v186);
              v99 = v36;
              v100 = v38;
              v101 = 4;
              goto LABEL_107;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v36, v37, v187);
              v99 = v36;
              v100 = v38;
              v101 = 5;
              goto LABEL_107;
            case 6u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v36, v37, v188);
              v99 = v36;
              v100 = v38;
              v101 = 6;
LABEL_107:
              swift_storeEnumTagMultiPayload(v99, v100, v101);
              break;
            default:
              memcpy(v36, v37, *(_QWORD *)(v39 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        v51 = a1;
        v52 = v6;
        v53 = 4;
        goto LABEL_110;
      case 7u:
        v41 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v42 = *(_QWORD *)(v41 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(a2, 1, v41))
        {
          v43 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v102 = *(int *)(v41 + 20);
          v103 = (char *)a1 + v102;
          v104 = (char *)a2 + v102;
          v105 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v41);
        }
        v106 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v107 = (char *)a1 + v106;
        v108 = (char *)a2 + v106;
        *(_OWORD *)v107 = *(_OWORD *)v108;
        *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
        v51 = a1;
        v52 = v6;
        v53 = 7;
        goto LABEL_110;
      case 8u:
        v44 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48))(a2, 1, v44))
        {
          v46 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v109 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(a1, a2, v109);
          *((_BYTE *)a1 + *(int *)(v44 + 20)) = *((_BYTE *)a2 + *(int *)(v44 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(a1, 0, 1, v44);
        }
        v110 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v110 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v110 + 20));
        v51 = a1;
        v52 = v6;
        v53 = 8;
        goto LABEL_110;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v47 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        v51 = a1;
        v52 = v6;
        v53 = 9;
LABEL_110:
        swift_storeEnumTagMultiPayload(v51, v52, v53);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v189 = a1;
    v190 = v4;
    v191 = 0;
LABEL_137:
    swift_storeEnumTagMultiPayload(v189, v190, v191);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

_QWORD *sub_10013C954(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  _OWORD *v138;
  _OWORD *v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  _OWORD *v150;
  _OWORD *v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  _OWORD *v162;
  _OWORD *v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  _OWORD *v174;
  _OWORD *v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
    v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 0u:
          v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v13))
          {
            case 2u:
              v14 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
              v15 = a1;
              v16 = v13;
              v17 = 2;
              goto LABEL_71;
            case 3u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
              v15 = a1;
              v16 = v13;
              v17 = 3;
              goto LABEL_71;
            case 4u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
              v15 = a1;
              v16 = v13;
              v17 = 4;
              goto LABEL_71;
            case 5u:
              v146 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
              v15 = a1;
              v16 = v13;
              v17 = 5;
              goto LABEL_71;
            case 6u:
              v147 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
              v15 = a1;
              v16 = v13;
              v17 = 6;
LABEL_71:
              swift_storeEnumTagMultiPayload(v15, v16, v17);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
              break;
          }
          v148 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v149 = v148[5];
          v150 = (_OWORD *)((char *)a1 + v149);
          v151 = (_OWORD *)((char *)a2 + v149);
          v152 = v151[3];
          v150[2] = v151[2];
          v150[3] = v152;
          v153 = v151[1];
          *v150 = *v151;
          v150[1] = v153;
          *(_OWORD *)((char *)v150 + 106) = *(_OWORD *)((char *)v151 + 106);
          v154 = v151[6];
          v155 = v151[4];
          v150[5] = v151[5];
          v150[6] = v154;
          v150[4] = v155;
          *((_BYTE *)a1 + v148[6]) = *((_BYTE *)a2 + v148[6]);
          *((_BYTE *)a1 + v148[7]) = *((_BYTE *)a2 + v148[7]);
          *((_BYTE *)a1 + v148[8]) = *((_BYTE *)a2 + v148[8]);
          *((_BYTE *)a1 + v148[9]) = *((_BYTE *)a2 + v148[9]);
          *((_BYTE *)a1 + v148[10]) = *((_BYTE *)a2 + v148[10]);
          *(_QWORD *)((char *)a1 + v148[11]) = *(_QWORD *)((char *)a2 + v148[11]);
          v87 = a1;
          v88 = v12;
          v89 = 0;
          goto LABEL_137;
        case 1u:
          v54 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v54))
          {
            case 2u:
              v55 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(a1, a2, v55);
              v56 = a1;
              v57 = v54;
              v58 = 2;
              goto LABEL_85;
            case 3u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
              v56 = a1;
              v57 = v54;
              v58 = 3;
              goto LABEL_85;
            case 4u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
              v56 = a1;
              v57 = v54;
              v58 = 4;
              goto LABEL_85;
            case 5u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
              v56 = a1;
              v57 = v54;
              v58 = 5;
              goto LABEL_85;
            case 6u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
              v56 = a1;
              v57 = v54;
              v58 = 6;
LABEL_85:
              swift_storeEnumTagMultiPayload(v56, v57, v58);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
              break;
          }
          v172 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v173 = v172[5];
          v174 = (_OWORD *)((char *)a1 + v173);
          v175 = (_OWORD *)((char *)a2 + v173);
          v176 = v175[3];
          v174[2] = v175[2];
          v174[3] = v176;
          v177 = v175[1];
          *v174 = *v175;
          v174[1] = v177;
          *(_OWORD *)((char *)v174 + 106) = *(_OWORD *)((char *)v175 + 106);
          v178 = v175[6];
          v179 = v175[4];
          v174[5] = v175[5];
          v174[6] = v178;
          v174[4] = v179;
          *((_BYTE *)a1 + v172[6]) = *((_BYTE *)a2 + v172[6]);
          *((_BYTE *)a1 + v172[7]) = *((_BYTE *)a2 + v172[7]);
          *((_BYTE *)a1 + v172[8]) = *((_BYTE *)a2 + v172[8]);
          *((_BYTE *)a1 + v172[9]) = *((_BYTE *)a2 + v172[9]);
          *((_BYTE *)a1 + v172[10]) = *((_BYTE *)a2 + v172[10]);
          *(_QWORD *)((char *)a1 + v172[11]) = *(_QWORD *)((char *)a2 + v172[11]);
          v87 = a1;
          v88 = v12;
          v89 = 1;
          goto LABEL_137;
        case 2u:
          *a1 = *a2;
          v59 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v60 = (char *)a1 + v59;
          v61 = (char *)a2 + v59;
          v62 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          {
            v64 = sub_10002A750(&qword_100644980);
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v61, v62))
            {
              case 2u:
                v111 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v60, v61, v111);
                v112 = v60;
                v113 = v62;
                v114 = 2;
                goto LABEL_118;
              case 3u:
                v195 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v60, v61, v195);
                v112 = v60;
                v113 = v62;
                v114 = 3;
                goto LABEL_118;
              case 4u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v60, v61, v196);
                v112 = v60;
                v113 = v62;
                v114 = 4;
                goto LABEL_118;
              case 5u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v60, v61, v197);
                v112 = v60;
                v113 = v62;
                v114 = 5;
                goto LABEL_118;
              case 6u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v60, v61, v198);
                v112 = v60;
                v113 = v62;
                v114 = 6;
LABEL_118:
                swift_storeEnumTagMultiPayload(v112, v113, v114);
                break;
              default:
                memcpy(v60, v61, *(_QWORD *)(v63 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
          }
          v87 = a1;
          v88 = v12;
          v89 = 2;
          goto LABEL_137;
        case 3u:
          *a1 = *a2;
          v65 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v66 = (char *)a1 + v65;
          v67 = (char *)a2 + v65;
          v68 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v69 = *(_QWORD *)(v68 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
          {
            v70 = sub_10002A750(&qword_100644980);
            memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v67, v68))
            {
              case 2u:
                v115 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v66, v67, v115);
                v116 = v66;
                v117 = v68;
                v118 = 2;
                goto LABEL_126;
              case 3u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v66, v67, v199);
                v116 = v66;
                v117 = v68;
                v118 = 3;
                goto LABEL_126;
              case 4u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v66, v67, v200);
                v116 = v66;
                v117 = v68;
                v118 = 4;
                goto LABEL_126;
              case 5u:
                v201 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v66, v67, v201);
                v116 = v66;
                v117 = v68;
                v118 = 5;
                goto LABEL_126;
              case 6u:
                v202 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v66, v67, v202);
                v116 = v66;
                v117 = v68;
                v118 = 6;
LABEL_126:
                swift_storeEnumTagMultiPayload(v116, v117, v118);
                break;
              default:
                memcpy(v66, v67, *(_QWORD *)(v69 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
          }
          v87 = a1;
          v88 = v12;
          v89 = 3;
          goto LABEL_137;
        case 4u:
          *a1 = *a2;
          v71 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v72 = (char *)a1 + v71;
          v73 = (char *)a2 + v71;
          v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v75 = *(_QWORD *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
          {
            v76 = sub_10002A750(&qword_100644980);
            memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v73, v74))
            {
              case 2u:
                v119 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v72, v73, v119);
                v120 = v72;
                v121 = v74;
                v122 = 2;
                goto LABEL_134;
              case 3u:
                v203 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v72, v73, v203);
                v120 = v72;
                v121 = v74;
                v122 = 3;
                goto LABEL_134;
              case 4u:
                v204 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v72, v73, v204);
                v120 = v72;
                v121 = v74;
                v122 = 4;
                goto LABEL_134;
              case 5u:
                v205 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v72, v73, v205);
                v120 = v72;
                v121 = v74;
                v122 = 5;
                goto LABEL_134;
              case 6u:
                v206 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v72, v73, v206);
                v120 = v72;
                v121 = v74;
                v122 = 6;
LABEL_134:
                swift_storeEnumTagMultiPayload(v120, v121, v122);
                break;
              default:
                memcpy(v72, v73, *(_QWORD *)(v75 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
          }
          v87 = a1;
          v88 = v12;
          v89 = 4;
          goto LABEL_137;
        case 7u:
          v77 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v78 = *(_QWORD *)(v77 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v78 + 48))(a2, 1, v77))
          {
            v79 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v123 = *(int *)(v77 + 20);
            v124 = (char *)a1 + v123;
            v125 = (char *)a2 + v123;
            v126 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v78 + 56))(a1, 0, 1, v77);
          }
          v127 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v128 = (char *)a1 + v127;
          v129 = (char *)a2 + v127;
          *(_OWORD *)v128 = *(_OWORD *)v129;
          *((_QWORD *)v128 + 2) = *((_QWORD *)v129 + 2);
          v87 = a1;
          v88 = v12;
          v89 = 7;
          goto LABEL_137;
        case 8u:
          v80 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v81 = *(_QWORD *)(v80 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v81 + 48))(a2, 1, v80))
          {
            v82 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          }
          else
          {
            v130 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(a1, a2, v130);
            *((_BYTE *)a1 + *(int *)(v80 + 20)) = *((_BYTE *)a2 + *(int *)(v80 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56))(a1, 0, 1, v80);
          }
          v131 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v131 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v131 + 20));
          v87 = a1;
          v88 = v12;
          v89 = 8;
          goto LABEL_137;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v83 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v84 = (char *)a1 + v83;
          v85 = (char *)a2 + v83;
          v86 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
          v87 = a1;
          v88 = v12;
          v89 = 9;
LABEL_137:
          swift_storeEnumTagMultiPayload(v87, v88, v89);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v192 = a1;
      v193 = v4;
      v194 = 1;
      goto LABEL_139;
    }
    if (!EnumCaseMultiPayload)
    {
      v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v7))
          {
            case 2u:
              v8 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
              v9 = a1;
              v10 = v7;
              v11 = 2;
              goto LABEL_64;
            case 3u:
              v132 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
              v9 = a1;
              v10 = v7;
              v11 = 3;
              goto LABEL_64;
            case 4u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
              v9 = a1;
              v10 = v7;
              v11 = 4;
              goto LABEL_64;
            case 5u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
              v9 = a1;
              v10 = v7;
              v11 = 5;
              goto LABEL_64;
            case 6u:
              v135 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(a1, a2, v135);
              v9 = a1;
              v10 = v7;
              v11 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v9, v10, v11);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          v136 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v137 = v136[5];
          v138 = (_OWORD *)((char *)a1 + v137);
          v139 = (_OWORD *)((char *)a2 + v137);
          v140 = v139[3];
          v138[2] = v139[2];
          v138[3] = v140;
          v141 = v139[1];
          *v138 = *v139;
          v138[1] = v141;
          *(_OWORD *)((char *)v138 + 106) = *(_OWORD *)((char *)v139 + 106);
          v142 = v139[6];
          v143 = v139[4];
          v138[5] = v139[5];
          v138[6] = v142;
          v138[4] = v143;
          *((_BYTE *)a1 + v136[6]) = *((_BYTE *)a2 + v136[6]);
          *((_BYTE *)a1 + v136[7]) = *((_BYTE *)a2 + v136[7]);
          *((_BYTE *)a1 + v136[8]) = *((_BYTE *)a2 + v136[8]);
          *((_BYTE *)a1 + v136[9]) = *((_BYTE *)a2 + v136[9]);
          *((_BYTE *)a1 + v136[10]) = *((_BYTE *)a2 + v136[10]);
          *(_QWORD *)((char *)a1 + v136[11]) = *(_QWORD *)((char *)a2 + v136[11]);
          v51 = a1;
          v52 = v6;
          v53 = 0;
          goto LABEL_111;
        case 1u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 2u:
              v19 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
              v20 = a1;
              v21 = v18;
              v22 = 2;
              goto LABEL_78;
            case 3u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
              v20 = a1;
              v21 = v18;
              v22 = 3;
              goto LABEL_78;
            case 4u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
              v20 = a1;
              v21 = v18;
              v22 = 4;
              goto LABEL_78;
            case 5u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
              v20 = a1;
              v21 = v18;
              v22 = 5;
              goto LABEL_78;
            case 6u:
              v159 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
              v20 = a1;
              v21 = v18;
              v22 = 6;
LABEL_78:
              swift_storeEnumTagMultiPayload(v20, v21, v22);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v160 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v161 = v160[5];
          v162 = (_OWORD *)((char *)a1 + v161);
          v163 = (_OWORD *)((char *)a2 + v161);
          v164 = v163[3];
          v162[2] = v163[2];
          v162[3] = v164;
          v165 = v163[1];
          *v162 = *v163;
          v162[1] = v165;
          *(_OWORD *)((char *)v162 + 106) = *(_OWORD *)((char *)v163 + 106);
          v166 = v163[6];
          v167 = v163[4];
          v162[5] = v163[5];
          v162[6] = v166;
          v162[4] = v167;
          *((_BYTE *)a1 + v160[6]) = *((_BYTE *)a2 + v160[6]);
          *((_BYTE *)a1 + v160[7]) = *((_BYTE *)a2 + v160[7]);
          *((_BYTE *)a1 + v160[8]) = *((_BYTE *)a2 + v160[8]);
          *((_BYTE *)a1 + v160[9]) = *((_BYTE *)a2 + v160[9]);
          *((_BYTE *)a1 + v160[10]) = *((_BYTE *)a2 + v160[10]);
          *(_QWORD *)((char *)a1 + v160[11]) = *(_QWORD *)((char *)a2 + v160[11]);
          v51 = a1;
          v52 = v6;
          v53 = 1;
          goto LABEL_111;
        case 2u:
          *a1 = *a2;
          v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            v28 = sub_10002A750(&qword_100644980);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v25, v26))
            {
              case 2u:
                v90 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v24, v25, v90);
                v91 = v24;
                v92 = v26;
                v93 = 2;
                goto LABEL_92;
              case 3u:
                v180 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v24, v25, v180);
                v91 = v24;
                v92 = v26;
                v93 = 3;
                goto LABEL_92;
              case 4u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v24, v25, v181);
                v91 = v24;
                v92 = v26;
                v93 = 4;
                goto LABEL_92;
              case 5u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v24, v25, v182);
                v91 = v24;
                v92 = v26;
                v93 = 5;
                goto LABEL_92;
              case 6u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v24, v25, v183);
                v91 = v24;
                v92 = v26;
                v93 = 6;
LABEL_92:
                swift_storeEnumTagMultiPayload(v91, v92, v93);
                break;
              default:
                memcpy(v24, v25, *(_QWORD *)(v27 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          v51 = a1;
          v52 = v6;
          v53 = 2;
          goto LABEL_111;
        case 3u:
          *a1 = *a2;
          v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v33 = *(_QWORD *)(v32 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v31, v32))
            {
              case 2u:
                v94 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v30, v31, v94);
                v95 = v30;
                v96 = v32;
                v97 = 2;
                goto LABEL_100;
              case 3u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v30, v31, v184);
                v95 = v30;
                v96 = v32;
                v97 = 3;
                goto LABEL_100;
              case 4u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v30, v31, v185);
                v95 = v30;
                v96 = v32;
                v97 = 4;
                goto LABEL_100;
              case 5u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v30, v31, v186);
                v95 = v30;
                v96 = v32;
                v97 = 5;
                goto LABEL_100;
              case 6u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v30, v31, v187);
                v95 = v30;
                v96 = v32;
                v97 = 6;
LABEL_100:
                swift_storeEnumTagMultiPayload(v95, v96, v97);
                break;
              default:
                memcpy(v30, v31, *(_QWORD *)(v33 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          }
          v51 = a1;
          v52 = v6;
          v53 = 3;
          goto LABEL_111;
        case 4u:
          *a1 = *a2;
          v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v36 = (char *)a1 + v35;
          v37 = (char *)a2 + v35;
          v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v39 = *(_QWORD *)(v38 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          {
            v40 = sub_10002A750(&qword_100644980);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v37, v38))
            {
              case 2u:
                v98 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v36, v37, v98);
                v99 = v36;
                v100 = v38;
                v101 = 2;
                goto LABEL_108;
              case 3u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v36, v37, v188);
                v99 = v36;
                v100 = v38;
                v101 = 3;
                goto LABEL_108;
              case 4u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v36, v37, v189);
                v99 = v36;
                v100 = v38;
                v101 = 4;
                goto LABEL_108;
              case 5u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v36, v37, v190);
                v99 = v36;
                v100 = v38;
                v101 = 5;
                goto LABEL_108;
              case 6u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v36, v37, v191);
                v99 = v36;
                v100 = v38;
                v101 = 6;
LABEL_108:
                swift_storeEnumTagMultiPayload(v99, v100, v101);
                break;
              default:
                memcpy(v36, v37, *(_QWORD *)(v39 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          }
          v51 = a1;
          v52 = v6;
          v53 = 4;
          goto LABEL_111;
        case 7u:
          v41 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(a2, 1, v41))
          {
            v43 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v102 = *(int *)(v41 + 20);
            v103 = (char *)a1 + v102;
            v104 = (char *)a2 + v102;
            v105 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v41);
          }
          v106 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v107 = (char *)a1 + v106;
          v108 = (char *)a2 + v106;
          *(_OWORD *)v107 = *(_OWORD *)v108;
          *((_QWORD *)v107 + 2) = *((_QWORD *)v108 + 2);
          v51 = a1;
          v52 = v6;
          v53 = 7;
          goto LABEL_111;
        case 8u:
          v44 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v45 = *(_QWORD *)(v44 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48))(a2, 1, v44))
          {
            v46 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
          }
          else
          {
            v109 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(a1, a2, v109);
            *((_BYTE *)a1 + *(int *)(v44 + 20)) = *((_BYTE *)a2 + *(int *)(v44 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(a1, 0, 1, v44);
          }
          v110 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v110 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v110 + 20));
          v51 = a1;
          v52 = v6;
          v53 = 8;
          goto LABEL_111;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v47 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v48 = (char *)a1 + v47;
          v49 = (char *)a2 + v47;
          v50 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
          v51 = a1;
          v52 = v6;
          v53 = 9;
LABEL_111:
          swift_storeEnumTagMultiPayload(v51, v52, v53);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      v192 = a1;
      v193 = v4;
      v194 = 0;
LABEL_139:
      swift_storeEnumTagMultiPayload(v192, v193, v194);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10013E034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10013E040);
}

uint64_t sub_10013E040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10013E07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10013E088);
}

uint64_t sub_10013E088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(uint64_t a1)
{
  return sub_100007328(a1, qword_1006488A0, (uint64_t)&nominal type descriptor for TTRIRemindersListMultipleSelectionInteractionSession);
}

uint64_t sub_10013E0DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_10013E144(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void **v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(void **, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  void **v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  void **v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t, __n128);
  __n128 v145;
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  void **v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void **v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  void **v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t, __n128);
  __n128 v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  uint64_t v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  int *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  int *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  int *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  id v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  int *v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  int v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  void *v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  id v316;
  void *v317;
  id v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  void *v326;
  id v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  id v334;
  void *v335;
  id v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  id v346;
  void *v347;
  id v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unsigned __int8 v374;
  void *v375;
  unsigned __int8 v376;
  void *v377;
  unsigned __int8 v378;
  void *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char v385;
  uint64_t v386;
  char v387;
  uint64_t v388;
  char v389;
  unsigned __int8 v390;
  char v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = a3;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v17))
      {
        case 0u:
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v394 = v17;
          switch(swift_getEnumCaseMultiPayload(a2, v18))
          {
            case 1u:
              v19 = *a2;
              *(_QWORD *)a1 = *a2;
              v20 = v19;
              v21 = a1;
              v22 = v18;
              v23 = 1;
              goto LABEL_94;
            case 2u:
              v215 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(a1, a2, v215);
              v21 = a1;
              v22 = v18;
              v23 = 2;
              goto LABEL_94;
            case 3u:
              v216 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
              v21 = a1;
              v22 = v18;
              v23 = 3;
              goto LABEL_94;
            case 4u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v21 = a1;
              v22 = v18;
              v23 = 4;
              goto LABEL_94;
            case 5u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v21 = a1;
              v22 = v18;
              v23 = 5;
              goto LABEL_94;
            case 6u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v21 = a1;
              v22 = v18;
              v23 = 6;
              goto LABEL_94;
            case 8u:
              v220 = *a2;
              *(_QWORD *)a1 = *a2;
              v221 = v220;
              v21 = a1;
              v22 = v18;
              v23 = 8;
              goto LABEL_94;
            case 9u:
              v222 = *a2;
              *(_QWORD *)a1 = *a2;
              v223 = v222;
              v21 = a1;
              v22 = v18;
              v23 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v21, v22, v23);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              break;
          }
          v224 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v225 = v224[5];
          v226 = &a1[v225];
          v227 = (char *)a2 + v225;
          v228 = *(uint64_t *)((char *)a2 + v225 + 8);
          if (v228)
          {
            *(_QWORD *)v226 = *(_QWORD *)v227;
            *((_QWORD *)v226 + 1) = v228;
            v229 = (void *)*((_QWORD *)v227 + 2);
            v230 = *((_QWORD *)v227 + 3);
            v231 = *((_QWORD *)v227 + 4);
            v232 = *((_QWORD *)v227 + 5);
            v370 = *((_QWORD *)v227 + 6);
            v386 = *((_QWORD *)v227 + 7);
            v376 = v227[64];
            swift_bridgeObjectRetain(v228);
            sub_10003E1F0(v229, v230, v231, v232, v370, v386, v376);
            *((_QWORD *)v226 + 2) = v229;
            *((_QWORD *)v226 + 3) = v230;
            *((_QWORD *)v226 + 4) = v231;
            *((_QWORD *)v226 + 5) = v232;
            *((_QWORD *)v226 + 6) = v370;
            *((_QWORD *)v226 + 7) = v386;
            v226[64] = v376;
            *(_DWORD *)(v226 + 65) = *(_DWORD *)(v227 + 65);
            v233 = v227[120];
            if (v233 == 255)
            {
              v234 = *(_OWORD *)(v227 + 88);
              *(_OWORD *)(v226 + 72) = *(_OWORD *)(v227 + 72);
              *(_OWORD *)(v226 + 88) = v234;
              *(_OWORD *)(v226 + 104) = *(_OWORD *)(v227 + 104);
              v226[120] = v227[120];
            }
            else
            {
              v387 = v233 & 1;
              v239 = *((_QWORD *)v227 + 10);
              v240 = *((_QWORD *)v227 + 11);
              v241 = *((_QWORD *)v227 + 12);
              v242 = *((_QWORD *)v227 + 13);
              v371 = *((_QWORD *)v227 + 14);
              v377 = (void *)*((_QWORD *)v227 + 9);
              sub_10002B764(v377, v239, v240, v241, v242, v371, v233 & 1);
              *((_QWORD *)v226 + 9) = v377;
              *((_QWORD *)v226 + 10) = v239;
              *((_QWORD *)v226 + 11) = v240;
              *((_QWORD *)v226 + 12) = v241;
              *((_QWORD *)v226 + 13) = v242;
              *((_QWORD *)v226 + 14) = v371;
              v226[120] = v387;
            }
            v238 = v394;
            v226[121] = v227[121];
          }
          else
          {
            v235 = *((_OWORD *)v227 + 5);
            *((_OWORD *)v226 + 4) = *((_OWORD *)v227 + 4);
            *((_OWORD *)v226 + 5) = v235;
            *((_OWORD *)v226 + 6) = *((_OWORD *)v227 + 6);
            *(_OWORD *)(v226 + 106) = *(_OWORD *)(v227 + 106);
            v236 = *((_OWORD *)v227 + 1);
            *(_OWORD *)v226 = *(_OWORD *)v227;
            *((_OWORD *)v226 + 1) = v236;
            v237 = *((_OWORD *)v227 + 3);
            *((_OWORD *)v226 + 2) = *((_OWORD *)v227 + 2);
            *((_OWORD *)v226 + 3) = v237;
            v238 = v17;
          }
          a1[v224[6]] = *((_BYTE *)a2 + v224[6]);
          a1[v224[7]] = *((_BYTE *)a2 + v224[7]);
          a1[v224[8]] = *((_BYTE *)a2 + v224[8]);
          a1[v224[9]] = *((_BYTE *)a2 + v224[9]);
          a1[v224[10]] = *((_BYTE *)a2 + v224[10]);
          v243 = v224[11];
          v244 = *(char **)((char *)a2 + v243);
          *(_QWORD *)&a1[v243] = v244;
          v245 = v244;
          v109 = a1;
          v110 = v238;
          v111 = 0;
          goto LABEL_202;
        case 1u:
          v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v392 = v7;
          v396 = v17;
          switch(swift_getEnumCaseMultiPayload(a2, v74))
          {
            case 1u:
              v75 = *a2;
              *(_QWORD *)a1 = *a2;
              v76 = v75;
              v77 = a1;
              v78 = v74;
              v79 = 1;
              goto LABEL_126;
            case 2u:
              v277 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(a1, a2, v277);
              v77 = a1;
              v78 = v74;
              v79 = 2;
              goto LABEL_126;
            case 3u:
              v278 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(a1, a2, v278);
              v77 = a1;
              v78 = v74;
              v79 = 3;
              goto LABEL_126;
            case 4u:
              v279 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v279 - 8) + 16))(a1, a2, v279);
              v77 = a1;
              v78 = v74;
              v79 = 4;
              goto LABEL_126;
            case 5u:
              v280 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(a1, a2, v280);
              v77 = a1;
              v78 = v74;
              v79 = 5;
              goto LABEL_126;
            case 6u:
              v281 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
              v77 = a1;
              v78 = v74;
              v79 = 6;
              goto LABEL_126;
            case 8u:
              v282 = *a2;
              *(_QWORD *)a1 = *a2;
              v283 = v282;
              v77 = a1;
              v78 = v74;
              v79 = 8;
              goto LABEL_126;
            case 9u:
              v284 = *a2;
              *(_QWORD *)a1 = *a2;
              v285 = v284;
              v77 = a1;
              v78 = v74;
              v79 = 9;
LABEL_126:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
              break;
          }
          v286 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v287 = v286[5];
          v288 = &a1[v287];
          v289 = (char *)a2 + v287;
          v290 = *(uint64_t *)((char *)a2 + v287 + 8);
          if (v290)
          {
            *(_QWORD *)v288 = *(_QWORD *)v289;
            *((_QWORD *)v288 + 1) = v290;
            v291 = (void *)*((_QWORD *)v289 + 2);
            v292 = *((_QWORD *)v289 + 3);
            v293 = *((_QWORD *)v289 + 4);
            v294 = *((_QWORD *)v289 + 5);
            v295 = *((_QWORD *)v289 + 6);
            v380 = *((_QWORD *)v289 + 7);
            v390 = v289[64];
            swift_bridgeObjectRetain(v290);
            sub_10003E1F0(v291, v292, v293, v294, v295, v380, v390);
            *((_QWORD *)v288 + 2) = v291;
            *((_QWORD *)v288 + 3) = v292;
            *((_QWORD *)v288 + 4) = v293;
            *((_QWORD *)v288 + 5) = v294;
            *((_QWORD *)v288 + 6) = v295;
            *((_QWORD *)v288 + 7) = v380;
            v288[64] = v390;
            *(_DWORD *)(v288 + 65) = *(_DWORD *)(v289 + 65);
            v296 = v289[120];
            if (v296 == 255)
            {
              v297 = *(_OWORD *)(v289 + 88);
              *(_OWORD *)(v288 + 72) = *(_OWORD *)(v289 + 72);
              *(_OWORD *)(v288 + 88) = v297;
              *(_OWORD *)(v288 + 104) = *(_OWORD *)(v289 + 104);
              v288[120] = v289[120];
            }
            else
            {
              v391 = v296 & 1;
              v303 = (void *)*((_QWORD *)v289 + 9);
              v302 = *((_QWORD *)v289 + 10);
              v304 = *((_QWORD *)v289 + 11);
              v305 = *((_QWORD *)v289 + 12);
              v306 = *((_QWORD *)v289 + 13);
              v381 = *((_QWORD *)v289 + 14);
              sub_10002B764(v303, v302, v304, v305, v306, v381, v296 & 1);
              *((_QWORD *)v288 + 9) = v303;
              *((_QWORD *)v288 + 10) = v302;
              *((_QWORD *)v288 + 11) = v304;
              *((_QWORD *)v288 + 12) = v305;
              *((_QWORD *)v288 + 13) = v306;
              *((_QWORD *)v288 + 14) = v381;
              v288[120] = v391;
            }
            v7 = v392;
            v301 = v396;
            v288[121] = v289[121];
          }
          else
          {
            v298 = *((_OWORD *)v289 + 5);
            *((_OWORD *)v288 + 4) = *((_OWORD *)v289 + 4);
            *((_OWORD *)v288 + 5) = v298;
            *((_OWORD *)v288 + 6) = *((_OWORD *)v289 + 6);
            *(_OWORD *)(v288 + 106) = *(_OWORD *)(v289 + 106);
            v299 = *((_OWORD *)v289 + 1);
            *(_OWORD *)v288 = *(_OWORD *)v289;
            *((_OWORD *)v288 + 1) = v299;
            v300 = *((_OWORD *)v289 + 3);
            *((_OWORD *)v288 + 2) = *((_OWORD *)v289 + 2);
            *((_OWORD *)v288 + 3) = v300;
            v301 = v17;
          }
          a1[v286[6]] = *((_BYTE *)a2 + v286[6]);
          a1[v286[7]] = *((_BYTE *)a2 + v286[7]);
          a1[v286[8]] = *((_BYTE *)a2 + v286[8]);
          a1[v286[9]] = *((_BYTE *)a2 + v286[9]);
          a1[v286[10]] = *((_BYTE *)a2 + v286[10]);
          v307 = v286[11];
          v308 = *(char **)((char *)a2 + v307);
          *(_QWORD *)&a1[v307] = v308;
          v309 = v308;
          v109 = a1;
          v110 = v301;
          v111 = 1;
          goto LABEL_202;
        case 2u:
          v80 = *a2;
          *(_QWORD *)a1 = *a2;
          v81 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v82 = (void **)&a1[v81];
          v83 = (void **)((char *)a2 + v81);
          v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v85 = *(_QWORD *)(v84 - 8);
          v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
          v87 = v80;
          if (v86(v83, 1, v84))
          {
            v88 = sub_10002A750(&qword_100644980);
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v83, v84))
            {
              case 1u:
                v154 = *v83;
                *v82 = *v83;
                v155 = v154;
                v156 = v82;
                v157 = v84;
                v158 = 1;
                goto LABEL_177;
              case 2u:
                v340 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v340 - 8) + 16))(v82, v83, v340);
                v156 = v82;
                v157 = v84;
                v158 = 2;
                goto LABEL_177;
              case 3u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v82, v83, v341);
                v156 = v82;
                v157 = v84;
                v158 = 3;
                goto LABEL_177;
              case 4u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v82, v83, v342);
                v156 = v82;
                v157 = v84;
                v158 = 4;
                goto LABEL_177;
              case 5u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v82, v83, v343);
                v156 = v82;
                v157 = v84;
                v158 = 5;
                goto LABEL_177;
              case 6u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v82, v83, v344);
                v156 = v82;
                v157 = v84;
                v158 = 6;
                goto LABEL_177;
              case 8u:
                v345 = *v83;
                *v82 = *v83;
                v346 = v345;
                v156 = v82;
                v157 = v84;
                v158 = 8;
                goto LABEL_177;
              case 9u:
                v347 = *v83;
                *v82 = *v83;
                v348 = v347;
                v156 = v82;
                v157 = v84;
                v158 = 9;
LABEL_177:
                swift_storeEnumTagMultiPayload(v156, v157, v158);
                break;
              default:
                memcpy(v82, v83, *(_QWORD *)(v85 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
          }
          v109 = a1;
          v110 = v17;
          v111 = 2;
          goto LABEL_202;
        case 3u:
          v89 = *a2;
          *(_QWORD *)a1 = *a2;
          v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v91 = (void **)&a1[v90];
          v92 = (void **)((char *)a2 + v90);
          v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v94 = *(_QWORD *)(v93 - 8);
          v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
          v96 = v89;
          if (v95(v92, 1, v93))
          {
            v97 = sub_10002A750(&qword_100644980);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v92, v93))
            {
              case 1u:
                v159 = *v92;
                *v91 = *v92;
                v160 = v159;
                v161 = v91;
                v162 = v93;
                v163 = 1;
                goto LABEL_188;
              case 2u:
                v349 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v349 - 8) + 16))(v91, v92, v349);
                v161 = v91;
                v162 = v93;
                v163 = 2;
                goto LABEL_188;
              case 3u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v91, v92, v350);
                v161 = v91;
                v162 = v93;
                v163 = 3;
                goto LABEL_188;
              case 4u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v91, v92, v351);
                v161 = v91;
                v162 = v93;
                v163 = 4;
                goto LABEL_188;
              case 5u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v91, v92, v352);
                v161 = v91;
                v162 = v93;
                v163 = 5;
                goto LABEL_188;
              case 6u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v91, v92, v353);
                v161 = v91;
                v162 = v93;
                v163 = 6;
                goto LABEL_188;
              case 8u:
                v354 = *v92;
                *v91 = *v92;
                v355 = v354;
                v161 = v91;
                v162 = v93;
                v163 = 8;
                goto LABEL_188;
              case 9u:
                v356 = *v92;
                *v91 = *v92;
                v357 = v356;
                v161 = v91;
                v162 = v93;
                v163 = 9;
LABEL_188:
                swift_storeEnumTagMultiPayload(v161, v162, v163);
                break;
              default:
                memcpy(v91, v92, *(_QWORD *)(v94 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          v109 = a1;
          v110 = v17;
          v111 = 3;
          goto LABEL_202;
        case 4u:
          v98 = *a2;
          *(_QWORD *)a1 = *a2;
          v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v100 = (void **)&a1[v99];
          v101 = (void **)((char *)a2 + v99);
          v102 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v103 = *(_QWORD *)(v102 - 8);
          v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48);
          v105 = v98;
          if (v104(v101, 1, v102))
          {
            v106 = sub_10002A750(&qword_100644980);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v101, v102))
            {
              case 1u:
                v164 = *v101;
                *v100 = *v101;
                v165 = v164;
                v166 = v100;
                v167 = v102;
                v168 = 1;
                goto LABEL_199;
              case 2u:
                v358 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v100, v101, v358);
                v166 = v100;
                v167 = v102;
                v168 = 2;
                goto LABEL_199;
              case 3u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v100, v101, v359);
                v166 = v100;
                v167 = v102;
                v168 = 3;
                goto LABEL_199;
              case 4u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v100, v101, v360);
                v166 = v100;
                v167 = v102;
                v168 = 4;
                goto LABEL_199;
              case 5u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v100, v101, v361);
                v166 = v100;
                v167 = v102;
                v168 = 5;
                goto LABEL_199;
              case 6u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v100, v101, v362);
                v166 = v100;
                v167 = v102;
                v168 = 6;
                goto LABEL_199;
              case 8u:
                v363 = *v101;
                *v100 = *v101;
                v364 = v363;
                v166 = v100;
                v167 = v102;
                v168 = 8;
                goto LABEL_199;
              case 9u:
                v365 = *v101;
                *v100 = *v101;
                v366 = v365;
                v166 = v100;
                v167 = v102;
                v168 = 9;
LABEL_199:
                swift_storeEnumTagMultiPayload(v166, v167, v168);
                break;
              default:
                memcpy(v100, v101, *(_QWORD *)(v103 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
          }
          v109 = a1;
          v110 = v17;
          v111 = 4;
          goto LABEL_202;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v107 = a2[2];
          *((_QWORD *)a1 + 2) = v107;
          v108 = v107;
          v109 = a1;
          v110 = v17;
          v111 = 5;
          goto LABEL_202;
        case 6u:
          v119 = *a2;
          *(_QWORD *)a1 = *a2;
          v120 = v119;
          v109 = a1;
          v110 = v17;
          v111 = 6;
          goto LABEL_202;
        case 7u:
          v112 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v113 = *(_QWORD *)(v112 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v113 + 48))(a2, 1, v112))
          {
            v114 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
          }
          else
          {
            v169 = *a2;
            *(_QWORD *)a1 = *a2;
            v170 = *(int *)(v112 + 20);
            v383 = &a1[v170];
            v171 = (char *)a2 + v170;
            v172 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v173 = v17;
            v174 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v172 - 8) + 16);
            v175 = swift_bridgeObjectRetain(v169);
            v174(v383, v171, v172, v175);
            v17 = v173;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(a1, 0, 1, v112);
          }
          v176 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v177 = &a1[v176];
          v178 = (char **)((char *)a2 + v176);
          v179 = v178[1];
          if (v179)
          {
            *(_QWORD *)v177 = *v178;
            *((_QWORD *)v177 + 1) = v179;
            v180 = (void *)v178[2];
            *((_QWORD *)v177 + 2) = v180;
            swift_bridgeObjectRetain(v179);
            v181 = v180;
          }
          else
          {
            *(_OWORD *)v177 = *(_OWORD *)v178;
            *((_QWORD *)v177 + 2) = v178[2];
          }
          v109 = a1;
          v110 = v17;
          v111 = 7;
          goto LABEL_202;
        case 8u:
          v121 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v122 = *(_QWORD *)(v121 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v122 + 48))(a2, 1, v121))
          {
            v123 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
          }
          else
          {
            v182 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            a1[*(int *)(v121 + 20)] = *((_BYTE *)a2 + *(int *)(v121 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(a1, 0, 1, v121);
          }
          v183 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v183 + 20)] = *(char **)((char *)a2 + *(int *)(v183 + 20));
          v109 = a1;
          v110 = v17;
          v111 = 8;
          goto LABEL_202;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v115 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v116 = &a1[v115];
          v117 = (char *)a2 + v115;
          v118 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
          v109 = a1;
          v110 = v17;
          v111 = 9;
LABEL_202:
          swift_storeEnumTagMultiPayload(v109, v110, v111);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v337 = a1;
      v338 = v7;
      v339 = 1;
      goto LABEL_204;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 0u:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v393 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *(_QWORD *)a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_78;
            case 2u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_78;
            case 3u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_78;
            case 4u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_78;
            case 5u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_78;
            case 6u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_78;
            case 8u:
              v189 = *a2;
              *(_QWORD *)a1 = *a2;
              v190 = v189;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_78;
            case 9u:
              v191 = *a2;
              *(_QWORD *)a1 = *a2;
              v192 = v191;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_78:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v193 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v194 = v193[5];
          v195 = &a1[v194];
          v196 = (char *)a2 + v194;
          v197 = *(uint64_t *)((char *)a2 + v194 + 8);
          if (v197)
          {
            *(_QWORD *)v195 = *(_QWORD *)v196;
            *((_QWORD *)v195 + 1) = v197;
            v198 = (void *)*((_QWORD *)v196 + 2);
            v199 = *((_QWORD *)v196 + 3);
            v200 = *((_QWORD *)v196 + 4);
            v201 = *((_QWORD *)v196 + 5);
            v368 = *((_QWORD *)v196 + 6);
            v384 = *((_QWORD *)v196 + 7);
            v374 = v196[64];
            swift_bridgeObjectRetain(v197);
            sub_10003E1F0(v198, v199, v200, v201, v368, v384, v374);
            *((_QWORD *)v195 + 2) = v198;
            *((_QWORD *)v195 + 3) = v199;
            *((_QWORD *)v195 + 4) = v200;
            *((_QWORD *)v195 + 5) = v201;
            *((_QWORD *)v195 + 6) = v368;
            *((_QWORD *)v195 + 7) = v384;
            v195[64] = v374;
            *(_DWORD *)(v195 + 65) = *(_DWORD *)(v196 + 65);
            v202 = v196[120];
            if (v202 == 255)
            {
              v203 = *(_OWORD *)(v196 + 88);
              *(_OWORD *)(v195 + 72) = *(_OWORD *)(v196 + 72);
              *(_OWORD *)(v195 + 88) = v203;
              *(_OWORD *)(v195 + 104) = *(_OWORD *)(v196 + 104);
              v195[120] = v196[120];
            }
            else
            {
              v385 = v202 & 1;
              v208 = *((_QWORD *)v196 + 10);
              v209 = *((_QWORD *)v196 + 11);
              v210 = *((_QWORD *)v196 + 12);
              v211 = *((_QWORD *)v196 + 13);
              v369 = *((_QWORD *)v196 + 14);
              v375 = (void *)*((_QWORD *)v196 + 9);
              sub_10002B764(v375, v208, v209, v210, v211, v369, v202 & 1);
              *((_QWORD *)v195 + 9) = v375;
              *((_QWORD *)v195 + 10) = v208;
              *((_QWORD *)v195 + 11) = v209;
              *((_QWORD *)v195 + 12) = v210;
              *((_QWORD *)v195 + 13) = v211;
              *((_QWORD *)v195 + 14) = v369;
              v195[120] = v385;
            }
            v207 = v393;
            v195[121] = v196[121];
          }
          else
          {
            v204 = *((_OWORD *)v196 + 5);
            *((_OWORD *)v195 + 4) = *((_OWORD *)v196 + 4);
            *((_OWORD *)v195 + 5) = v204;
            *((_OWORD *)v195 + 6) = *((_OWORD *)v196 + 6);
            *(_OWORD *)(v195 + 106) = *(_OWORD *)(v196 + 106);
            v205 = *((_OWORD *)v196 + 1);
            *(_OWORD *)v195 = *(_OWORD *)v196;
            *((_OWORD *)v195 + 1) = v205;
            v206 = *((_OWORD *)v196 + 3);
            *((_OWORD *)v195 + 2) = *((_OWORD *)v196 + 2);
            *((_OWORD *)v195 + 3) = v206;
            v207 = v9;
          }
          a1[v193[6]] = *((_BYTE *)a2 + v193[6]);
          a1[v193[7]] = *((_BYTE *)a2 + v193[7]);
          a1[v193[8]] = *((_BYTE *)a2 + v193[8]);
          a1[v193[9]] = *((_BYTE *)a2 + v193[9]);
          a1[v193[10]] = *((_BYTE *)a2 + v193[10]);
          v212 = v193[11];
          v213 = *(char **)((char *)a2 + v212);
          *(_QWORD *)&a1[v212] = v213;
          v214 = v213;
          v59 = a1;
          v60 = v207;
          v61 = 0;
          goto LABEL_167;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v395 = v9;
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 1u:
              v25 = *a2;
              *(_QWORD *)a1 = *a2;
              v26 = v25;
              v27 = a1;
              v28 = v24;
              v29 = 1;
              goto LABEL_110;
            case 2u:
              v246 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(a1, a2, v246);
              v27 = a1;
              v28 = v24;
              v29 = 2;
              goto LABEL_110;
            case 3u:
              v247 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
              v27 = a1;
              v28 = v24;
              v29 = 3;
              goto LABEL_110;
            case 4u:
              v248 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
              v27 = a1;
              v28 = v24;
              v29 = 4;
              goto LABEL_110;
            case 5u:
              v249 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
              v27 = a1;
              v28 = v24;
              v29 = 5;
              goto LABEL_110;
            case 6u:
              v250 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
              v27 = a1;
              v28 = v24;
              v29 = 6;
              goto LABEL_110;
            case 8u:
              v251 = *a2;
              *(_QWORD *)a1 = *a2;
              v252 = v251;
              v27 = a1;
              v28 = v24;
              v29 = 8;
              goto LABEL_110;
            case 9u:
              v253 = *a2;
              *(_QWORD *)a1 = *a2;
              v254 = v253;
              v27 = a1;
              v28 = v24;
              v29 = 9;
LABEL_110:
              swift_storeEnumTagMultiPayload(v27, v28, v29);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v255 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v256 = v255[5];
          v257 = &a1[v256];
          v258 = (char *)a2 + v256;
          v259 = *(uint64_t *)((char *)a2 + v256 + 8);
          if (v259)
          {
            *(_QWORD *)v257 = *(_QWORD *)v258;
            *((_QWORD *)v257 + 1) = v259;
            v260 = (void *)*((_QWORD *)v258 + 2);
            v261 = *((_QWORD *)v258 + 3);
            v262 = *((_QWORD *)v258 + 4);
            v263 = *((_QWORD *)v258 + 5);
            v372 = *((_QWORD *)v258 + 6);
            v388 = *((_QWORD *)v258 + 7);
            v378 = v258[64];
            swift_bridgeObjectRetain(v259);
            sub_10003E1F0(v260, v261, v262, v263, v372, v388, v378);
            *((_QWORD *)v257 + 2) = v260;
            *((_QWORD *)v257 + 3) = v261;
            *((_QWORD *)v257 + 4) = v262;
            *((_QWORD *)v257 + 5) = v263;
            *((_QWORD *)v257 + 6) = v372;
            *((_QWORD *)v257 + 7) = v388;
            v257[64] = v378;
            *(_DWORD *)(v257 + 65) = *(_DWORD *)(v258 + 65);
            v264 = v258[120];
            if (v264 == 255)
            {
              v265 = *(_OWORD *)(v258 + 88);
              *(_OWORD *)(v257 + 72) = *(_OWORD *)(v258 + 72);
              *(_OWORD *)(v257 + 88) = v265;
              *(_OWORD *)(v257 + 104) = *(_OWORD *)(v258 + 104);
              v257[120] = v258[120];
            }
            else
            {
              v389 = v264 & 1;
              v270 = *((_QWORD *)v258 + 10);
              v271 = *((_QWORD *)v258 + 11);
              v272 = *((_QWORD *)v258 + 12);
              v273 = *((_QWORD *)v258 + 13);
              v373 = *((_QWORD *)v258 + 14);
              v379 = (void *)*((_QWORD *)v258 + 9);
              sub_10002B764(v379, v270, v271, v272, v273, v373, v264 & 1);
              *((_QWORD *)v257 + 9) = v379;
              *((_QWORD *)v257 + 10) = v270;
              *((_QWORD *)v257 + 11) = v271;
              *((_QWORD *)v257 + 12) = v272;
              *((_QWORD *)v257 + 13) = v273;
              *((_QWORD *)v257 + 14) = v373;
              v257[120] = v389;
            }
            v269 = v395;
            v257[121] = v258[121];
          }
          else
          {
            v266 = *((_OWORD *)v258 + 5);
            *((_OWORD *)v257 + 4) = *((_OWORD *)v258 + 4);
            *((_OWORD *)v257 + 5) = v266;
            *((_OWORD *)v257 + 6) = *((_OWORD *)v258 + 6);
            *(_OWORD *)(v257 + 106) = *(_OWORD *)(v258 + 106);
            v267 = *((_OWORD *)v258 + 1);
            *(_OWORD *)v257 = *(_OWORD *)v258;
            *((_OWORD *)v257 + 1) = v267;
            v268 = *((_OWORD *)v258 + 3);
            *((_OWORD *)v257 + 2) = *((_OWORD *)v258 + 2);
            *((_OWORD *)v257 + 3) = v268;
            v269 = v9;
          }
          a1[v255[6]] = *((_BYTE *)a2 + v255[6]);
          a1[v255[7]] = *((_BYTE *)a2 + v255[7]);
          a1[v255[8]] = *((_BYTE *)a2 + v255[8]);
          a1[v255[9]] = *((_BYTE *)a2 + v255[9]);
          a1[v255[10]] = *((_BYTE *)a2 + v255[10]);
          v274 = v255[11];
          v275 = *(char **)((char *)a2 + v274);
          *(_QWORD *)&a1[v274] = v275;
          v276 = v275;
          v59 = a1;
          v60 = v269;
          v61 = 1;
          goto LABEL_167;
        case 2u:
          v30 = *a2;
          *(_QWORD *)a1 = *a2;
          v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v32 = (void **)&a1[v31];
          v33 = (void **)((char *)a2 + v31);
          v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
          v37 = v30;
          if (v36(v33, 1, v34))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v33, v34))
            {
              case 1u:
                v124 = *v33;
                *v32 = *v33;
                v125 = v124;
                v126 = v32;
                v127 = v34;
                v128 = 1;
                goto LABEL_142;
              case 2u:
                v310 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v310 - 8) + 16))(v32, v33, v310);
                v126 = v32;
                v127 = v34;
                v128 = 2;
                goto LABEL_142;
              case 3u:
                v311 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v32, v33, v311);
                v126 = v32;
                v127 = v34;
                v128 = 3;
                goto LABEL_142;
              case 4u:
                v312 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v312 - 8) + 16))(v32, v33, v312);
                v126 = v32;
                v127 = v34;
                v128 = 4;
                goto LABEL_142;
              case 5u:
                v313 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v32, v33, v313);
                v126 = v32;
                v127 = v34;
                v128 = 5;
                goto LABEL_142;
              case 6u:
                v314 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v32, v33, v314);
                v126 = v32;
                v127 = v34;
                v128 = 6;
                goto LABEL_142;
              case 8u:
                v315 = *v33;
                *v32 = *v33;
                v316 = v315;
                v126 = v32;
                v127 = v34;
                v128 = 8;
                goto LABEL_142;
              case 9u:
                v317 = *v33;
                *v32 = *v33;
                v318 = v317;
                v126 = v32;
                v127 = v34;
                v128 = 9;
LABEL_142:
                swift_storeEnumTagMultiPayload(v126, v127, v128);
                break;
              default:
                memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          v59 = a1;
          v60 = v9;
          v61 = 2;
          goto LABEL_167;
        case 3u:
          v39 = *a2;
          *(_QWORD *)a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (void **)&a1[v40];
          v42 = (void **)((char *)a2 + v40);
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
          v46 = v39;
          if (v45(v42, 1, v43))
          {
            v47 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 1u:
                v129 = *v42;
                *v41 = *v42;
                v130 = v129;
                v131 = v41;
                v132 = v43;
                v133 = 1;
                goto LABEL_153;
              case 2u:
                v319 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v319 - 8) + 16))(v41, v42, v319);
                v131 = v41;
                v132 = v43;
                v133 = 2;
                goto LABEL_153;
              case 3u:
                v320 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v320 - 8) + 16))(v41, v42, v320);
                v131 = v41;
                v132 = v43;
                v133 = 3;
                goto LABEL_153;
              case 4u:
                v321 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v41, v42, v321);
                v131 = v41;
                v132 = v43;
                v133 = 4;
                goto LABEL_153;
              case 5u:
                v322 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v41, v42, v322);
                v131 = v41;
                v132 = v43;
                v133 = 5;
                goto LABEL_153;
              case 6u:
                v323 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v41, v42, v323);
                v131 = v41;
                v132 = v43;
                v133 = 6;
                goto LABEL_153;
              case 8u:
                v324 = *v42;
                *v41 = *v42;
                v325 = v324;
                v131 = v41;
                v132 = v43;
                v133 = 8;
                goto LABEL_153;
              case 9u:
                v326 = *v42;
                *v41 = *v42;
                v327 = v326;
                v131 = v41;
                v132 = v43;
                v133 = 9;
LABEL_153:
                swift_storeEnumTagMultiPayload(v131, v132, v133);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v59 = a1;
          v60 = v9;
          v61 = 3;
          goto LABEL_167;
        case 4u:
          v48 = *a2;
          *(_QWORD *)a1 = *a2;
          v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v50 = (void **)&a1[v49];
          v51 = (void **)((char *)a2 + v49);
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v53 = *(_QWORD *)(v52 - 8);
          v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
          v55 = v48;
          if (v54(v51, 1, v52))
          {
            v56 = sub_10002A750(&qword_100644980);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v51, v52))
            {
              case 1u:
                v134 = *v51;
                *v50 = *v51;
                v135 = v134;
                v136 = v50;
                v137 = v52;
                v138 = 1;
                goto LABEL_164;
              case 2u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v50, v51, v328);
                v136 = v50;
                v137 = v52;
                v138 = 2;
                goto LABEL_164;
              case 3u:
                v329 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v50, v51, v329);
                v136 = v50;
                v137 = v52;
                v138 = 3;
                goto LABEL_164;
              case 4u:
                v330 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v50, v51, v330);
                v136 = v50;
                v137 = v52;
                v138 = 4;
                goto LABEL_164;
              case 5u:
                v331 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v50, v51, v331);
                v136 = v50;
                v137 = v52;
                v138 = 5;
                goto LABEL_164;
              case 6u:
                v332 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v50, v51, v332);
                v136 = v50;
                v137 = v52;
                v138 = 6;
                goto LABEL_164;
              case 8u:
                v333 = *v51;
                *v50 = *v51;
                v334 = v333;
                v136 = v50;
                v137 = v52;
                v138 = 8;
                goto LABEL_164;
              case 9u:
                v335 = *v51;
                *v50 = *v51;
                v336 = v335;
                v136 = v50;
                v137 = v52;
                v138 = 9;
LABEL_164:
                swift_storeEnumTagMultiPayload(v136, v137, v138);
                break;
              default:
                memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v59 = a1;
          v60 = v9;
          v61 = 4;
          goto LABEL_167;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v57 = a2[2];
          *((_QWORD *)a1 + 2) = v57;
          v58 = v57;
          v59 = a1;
          v60 = v9;
          v61 = 5;
          goto LABEL_167;
        case 6u:
          v62 = *a2;
          *(_QWORD *)a1 = *a2;
          v63 = v62;
          v59 = a1;
          v60 = v9;
          v61 = 6;
          goto LABEL_167;
        case 7u:
          v64 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v65 + 48))(a2, 1, v64))
          {
            v66 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            v139 = *a2;
            *(_QWORD *)a1 = *a2;
            v140 = *(int *)(v64 + 20);
            v382 = &a1[v140];
            v141 = (char *)a2 + v140;
            v142 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v143 = v9;
            v144 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v142 - 8) + 16);
            v145 = swift_bridgeObjectRetain(v139);
            v144(v382, v141, v142, v145);
            v9 = v143;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v64);
          }
          v146 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v147 = &a1[v146];
          v148 = (char **)((char *)a2 + v146);
          v149 = v148[1];
          if (v149)
          {
            *(_QWORD *)v147 = *v148;
            *((_QWORD *)v147 + 1) = v149;
            v150 = (void *)v148[2];
            *((_QWORD *)v147 + 2) = v150;
            swift_bridgeObjectRetain(v149);
            v151 = v150;
          }
          else
          {
            *(_OWORD *)v147 = *(_OWORD *)v148;
            *((_QWORD *)v147 + 2) = v148[2];
          }
          v59 = a1;
          v60 = v9;
          v61 = 7;
          goto LABEL_167;
        case 8u:
          v67 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v68 + 48))(a2, 1, v67))
          {
            v69 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            v152 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(a1, a2, v152);
            a1[*(int *)(v67 + 20)] = *((_BYTE *)a2 + *(int *)(v67 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(a1, 0, 1, v67);
          }
          v153 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v153 + 20)] = *(char **)((char *)a2 + *(int *)(v153 + 20));
          v59 = a1;
          v60 = v9;
          v61 = 8;
          goto LABEL_167;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v70 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v71 = &a1[v70];
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
          v59 = a1;
          v60 = v9;
          v61 = 9;
LABEL_167:
          swift_storeEnumTagMultiPayload(v59, v60, v61);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      v337 = a1;
      v338 = v7;
      v339 = 0;
LABEL_204:
      swift_storeEnumTagMultiPayload(v337, v338, v339);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1001400F8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 1u:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v19))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_24:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_23:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v2, v20);
            break;
          default:
            break;
        }
LABEL_25:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v22 = (char *)v2 + *(int *)(v21 + 20);
        v23 = *((_QWORD *)v22 + 1);
        if (v23)
        {
          swift_bridgeObjectRelease(v23);
          sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
          v24 = v22[120];
          if (v24 != 255)
            sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
        }
        v12 = *(id *)((char *)v2 + *(int *)(v21 + 44));
        goto LABEL_39;
      case 2u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v2, 1, v25))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v25))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 3u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v2, 1, v26))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v26))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 4u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v2, 1, v27))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v27))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_11;
      case 6u:
LABEL_38:
        v12 = (id)*v2;
        goto LABEL_39;
      case 7u:
LABEL_7:
        v8 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v2, 1, v8))
        {
          swift_bridgeObjectRelease(*v2);
          v9 = (char *)v2 + *(int *)(v8 + 20);
          v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        v2 = (_QWORD *)((char *)v2
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v11 = v2[1];
        if (!v11)
          return;
        swift_bridgeObjectRelease(v11);
LABEL_11:
        v12 = (id)v2[2];
LABEL_39:

        break;
      case 8u:
LABEL_12:
        v13 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v2, 1, v13))
          return;
LABEL_36:
        v14 = type metadata accessor for Date(0);
LABEL_37:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v2, v14);
        break;
      case 9u:
LABEL_14:
        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v14 = type metadata accessor for AnyTip(0);
        goto LABEL_37;
      default:
        return;
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v2, v4))
    {
      case 0u:
        v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v5))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 1u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_24;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_23;
          default:
            goto LABEL_25;
        }
        goto LABEL_25;
      case 2u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v16))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 3u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v2, 1, v17))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v17))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 4u:

        v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v2, 1, v18))
        {
          switch(swift_getEnumCaseMultiPayload(v2, v18))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_38;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              return;
          }
        }
        break;
      case 5u:
        goto LABEL_11;
      case 6u:
        goto LABEL_38;
      case 7u:
        goto LABEL_7;
      case 8u:
        goto LABEL_12;
      case 9u:
        goto LABEL_14;
      default:
        return;
    }
  }
}

void **sub_10014069C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(void **, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void **, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void **v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void **v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(void **, uint64_t, uint64_t);
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(void **, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void **v97;
  void **v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(void **, uint64_t, uint64_t);
  id v102;
  uint64_t v103;
  void *v104;
  id v105;
  void **v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  id v220;
  void *v221;
  id v222;
  int *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  id v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  id v253;
  void *v254;
  id v255;
  int *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  id v286;
  void *v287;
  id v288;
  int *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  void *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  int v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  void *v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  void *v318;
  id v319;
  void *v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  void *v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void *v336;
  id v337;
  void *v338;
  id v339;
  void **v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  id v349;
  void *v350;
  id v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  void *v357;
  id v358;
  void *v359;
  id v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  unsigned __int8 v371;
  void *v372;
  uint64_t v373;
  void *v374;
  uint64_t v375;
  void *v376;
  uint64_t v377;
  void *v378;
  char *v379;
  char *v380;
  uint64_t v381;
  char v382;
  unsigned __int8 v383;
  char v384;
  unsigned __int8 v385;
  char v386;
  unsigned __int8 v387;
  char v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v14))
    {
      case 0u:
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v390 = v14;
        switch(swift_getEnumCaseMultiPayload(a2, v15))
        {
          case 1u:
            v16 = *a2;
            *a1 = *a2;
            v17 = v16;
            v18 = a1;
            v19 = v15;
            v20 = 1;
            goto LABEL_92;
          case 2u:
            v214 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(a1, a2, v214);
            v18 = a1;
            v19 = v15;
            v20 = 2;
            goto LABEL_92;
          case 3u:
            v215 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(a1, a2, v215);
            v18 = a1;
            v19 = v15;
            v20 = 3;
            goto LABEL_92;
          case 4u:
            v216 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(a1, a2, v216);
            v18 = a1;
            v19 = v15;
            v20 = 4;
            goto LABEL_92;
          case 5u:
            v217 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
            v18 = a1;
            v19 = v15;
            v20 = 5;
            goto LABEL_92;
          case 6u:
            v218 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
            v18 = a1;
            v19 = v15;
            v20 = 6;
            goto LABEL_92;
          case 8u:
            v219 = *a2;
            *a1 = *a2;
            v220 = v219;
            v18 = a1;
            v19 = v15;
            v20 = 8;
            goto LABEL_92;
          case 9u:
            v221 = *a2;
            *a1 = *a2;
            v222 = v221;
            v18 = a1;
            v19 = v15;
            v20 = 9;
LABEL_92:
            swift_storeEnumTagMultiPayload(v18, v19, v20);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        v223 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v224 = v223[5];
        v225 = (char *)a1 + v224;
        v226 = (char *)a2 + v224;
        v227 = *(uint64_t *)((char *)a2 + v224 + 8);
        if (v227)
        {
          v395 = v3;
          *(_QWORD *)v225 = *(_QWORD *)v226;
          *((_QWORD *)v225 + 1) = v227;
          v228 = (void *)*((_QWORD *)v226 + 2);
          v229 = *((_QWORD *)v226 + 3);
          v230 = *((_QWORD *)v226 + 4);
          v231 = *((_QWORD *)v226 + 5);
          v232 = *((_QWORD *)v226 + 6);
          v373 = *((_QWORD *)v226 + 7);
          v383 = v226[64];
          swift_bridgeObjectRetain(v227);
          sub_10003E1F0(v228, v229, v230, v231, v232, v373, v383);
          *((_QWORD *)v225 + 2) = v228;
          *((_QWORD *)v225 + 3) = v229;
          *((_QWORD *)v225 + 4) = v230;
          *((_QWORD *)v225 + 5) = v231;
          *((_QWORD *)v225 + 6) = v232;
          *((_QWORD *)v225 + 7) = v373;
          v225[64] = v383;
          *(_DWORD *)(v225 + 65) = *(_DWORD *)(v226 + 65);
          v233 = v226[120];
          if (v233 == 255)
          {
            v234 = *(_OWORD *)(v226 + 88);
            *(_OWORD *)(v225 + 72) = *(_OWORD *)(v226 + 72);
            *(_OWORD *)(v225 + 88) = v234;
            *(_OWORD *)(v225 + 104) = *(_OWORD *)(v226 + 104);
            v225[120] = v226[120];
          }
          else
          {
            v384 = v233 & 1;
            v239 = *((_QWORD *)v226 + 10);
            v374 = (void *)*((_QWORD *)v226 + 9);
            v240 = *((_QWORD *)v226 + 11);
            v241 = *((_QWORD *)v226 + 12);
            v242 = *((_QWORD *)v226 + 13);
            v243 = *((_QWORD *)v226 + 14);
            sub_10002B764(v374, v239, v240, v241, v242, v243, v233 & 1);
            *((_QWORD *)v225 + 9) = v374;
            *((_QWORD *)v225 + 10) = v239;
            *((_QWORD *)v225 + 11) = v240;
            *((_QWORD *)v225 + 12) = v241;
            *((_QWORD *)v225 + 13) = v242;
            *((_QWORD *)v225 + 14) = v243;
            v225[120] = v384;
          }
          v238 = v390;
          v3 = v395;
          v225[121] = v226[121];
        }
        else
        {
          v235 = *((_OWORD *)v226 + 5);
          *((_OWORD *)v225 + 4) = *((_OWORD *)v226 + 4);
          *((_OWORD *)v225 + 5) = v235;
          *((_OWORD *)v225 + 6) = *((_OWORD *)v226 + 6);
          *(_OWORD *)(v225 + 106) = *(_OWORD *)(v226 + 106);
          v236 = *((_OWORD *)v226 + 1);
          *(_OWORD *)v225 = *(_OWORD *)v226;
          *((_OWORD *)v225 + 1) = v236;
          v237 = *((_OWORD *)v226 + 3);
          *((_OWORD *)v225 + 2) = *((_OWORD *)v226 + 2);
          *((_OWORD *)v225 + 3) = v237;
          v238 = v14;
        }
        *((_BYTE *)a1 + v223[6]) = *((_BYTE *)a2 + v223[6]);
        *((_BYTE *)a1 + v223[7]) = *((_BYTE *)a2 + v223[7]);
        *((_BYTE *)a1 + v223[8]) = *((_BYTE *)a2 + v223[8]);
        *((_BYTE *)a1 + v223[9]) = *((_BYTE *)a2 + v223[9]);
        *((_BYTE *)a1 + v223[10]) = *((_BYTE *)a2 + v223[10]);
        v244 = v223[11];
        v245 = *(void **)((char *)a2 + v244);
        *(void **)((char *)a1 + v244) = v245;
        v246 = v245;
        v106 = a1;
        v107 = v238;
        v108 = 0;
        goto LABEL_200;
      case 1u:
        v71 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v392 = v14;
        switch(swift_getEnumCaseMultiPayload(a2, v71))
        {
          case 1u:
            v72 = *a2;
            *a1 = *a2;
            v73 = v72;
            v74 = a1;
            v75 = v71;
            v76 = 1;
            goto LABEL_124;
          case 2u:
            v280 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(a1, a2, v280);
            v74 = a1;
            v75 = v71;
            v76 = 2;
            goto LABEL_124;
          case 3u:
            v281 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(a1, a2, v281);
            v74 = a1;
            v75 = v71;
            v76 = 3;
            goto LABEL_124;
          case 4u:
            v282 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(a1, a2, v282);
            v74 = a1;
            v75 = v71;
            v76 = 4;
            goto LABEL_124;
          case 5u:
            v283 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(a1, a2, v283);
            v74 = a1;
            v75 = v71;
            v76 = 5;
            goto LABEL_124;
          case 6u:
            v284 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(a1, a2, v284);
            v74 = a1;
            v75 = v71;
            v76 = 6;
            goto LABEL_124;
          case 8u:
            v285 = *a2;
            *a1 = *a2;
            v286 = v285;
            v74 = a1;
            v75 = v71;
            v76 = 8;
            goto LABEL_124;
          case 9u:
            v287 = *a2;
            *a1 = *a2;
            v288 = v287;
            v74 = a1;
            v75 = v71;
            v76 = 9;
LABEL_124:
            swift_storeEnumTagMultiPayload(v74, v75, v76);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            break;
        }
        v289 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v290 = v289[5];
        v291 = (char *)a1 + v290;
        v292 = (char *)a2 + v290;
        v293 = *(uint64_t *)((char *)a2 + v290 + 8);
        if (v293)
        {
          v396 = v3;
          *(_QWORD *)v291 = *(_QWORD *)v292;
          *((_QWORD *)v291 + 1) = v293;
          v294 = (void *)*((_QWORD *)v292 + 2);
          v295 = *((_QWORD *)v292 + 3);
          v296 = *((_QWORD *)v292 + 4);
          v297 = *((_QWORD *)v292 + 5);
          v298 = *((_QWORD *)v292 + 6);
          v377 = *((_QWORD *)v292 + 7);
          v387 = v292[64];
          swift_bridgeObjectRetain(v293);
          sub_10003E1F0(v294, v295, v296, v297, v298, v377, v387);
          *((_QWORD *)v291 + 2) = v294;
          *((_QWORD *)v291 + 3) = v295;
          *((_QWORD *)v291 + 4) = v296;
          *((_QWORD *)v291 + 5) = v297;
          *((_QWORD *)v291 + 6) = v298;
          *((_QWORD *)v291 + 7) = v377;
          v291[64] = v387;
          *(_DWORD *)(v291 + 65) = *(_DWORD *)(v292 + 65);
          v299 = v292[120];
          if (v299 == 255)
          {
            v300 = *(_OWORD *)(v292 + 88);
            *(_OWORD *)(v291 + 72) = *(_OWORD *)(v292 + 72);
            *(_OWORD *)(v291 + 88) = v300;
            *(_OWORD *)(v291 + 104) = *(_OWORD *)(v292 + 104);
            v291[120] = v292[120];
          }
          else
          {
            v388 = v299 & 1;
            v305 = *((_QWORD *)v292 + 10);
            v378 = (void *)*((_QWORD *)v292 + 9);
            v306 = *((_QWORD *)v292 + 11);
            v307 = *((_QWORD *)v292 + 12);
            v308 = *((_QWORD *)v292 + 13);
            v309 = *((_QWORD *)v292 + 14);
            sub_10002B764(v378, v305, v306, v307, v308, v309, v299 & 1);
            *((_QWORD *)v291 + 9) = v378;
            *((_QWORD *)v291 + 10) = v305;
            *((_QWORD *)v291 + 11) = v306;
            *((_QWORD *)v291 + 12) = v307;
            *((_QWORD *)v291 + 13) = v308;
            *((_QWORD *)v291 + 14) = v309;
            v291[120] = v388;
          }
          v304 = v392;
          v3 = v396;
          v291[121] = v292[121];
        }
        else
        {
          v301 = *((_OWORD *)v292 + 5);
          *((_OWORD *)v291 + 4) = *((_OWORD *)v292 + 4);
          *((_OWORD *)v291 + 5) = v301;
          *((_OWORD *)v291 + 6) = *((_OWORD *)v292 + 6);
          *(_OWORD *)(v291 + 106) = *(_OWORD *)(v292 + 106);
          v302 = *((_OWORD *)v292 + 1);
          *(_OWORD *)v291 = *(_OWORD *)v292;
          *((_OWORD *)v291 + 1) = v302;
          v303 = *((_OWORD *)v292 + 3);
          *((_OWORD *)v291 + 2) = *((_OWORD *)v292 + 2);
          *((_OWORD *)v291 + 3) = v303;
          v304 = v14;
        }
        *((_BYTE *)a1 + v289[6]) = *((_BYTE *)a2 + v289[6]);
        *((_BYTE *)a1 + v289[7]) = *((_BYTE *)a2 + v289[7]);
        *((_BYTE *)a1 + v289[8]) = *((_BYTE *)a2 + v289[8]);
        *((_BYTE *)a1 + v289[9]) = *((_BYTE *)a2 + v289[9]);
        *((_BYTE *)a1 + v289[10]) = *((_BYTE *)a2 + v289[10]);
        v310 = v289[11];
        v311 = *(void **)((char *)a2 + v310);
        *(void **)((char *)a1 + v310) = v311;
        v312 = v311;
        v106 = a1;
        v107 = v304;
        v108 = 1;
        goto LABEL_200;
      case 2u:
        v77 = *a2;
        *a1 = *a2;
        v78 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v79 = (void **)((char *)a1 + v78);
        v80 = (void **)((char *)a2 + v78);
        v81 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v82 = *(_QWORD *)(v81 - 8);
        v83 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v82 + 48);
        v84 = v77;
        if (v83(v80, 1, v81))
        {
          v85 = sub_10002A750(&qword_100644980);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v80, v81))
          {
            case 1u:
              v151 = *v80;
              *v79 = *v80;
              v152 = v151;
              v153 = v79;
              v154 = v81;
              v155 = 1;
              goto LABEL_175;
            case 2u:
              v343 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v79, v80, v343);
              v153 = v79;
              v154 = v81;
              v155 = 2;
              goto LABEL_175;
            case 3u:
              v344 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v79, v80, v344);
              v153 = v79;
              v154 = v81;
              v155 = 3;
              goto LABEL_175;
            case 4u:
              v345 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v79, v80, v345);
              v153 = v79;
              v154 = v81;
              v155 = 4;
              goto LABEL_175;
            case 5u:
              v346 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v79, v80, v346);
              v153 = v79;
              v154 = v81;
              v155 = 5;
              goto LABEL_175;
            case 6u:
              v347 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v79, v80, v347);
              v153 = v79;
              v154 = v81;
              v155 = 6;
              goto LABEL_175;
            case 8u:
              v348 = *v80;
              *v79 = *v80;
              v349 = v348;
              v153 = v79;
              v154 = v81;
              v155 = 8;
              goto LABEL_175;
            case 9u:
              v350 = *v80;
              *v79 = *v80;
              v351 = v350;
              v153 = v79;
              v154 = v81;
              v155 = 9;
LABEL_175:
              swift_storeEnumTagMultiPayload(v153, v154, v155);
              break;
            default:
              memcpy(v79, v80, *(_QWORD *)(v82 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
        }
        v106 = a1;
        v107 = v14;
        v108 = 2;
        goto LABEL_200;
      case 3u:
        v86 = *a2;
        *a1 = *a2;
        v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v88 = (void **)((char *)a1 + v87);
        v89 = (void **)((char *)a2 + v87);
        v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v91 + 48);
        v93 = v86;
        if (v92(v89, 1, v90))
        {
          v94 = sub_10002A750(&qword_100644980);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v89, v90))
          {
            case 1u:
              v156 = *v89;
              *v88 = *v89;
              v157 = v156;
              v158 = v88;
              v159 = v90;
              v160 = 1;
              goto LABEL_186;
            case 2u:
              v352 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v88, v89, v352);
              v158 = v88;
              v159 = v90;
              v160 = 2;
              goto LABEL_186;
            case 3u:
              v353 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v88, v89, v353);
              v158 = v88;
              v159 = v90;
              v160 = 3;
              goto LABEL_186;
            case 4u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v88, v89, v354);
              v158 = v88;
              v159 = v90;
              v160 = 4;
              goto LABEL_186;
            case 5u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v88, v89, v355);
              v158 = v88;
              v159 = v90;
              v160 = 5;
              goto LABEL_186;
            case 6u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v88, v89, v356);
              v158 = v88;
              v159 = v90;
              v160 = 6;
              goto LABEL_186;
            case 8u:
              v357 = *v89;
              *v88 = *v89;
              v358 = v357;
              v158 = v88;
              v159 = v90;
              v160 = 8;
              goto LABEL_186;
            case 9u:
              v359 = *v89;
              *v88 = *v89;
              v360 = v359;
              v158 = v88;
              v159 = v90;
              v160 = 9;
LABEL_186:
              swift_storeEnumTagMultiPayload(v158, v159, v160);
              break;
            default:
              memcpy(v88, v89, *(_QWORD *)(v91 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        v106 = a1;
        v107 = v14;
        v108 = 3;
        goto LABEL_200;
      case 4u:
        v95 = *a2;
        *a1 = *a2;
        v96 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v97 = (void **)((char *)a1 + v96);
        v98 = (void **)((char *)a2 + v96);
        v99 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v100 = *(_QWORD *)(v99 - 8);
        v101 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v100 + 48);
        v102 = v95;
        if (v101(v98, 1, v99))
        {
          v103 = sub_10002A750(&qword_100644980);
          memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v98, v99))
          {
            case 1u:
              v161 = *v98;
              *v97 = *v98;
              v162 = v161;
              v163 = v97;
              v164 = v99;
              v165 = 1;
              goto LABEL_197;
            case 2u:
              v361 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v97, v98, v361);
              v163 = v97;
              v164 = v99;
              v165 = 2;
              goto LABEL_197;
            case 3u:
              v362 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v97, v98, v362);
              v163 = v97;
              v164 = v99;
              v165 = 3;
              goto LABEL_197;
            case 4u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v97, v98, v363);
              v163 = v97;
              v164 = v99;
              v165 = 4;
              goto LABEL_197;
            case 5u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v97, v98, v364);
              v163 = v97;
              v164 = v99;
              v165 = 5;
              goto LABEL_197;
            case 6u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v97, v98, v365);
              v163 = v97;
              v164 = v99;
              v165 = 6;
              goto LABEL_197;
            case 8u:
              v366 = *v98;
              *v97 = *v98;
              v367 = v366;
              v163 = v97;
              v164 = v99;
              v165 = 8;
              goto LABEL_197;
            case 9u:
              v368 = *v98;
              *v97 = *v98;
              v369 = v368;
              v163 = v97;
              v164 = v99;
              v165 = 9;
LABEL_197:
              swift_storeEnumTagMultiPayload(v163, v164, v165);
              break;
            default:
              memcpy(v97, v98, *(_QWORD *)(v100 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        }
        v106 = a1;
        v107 = v14;
        v108 = 4;
        goto LABEL_200;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v104 = a2[2];
        a1[2] = v104;
        v105 = v104;
        v106 = a1;
        v107 = v14;
        v108 = 5;
        goto LABEL_200;
      case 6u:
        v116 = *a2;
        *a1 = *a2;
        v117 = v116;
        v106 = a1;
        v107 = v14;
        v108 = 6;
        goto LABEL_200;
      case 7u:
        v109 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
        {
          v111 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v166 = *a2;
          *a1 = *a2;
          v167 = *(int *)(v109 + 20);
          v380 = (char *)a1 + v167;
          v168 = (char *)a2 + v167;
          v169 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v170 = v14;
          v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v169 - 8) + 16);
          v172 = swift_bridgeObjectRetain(v166);
          v171(v380, v168, v169, v172);
          v14 = v170;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
        }
        v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v174 = (void **)((char *)a1 + v173);
        v175 = (void **)((char *)a2 + v173);
        v176 = v175[1];
        if (v176)
        {
          *v174 = *v175;
          v174[1] = v176;
          v177 = (void *)v175[2];
          v174[2] = v177;
          swift_bridgeObjectRetain(v176);
          v178 = v177;
        }
        else
        {
          *(_OWORD *)v174 = *(_OWORD *)v175;
          v174[2] = v175[2];
        }
        v106 = a1;
        v107 = v14;
        v108 = 7;
        goto LABEL_200;
      case 8u:
        v118 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v119 = *(_QWORD *)(v118 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v119 + 48))(a2, 1, v118))
        {
          v120 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          v179 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(a1, a2, v179);
          *((_BYTE *)a1 + *(int *)(v118 + 20)) = *((_BYTE *)a2 + *(int *)(v118 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v119 + 56))(a1, 0, 1, v118);
        }
        v180 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v180 + 20)) = *(void **)((char *)a2 + *(int *)(v180 + 20));
        v106 = a1;
        v107 = v14;
        v108 = 8;
        goto LABEL_200;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v112 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
        v106 = a1;
        v107 = v14;
        v108 = 9;
LABEL_200:
        swift_storeEnumTagMultiPayload(v106, v107, v108);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        break;
    }
    v340 = a1;
    v341 = v3;
    v342 = 1;
    goto LABEL_202;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v389 = v7;
        v393 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_76;
          case 2u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_76;
          case 3u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_76;
          case 4u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_76;
          case 5u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_76;
          case 6u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_76;
          case 8u:
            v186 = *a2;
            *a1 = *a2;
            v187 = v186;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_76;
          case 9u:
            v188 = *a2;
            *a1 = *a2;
            v189 = v188;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_76:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v190 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v191 = v190[5];
        v192 = (char *)a1 + v191;
        v193 = (char *)a2 + v191;
        v194 = *(uint64_t *)((char *)a2 + v191 + 8);
        if (v194)
        {
          *(_QWORD *)v192 = *(_QWORD *)v193;
          *((_QWORD *)v192 + 1) = v194;
          v195 = (void *)*((_QWORD *)v193 + 2);
          v196 = *((_QWORD *)v193 + 3);
          v197 = *((_QWORD *)v193 + 4);
          v198 = *((_QWORD *)v193 + 5);
          v199 = *((_QWORD *)v193 + 6);
          v381 = *((_QWORD *)v193 + 7);
          v371 = v193[64];
          swift_bridgeObjectRetain(v194);
          sub_10003E1F0(v195, v196, v197, v198, v199, v381, v371);
          *((_QWORD *)v192 + 2) = v195;
          *((_QWORD *)v192 + 3) = v196;
          *((_QWORD *)v192 + 4) = v197;
          *((_QWORD *)v192 + 5) = v198;
          *((_QWORD *)v192 + 6) = v199;
          *((_QWORD *)v192 + 7) = v381;
          v192[64] = v371;
          *(_DWORD *)(v192 + 65) = *(_DWORD *)(v193 + 65);
          v200 = v193[120];
          if (v200 == 255)
          {
            v201 = *(_OWORD *)(v193 + 88);
            *(_OWORD *)(v192 + 72) = *(_OWORD *)(v193 + 72);
            *(_OWORD *)(v192 + 88) = v201;
            *(_OWORD *)(v192 + 104) = *(_OWORD *)(v193 + 104);
            v192[120] = v193[120];
          }
          else
          {
            v382 = v200 & 1;
            v206 = *((_QWORD *)v193 + 10);
            v372 = (void *)*((_QWORD *)v193 + 9);
            v207 = *((_QWORD *)v193 + 11);
            v208 = *((_QWORD *)v193 + 12);
            v209 = *((_QWORD *)v193 + 13);
            v210 = *((_QWORD *)v193 + 14);
            sub_10002B764(v372, v206, v207, v208, v209, v210, v200 & 1);
            *((_QWORD *)v192 + 9) = v372;
            *((_QWORD *)v192 + 10) = v206;
            *((_QWORD *)v192 + 11) = v207;
            *((_QWORD *)v192 + 12) = v208;
            *((_QWORD *)v192 + 13) = v209;
            *((_QWORD *)v192 + 14) = v210;
            v192[120] = v382;
          }
          v205 = v389;
          v3 = v393;
          v192[121] = v193[121];
        }
        else
        {
          v202 = *((_OWORD *)v193 + 5);
          *((_OWORD *)v192 + 4) = *((_OWORD *)v193 + 4);
          *((_OWORD *)v192 + 5) = v202;
          *((_OWORD *)v192 + 6) = *((_OWORD *)v193 + 6);
          *(_OWORD *)(v192 + 106) = *(_OWORD *)(v193 + 106);
          v203 = *((_OWORD *)v193 + 1);
          *(_OWORD *)v192 = *(_OWORD *)v193;
          *((_OWORD *)v192 + 1) = v203;
          v204 = *((_OWORD *)v193 + 3);
          *((_OWORD *)v192 + 2) = *((_OWORD *)v193 + 2);
          *((_OWORD *)v192 + 3) = v204;
          v205 = v7;
        }
        *((_BYTE *)a1 + v190[6]) = *((_BYTE *)a2 + v190[6]);
        *((_BYTE *)a1 + v190[7]) = *((_BYTE *)a2 + v190[7]);
        *((_BYTE *)a1 + v190[8]) = *((_BYTE *)a2 + v190[8]);
        *((_BYTE *)a1 + v190[9]) = *((_BYTE *)a2 + v190[9]);
        *((_BYTE *)a1 + v190[10]) = *((_BYTE *)a2 + v190[10]);
        v211 = v190[11];
        v212 = *(void **)((char *)a2 + v211);
        *(void **)((char *)a1 + v211) = v212;
        v213 = v212;
        v56 = a1;
        v57 = v205;
        v58 = 0;
        goto LABEL_165;
      case 1u:
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v391 = v7;
        v394 = v3;
        switch(swift_getEnumCaseMultiPayload(a2, v21))
        {
          case 1u:
            v22 = *a2;
            *a1 = *a2;
            v23 = v22;
            v24 = a1;
            v25 = v21;
            v26 = 1;
            goto LABEL_108;
          case 2u:
            v247 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
            v24 = a1;
            v25 = v21;
            v26 = 2;
            goto LABEL_108;
          case 3u:
            v248 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
            v24 = a1;
            v25 = v21;
            v26 = 3;
            goto LABEL_108;
          case 4u:
            v249 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
            v24 = a1;
            v25 = v21;
            v26 = 4;
            goto LABEL_108;
          case 5u:
            v250 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(a1, a2, v250);
            v24 = a1;
            v25 = v21;
            v26 = 5;
            goto LABEL_108;
          case 6u:
            v251 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(a1, a2, v251);
            v24 = a1;
            v25 = v21;
            v26 = 6;
            goto LABEL_108;
          case 8u:
            v252 = *a2;
            *a1 = *a2;
            v253 = v252;
            v24 = a1;
            v25 = v21;
            v26 = 8;
            goto LABEL_108;
          case 9u:
            v254 = *a2;
            *a1 = *a2;
            v255 = v254;
            v24 = a1;
            v25 = v21;
            v26 = 9;
LABEL_108:
            swift_storeEnumTagMultiPayload(v24, v25, v26);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            break;
        }
        v256 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v257 = v256[5];
        v258 = (char *)a1 + v257;
        v259 = (char *)a2 + v257;
        v260 = *(uint64_t *)((char *)a2 + v257 + 8);
        if (v260)
        {
          *(_QWORD *)v258 = *(_QWORD *)v259;
          *((_QWORD *)v258 + 1) = v260;
          v261 = (void *)*((_QWORD *)v259 + 2);
          v262 = *((_QWORD *)v259 + 3);
          v263 = *((_QWORD *)v259 + 4);
          v264 = *((_QWORD *)v259 + 5);
          v265 = *((_QWORD *)v259 + 6);
          v375 = *((_QWORD *)v259 + 7);
          v385 = v259[64];
          swift_bridgeObjectRetain(v260);
          sub_10003E1F0(v261, v262, v263, v264, v265, v375, v385);
          *((_QWORD *)v258 + 2) = v261;
          *((_QWORD *)v258 + 3) = v262;
          *((_QWORD *)v258 + 4) = v263;
          *((_QWORD *)v258 + 5) = v264;
          *((_QWORD *)v258 + 6) = v265;
          *((_QWORD *)v258 + 7) = v375;
          v258[64] = v385;
          *(_DWORD *)(v258 + 65) = *(_DWORD *)(v259 + 65);
          v266 = v259[120];
          if (v266 == 255)
          {
            v267 = *(_OWORD *)(v259 + 88);
            *(_OWORD *)(v258 + 72) = *(_OWORD *)(v259 + 72);
            *(_OWORD *)(v258 + 88) = v267;
            *(_OWORD *)(v258 + 104) = *(_OWORD *)(v259 + 104);
            v258[120] = v259[120];
          }
          else
          {
            v386 = v266 & 1;
            v272 = *((_QWORD *)v259 + 10);
            v376 = (void *)*((_QWORD *)v259 + 9);
            v273 = *((_QWORD *)v259 + 11);
            v274 = *((_QWORD *)v259 + 12);
            v275 = *((_QWORD *)v259 + 13);
            v276 = *((_QWORD *)v259 + 14);
            sub_10002B764(v376, v272, v273, v274, v275, v276, v266 & 1);
            *((_QWORD *)v258 + 9) = v376;
            *((_QWORD *)v258 + 10) = v272;
            *((_QWORD *)v258 + 11) = v273;
            *((_QWORD *)v258 + 12) = v274;
            *((_QWORD *)v258 + 13) = v275;
            *((_QWORD *)v258 + 14) = v276;
            v258[120] = v386;
          }
          v271 = v391;
          v3 = v394;
          v258[121] = v259[121];
        }
        else
        {
          v268 = *((_OWORD *)v259 + 5);
          *((_OWORD *)v258 + 4) = *((_OWORD *)v259 + 4);
          *((_OWORD *)v258 + 5) = v268;
          *((_OWORD *)v258 + 6) = *((_OWORD *)v259 + 6);
          *(_OWORD *)(v258 + 106) = *(_OWORD *)(v259 + 106);
          v269 = *((_OWORD *)v259 + 1);
          *(_OWORD *)v258 = *(_OWORD *)v259;
          *((_OWORD *)v258 + 1) = v269;
          v270 = *((_OWORD *)v259 + 3);
          *((_OWORD *)v258 + 2) = *((_OWORD *)v259 + 2);
          *((_OWORD *)v258 + 3) = v270;
          v271 = v7;
        }
        *((_BYTE *)a1 + v256[6]) = *((_BYTE *)a2 + v256[6]);
        *((_BYTE *)a1 + v256[7]) = *((_BYTE *)a2 + v256[7]);
        *((_BYTE *)a1 + v256[8]) = *((_BYTE *)a2 + v256[8]);
        *((_BYTE *)a1 + v256[9]) = *((_BYTE *)a2 + v256[9]);
        *((_BYTE *)a1 + v256[10]) = *((_BYTE *)a2 + v256[10]);
        v277 = v256[11];
        v278 = *(void **)((char *)a2 + v277);
        *(void **)((char *)a1 + v277) = v278;
        v279 = v278;
        v56 = a1;
        v57 = v271;
        v58 = 1;
        goto LABEL_165;
      case 2u:
        v27 = *a2;
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v29 = (void **)((char *)a1 + v28);
        v30 = (void **)((char *)a2 + v28);
        v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
        v34 = v27;
        if (v33(v30, 1, v31))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v30, v31))
          {
            case 1u:
              v121 = *v30;
              *v29 = *v30;
              v122 = v121;
              v123 = v29;
              v124 = v31;
              v125 = 1;
              goto LABEL_140;
            case 2u:
              v313 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v313 - 8) + 16))(v29, v30, v313);
              v123 = v29;
              v124 = v31;
              v125 = 2;
              goto LABEL_140;
            case 3u:
              v314 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v29, v30, v314);
              v123 = v29;
              v124 = v31;
              v125 = 3;
              goto LABEL_140;
            case 4u:
              v315 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v315 - 8) + 16))(v29, v30, v315);
              v123 = v29;
              v124 = v31;
              v125 = 4;
              goto LABEL_140;
            case 5u:
              v316 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v316 - 8) + 16))(v29, v30, v316);
              v123 = v29;
              v124 = v31;
              v125 = 5;
              goto LABEL_140;
            case 6u:
              v317 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v29, v30, v317);
              v123 = v29;
              v124 = v31;
              v125 = 6;
              goto LABEL_140;
            case 8u:
              v318 = *v30;
              *v29 = *v30;
              v319 = v318;
              v123 = v29;
              v124 = v31;
              v125 = 8;
              goto LABEL_140;
            case 9u:
              v320 = *v30;
              *v29 = *v30;
              v321 = v320;
              v123 = v29;
              v124 = v31;
              v125 = 9;
LABEL_140:
              swift_storeEnumTagMultiPayload(v123, v124, v125);
              break;
            default:
              memcpy(v29, v30, *(_QWORD *)(v32 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        v56 = a1;
        v57 = v7;
        v58 = 2;
        goto LABEL_165;
      case 3u:
        v36 = *a2;
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v38 = (void **)((char *)a1 + v37);
        v39 = (void **)((char *)a2 + v37);
        v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48);
        v43 = v36;
        if (v42(v39, 1, v40))
        {
          v44 = sub_10002A750(&qword_100644980);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v39, v40))
          {
            case 1u:
              v126 = *v39;
              *v38 = *v39;
              v127 = v126;
              v128 = v38;
              v129 = v40;
              v130 = 1;
              goto LABEL_151;
            case 2u:
              v322 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v38, v39, v322);
              v128 = v38;
              v129 = v40;
              v130 = 2;
              goto LABEL_151;
            case 3u:
              v323 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v38, v39, v323);
              v128 = v38;
              v129 = v40;
              v130 = 3;
              goto LABEL_151;
            case 4u:
              v324 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v38, v39, v324);
              v128 = v38;
              v129 = v40;
              v130 = 4;
              goto LABEL_151;
            case 5u:
              v325 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v38, v39, v325);
              v128 = v38;
              v129 = v40;
              v130 = 5;
              goto LABEL_151;
            case 6u:
              v326 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v38, v39, v326);
              v128 = v38;
              v129 = v40;
              v130 = 6;
              goto LABEL_151;
            case 8u:
              v327 = *v39;
              *v38 = *v39;
              v328 = v327;
              v128 = v38;
              v129 = v40;
              v130 = 8;
              goto LABEL_151;
            case 9u:
              v329 = *v39;
              *v38 = *v39;
              v330 = v329;
              v128 = v38;
              v129 = v40;
              v130 = 9;
LABEL_151:
              swift_storeEnumTagMultiPayload(v128, v129, v130);
              break;
            default:
              memcpy(v38, v39, *(_QWORD *)(v41 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        v56 = a1;
        v57 = v7;
        v58 = 3;
        goto LABEL_165;
      case 4u:
        v45 = *a2;
        *a1 = *a2;
        v46 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v47 = (void **)((char *)a1 + v46);
        v48 = (void **)((char *)a2 + v46);
        v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v50 = *(_QWORD *)(v49 - 8);
        v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
        v52 = v45;
        if (v51(v48, 1, v49))
        {
          v53 = sub_10002A750(&qword_100644980);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v48, v49))
          {
            case 1u:
              v131 = *v48;
              *v47 = *v48;
              v132 = v131;
              v133 = v47;
              v134 = v49;
              v135 = 1;
              goto LABEL_162;
            case 2u:
              v331 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v47, v48, v331);
              v133 = v47;
              v134 = v49;
              v135 = 2;
              goto LABEL_162;
            case 3u:
              v332 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v47, v48, v332);
              v133 = v47;
              v134 = v49;
              v135 = 3;
              goto LABEL_162;
            case 4u:
              v333 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v47, v48, v333);
              v133 = v47;
              v134 = v49;
              v135 = 4;
              goto LABEL_162;
            case 5u:
              v334 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v47, v48, v334);
              v133 = v47;
              v134 = v49;
              v135 = 5;
              goto LABEL_162;
            case 6u:
              v335 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v47, v48, v335);
              v133 = v47;
              v134 = v49;
              v135 = 6;
              goto LABEL_162;
            case 8u:
              v336 = *v48;
              *v47 = *v48;
              v337 = v336;
              v133 = v47;
              v134 = v49;
              v135 = 8;
              goto LABEL_162;
            case 9u:
              v338 = *v48;
              *v47 = *v48;
              v339 = v338;
              v133 = v47;
              v134 = v49;
              v135 = 9;
LABEL_162:
              swift_storeEnumTagMultiPayload(v133, v134, v135);
              break;
            default:
              memcpy(v47, v48, *(_QWORD *)(v50 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        v56 = a1;
        v57 = v7;
        v58 = 4;
        goto LABEL_165;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v54 = a2[2];
        a1[2] = v54;
        v55 = v54;
        v56 = a1;
        v57 = v7;
        v58 = 5;
        goto LABEL_165;
      case 6u:
        v59 = *a2;
        *a1 = *a2;
        v60 = v59;
        v56 = a1;
        v57 = v7;
        v58 = 6;
        goto LABEL_165;
      case 7u:
        v61 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48))(a2, 1, v61))
        {
          v63 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v136 = *a2;
          *a1 = *a2;
          v137 = *(int *)(v61 + 20);
          v379 = (char *)a1 + v137;
          v138 = (char *)a2 + v137;
          v139 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v140 = v7;
          v141 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v139 - 8) + 16);
          v142 = swift_bridgeObjectRetain(v136);
          v141(v379, v138, v139, v142);
          v7 = v140;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v62 + 56))(a1, 0, 1, v61);
        }
        v143 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v144 = (void **)((char *)a1 + v143);
        v145 = (void **)((char *)a2 + v143);
        v146 = v145[1];
        if (v146)
        {
          *v144 = *v145;
          v144[1] = v146;
          v147 = (void *)v145[2];
          v144[2] = v147;
          swift_bridgeObjectRetain(v146);
          v148 = v147;
        }
        else
        {
          *(_OWORD *)v144 = *(_OWORD *)v145;
          v144[2] = v145[2];
        }
        v56 = a1;
        v57 = v7;
        v58 = 7;
        goto LABEL_165;
      case 8u:
        v64 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v65 = *(_QWORD *)(v64 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v65 + 48))(a2, 1, v64))
        {
          v66 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          v149 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
          *((_BYTE *)a1 + *(int *)(v64 + 20)) = *((_BYTE *)a2 + *(int *)(v64 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v64);
        }
        v150 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v150 + 20)) = *(void **)((char *)a2 + *(int *)(v150 + 20));
        v56 = a1;
        v57 = v7;
        v58 = 8;
        goto LABEL_165;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v67 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
        v56 = a1;
        v57 = v7;
        v58 = 9;
LABEL_165:
        swift_storeEnumTagMultiPayload(v56, v57, v58);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v340 = a1;
    v341 = v3;
    v342 = 0;
LABEL_202:
    swift_storeEnumTagMultiPayload(v340, v341, v342);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  return a1;
}

void **sub_100142610(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void **v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(void **, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void **, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void **v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(void **, uint64_t, uint64_t);
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void **v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(void **, uint64_t, uint64_t);
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(void **, uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void **v97;
  void **v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(void **, uint64_t, uint64_t);
  id v102;
  uint64_t v103;
  void *v104;
  id v105;
  void **v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  id v227;
  void *v228;
  id v229;
  int *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned __int8 v240;
  int v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  id v267;
  void *v268;
  id v269;
  int *v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unsigned __int8 v280;
  int v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  uint64_t v291;
  uint64_t v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  id v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  id v307;
  void *v308;
  id v309;
  int *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unsigned __int8 v320;
  int v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  void *v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  void *v346;
  id v347;
  void *v348;
  id v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  void *v355;
  id v356;
  void *v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  void *v364;
  id v365;
  void *v366;
  id v367;
  void **v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  id v377;
  void *v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  id v386;
  void *v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  void *v394;
  id v395;
  void *v396;
  id v397;
  unsigned __int8 v399;
  void *v400;
  uint64_t v401;
  char v402;
  uint64_t v403;
  char v404;
  uint64_t v405;
  char v406;
  char *v407;
  char *v408;
  uint64_t v409;
  char v410;
  int *v411;
  int *v412;
  int *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v14))
      {
        case 0u:
          v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v415 = v14;
          switch(swift_getEnumCaseMultiPayload(a2, v15))
          {
            case 1u:
              v16 = *a2;
              *a1 = *a2;
              v17 = v16;
              v18 = a1;
              v19 = v15;
              v20 = 1;
              goto LABEL_93;
            case 2u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v18 = a1;
              v19 = v15;
              v20 = 2;
              goto LABEL_93;
            case 3u:
              v222 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(a1, a2, v222);
              v18 = a1;
              v19 = v15;
              v20 = 3;
              goto LABEL_93;
            case 4u:
              v223 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(a1, a2, v223);
              v18 = a1;
              v19 = v15;
              v20 = 4;
              goto LABEL_93;
            case 5u:
              v224 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(a1, a2, v224);
              v18 = a1;
              v19 = v15;
              v20 = 5;
              goto LABEL_93;
            case 6u:
              v225 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(a1, a2, v225);
              v18 = a1;
              v19 = v15;
              v20 = 6;
              goto LABEL_93;
            case 8u:
              v226 = *a2;
              *a1 = *a2;
              v227 = v226;
              v18 = a1;
              v19 = v15;
              v20 = 8;
              goto LABEL_93;
            case 9u:
              v228 = *a2;
              *a1 = *a2;
              v229 = v228;
              v18 = a1;
              v19 = v15;
              v20 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v18, v19, v20);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
              break;
          }
          v230 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v231 = v230[5];
          v232 = (char *)a1 + v231;
          v233 = (char *)a2 + v231;
          if (*(void **)((char *)a2 + v231 + 8))
          {
            v411 = v230;
            v420 = a3;
            *(_QWORD *)v232 = *(_QWORD *)v233;
            v234 = *((_QWORD *)v233 + 1);
            *((_QWORD *)v232 + 1) = v234;
            v235 = (void *)*((_QWORD *)v233 + 2);
            v236 = *((_QWORD *)v233 + 3);
            v237 = *((_QWORD *)v233 + 4);
            v238 = *((_QWORD *)v233 + 5);
            v239 = *((_QWORD *)v233 + 6);
            v401 = *((_QWORD *)v233 + 7);
            v240 = v233[64];
            swift_bridgeObjectRetain(v234);
            sub_10003E1F0(v235, v236, v237, v238, v239, v401, v240);
            *((_QWORD *)v232 + 2) = v235;
            *((_QWORD *)v232 + 3) = v236;
            *((_QWORD *)v232 + 4) = v237;
            *((_QWORD *)v232 + 5) = v238;
            *((_QWORD *)v232 + 6) = v239;
            *((_QWORD *)v232 + 7) = v401;
            v232[64] = v240;
            v232[65] = v233[65];
            v232[66] = v233[66];
            v232[67] = v233[67];
            v232[68] = v233[68];
            v241 = v233[120];
            if (v241 == 255)
            {
              v242 = *(_OWORD *)(v233 + 72);
              v243 = *(_OWORD *)(v233 + 88);
              v244 = *(_OWORD *)(v233 + 104);
              v232[120] = v233[120];
              *(_OWORD *)(v232 + 88) = v243;
              *(_OWORD *)(v232 + 104) = v244;
              *(_OWORD *)(v232 + 72) = v242;
            }
            else
            {
              v402 = v241 & 1;
              v253 = (void *)*((_QWORD *)v233 + 9);
              v252 = *((_QWORD *)v233 + 10);
              v254 = *((_QWORD *)v233 + 11);
              v255 = *((_QWORD *)v233 + 12);
              v256 = *((_QWORD *)v233 + 13);
              v257 = *((_QWORD *)v233 + 14);
              sub_10002B764(v253, v252, v254, v255, v256, v257, v241 & 1);
              *((_QWORD *)v232 + 9) = v253;
              *((_QWORD *)v232 + 10) = v252;
              *((_QWORD *)v232 + 11) = v254;
              *((_QWORD *)v232 + 12) = v255;
              *((_QWORD *)v232 + 13) = v256;
              *((_QWORD *)v232 + 14) = v257;
              v232[120] = v402;
            }
            v251 = v415;
            a3 = v420;
            v232[121] = v233[121];
            v230 = v411;
          }
          else
          {
            v245 = *(_OWORD *)v233;
            v246 = *((_OWORD *)v233 + 1);
            v247 = *((_OWORD *)v233 + 3);
            *((_OWORD *)v232 + 2) = *((_OWORD *)v233 + 2);
            *((_OWORD *)v232 + 3) = v247;
            *(_OWORD *)v232 = v245;
            *((_OWORD *)v232 + 1) = v246;
            v248 = *((_OWORD *)v233 + 4);
            v249 = *((_OWORD *)v233 + 5);
            v250 = *((_OWORD *)v233 + 6);
            *(_OWORD *)(v232 + 106) = *(_OWORD *)(v233 + 106);
            *((_OWORD *)v232 + 5) = v249;
            *((_OWORD *)v232 + 6) = v250;
            *((_OWORD *)v232 + 4) = v248;
            v251 = v14;
          }
          *((_BYTE *)a1 + v230[6]) = *((_BYTE *)a2 + v230[6]);
          *((_BYTE *)a1 + v230[7]) = *((_BYTE *)a2 + v230[7]);
          *((_BYTE *)a1 + v230[8]) = *((_BYTE *)a2 + v230[8]);
          *((_BYTE *)a1 + v230[9]) = *((_BYTE *)a2 + v230[9]);
          *((_BYTE *)a1 + v230[10]) = *((_BYTE *)a2 + v230[10]);
          v258 = v230[11];
          v259 = *(void **)((char *)a2 + v258);
          *(void **)((char *)a1 + v258) = v259;
          v260 = v259;
          v106 = a1;
          v107 = v251;
          v108 = 0;
          goto LABEL_201;
        case 1u:
          v71 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v417 = v14;
          switch(swift_getEnumCaseMultiPayload(a2, v71))
          {
            case 1u:
              v72 = *a2;
              *a1 = *a2;
              v73 = v72;
              v74 = a1;
              v75 = v71;
              v76 = 1;
              goto LABEL_125;
            case 2u:
              v301 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v301 - 8) + 16))(a1, a2, v301);
              v74 = a1;
              v75 = v71;
              v76 = 2;
              goto LABEL_125;
            case 3u:
              v302 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(a1, a2, v302);
              v74 = a1;
              v75 = v71;
              v76 = 3;
              goto LABEL_125;
            case 4u:
              v303 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(a1, a2, v303);
              v74 = a1;
              v75 = v71;
              v76 = 4;
              goto LABEL_125;
            case 5u:
              v304 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v304 - 8) + 16))(a1, a2, v304);
              v74 = a1;
              v75 = v71;
              v76 = 5;
              goto LABEL_125;
            case 6u:
              v305 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v305 - 8) + 16))(a1, a2, v305);
              v74 = a1;
              v75 = v71;
              v76 = 6;
              goto LABEL_125;
            case 8u:
              v306 = *a2;
              *a1 = *a2;
              v307 = v306;
              v74 = a1;
              v75 = v71;
              v76 = 8;
              goto LABEL_125;
            case 9u:
              v308 = *a2;
              *a1 = *a2;
              v309 = v308;
              v74 = a1;
              v75 = v71;
              v76 = 9;
LABEL_125:
              swift_storeEnumTagMultiPayload(v74, v75, v76);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
              break;
          }
          v310 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v311 = v310[5];
          v312 = (char *)a1 + v311;
          v313 = (char *)a2 + v311;
          if (*(void **)((char *)a2 + v311 + 8))
          {
            v413 = v310;
            v421 = a3;
            *(_QWORD *)v312 = *(_QWORD *)v313;
            v314 = *((_QWORD *)v313 + 1);
            *((_QWORD *)v312 + 1) = v314;
            v315 = (void *)*((_QWORD *)v313 + 2);
            v316 = *((_QWORD *)v313 + 3);
            v317 = *((_QWORD *)v313 + 4);
            v318 = *((_QWORD *)v313 + 5);
            v319 = *((_QWORD *)v313 + 6);
            v405 = *((_QWORD *)v313 + 7);
            v320 = v313[64];
            swift_bridgeObjectRetain(v314);
            sub_10003E1F0(v315, v316, v317, v318, v319, v405, v320);
            *((_QWORD *)v312 + 2) = v315;
            *((_QWORD *)v312 + 3) = v316;
            *((_QWORD *)v312 + 4) = v317;
            *((_QWORD *)v312 + 5) = v318;
            *((_QWORD *)v312 + 6) = v319;
            *((_QWORD *)v312 + 7) = v405;
            v312[64] = v320;
            v312[65] = v313[65];
            v312[66] = v313[66];
            v312[67] = v313[67];
            v312[68] = v313[68];
            v321 = v313[120];
            if (v321 == 255)
            {
              v322 = *(_OWORD *)(v313 + 72);
              v323 = *(_OWORD *)(v313 + 88);
              v324 = *(_OWORD *)(v313 + 104);
              v312[120] = v313[120];
              *(_OWORD *)(v312 + 88) = v323;
              *(_OWORD *)(v312 + 104) = v324;
              *(_OWORD *)(v312 + 72) = v322;
            }
            else
            {
              v406 = v321 & 1;
              v333 = (void *)*((_QWORD *)v313 + 9);
              v332 = *((_QWORD *)v313 + 10);
              v334 = *((_QWORD *)v313 + 11);
              v335 = *((_QWORD *)v313 + 12);
              v336 = *((_QWORD *)v313 + 13);
              v337 = *((_QWORD *)v313 + 14);
              sub_10002B764(v333, v332, v334, v335, v336, v337, v321 & 1);
              *((_QWORD *)v312 + 9) = v333;
              *((_QWORD *)v312 + 10) = v332;
              *((_QWORD *)v312 + 11) = v334;
              *((_QWORD *)v312 + 12) = v335;
              *((_QWORD *)v312 + 13) = v336;
              *((_QWORD *)v312 + 14) = v337;
              v312[120] = v406;
            }
            v331 = v417;
            a3 = v421;
            v312[121] = v313[121];
            v310 = v413;
          }
          else
          {
            v325 = *(_OWORD *)v313;
            v326 = *((_OWORD *)v313 + 1);
            v327 = *((_OWORD *)v313 + 3);
            *((_OWORD *)v312 + 2) = *((_OWORD *)v313 + 2);
            *((_OWORD *)v312 + 3) = v327;
            *(_OWORD *)v312 = v325;
            *((_OWORD *)v312 + 1) = v326;
            v328 = *((_OWORD *)v313 + 4);
            v329 = *((_OWORD *)v313 + 5);
            v330 = *((_OWORD *)v313 + 6);
            *(_OWORD *)(v312 + 106) = *(_OWORD *)(v313 + 106);
            *((_OWORD *)v312 + 5) = v329;
            *((_OWORD *)v312 + 6) = v330;
            *((_OWORD *)v312 + 4) = v328;
            v331 = v14;
          }
          *((_BYTE *)a1 + v310[6]) = *((_BYTE *)a2 + v310[6]);
          *((_BYTE *)a1 + v310[7]) = *((_BYTE *)a2 + v310[7]);
          *((_BYTE *)a1 + v310[8]) = *((_BYTE *)a2 + v310[8]);
          *((_BYTE *)a1 + v310[9]) = *((_BYTE *)a2 + v310[9]);
          *((_BYTE *)a1 + v310[10]) = *((_BYTE *)a2 + v310[10]);
          v338 = v310[11];
          v339 = *(void **)((char *)a2 + v338);
          *(void **)((char *)a1 + v338) = v339;
          v340 = v339;
          v106 = a1;
          v107 = v331;
          v108 = 1;
          goto LABEL_201;
        case 2u:
          v77 = *a2;
          *a1 = *a2;
          v78 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v79 = (void **)((char *)a1 + v78);
          v80 = (void **)((char *)a2 + v78);
          v81 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v82 = *(_QWORD *)(v81 - 8);
          v83 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v82 + 48);
          v84 = v77;
          if (v83(v80, 1, v81))
          {
            v85 = sub_10002A750(&qword_100644980);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v80, v81))
            {
              case 1u:
                v151 = *v80;
                *v79 = *v80;
                v152 = v151;
                v153 = v79;
                v154 = v81;
                v155 = 1;
                goto LABEL_176;
              case 2u:
                v371 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v79, v80, v371);
                v153 = v79;
                v154 = v81;
                v155 = 2;
                goto LABEL_176;
              case 3u:
                v372 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v79, v80, v372);
                v153 = v79;
                v154 = v81;
                v155 = 3;
                goto LABEL_176;
              case 4u:
                v373 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v79, v80, v373);
                v153 = v79;
                v154 = v81;
                v155 = 4;
                goto LABEL_176;
              case 5u:
                v374 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v79, v80, v374);
                v153 = v79;
                v154 = v81;
                v155 = 5;
                goto LABEL_176;
              case 6u:
                v375 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v79, v80, v375);
                v153 = v79;
                v154 = v81;
                v155 = 6;
                goto LABEL_176;
              case 8u:
                v376 = *v80;
                *v79 = *v80;
                v377 = v376;
                v153 = v79;
                v154 = v81;
                v155 = 8;
                goto LABEL_176;
              case 9u:
                v378 = *v80;
                *v79 = *v80;
                v379 = v378;
                v153 = v79;
                v154 = v81;
                v155 = 9;
LABEL_176:
                swift_storeEnumTagMultiPayload(v153, v154, v155);
                break;
              default:
                memcpy(v79, v80, *(_QWORD *)(v82 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
          }
          v106 = a1;
          v107 = v14;
          v108 = 2;
          goto LABEL_201;
        case 3u:
          v86 = *a2;
          *a1 = *a2;
          v87 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v88 = (void **)((char *)a1 + v87);
          v89 = (void **)((char *)a2 + v87);
          v90 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v91 = *(_QWORD *)(v90 - 8);
          v92 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v91 + 48);
          v93 = v86;
          if (v92(v89, 1, v90))
          {
            v94 = sub_10002A750(&qword_100644980);
            memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v89, v90))
            {
              case 1u:
                v156 = *v89;
                *v88 = *v89;
                v157 = v156;
                v158 = v88;
                v159 = v90;
                v160 = 1;
                goto LABEL_187;
              case 2u:
                v380 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v88, v89, v380);
                v158 = v88;
                v159 = v90;
                v160 = 2;
                goto LABEL_187;
              case 3u:
                v381 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v88, v89, v381);
                v158 = v88;
                v159 = v90;
                v160 = 3;
                goto LABEL_187;
              case 4u:
                v382 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v88, v89, v382);
                v158 = v88;
                v159 = v90;
                v160 = 4;
                goto LABEL_187;
              case 5u:
                v383 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v88, v89, v383);
                v158 = v88;
                v159 = v90;
                v160 = 5;
                goto LABEL_187;
              case 6u:
                v384 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v88, v89, v384);
                v158 = v88;
                v159 = v90;
                v160 = 6;
                goto LABEL_187;
              case 8u:
                v385 = *v89;
                *v88 = *v89;
                v386 = v385;
                v158 = v88;
                v159 = v90;
                v160 = 8;
                goto LABEL_187;
              case 9u:
                v387 = *v89;
                *v88 = *v89;
                v388 = v387;
                v158 = v88;
                v159 = v90;
                v160 = 9;
LABEL_187:
                swift_storeEnumTagMultiPayload(v158, v159, v160);
                break;
              default:
                memcpy(v88, v89, *(_QWORD *)(v91 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
          }
          v106 = a1;
          v107 = v14;
          v108 = 3;
          goto LABEL_201;
        case 4u:
          v95 = *a2;
          *a1 = *a2;
          v96 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v97 = (void **)((char *)a1 + v96);
          v98 = (void **)((char *)a2 + v96);
          v99 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v100 = *(_QWORD *)(v99 - 8);
          v101 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v100 + 48);
          v102 = v95;
          if (v101(v98, 1, v99))
          {
            v103 = sub_10002A750(&qword_100644980);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v98, v99))
            {
              case 1u:
                v161 = *v98;
                *v97 = *v98;
                v162 = v161;
                v163 = v97;
                v164 = v99;
                v165 = 1;
                goto LABEL_198;
              case 2u:
                v389 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v97, v98, v389);
                v163 = v97;
                v164 = v99;
                v165 = 2;
                goto LABEL_198;
              case 3u:
                v390 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v97, v98, v390);
                v163 = v97;
                v164 = v99;
                v165 = 3;
                goto LABEL_198;
              case 4u:
                v391 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v97, v98, v391);
                v163 = v97;
                v164 = v99;
                v165 = 4;
                goto LABEL_198;
              case 5u:
                v392 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v392 - 8) + 16))(v97, v98, v392);
                v163 = v97;
                v164 = v99;
                v165 = 5;
                goto LABEL_198;
              case 6u:
                v393 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v393 - 8) + 16))(v97, v98, v393);
                v163 = v97;
                v164 = v99;
                v165 = 6;
                goto LABEL_198;
              case 8u:
                v394 = *v98;
                *v97 = *v98;
                v395 = v394;
                v163 = v97;
                v164 = v99;
                v165 = 8;
                goto LABEL_198;
              case 9u:
                v396 = *v98;
                *v97 = *v98;
                v397 = v396;
                v163 = v97;
                v164 = v99;
                v165 = 9;
LABEL_198:
                swift_storeEnumTagMultiPayload(v163, v164, v165);
                break;
              default:
                memcpy(v97, v98, *(_QWORD *)(v100 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
          }
          v106 = a1;
          v107 = v14;
          v108 = 4;
          goto LABEL_201;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v104 = a2[2];
          a1[2] = v104;
          v105 = v104;
          v106 = a1;
          v107 = v14;
          v108 = 5;
          goto LABEL_201;
        case 6u:
          v116 = *a2;
          *a1 = *a2;
          v117 = v116;
          v106 = a1;
          v107 = v14;
          v108 = 6;
          goto LABEL_201;
        case 7u:
          v109 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v110 = *(_QWORD *)(v109 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
          {
            v111 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          else
          {
            v166 = *a2;
            *a1 = *a2;
            v167 = *(int *)(v109 + 20);
            v408 = (char *)a1 + v167;
            v168 = (char *)a2 + v167;
            v169 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v170 = v14;
            v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v169 - 8) + 16);
            v172 = swift_bridgeObjectRetain(v166);
            v171(v408, v168, v169, v172);
            v14 = v170;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
          }
          v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v174 = (void **)((char *)a1 + v173);
          v175 = (void **)((char *)a2 + v173);
          if (v175[1])
          {
            *v174 = *v175;
            v176 = v175[1];
            v174[1] = v176;
            v177 = (void *)v175[2];
            v174[2] = v177;
            swift_bridgeObjectRetain(v176);
            v178 = v177;
          }
          else
          {
            v180 = *(_OWORD *)v175;
            v174[2] = v175[2];
            *(_OWORD *)v174 = v180;
          }
          v106 = a1;
          v107 = v14;
          v108 = 7;
          goto LABEL_201;
        case 8u:
          v118 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v119 = *(_QWORD *)(v118 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v119 + 48))(a2, 1, v118))
          {
            v120 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            *((_BYTE *)a1 + *(int *)(v118 + 20)) = *((_BYTE *)a2 + *(int *)(v118 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v119 + 56))(a1, 0, 1, v118);
          }
          v182 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v182 + 20)) = *(void **)((char *)a2 + *(int *)(v182 + 20));
          v106 = a1;
          v107 = v14;
          v108 = 8;
          goto LABEL_201;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v112 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v113 = (char *)a1 + v112;
          v114 = (char *)a2 + v112;
          v115 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
          v106 = a1;
          v107 = v14;
          v108 = 9;
LABEL_201:
          swift_storeEnumTagMultiPayload(v106, v107, v108);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v368 = a1;
      v369 = a3;
      v370 = 1;
      goto LABEL_203;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v414 = v7;
          v418 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v8))
          {
            case 1u:
              v9 = *a2;
              *a1 = *a2;
              v10 = v9;
              v11 = a1;
              v12 = v8;
              v13 = 1;
              goto LABEL_77;
            case 2u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v11 = a1;
              v12 = v8;
              v13 = 2;
              goto LABEL_77;
            case 3u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v11 = a1;
              v12 = v8;
              v13 = 3;
              goto LABEL_77;
            case 4u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v11 = a1;
              v12 = v8;
              v13 = 4;
              goto LABEL_77;
            case 5u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v11 = a1;
              v12 = v8;
              v13 = 5;
              goto LABEL_77;
            case 6u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
              v11 = a1;
              v12 = v8;
              v13 = 6;
              goto LABEL_77;
            case 8u:
              v188 = *a2;
              *a1 = *a2;
              v189 = v188;
              v11 = a1;
              v12 = v8;
              v13 = 8;
              goto LABEL_77;
            case 9u:
              v190 = *a2;
              *a1 = *a2;
              v191 = v190;
              v11 = a1;
              v12 = v8;
              v13 = 9;
LABEL_77:
              swift_storeEnumTagMultiPayload(v11, v12, v13);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
              break;
          }
          v192 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v193 = v192[5];
          v194 = (char *)a1 + v193;
          v195 = (char *)a2 + v193;
          if (*(void **)((char *)a2 + v193 + 8))
          {
            *(_QWORD *)v194 = *(_QWORD *)v195;
            v196 = *((_QWORD *)v195 + 1);
            *((_QWORD *)v194 + 1) = v196;
            v197 = (void *)*((_QWORD *)v195 + 2);
            v198 = *((_QWORD *)v195 + 3);
            v199 = *((_QWORD *)v195 + 4);
            v200 = *((_QWORD *)v195 + 5);
            v201 = *((_QWORD *)v195 + 6);
            v409 = *((_QWORD *)v195 + 7);
            v399 = v195[64];
            swift_bridgeObjectRetain(v196);
            sub_10003E1F0(v197, v198, v199, v200, v201, v409, v399);
            *((_QWORD *)v194 + 2) = v197;
            *((_QWORD *)v194 + 3) = v198;
            *((_QWORD *)v194 + 4) = v199;
            *((_QWORD *)v194 + 5) = v200;
            *((_QWORD *)v194 + 6) = v201;
            *((_QWORD *)v194 + 7) = v409;
            v194[64] = v399;
            v194[65] = v195[65];
            v194[66] = v195[66];
            v194[67] = v195[67];
            v194[68] = v195[68];
            v202 = v195[120];
            if (v202 == 255)
            {
              v203 = *(_OWORD *)(v195 + 72);
              v204 = *(_OWORD *)(v195 + 88);
              v205 = *(_OWORD *)(v195 + 104);
              v194[120] = v195[120];
              *(_OWORD *)(v194 + 88) = v204;
              *(_OWORD *)(v194 + 104) = v205;
              *(_OWORD *)(v194 + 72) = v203;
            }
            else
            {
              v410 = v202 & 1;
              v213 = *((_QWORD *)v195 + 10);
              v400 = (void *)*((_QWORD *)v195 + 9);
              v214 = *((_QWORD *)v195 + 11);
              v215 = *((_QWORD *)v195 + 12);
              v216 = *((_QWORD *)v195 + 13);
              v217 = *((_QWORD *)v195 + 14);
              sub_10002B764(v400, v213, v214, v215, v216, v217, v202 & 1);
              *((_QWORD *)v194 + 9) = v400;
              *((_QWORD *)v194 + 10) = v213;
              *((_QWORD *)v194 + 11) = v214;
              *((_QWORD *)v194 + 12) = v215;
              *((_QWORD *)v194 + 13) = v216;
              *((_QWORD *)v194 + 14) = v217;
              v194[120] = v410;
            }
            v212 = v414;
            a3 = v418;
            v194[121] = v195[121];
          }
          else
          {
            v206 = *(_OWORD *)v195;
            v207 = *((_OWORD *)v195 + 1);
            v208 = *((_OWORD *)v195 + 3);
            *((_OWORD *)v194 + 2) = *((_OWORD *)v195 + 2);
            *((_OWORD *)v194 + 3) = v208;
            *(_OWORD *)v194 = v206;
            *((_OWORD *)v194 + 1) = v207;
            v209 = *((_OWORD *)v195 + 4);
            v210 = *((_OWORD *)v195 + 5);
            v211 = *((_OWORD *)v195 + 6);
            *(_OWORD *)(v194 + 106) = *(_OWORD *)(v195 + 106);
            *((_OWORD *)v194 + 5) = v210;
            *((_OWORD *)v194 + 6) = v211;
            *((_OWORD *)v194 + 4) = v209;
            v212 = v7;
          }
          *((_BYTE *)a1 + v192[6]) = *((_BYTE *)a2 + v192[6]);
          *((_BYTE *)a1 + v192[7]) = *((_BYTE *)a2 + v192[7]);
          *((_BYTE *)a1 + v192[8]) = *((_BYTE *)a2 + v192[8]);
          *((_BYTE *)a1 + v192[9]) = *((_BYTE *)a2 + v192[9]);
          *((_BYTE *)a1 + v192[10]) = *((_BYTE *)a2 + v192[10]);
          v218 = v192[11];
          v219 = *(void **)((char *)a2 + v218);
          *(void **)((char *)a1 + v218) = v219;
          v220 = v219;
          v56 = a1;
          v57 = v212;
          v58 = 0;
          goto LABEL_166;
        case 1u:
          v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v416 = v7;
          v419 = a3;
          switch(swift_getEnumCaseMultiPayload(a2, v21))
          {
            case 1u:
              v22 = *a2;
              *a1 = *a2;
              v23 = v22;
              v24 = a1;
              v25 = v21;
              v26 = 1;
              goto LABEL_109;
            case 2u:
              v261 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v261 - 8) + 16))(a1, a2, v261);
              v24 = a1;
              v25 = v21;
              v26 = 2;
              goto LABEL_109;
            case 3u:
              v262 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(a1, a2, v262);
              v24 = a1;
              v25 = v21;
              v26 = 3;
              goto LABEL_109;
            case 4u:
              v263 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(a1, a2, v263);
              v24 = a1;
              v25 = v21;
              v26 = 4;
              goto LABEL_109;
            case 5u:
              v264 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(a1, a2, v264);
              v24 = a1;
              v25 = v21;
              v26 = 5;
              goto LABEL_109;
            case 6u:
              v265 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(a1, a2, v265);
              v24 = a1;
              v25 = v21;
              v26 = 6;
              goto LABEL_109;
            case 8u:
              v266 = *a2;
              *a1 = *a2;
              v267 = v266;
              v24 = a1;
              v25 = v21;
              v26 = 8;
              goto LABEL_109;
            case 9u:
              v268 = *a2;
              *a1 = *a2;
              v269 = v268;
              v24 = a1;
              v25 = v21;
              v26 = 9;
LABEL_109:
              swift_storeEnumTagMultiPayload(v24, v25, v26);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
              break;
          }
          v270 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v271 = v270[5];
          v272 = (char *)a1 + v271;
          v273 = (char *)a2 + v271;
          if (*(void **)((char *)a2 + v271 + 8))
          {
            v412 = v270;
            *(_QWORD *)v272 = *(_QWORD *)v273;
            v274 = *((_QWORD *)v273 + 1);
            *((_QWORD *)v272 + 1) = v274;
            v275 = (void *)*((_QWORD *)v273 + 2);
            v276 = *((_QWORD *)v273 + 3);
            v277 = *((_QWORD *)v273 + 4);
            v278 = *((_QWORD *)v273 + 5);
            v279 = *((_QWORD *)v273 + 6);
            v403 = *((_QWORD *)v273 + 7);
            v280 = v273[64];
            swift_bridgeObjectRetain(v274);
            sub_10003E1F0(v275, v276, v277, v278, v279, v403, v280);
            *((_QWORD *)v272 + 2) = v275;
            *((_QWORD *)v272 + 3) = v276;
            *((_QWORD *)v272 + 4) = v277;
            *((_QWORD *)v272 + 5) = v278;
            *((_QWORD *)v272 + 6) = v279;
            *((_QWORD *)v272 + 7) = v403;
            v272[64] = v280;
            v272[65] = v273[65];
            v272[66] = v273[66];
            v272[67] = v273[67];
            v272[68] = v273[68];
            v281 = v273[120];
            if (v281 == 255)
            {
              v282 = *(_OWORD *)(v273 + 72);
              v283 = *(_OWORD *)(v273 + 88);
              v284 = *(_OWORD *)(v273 + 104);
              v272[120] = v273[120];
              *(_OWORD *)(v272 + 88) = v283;
              *(_OWORD *)(v272 + 104) = v284;
              *(_OWORD *)(v272 + 72) = v282;
            }
            else
            {
              v404 = v281 & 1;
              v293 = (void *)*((_QWORD *)v273 + 9);
              v292 = *((_QWORD *)v273 + 10);
              v294 = *((_QWORD *)v273 + 11);
              v295 = *((_QWORD *)v273 + 12);
              v296 = *((_QWORD *)v273 + 13);
              v297 = *((_QWORD *)v273 + 14);
              sub_10002B764(v293, v292, v294, v295, v296, v297, v281 & 1);
              *((_QWORD *)v272 + 9) = v293;
              *((_QWORD *)v272 + 10) = v292;
              *((_QWORD *)v272 + 11) = v294;
              *((_QWORD *)v272 + 12) = v295;
              *((_QWORD *)v272 + 13) = v296;
              *((_QWORD *)v272 + 14) = v297;
              v272[120] = v404;
            }
            v291 = v416;
            a3 = v419;
            v272[121] = v273[121];
            v270 = v412;
          }
          else
          {
            v285 = *(_OWORD *)v273;
            v286 = *((_OWORD *)v273 + 1);
            v287 = *((_OWORD *)v273 + 3);
            *((_OWORD *)v272 + 2) = *((_OWORD *)v273 + 2);
            *((_OWORD *)v272 + 3) = v287;
            *(_OWORD *)v272 = v285;
            *((_OWORD *)v272 + 1) = v286;
            v288 = *((_OWORD *)v273 + 4);
            v289 = *((_OWORD *)v273 + 5);
            v290 = *((_OWORD *)v273 + 6);
            *(_OWORD *)(v272 + 106) = *(_OWORD *)(v273 + 106);
            *((_OWORD *)v272 + 5) = v289;
            *((_OWORD *)v272 + 6) = v290;
            *((_OWORD *)v272 + 4) = v288;
            v291 = v7;
          }
          *((_BYTE *)a1 + v270[6]) = *((_BYTE *)a2 + v270[6]);
          *((_BYTE *)a1 + v270[7]) = *((_BYTE *)a2 + v270[7]);
          *((_BYTE *)a1 + v270[8]) = *((_BYTE *)a2 + v270[8]);
          *((_BYTE *)a1 + v270[9]) = *((_BYTE *)a2 + v270[9]);
          *((_BYTE *)a1 + v270[10]) = *((_BYTE *)a2 + v270[10]);
          v298 = v270[11];
          v299 = *(void **)((char *)a2 + v298);
          *(void **)((char *)a1 + v298) = v299;
          v300 = v299;
          v56 = a1;
          v57 = v291;
          v58 = 1;
          goto LABEL_166;
        case 2u:
          v27 = *a2;
          *a1 = *a2;
          v28 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v29 = (void **)((char *)a1 + v28);
          v30 = (void **)((char *)a2 + v28);
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v32 = *(_QWORD *)(v31 - 8);
          v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v32 + 48);
          v34 = v27;
          if (v33(v30, 1, v31))
          {
            v35 = sub_10002A750(&qword_100644980);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v30, v31))
            {
              case 1u:
                v121 = *v30;
                *v29 = *v30;
                v122 = v121;
                v123 = v29;
                v124 = v31;
                v125 = 1;
                goto LABEL_141;
              case 2u:
                v341 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v341 - 8) + 16))(v29, v30, v341);
                v123 = v29;
                v124 = v31;
                v125 = 2;
                goto LABEL_141;
              case 3u:
                v342 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v29, v30, v342);
                v123 = v29;
                v124 = v31;
                v125 = 3;
                goto LABEL_141;
              case 4u:
                v343 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v29, v30, v343);
                v123 = v29;
                v124 = v31;
                v125 = 4;
                goto LABEL_141;
              case 5u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v29, v30, v344);
                v123 = v29;
                v124 = v31;
                v125 = 5;
                goto LABEL_141;
              case 6u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v29, v30, v345);
                v123 = v29;
                v124 = v31;
                v125 = 6;
                goto LABEL_141;
              case 8u:
                v346 = *v30;
                *v29 = *v30;
                v347 = v346;
                v123 = v29;
                v124 = v31;
                v125 = 8;
                goto LABEL_141;
              case 9u:
                v348 = *v30;
                *v29 = *v30;
                v349 = v348;
                v123 = v29;
                v124 = v31;
                v125 = 9;
LABEL_141:
                swift_storeEnumTagMultiPayload(v123, v124, v125);
                break;
              default:
                memcpy(v29, v30, *(_QWORD *)(v32 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          }
          v56 = a1;
          v57 = v7;
          v58 = 2;
          goto LABEL_166;
        case 3u:
          v36 = *a2;
          *a1 = *a2;
          v37 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v38 = (void **)((char *)a1 + v37);
          v39 = (void **)((char *)a2 + v37);
          v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v41 = *(_QWORD *)(v40 - 8);
          v42 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48);
          v43 = v36;
          if (v42(v39, 1, v40))
          {
            v44 = sub_10002A750(&qword_100644980);
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v39, v40))
            {
              case 1u:
                v126 = *v39;
                *v38 = *v39;
                v127 = v126;
                v128 = v38;
                v129 = v40;
                v130 = 1;
                goto LABEL_152;
              case 2u:
                v350 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v38, v39, v350);
                v128 = v38;
                v129 = v40;
                v130 = 2;
                goto LABEL_152;
              case 3u:
                v351 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v38, v39, v351);
                v128 = v38;
                v129 = v40;
                v130 = 3;
                goto LABEL_152;
              case 4u:
                v352 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v38, v39, v352);
                v128 = v38;
                v129 = v40;
                v130 = 4;
                goto LABEL_152;
              case 5u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v38, v39, v353);
                v128 = v38;
                v129 = v40;
                v130 = 5;
                goto LABEL_152;
              case 6u:
                v354 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v38, v39, v354);
                v128 = v38;
                v129 = v40;
                v130 = 6;
                goto LABEL_152;
              case 8u:
                v355 = *v39;
                *v38 = *v39;
                v356 = v355;
                v128 = v38;
                v129 = v40;
                v130 = 8;
                goto LABEL_152;
              case 9u:
                v357 = *v39;
                *v38 = *v39;
                v358 = v357;
                v128 = v38;
                v129 = v40;
                v130 = 9;
LABEL_152:
                swift_storeEnumTagMultiPayload(v128, v129, v130);
                break;
              default:
                memcpy(v38, v39, *(_QWORD *)(v41 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
          }
          v56 = a1;
          v57 = v7;
          v58 = 3;
          goto LABEL_166;
        case 4u:
          v45 = *a2;
          *a1 = *a2;
          v46 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v47 = (void **)((char *)a1 + v46);
          v48 = (void **)((char *)a2 + v46);
          v49 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v50 = *(_QWORD *)(v49 - 8);
          v51 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v50 + 48);
          v52 = v45;
          if (v51(v48, 1, v49))
          {
            v53 = sub_10002A750(&qword_100644980);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v48, v49))
            {
              case 1u:
                v131 = *v48;
                *v47 = *v48;
                v132 = v131;
                v133 = v47;
                v134 = v49;
                v135 = 1;
                goto LABEL_163;
              case 2u:
                v359 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v47, v48, v359);
                v133 = v47;
                v134 = v49;
                v135 = 2;
                goto LABEL_163;
              case 3u:
                v360 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v47, v48, v360);
                v133 = v47;
                v134 = v49;
                v135 = 3;
                goto LABEL_163;
              case 4u:
                v361 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v47, v48, v361);
                v133 = v47;
                v134 = v49;
                v135 = 4;
                goto LABEL_163;
              case 5u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v47, v48, v362);
                v133 = v47;
                v134 = v49;
                v135 = 5;
                goto LABEL_163;
              case 6u:
                v363 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v47, v48, v363);
                v133 = v47;
                v134 = v49;
                v135 = 6;
                goto LABEL_163;
              case 8u:
                v364 = *v48;
                *v47 = *v48;
                v365 = v364;
                v133 = v47;
                v134 = v49;
                v135 = 8;
                goto LABEL_163;
              case 9u:
                v366 = *v48;
                *v47 = *v48;
                v367 = v366;
                v133 = v47;
                v134 = v49;
                v135 = 9;
LABEL_163:
                swift_storeEnumTagMultiPayload(v133, v134, v135);
                break;
              default:
                memcpy(v47, v48, *(_QWORD *)(v50 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          }
          v56 = a1;
          v57 = v7;
          v58 = 4;
          goto LABEL_166;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v54 = a2[2];
          a1[2] = v54;
          v55 = v54;
          v56 = a1;
          v57 = v7;
          v58 = 5;
          goto LABEL_166;
        case 6u:
          v59 = *a2;
          *a1 = *a2;
          v60 = v59;
          v56 = a1;
          v57 = v7;
          v58 = 6;
          goto LABEL_166;
        case 7u:
          v61 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v62 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48))(a2, 1, v61))
          {
            v63 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            v136 = *a2;
            *a1 = *a2;
            v137 = *(int *)(v61 + 20);
            v407 = (char *)a1 + v137;
            v138 = (char *)a2 + v137;
            v139 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v140 = v7;
            v141 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v139 - 8) + 16);
            v142 = swift_bridgeObjectRetain(v136);
            v141(v407, v138, v139, v142);
            v7 = v140;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v62 + 56))(a1, 0, 1, v61);
          }
          v143 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v144 = (void **)((char *)a1 + v143);
          v145 = (void **)((char *)a2 + v143);
          if (v145[1])
          {
            *v144 = *v145;
            v146 = v145[1];
            v144[1] = v146;
            v147 = (void *)v145[2];
            v144[2] = v147;
            swift_bridgeObjectRetain(v146);
            v148 = v147;
          }
          else
          {
            v179 = *(_OWORD *)v145;
            v144[2] = v145[2];
            *(_OWORD *)v144 = v179;
          }
          v56 = a1;
          v57 = v7;
          v58 = 7;
          goto LABEL_166;
        case 8u:
          v64 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v65 = *(_QWORD *)(v64 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v65 + 48))(a2, 1, v64))
          {
            v66 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            v149 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
            *((_BYTE *)a1 + *(int *)(v64 + 20)) = *((_BYTE *)a2 + *(int *)(v64 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v65 + 56))(a1, 0, 1, v64);
          }
          v150 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v150 + 20)) = *(void **)((char *)a2 + *(int *)(v150 + 20));
          v56 = a1;
          v57 = v7;
          v58 = 8;
          goto LABEL_166;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v67 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v68 = (char *)a1 + v67;
          v69 = (char *)a2 + v67;
          v70 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
          v56 = a1;
          v57 = v7;
          v58 = 9;
LABEL_166:
          swift_storeEnumTagMultiPayload(v56, v57, v58);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v368 = a1;
      v369 = a3;
      v370 = 0;
LABEL_203:
      swift_storeEnumTagMultiPayload(v368, v369, v370);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100144624(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  _OWORD *v136;
  _OWORD *v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  _OWORD *v148;
  _OWORD *v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  uint64_t v159;
  _OWORD *v160;
  _OWORD *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  _OWORD *v172;
  _OWORD *v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v13))
    {
      case 0u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 2u:
            v15 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
            v16 = a1;
            v17 = v14;
            v18 = 2;
            goto LABEL_70;
          case 3u:
            v142 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(a1, a2, v142);
            v16 = a1;
            v17 = v14;
            v18 = 3;
            goto LABEL_70;
          case 4u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(a1, a2, v143);
            v16 = a1;
            v17 = v14;
            v18 = 4;
            goto LABEL_70;
          case 5u:
            v144 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(a1, a2, v144);
            v16 = a1;
            v17 = v14;
            v18 = 5;
            goto LABEL_70;
          case 6u:
            v145 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
            v16 = a1;
            v17 = v14;
            v18 = 6;
LABEL_70:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v146 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v147 = v146[5];
        v148 = (_OWORD *)((char *)a1 + v147);
        v149 = (_OWORD *)((char *)a2 + v147);
        v150 = v149[3];
        v148[2] = v149[2];
        v148[3] = v150;
        v151 = v149[1];
        *v148 = *v149;
        v148[1] = v151;
        *(_OWORD *)((char *)v148 + 106) = *(_OWORD *)((char *)v149 + 106);
        v152 = v149[6];
        v153 = v149[4];
        v148[5] = v149[5];
        v148[6] = v152;
        v148[4] = v153;
        *((_BYTE *)a1 + v146[6]) = *((_BYTE *)a2 + v146[6]);
        *((_BYTE *)a1 + v146[7]) = *((_BYTE *)a2 + v146[7]);
        *((_BYTE *)a1 + v146[8]) = *((_BYTE *)a2 + v146[8]);
        *((_BYTE *)a1 + v146[9]) = *((_BYTE *)a2 + v146[9]);
        *((_BYTE *)a1 + v146[10]) = *((_BYTE *)a2 + v146[10]);
        *(_QWORD *)((char *)a1 + v146[11]) = *(_QWORD *)((char *)a2 + v146[11]);
        v88 = a1;
        v89 = v13;
        v90 = 0;
        goto LABEL_135;
      case 1u:
        v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v55))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(a1, a2, v56);
            v57 = a1;
            v58 = v55;
            v59 = 2;
            goto LABEL_84;
          case 3u:
            v166 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(a1, a2, v166);
            v57 = a1;
            v58 = v55;
            v59 = 3;
            goto LABEL_84;
          case 4u:
            v167 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(a1, a2, v167);
            v57 = a1;
            v58 = v55;
            v59 = 4;
            goto LABEL_84;
          case 5u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(a1, a2, v168);
            v57 = a1;
            v58 = v55;
            v59 = 5;
            goto LABEL_84;
          case 6u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
            v57 = a1;
            v58 = v55;
            v59 = 6;
LABEL_84:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            break;
        }
        v170 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v171 = v170[5];
        v172 = (_OWORD *)((char *)a1 + v171);
        v173 = (_OWORD *)((char *)a2 + v171);
        v174 = v173[3];
        v172[2] = v173[2];
        v172[3] = v174;
        v175 = v173[1];
        *v172 = *v173;
        v172[1] = v175;
        *(_OWORD *)((char *)v172 + 106) = *(_OWORD *)((char *)v173 + 106);
        v176 = v173[6];
        v177 = v173[4];
        v172[5] = v173[5];
        v172[6] = v176;
        v172[4] = v177;
        *((_BYTE *)a1 + v170[6]) = *((_BYTE *)a2 + v170[6]);
        *((_BYTE *)a1 + v170[7]) = *((_BYTE *)a2 + v170[7]);
        *((_BYTE *)a1 + v170[8]) = *((_BYTE *)a2 + v170[8]);
        *((_BYTE *)a1 + v170[9]) = *((_BYTE *)a2 + v170[9]);
        *((_BYTE *)a1 + v170[10]) = *((_BYTE *)a2 + v170[10]);
        *(_QWORD *)((char *)a1 + v170[11]) = *(_QWORD *)((char *)a2 + v170[11]);
        v88 = a1;
        v89 = v13;
        v90 = 1;
        goto LABEL_135;
      case 2u:
        *a1 = *a2;
        v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = sub_10002A750(&qword_100644980);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v62, v63))
          {
            case 2u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v61, v62, v112);
              v113 = v61;
              v114 = v63;
              v115 = 2;
              goto LABEL_117;
            case 3u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v61, v62, v193);
              v113 = v61;
              v114 = v63;
              v115 = 3;
              goto LABEL_117;
            case 4u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v61, v62, v194);
              v113 = v61;
              v114 = v63;
              v115 = 4;
              goto LABEL_117;
            case 5u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v61, v62, v195);
              v113 = v61;
              v114 = v63;
              v115 = 5;
              goto LABEL_117;
            case 6u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v61, v62, v196);
              v113 = v61;
              v114 = v63;
              v115 = 6;
LABEL_117:
              swift_storeEnumTagMultiPayload(v113, v114, v115);
              break;
            default:
              memcpy(v61, v62, *(_QWORD *)(v64 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v88 = a1;
        v89 = v13;
        v90 = 2;
        goto LABEL_135;
      case 3u:
        *a1 = *a2;
        v66 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = sub_10002A750(&qword_100644980);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v68, v69))
          {
            case 2u:
              v116 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v67, v68, v116);
              v117 = v67;
              v118 = v69;
              v119 = 2;
              goto LABEL_125;
            case 3u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v67, v68, v197);
              v117 = v67;
              v118 = v69;
              v119 = 3;
              goto LABEL_125;
            case 4u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v67, v68, v198);
              v117 = v67;
              v118 = v69;
              v119 = 4;
              goto LABEL_125;
            case 5u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v67, v68, v199);
              v117 = v67;
              v118 = v69;
              v119 = 5;
              goto LABEL_125;
            case 6u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v67, v68, v200);
              v117 = v67;
              v118 = v69;
              v119 = 6;
LABEL_125:
              swift_storeEnumTagMultiPayload(v117, v118, v119);
              break;
            default:
              memcpy(v67, v68, *(_QWORD *)(v70 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        v88 = a1;
        v89 = v13;
        v90 = 3;
        goto LABEL_135;
      case 4u:
        *a1 = *a2;
        v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v76 = *(_QWORD *)(v75 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
        {
          v77 = sub_10002A750(&qword_100644980);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v74, v75))
          {
            case 2u:
              v120 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v73, v74, v120);
              swift_storeEnumTagMultiPayload(v73, v75, 2);
              break;
            case 3u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v73, v74, v201);
              swift_storeEnumTagMultiPayload(v73, v75, 3);
              break;
            case 4u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v73, v74, v202);
              swift_storeEnumTagMultiPayload(v73, v75, 4);
              break;
            case 5u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v73, v74, v203);
              swift_storeEnumTagMultiPayload(v73, v75, 5);
              break;
            case 6u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v73, v74, v204);
              swift_storeEnumTagMultiPayload(v73, v75, 6);
              break;
            default:
              memcpy(v73, v74, *(_QWORD *)(v76 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        v88 = a1;
        v89 = v13;
        v90 = 4;
        goto LABEL_135;
      case 7u:
        v78 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(a2, 1, v78))
        {
          v80 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v121 = *(int *)(v78 + 20);
          v122 = (char *)a1 + v121;
          v123 = (char *)a2 + v121;
          v124 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(a1, 0, 1, v78);
        }
        v125 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v126 = (char *)a1 + v125;
        v127 = (char *)a2 + v125;
        *(_OWORD *)v126 = *(_OWORD *)v127;
        *((_QWORD *)v126 + 2) = *((_QWORD *)v127 + 2);
        v88 = a1;
        v89 = v13;
        v90 = 7;
        goto LABEL_135;
      case 8u:
        v81 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
        {
          v83 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          v128 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(a1, a2, v128);
          *((_BYTE *)a1 + *(int *)(v81 + 20)) = *((_BYTE *)a2 + *(int *)(v81 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
        }
        v129 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v129 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v129 + 20));
        v88 = a1;
        v89 = v13;
        v90 = 8;
        goto LABEL_135;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v84 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
        v88 = a1;
        v89 = v13;
        v90 = 9;
LABEL_135:
        swift_storeEnumTagMultiPayload(v88, v89, v90);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v190 = a1;
    v191 = a3;
    v192 = 1;
    goto LABEL_137;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 2u:
            v9 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
            v10 = a1;
            v11 = v8;
            v12 = 2;
            goto LABEL_63;
          case 3u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(a1, a2, v130);
            v10 = a1;
            v11 = v8;
            v12 = 3;
            goto LABEL_63;
          case 4u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
            v10 = a1;
            v11 = v8;
            v12 = 4;
            goto LABEL_63;
          case 5u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
            v10 = a1;
            v11 = v8;
            v12 = 5;
            goto LABEL_63;
          case 6u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
            v10 = a1;
            v11 = v8;
            v12 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v134 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v135 = v134[5];
        v136 = (_OWORD *)((char *)a1 + v135);
        v137 = (_OWORD *)((char *)a2 + v135);
        v138 = v137[3];
        v136[2] = v137[2];
        v136[3] = v138;
        v139 = v137[1];
        *v136 = *v137;
        v136[1] = v139;
        *(_OWORD *)((char *)v136 + 106) = *(_OWORD *)((char *)v137 + 106);
        v140 = v137[6];
        v141 = v137[4];
        v136[5] = v137[5];
        v136[6] = v140;
        v136[4] = v141;
        *((_BYTE *)a1 + v134[6]) = *((_BYTE *)a2 + v134[6]);
        *((_BYTE *)a1 + v134[7]) = *((_BYTE *)a2 + v134[7]);
        *((_BYTE *)a1 + v134[8]) = *((_BYTE *)a2 + v134[8]);
        *((_BYTE *)a1 + v134[9]) = *((_BYTE *)a2 + v134[9]);
        *((_BYTE *)a1 + v134[10]) = *((_BYTE *)a2 + v134[10]);
        *(_QWORD *)((char *)a1 + v134[11]) = *(_QWORD *)((char *)a2 + v134[11]);
        v52 = a1;
        v53 = v7;
        v54 = 0;
        goto LABEL_110;
      case 1u:
        v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v19))
        {
          case 2u:
            v20 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
            v21 = a1;
            v22 = v19;
            v23 = 2;
            goto LABEL_77;
          case 3u:
            v154 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(a1, a2, v154);
            v21 = a1;
            v22 = v19;
            v23 = 3;
            goto LABEL_77;
          case 4u:
            v155 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
            v21 = a1;
            v22 = v19;
            v23 = 4;
            goto LABEL_77;
          case 5u:
            v156 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(a1, a2, v156);
            v21 = a1;
            v22 = v19;
            v23 = 5;
            goto LABEL_77;
          case 6u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
            v21 = a1;
            v22 = v19;
            v23 = 6;
LABEL_77:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            break;
        }
        v158 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v159 = v158[5];
        v160 = (_OWORD *)((char *)a1 + v159);
        v161 = (_OWORD *)((char *)a2 + v159);
        v162 = v161[3];
        v160[2] = v161[2];
        v160[3] = v162;
        v163 = v161[1];
        *v160 = *v161;
        v160[1] = v163;
        *(_OWORD *)((char *)v160 + 106) = *(_OWORD *)((char *)v161 + 106);
        v164 = v161[6];
        v165 = v161[4];
        v160[5] = v161[5];
        v160[6] = v164;
        v160[4] = v165;
        *((_BYTE *)a1 + v158[6]) = *((_BYTE *)a2 + v158[6]);
        *((_BYTE *)a1 + v158[7]) = *((_BYTE *)a2 + v158[7]);
        *((_BYTE *)a1 + v158[8]) = *((_BYTE *)a2 + v158[8]);
        *((_BYTE *)a1 + v158[9]) = *((_BYTE *)a2 + v158[9]);
        *((_BYTE *)a1 + v158[10]) = *((_BYTE *)a2 + v158[10]);
        *(_QWORD *)((char *)a1 + v158[11]) = *(_QWORD *)((char *)a2 + v158[11]);
        v52 = a1;
        v53 = v7;
        v54 = 1;
        goto LABEL_110;
      case 2u:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v26, v27))
          {
            case 2u:
              v91 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v25, v26, v91);
              v92 = v25;
              v93 = v27;
              v94 = 2;
              goto LABEL_91;
            case 3u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v25, v26, v178);
              v92 = v25;
              v93 = v27;
              v94 = 3;
              goto LABEL_91;
            case 4u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v25, v26, v179);
              v92 = v25;
              v93 = v27;
              v94 = 4;
              goto LABEL_91;
            case 5u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v25, v26, v180);
              v92 = v25;
              v93 = v27;
              v94 = 5;
              goto LABEL_91;
            case 6u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v25, v26, v181);
              v92 = v25;
              v93 = v27;
              v94 = 6;
LABEL_91:
              swift_storeEnumTagMultiPayload(v92, v93, v94);
              break;
            default:
              memcpy(v25, v26, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v52 = a1;
        v53 = v7;
        v54 = 2;
        goto LABEL_110;
      case 3u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 2u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v31, v32, v95);
              v96 = v31;
              v97 = v33;
              v98 = 2;
              goto LABEL_99;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v31, v32, v182);
              v96 = v31;
              v97 = v33;
              v98 = 3;
              goto LABEL_99;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v31, v32, v183);
              v96 = v31;
              v97 = v33;
              v98 = 4;
              goto LABEL_99;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v31, v32, v184);
              v96 = v31;
              v97 = v33;
              v98 = 5;
              goto LABEL_99;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v31, v32, v185);
              v96 = v31;
              v97 = v33;
              v98 = 6;
LABEL_99:
              swift_storeEnumTagMultiPayload(v96, v97, v98);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v52 = a1;
        v53 = v7;
        v54 = 3;
        goto LABEL_110;
      case 4u:
        *a1 = *a2;
        v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          v41 = sub_10002A750(&qword_100644980);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v38, v39))
          {
            case 2u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v37, v38, v99);
              v100 = v37;
              v101 = v39;
              v102 = 2;
              goto LABEL_107;
            case 3u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v37, v38, v186);
              v100 = v37;
              v101 = v39;
              v102 = 3;
              goto LABEL_107;
            case 4u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v37, v38, v187);
              v100 = v37;
              v101 = v39;
              v102 = 4;
              goto LABEL_107;
            case 5u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v37, v38, v188);
              v100 = v37;
              v101 = v39;
              v102 = 5;
              goto LABEL_107;
            case 6u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v37, v38, v189);
              v100 = v37;
              v101 = v39;
              v102 = 6;
LABEL_107:
              swift_storeEnumTagMultiPayload(v100, v101, v102);
              break;
            default:
              memcpy(v37, v38, *(_QWORD *)(v40 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v52 = a1;
        v53 = v7;
        v54 = 4;
        goto LABEL_110;
      case 7u:
        v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
        {
          v44 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v103 = *(int *)(v42 + 20);
          v104 = (char *)a1 + v103;
          v105 = (char *)a2 + v103;
          v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
        }
        v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v108 = (char *)a1 + v107;
        v109 = (char *)a2 + v107;
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
        v52 = a1;
        v53 = v7;
        v54 = 7;
        goto LABEL_110;
      case 8u:
        v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
        {
          v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v110 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
          *((_BYTE *)a1 + *(int *)(v45 + 20)) = *((_BYTE *)a2 + *(int *)(v45 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
        }
        v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
        v52 = a1;
        v53 = v7;
        v54 = 8;
        goto LABEL_110;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v48 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        v52 = a1;
        v53 = v7;
        v54 = 9;
LABEL_110:
        swift_storeEnumTagMultiPayload(v52, v53, v54);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v190 = a1;
    v191 = a3;
    v192 = 0;
LABEL_137:
    swift_storeEnumTagMultiPayload(v190, v191, v192);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_100145CF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  _OWORD *v139;
  _OWORD *v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  _OWORD *v151;
  _OWORD *v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  _OWORD *v175;
  _OWORD *v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 0u:
          v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v14))
          {
            case 2u:
              v15 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
              v16 = a1;
              v17 = v14;
              v18 = 2;
              goto LABEL_71;
            case 3u:
              v145 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(a1, a2, v145);
              v16 = a1;
              v17 = v14;
              v18 = 3;
              goto LABEL_71;
            case 4u:
              v146 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(a1, a2, v146);
              v16 = a1;
              v17 = v14;
              v18 = 4;
              goto LABEL_71;
            case 5u:
              v147 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
              v16 = a1;
              v17 = v14;
              v18 = 5;
              goto LABEL_71;
            case 6u:
              v148 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(a1, a2, v148);
              v16 = a1;
              v17 = v14;
              v18 = 6;
LABEL_71:
              swift_storeEnumTagMultiPayload(v16, v17, v18);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
              break;
          }
          v149 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v150 = v149[5];
          v151 = (_OWORD *)((char *)a1 + v150);
          v152 = (_OWORD *)((char *)a2 + v150);
          v153 = v152[3];
          v151[2] = v152[2];
          v151[3] = v153;
          v154 = v152[1];
          *v151 = *v152;
          v151[1] = v154;
          *(_OWORD *)((char *)v151 + 106) = *(_OWORD *)((char *)v152 + 106);
          v155 = v152[6];
          v156 = v152[4];
          v151[5] = v152[5];
          v151[6] = v155;
          v151[4] = v156;
          *((_BYTE *)a1 + v149[6]) = *((_BYTE *)a2 + v149[6]);
          *((_BYTE *)a1 + v149[7]) = *((_BYTE *)a2 + v149[7]);
          *((_BYTE *)a1 + v149[8]) = *((_BYTE *)a2 + v149[8]);
          *((_BYTE *)a1 + v149[9]) = *((_BYTE *)a2 + v149[9]);
          *((_BYTE *)a1 + v149[10]) = *((_BYTE *)a2 + v149[10]);
          *(_QWORD *)((char *)a1 + v149[11]) = *(_QWORD *)((char *)a2 + v149[11]);
          v88 = a1;
          v89 = v13;
          v90 = 0;
          goto LABEL_137;
        case 1u:
          v55 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v55))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(a1, a2, v56);
              v57 = a1;
              v58 = v55;
              v59 = 2;
              goto LABEL_85;
            case 3u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
              v57 = a1;
              v58 = v55;
              v59 = 3;
              goto LABEL_85;
            case 4u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
              v57 = a1;
              v58 = v55;
              v59 = 4;
              goto LABEL_85;
            case 5u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
              v57 = a1;
              v58 = v55;
              v59 = 5;
              goto LABEL_85;
            case 6u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
              v57 = a1;
              v58 = v55;
              v59 = 6;
LABEL_85:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
              break;
          }
          v173 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v174 = v173[5];
          v175 = (_OWORD *)((char *)a1 + v174);
          v176 = (_OWORD *)((char *)a2 + v174);
          v177 = v176[3];
          v175[2] = v176[2];
          v175[3] = v177;
          v178 = v176[1];
          *v175 = *v176;
          v175[1] = v178;
          *(_OWORD *)((char *)v175 + 106) = *(_OWORD *)((char *)v176 + 106);
          v179 = v176[6];
          v180 = v176[4];
          v175[5] = v176[5];
          v175[6] = v179;
          v175[4] = v180;
          *((_BYTE *)a1 + v173[6]) = *((_BYTE *)a2 + v173[6]);
          *((_BYTE *)a1 + v173[7]) = *((_BYTE *)a2 + v173[7]);
          *((_BYTE *)a1 + v173[8]) = *((_BYTE *)a2 + v173[8]);
          *((_BYTE *)a1 + v173[9]) = *((_BYTE *)a2 + v173[9]);
          *((_BYTE *)a1 + v173[10]) = *((_BYTE *)a2 + v173[10]);
          *(_QWORD *)((char *)a1 + v173[11]) = *(_QWORD *)((char *)a2 + v173[11]);
          v88 = a1;
          v89 = v13;
          v90 = 1;
          goto LABEL_137;
        case 2u:
          *a1 = *a2;
          v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
          {
            v65 = sub_10002A750(&qword_100644980);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v62, v63))
            {
              case 2u:
                v112 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v61, v62, v112);
                v113 = v61;
                v114 = v63;
                v115 = 2;
                goto LABEL_118;
              case 3u:
                v196 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v61, v62, v196);
                v113 = v61;
                v114 = v63;
                v115 = 3;
                goto LABEL_118;
              case 4u:
                v197 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v61, v62, v197);
                v113 = v61;
                v114 = v63;
                v115 = 4;
                goto LABEL_118;
              case 5u:
                v198 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v61, v62, v198);
                v113 = v61;
                v114 = v63;
                v115 = 5;
                goto LABEL_118;
              case 6u:
                v199 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v61, v62, v199);
                v113 = v61;
                v114 = v63;
                v115 = 6;
LABEL_118:
                swift_storeEnumTagMultiPayload(v113, v114, v115);
                break;
              default:
                memcpy(v61, v62, *(_QWORD *)(v64 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
          }
          v88 = a1;
          v89 = v13;
          v90 = 2;
          goto LABEL_137;
        case 3u:
          *a1 = *a2;
          v66 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v67 = (char *)a1 + v66;
          v68 = (char *)a2 + v66;
          v69 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v70 = *(_QWORD *)(v69 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            v71 = sub_10002A750(&qword_100644980);
            memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v68, v69))
            {
              case 2u:
                v116 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v67, v68, v116);
                v117 = v67;
                v118 = v69;
                v119 = 2;
                goto LABEL_126;
              case 3u:
                v200 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v67, v68, v200);
                v117 = v67;
                v118 = v69;
                v119 = 3;
                goto LABEL_126;
              case 4u:
                v201 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v67, v68, v201);
                v117 = v67;
                v118 = v69;
                v119 = 4;
                goto LABEL_126;
              case 5u:
                v202 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v67, v68, v202);
                v117 = v67;
                v118 = v69;
                v119 = 5;
                goto LABEL_126;
              case 6u:
                v203 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v67, v68, v203);
                v117 = v67;
                v118 = v69;
                v119 = 6;
LABEL_126:
                swift_storeEnumTagMultiPayload(v117, v118, v119);
                break;
              default:
                memcpy(v67, v68, *(_QWORD *)(v70 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          v88 = a1;
          v89 = v13;
          v90 = 3;
          goto LABEL_137;
        case 4u:
          *a1 = *a2;
          v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v73 = (char *)a1 + v72;
          v74 = (char *)a2 + v72;
          v75 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
          {
            v77 = sub_10002A750(&qword_100644980);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v74, v75))
            {
              case 2u:
                v120 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v73, v74, v120);
                v121 = v73;
                v122 = v75;
                v123 = 2;
                goto LABEL_134;
              case 3u:
                v204 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v73, v74, v204);
                v121 = v73;
                v122 = v75;
                v123 = 3;
                goto LABEL_134;
              case 4u:
                v205 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v73, v74, v205);
                v121 = v73;
                v122 = v75;
                v123 = 4;
                goto LABEL_134;
              case 5u:
                v206 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v73, v74, v206);
                v121 = v73;
                v122 = v75;
                v123 = 5;
                goto LABEL_134;
              case 6u:
                v207 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v73, v74, v207);
                v121 = v73;
                v122 = v75;
                v123 = 6;
LABEL_134:
                swift_storeEnumTagMultiPayload(v121, v122, v123);
                break;
              default:
                memcpy(v73, v74, *(_QWORD *)(v76 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          v88 = a1;
          v89 = v13;
          v90 = 4;
          goto LABEL_137;
        case 7u:
          v78 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v79 = *(_QWORD *)(v78 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(a2, 1, v78))
          {
            v80 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v124 = *(int *)(v78 + 20);
            v125 = (char *)a1 + v124;
            v126 = (char *)a2 + v124;
            v127 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(a1, 0, 1, v78);
          }
          v128 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v129 = (char *)a1 + v128;
          v130 = (char *)a2 + v128;
          *(_OWORD *)v129 = *(_OWORD *)v130;
          *((_QWORD *)v129 + 2) = *((_QWORD *)v130 + 2);
          v88 = a1;
          v89 = v13;
          v90 = 7;
          goto LABEL_137;
        case 8u:
          v81 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v82 = *(_QWORD *)(v81 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
          {
            v83 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
          }
          else
          {
            v131 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(a1, a2, v131);
            *((_BYTE *)a1 + *(int *)(v81 + 20)) = *((_BYTE *)a2 + *(int *)(v81 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
          }
          v132 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v132 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v132 + 20));
          v88 = a1;
          v89 = v13;
          v90 = 8;
          goto LABEL_137;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v84 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v85 = (char *)a1 + v84;
          v86 = (char *)a2 + v84;
          v87 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
          v88 = a1;
          v89 = v13;
          v90 = 9;
LABEL_137:
          swift_storeEnumTagMultiPayload(v88, v89, v90);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v193 = a1;
      v194 = a3;
      v195 = 1;
      goto LABEL_139;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v8))
          {
            case 2u:
              v9 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
              v10 = a1;
              v11 = v8;
              v12 = 2;
              goto LABEL_64;
            case 3u:
              v133 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(a1, a2, v133);
              v10 = a1;
              v11 = v8;
              v12 = 3;
              goto LABEL_64;
            case 4u:
              v134 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(a1, a2, v134);
              v10 = a1;
              v11 = v8;
              v12 = 4;
              goto LABEL_64;
            case 5u:
              v135 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(a1, a2, v135);
              v10 = a1;
              v11 = v8;
              v12 = 5;
              goto LABEL_64;
            case 6u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(a1, a2, v136);
              v10 = a1;
              v11 = v8;
              v12 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v10, v11, v12);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
              break;
          }
          v137 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v138 = v137[5];
          v139 = (_OWORD *)((char *)a1 + v138);
          v140 = (_OWORD *)((char *)a2 + v138);
          v141 = v140[3];
          v139[2] = v140[2];
          v139[3] = v141;
          v142 = v140[1];
          *v139 = *v140;
          v139[1] = v142;
          *(_OWORD *)((char *)v139 + 106) = *(_OWORD *)((char *)v140 + 106);
          v143 = v140[6];
          v144 = v140[4];
          v139[5] = v140[5];
          v139[6] = v143;
          v139[4] = v144;
          *((_BYTE *)a1 + v137[6]) = *((_BYTE *)a2 + v137[6]);
          *((_BYTE *)a1 + v137[7]) = *((_BYTE *)a2 + v137[7]);
          *((_BYTE *)a1 + v137[8]) = *((_BYTE *)a2 + v137[8]);
          *((_BYTE *)a1 + v137[9]) = *((_BYTE *)a2 + v137[9]);
          *((_BYTE *)a1 + v137[10]) = *((_BYTE *)a2 + v137[10]);
          *(_QWORD *)((char *)a1 + v137[11]) = *(_QWORD *)((char *)a2 + v137[11]);
          v52 = a1;
          v53 = v7;
          v54 = 0;
          goto LABEL_111;
        case 1u:
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v19))
          {
            case 2u:
              v20 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
              v21 = a1;
              v22 = v19;
              v23 = 2;
              goto LABEL_78;
            case 3u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
              v21 = a1;
              v22 = v19;
              v23 = 3;
              goto LABEL_78;
            case 4u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
              v21 = a1;
              v22 = v19;
              v23 = 4;
              goto LABEL_78;
            case 5u:
              v159 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
              v21 = a1;
              v22 = v19;
              v23 = 5;
              goto LABEL_78;
            case 6u:
              v160 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
              v21 = a1;
              v22 = v19;
              v23 = 6;
LABEL_78:
              swift_storeEnumTagMultiPayload(v21, v22, v23);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
              break;
          }
          v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v162 = v161[5];
          v163 = (_OWORD *)((char *)a1 + v162);
          v164 = (_OWORD *)((char *)a2 + v162);
          v165 = v164[3];
          v163[2] = v164[2];
          v163[3] = v165;
          v166 = v164[1];
          *v163 = *v164;
          v163[1] = v166;
          *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
          v167 = v164[6];
          v168 = v164[4];
          v163[5] = v164[5];
          v163[6] = v167;
          v163[4] = v168;
          *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
          *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
          *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
          *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
          *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
          *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
          v52 = a1;
          v53 = v7;
          v54 = 1;
          goto LABEL_111;
        case 2u:
          *a1 = *a2;
          v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v25 = (char *)a1 + v24;
          v26 = (char *)a2 + v24;
          v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v28 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          {
            v29 = sub_10002A750(&qword_100644980);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v26, v27))
            {
              case 2u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v25, v26, v91);
                v92 = v25;
                v93 = v27;
                v94 = 2;
                goto LABEL_92;
              case 3u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v25, v26, v181);
                v92 = v25;
                v93 = v27;
                v94 = 3;
                goto LABEL_92;
              case 4u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v25, v26, v182);
                v92 = v25;
                v93 = v27;
                v94 = 4;
                goto LABEL_92;
              case 5u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v25, v26, v183);
                v92 = v25;
                v93 = v27;
                v94 = 5;
                goto LABEL_92;
              case 6u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v25, v26, v184);
                v92 = v25;
                v93 = v27;
                v94 = 6;
LABEL_92:
                swift_storeEnumTagMultiPayload(v92, v93, v94);
                break;
              default:
                memcpy(v25, v26, *(_QWORD *)(v28 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          }
          v52 = a1;
          v53 = v7;
          v54 = 2;
          goto LABEL_111;
        case 3u:
          *a1 = *a2;
          v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v31 = (char *)a1 + v30;
          v32 = (char *)a2 + v30;
          v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
          {
            v35 = sub_10002A750(&qword_100644980);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v32, v33))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v31, v32, v95);
                v96 = v31;
                v97 = v33;
                v98 = 2;
                goto LABEL_100;
              case 3u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v31, v32, v185);
                v96 = v31;
                v97 = v33;
                v98 = 3;
                goto LABEL_100;
              case 4u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v31, v32, v186);
                v96 = v31;
                v97 = v33;
                v98 = 4;
                goto LABEL_100;
              case 5u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v31, v32, v187);
                v96 = v31;
                v97 = v33;
                v98 = 5;
                goto LABEL_100;
              case 6u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v31, v32, v188);
                v96 = v31;
                v97 = v33;
                v98 = 6;
LABEL_100:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v31, v32, *(_QWORD *)(v34 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          }
          v52 = a1;
          v53 = v7;
          v54 = 3;
          goto LABEL_111;
        case 4u:
          *a1 = *a2;
          v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v37 = (char *)a1 + v36;
          v38 = (char *)a2 + v36;
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v40 = *(_QWORD *)(v39 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            v41 = sub_10002A750(&qword_100644980);
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v38, v39))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v37, v38, v99);
                v100 = v37;
                v101 = v39;
                v102 = 2;
                goto LABEL_108;
              case 3u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v37, v38, v189);
                v100 = v37;
                v101 = v39;
                v102 = 3;
                goto LABEL_108;
              case 4u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v37, v38, v190);
                v100 = v37;
                v101 = v39;
                v102 = 4;
                goto LABEL_108;
              case 5u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v37, v38, v191);
                v100 = v37;
                v101 = v39;
                v102 = 5;
                goto LABEL_108;
              case 6u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v37, v38, v192);
                v100 = v37;
                v101 = v39;
                v102 = 6;
LABEL_108:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v37, v38, *(_QWORD *)(v40 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          v52 = a1;
          v53 = v7;
          v54 = 4;
          goto LABEL_111;
        case 7u:
          v42 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
          {
            v44 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v103 = *(int *)(v42 + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
          }
          v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
          v52 = a1;
          v53 = v7;
          v54 = 7;
          goto LABEL_111;
        case 8u:
          v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
            *((_BYTE *)a1 + *(int *)(v45 + 20)) = *((_BYTE *)a2 + *(int *)(v45 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
          v52 = a1;
          v53 = v7;
          v54 = 8;
          goto LABEL_111;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v48 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v49 = (char *)a1 + v48;
          v50 = (char *)a2 + v48;
          v51 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          v52 = a1;
          v53 = v7;
          v54 = 9;
LABEL_111:
          swift_storeEnumTagMultiPayload(v52, v53, v54);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v193 = a1;
      v194 = a3;
      v195 = 0;
LABEL_139:
      swift_storeEnumTagMultiPayload(v193, v194, v195);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001473CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void sub_100147430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v7, v8);
  v9 = (char *)sub_100147548 + 4 * byte_10052608C[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

uint64_t sub_100147548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v6 = sub_1000894B8(v1, v5);
  v7 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v6);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v7);
  v8 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v4, v3);
  sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544(v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  result = sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v8 & 1) == 0)
  {
    sub_10001F544(v0, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
    return swift_storeEnumTagMultiPayload(v0, v2, 3);
  }
  return result;
}

void sub_100147654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v1, (uint64_t)v7, v8);
  v9 = (char *)sub_10014776C + 4 * byte_100526090[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

uint64_t sub_10014776C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10001F544(v0, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  swift_storeEnumTagMultiPayload(v0, v2, 3);
  return sub_10001F544(v1, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
}

uint64_t sub_100147878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, __int128 a13, uint64_t a14, uint64_t a15, __int128 *a16, __int128 *a17, uint64_t a18, uint64_t a19, _OWORD *a20,uint64_t a21,uint64_t a22,_OWORD *a23,__int128 a24,uint64_t a25,uint64_t a26,__int128 *a27,uint64_t a28,uint64_t a29,uint64_t a30,__int128 *a31,__int128 *a32,char a33)
{
  int *v34;
  uint64_t result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_BYTE *)(a9 + 80) = a12 & 1;
  *(_OWORD *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 104) = a14;
  *(_QWORD *)(a9 + 112) = a15;
  sub_10002E37C(a16, a9 + 120);
  sub_10002E37C(a17, a9 + 160);
  *(_QWORD *)(a9 + 200) = a18;
  *(_QWORD *)(a9 + 208) = a19;
  sub_100028D38(a20, (_OWORD *)(a9 + 216));
  *(_QWORD *)(a9 + 248) = a21;
  *(_QWORD *)(a9 + 256) = a22;
  sub_100028D38(a23, (_OWORD *)(a9 + 264));
  *(_OWORD *)(a9 + 296) = a24;
  *(_QWORD *)(a9 + 312) = a25;
  *(_QWORD *)(a9 + 320) = a26;
  sub_10002E37C(a27, a9 + 328);
  *(_QWORD *)(a9 + 368) = a28;
  *(_QWORD *)(a9 + 376) = a29;
  v34 = (int *)type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  sub_10000F614(a30, a9 + v34[22], (uint64_t *)&unk_1006463C0);
  sub_10002E37C(a31, a9 + v34[23]);
  result = sub_10002E37C(a32, a9 + v34[24]);
  *(_BYTE *)(a9 + v34[25]) = a33;
  return result;
}

char *sub_1001479F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[4];
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[128];
  char *v67;
  uint64_t v68;

  v2 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v2);
  v54[3] = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v54[2] = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v59 = (uint64_t)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v55 = (uint64_t)v54 - v6;
  v61 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem(0);
  __chkstk_darwin(v61);
  v64 = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v54[1] = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v65 = (uint64_t)v54 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)v54 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v54 - v17;
  v19 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v19);
  v60 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v62 = (uint64_t)v54 - v22;
  __chkstk_darwin(v23);
  v58 = (char *)v54 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)v54 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)v54 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)v54 - v32;
  sub_10002B1E8(a1, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v56(v30, 0, 1, v8);
  sub_10000735C((uint64_t)v30, (uint64_t)v27, (uint64_t *)&unk_100640EB0);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v63(v27, 1, v8) == 1)
    goto LABEL_2;
  sub_10001F580((uint64_t)v27, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v15, v8) == 1)
  {
    sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_5;
  }
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  v52 = (uint64_t)v58;
  TTRMutableTreeStorage.parent(of:)(v18);
  swift_release();
  sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
  sub_10000F614(v52, (uint64_t)v30, (uint64_t *)&unk_100640EB0);
  sub_10000735C((uint64_t)v30, (uint64_t)v27, (uint64_t *)&unk_100640EB0);
  if (v63(v27, 1, v8) == 1)
  {
LABEL_2:
    sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_100640EB0);
LABEL_5:
    v34 = 1;
    goto LABEL_6;
  }
  v53 = (uint64_t)v58;
  while (1)
  {
    sub_10001F580((uint64_t)v27, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v15, v8) == 1)
      break;
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v18);
    swift_release();
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_10000F614(v53, (uint64_t)v30, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v30, (uint64_t)v27, (uint64_t *)&unk_100640EB0);
    if (v63(v27, 1, v8) == 1)
      goto LABEL_2;
  }
  sub_1000073A0((uint64_t)v30, (uint64_t *)&unk_100640EB0);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580((uint64_t)v18, (uint64_t)v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v34 = 0;
LABEL_6:
  v35 = v56;
  v56(v33, v34, 1, v8);
  v36 = v62;
  sub_10000735C((uint64_t)v33, v62, (uint64_t *)&unk_100640EB0);
  if (v63((char *)v36, 1, v8) == 1)
  {
    v58 = 0;
    v37 = v62;
  }
  else
  {
    v38 = 0;
    v58 = 0;
    v37 = v62;
    do
    {
      v39 = v8;
      v40 = v37;
      v41 = v65;
      v42 = sub_10001F580(v40, v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v43 = v64;
      TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter(v42);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v43, v61);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v45 = sub_10001F580(v64, v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v45);
          __asm { BR              X9 }
        }
        sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
        v48 = (uint64_t)v60;
        v49 = v60;
        v8 = v39;
        v50 = v39;
      }
      else
      {
        sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_bridgeObjectRelease(v38);
        sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
        v47 = v55;
        sub_10001F580(v43, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10000F614(v47 + *(int *)(v57 + 20), (uint64_t)v66, &qword_100649B60);
        sub_100171C68((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171B88);
        sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_10000F614((uint64_t)v66, (uint64_t)&v67, &qword_100649B60);
        if (sub_100171C50((uint64_t)&v67) == 1)
        {
          v58 = 0;
          v38 = 0;
        }
        else
        {
          v38 = v68;
          v58 = v67;
          swift_bridgeObjectRetain(v68);
          sub_100171C68((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100171CCC);
        }
        v48 = (uint64_t)v60;
        v8 = v39;
        v49 = v60;
        v50 = v39;
      }
      v35(v49, 1, 1, v50);
      sub_10000F614(v48, (uint64_t)v33, (uint64_t *)&unk_100640EB0);
      v37 = v62;
      sub_10000735C((uint64_t)v33, v62, (uint64_t *)&unk_100640EB0);
    }
    while (v63((char *)v37, 1, v8) != 1);
  }
  sub_1000073A0((uint64_t)v33, (uint64_t *)&unk_100640EB0);
  sub_1000073A0(v37, (uint64_t *)&unk_100640EB0);
  return v58;
}

uint64_t sub_100148368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148388(a1, a2, a3, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
}

uint64_t sub_100148388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_1000073A0(a1, &qword_100649BA0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16, v14);
      v19 = swift_unknownObjectRetain(v16);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17, v19);
      v22 = v21;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v23 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v23 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v20 = 0;
  v22 = 0;
LABEL_6:
  v24 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  if (v22 | v20)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v20;
    v27[3] = v22;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, a5, a6, v24);
}

uint64_t sub_1001484D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148510(a1, a2, a3, (uint64_t)&unk_1005F4048, (uint64_t *)&unk_100649DE0, (uint64_t)&unk_100649DD8);
}

uint64_t sub_1001484F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148510(a1, a2, a3, (uint64_t)&unk_1005F42F0, (uint64_t *)&unk_100649CB0, (uint64_t)&unk_100649E30);
}

uint64_t sub_100148510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_1000073A0(a1, &qword_100649BA0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16, v14);
      v19 = swift_unknownObjectRetain(v16);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17, v19);
      v22 = v21;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v23 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v23 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v20 = 0;
  v22 = 0;
LABEL_6:
  v24 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = sub_10002A750(a5);
  if (v22 | v20)
  {
    v28[0] = 0;
    v28[1] = 0;
    v26 = v28;
    v28[2] = v20;
    v28[3] = v22;
  }
  else
  {
    v26 = 0;
  }
  return swift_task_create(v15, v26, v25, a6, v24);
}

uint64_t sub_10014866C()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_100027F10((_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 136));
  sub_1000381C8(v0 + 152);
  sub_10017B6A0(*(_QWORD *)(v0 + 176), *(void **)(v0 + 184));
  sub_100027F10((_QWORD *)(v0 + 192));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 232));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 248));
  sub_1000073A0(v0 + 264, &qword_100649E38);
  sub_1000073A0(v0 + 312, (uint64_t *)&unk_100649E40);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 360));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 376));
  sub_10017C190(*(void **)(v0 + 392), *(_QWORD *)(v0 + 400));
  swift_release(*(_QWORD *)(v0 + 416));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 424));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 440));
  sub_1000073A0(v0 + 448, &qword_100649DC8);
  swift_release(*(_QWORD *)(v0 + 488));
  swift_release(*(_QWORD *)(v0 + 496));
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, (uint64_t *)&unk_1006463C0);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable));
  return v0;
}

BOOL sub_1001487A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned int v12;

  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v2, v6 + v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100520250;
  sub_10002B1E8(a1, v7 + v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v8 = sub_1001AFB84(v7);
  v12 = v11;
  if (v11 <= 3u)
    sub_1001805D4((uint64_t)v8, v9, v10, v11);
  swift_bridgeObjectRelease(v7);
  return v12 < 4;
}

uint64_t sub_100148864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;

  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  v9 = v8 + v7;
  sub_10002B1E8(a1, v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v10 = sub_1001A16E0(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, *(_QWORD *)(v8 + 16), v3);
  swift_deallocClassInstance(v8, 32, 7);
  if (v10 != 2)
    return v10 & 1;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100012DC4(v11, (uint64_t)qword_100648980);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = 2;
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Item can't be flagged", v16, 2u);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    return 2;
  }
  return v15;
}

void sub_100148A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[80];

  v26 = a2;
  v27 = a3;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v24 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v3);
  v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v13 = sub_100012DC4(v9, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v28);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v16 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v17 = TTRTreeStorageItem.treeItemDescription.getter(v3, v16);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Delete {item: %@}", 32, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
  TTRRemindersListViewModel.Item.editableCasesOnly.getter(v21);
  v22 = (char *)&loc_100148C34 + 4 * byte_1005260F4[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

void sub_100148D98()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100648980);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Reminders List Dismiss Reminder Details", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  sub_10009F0B0(0, 0);
}

void sub_100148E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  void (*v63)(void *, _QWORD, _QWORD *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[5];
  char v71[88];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v7);
  v65 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMAnalyticsEvent(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v16 = sub_100012DC4(v12, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v17, v71);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v20 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v69 = a1;
  v21 = TTRTreeStorageItem.treeItemDescription.getter(v19, v20);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v21;
  *(_QWORD *)(inited + 56) = v22;
  v23 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Show Subtasks In Parent List {item: %@}", 54, 2, v23);
  v24 = swift_bridgeObjectRelease(v23);
  v25 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v24);
  v26 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v25);
  type metadata accessor for REMAnalyticsManager(0);
  v27 = v26;
  static REMAnalyticsManager.shared.getter();
  v28 = sub_10002A750(&qword_100649F98);
  v29 = &v11[*(int *)(v28 + 48)];
  v30 = (uint64_t *)&v11[*(int *)(v28 + 80)];
  v31 = enum case for REMUserOperation.showSubtasksInParentList(_:);
  v32 = type metadata accessor for REMUserOperation(0);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v11, v31, v32);
  *(_QWORD *)v29 = TTRUserDefaults.activitySessionId.getter(v33);
  *((_QWORD *)v29 + 1) = v34;
  TTRUserDefaults.activitySessionBeginTime.getter();
  v36 = *(_QWORD *)(v2 + 136);
  v35 = *(_QWORD *)(v2 + 144);
  v66 = v2;
  ObjectType = swift_getObjectType(v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v35 + 136))(ObjectType, v35);
  v39 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v6, 1, v39) == 1)
  {
    v40 = &qword_100649CA0;
    v41 = (uint64_t)v6;
LABEL_7:
    sub_1000073A0(v41, v40);
    *v30 = 0;
    v30[1] = 0;
    goto LABEL_9;
  }
  v42 = v65;
  sub_10000735C((uint64_t)v6, v65, (uint64_t *)&unk_100665590);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v43 = type metadata accessor for TTRListType(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43) == 1)
  {
    v40 = (uint64_t *)&unk_100665590;
    v41 = v42;
    goto LABEL_7;
  }
  v44 = TTRListType.description.getter();
  v46 = v45;
  sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
  *v30 = v44;
  v30[1] = v46;
LABEL_9:
  v48 = v67;
  v47 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v11, enum case for REMAnalyticsEvent.userOperation(_:), v68);
  REMAnalyticsManager.post(event:)(v11);
  v49 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v11, v47, v49);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 248))(v69, ObjectType, v35);
  if (v50)
  {
    v51 = (void *)v50;
    v52 = v66;
    Strong = swift_unknownObjectWeakLoadStrong(v66 + 152);
    if (Strong)
    {
      v54 = Strong;
      v55 = *(_QWORD *)(v52 + 160);
      v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 32))(ObjectType, v35);
      if (v56)
      {
        v58 = v56;
        v59 = v57;
        v60 = swift_getObjectType(v56, v57);
        v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v60, v59);
        swift_unknownObjectRelease(v58);
      }
      else
      {
        v61 = 0;
      }
      v62 = swift_getObjectType(v54, v57);
      v70[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
      v70[4] = &off_1005F31C8;
      v70[0] = v52;
      v63 = *(void (**)(void *, _QWORD, _QWORD *, uint64_t, uint64_t))(v55 + 32);
      swift_retain();
      v63(v51, v61 & 1, v70, v62, v55);

      swift_unknownObjectRelease(v54);
      sub_100027F10(v70);
    }
    else
    {

    }
  }
  else
  {

  }
}

void sub_10014935C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char v44[80];

  v42 = a4;
  v40 = a2;
  v41 = a3;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v39 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v15 = sub_100012DC4(v11, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v44);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v18 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v19 = TTRTreeStorageItem.treeItemDescription.getter(v5, v18);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v19;
  *(_QWORD *)(inited + 56) = v20;
  v21 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Show Reminder Details {item: %@}", 47, 2, v21);
  v22 = swift_bridgeObjectRelease(v21);
  v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v22);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v23);
  if (swift_getEnumCaseMultiPayload(v10, v8) <= 2)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v24 = sub_100171D9C(a1, (void (*)(uint64_t *__return_ptr))sub_10041C0C0, 0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))sub_10041C0CC, 0);
    if (v24 != 1)
    {
      v26 = (id)v24;
      if ((v25 & 1) == 0)
      {
        if (!v24)
          return;
        v27 = v43;
        v28 = swift_allocObject(&unk_1005F3738, 24, 7);
        swift_weakInit(v28 + 16, v27);
        v29 = v39;
        sub_10002B1E8(a1, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v30 = *(unsigned __int8 *)(v6 + 80);
        v31 = (v30 + 48) & ~v30;
        v32 = (v7 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
        v33 = (_QWORD *)swift_allocObject(&unk_1005F4D90, v32 + 8, v30 | 7);
        v34 = v40;
        v35 = v41;
        v33[2] = v28;
        v33[3] = v34;
        v33[4] = v35;
        v33[5] = v26;
        sub_10001F580(v29, (uint64_t)v33 + v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v36 = v42;
        *(_QWORD *)((char *)v33 + v32) = v42;
        swift_bridgeObjectRetain(v35);
        v37 = v36;
        v26 = v26;
        swift_retain();
        sub_1001A29B0(a1, (uint64_t)sub_10018252C, (uint64_t)v33);
        swift_release();
        swift_release();

      }
    }
  }
}

void sub_1001496A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  unint64_t v16;
  __n128 v17;
  id v18;
  void *v19;
  _BYTE v20[80];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 136), v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 248))(a1, ObjectType, v7);
  if (v10)
  {
    v11 = (void *)v10;
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v12 = sub_100012DC4(v3, (uint64_t)qword_100648980);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
    v13 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v13, v20);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v15 = objc_msgSend(v11, "objectID");
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v15;
    v16 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"Reminders List Launch User Activity {objectID: %@}", 50, 2, v16);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v4 + 8))(v6, v3, v17);
    v18 = objc_msgSend(v11, "userActivity");
    if (v18)
    {
      v19 = v18;
      REMUserActivity.launch()();

    }
  }
}

UIMenu sub_100149874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::String v29;
  uint64_t v30;
  UIMenuElementSize v31;
  uint64_t v33;
  uint64_t v34;
  Swift::OpaquePointer v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  UIImage_optional v40;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1001A2E04();
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v38 = v4;
    v39 = _swiftEmptyArrayStorage;
    swift_retain();
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v37 = v6;
    v8 = (_BYTE *)(v6 + 56);
    do
    {
      v9 = *((_QWORD *)v8 - 3);
      v10 = *((_QWORD *)v8 - 2);
      v11 = *((_QWORD *)v8 - 1);
      v12 = *v8;
      v8 += 32;
      v13 = swift_allocObject(&unk_1005F3738, 24, 7);
      swift_weakInit(v13 + 16, v1);
      v14 = swift_allocObject(&unk_1005F4D68, 49, 7);
      *(_QWORD *)(v14 + 16) = v13;
      *(_QWORD *)(v14 + 24) = v9;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v11;
      *(_BYTE *)(v14 + 48) = v12;
      swift_bridgeObjectRetain_n(v10, 2);
      v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v10, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100182130, v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = v39[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      --v7;
    }
    while (v7);
    v18 = (uint64_t)v39;
    swift_bridgeObjectRelease(v37);
    swift_release();
    v4 = v38;
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    v18 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v20 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(v20, v19);
  (*(void (**)(uint64_t, uint64_t))(v21 + 136))(ObjectType, v21);
  v23 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v4, 1, v23) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100649CA0);
  }
  else
  {
    v24 = v4[*(int *)(v23 + 112)];
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v24 == 1)
    {
      v25 = 0xD00000000000002ELL;
      v26 = 0x8000000100567F10;
      v27 = 0x8000000100567F30;
      v28 = 0xD000000000000015;
      goto LABEL_11;
    }
  }
  v28 = 0xD000000000000019;
  v25 = 0xD000000000000032;
  v26 = 0x8000000100567EB0;
  v27 = 0x8000000100567ED0;
LABEL_11:
  v29 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v28, *(Swift::String *)&v25);
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v33 = v18;
    else
      v33 = v18 & 0xFFFFFFFFFFFFFF8;
    v34 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v18);
    v31 = _bridgeCocoaArray<A>(_:)(v33, v34);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    swift_bridgeObjectRetain(v18);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v30);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v31 = v18;
  }
  swift_bridgeObjectRelease(v18);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v40.value.super.isa = 0;
  v40.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, v31, v35);
}

double sub_100149C08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  id v40;
  __n128 v41;
  void *v42;
  __n128 v43;
  void *Strong;
  void *v45;
  double result;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;

  v50 = a2;
  v51 = a3;
  v52 = a4;
  v5 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v5);
  v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v57 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v56 = (char *)v49 - v12;
  v13 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  __chkstk_darwin(v13);
  v16 = (void **)((char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (uint64_t)_swiftEmptyArrayStorage;
  v58 = (uint64_t)_swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v20 = *(_QWORD *)(v14 + 72);
    v49[0] = a1;
    swift_bridgeObjectRetain(a1);
    v54 = v20;
    v55 = v13;
    v53 = v7;
    do
    {
      sub_10002B1E8(v19, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      sub_10000735C((uint64_t)v16 + *(int *)(v13 + 20), (uint64_t)v7, (uint64_t *)&unk_100640EE0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EE0);
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      }
      else
      {
        v21 = v56;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v56, v7, v8);
        v22 = *v16;
        v23 = v57;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v57, v21, v8);
        v24 = objc_allocWithZone((Class)type metadata accessor for TTRIQuickLookImageAttachmentPreviewItem(0));
        v25 = TTRIQuickLookImageAttachmentPreviewItem.init(attachmentID:fileURL:)(v22, v23);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
        v26 = sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v28 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v27 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v28 >= v27 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v25);
        specialized Array._endMutation()(v29);
        v20 = v54;
        v13 = v55;
        v7 = v53;
      }
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease(v49[0]);
    v17 = v58;
  }
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v47 = v17;
    else
      v47 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v48 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v17);
    if (v48)
      goto LABEL_12;
LABEL_28:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
    return result;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
LABEL_12:
  v30 = v50;
  v31 = sub_10017A3F8(v17, (uint64_t)v30);
  v33 = v32;

  if ((v33 & 1) != 0)
    v31 = 0;
  v34 = *(_QWORD *)(v49[1] + 88);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v37 = v17;
    else
      v37 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v38 = sub_10002A750((uint64_t *)&unk_100649E80);
    v36 = _bridgeCocoaArray<A>(_:)(v37, v38);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    swift_bridgeObjectRetain(v17);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
    v36 = v17;
  }
  v39 = swift_bridgeObjectRelease(v17);
  v40 = objc_allocWithZone((Class)type metadata accessor for TTRIQuickLookPreviewController(0, v39));
  v41 = swift_bridgeObjectRetain(v36);
  v42 = (void *)TTRIQuickLookPreviewController.init(ttr_previewItems:)(v41);
  objc_msgSend(v42, "setCurrentPreviewItemIndex:", v31);
  v43 = swift_unknownObjectRetain(v51);
  TTRIQuickLookPreviewController.transitionDelegate.setter(v43);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v34 + 16);
  if (Strong)
  {
    v45 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v42, 1, 0);
    swift_bridgeObjectRelease(v36);

  }
  else
  {
    swift_bridgeObjectRelease(v36);
  }

  return result;
}

uint64_t sub_10014A020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v4 = __chkstk_darwin(v3);
  v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v53 = (char *)&v52 - v6;
  v61 = sub_10002A750(&qword_10063F268);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v56 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10064A080);
  v9 = __chkstk_darwin(v8);
  v58 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - v11;
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  v17 = __chkstk_darwin(v16);
  v57 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - v19;
  v60 = v1;
  v21 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v21, v25 + *(_QWORD *)(v23 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100520250;
  v27 = v26 + v25;
  v55 = a1;
  sub_10002B1E8(a1, v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v28 = sub_1001A3378(v26, 0);
  v30 = v29;
  swift_setDeallocating(v26);
  swift_arrayDestroy(v27, *(_QWORD *)(v26 + 16), v22);
  swift_deallocClassInstance(v26, 32, 7);
  if (!v28)
    return 2;
  swift_bridgeObjectRelease(v28);
  v31 = *(_QWORD *)(v60 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v31, v63, 0, 0);
  sub_10002B1E8(v31, (uint64_t)v20, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10000735C((uint64_t)v20, (uint64_t)v12, &qword_10064A080);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v33 = v61;
  if (v32((uint64_t)v12, 1, v61) != 1)
  {
    sub_10001F580((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v22);
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v20, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v35 = v57;
    sub_10002B1E8(v31, v57, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v36 = v58;
    sub_10000735C(v35, v58, &qword_10064A080);
    if (v32(v36, 1, v33) == 1)
    {
      sub_1000073A0(v36, &qword_10064A080);
      sub_10001F544(v35, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      goto LABEL_14;
    }
    v37 = *(int *)(v33 + 48);
    v38 = v56;
    sub_10001F580(v36, v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_BYTE *)(v38 + v37) = *(_BYTE *)(v36 + v37);
    v39 = sub_10001F544(v35, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v40 = (uint64_t)v53;
    v41 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v39);
    v42 = (uint64_t)v54;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v41);
    v43 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v40, v42);
    sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v43 & 1) == 0)
    {
      sub_1000073A0(v38, &qword_10063F268);
      goto LABEL_14;
    }
    if (*(_BYTE *)(v38 + v37))
    {
      if (*(_BYTE *)(v38 + v37) != 1)
      {
        swift_bridgeObjectRelease(0xE800000000000000);
        sub_1000073A0(v38, &qword_10063F268);
        goto LABEL_17;
      }
      v44 = 0x7365746F6ELL;
    }
    else
    {
      v44 = 0x656C746974;
    }
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, 0xE500000000000000, 0x7367617468736168, 0xE800000000000000, 0);
    swift_bridgeObjectRelease(0xE500000000000000);
    sub_1000073A0(v38, &qword_10063F268);
    if ((v45 & 1) == 0)
      goto LABEL_14;
LABEL_17:

    return 2;
  }
  sub_1000073A0((uint64_t)v12, &qword_10064A080);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v15, 1, 1, v22);
  sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
  sub_10001F544((uint64_t)v20, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
LABEL_14:
  v46 = objc_msgSend(v30, "hashtags");
  v47 = sub_100005ED8(0, &qword_100645310, REMHashtag_ptr);
  v48 = sub_100017608((unint64_t *)&qword_100649F10, &qword_100645310, REMHashtag_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v49 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v46, v47, v48);

  v62 = v49;
  v50 = sub_10002A750(&qword_100645300);
  v51 = sub_100023FEC(&qword_100649F20, &qword_100645300, (uint64_t)&protocol conformance descriptor for Set<A>);
  LOBYTE(v46) = Collection<>.contains(hashtagOfType:)(0, v50, v51);
  swift_bridgeObjectRelease(v49);

  return v46 & 1;
}

double sub_10014A618(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  __int128 v22;
  _BYTE v23[80];
  _OWORD v24[2];
  uint64_t v25;
  __int128 v26;
  char v27;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v6 = sub_100012DC4(v2, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v7, v23);
  v22 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v11 = TTRTreeStorageItem.treeItemDescription.getter(v9, v10);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List show hashtag editor {item: %@}", 45, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v14);
  v15 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v16 = *(_QWORD *)(v9 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v15, v19 + v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = v22;
  sub_10002B1E8(a1, v20 + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  memset(v24, 0, sizeof(v24));
  v25 = 0;
  v26 = xmmword_1005218A0;
  v27 = 0;
  sub_100153AE8(v20, (uint64_t)v24);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  return result;
}

_OWORD *sub_10014A824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v23[2];
  uint64_t v24;
  _QWORD v25[4];
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];

  v10 = v5 + 24;
  v11 = sub_100028CFC((uint64_t)(v5 + 39), (uint64_t)v25);
  v13 = v5[44];
  v26 = v5[43];
  v12 = v26;
  v27 = v13;
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  v14 = v5[29];
  v15 = *(_QWORD *)(v5[30] + 16);
  v16 = (*(uint64_t (**)(uint64_t))(*v5 + 1224))(v11);
  v17 = swift_unknownObjectRetain(v12);
  v18 = static TTRIReminderCellTitleAssembly.createViewController(item:titleAttributesInteractor:quickBar:augmentationSplitter:ownerModule:hostViewController:inCellPresenterManager:isSingleReminderEditingMode:returnKeyType:moduleDelegate:)(v28, a1, v10, v12, v13, v23, 1, a4, v17, v14, v15, 0, v16, a2, a3);
  v20 = v19;
  swift_unknownObjectRelease(v12);
  sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_10064A070);
  sub_100027F10(v25);
  *(_QWORD *)a5 = v18;
  *(_QWORD *)(a5 + 8) = v20;
  return sub_100028D38(v28, (_OWORD *)(a5 + 16));
}

_OWORD *sub_10014A928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  _OWORD v21[2];

  sub_100028CFC((uint64_t)(v5 + 39), (uint64_t)v20);
  v11 = v5[43];
  v12 = v5[44];
  v20[4] = v11;
  v20[5] = v12;
  v13 = v5[29];
  v14 = *(_QWORD *)(v5[30] + 16);
  v15 = swift_unknownObjectRetain(v11);
  v16 = static TTRIReminderCellNotesAssembly.createViewController(item:isSingleReminderEditingMode:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)(v21, a1, 0, v11, v12, 1, a4, v13, v15, v14, a2, a3);
  v18 = v17;
  swift_unknownObjectRelease(v11);
  sub_100027F10(v20);
  *(_QWORD *)a5 = v16;
  *(_QWORD *)(a5 + 8) = v18;
  return sub_100028D38(v21, (_OWORD *)(a5 + 16));
}

_OWORD *sub_10014A9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  _OWORD v21[2];

  sub_100028CFC((uint64_t)(v5 + 39), (uint64_t)v20);
  v11 = v5[43];
  v12 = v5[44];
  v20[4] = v11;
  v20[5] = v12;
  v13 = v5[29];
  v14 = *(_QWORD *)(v5[30] + 16);
  v15 = swift_unknownObjectRetain(v11);
  v16 = static TTRIReminderCellHashtagAssembly.createViewController(item:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)(v21, a1, v11, v12, 1, a4, v13, v14, v15, a2, a3);
  v18 = v17;
  swift_unknownObjectRelease(v11);
  sub_100027F10(v20);
  *(_QWORD *)a5 = v16;
  *(_QWORD *)(a5 + 8) = v18;
  return sub_100028D38(v21, (_OWORD *)(a5 + 16));
}

uint64_t sub_10014AABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD v45[3];
  uint64_t v46;
  _UNKNOWN **v47;

  v6 = v5;
  v10 = v5[10];
  ObjectType = swift_getObjectType(v5[9], a2);
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 19);
  if (Strong)
  {
    v15 = Strong;
    v16 = v6[20];
    v17 = swift_getObjectType(Strong, v14);
    v46 = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v47 = &off_1005F31C8;
    v45[0] = v6;
    v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 8);
    swift_retain();
    v19 = (void *)v18(v45, v17, v16);
    swift_unknownObjectRelease(v15);
    sub_100027F10(v45);
  }
  else
  {
    v19 = 0;
  }
  v21 = v6[29];
  v20 = v6[30];
  v22 = v6[18];
  v23 = swift_getObjectType(v6[17], v14);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 104))(v23, v22);
  if (v24)
  {
    v26 = v24;
    v27 = v25;
    v28 = swift_getObjectType(v24, v25);
    LOBYTE(v27) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v28, v27);
    swift_unknownObjectRelease(v26);
    v29 = v27 & 1;
  }
  else
  {
    v29 = 0;
  }
  v30 = *(_QWORD *)(v20 + 16);
  v31 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v32 = swift_allocObject(v31, 16, 7);
  v46 = v31;
  v47 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  v45[0] = v32;
  v33 = type metadata accessor for TTRRemindersListEditableSectionNameInteractor(0);
  swift_allocObject(v33, 88, 7);
  v34 = TTRRemindersListEditableSectionNameInteractor.init(store:undoManager:committer:)(v12, v19, v45);
  v35 = v12;
  v36 = v19;
  v37 = sub_100173EC8(a1, a4, v21, v30, a2, a3, v34, v29);
  v39 = v38;
  v41 = v40;

  swift_release();
  result = type metadata accessor for TTRIRemindersListEditableSectionNameViewController();
  a5[5] = result;
  a5[1] = v41;
  a5[2] = v37;
  *a5 = v39;
  return result;
}

uint64_t sub_10014ACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(ObjectType, v4);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v4 + 152))((v6 & 1) == 0, ObjectType, v4);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 200))(ObjectType, v4);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return swift_release(v7);
  v10 = Strong;
  v11 = *(_QWORD *)(v3 + 24);
  v12 = swift_getObjectType(Strong, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 112))(v7, v12, v11);
  swift_release(v7);
  return swift_unknownObjectRelease(v10);
}

void sub_10014AD60(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _BYTE v27[24];

  v7 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v7);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v10);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(_QWORD *)(v3 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v13, v27, 0, 0);
  sub_10002B1E8(v13, (uint64_t)v12, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  LOBYTE(v10) = v12[*(int *)(v10 + 20)];
  sub_10001F544((uint64_t)v12, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v10 & 1) != 0
    || (Strong = swift_unknownObjectWeakLoadStrong(v3 + 16)) != 0
    && (v16 = Strong,
        v17 = *(_QWORD *)(v3 + 24),
        ObjectType = swift_getObjectType(Strong, v15),
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(ObjectType, v17),
        swift_unknownObjectRelease(v16),
        (v19 & 1) != 0))
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100012DC4(v20, (uint64_t)qword_100648980);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "TTRIRemindersCommonPresenter: cannot perform requestNewReminderInDefaultSection", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
  else
  {
    if ((a1 & 1) != 0)
      v25 = 68;
    else
      v25 = 8;
    sub_10041960C((void *)v25, a2, a3, (uint64_t)v9);
    sub_1000073A0((uint64_t)v9, &qword_100654880);
  }
}

void sub_10014AF8C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _BYTE v20[24];

  v3 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(v1 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v6, v20, 0, 0);
  sub_10002B1E8(v6, (uint64_t)v5, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  LOBYTE(v3) = v5[*(int *)(v3 + 20)];
  sub_10001F544((uint64_t)v5, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v3 & 1) != 0
    || (Strong = swift_unknownObjectWeakLoadStrong(v1 + 16)) != 0
    && (v9 = Strong,
        v10 = *(_QWORD *)(v1 + 24),
        ObjectType = swift_getObjectType(Strong, v8),
        v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(ObjectType, v10),
        swift_unknownObjectRelease(v9),
        (v12 & 1) != 0))
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100012DC4(v13, (uint64_t)qword_100648980);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRIRemindersCommonPresenter: cannot perform requestNewReminderInDefaultSectionForPencilInput", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = sub_10002A750(&qword_100654890);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  else
  {
    sub_10041960C((void *)0x31, 0, 0, a1);
  }
}

uint64_t sub_10014B17C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t, __n128);
  int EnumCaseMultiPayload;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, __n128);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  char *v83;
  int v84;

  v84 = a2;
  v81 = a1;
  v82 = a3;
  v4 = sub_10002A750((uint64_t *)&unk_10064A060);
  __chkstk_darwin(v4);
  v74 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v7 = __chkstk_darwin(v6);
  v68 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v71 = (char *)&v67 - v10;
  v11 = __chkstk_darwin(v9);
  v70 = (char *)&v67 - v12;
  v13 = __chkstk_darwin(v11);
  v75 = (char *)&v67 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v67 - v15;
  v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v67 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v67 - v21;
  v23 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
  v72 = *(_QWORD *)(v23 - 8);
  v73 = v23;
  v24 = __chkstk_darwin(v23);
  v69 = (uint64_t)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v83 = (char *)&v67 - v26;
  v27 = *(_QWORD *)(v3 + 136);
  v28 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(v27, v29);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 192);
  swift_retain();
  v32 = swift_unknownObjectRetain(v27);
  v76 = ObjectType;
  v77 = v31;
  v78 = v28;
  v33 = v31(ObjectType, v28, v32);
  v79 = v3;
  swift_release();
  swift_unknownObjectRelease(v27);
  v34 = v81;
  v35 = sub_10037E330(v81);
  v36 = v34;
  sub_10002B1E8(v34, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v80 = v18;
  if ((v35 & 1) != 0)
  {
    sub_10002B1E8((uint64_t)v22, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v38 = v17;
    v37(v16, 0, 1, v17);
    swift_retain();
    v39 = TTRMutableTreeStorage.numberOfChildren(of:)(v16);
    swift_release();
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_unknownObjectRelease(v33);
    if (v39 >= 1)
    {
      v40 = (uint64_t)v83;
      v37(v83, 2, 2, v17);
      goto LABEL_12;
    }
  }
  else
  {
    v38 = v17;
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_unknownObjectRelease(v33);
  }
  v41 = v80;
  if ((v84 & 1) != 0)
  {
LABEL_11:
    v40 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v83, 1, 2, v38);
    goto LABEL_12;
  }
  swift_retain();
  v42 = swift_unknownObjectRetain(v27);
  v43 = v77(v76, v78, v42);
  swift_release();
  swift_unknownObjectRelease(v27);
  swift_retain();
  v44 = (uint64_t)v75;
  TTRMutableTreeStorage.parent(of:)(v36);
  v45 = swift_release();
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v41 + 48);
  if (v46(v44, 1, v38, v45) == 1)
  {
    sub_1000073A0(v44, (uint64_t *)&unk_100640EB0);
    swift_unknownObjectRelease(v43);
    goto LABEL_11;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44, v38);
  sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRelease(v43);
  if (EnumCaseMultiPayload != 2)
    goto LABEL_11;
  swift_retain();
  v48 = swift_unknownObjectRetain(v27);
  v49 = v77(v76, v78, v48);
  swift_release();
  swift_unknownObjectRelease(v27);
  swift_retain();
  v50 = (uint64_t)v71;
  TTRMutableTreeStorage.parent(of:)(v36);
  v51 = swift_release();
  if (v46(v50, 1, v38, v51) == 1)
  {
    sub_1000073A0(v50, (uint64_t *)&unk_100640EB0);
    v52 = (uint64_t)v70;
    v53 = (uint64_t)v68;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v52, 1, 1, v38);
    swift_unknownObjectRelease(v49);
    goto LABEL_16;
  }
  v57 = swift_getEnumCaseMultiPayload(v50, v38);
  sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v52 = (uint64_t)v70;
  v53 = (uint64_t)v68;
  if (v57 != 2)
    goto LABEL_15;
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(v36);
  swift_unknownObjectRelease(v49);
  swift_release();
LABEL_16:
  sub_10000735C(v52, v53, (uint64_t *)&unk_100640EB0);
  v58 = 1;
  v59 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v53, 1, v38);
  v40 = (uint64_t)v83;
  if (v59 != 1)
  {
    v60 = v67;
    sub_10001F580(v53, v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v61 = v74;
    sub_10002B1E8(v60, v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v61, 0, 2, v38);
    sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v58 = 0;
  }
  v62 = v72;
  v63 = v74;
  v64 = v58;
  v65 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v74, v64, 1, v73);
  sub_1000073A0(v52, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v65) == 1)
  {
    v66 = v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v69, 1, 2, v38);
    sub_1000073A0(v74, (uint64_t *)&unk_10064A060);
  }
  else
  {
    v66 = v69;
    sub_10001F580(v74, v69, type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems);
  }
  sub_10001F580(v66, v40, type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems);
LABEL_12:
  v54 = type metadata accessor for TTRIRemindersListItemAdjustedSelection(0);
  v55 = v82;
  sub_10002B1E8(v36, (uint64_t)&v82[*(int *)(v54 + 20)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *v55 = v84 & 1;
  return sub_10001F580(v40, (uint64_t)&v55[*(int *)(v54 + 24)], type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems);
}

_QWORD *sub_10014B830(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = (uint64_t)v1;
  v4 = (*(uint64_t (**)(void))(*v1 + 1384))();
  v5 = v1[18];
  ObjectType = swift_getObjectType(v1[17], v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(ObjectType, v5);
  if (v8)
  {
    v9 = v8;
    v10 = sub_10021DD18();
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v10);
  }
  swift_retain();
  swift_bridgeObjectRetain(a1);
  v11 = sub_1001747AC(v4, v2, a1);
  swift_bridgeObjectRelease(v4);
  swift_release();
  swift_bridgeObjectRelease(a1);
  return v11;
}

_QWORD *sub_10014B924(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    goto LABEL_10;
  v23 = a1;
  v24 = v2;
  v25 = a2;
  v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v15 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain(a1);
  v16 = 0;
  while (1)
  {
    v17 = sub_10002B1E8(v14, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v17);
    if (swift_getEnumCaseMultiPayload(v7, v5) < 3)
      break;
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_4:
    v14 += v15;
    if (!--v13)
      goto LABEL_9;
  }
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (!__OFADD__(v16++, 1))
    goto LABEL_4;
  __break(1u);
LABEL_9:
  a1 = v23;
  v10 = swift_bridgeObjectRelease(v23);
  v2 = v24;
LABEL_10:
  v19 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v2 + 1392))(a1, v10);
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v20 = sub_1001747AC(v19, v2, a1);
  swift_bridgeObjectRelease(v19);
  swift_release();
  swift_bridgeObjectRelease(a1);
  return v20;
}

void sub_10014BB08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t ObjectType;
  void *v39;
  __int16 v40;
  __int16 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104[24];
  _QWORD v105[6];
  __int128 v106;
  void *v107;
  uint64_t v108;
  _QWORD *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v5);
  v7 = (char *)v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1001A4608(a1);
  v16 = 0uLL;
  if (!v15)
  {
    v21 = 0;
    v42 = 0;
    v43 = 0uLL;
    v44 = 0uLL;
    v45 = 0uLL;
    goto LABEL_46;
  }
  v17 = v13;
  v98 = v9;
  *(_QWORD *)&v103 = v12;
  LODWORD(v101) = v14;
  *(_QWORD *)&v102 = a1;
  v105[0] = a1;
  v18 = sub_10002A750(&qword_100649DF0);
  v19 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  v20 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  Sequence.firstMap<A>(_:)(&v106, sub_100180890, v2, v18, v19, v20);
  v21 = (void *)v106;
  if (!(_QWORD)v106)
  {
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v15);
LABEL_18:
    v42 = 0;
    v15 = 0;
    v43 = 0uLL;
    v44 = 0uLL;
    v45 = 0uLL;
    v16 = 0uLL;
    goto LABEL_46;
  }
  v93[1] = 0;
  swift_beginAccess(v2 + 448, v104, 0, 0);
  sub_10000735C(v2 + 448, (uint64_t)&v106, &qword_100649DC8);
  if (!v108)
  {
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v15);

    sub_1000073A0((uint64_t)&v106, &qword_100649DC8);
    goto LABEL_17;
  }
  v22 = v2;
  v96 = v21;
  sub_10002E37C(&v106, (uint64_t)v105);
  v24 = (_QWORD *)v15[2];
  v97 = v2;
  v25 = v102;
  v99 = v24;
  v95 = a2;
  *(_QWORD *)&v100 = v15;
  v94 = v17;
  if (v24)
  {
    v26 = (void *)v15[4];
    v27 = v15[6];
    v28 = v15[8];
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v15);
    v29 = v26;
    swift_bridgeObjectRetain(v27);
    LOBYTE(v26) = static TTRSectionID.__derived_enum_equals(_:_:)(v26, 0);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v27);

    if ((v26 & 1) == 0)
    {
LABEL_19:
      swift_bridgeObjectRelease(v100);
      v25 = v102;
      v22 = v97;
      goto LABEL_20;
    }
    if (v99 != (_QWORD *)1)
    {
      v30 = (_QWORD *)(v100 + 104);
      v31 = 1;
      do
      {
        v32 = (_QWORD *)(v31 + 1);
        if (__OFADD__(v31, 1))
        {
          __break(1u);
          return;
        }
        v33 = *v30;
        v34 = *(v30 - 2);
        v35 = (void *)*(v30 - 4);
        swift_bridgeObjectRetain(*v30);
        v36 = v35;
        swift_bridgeObjectRetain(v34);
        LOBYTE(v35) = static TTRSectionID.__derived_enum_equals(_:_:)(v35, 0);
        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease(v34);

        if ((v35 & 1) == 0)
          goto LABEL_19;
        v30 += 5;
        ++v31;
      }
      while (v32 != v99);
    }
    v15 = (_QWORD *)v100;
    swift_bridgeObjectRelease(v100);
    a2 = v95;
    v17 = v94;
    v25 = v102;
    v22 = v97;
  }
  v37 = *(_QWORD *)(v22 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v22 + 136), v23);
  v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 176))(ObjectType, v37);
  v41 = v40;
  sub_1000760F4(v39, v40);
  if ((v41 & 0x100) == 0)
  {
    sub_100027F10(v105);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v15);

LABEL_17:
    v21 = 0;
    goto LABEL_18;
  }
LABEL_20:
  v46 = *(_QWORD *)(v25 + 16);
  if (!v46)
  {
    v50 = 0;
    goto LABEL_30;
  }
  v47 = v25 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
  v48 = v25;
  v49 = *(_QWORD *)(v98 + 72);
  swift_bridgeObjectRetain(v48);
  v50 = 0;
  while (1)
  {
    v51 = sub_10002B1E8(v47, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v51);
    if (swift_getEnumCaseMultiPayload(v7, v5) < 3)
      break;
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_23:
    v47 += v49;
    if (!--v46)
      goto LABEL_28;
  }
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (!__OFADD__(v50++, 1))
    goto LABEL_23;
  __break(1u);
LABEL_28:
  v25 = v102;
  swift_bridgeObjectRelease(v102);
  v22 = v97;
LABEL_30:
  sub_100010634((uint64_t)v105, (uint64_t)&v106);
  v53 = v100;
  if ((v101 & 1) != 0)
  {
    v54 = v25;
    v55 = v108;
    v56 = v109;
    sub_10001413C(&v106, v108);
    v57 = objc_msgSend(v96, "list");
    v58 = objc_msgSend(v57, "objectID");

    v59 = ((uint64_t (*)(id, uint64_t, _QWORD *))v56[5])(v58, v55, v56);
    sub_100027F10(&v106);
    if ((v59 & 1) != 0)
    {
      v60 = v103;
      swift_bridgeObjectRetain(v103);
      v61 = sub_100174EE0(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage, v53, v60);
      v22 = v97;
      v62 = v61;
      v99 = v63;
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease_n(v60, 2);
      v53 = (uint64_t)v62;
    }
    else
    {
      swift_bridgeObjectRelease(v103);
      v99 = _swiftEmptyArrayStorage;
    }
    v25 = v54;
  }
  else
  {
    sub_100027F10(&v106);
    swift_bridgeObjectRelease(v103);
    v99 = _swiftEmptyArrayStorage;
  }
  v65 = *(_QWORD *)(v22 + 144);
  v66 = swift_getObjectType(*(_QWORD *)(v22 + 136), v64);
  v67 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 176))(v66, v65);
  v69 = v68;
  sub_1000760F4(v67, v68);
  v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 104))(v66, v65);
  *(_QWORD *)&v100 = v53;
  if (v70)
  {
    v72 = v70;
    v73 = v71;
    v74 = swift_getObjectType(v70, v71);
    LOBYTE(v73) = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 16))(v74, v73);
    swift_unknownObjectRelease(v72);
    LODWORD(v103) = v73 & 1;
  }
  else
  {
    LODWORD(v103) = 0;
  }
  v75 = (v69 >> 8) & 1;
  v76 = swift_allocObject(&unk_1005F3738, 24, 7);
  v77 = v97;
  swift_weakInit(v76 + 16, v97);
  v78 = (_QWORD *)swift_allocObject(&unk_1005F4CC8, 40, 7);
  v78[2] = v76;
  v78[3] = v25;
  v79 = v25;
  v80 = v94;
  v78[4] = v94;
  v81 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v81 + 16, v77);
  v82 = (_QWORD *)swift_allocObject(&unk_1005F4CF0, 40, 7);
  v82[2] = v81;
  v82[3] = v79;
  v82[4] = v80;
  v83 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v83 + 16, v77);
  v84 = swift_allocObject(&unk_1005F4D18, 32, 7);
  v85 = v96;
  *(_QWORD *)(v84 + 16) = v83;
  *(_QWORD *)(v84 + 24) = v85;
  swift_bridgeObjectRetain_n(v79, 2);
  swift_bridgeObjectRetain_n(v80, 2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1001BB558(v100, (uint64_t)v99, v80, v101 & 1, v75, v103, v50, (uint64_t)sub_100181FC4, (uint64_t)&v106, (uint64_t)v78, (uint64_t)sub_100182008, (uint64_t)v82, (uint64_t)sub_100182018, v84);
  v103 = v106;
  v21 = v107;
  v86 = v108;
  LODWORD(v84) = BYTE1(v108);
  v87 = BYTE2(v108);
  v88 = BYTE3(v108);
  v15 = v109;
  v102 = v110;
  v101 = v111;
  v100 = v112;
  sub_100027F10(v105);
  swift_release();
  swift_release();
  swift_release();
  v45 = v100;
  v44 = v101;
  v43 = v102;
  v16 = v103;
  v89 = 256;
  if (!(_DWORD)v84)
    v89 = 0;
  v90 = v89 | v86;
  v91 = 0x10000;
  if (!v87)
    v91 = 0;
  v92 = 0x1000000;
  if (!v88)
    v92 = 0;
  v42 = v90 | v91 | v92;
  a2 = v95;
LABEL_46:
  *(_OWORD *)a2 = v16;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v42;
  *(_QWORD *)(a2 + 32) = v15;
  *(_OWORD *)(a2 + 40) = v43;
  *(_OWORD *)(a2 + 56) = v44;
  *(_OWORD *)(a2 + 72) = v45;
}

uint64_t sub_10014C3F8(unint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(BOOL *, uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  unint64_t v33;
  uint64_t v35;
  _QWORD v36[4];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v46 = a1;
  v5 = *a4;
  v37 = a2;
  v38 = v5;
  v6 = a4[2];
  v39 = a4[1];
  v40 = v6;
  v7 = a4[4];
  v41 = a4[3];
  v42 = v7;
  v43 = *((unsigned __int8 *)a4 + 40);
  v44 = a4[6];
  v45 = a4[7] & 1;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v36[1] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v10);
  v36[2] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRDLUserOperationDetail(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (BOOL *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750((uint64_t *)&unk_100649BE0);
  v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
  __chkstk_darwin(v16);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (BOOL *)v36 - v20;
  __chkstk_darwin(v22);
  v36[3] = (char *)v36 - v23;
  v24 = type metadata accessor for Logger(0);
  __chkstk_darwin(v24);
  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    v25 = v46;
    v26 = *(_QWORD *)(v46 + 16);
    if (v26)
    {
      *v15 = v26 != 1;
      v27 = enum case for REMRDLUserOperationDetail.rdl_multiSelectPermanentlyDelete(_:);
      v28 = *(void (**)(BOOL *, uint64_t, uint64_t, __n128))(v13 + 104);
      v29 = swift_bridgeObjectRetain(v25);
      v28(v15, v27, v12, v29);
    }
    else
    {
      sub_100152F94();
      v25 = v33;
      (*(void (**)(BOOL *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for REMRDLUserOperationDetail.rdl_permanentlyDeleteAll(_:), v12);
    }
    (*(void (**)(char *, BOOL *, uint64_t))(v13 + 16))(v18, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    if (*(_QWORD *)(v25 + 16))
    {
      v47 = v38;
      v48 = v39;
      v49 = v40;
      v50 = v41;
      v51 = v42;
      v52 = v43;
      v53 = v44;
      v54 = v45;
      sub_10015D094(v25, 0, (uint64_t)v18, (uint64_t)&v47, 0, 0);
    }
    swift_bridgeObjectRelease(v25);
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100649BE0);
    return (*(uint64_t (**)(BOOL *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v30 = v46;
    v31 = *(_QWORD *)(v46 + 16);
    if (v31)
    {
      v32 = swift_bridgeObjectRetain(v46);
    }
    else
    {
      sub_100152F94();
      v30 = v35;
      v31 = *(_QWORD *)(v35 + 16);
    }
    *v21 = v31 > 1;
    (*(void (**)(BOOL *, _QWORD, uint64_t, __n128))(v13 + 104))(v21, enum case for REMRDLUserOperationDetail.rdl_multiSelectRecover(_:), v12, v32);
    (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    v47 = v38;
    v48 = v39;
    v49 = v40;
    v50 = v41;
    v51 = v42;
    v52 = v43;
    v53 = v44;
    v54 = v45;
    sub_100179238(v30, (uint64_t)v21, (uint64_t)&v47);
    swift_bridgeObjectRelease(v30);
    return sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100649BE0);
  }
}

void sub_10014C8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v1;
  v6 = v2;
  if (qword_10063D400 != -1)
  {
    v20 = a1;
    swift_once(&qword_10063D400, sub_10015A89C);
    a1 = v20;
  }
  v7 = a1;
  v8 = sub_100012DC4(a1, (uint64_t)qword_100648980);
  v9 = v6;
  v10 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  v11 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v11, v3 + 120);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x6E756F436D657469;
  *(_QWORD *)(inited + 40) = 0xE900000000000074;
  v13 = *(_QWORD *)(v3 + 104);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(inited + 72) = &type metadata for Int;
  *(_QWORD *)(inited + 48) = v14;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List batch set due date {itemCount: %d}", 49, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v10, v7, v16);
  v17 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v4 - 144) = v17;
  v18 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v4 - 136) = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v4 - 128) = v18;
  v19 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v4 - 120) = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v4 - 112) = v19;
  *(_QWORD *)(v4 - 104) = *(_QWORD *)(v3 + 88);
  *(_BYTE *)(v4 - 96) = *(_DWORD *)(v3 + 100);
  sub_100153844(v13, v4 - 152, 0, 0);
  JUMPOUT(0x10014C890);
}

uint64_t sub_10014D050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[18];
  ObjectType = swift_getObjectType(v2[17], v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 224))(a1, ObjectType, v12);
  v15 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
  {
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100646F40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  }
  else
  {
    v50 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18 = sub_10001F580((uint64_t)v11, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    v19 = v2[13];
    v20 = a2 + *(int *)(v15 + 48);
    if (*(_QWORD *)(v20 + 24))
    {
      v21 = *(unsigned __int8 *)(v19 + 296);
      if (v21 == 2)
      {
        v22 = TTRGeoLocationService.isAuthorizedForPreciseLocation.getter(v18);
        *(_BYTE *)(v19 + 296) = v22 & 1;
      }
      else
      {
        v22 = v21 & 1;
      }
      *(_BYTE *)(v20 + 48) = (v22 & 1) == 0;
    }
    v47 = v2 + 2;
    v48 = v7;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 2);
    v25 = Strong;
    v49 = v16;
    if (Strong)
    {
      v26 = v2[3];
      v27 = swift_getObjectType(Strong, v24);
      v28 = (*(double (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
      swift_unknownObjectRelease(v25);
      v29 = *(_QWORD *)&v28;
    }
    else
    {
      v29 = 0;
    }
    v30 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v30 + 16, v3);
    swift_retain();
    sub_1001A93CC(a2, a1, v29, v25 == 0);
    swift_release_n(v30, 2);
    v31 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v31 + 16, v3);
    swift_retain();
    sub_1001A96A8(a2, a1, (uint64_t)sub_100181944, v31);
    swift_release_n(v31, 2);
    v32 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v32 + 16, v3);
    swift_retain();
    sub_1001A9938(a2, a1, (uint64_t)sub_100181944, v32);
    swift_release_n(v32, 2);
    v33 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v33 + 16, v3);
    swift_retain();
    sub_1001A9CD0(a2, a1, (uint64_t)sub_100181944, v33);
    swift_release_n(v33, 2);
    v34 = swift_unknownObjectWeakLoadStrong(v47);
    v36 = v34;
    if (v34)
    {
      v37 = v3[3];
      v38 = swift_getObjectType(v34, v35);
      v39 = (*(double (**)(uint64_t, uint64_t))(v37 + 8))(v38, v37);
      swift_unknownObjectRelease(v36);
      v40 = *(_QWORD *)&v39;
    }
    else
    {
      v40 = 0;
    }
    v41 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v41 + 16, v3);
    swift_retain();
    sub_1001AAD18(a2, a1, v40, v36 == 0, (uint64_t)sub_100181944, v41);
    swift_release_n(v41, 2);
    v42 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v42 + 16, v3);
    v43 = v50;
    sub_10002B1E8(a1, v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v44 = *(unsigned __int8 *)(v48 + 80);
    v45 = (v44 + 24) & ~v44;
    v46 = swift_allocObject(&unk_1005F4C50, v45 + v8, v44 | 7);
    *(_QWORD *)(v46 + 16) = v42;
    sub_10001F580(v43, v46 + v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    sub_1001AA098(a2, a1, (uint64_t)sub_100181D20, v46);
    swift_release();
    swift_release();
    sub_1001AA3AC(a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(a2, 0, 1, v15);
  }
}

void sub_10014D4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v1 = v0;
  v49 = 0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v61 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v57 = (char *)&v49 - v7;
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v49 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v49 - v11;
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(v16, v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 192);
  swift_retain();
  v21 = swift_unknownObjectRetain(v16);
  v22 = v20(ObjectType, v17, v21);
  swift_release();
  swift_unknownObjectRelease(v16);
  v60 = v22;
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v58(v15, 1, 1, v2);
  swift_retain();
  v23 = TTRMutableTreeStorage.children(of:)(v15);
  swift_release();
  v59 = v15;
  v24 = (uint64_t)v15;
  v25 = (_QWORD *)v23;
  sub_1000073A0(v24, (uint64_t *)&unk_100640EB0);
  v26 = *(_QWORD *)(v23 + 16);
  v51 = v3;
  if (v26)
  {
    sub_10002B1E8(v23 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v2);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v28 = v60;
      swift_retain();
      v29 = (uint64_t)v25;
      v30 = v25;
      v31 = v49;
      v32 = sub_100393344(v29, v28);
      v49 = v31;
      swift_bridgeObjectRelease(v30);
      swift_release();
      v25 = v32;
    }
    v3 = v51;
  }
  else
  {
    swift_bridgeObjectRelease(v23);
    v25 = _swiftEmptyArrayStorage;
  }
  v53 = v25[2];
  if (v53)
  {
    v33 = 0;
    v56 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v52 = (char *)v25 + v56;
    v34 = _swiftEmptyArrayStorage;
    v50 = v25;
    while (v33 < v25[2])
    {
      v35 = *(_QWORD *)(v3 + 72);
      v55 = v33;
      v36 = (uint64_t)v59;
      sub_10002B1E8((uint64_t)&v52[v35 * v33], (uint64_t)v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v58((char *)v36, 0, 1, v2);
      swift_retain();
      v37 = TTRMutableTreeStorage.children(of:)(v36);
      swift_release();
      sub_1000073A0(v36, (uint64_t *)&unk_100640EB0);
      v38 = *(_QWORD *)(v37 + 16);
      if (v38)
      {
        v39 = (uint64_t)v57;
        v54 = v37;
        v40 = v37 + v56;
        do
        {
          sub_10002B1E8(v40, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10002B1E8((uint64_t)v10, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v39, v2) == 2)
          {
            v42 = v35;
            v43 = (unint64_t)v34;
            sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v44 = (uint64_t)v59;
            sub_10002B1E8((uint64_t)v10, (uint64_t)v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v45 = v2;
            v58((char *)v44, 0, 1, v2);
            swift_retain();
            v46 = TTRMutableTreeStorage.numberOfChildren(of:)(v44);
            swift_release();
            sub_1000073A0(v44, (uint64_t *)&unk_100640EB0);
            v41 = (uint64_t)v10;
            if (v46 <= 0)
            {
              v2 = v45;
              v34 = (_QWORD *)v43;
              v35 = v42;
            }
            else
            {
              sub_10002B1E8((uint64_t)v10, v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v34 = (_QWORD *)v43;
              if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
                v34 = (_QWORD *)sub_100454EEC(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
              v35 = v42;
              v48 = v34[2];
              v47 = v34[3];
              if (v48 >= v47 >> 1)
                v34 = (_QWORD *)sub_100454EEC(v47 > 1, v48 + 1, 1, (unint64_t)v34);
              v34[2] = v48 + 1;
              sub_10001F580(v61, (uint64_t)v34 + v56 + v48 * v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v41 = (uint64_t)v10;
              v2 = v45;
            }
            v39 = (uint64_t)v57;
          }
          else
          {
            sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v41 = v39;
          }
          sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v40 += v35;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease(v54);
        v25 = v50;
        v3 = v51;
      }
      else
      {
        swift_bridgeObjectRelease(v37);
      }
      v33 = v55 + 1;
      if (v55 + 1 == v53)
        goto LABEL_25;
    }
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_unknownObjectRelease(v60);
    swift_bridgeObjectRelease(v25);
  }
}

BOOL sub_10014DA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v21;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 136);
  v12 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(v11, v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 192);
  swift_retain();
  v16 = swift_unknownObjectRetain(v11);
  v17 = v15(ObjectType, v12, v16);
  swift_release();
  swift_unknownObjectRelease(v11);
  LOBYTE(v11) = sub_10037E330(a1);
  sub_10002B1E8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v11 & 1) != 0)
  {
    sub_10002B1E8((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    swift_retain();
    v18 = TTRMutableTreeStorage.numberOfChildren(of:)(v6);
    swift_release();
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    v19 = v18 > 0;
  }
  else
  {
    v19 = 0;
  }
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRelease(v17);
  return v19;
}

uint64_t sub_10014DBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + 136);
  v6 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(v5, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 192);
  swift_retain(v3);
  swift_unknownObjectRetain(v5);
  v9 = v8(ObjectType, v6);
  swift_release(v3);
  swift_unknownObjectRelease(v5);
  v10 = *(_QWORD *)(v9 + 24);
  v11 = *(_QWORD *)(v9 + 32);
  swift_unknownObjectRetain(v10);
  swift_unknownObjectRelease(v9);
  v13 = swift_getObjectType(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8) + 40))(a1, v13);
  return swift_unknownObjectRelease(v10);
}

_QWORD *sub_10014DC7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v23;
  _QWORD v24[4];
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27[5];
  char v28;

  v2 = v1;
  v25 = a1;
  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v24 - v10;
  v12 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + 136);
  v16 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(v15, v17);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v27, ObjectType, v16);
  sub_100179C5C(v27);
  if ((v28 & 1) == 0)
  {
    v24[1] = v15;
    v24[2] = ObjectType;
    v24[0] = v5;
    v24[3] = v9;
    v19 = *(_QWORD *)(v2 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v19, v26, 0, 0);
    sub_10002B1E8(v19, (uint64_t)v14, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v20 = TTRRemindersListEditingState.isEditing(_:)(v25, v12, &off_100606E48);
    v21 = sub_10001F544((uint64_t)v14, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v20 & 1) == 0)
    {
      TTRRemindersListViewModel.Item.editableCasesOnly.getter(v21);
      v23 = (char *)&loc_10014DE38 + 4 * byte_10052610A[swift_getEnumCaseMultiPayload(v11, v6)];
      __asm { BR              X10 }
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_10014DE98()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem);
  JUMPOUT(0x10014DE38);
}

void sub_10014DF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  objc_class *v9;
  _BYTE *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v2 - 304);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 248))(v0, v3, v1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(_QWORD *)(v2 - 320);
    (*(void (**)(uint64_t, uint64_t))(v1 + 136))(v3, v1);
    v7 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) == 1)
    {
      sub_1000073A0(v6, &qword_100649CA0);
      v8 = 0;
    }
    else
    {
      v8 = *(_BYTE *)(v6 + *(int *)(v7 + 116));
      sub_10001F544(v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    v9 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
    v10 = objc_allocWithZone(v9);
    v10[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
    *(_QWORD *)&v10[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v5;
    v10[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v8;
    *(_QWORD *)(v2 - 280) = v10;
    *(_QWORD *)(v2 - 272) = v9;
    v11 = v5;
    v12 = objc_msgSendSuper2((objc_super *)(v2 - 280), "init");
    v13 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v12);
    v14 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v13);
    *(_QWORD *)(v2 - 184) = v9;
    *(_QWORD *)(v2 - 208) = v12;
    *(_QWORD *)(v2 - 264) = 0xD000000000000029;
    *(_QWORD *)(v2 - 256) = 0x8000000100566E40;
    v15 = v12;
    AnyHashable.init<A>(_:)((_QWORD *)(v2 - 248), v2 - 264, &type metadata for String, &protocol witness table for String);
    UIDragItem.setLocalObject(_:forKey:)(v2 - 208, v2 - 248);
    sub_100041DDC(v2 - 248);
    sub_1000073A0(v2 - 208, &qword_100640E50);
    v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v17 = swift_allocObject(v16, 40, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100521140;
    *(_QWORD *)(v17 + 32) = v14;
    *(_QWORD *)(v2 - 248) = v17;
    specialized Array._endMutation()(v17);

    JUMPOUT(0x10014DF04);
  }
  JUMPOUT(0x10014DEF4);
}

uint64_t sub_10014E324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24[5];
  __int128 v25;
  __int128 v26;
  _UNKNOWN **v27;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v4 + 504))(&v25, a1, ObjectType, v4);
  v6 = *((_QWORD *)&v26 + 1);
  sub_1000073A0((uint64_t)&v25, (uint64_t *)&unk_10064A020);
  if (!v6)
  {
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96))(ObjectType, v4);
    if (!v7)
      return v7;
    sub_10021F790(v24);
    v8 = sub_10001413C(v24, v24[3]);
    Strong = swift_unknownObjectWeakLoadStrong(*v8 + 16);
    if (Strong)
    {
      v10 = Strong;
      v11 = sub_100220B04();
      v13 = v12;
      v14 = ~v12;
      swift_unknownObjectRelease(v10);
      if (v14)
      {
        v15 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0);
        *((_QWORD *)&v26 + 1) = v15;
        v27 = &off_1005F0098;
        v16 = sub_100028D70(&v25);
        sub_10002B1E8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v17 = (char *)v16 + *(int *)(v15 + 20);
        *(_QWORD *)v17 = v11;
        v17[8] = v13;
LABEL_13:
        sub_100027F10(v24);
        swift_unknownObjectRelease(v7);
        v7 = *((_QWORD *)&v26 + 1) != 0;
        sub_1000073A0((uint64_t)&v25, &qword_1006445C8);
        return v7;
      }
    }
    else
    {
      if (qword_10063D378 != -1)
        swift_once(&qword_10063D378, sub_1000B4280);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100012DC4(v18, (uint64_t)qword_100644338);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.fault.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

    }
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    goto LABEL_13;
  }
  return 1;
}

void sub_10014E548(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *);
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  const char *v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t Strong;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  const char *v104;
  _QWORD *v105;
  void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  _UNKNOWN **v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143[5];
  __int128 v144;
  uint64_t v145;
  _UNKNOWN **v146;
  uint64_t v147[3];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v139 = a1;
  v134 = a5;
  LODWORD(v137) = a4;
  v7 = sub_10002A750((uint64_t *)&unk_10064A000);
  __chkstk_darwin(v7);
  v135 = (uint64_t)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  v132 = *(_QWORD *)(v9 - 8);
  v133 = v9;
  __chkstk_darwin(v9);
  v131 = (uint64_t)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v15);
  v17 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a2, (uint64_t)v17, (uint64_t *)&unk_100640EB0);
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
    v19 = 0xE300000000000000;
    v140 = 7104878;
  }
  else
  {
    v20 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v140 = TTRTreeStorageItem.treeItemDescription.getter(v18, v20);
    v19 = v21;
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v22 = sub_100012DC4(v11, (uint64_t)qword_100648980);
  v23 = *(void (**)(char *))(v12 + 16);
  v136 = v22;
  v23(v14);
  v24 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v24, &v150);
  *(_OWORD *)(inited + 16) = xmmword_1005275C0;
  *(_QWORD *)(inited + 32) = 0x736D657469;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v26 = v139;
  swift_bridgeObjectRetain(v139);
  v28 = sub_10015C7F4(v27);
  swift_bridgeObjectRelease(v26);
  v29 = sub_10002A750(&qword_1006466D0);
  *(_QWORD *)(inited + 48) = v28;
  *(_QWORD *)(inited + 72) = v29;
  *(_QWORD *)(inited + 80) = 0x746E657261506F74;
  v30 = v140;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = v30;
  *(_QWORD *)(inited + 104) = v19;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 128) = 29793;
  *(_QWORD *)(inited + 168) = &type metadata for Int;
  *(_QWORD *)(inited + 136) = 0xE200000000000000;
  *(_QWORD *)(inited + 144) = a3;
  swift_bridgeObjectRetain(v19);
  v31 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder list move items {items: %@, toParent: %@, at: %d}", 58, 2, v31);
  v32 = swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v32);
  v34 = v138;
  if ((v137 & 1) != 0)
  {
    v35 = *(_QWORD *)(v138 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v138 + 136), v33);
    a3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 544))(a3, a2, v26, ObjectType, v35);
  }
  v37 = *(_QWORD *)(v34 + 144);
  v38 = swift_getObjectType(*(_QWORD *)(v34 + 136), v33);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 520))(&v144, a2, a3, v38, v37);
  if (v145)
  {
    sub_10002E37C(&v144, (uint64_t)v147);
    v39 = sub_100478C64(v26, v38, v37);
    if (v39)
    {
      v40 = v39;
      v41 = v19;
      v42 = v148;
      v43 = v149;
      sub_10001413C(v147, v148);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v43 + 32))(&v144, v40, v42, v43);
      swift_bridgeObjectRelease(v40);
      v44 = v145;
      v45 = v146;
      sub_10001413C(&v144, v145);
      v46 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v45[4])(v44, v45);
      if (!v46)
      {
        v67 = v139;
        swift_bridgeObjectRetain_n(v139, 2);
        swift_bridgeObjectRetain(v41);
        v69 = Logger.logObject.getter(v68);
        v70 = static os_log_type_t.fault.getter(v69);
        if (os_log_type_enabled(v69, v70))
        {
          v71 = swift_slowAlloc(22, -1);
          v138 = swift_slowAlloc(64, -1);
          v143[0] = v138;
          *(_DWORD *)v71 = 136315394;
          swift_bridgeObjectRetain(v67);
          v73 = sub_10015C7F4(v72);
          swift_bridgeObjectRelease(v67);
          v74 = Array.description.getter(v73, &type metadata for String);
          v76 = v75;
          swift_bridgeObjectRelease(v73);
          v141 = sub_100027E40(v74, v76, v143);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v71 + 4, v71 + 12);
          swift_bridgeObjectRelease_n(v67, 2);
          swift_bridgeObjectRelease(v76);
          *(_WORD *)(v71 + 12) = 2080;
          swift_bridgeObjectRetain(v41);
          v141 = sub_100027E40(v140, v41, v143);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v71 + 14, v71 + 22);
          swift_bridgeObjectRelease_n(v41, 3);
          v77 = "Failed to commit move. Cannot get optimistic moves {items: %s, newParent: %s}";
LABEL_49:
          _os_log_impl((void *)&_mh_execute_header, v69, v70, v77, (uint8_t *)v71, 0x16u);
          v129 = v138;
          swift_arrayDestroy(v138, 2, &type metadata for Any[8]);
          swift_slowDealloc(v129, -1, -1);
          swift_slowDealloc(v71, -1, -1);

          goto LABEL_52;
        }
LABEL_50:

        swift_bridgeObjectRelease_n(v41, 2);
        swift_bridgeObjectRelease_n(v67, 2);
        goto LABEL_52;
      }
      v47 = v46;
      if (*(_QWORD *)(v46 + 16))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 376))(v46, v38, v37);
        if ((v134 & 1) != 0 || (v88 = v138, (Strong = swift_unknownObjectWeakLoadStrong(v138 + 16)) == 0))
        {
          swift_bridgeObjectRelease(v47);
        }
        else
        {
          v91 = Strong;
          v92 = *(_QWORD *)(v88 + 24);
          v93 = swift_getObjectType(Strong, v90);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 120))(v47, v93, v92);
          swift_bridgeObjectRelease(v47);
          swift_unknownObjectRelease(v91);
        }
        v120 = v145;
        v121 = v146;
        sub_10001413C(&v144, v145);
        v122 = v135;
        ((void (*)(uint64_t, _UNKNOWN **))v121[5])(v120, v121);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v122, 1, v133) != 1)
        {
          swift_bridgeObjectRelease(v41);
          v130 = v131;
          sub_10001F580(v135, v131, type metadata accessor for TTRRemindersListMovingRemindersParams);
          sub_1001A57E4(v139);
          sub_1001A5E78(v130);
          sub_10001F544(v130, type metadata accessor for TTRRemindersListMovingRemindersParams);
          goto LABEL_52;
        }
        sub_1000073A0(v135, (uint64_t *)&unk_10064A000);
        v67 = v139;
        swift_bridgeObjectRetain_n(v139, 2);
        swift_bridgeObjectRetain(v41);
        v69 = Logger.logObject.getter(v123);
        v70 = static os_log_type_t.fault.getter(v69);
        if (os_log_type_enabled(v69, v70))
        {
          v71 = swift_slowAlloc(22, -1);
          v138 = swift_slowAlloc(64, -1);
          v143[0] = v138;
          *(_DWORD *)v71 = 136315394;
          swift_bridgeObjectRetain(v67);
          v125 = sub_10015C7F4(v124);
          swift_bridgeObjectRelease(v67);
          v126 = Array.description.getter(v125, &type metadata for String);
          v128 = v127;
          swift_bridgeObjectRelease(v125);
          v141 = sub_100027E40(v126, v128, v143);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v71 + 4, v71 + 12);
          swift_bridgeObjectRelease_n(v67, 2);
          swift_bridgeObjectRelease(v128);
          *(_WORD *)(v71 + 12) = 2080;
          swift_bridgeObjectRetain(v41);
          v141 = sub_100027E40(v140, v41, v143);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v71 + 14, v71 + 22);
          swift_bridgeObjectRelease_n(v41, 3);
          v77 = "Failed to commit move. Cannot get params for saving {items: %s, newParent: %s}";
          goto LABEL_49;
        }
        goto LABEL_50;
      }
      swift_bridgeObjectRelease(v46);
      goto LABEL_43;
    }
    sub_100027F10(v147);
  }
  else
  {
    sub_1000073A0((uint64_t)&v144, &qword_100641748);
  }
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 96))(v38, v37);
  if (v48)
  {
    v49 = v48;
    sub_10021F790(v143);
    sub_10001413C(v143, v143[3]);
    sub_1000B4310(a2, a3, (uint64_t *)&v144);
    sub_100027F10(v143);
    if (v145)
    {
      sub_10002E37C(&v144, (uint64_t)v147);
      *(_QWORD *)&v144 = v26;
      v50 = v49;
      v51 = sub_10002A750(&qword_100649DF0);
      v52 = sub_10002A750(&qword_1006445D8);
      v53 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
      v54 = Sequence.completeCompactMap<A>(_:)(sub_1001818A0, v50, v51, v52, v53);
      if (v54)
      {
        v55 = v54;
        v137 = v50;
        v41 = v19;
        v56 = *sub_10001413C(v147, v148);
        v57 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionPlan();
        v58 = swift_allocObject(v57, 72, 7);
        *(_QWORD *)(v58 + 16) = _swiftEmptyArrayStorage;
        *(_BYTE *)(v58 + 24) = 1;
        *(_QWORD *)(v58 + 32) = 0;
        *(_WORD *)(v58 + 40) = -512;
        *(_QWORD *)(v58 + 56) = 0;
        *(_QWORD *)(v58 + 64) = 0;
        *(_QWORD *)(v58 + 48) = v56;
        swift_retain();
        sub_1000B5084(v55);
        v145 = v57;
        v146 = &off_1005EFFF0;
        *(_QWORD *)&v144 = v58;
        swift_bridgeObjectRelease(v55);
        sub_10001413C(&v144, v57);
        v59 = sub_1000B54D8();
        if (v59)
        {
          v60 = v59;
          if (!*(_QWORD *)(v59 + 16))
          {
            swift_bridgeObjectRelease(v59);
            swift_unknownObjectRelease(v137);
LABEL_43:
            swift_bridgeObjectRelease(v41);
            goto LABEL_52;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 376))(v59, v38, v37);
          if ((v134 & 1) != 0 || (v61 = v138, (v62 = swift_unknownObjectWeakLoadStrong(v138 + 16)) == 0))
          {
            swift_bridgeObjectRelease(v60);
          }
          else
          {
            v64 = v62;
            v65 = *(_QWORD *)(v61 + 24);
            v66 = swift_getObjectType(v62, v63);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 120))(v60, v66, v65);
            swift_bridgeObjectRelease(v60);
            swift_unknownObjectRelease(v64);
          }
          sub_10001413C(&v144, v145);
          v105 = sub_1000B574C();
          if ((unsigned __int16)((unsigned __int16)v108 >> 10) <= 0x3Eu)
          {
            v116 = (uint64_t)v105;
            v117 = v106;
            v118 = v107;
            v119 = v108;
            swift_bridgeObjectRelease(v41);
            sub_1001A6BCC(v116, v117, v118, v119);
            swift_unknownObjectRelease(v137);
            sub_1001818B8(v116, v117, v118, v119);
            goto LABEL_52;
          }
          v94 = v139;
          swift_bridgeObjectRetain_n(v139, 2);
          swift_bridgeObjectRetain(v41);
          v96 = Logger.logObject.getter(v109);
          v97 = static os_log_type_t.fault.getter(v96);
          if (os_log_type_enabled(v96, v97))
          {
            v98 = swift_slowAlloc(22, -1);
            v138 = swift_slowAlloc(64, -1);
            v143[0] = v138;
            *(_DWORD *)v98 = 136315394;
            swift_bridgeObjectRetain(v94);
            v111 = sub_10015C7F4(v110);
            swift_bridgeObjectRelease(v94);
            v112 = Array.description.getter(v111, &type metadata for String);
            v114 = v113;
            swift_bridgeObjectRelease(v111);
            v141 = sub_100027E40(v112, v114, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v98 + 4, v98 + 12);
            swift_bridgeObjectRelease_n(v94, 2);
            swift_bridgeObjectRelease(v114);
            *(_WORD *)(v98 + 12) = 2080;
            swift_bridgeObjectRetain(v41);
            v141 = sub_100027E40(v140, v41, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v98 + 14, v98 + 22);
            swift_bridgeObjectRelease_n(v41, 3);
            v104 = "Failed to commit move. Cannot get params for saving {items: %s, newParent: %s}";
            goto LABEL_40;
          }
        }
        else
        {
          v94 = v139;
          swift_bridgeObjectRetain_n(v139, 2);
          swift_bridgeObjectRetain(v41);
          v96 = Logger.logObject.getter(v95);
          v97 = static os_log_type_t.fault.getter(v96);
          if (os_log_type_enabled(v96, v97))
          {
            v98 = swift_slowAlloc(22, -1);
            v138 = swift_slowAlloc(64, -1);
            v143[0] = v138;
            *(_DWORD *)v98 = 136315394;
            swift_bridgeObjectRetain(v94);
            v100 = sub_10015C7F4(v99);
            swift_bridgeObjectRelease(v94);
            v101 = Array.description.getter(v100, &type metadata for String);
            v103 = v102;
            swift_bridgeObjectRelease(v100);
            v141 = sub_100027E40(v101, v103, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v98 + 4, v98 + 12);
            swift_bridgeObjectRelease_n(v94, 2);
            swift_bridgeObjectRelease(v103);
            *(_WORD *)(v98 + 12) = 2080;
            swift_bridgeObjectRetain(v41);
            v141 = sub_100027E40(v140, v41, v143);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, &v142, v98 + 14, v98 + 22);
            swift_bridgeObjectRelease_n(v41, 3);
            v104 = "Failed to commit move. Cannot get optimistic moves {items: %s, newParent: %s}";
LABEL_40:
            _os_log_impl((void *)&_mh_execute_header, v96, v97, v104, (uint8_t *)v98, 0x16u);
            v115 = v138;
            swift_arrayDestroy(v138, 2, &type metadata for Any[8]);
            swift_slowDealloc(v115, -1, -1);
            swift_slowDealloc(v98, -1, -1);
            swift_unknownObjectRelease(v137);

LABEL_52:
            sub_100027F10(&v144);
            sub_100027F10(v147);
            return;
          }
        }

        swift_bridgeObjectRelease_n(v41, 2);
        swift_bridgeObjectRelease_n(v94, 2);
        swift_unknownObjectRelease(v137);
        goto LABEL_52;
      }
      swift_unknownObjectRelease(v50);
      sub_100027F10(v147);
    }
    else
    {
      swift_unknownObjectRelease(v49);
      sub_1000073A0((uint64_t)&v144, (uint64_t *)&unk_10064A010);
    }
  }
  swift_bridgeObjectRetain_n(v26, 2);
  swift_bridgeObjectRetain(v19);
  v79 = Logger.logObject.getter(v78);
  v80 = static os_log_type_t.fault.getter(v79);
  if (os_log_type_enabled(v79, v80))
  {
    v81 = swift_slowAlloc(22, -1);
    v139 = swift_slowAlloc(64, -1);
    v147[0] = v139;
    *(_DWORD *)v81 = 136315394;
    swift_bridgeObjectRetain(v26);
    v83 = sub_10015C7F4(v82);
    swift_bridgeObjectRelease(v26);
    v84 = Array.description.getter(v83, &type metadata for String);
    v86 = v85;
    swift_bridgeObjectRelease(v83);
    *(_QWORD *)&v144 = sub_100027E40(v84, v86, v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v81 + 4, v81 + 12);
    swift_bridgeObjectRelease_n(v26, 2);
    swift_bridgeObjectRelease(v86);
    *(_WORD *)(v81 + 12) = 2080;
    swift_bridgeObjectRetain(v19);
    *(_QWORD *)&v144 = sub_100027E40(v140, v19, v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v81 + 14, v81 + 22);
    swift_bridgeObjectRelease_n(v19, 3);
    _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to commit move. Cannot get params for moving {items: %s, newParent: %s}", (uint8_t *)v81, 0x16u);
    v87 = v139;
    swift_arrayDestroy(v139, 2, &type metadata for Any[8]);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v81, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v19, 2);
    swift_bridgeObjectRelease_n(v26, 2);
  }
}

uint64_t sub_10014F558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *);
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t Strong;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[3];
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[88];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = __chkstk_darwin(v6);
  v88 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v81 - v9;
  v10 = sub_10002A750((uint64_t *)&unk_10064A000);
  __chkstk_darwin(v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v81 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v18 = sub_100012DC4(v14, (uint64_t)qword_100648980);
  v19 = *(void (**)(char *))(v15 + 16);
  v89 = v18;
  v19(v17);
  v20 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v20, v98);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x736D657469;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v22 = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = 1869901417;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v23 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  swift_bridgeObjectRetain(a1);
  v86 = v23;
  v24 = TTRTreeStorageItem.treeItemDescription.getter(v6, v23);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v24;
  *(_QWORD *)(inited + 104) = v25;
  v26 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List drop item(s) into item {items: %@, into: %@}", 59, 2, v26);
  v27 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v27);
  v28 = v3;
  v29 = *(_QWORD *)(v3 + 136);
  v82 = v28;
  v30 = *(_QWORD *)(v28 + 144);
  ObjectType = swift_getObjectType(v29, v31);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v30 + 528))(&v92, a2, ObjectType, v30);
  v87 = v6;
  if (!v93)
  {
    sub_1000073A0((uint64_t)&v92, &qword_100641748);
LABEL_10:
    v53 = v88;
    sub_10002B1E8(a2, v88, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v54 = swift_bridgeObjectRetain_n(a1, 2);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.fault.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      v95[0] = v58;
      *(_DWORD *)v57 = 136315394;
      swift_bridgeObjectRetain(a1);
      v60 = sub_10015C7F4(v59);
      swift_bridgeObjectRelease(a1);
      v61 = Array.description.getter(v60, &type metadata for String);
      v63 = v62;
      swift_bridgeObjectRelease(v60);
      *(_QWORD *)&v92 = sub_100027E40(v61, v63, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, (char *)&v92 + 8, v57 + 4, v57 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v63);
      *(_WORD *)(v57 + 12) = 2080;
      v64 = TTRTreeStorageItem.treeItemDescription.getter(v87, v86);
      v66 = v65;
      *(_QWORD *)&v92 = sub_100027E40(v64, v65, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, (char *)&v92 + 8, v57 + 14, v57 + 22);
      swift_bridgeObjectRelease(v66);
      sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to commit drop into. Cannot get params for dropping {items: %s, target: %s}", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy(v58, 2, &type metadata for Any[8]);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a1, 2);
      sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }

    goto LABEL_19;
  }
  sub_10002E37C(&v92, (uint64_t)v95);
  v33 = sub_100478C64(a1, ObjectType, v30);
  if (!v33)
  {
    sub_100027F10(v95);
    goto LABEL_10;
  }
  v34 = v33;
  v36 = v96;
  v35 = v97;
  sub_10001413C(v95, v96);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v35 + 32))(&v92, v34, v36, v35);
  swift_bridgeObjectRelease(v34);
  v37 = v93;
  v38 = v94;
  sub_10001413C(&v92, v93);
  (*(void (**)(uint64_t, uint64_t))(v38 + 40))(v37, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v12, 1, v85) == 1)
  {
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_10064A000);
    v39 = v83;
    sub_10002B1E8(a2, v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v40 = swift_bridgeObjectRetain_n(a1, 2);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.fault.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc(22, -1);
      v44 = swift_slowAlloc(64, -1);
      v91 = v44;
      *(_DWORD *)v43 = 136315394;
      swift_bridgeObjectRetain(a1);
      v46 = sub_10015C7F4(v45);
      swift_bridgeObjectRelease(a1);
      v47 = Array.description.getter(v46, &type metadata for String);
      v49 = v48;
      swift_bridgeObjectRelease(v46);
      v90 = sub_100027E40(v47, v49, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v49);
      *(_WORD *)(v43 + 12) = 2080;
      v50 = TTRTreeStorageItem.treeItemDescription.getter(v87, v86);
      v52 = v51;
      v90 = sub_100027E40(v50, v51, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v43 + 14, v43 + 22);
      swift_bridgeObjectRelease(v52);
      sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Failed to commit drop into. Cannot get params for saving {items: %s, target: %s}", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy(v44, 2, &type metadata for Any[8]);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a1, 2);
      sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }

    sub_100027F10(&v92);
    sub_100027F10(v95);
LABEL_19:
    v78 = 0;
    return v78 & 1;
  }
  v67 = v81;
  sub_10001F580((uint64_t)v12, v81, type metadata accessor for TTRRemindersListMovingRemindersParams);
  v68 = v82;
  sub_1001A57E4(a1);
  v69 = v93;
  v70 = v94;
  sub_10001413C(&v92, v93);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 32))(v69, v70);
  if (v71)
  {
    v72 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 376))(v71, ObjectType, v30);
    Strong = swift_unknownObjectWeakLoadStrong(v68 + 16);
    if (Strong)
    {
      v75 = Strong;
      v76 = *(_QWORD *)(v68 + 24);
      v77 = swift_getObjectType(Strong, v74);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 120))(v72, v77, v76);
      swift_bridgeObjectRelease(v72);
      swift_unknownObjectRelease(v75);
    }
    else
    {
      swift_bridgeObjectRelease(v72);
    }
  }
  sub_1001A6D34(v67);
  v78 = v80;
  sub_10001F544(v67, type metadata accessor for TTRRemindersListMovingRemindersParams);
  sub_100027F10(&v92);
  sub_100027F10(v95);
  return v78 & 1;
}

double sub_10014FE24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v7;
  objc_class *v8;
  uint64_t ObjectType;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  char v17;
  _BYTE *v18;
  id v19;
  char *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  _UNKNOWN **v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t (*v46)(void);
  uint64_t *v47;
  _QWORD *v48;
  _QWORD *v49;
  char v50;
  void *v51;
  objc_class *v52;
  _QWORD *v53;
  __int128 v54;
  objc_super v55;
  _QWORD v56[2];
  _QWORD v57[5];
  char *v58;
  uint64_t v59[5];
  char v60;

  v4 = v3;
  v7 = (_QWORD *)v3[17];
  v8 = (objc_class *)v3[18];
  ObjectType = swift_getObjectType(v7, a2);
  (*((void (**)(uint64_t *__return_ptr, uint64_t, objc_class *))v8 + 1))(v59, ObjectType, v8);
  sub_100179C5C(v59);
  if ((v60 & 1) != 0)
  {
    v26 = type metadata accessor for TTRIRemindersListUnsupportedDropRequest();
    v27 = swift_allocObject(v26, 16, 7);
    v29 = &off_1005FFB80;
    a3[3] = v26;
    goto LABEL_29;
  }
  if (!((unint64_t)a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v11 = (_QWORD *)a1;
    if (v10)
      goto LABEL_4;
LABEL_36:
    swift_bridgeObjectRelease(v11);
    v39 = v4[9];
    v40 = v4[10];
    v41 = v4[29];
    v42 = type metadata accessor for TTRIRemindersListOutOfAppDragItemDropRequest();
    v43 = (_QWORD *)swift_allocObject(v42, 64, 7);
    v43[2] = a1;
    v43[3] = v7;
    v43[4] = v8;
    v43[5] = v39;
    v43[6] = v40;
    v44 = type metadata accessor for TTRRemindersListOutOfAppDragItemDropUtils();
    v45 = (_QWORD *)swift_allocObject(v44, 64, 7);
    v45[2] = v7;
    v45[3] = v8;
    v45[4] = v39;
    v45[5] = v40;
    v45[6] = v41;
    v45[7] = &off_100606F30;
    v43[7] = v45;
    a3[3] = v42;
    a3[4] = (uint64_t)&off_1005FFAB8;
    *a3 = (uint64_t)v43;
    swift_unknownObjectRetain_n(v7, 2);
    swift_unknownObjectRetain_n(v39, 2);
    swift_bridgeObjectRetain(a1);
    *(_QWORD *)&result = swift_unknownObjectRetain(v41).n128_u64[0];
    return result;
  }
LABEL_32:
  if (a1 < 0)
    v38 = a1;
  else
    v38 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v38);
  v11 = (_QWORD *)a1;
  if (!v10)
    goto LABEL_36;
LABEL_4:
  v52 = v8;
  v53 = v7;
  v47 = a3;
  v8 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
  v7 = 0;
  v12 = 0;
  v48 = v4;
  v49 = _swiftEmptyArrayStorage;
  a3 = (uint64_t *)0x8000000100566E40;
LABEL_5:
  v50 = v12;
  v4 = v7;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      v7 = (_QWORD *)((char *)v4 + 1);
      if (__OFADD__(v4, 1))
        goto LABEL_31;
    }
    else
    {
      v13 = *(id *)(a1 + 8 * (_QWORD)v4 + 32);
      v7 = (_QWORD *)((char *)v4 + 1);
      if (__OFADD__(v4, 1))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    v56[0] = 0xD000000000000029;
    v56[1] = 0x8000000100566E40;
    v14 = v13;
    AnyHashable.init<A>(_:)(v57, v56, &type metadata for String, &protocol witness table for String);
    UIDragItem.localObject<A>(ofType:forKey:)(&v58, v8, v57, v8);
    sub_100041DDC((uint64_t)v57);
    v15 = v58;
    if (v58)
    {
      v16 = *(void **)&v58[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
      v17 = v58[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
      v18 = objc_allocWithZone(v8);
      v18[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
      *(_QWORD *)&v18[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v16;
      v18[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v17;
      v55.receiver = v18;
      v55.super_class = v8;
      v19 = v16;
      v20 = (char *)objc_msgSendSuper2(&v55, "init");

      v51 = v20;
      v46 = (uint64_t (*)(void))*((_QWORD *)v52 + 64);
      v21 = *(id *)&v20[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
      LOBYTE(v20) = v46();

      if ((v20 & 1) == 0)
      {

        v12 = 1;
        if (v7 != (_QWORD *)v10)
          goto LABEL_5;
        v4 = v48;
LABEL_30:
        swift_bridgeObjectRelease(a1);
        a3 = v47;
        v8 = v52;
        v7 = v53;
        v11 = v49;
        goto LABEL_25;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
        v49 = sub_100455C64(0, v49[2] + 1, 1, v49);
      v4 = v48;
      v23 = v49[2];
      v22 = v49[3];
      v24 = v51;
      if (v23 >= v22 >> 1)
      {
        v49 = sub_100455C64((_QWORD *)(v22 > 1), v23 + 1, 1, v49);
        v24 = v51;
      }
      v49[2] = v23 + 1;
      v25 = &v49[2 * v23];
      v25[4] = v24;
      v25[5] = v14;
      v12 = 1;
      if (v7 == (_QWORD *)v10)
        goto LABEL_30;
      goto LABEL_5;
    }

    v4 = (_QWORD *)((char *)v4 + 1);
  }
  while (v7 != (_QWORD *)v10);
  swift_bridgeObjectRelease(a1);
  a3 = v47;
  v4 = v48;
  v8 = v52;
  v7 = v53;
  v11 = v49;
  if ((v50 & 1) == 0)
    goto LABEL_36;
LABEL_25:
  v54 = *(_OWORD *)(v4 + 9);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 19);
  if (Strong)
  {
    v32 = Strong;
    v33 = v4[20];
    v34 = swift_getObjectType(Strong, v31);
    v57[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v57[4] = &off_1005F31C8;
    v57[0] = v4;
    v35 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v33 + 8);
    swift_unknownObjectRetain(v7);
    swift_unknownObjectRetain(v54);
    swift_retain();
    v36 = v35(v57, v34, v33);
    swift_unknownObjectRelease(v32);
    sub_100027F10(v57);
  }
  else
  {
    swift_unknownObjectRetain(v7);
    swift_unknownObjectRetain(v54);
    v36 = 0;
  }
  v37 = type metadata accessor for TTRIRemindersListInAppDragReminderDropRequest();
  v27 = swift_allocObject(v37, 64, 7);
  *(_QWORD *)(v27 + 16) = v11;
  *(_QWORD *)(v27 + 24) = v7;
  *(_QWORD *)(v27 + 32) = v8;
  result = *(double *)&v54;
  *(_OWORD *)(v27 + 40) = v54;
  *(_QWORD *)(v27 + 56) = v36;
  v29 = &off_1005FFB28;
  a3[3] = v37;
LABEL_29:
  a3[4] = (uint64_t)v29;
  *a3 = v27;
  return result;
}

uint64_t sub_100150324(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t inited;
  __int128 v7;
  __int128 v8;
  _BYTE v9[56];

  v3 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v4 = type metadata accessor for TTRIRemindersListPasteRequest();
  v7 = *(_OWORD *)(v1 + 136);
  v8 = *(_OWORD *)(v1 + 72);
  inited = swift_initStackObject(v4, v9);
  *(_QWORD *)(inited + 16) = v3;
  *(_OWORD *)(inited + 24) = v7;
  *(_OWORD *)(inited + 40) = v8;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRetain(v8);
  LOBYTE(a1) = sub_100252EBC(a1);
  swift_unknownObjectRelease(v8);
  swift_unknownObjectRelease(v7);

  return a1 & 1;
}

double sub_1001503EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  double result;
  _QWORD v34[2];
  uint64_t v35;

  v3 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v6 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v6 + 56), v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 192))(ObjectType, v7);
  v12 = v11;
  v13 = *(_QWORD *)(v10 + 24);
  v14 = *(_QWORD *)(v10 + 32);
  swift_unknownObjectRetain(v13);
  swift_bridgeObjectRetain(a1);
  v16 = sub_1003E7C28(v15);
  v17 = swift_bridgeObjectRelease(a1);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 256))(a1, 1, ObjectType, v7, v17);
  swift_unknownObjectRetain(v13);
  swift_unknownObjectRetain(v10);
  swift_bridgeObjectRetain(v16);
  v19 = sub_1001759F8(a1, v18, v10, v12, v13, v14, v16);
  swift_bridgeObjectRelease(v18);
  swift_unknownObjectRelease(v10);
  swift_unknownObjectRelease(v13);
  swift_bridgeObjectRelease_n(v16, 2);
  v20 = objc_allocWithZone((Class)type metadata accessor for TTRReminderCopyPasteItem(0));
  v21 = (void *)TTRReminderCopyPasteItem.init(_:)(v19);
  swift_unknownObjectRelease(v10);
  swift_unknownObjectRelease(v13);
  v22 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v23 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v24 = swift_allocObject(v23, 40, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100521140;
  *(_QWORD *)(v24 + 32) = v21;
  v35 = v24;
  specialized Array._endMutation()(v24);
  v25 = v35;
  v26 = v21;
  sub_10002A750(&qword_100649FE8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "setObjects:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v28 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(a1);
  v29 = v34[1];
  v30 = swift_retain();
  v31 = static MainActor.shared.getter(v30);
  v32 = (_QWORD *)swift_allocObject(&unk_1005F4C28, 48, 7);
  v32[2] = v31;
  v32[3] = &protocol witness table for MainActor;
  v32[4] = v29;
  v32[5] = a1;
  sub_100148388((uint64_t)v5, (uint64_t)&unk_100649FF8, (uint64_t)v32, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1001506B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  uint64_t v24;

  v4 = *(_QWORD *)(v2 + 104);
  v5 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(ObjectType, v5);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 32);
  swift_unknownObjectRetain(v10);
  swift_bridgeObjectRetain(a1);
  v13 = sub_1003E7C28(v12);
  v14 = swift_bridgeObjectRelease(a1);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 256))(a1, 1, ObjectType, v5, v14);
  swift_unknownObjectRetain(v10);
  swift_unknownObjectRetain(v7);
  swift_bridgeObjectRetain(v13);
  v16 = sub_1001759F8(a1, v15, v7, v9, v10, v11, v13);
  swift_bridgeObjectRelease(v15);
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v10);
  swift_bridgeObjectRelease_n(v13, 2);
  v17 = objc_allocWithZone((Class)type metadata accessor for TTRReminderCopyPasteItem(0));
  v18 = (void *)TTRReminderCopyPasteItem.init(_:)(v16);
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v10);
  v19 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v20 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100521140;
  *(_QWORD *)(v21 + 32) = v18;
  v24 = v21;
  specialized Array._endMutation()(v21);
  v22 = v18;
  sub_10002A750(&qword_100649FE8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setObjects:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

}

BOOL sub_100150894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  v6 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v10 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v9, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100520250;
  sub_10002B1E8(a1, v14 + v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  type metadata accessor for MainActor(0);
  v16 = swift_retain();
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1005F4C00, 40, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v3;
  sub_100148388((uint64_t)v8, (uint64_t)&unk_100649FE0, (uint64_t)v18, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  swift_release();
  v19 = sub_1001A7E14(v14, a2);
  swift_bridgeObjectRelease(v14);
  return v19 > 0;
}

uint64_t sub_100150A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD v29[2];

  v5 = v4;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v13);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = swift_retain();
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_1005F4AE8, 40, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v5;
  sub_100148388((uint64_t)v15, (uint64_t)&unk_100649FD8, (uint64_t)v19, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  swift_release();
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    return a3(0);
  }
  if (EnumCaseMultiPayload)
    return a3(0);
  v23 = *(_QWORD *)(v5 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v5 + 136), v22);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 248))(a1, ObjectType, v23);
  v26 = (void *)v25;
  if (v25
    && (v29[1] = v25,
        v27 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr),
        (TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter(v27, &protocol witness table for REMReminder) & 1) != 0))
  {
    sub_10015CBD8(a1, a2, (uint64_t)a3, a4);
  }
  else
  {
    sub_1001A7FE0(a1, a2);
    a3(1);
  }

  return sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
}

BOOL sub_100150C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(v2 + 104);
  v5 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  v7 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v7, v12 + v10, v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  v14 = v13 + v12;
  sub_10002B1E8(a1, v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 560))(v13, ObjectType, v5);
  v17 = v16;
  v19 = v18;
  swift_setDeallocating(v13);
  swift_arrayDestroy(v14, *(_QWORD *)(v13 + 16), v8);
  swift_deallocClassInstance(v13, 32, 7);
  if (!v15)
    return 0;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v17);
  return v19 > 0;
}

BOOL sub_100150D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(v2 + 104);
  v5 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  v7 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v7, v12 + v10, v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100520250;
  v14 = v13 + v12;
  sub_10002B1E8(a1, v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 568))(v13, ObjectType, v5);
  v17 = v16;
  v19 = v18;
  swift_setDeallocating(v13);
  swift_arrayDestroy(v14, *(_QWORD *)(v13 + 16), v8);
  swift_deallocClassInstance(v13, 32, 7);
  if (!v15)
    return 0;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v17);
  return v19 > 0;
}

BOOL sub_100150EB8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(__n128);
  __n128 v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v30);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x736D657469;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 48) = a1;
  swift_bridgeObjectRetain(a1);
  v11 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder list indent items (make subtasks) {items: %@}", 54, 2, v11);
  v12 = swift_bridgeObjectRelease(v11);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
  v13 = v2[18];
  ObjectType = swift_getObjectType(v2[17], v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 560))(a1, ObjectType, v13);
  v19 = v16;
  if (v16)
  {
    v20 = v17;
    v21 = v18;
    v22 = *(void (**)(__n128))(v13 + 376);
    v23 = swift_bridgeObjectRetain(v16);
    v22(v23);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 2);
    if (Strong)
    {
      v26 = Strong;
      v27 = v2[3];
      v28 = swift_getObjectType(Strong, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 120))(v19, v28, v27);
      swift_bridgeObjectRelease(v19);
      swift_unknownObjectRelease(v26);
    }
    else
    {
      swift_bridgeObjectRelease(v19);
    }
    sub_1001BC5CC(a1, v20, v21);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v20);
  }
  return v19 != 0;
}

BOOL sub_1001510D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(__n128);
  __n128 v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v30);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x736D657469;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = sub_10002A750(&qword_100649DF0);
  *(_QWORD *)(inited + 48) = a1;
  swift_bridgeObjectRetain(a1);
  v11 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder list outdent items (make tasks) {items: %@}", 52, 2, v11);
  v12 = swift_bridgeObjectRelease(v11);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
  v13 = v2[18];
  ObjectType = swift_getObjectType(v2[17], v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 568))(a1, ObjectType, v13);
  v19 = v16;
  if (v16)
  {
    v20 = v17;
    v21 = v18;
    v22 = *(void (**)(__n128))(v13 + 376);
    v23 = swift_bridgeObjectRetain(v16);
    v22(v23);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 2);
    if (Strong)
    {
      v26 = Strong;
      v27 = v2[3];
      v28 = swift_getObjectType(Strong, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 120))(v19, v28, v27);
      swift_bridgeObjectRelease(v19);
      swift_unknownObjectRelease(v26);
    }
    else
    {
      swift_bridgeObjectRelease(v19);
    }
    sub_1001BCA58(a1, v20, v21);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v20);
  }
  return v19 != 0;
}

uint64_t sub_1001512F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  void *v30;
  _BYTE v31[80];
  _OWORD v32[2];
  uint64_t v33;
  __int128 v34;
  char v35;

  v30 = a3;
  v5 = sub_10002A750((uint64_t *)&unk_100649BE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v12 = sub_100012DC4(v8, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v31);
  v29 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  *(_QWORD *)(inited + 72) = v15;
  v16 = sub_100028D70((_QWORD *)(inited + 48));
  sub_10002B1E8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder list request permanently hide items in recently deleted list {items: %@}", 81, 2, v17);
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
  v19 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v20 = *(_QWORD *)(v15 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v19, v23 + v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = v29;
  sub_10002B1E8(a1, v24 + v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v25 = enum case for REMRDLUserOperationDetail.rdl_swipeToPermanentlyDelete(_:);
  v26 = type metadata accessor for REMRDLUserOperationDetail(0);
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v7, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
  v33 = 0;
  memset(v32, 0, sizeof(v32));
  v34 = xmmword_1005218A0;
  v35 = 0;
  sub_10015D094(v24, 0, (uint64_t)v7, (uint64_t)v32, a2, v30);
  swift_bridgeObjectRelease(v24);
  return sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100649BE0);
}

uint64_t sub_100151588()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[3];
  void *v18;
  double (*v19)(char);
  uint64_t v20;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 19);
  if (Strong)
  {
    v4 = Strong;
    v5 = v0[20];
    ObjectType = swift_getObjectType(Strong, v3);
    v18 = (void *)type metadata accessor for TTRIRemindersCommonPresenter(0);
    v19 = (double (*)(char))&off_1005F31C8;
    v17[0] = v0;
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 8);
    swift_retain();
    v8 = v7(v17, ObjectType, v5);
    swift_unknownObjectRelease(v4);
    sub_100027F10(v17);
  }
  else
  {
    v8 = 0;
  }
  swift_beginAccess(v1 + 4, v17, 33, 0);
  v9 = v1[7];
  v10 = v1[8];
  sub_100028D48((uint64_t)(v1 + 4), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v8, v9, v10);
  swift_endAccess(v17);
  v11 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v12 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v12 + 16, v1);
  v19 = sub_1001812BC;
  v20 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000D3A2C;
  v18 = &unk_1005F4AB0;
  v13 = _Block_copy(v17);
  v14 = objc_msgSend(v11, "observeShowRemindersAsOverdueWithBlock:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);

  v15 = v1[55];
  v1[55] = v14;
  return swift_unknownObjectRelease(v15);
}

char *sub_100151744(uint64_t a1, void *a2, uint64_t a3, char a4, double a5, double a6)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int EnumCaseMultiPayload;
  uint64_t v39;
  id v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  objc_class *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD aBlock[6];
  objc_super v80;
  _OWORD v81[3];

  v76 = a2;
  v78 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v78);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v17 = __chkstk_darwin(v74);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v22 = type metadata accessor for Logger(0);
  sub_100012DC4(v22, (uint64_t)qword_100648980);
  v23 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List Request Context Menu", 35, 2, v23);
  swift_bridgeObjectRelease(v23);
  v77 = a1;
  if ((a4 & 1) != 0)
  {
    v24 = *(char **)(a3 + 16);
    if (!v24)
      return v24;
    v25 = a3;
    v73 = *(unsigned __int8 *)(v14 + 80);
    v26 = a3 + ((v73 + 32) & ~v73);
    v27 = *(_QWORD *)(v14 + 72);
    swift_bridgeObjectRetain(v25);
    v29 = v28;
    while (1)
    {
      v30 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v28);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v30);
      v31 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v21, v19);
      sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v28 = sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if ((v31 & 1) != 0)
        break;
      v26 += v27;
      if (!--v24)
      {
        swift_bridgeObjectRelease(v29);
        return v24;
      }
    }
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRetain(v29);
    LODWORD(v33) = v73;
    v35 = *(_QWORD *)(v29 + 16);
    if (v35)
      goto LABEL_12;
  }
  else
  {
    v32 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v27 = *(_QWORD *)(v14 + 72);
    v33 = *(unsigned __int8 *)(v14 + 80);
    v34 = (v33 + 32) & ~v33;
    v29 = swift_allocObject(v32, v34 + v27, v33 | 7);
    *(_OWORD *)(v29 + 16) = xmmword_100520250;
    sub_10002B1E8(a1, v29 + v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v35 = *(_QWORD *)(v29 + 16);
    if (v35)
    {
LABEL_12:
      v36 = v29 + ((v33 + 32) & ~(unint64_t)v33);
      v73 = v29;
      swift_bridgeObjectRetain(v29);
      do
      {
        v37 = sub_10002B1E8(v36, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v37);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v78);
        if (EnumCaseMultiPayload >= 2)
        {
          if (EnumCaseMultiPayload == 2)
            sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_bridgeObjectRelease_n(v73, 2);
          return 0;
        }
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v36 += v27;
        --v35;
      }
      while (v35);
      v29 = v73;
      swift_bridgeObjectRelease(v73);
      if (*(_QWORD *)(v29 + 16) == 1)
      {
        v40 = v76;
        ObjectType = swift_getObjectType(v76, v39);
        v42 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersEditableReminderCell);
        v44 = v42 ? v42 : 0;
        if (!v42)
          v40 = 0;
        if (v40)
        {
          v45 = swift_getObjectType(v40, v43);
          v46 = *(_QWORD *)(v44 + 8);
          v47 = v76;
          v48 = (void *)TTRIShowRemindersEditableCell.attachmentAndView(at:)(v45, v46, a5, a6);
          if (v48)
          {
            v50 = v48;
            v51 = v49;
            v24 = (char *)sub_100157D84(v48, v77, v49);

            if (v24)
            {
              swift_bridgeObjectRelease(v73);
              return v24;
            }
            v47 = v50;
          }
          v29 = v73;

        }
      }
    }
  }
  v52 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v52 + 16, v75);
  v53 = (_QWORD *)swift_allocObject(&unk_1005F4A70, 40, 7);
  v53[2] = v52;
  v53[3] = v29;
  v54 = v76;
  v53[4] = v76;
  swift_bridgeObjectRetain(v29);
  v55 = v54;
  v56 = v77;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v55);
  sub_10002B1E8((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v57 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
  AnyHashable.init<A>(_:)(aBlock, v19, v74, v57);
  sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v58 = (objc_class *)type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
  memset(v81, 0, 32);
  v59 = objc_allocWithZone(v58);
  sub_1001033E8((uint64_t)aBlock, (uint64_t)v59 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_itemID);
  sub_10000735C((uint64_t)v81, (uint64_t)v59 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_userInfo, &qword_100640E50);
  v80.receiver = v59;
  v80.super_class = v58;
  v60 = objc_msgSendSuper2(&v80, "init");
  sub_1000073A0((uint64_t)v81, &qword_100640E50);
  sub_100041DDC((uint64_t)aBlock);
  v61 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = sub_100181290;
  aBlock[5] = v53;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100172B74;
  aBlock[3] = &unk_1005F4A88;
  v62 = _Block_copy(aBlock);
  swift_retain_n(v53, 2);
  v63 = objc_msgSend(v61, "configurationWithIdentifier:previewProvider:actionProvider:", v60, 0, v62, swift_release().n128_f64[0]);

  swift_release();
  _Block_release(v62);
  aBlock[0] = v29;
  v65 = __chkstk_darwin(v64);
  *(&v72 - 2) = v56;
  __chkstk_darwin(v65);
  *(&v72 - 2) = (uint64_t)sub_10018129C;
  *(&v72 - 1) = v66;
  swift_bridgeObjectRetain(v29);
  v24 = (char *)v63;
  v67 = sub_10002A750(&qword_100649DF0);
  v68 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  v69 = Sequence.compactMapToSet<A>(_:)(sub_1001812A4, &v72 - 4, v67, &type metadata for AnyHashable, v68, &protocol witness table for AnyHashable);
  swift_bridgeObjectRelease(aBlock[0]);
  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v24, "setSecondaryItemIdentifiers:", isa, swift_bridgeObjectRelease(v69).n128_f64[0]);

  swift_release();
  return v24;
}

void sub_100151E78(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[3];
  void *ObjectType;
  void (*v12)();
  uint64_t v13;

  v4 = objc_msgSend(a1, "identifier");
  ObjectType = (void *)swift_getObjectType(v4, v5);
  v10[0] = v4;
  v6 = sub_10015DE30((uint64_t)v10);
  sub_100027F10(v10);
  if (v6)
  {
    v7 = swift_allocObject(&unk_1005F4A20, 32, 7);
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v2;
    v12 = sub_100181254;
    v13 = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100006378;
    ObjectType = &unk_1005F4A38;
    v8 = _Block_copy(v10);
    v9 = v6;
    swift_retain();
    objc_msgSend(a2, "addCompletion:", v8, swift_release().n128_f64[0]);
    _Block_release(v8);

  }
}

uint64_t sub_100151F88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[5];

  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_100648980);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List Performing Printing", 34, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = *(_QWORD *)(v0 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 136), v4);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 80))(&v7, ObjectType, v3);
  if (!v8)
    return sub_1000073A0((uint64_t)&v7, &qword_100649FC0);
  sub_10002E37C(&v7, (uint64_t)v9);
  sub_1000A0140((uint64_t)v9);
  return sub_100027F10(v9);
}

void sub_10015207C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String_optional v37;
  _BYTE v38[24];

  v3 = v2;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100648980);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminder list request toggling show completed reminders", 55, 2, v7);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(v2 + 232);
  v9 = *(_QWORD *)(v8 + 96);
  swift_beginAccess(v9 + 40, v38, 0, 0);
  v11 = *(_QWORD *)(v9 + 40);
  if (v11)
  {
    v12 = *(_QWORD *)(v9 + 48);
    ObjectType = swift_getObjectType(v11, v10);
    v14 = *(void (**)(uint64_t, uint64_t, __n128))(v12 + 24);
    v15 = swift_unknownObjectRetain(v11);
    v14(ObjectType, v12, v15);
    swift_unknownObjectRelease(v11);
  }
  sub_10041C214(v8);
  v17 = *(_QWORD *)(v3 + 136);
  v16 = *(_QWORD *)(v3 + 144);
  v19 = swift_getObjectType(v17, v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 32);
  v21 = v20(v19, v16);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    v25 = swift_getObjectType(v21, v22);
    LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
    swift_unknownObjectRelease(v23);
    v26 = v24 ^ 1;
  }
  else
  {
    v26 = 1;
  }
  v27 = v20(v19, v16);
  if (v27)
  {
    v29 = v27;
    v30 = v28;
    v31 = swift_getObjectType(v27, v28);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v30 + 16))(v26 & 1, v31, v30);
    swift_unknownObjectRelease(v29);
  }
  v32 = v20(v19, v16);
  if (v32)
  {
    v34 = v32;
    v35 = v33;
    v36 = swift_getObjectType(v32, v33);
    LOBYTE(v35) = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
    swift_unknownObjectRelease(v34);
    if ((v35 & 1) != 0)
    {
      v37.value._countAndFlagsBits = a1;
      v37.value._object = a2;
      TTRITipKitSignal.donate(signalContext:)(v37);
    }
  }
}

void sub_100152270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;

  v3 = *(_QWORD *)(v1 + 88) + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong
    && (v5 = Strong,
        v9 = objc_msgSend(Strong, "navigationController"),
        v5,
        (v6 = (uint64_t)v9) != 0)
    || (v6 = swift_unknownObjectWeakLoadStrong(v3)) != 0)
  {
    v10 = (id)v6;
    sub_100005ED8(0, (unint64_t *)&qword_100640608, HLPHelpViewController_ptr);
    v7 = static HLPHelpViewController.viewController(forShowing:)(a1);
    if (v7)
    {
      v8 = (void *)v7;
      objc_msgSend(v10, "presentViewController:animated:completion:", v7, 1, 0);

    }
    else
    {

    }
  }
}

uint64_t sub_100152358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[80];

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v25);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  strcpy((char *)(inited + 32), "hashtagLabels");
  *(_WORD *)(inited + 46) = -4864;
  v14 = REMHashtagLabelSpecifier.description.getter();
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = v15;
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List change hashtag label selection {hashtagLabels: %@}", 65, 2, v16);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  v17 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 136), v18);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(ObjectType, v17);
  if (result)
  {
    v22 = result;
    v23 = v21;
    v24 = swift_getObjectType(result, v21);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v23 + 8) + 16))(v6, v24);
    return swift_unknownObjectRelease(v22);
  }
  return result;
}

void sub_100152558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(_QWORD *, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  _QWORD v27[5];

  v4 = v3;
  v8 = sub_1001A8478();
  if (v8)
  {
    v10 = v8;
    if (v8 == 1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v3 + 152);
      if (Strong)
      {
        v13 = Strong;
        v14 = *(_QWORD *)(v4 + 160);
        ObjectType = swift_getObjectType(Strong, v12);
        v27[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
        v27[4] = &off_1005F31C8;
        v27[0] = v4;
        v16 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 8);
        swift_retain();
        v17 = (void *)v16(v27, ObjectType, v14);
        swift_unknownObjectRelease(v13);
        sub_100027F10(v27);
      }
      else
      {
        v17 = 0;
      }
      sub_10042B888(a1, a2, a3);

    }
    else
    {
      v18 = v9;
      v19 = *(_QWORD *)(v3 + 232);
      v20 = *(_QWORD *)(v19 + 96);
      swift_beginAccess(v20 + 40, v27, 0, 0);
      v22 = *(_QWORD *)(v20 + 40);
      if (v22)
      {
        v23 = *(_QWORD *)(v20 + 48);
        v24 = swift_getObjectType(v22, v21);
        v25 = *(void (**)(uint64_t, uint64_t, __n128))(v23 + 24);
        v26 = swift_unknownObjectRetain(v22);
        v25(v24, v23, v26);
        swift_unknownObjectRelease(v22);
      }
      sub_10041C214(v19);
      sub_1001ACF1C(v10, a2, a3, v18, 0, 0, 0, 0, 0);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v18);
    }
  }
}

uint64_t sub_1001526EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96))(ObjectType, v4);
  if (result)
  {
    v7 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 56);
    if (Strong)
    {
      v10 = Strong;
      v11 = *(_QWORD *)(v7 + 64);
      v12 = swift_getObjectType(Strong, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, v12, v11);
      swift_unknownObjectRelease(v7);
      v7 = v10;
    }
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_100152780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  _BYTE v19[128];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v10 = sub_100012DC4(v6, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v11, v19);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(inited + 48) = TTRTreeStorageItem.treeItemDescription.getter(v13, v14);
  *(_QWORD *)(inited + 56) = v15;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0xD000000000000014;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 88) = 0x8000000100567BA0;
  *(_QWORD *)(inited + 96) = a2;
  *(_QWORD *)(inited + 104) = a3;
  swift_bridgeObjectRetain(a3);
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List request move item to section with canonicalName {item: %@}", 73, 2, v16);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
  return sub_1001A8B78(a1, a2, a3);
}

double sub_100152950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  _BYTE v15[24];

  v4 = sub_1001A8F08(a1, a2);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)(v2 + 232);
    v8 = *(_QWORD *)(v7 + 96);
    swift_beginAccess(v8 + 40, v15, 0, 0);
    v10 = *(_QWORD *)(v8 + 40);
    if (v10)
    {
      v11 = *(_QWORD *)(v8 + 48);
      ObjectType = swift_getObjectType(v10, v9);
      v13 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 24);
      v14 = swift_unknownObjectRetain(v10);
      v13(ObjectType, v11, v14);
      swift_unknownObjectRelease(v10);
    }
    sub_10041C214(v7);
    sub_1001ACF1C(a1, 0, 0xE000000000000000, v6, 0, 1, 1, 0, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_100152A34(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  v2 = v1;
  v4 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 136), v9);
  v25 = *(void (**)(uint64_t, uint64_t))(v8 + 600);
  v25(ObjectType, v8);
  v11 = sub_1000175C8((unint64_t *)&unk_100649FB0, (uint64_t (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SortingStyle);
  v12 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v7, v4, v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v12 & 1) != 0
    || ((*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 616))(a1, 1, ObjectType, v8),
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 624))(ObjectType, v8),
        (_BYTE)v15 == 0xFF))
  {
    v20 = a1;
  }
  else
  {
    v16 = v15;
    v17 = *(_QWORD *)(v2 + 72);
    v18 = *(_QWORD *)(v2 + 80);
    v24 = v17;
    v22 = (void *)v14;
    v23 = swift_getObjectType(v17, v15);
    v25(ObjectType, v8);
    v19 = v22;
    (*(void (**)(char *, void *, uint64_t, uint64_t, uint64_t))(v18 + 272))(v7, v22, v16, v23, v18);
    sub_1000760F4(v19, v16);
    v13(a1, v4);
    v20 = v7;
  }
  return ((uint64_t (*)(char *, uint64_t))v13)(v20, v4);
}

double sub_100152BE4()
{
  double result;

  if (qword_10063D898 != -1)
    swift_once(&qword_10063D898, sub_1004FEB88);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100673A50).n128_u64[0];
  return result;
}

_UNKNOWN **sub_100152C24()
{
  return &off_1005EA318;
}

_UNKNOWN **sub_100152C34()
{
  return &off_1005EA368;
}

double sub_100152C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 504) == 1)
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_100648980);
    v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Reminders List Dismiss", 22, 2, v7);
    swift_bridgeObjectRelease(v7);
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    type metadata accessor for MainActor(0);
    v9 = swift_retain();
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_1005F49F8, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v1;
    sub_100148388((uint64_t)v5, (uint64_t)&unk_100649FA8, (uint64_t)v11, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100152DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for AnyTip(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_100152DF0(void *a1, void *a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t (*v16)@<X0>(uint64_t@<X8>);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (!(a3 >> 6))
  {
    v9 = a1;
    v11 = objc_msgSend(v9, "objectID");
    v19 = v3;
    v20 = __chkstk_darwin(v11);
    v21 = 0;
    __chkstk_darwin(v20);
    v15 = v3;
    v16 = sub_10019C8B0;
    v17 = v12;
    v18 = 1;
    firstly<A>(closure:)(sub_10019C6F4, v14, (char *)&type metadata for () + 8);
    swift_release();

    goto LABEL_5;
  }
  if (a3 >> 6 == 1)
  {
    v7 = a3 & 0x3F;
    v8 = a2;
    v9 = (id)TTRSection.objectID.getter(a2, v7);
    v19 = v3;
    v20 = __chkstk_darwin(v9);
    v21 = 0;
    __chkstk_darwin(v20);
    v15 = v3;
    v16 = sub_10019C89C;
    v17 = v10;
    v18 = 1;
    firstly<A>(closure:)(sub_10019C6F4, v14, (char *)&type metadata for () + 8);
    sub_1000D54E4(a1, a2, a3);
    swift_release();
LABEL_5:

    return 1;
  }
  return 0;
}

void sub_100152F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v31 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v31);
  v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v28 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - v6;
  v8 = *(_QWORD *)(v0 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 136), v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 192))(ObjectType, v8);
  v12 = *(_QWORD **)(v11 + 24);
  v13 = *(_QWORD *)(v11 + 32);
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v11);
  v15 = swift_getObjectType(v12, v14);
  v32 = v12;
  TTRTreeContentsQueryable.allItems.getter(v15, *(_QWORD *)(v13 + 8));
  v16 = swift_unknownObjectRelease(v12);
  v17 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()(v16);
  swift_release();
  v32 = _swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(v17 + 16);
  if (!v30)
  {
LABEL_14:
    swift_release();
    return;
  }
  v18 = 0;
  v19 = _swiftEmptyArrayStorage;
  v27 = v3;
  while (v18 < *(_QWORD *)(v17 + 16))
  {
    v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v21 = *(_QWORD *)(v3 + 72);
    v22 = sub_10002B1E8(v17 + v20 + v21 * v18, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v23 = (uint64_t)v29;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v22);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v31);
    if ((EnumCaseMultiPayload - 1) < 2)
    {
      sub_10001F544(v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    else if (!EnumCaseMultiPayload)
    {
      sub_10001F544(v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      sub_10001F580((uint64_t)v7, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        sub_1003D7F78(0, v19[2] + 1, 1);
      v19 = v32;
      v26 = v32[2];
      v25 = v32[3];
      if (v26 >= v25 >> 1)
      {
        sub_1003D7F78(v25 > 1, v26 + 1, 1);
        v19 = v32;
      }
      v19[2] = v26 + 1;
      sub_10001F580(v28, (uint64_t)v19 + v20 + v26 * v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v3 = v27;
      goto LABEL_5;
    }
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
    if (v30 == ++v18)
      goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_10015324C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100648980);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v30 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v28 = sub_100027E40(a1, a2, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRIRemindersCommonPresenter: refresh all items {reason: %s}", v10, 0xCu);
    swift_arrayDestroy(v11, 1, &type metadata for Any[8]);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v13 = *(_QWORD *)(v3 + 136);
  v14 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(v13, v12);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v14 + 192);
  swift_retain(v3);
  v17 = swift_unknownObjectRetain(v13);
  v18 = v16(ObjectType, v14, v17);
  swift_release(v3);
  swift_unknownObjectRelease(v13);
  v19 = *(_QWORD *)(v18 + 24);
  v20 = *(_QWORD *)(v18 + 32);
  v22 = swift_getObjectType(v19, v21);
  v30 = v19;
  v23 = TTRTreeContentsQueryable.allItems.getter(v22, *(_QWORD *)(v20 + 8));
  v24 = dispatch thunk of _AnySequenceBox._filter(_:)(sub_100049320, 0);
  swift_unknownObjectRelease(v18);
  v25 = swift_release(v23);
  v26 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v25);
  sub_10041D610(*v26, v24);
  return swift_bridgeObjectRelease(v24);
}

void sub_1001534A0(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, __n128);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];
  _BYTE v55[80];

  v2 = v1;
  v52 = *v1;
  v3 = a1 & 1;
  v4 = type metadata accessor for REMAnalyticsEvent(0);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v55);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x74756F79616CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for TTRRemindersListLayout;
  *(_BYTE *)(inited + 48) = v3;
  v14 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Set Layout {layout: %@}", 38, 2, v14);
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v15);
  v16 = v2[18];
  ObjectType = swift_getObjectType(v2[17], v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 104))(ObjectType, v16);
  if (v19)
  {
    v21 = v19;
    v22 = v20;
    v23 = *(NSObject **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v19);
    if ((_DWORD)v3)
    {
      type metadata accessor for REMAnalyticsManager(0);
      v27 = v23;
      v51 = v3;
      v50[1] = static REMAnalyticsManager.shared.getter();
      v28 = sub_10002A750(&qword_100649F98);
      v29 = &v6[*(int *)(v28 + 48)];
      v30 = *(int *)(v28 + 80);
      v50[0] = v4;
      v31 = &v6[v30];
      v32 = enum case for REMUserOperation.viewAsColumns(_:);
      v33 = type metadata accessor for REMUserOperation(0);
      v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v6, v32, v33);
      *(_QWORD *)v29 = TTRUserDefaults.activitySessionId.getter(v34);
      *((_QWORD *)v29 + 1) = v35;
      v3 = v51;
      TTRUserDefaults.activitySessionBeginTime.getter();
      *(_QWORD *)v31 = _typeName(_:qualified:)(v52, 0);
      *((_QWORD *)v31 + 1) = v36;
      v37 = v53;
      v38 = v50[0];
      (*(void (**)(char *, _QWORD, _QWORD))(v53 + 104))(v6, enum case for REMAnalyticsEvent.userOperation(_:), v50[0]);
      REMAnalyticsManager.post(event:)(v6);
      v39 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v6, v38, v39);
    }
    else
    {
      v24 = v23;
    }
    v40 = v2[29];
    v41 = *(_QWORD *)(v40 + 96);
    swift_beginAccess(v41 + 40, v54, 0, 0);
    v43 = *(_QWORD *)(v41 + 40);
    if (v43)
    {
      v44 = *(_QWORD *)(v41 + 48);
      v45 = swift_getObjectType(v43, v42);
      v46 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 24);
      v47 = swift_unknownObjectRetain(v43);
      v46(v45, v44, v47);
      swift_unknownObjectRelease(v43);
    }
    sub_10041C214(v40);
    v49 = swift_getObjectType(v21, v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24))(v3, v49, v22);
    swift_unknownObjectRelease(v21);
  }
  else
  {
    v23 = Logger.logObject.getter(0);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "TTRIRemindersCommonPresenter: missing layoutContext", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
  }

}

id sub_100153844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id result;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
    sub_10002B1E8(a1 + ((v15 + 32) & ~v15), (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_storeEnumTagMultiPayload(v14, v12, 0);
    sub_10015F864((uint64_t)v14, a2, a3, a4);
    return (id)sub_10001F544((uint64_t)v14, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
  }
  else
  {
    result = sub_10015FC00(a1);
    if (result)
    {
      v17 = result;
      v18 = type metadata accessor for BatchDueDatePickerDetailModuleDelegate();
      v19 = (_QWORD *)swift_allocObject(v18, 56, 7);
      swift_weakInit(v19 + 2, 0);
      swift_unknownObjectWeakInit(v19 + 3, 0);
      swift_weakAssign(v19 + 2, v4);
      swift_unknownObjectWeakAssign(v19 + 3, v17);
      v19[4] = a1;
      v19[5] = a3;
      v19[6] = a4;
      v20 = v4[45];
      v4[45] = v19;
      v4[46] = &off_1005F2F50;
      swift_bridgeObjectRetain(a1);
      sub_100053DE4(a3, a4);
      swift_unknownObjectRelease(v20);
      v21 = *(_QWORD *)((char *)v4
                      + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
      v22 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
      v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
      sub_10000F614((uint64_t)v11, v23 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t *)&unk_100640EB0);
      sub_10000F614(a2, v23 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor, &qword_100642D10);
      *(_QWORD *)(v23
                + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v21;
      v25 = v4[11];
      v27 = v4[45];
      v26 = v4[46];
      sub_10017C154(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
      swift_unknownObjectRetain(v27);
      swift_retain();
      sub_10017395C(v17, 0, v27, v26, v23, v25);
      swift_release();

      return (id)swift_unknownObjectRelease(v27);
    }
  }
  return result;
}

void sub_100153AE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  _OWORD v52[4];
  char v53;
  _OWORD v54[2];
  __int128 v55;
  __int128 v56;
  char v57;
  _QWORD v58[9];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001A3378(a1, 0);
  if (v9)
  {
    v12 = v11;
    v51 = v10;
    swift_bridgeObjectRelease(v9);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 19);
    if (Strong)
    {
      v15 = Strong;
      v16 = v3[20];
      ObjectType = swift_getObjectType(Strong, v14);
      v58[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
      v58[4] = &off_1005F31C8;
      v58[0] = v3;
      v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 8);
      swift_retain();
      v19 = (void *)v18(v58, ObjectType, v16);
      swift_unknownObjectRelease(v15);
      sub_100027F10(v58);
      v20 = *(_QWORD *)(a1 + 16);
      if (v20 == 1)
      {
        v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
        sub_10015FCE0(a1 + ((v21 + 32) & ~v21), a2, 0, 0, (uint64_t)v58);
        sub_10000735C((uint64_t)v58, (uint64_t)v52, &qword_100649D20);
        if (*(_QWORD *)&v52[0])
        {
          v54[0] = v52[0];
          v54[1] = v52[1];
          v55 = v52[2];
          v56 = v52[3];
          v57 = v53;
          v22 = *(void **)&v52[0];
          v23 = type metadata accessor for SingleItemHashtagEditorModuleDelegate();
          v24 = swift_allocObject(v23, 32, 7);
          v25 = swift_weakInit(v24 + 16, 0);
          swift_weakAssign(v25, v3);
          *(_QWORD *)(v24 + 24) = v22;
          v26 = v3[47];
          v3[47] = v24;
          v3[48] = &off_1005F2EF0;
          v27 = v22;
          swift_unknownObjectRelease(v26);
          v28 = v3[11];
          v30 = v3[47];
          v29 = v3[48];
          v31 = *sub_10001413C((_QWORD *)v54 + 1, v55);
          swift_unknownObjectRetain(v30);
          v32 = v27;
          sub_100173AE0((uint64_t)v32, 1, v30, v29, (uint64_t)v19, v31, v28);

          swift_unknownObjectRelease(v30);
          sub_10017C128((uint64_t)v54);
          v33 = v58;
        }
        else
        {

          sub_1000073A0((uint64_t)v58, &qword_100649D20);
          v33 = v52;
        }
        sub_1000073A0((uint64_t)v33, &qword_100649D20);
      }
      else
      {
        v39 = v12 & 1;
        v40 = *(_QWORD *)((char *)v3
                        + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
        v41 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
        v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
        v43 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v8, 1, 1, v43);
        sub_10000F614((uint64_t)v8, v42 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t *)&unk_100640EB0);
        sub_10000F614(a2, v42 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor, &qword_100642D10);
        *(_QWORD *)(v42
                  + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v40;
        v44 = type metadata accessor for BatchHashtagEditorModuleDelegate();
        v45 = swift_allocObject(v44, 33, 7);
        v46 = swift_weakInit(v45 + 16, 0);
        swift_weakAssign(v46, v3);
        *(_QWORD *)(v45 + 24) = a1;
        *(_BYTE *)(v45 + 32) = v39;
        v47 = v3[47];
        v3[47] = v45;
        v3[48] = &off_1005F2F08;
        sub_10017C154(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
        swift_retain();
        swift_bridgeObjectRetain(a1);
        swift_unknownObjectRelease(v47);
        v48 = v3[11];
        v50 = v3[47];
        v49 = v3[48];
        swift_unknownObjectRetain(v50);
        sub_100173AE0((uint64_t)v51, v20, v50, v49, (uint64_t)v19, v42, v48);
        swift_release();
        swift_unknownObjectRelease(v50);

      }
    }
    else
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100012DC4(v34, (uint64_t)qword_100648980);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.fault.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "TTRIRemindersCommonPresenter#showHashtagsEditor: missing undoManager", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

    }
  }
}

void sub_100153FA8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  __chkstk_darwin(v7);
  v2 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __asm { BR              X10 }
}

Class sub_1001540E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  NSString v12;
  id v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  UIMenuElementSize v24;
  id v25;
  Swift::String v26;
  UIMenu v27;
  Swift::OpaquePointer v29;
  UIImage_optional v30;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
  if (!v6)
    return 0;
  v8 = v6;
  v9 = v7;
  v10 = swift_getObjectType(v6, v7);
  v11 = ((uint64_t (*)(uint64_t, uint64_t))TTRRemindersListDataModelSourceLayoutContextType.nextSelectableLayout.getter)(v10, v9) & 1;
  if (v11)
  {
    v13 = *(id *)((uint64_t (*)(void))TTRCommonAsset.Image.columnsIcon.unsafeMutableAddressor)();
    v14 = 0xEF736E6D756C6F43;
  }
  else
  {
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v12);

    v14 = 0xEC0000007473694CLL;
  }
  v15._countAndFlagsBits = 0xD00000000000001FLL;
  v15._object = (void *)0x8000000100567A60;
  v16 = 0x2073612077656956;
  v17 = TTRLocalizedString(_:comment:)(*(Swift::String *)(&v14 - 1), v15);
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v18 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v18 + 16, v2);
  v19 = swift_allocObject(&unk_1005F49D0, 25, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_BYTE *)(v19 + 24) = v11;
  v20 = v13;
  v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v17._countAndFlagsBits, v17._object, 0, 0, v13, 0, 0, 0, 0, 0, 0, sub_100181190, v19);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v22 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100521140;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)(v3 - 128) = v23;
  specialized Array._endMutation()(v23);
  v24 = *(_QWORD *)(v3 - 128);
  v25 = v21;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v30.value.super.isa = 0;
  v30.is_nil = 0;
  v27.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v30, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v24, v29).super.super.isa;
  swift_unknownObjectRelease(v8);

  return v27.super.super.isa;
}

void sub_1001550C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  int v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  void *Strong;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void **aBlock;
  uint64_t v36;
  void (*v37)(uint64_t, void *);
  void *v38;
  double (*v39)(uint64_t);
  uint64_t v40;

  v3 = v2;
  v6 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), v7);
    (*(void (**)(uint64_t, uint64_t))(v11 + 136))(ObjectType, v11);
    v13 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v9, 1, v13);
    v34 = a2;
    if (v14 == 1)
    {
      sub_1000073A0((uint64_t)v9, &qword_100649CA0);
      v15 = 0;
    }
    else
    {
      v15 = v9[*(int *)(v13 + 112)];
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    static TTRLocalizableStrings.Common.alertCancelButton.getter(v17);
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v39 = sub_1001614A4;
    v40 = 0;
    aBlock = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1000D4884;
    v38 = &unk_1005F48D0;
    v21 = _Block_copy(&aBlock);
    swift_release();
    v22 = (void *)objc_opt_self(UIAlertAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 1, v21);
    _Block_release(v21);

    static TTRLocalizableStrings.RemindersList.deleteRemindersConfirmationText(withCount:isForGroceries:)(v10, v15);
    v25 = v24;
    v26 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v26 + 16, v3);
    v27 = swift_allocObject(&unk_1005F4908, 32, 7);
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = a1;
    swift_retain();
    swift_bridgeObjectRetain(a1);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v39 = sub_100180FF0;
    v40 = v27;
    aBlock = _NSConcreteStackBlock;
    v36 = 1107296256;
    v37 = sub_1000D4884;
    v38 = &unk_1005F4920;
    v29 = _Block_copy(&aBlock);
    v30 = objc_msgSend(v22, "actionWithTitle:style:handler:", v28, 2, v29, swift_release().n128_f64[0]);
    _Block_release(v29);
    swift_release();

    objc_msgSend(v16, "addAction:", v30);
    objc_msgSend(v16, "addAction:", v23);
    UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v34);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v3 + 88) + 16);
    if (Strong)
    {
      v32 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v16, 1, 0);

      v16 = v23;
      v23 = v30;
      v30 = v32;
    }

  }
}

uint64_t sub_100155414(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  Class v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v41[5];
  char v42;

  v5 = v4;
  v8 = a2;
  v9 = *(_QWORD *)(v4 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 136), a2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v41, ObjectType, v9);
  v11 = sub_100179C5C(v41);
  if ((v42 & 1) != 0)
    return 0;
  v12 = static TTRRemindersListPostponeType.allCases.getter(v11);
  v13 = v12;
  v14 = *(_QWORD *)(v12 + 16);
  if (!v14)
  {
LABEL_19:
    swift_bridgeObjectRelease(v13);
    v33 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v33 + 16, v5);
    v34 = swift_allocObject(&unk_1005F4890, 89, 7);
    *(_QWORD *)(v34 + 16) = v33;
    *(_QWORD *)(v34 + 24) = a1;
    sub_10000F614(a4, v34 + 32, &qword_100642D10);
    swift_bridgeObjectRetain(a1);
    sub_10017C154(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
    if ((a3 & 1) != 0)
      v35 = 0x10000;
    else
      v35 = 0;
    v32 = sub_100439948(v35 & 0xFFFFFFFE | v8 & 1 | 0x100, (uint64_t)_swiftEmptyDictionarySingleton, (uint64_t)sub_100180F5C, v34);
    swift_release();
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    return (uint64_t)v32;
  }
  v37 = a4;
  v38 = a3;
  v39 = v8;
  swift_bridgeObjectRetain(v12);
  v15 = 0;
  while (1)
  {
    v16 = *(_BYTE *)(v13 + v15 + 32);
    sub_1001ABF80(a1, v16);
    v18 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    sub_1002AA4A4(v16);
    v22 = v21;
    v23 = _swiftEmptyDictionarySingleton[2];
    v24 = (v20 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v20;
    if (_swiftEmptyDictionarySingleton[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v20 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1002B0EA8();
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_10045BB44(v25, isUniquelyReferenced_nonNull_native);
      sub_1002AA4A4(v16);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_26;
      v22 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v22) = v18;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v22 >> 6) + 8] |= 1 << v22;
    *(_BYTE *)(_swiftEmptyDictionarySingleton[6] + v22) = v16;
    *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v22) = v18;
    v29 = _swiftEmptyDictionarySingleton[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_25;
    _swiftEmptyDictionarySingleton[2] = v31;
LABEL_5:
    swift_bridgeObjectRelease(0x8000000000000000);
    if (v14 == ++v15)
    {
      swift_bridgeObjectRelease(v13);
      a3 = v38;
      v8 = v39;
      v5 = v4;
      a4 = v37;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRRemindersListPostponeType);
  __break(1u);
  return result;
}

uint64_t sub_1001556D8(uint64_t a1)
{
  uint64_t v1;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  sub_1001AB0E8(a1);
  if ((v3 & 0xFF00) == 0x200)
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_100648980);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Items selected don't qualify for batch completion", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    return 0;
  }
  else
  {
    v10 = HIBYTE(v3) & 1;
    if ((v3 & 0x100) != 0)
    {
      v12 = 0xD000000000000025;
      v13 = 0x8000000100567830;
      v14 = 0x8000000100567850;
      v11 = 0xD000000000000011;
    }
    else
    {
      v11 = 0xD000000000000012;
      v12 = 0xD000000000000026;
      v13 = 0x80000001005677E0;
      v14 = 0x8000000100567800;
    }
    v15 = TTRLocalizedString(_:comment:)(*(Swift::String *)&v11, *(Swift::String *)&v12);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v16);

    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v18 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v18 + 16, v1);
    v19 = swift_allocObject(&unk_1005F4818, 40, 7);
    *(_QWORD *)(v19 + 16) = v18;
    *(_BYTE *)(v19 + 24) = v10;
    *(_QWORD *)(v19 + 32) = a1;
    swift_bridgeObjectRetain(a1);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15._countAndFlagsBits, v15._object, 0, 0, v17, 0, 0, 0, 0, 0, 0, sub_100180E04, v19);
  }
}

void sub_100155964(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t countAndFlagsBits;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t isa;
  uint64_t v17;
  uint64_t object;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  UIMenuElementSize v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  NSString v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  Swift::OpaquePointer v47;
  uint64_t v48;
  UIMenuElementSize v49;
  _BYTE v50[128];
  UIImage_optional v51;
  UIImage_optional v52;

  v3 = sub_1001AC2E0(a1, a2);
  if (!v3)
    return;
  v4 = v3;
  v5 = sub_10002A750(&qword_100649F40);
  inited = swift_initStackObject(v5, v50);
  *(_OWORD *)(inited + 16) = xmmword_1005275D0;
  *(_QWORD *)(inited + 32) = 0;
  countAndFlagsBits = inited + 32;
  *(_QWORD *)(inited + 40) = static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerNoneText.getter();
  *(_QWORD *)(inited + 48) = v8;
  v9 = 1;
  *(_QWORD *)(inited + 56) = 1;
  *(_QWORD *)(inited + 64) = static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerLowText.getter();
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 2;
  *(_QWORD *)(inited + 88) = static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerMediumText.getter();
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 104) = 3;
  v12 = static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerHighText.getter();
  v13 = &v48;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v14;
  __chkstk_darwin(v12);
  v47._rawValue = (void *)a1;
  v15 = (uint64_t)sub_100174E00(inited, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100180DBC);
  swift_bridgeObjectRelease(v4);
  swift_setDeallocating(inited);
  isa = *(_QWORD *)(inited + 16);
  v17 = sub_10002A750(&qword_100649F48);
  swift_arrayDestroy(inited + 32, isa, v17);
  object = (unint64_t)v15 >> 62;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v45 = v15;
    else
      v45 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v15, 2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v15);
    if (v19 < 1)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain(v15);
      countAndFlagsBits = _CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v15);
      if (countAndFlagsBits >= 1)
      {
        swift_bridgeObjectRetain(v15);
        isa = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease(v15);
        if (isa >= v19)
          goto LABEL_5;
        __break(1u);
        goto LABEL_38;
      }
    }
    __break(1u);
    return;
  }
  v19 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v19)
  {
    swift_bridgeObjectRetain(v15);
LABEL_5:
    if ((v15 & 0xC000000000000001) != 0 && v19 != 1)
    {
      sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
      v20 = 1;
      do
      {
        v21 = v20 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v20);
        v20 = v21;
      }
      while (v19 != v21);
    }
    if (object)
    {
      if (v15 < 0)
        v23 = v15;
      else
        v23 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      isa = _CocoaArrayWrapper.subscript.getter(1, v19, v23);
      countAndFlagsBits = v24;
      object = v25;
      v22 = v26;
      swift_bridgeObjectRelease_n(v15, 2);
      if ((v22 & 1) == 0)
        goto LABEL_16;
    }
    else
    {
      isa = v15 & 0xFFFFFFFFFFFFFF8;
      countAndFlagsBits = (v15 & 0xFFFFFFFFFFFFFF8) + 32;
      object = 1;
      v22 = (2 * v19) | 1;
      if ((v22 & 1) == 0)
        goto LABEL_16;
    }
    v28 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v29 = swift_unknownObjectRetain_n(isa, 2);
    v30 = (_QWORD *)swift_dynamicCastClass(v29, v28);
    if (!v30)
    {
      swift_unknownObjectRelease(isa);
      v30 = _swiftEmptyArrayStorage;
    }
    v31 = v30[2];
    swift_release();
    if (__OFSUB__(v22 >> 1, object))
      goto LABEL_42;
    v32 = isa;
    if (v31 != (v22 >> 1) - object)
      goto LABEL_43;
    v27 = swift_dynamicCastClass(isa, v28);
    if (!v27)
    {
      swift_unknownObjectRelease(isa);
      v27 = (uint64_t)_swiftEmptyArrayStorage;
    }
    while (1)
    {
      swift_unknownObjectRelease(isa);
      if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
      {
        v46 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
        v33 = _bridgeCocoaArray<A>(_:)(v27, v46);
      }
      else
      {
        swift_bridgeObjectRetain(v27);
        v33 = v27;
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v34);
        sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      }
      swift_release();
      v22 = sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v51.value.super.isa = 0;
      v51.is_nil = 0;
      isa = (uint64_t)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v51, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v33, v47).super.super.isa;
      v36._countAndFlagsBits = 0xD00000000000001CLL;
      v36._object = (void *)0x80000001005677A0;
      v37._countAndFlagsBits = 0x797469726F697250;
      v37._object = (void *)0xE800000000000000;
      v38 = TTRLocalizedString(_:comment:)(v37, v36);
      countAndFlagsBits = v38._countAndFlagsBits;
      object = (uint64_t)v38._object;
      v39 = String._bridgeToObjectiveC()();
      v9 = (uint64_t)objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v39);

      v40 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v32 = swift_allocObject(v40, 48, 7);
      v13 = (uint64_t *)v32;
      *(_OWORD *)(v32 + 16) = xmmword_10051FF90;
      if ((v15 & 0xC000000000000001) != 0)
        goto LABEL_39;
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v41 = *(id *)(v15 + 32);
        goto LABEL_29;
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_unknownObjectRelease(v32);
LABEL_16:
      v27 = (uint64_t)sub_1002ABFAC(isa, countAndFlagsBits, object, v22);
    }
  }
LABEL_38:
  __break(1u);
LABEL_39:
  v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
LABEL_29:
  v42 = (uint64_t)v41;
  swift_bridgeObjectRelease(v15);
  v13[4] = v42;
  v13[5] = isa;
  v49 = (UIMenuElementSize)v13;
  specialized Array._endMutation()(v43);
  v44._countAndFlagsBits = countAndFlagsBits;
  v44._object = (void *)object;
  v52.value.super.isa = (Class)v9;
  v52.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v52, 0, 0xFFFFFFFFFFFFFFFFLL, v49, v47);
}

uint64_t sub_100155E74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  NSString v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = UIView.ttr_userInterfaceLayoutDirection.getter(v5);
  v9 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 136), v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 136))(ObjectType, v9);
  v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v7, &qword_100649CA0);
    v13 = 0;
  }
  else
  {
    v13 = v7[*(int *)(v12 + 112)];
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 568))(a1, ObjectType, v9);
  if (v14 && (v17 = v15, v18 = v16, swift_bridgeObjectRelease(v14), v19 = swift_bridgeObjectRelease(v17), v18 > 0))
  {
    v48 = static TTRLocalizableStrings.RemindersList.outdentRemindersText(withCount:isForGroceries:)(v18, v13, v19);
    v21 = v20;
    v22 = v8;
    if (v8)
      v23 = 0x8000000100567780;
    else
      v23 = 0x8000000100567760;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v24);

    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 560))(a1, ObjectType, v9);
    if (!v26)
    {
      v32 = v48;
      goto LABEL_22;
    }
    v29 = v27;
    v30 = v28;
    v31 = 1;
    v32 = v48;
  }
  else
  {
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 560))(a1, ObjectType, v9);
    if (!v26)
    {
LABEL_20:
      swift_bridgeObjectRelease(v26);
      return 0;
    }
    v29 = v33;
    v30 = v34;
    v22 = v8;
    v21 = 0;
    v32 = 0;
    v25 = 0;
    v31 = 0;
  }
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v29);
  if (v30 >= 1)
  {
    v35 = swift_bridgeObjectRelease(v21);
    v36 = static TTRLocalizableStrings.RemindersList.indentRemindersText(withCount:isForGroceries:)(v30, v13, v35);
    v21 = v37;
    if (v22)
      v38 = 0x8000000100567760;
    else
      v38 = 0x8000000100567780;
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v40 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v39);

    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v41 = 1;
    v25 = v40;
    v32 = v36;
    v42 = v31;
    goto LABEL_23;
  }
  if ((v31 & 1) == 0)
  {

    v26 = v21;
    goto LABEL_20;
  }
LABEL_22:
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v41 = 0;
  v42 = 0;
  LOBYTE(v31) = 1;
  if (!v21)
  {
    v21 = 0xE000000000000000;
    v44 = 0;
    goto LABEL_24;
  }
LABEL_23:
  v44 = v42;
  v42 = v32;
LABEL_24:
  v45 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v45 + 16, v2);
  v46 = swift_allocObject(&unk_1005F47C8, 41, 7);
  *(_QWORD *)(v46 + 16) = v45;
  *(_BYTE *)(v46 + 24) = v41;
  *(_QWORD *)(v46 + 32) = a1;
  *(_BYTE *)(v46 + 40) = v31;
  swift_bridgeObjectRetain(a1);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v42, v21, 0, 0, v25, 0, 0, 0, 0, v44, 0, sub_100180DA8, v46);
}

Class sub_10015626C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  _QWORD v23[2];
  BOOL v24;
  __int16 v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t, char, void (*)(_QWORD *), uint64_t, double, double);
  uint64_t v28;
  double (*v29)(_QWORD *);
  uint64_t v30;

  v2 = v1;
  v4 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong, v6);
    v10 = (*(double (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v10 = 1.0;
  }
  v11 = swift_unknownObjectWeakLoadStrong(v4);
  if (v11)
  {
    v13 = v11;
    v14 = *(_QWORD *)(v2 + 24);
    v15 = swift_getObjectType(v11, v12);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
    swift_unknownObjectRelease(v13);
    v17 = v16 == 1;
  }
  else
  {
    v17 = 0;
  }
  v18 = sub_1003507BC((uint64_t)_swiftEmptyArrayStorage);
  v19 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v19 + 16, v2);
  v20 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v20 + 16, v2);
  v23[0] = a1;
  *(double *)&v23[1] = v10;
  v24 = v17;
  v25 = 0;
  v26 = v18;
  v27 = sub_1001809C0;
  v28 = v19;
  v29 = sub_100180C04;
  v30 = v20;
  swift_bridgeObjectRetain(a1);
  v21 = sub_10043A73C((uint64_t)v23);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(a1);
  return v21;
}

Class sub_1001563E4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  double v19;
  Class v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  BOOL v33;
  char v34;
  char v35;
  _QWORD *v36;
  void (*v37)(uint64_t, uint64_t, char, void (*)(_QWORD *), uint64_t, double, double);
  uint64_t v38;
  double (*v39)(_QWORD *);
  uint64_t v40;

  v3 = v2;
  v6 = sub_1001A4BD8(a1);
  if (!v6)
    return 0;
  v8 = v6;

  v9 = _swiftEmptyDictionarySingleton;
  v32[0] = _swiftEmptyDictionarySingleton;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_1001621CC(v32, v12, v3);
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(a1);
    v9 = (_QWORD *)v32[0];
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v16 = Strong;
    v17 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(Strong, v15);
    v19 = (*(double (**)(uint64_t, uint64_t))(v17 + 8))(ObjectType, v17);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    v19 = 1.0;
  }
  v21 = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (v21)
  {
    v23 = v21;
    v24 = *(_QWORD *)(v3 + 24);
    v25 = swift_getObjectType(v21, v22);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v25, v24);
    swift_unknownObjectRelease(v23);
    v27 = v26 == 1;
  }
  else
  {
    v27 = 0;
  }
  v28 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v28 + 16, v3);
  v29 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v29 + 16, v3);
  v30 = swift_allocObject(&unk_1005F4778, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a1;
  v32[0] = v8;
  *(double *)&v32[1] = v19;
  v33 = v27;
  v34 = a2 & 1;
  v35 = 1;
  v36 = v9;
  v37 = sub_1001809C0;
  v38 = v28;
  v39 = sub_1001809DC;
  v40 = v30;
  swift_bridgeObjectRetain(a1);
  v20 = sub_10043A73C((uint64_t)v32);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  return v20;
}

uint64_t sub_100156620(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  char v32;
  uint64_t v33;
  _QWORD v34[2];
  char v35;
  uint64_t v36;
  void (*v37)(void (*)(_QWORD *), uint64_t);
  uint64_t v38;
  double (*v39)(uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  double (*v43)();
  uint64_t v44;

  v4 = v3;
  v8 = sub_1001A3378(a1, 0);
  if (!v8)
    return 0;
  v10 = v8;
  v11 = v9;
  v32 = a2;
  sub_100172D04(v8);
  v33 = v12;
  v13 = objc_msgSend(v11, "hashtags", swift_bridgeObjectRelease(v10).n128_f64[0]);
  v14 = sub_100005ED8(0, &qword_100645310, REMHashtag_ptr);
  v15 = sub_100017608((unint64_t *)&qword_100649F10, &qword_100645310, REMHashtag_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v13, v14, v15);

  v34[0] = v16;
  v17 = sub_10002A750(&qword_100645300);
  v18 = sub_100023FEC(&qword_100649F20, &qword_100645300, (uint64_t)&protocol conformance descriptor for Set<A>);
  LOBYTE(v13) = Collection<>.contains(hashtagOfType:)(0, v17, v18);
  swift_bridgeObjectRelease(v16);
  v31 = v11;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = v13 & 1;
  v21 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v21 + 16, v4);
  v22 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v22 + 16, v4);
  v23 = swift_allocObject(&unk_1005F46D8, 89, 7);
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = a1;
  sub_10000F614(a3, v23 + 32, &qword_100642D10);
  v24 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v24 + 16, v4);
  v25 = swift_allocObject(&unk_1005F4700, 32, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = a1;
  v26 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v26 + 16, v4);
  v27 = swift_allocObject(&unk_1005F4728, 32, 7);
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = a1;
  LOBYTE(v34[0]) = v32 & 1;
  v34[1] = v19;
  v35 = v20;
  v36 = v33;
  v37 = sub_100180970;
  v38 = v21;
  v39 = sub_10018099C;
  v40 = v23;
  v41 = sub_1001809AC;
  v42 = v25;
  v43 = sub_1001809B8;
  v44 = v27;
  swift_bridgeObjectRetain_n(a1, 3);
  sub_10017C154(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
  sub_100439D8C((uint64_t)v34);
  v29 = v28;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v33);
  return v29;
}

void *sub_100156910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v18;
  char v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  char v45;
  void *v46;
  char v47[24];
  _QWORD v48[6];
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 104);
  v7 = sub_1001A4608(a1);
  if (!v7)
    return v7;
  v8 = v5;
  v9 = v6;
  v48[0] = a1;
  v10 = sub_10002A750(&qword_100649DF0);
  v11 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  v12 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  Sequence.firstMap<A>(_:)(&v49, sub_100180890, v1, v10, v11, v12);
  v13 = (void *)v49;
  if (!(_QWORD)v49)
  {
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  swift_beginAccess(v1 + 448, v47, 0, 0);
  sub_10000735C(v1 + 448, (uint64_t)&v49, &qword_100649DC8);
  if (!v50)
  {
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);

    sub_1000073A0((uint64_t)&v49, &qword_100649DC8);
    return 0;
  }
  sub_10002E37C(&v49, (uint64_t)v48);
  v46 = v13;
  v14 = objc_msgSend(v13, "list");
  v15 = objc_msgSend(v14, "groceryContext");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "shouldCategorizeGroceryItems");

    sub_100010634((uint64_t)v48, (uint64_t)&v49);
    if (v17)
    {
      v44 = v51;
      sub_10001413C(&v49, v50);
      v18 = objc_msgSend(v14, "objectID");
      v19 = (*(uint64_t (**)(void))(v44 + 40))();

      sub_100027F10(&v49);
      if ((v19 & 1) != 0)
      {
        sub_10017681C((uint64_t)v7, v8);
        v21 = v20;
        swift_bridgeObjectRelease(v7);
        v7 = v21;
      }
      goto LABEL_12;
    }
  }
  else
  {
    sub_100010634((uint64_t)v48, (uint64_t)&v49);
  }
  sub_100027F10(&v49);
LABEL_12:
  swift_bridgeObjectRelease(v8);
  v22 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), v23);
  v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 176))(ObjectType, v22);
  v27 = v26;
  sub_1000760F4(v25, v26);
  v28 = *(_QWORD *)(v2 + 144);
  v30 = swift_getObjectType(*(_QWORD *)(v2 + 136), v29);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 104))(v30, v28);
  if (v31)
  {
    v33 = v31;
    v34 = v32;
    v35 = swift_getObjectType(v31, v32);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
    swift_unknownObjectRelease(v33);
    v45 = v36 & 1;
  }
  else
  {
    v45 = 0;
  }
  v37 = (v27 >> 8) & 1;
  v38 = *(_QWORD *)(a1 + 16);
  v39 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v39 + 16, v2);
  v40 = (_QWORD *)swift_allocObject(&unk_1005F4688, 40, 7);
  v40[2] = v39;
  v40[3] = a1;
  v40[4] = v9;
  v41 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v41 + 16, v2);
  v42 = (_QWORD *)swift_allocObject(&unk_1005F46B0, 40, 7);
  v42[2] = v41;
  v42[3] = a1;
  v42[4] = v9;
  swift_bridgeObjectRetain_n(a1, 2);
  swift_bridgeObjectRetain_n(v9, 2);
  sub_1001BB558((uint64_t)v7, (uint64_t)_swiftEmptyArrayStorage, v9, 0, v37, v45, v38, (uint64_t)sub_1001808A8, (uint64_t)&v49, (uint64_t)v40, (uint64_t)sub_1001808B8, (uint64_t)v42, 0, 0);
  v7 = sub_100370E98((uint64_t *)&v49);

  sub_1001808C4((uint64_t *)&v49);
  sub_100027F10(v48);
  return v7;
}

void sub_100156D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96))(ObjectType, v4);
  if (v6)
  {
    v39 = ObjectType;
    v40 = v2;
    v41 = a1;
    v42 = v6;
    v7 = sub_10021DD18();
    v8 = v7;
    v9 = v7[2];
    if (!v9)
      goto LABEL_9;
    v10 = (void *)v7[4];
    v11 = v7[6];
    v12 = v7[8];
    swift_bridgeObjectRetain(v12);
    v13 = v10;
    swift_bridgeObjectRetain(v11);
    LOBYTE(v10) = static TTRSectionID.__derived_enum_equals(_:_:)(v10, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v11);

    if ((v10 & 1) == 0)
    {
LABEL_12:
      swift_unknownObjectRelease(v42);
      swift_bridgeObjectRelease(v8);
      return;
    }
    if (v9 == 1)
    {
LABEL_9:
      swift_bridgeObjectRelease(v8);
      v22 = sub_1001A8F08(v41, v21);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)(v41 + 16);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(v39, v4);
        if (v25)
        {
          v27 = v25;
          v28 = v26;
          v29 = swift_getObjectType(v25, v26);
          v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
          swift_unknownObjectRelease(v27);
          v31 = v30 & 1;
        }
        else
        {
          v31 = 0;
        }
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        v32 = static TTRLocalizableStrings.Sections.newSectionWithSelectionText(withSelectedRemindersCount:listLayout:)(v24, v31);
        v34 = v33;
        v35 = String._bridgeToObjectiveC()();
        v36 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v35);

        v37 = swift_allocObject(&unk_1005F3738, 24, 7);
        swift_weakInit(v37 + 16, v40);
        v38 = (_QWORD *)swift_allocObject(&unk_1005F4660, 40, 7);
        v38[2] = v37;
        v38[3] = v41;
        v38[4] = v23;
        swift_retain();
        swift_bridgeObjectRetain(v41);
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v32, v34, 0, 0, v36, 0, 0, 0, 0, 0, 0, sub_100180884, v38);
        swift_release();
        swift_unknownObjectRelease(v42);
      }
      else
      {
        swift_unknownObjectRelease(v42);
      }
    }
    else
    {
      v14 = v8 + 13;
      v15 = 1;
      while (1)
      {
        v16 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        v17 = *v14;
        v18 = *(v14 - 2);
        v19 = (void *)*(v14 - 4);
        swift_bridgeObjectRetain(*v14);
        v20 = v19;
        swift_bridgeObjectRetain(v18);
        LOBYTE(v19) = static TTRSectionID.__derived_enum_equals(_:_:)(v19, 0);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v18);

        if ((v19 & 1) == 0)
          goto LABEL_12;
        v14 += 5;
        ++v15;
        if (v16 == v9)
          goto LABEL_9;
      }
      __break(1u);
    }
  }
}

UIMenu sub_100157000(uint64_t a1, UIMenuElementSize a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::String v17;
  objc_class *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  UIMenuElementSize v25;
  UIMenuElementSize v26;
  id v27;
  Swift::String v28;
  objc_class *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Class v33;
  Class v34;
  uint64_t v35;
  UIMenuElementSize v36;
  UIMenuElementSize v37;
  objc_class *v38;
  Swift::String v39;
  objc_class *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t countAndFlagsBits;
  void *object;
  unint64_t v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  UIMenuElementSize v69;
  Swift::String v70;
  objc_class *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  UIMenuElementSize v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  Swift::String v83;
  UIMenu v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  Swift::String v94;
  objc_class *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSString v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  __int16 v109;
  __int16 v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSString v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  id v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  Swift::String v131;
  objc_class *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  Swift::String v136;
  _QWORD *v138;
  uint64_t v139;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  Swift::OpaquePointer childrenb;
  Swift::OpaquePointer childrenc;
  void *v144;
  _QWORD *v145;
  UIMenuElementSize v146;
  _BYTE v148[64];
  UIMenuElementSize preferredElementSize[9];
  UIImage_optional v150;
  UIImage_optional v151;
  UIImage_optional v152;
  UIImage_optional v153;
  UIImage_optional v154;
  UIImage_optional v155;
  UIImage_optional v156;
  UIImage_optional v157;

  v4 = v3;
  preferredElementSize[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a2);
  v7 = (void *)sub_1001556D8(a1);
  if (v7)
  {
    v8 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v9 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v10 >= v9 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
    specialized Array._endMutation()(v11);

  }
  sub_1001631E0(a1, v3, a3, (uint64_t)v148);
  v12 = (void *)sub_100155414(a1, 1, 0, (uint64_t)v148);
  sub_10017C154((uint64_t)v148, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);
  if (v12)
  {
    v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);

  }
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v150.value.super.isa = 0;
  v150.is_nil = 0;
  v18 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v150, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], children).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);

  v22 = sub_100155E74(a1);
  if (v22)
  {
    v23 = (void *)v22;
    v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100521140;
    *(_QWORD *)(v25 + 32) = v23;
    preferredElementSize[0] = v25;
    specialized Array._endMutation()(v25);
    v26 = preferredElementSize[0];
    v27 = v23;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v151.value.super.isa = 0;
    v151.is_nil = 0;
    v29 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v151, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v26, childrena).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized Array._endMutation()(v32);

  }
  v33 = sub_1001563E4(a1, 1);
  if (v33)
  {
    v34 = v33;
    v35 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100521140;
    *(_QWORD *)(v36 + 32) = v34;
    preferredElementSize[0] = v36;
    specialized Array._endMutation()(v36);
    v37 = preferredElementSize[0];
    v38 = v34;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v152.value.super.isa = 0;
    v152.is_nil = 0;
    v40 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v152, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v37, childrena).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
    v42 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v41 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v42 >= v41 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
    v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
    specialized Array._endMutation()(v43);

  }
  preferredElementSize[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v44 = sub_1001A16E0(a1);
  if (v44 != 2)
  {
    v144 = a3;
    v46 = v44 & 1;
    if ((v44 & 1) != 0)
    {
      v53._object = (void *)0x8000000100567700;
      v52 = 0xE400000000000000;
      v54._countAndFlagsBits = 1734437958;
      v54._object = (void *)0xE400000000000000;
      v53._countAndFlagsBits = 0xD000000000000018;
      v55 = TTRLocalizedString(_:comment:)(v54, v53);
      countAndFlagsBits = v55._countAndFlagsBits;
      object = v55._object;
    }
    else
    {
      v47._countAndFlagsBits = 0xD00000000000001ALL;
      v47._object = (void *)0x80000001005676E0;
      v48._countAndFlagsBits = 0x67616C666E55;
      v48._object = (void *)0xE600000000000000;
      v49 = TTRLocalizedString(_:comment:)(v48, v47);
      countAndFlagsBits = v49._countAndFlagsBits;
      object = v49._object;
      v52 = 0xEA00000000006873;
    }
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    v57 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v56);

    v58 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v58 + 16, v4);
    v59 = swift_allocObject(&unk_1005F4598, 40, 7);
    *(_QWORD *)(v59 + 16) = v58;
    *(_BYTE *)(v59 + 24) = v46;
    *(_QWORD *)(v59 + 32) = a1;
    swift_bridgeObjectRetain(a1);
    v60 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v57, 0, 0, 0, 0, 0, 0, sub_100180500, v59);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
    v62 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v61 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v62 >= v61 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
    v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
    specialized Array._endMutation()(v63);

    a3 = v144;
  }
  sub_100155964(a1, v45);
  if (v64)
  {
    v65 = v64;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
    v67 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v66 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v67 >= v66 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
    v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
    specialized Array._endMutation()(v68);

  }
  v69 = preferredElementSize[0];
  if ((unint64_t)preferredElementSize[0] >> 62)
  {
    if ((uint64_t)preferredElementSize[0] < UIMenuElementSizeSmall)
      v75 = preferredElementSize[0];
    else
      v75 = preferredElementSize[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(preferredElementSize[0]);
    v76 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v69);
    if (v76)
      goto LABEL_32;
LABEL_39:
    swift_bridgeObjectRelease(v69);
    goto LABEL_40;
  }
  if (!*(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_39;
LABEL_32:
  v70._countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  v153.value.super.isa = 0;
  v153.is_nil = 0;
  v71 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v70, (Swift::String_optional)0, v153, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v69, childrena).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
  v73 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v72 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v73 >= v72 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
  v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v71);
  specialized Array._endMutation()(v74);

LABEL_40:
  v77 = sub_100156910(a1);
  if (v77 || (sub_100156D10(a1, v78), v77))
  {
    v79 = v77;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
    v81 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v80 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v81 >= v80 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
    v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
    specialized Array._endMutation()(v82);

  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v88 = _swiftEmptyArrayStorage;
    else
      v88 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v89 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v89)
      goto LABEL_47;
LABEL_54:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_55;
  }
  if (!*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_47:
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  v154.value.super.isa = 0;
  v154.is_nil = 0;
  v84.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v83, (Swift::String_optional)0, v154, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, childrena).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84.super.super.isa);
  v86 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v85 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v86 >= v85 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v86 + 1, 1);
  v87 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v86, v84.super.super.isa);
  specialized Array._endMutation()(v87);
LABEL_55:
  sub_1001631E0(a1, v4, a3, (uint64_t)preferredElementSize);
  v90 = (void *)sub_100156620(a1, 1, (uint64_t)preferredElementSize);
  sub_10017C154((uint64_t)preferredElementSize, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);
  if (v90)
  {
    v91 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v92 = swift_allocObject(v91, 40, 7);
    *(_OWORD *)(v92 + 16) = xmmword_100521140;
    *(_QWORD *)(v92 + 32) = v90;
    v146 = v92;
    specialized Array._endMutation()(v92);
    v93 = v90;
    v94._countAndFlagsBits = 0;
    v94._object = (void *)0xE000000000000000;
    v155.value.super.isa = 0;
    v155.is_nil = 0;
    v95 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v94, (Swift::String_optional)0, v155, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v146, childrena).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
    v97 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v96 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v97 >= v96 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
    v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v95);
    specialized Array._endMutation()(v98);

  }
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v99 = static TTRLocalizableStrings.Common.deleteButton.getter();
  v101 = v100;
  v102 = String._bridgeToObjectiveC()();
  v103 = (void *)objc_opt_self(UIImage);
  v104 = objc_msgSend(v103, "_systemImageNamed:", v102);

  v105 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v105 + 16, v4);
  v106 = swift_allocObject(&unk_1005F45C0, 32, 7);
  *(_QWORD *)(v106 + 16) = v105;
  *(_QWORD *)(v106 + 24) = a1;
  swift_bridgeObjectRetain(a1);
  v107 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v99, v101, 0, 0, v104, 0, 0, 0, 0, 2, 0, sub_100180514, v106);
  v108 = sub_1001AB5E0(a1);
  if (v108)
  {
    v110 = v109;
    v111 = swift_bridgeObjectRelease(v108);
    if ((v110 & 0x100) != 0)
    {
      v112 = static TTRLocalizableStrings.Common.moveButton.getter(v111);
      v114 = v113;
      v115 = String._bridgeToObjectiveC()();
      v116 = objc_msgSend(v103, "_systemImageNamed:", v115);

      v117 = swift_allocObject(&unk_1005F3738, 24, 7);
      swift_weakInit(v117 + 16, v4);
      v118 = swift_allocObject(&unk_1005F45E8, 32, 7);
      *(_QWORD *)(v118 + 16) = v117;
      *(_QWORD *)(v118 + 24) = a1;
      swift_bridgeObjectRetain(a1);
      v119 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v112, v114, 0, 0, v116, 0, 0, 0, 0, 0, 0, sub_100180540, v118);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
      v121 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v120 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v121 >= v120 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1);
      v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
      specialized Array._endMutation()(v122);
      v123 = v107;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v123);
      v125 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v124 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v125 >= v124 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v124 > 1, v125 + 1, 1);
      v126 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v123);
      specialized Array._endMutation()(v126);

    }
  }
  v127 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v138 = _swiftEmptyArrayStorage;
    else
      v138 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v139 = _CocoaArrayWrapper.endIndex.getter(v138);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v139)
      goto LABEL_69;
  }
  else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_69;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v128 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v129 = swift_allocObject(v128, 40, 7);
  *(_OWORD *)(v129 + 16) = xmmword_100521140;
  *(_QWORD *)(v129 + 32) = v107;
  v145 = (_QWORD *)v129;
  specialized Array._endMutation()(v129);
  v127 = v145;
  v130 = v107;
LABEL_69:
  v131._countAndFlagsBits = 0;
  v131._object = (void *)0xE000000000000000;
  v156.value.super.isa = 0;
  v156.is_nil = 0;
  v132 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v131, (Swift::String_optional)0, v156, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v127, childrenb).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v132);
  v134 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v133 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v134 >= v133 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v133 > 1, v134 + 1, 1);
  v135 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v134, v132);
  specialized Array._endMutation()(v135);

  v136._countAndFlagsBits = 0;
  v136._object = (void *)0xE000000000000000;
  v157.value.super.isa = 0;
  v157.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v136, (Swift::String_optional)0, v157, 0, 0xFFFFFFFFFFFFFFFFLL, a2, childrenc);
}

uint64_t sub_100157D84(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t (*v71)(_QWORD);
  uint64_t (*v72)();
  _QWORD *v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD);
  char *v76;
  void *v77;
  char *v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t result;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  __n128 v118;
  int v119;
  void *v120;
  id v121;
  void *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  objc_class *v157;
  char *v158;
  uint64_t v159;
  id v160;
  objc_class *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  char *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v190)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  char *v213;
  char *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  id v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  char *v227;
  char *v228;
  uint64_t (*v229)();
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  objc_super v233;
  objc_super v234;
  _QWORD v235[4];
  uint64_t v236;

  v199 = a3;
  v221 = a1;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v197 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v198 = v6;
  v210 = (uint64_t)&v186 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v7 = __chkstk_darwin(v194);
  v193 = (uint64_t)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v192 = (char *)&v186 - v9;
  v225 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  v224 = *(_QWORD *)(v225 - 8);
  v10 = __chkstk_darwin(v225);
  v209 = (uint64_t)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = v11;
  __chkstk_darwin(v10);
  v217 = (uint64_t)&v186 - v12;
  v207 = type metadata accessor for UTType(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v205 = (char *)&v186 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100649E58);
  __chkstk_darwin(v14);
  v203 = (uint64_t)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v231 = *(_QWORD *)(v16 - 8);
  v232 = v16;
  v17 = __chkstk_darwin(v16);
  v216 = (uint64_t)&v186 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v191 = (char *)&v186 - v20;
  v21 = __chkstk_darwin(v19);
  v228 = (char *)&v186 - v22;
  v195 = v23;
  __chkstk_darwin(v21);
  v227 = (char *)&v186 - v24;
  v230 = (_QWORD *)type metadata accessor for TTRRemindersListViewModel.ImageAttachment(0);
  v223 = *(v230 - 1);
  v25 = __chkstk_darwin(v230);
  v220 = (char *)&v186 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (void **)((char *)&v186 - v27);
  v29 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v30 = __chkstk_darwin(v29);
  v211 = (uint64_t)&v186 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v200 = (uint64_t *)((char *)&v186 - v33);
  v34 = __chkstk_darwin(v32);
  v204 = (char *)&v186 - v35;
  v36 = __chkstk_darwin(v34);
  v229 = (uint64_t (*)())((char *)&v186 - v37);
  __chkstk_darwin(v36);
  v39 = (char *)&v186 - v38;
  v40 = sub_10002A750(&qword_100649E60);
  v41 = __chkstk_darwin(v40);
  v219 = (uint64_t)&v186 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v218 = (uint64_t)&v186 - v44;
  v45 = __chkstk_darwin(v43);
  v212 = (uint64_t *)((char *)&v186 - v46);
  __chkstk_darwin(v45);
  v48 = (char *)&v186 - v47;
  v49 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v49);
  v51 = (char *)&v186 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v55 = (char *)&v186 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = a2;
  v56 = a2;
  v57 = v3;
  sub_10014D050(v56, (uint64_t)v51);
  v58 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
  {
    sub_1000073A0((uint64_t)v51, (uint64_t *)&unk_100646F40);
    return 0;
  }
  v187 = v57;
  sub_10001F580((uint64_t)v51, (uint64_t)v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  v59 = v224;
  v60 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56);
  v222 = v48;
  v61 = v225;
  v190 = v60;
  v60((uint64_t)v48, 1, 1, v225);
  v62 = v231;
  v63 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v231 + 56);
  v214 = v39;
  v189 = v63;
  v63((uint64_t)v39, 1, 1, v232);
  v202 = swift_allocObject(&unk_1005F4408, 24, 7);
  *(_QWORD *)(v202 + 16) = 0;
  v64 = swift_allocObject(&unk_1005F4430, 32, 7);
  *(_QWORD *)(v64 + 16) = 0;
  *(_QWORD *)(v64 + 24) = 0;
  v201 = v64;
  v188 = v58;
  v65 = *(int *)(v58 + 64);
  v213 = v55;
  v66 = *(_QWORD *)&v55[v65];
  if (v66)
    v67 = *(_QWORD **)&v55[v65];
  else
    v67 = _swiftEmptyArrayStorage;
  v236 = (uint64_t)_swiftEmptyArrayStorage;
  v68 = v67[2];
  v215 = v67;
  if (v68)
  {
    v69 = (uint64_t)v67 + ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80));
    v70 = *(id *)(v223 + 72);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v67);
    v71 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment;
    v72 = v229;
    v73 = v230;
    v226 = v70;
    v74 = v232;
    do
    {
      sub_10002B1E8(v69, (uint64_t)v28, v71);
      sub_10000735C((uint64_t)v28 + *((int *)v73 + 5), (uint64_t)v72, (uint64_t *)&unk_100640EE0);
      if ((*(unsigned int (**)(uint64_t (*)(), uint64_t, uint64_t))(v62 + 48))(v72, 1, v74) == 1)
      {
        sub_1000073A0((uint64_t)v72, (uint64_t *)&unk_100640EE0);
        sub_10001F544((uint64_t)v28, v71);
      }
      else
      {
        v75 = v71;
        v76 = v227;
        (*(void (**)(char *, uint64_t (*)(), uint64_t))(v62 + 32))(v227, v72, v74);
        v77 = *v28;
        v78 = v228;
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v228, v76, v74);
        v79 = objc_allocWithZone((Class)type metadata accessor for TTRIQuickLookImageAttachmentPreviewItem(0));
        v80 = TTRIQuickLookImageAttachmentPreviewItem.init(attachmentID:fileURL:)(v77, v78);
        v81 = v76;
        v71 = v75;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v81, v74);
        v82 = sub_10001F544((uint64_t)v28, v75);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v82);
        v84 = *(_QWORD *)((v236 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v83 = *(_QWORD *)((v236 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v84 >= v83 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, v84 + 1, 1);
        v85 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v80);
        specialized Array._endMutation()(v85);
        v73 = v230;
        v62 = v231;
        v70 = v226;
        v72 = v229;
      }
      v69 += (uint64_t)v70;
      --v68;
    }
    while (v68);
    swift_bridgeObjectRelease(v215);
    v86 = v236;
    v87 = v224;
    v88 = v225;
  }
  else
  {
    v87 = v59;
    v88 = v61;
    swift_bridgeObjectRetain(v66);
    v86 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v89 = v221;
  v90 = sub_10017A3F8(v86, (uint64_t)v89);
  v92 = v91;

  v93 = (uint64_t)v214;
  v94 = v220;
  LODWORD(v227) = v92;
  if ((v92 & 1) != 0)
  {
    swift_bridgeObjectRelease(v86);
    v112 = (uint64_t)v222;
    v113 = (uint64_t)v213;
    v114 = v215;
    v98 = v232;
LABEL_35:
    swift_bridgeObjectRelease(v114);
    v129 = v218;
    sub_10000735C(v112, v218, &qword_100649E60);
    v130 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    v131 = v130(v129, 1, v88);
    v132 = sub_1000073A0(v129, &qword_100649E60);
    if (v131 == 1)
    {
      v133 = *(_QWORD *)(v113 + *(int *)(v188 + 60));
      if (v133)
      {
        v236 = *(_QWORD *)(v113 + *(int *)(v188 + 60));
        __chkstk_darwin(v132);
        *(&v186 - 2) = (uint64_t)v89;
        swift_bridgeObjectRetain(v133);
        v134 = sub_10002A750(&qword_100649E70);
        v135 = sub_100023FEC(&qword_100649E78, &qword_100649E70, (uint64_t)&protocol conformance descriptor for [A]);
        v136 = v134;
        v137 = (char *)v200;
        Sequence.firstMap<A>(_:)((char *)v200, sub_10017F538, &v186 - 4, v136, v98, v135);
        v138 = swift_bridgeObjectRelease(v133);
        v139 = v231;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v231 + 48))(v137, 1, v98, v138) == 1)
        {
          sub_1000073A0((uint64_t)v137, (uint64_t *)&unk_100640EE0);
          v93 = (uint64_t)v214;
          v112 = (uint64_t)v222;
        }
        else
        {
          v93 = (uint64_t)v214;
          sub_1000073A0((uint64_t)v214, (uint64_t *)&unk_100640EE0);
          v112 = (uint64_t)v222;
          sub_1000073A0((uint64_t)v222, &qword_100649E60);
          v140 = v139;
          v141 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
          v142 = v191;
          v141(v191, v137, v98);
          (*(void (**)(uint64_t, char *, uint64_t))(v140 + 16))(v112, v142, v98);
          v143 = v225;
          swift_storeEnumTagMultiPayload(v112, v225, 1);
          v190(v112, 0, 1, v143);
          v141((char *)v93, v142, v98);
          v189(v93, 0, 1, v98);
        }
        v113 = (uint64_t)v213;
      }
    }
    v144 = v219;
    sub_10000735C(v112, v219, &qword_100649E60);
    if (v130(v144, 1, v225) == 1)
    {
      sub_1000073A0(v93, (uint64_t *)&unk_100640EE0);
      v145 = &qword_100649E60;
      v146 = v112;
    }
    else
    {
      v147 = v217;
      sub_10001F580(v144, v217, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
      v144 = v211;
      sub_10000735C(v93, v211, (uint64_t *)&unk_100640EE0);
      v148 = v231;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v144, 1, v98) != 1)
      {
        LODWORD(v229) = (v227 & 1) == 0;
        v230 = *(_QWORD **)(v148 + 32);
        v150 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v230)(v216, v144, v98);
        v151 = (uint64_t)v192;
        v152 = v208;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v150);
        v153 = v193;
        sub_10002B1E8(v151, v193, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v154 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
        AnyHashable.init<A>(_:)(&v236, v153, v194, v154);
        sub_10001F544(v151, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v155 = v210;
        sub_10002B1E8(v152, v210, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v156 = v209;
        sub_10002B1E8(v147, v209, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        v157 = (objc_class *)type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier(0);
        v158 = (char *)objc_allocWithZone(v157);
        sub_10002B1E8(v155, (uint64_t)&v158[OBJC_IVAR____TtCC9Reminders28TTRIRemindersCommonPresenterP33_5CD98EDF15D0ED6BAC909BA9376202F921ContextMenuIdentifier_item], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(_QWORD *)&v158[OBJC_IVAR____TtCC9Reminders28TTRIRemindersCommonPresenterP33_5CD98EDF15D0ED6BAC909BA9376202F921ContextMenuIdentifier_attachmentID] = v89;
        sub_10002B1E8(v156, (uint64_t)&v158[OBJC_IVAR____TtCC9Reminders28TTRIRemindersCommonPresenterP33_5CD98EDF15D0ED6BAC909BA9376202F921ContextMenuIdentifier_action], type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        v234.receiver = v158;
        v234.super_class = v157;
        v159 = v147;
        v227 = (char *)v89;
        v160 = objc_msgSendSuper2(&v234, "init");
        sub_10001F544(v156, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        sub_10001F544(v155, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v235[3] = v157;
        v235[0] = v160;
        v161 = (objc_class *)type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
        v162 = objc_allocWithZone(v161);
        sub_1001033E8((uint64_t)&v236, (uint64_t)v162 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_itemID);
        sub_10000735C((uint64_t)v235, (uint64_t)v162 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_userInfo, &qword_100640E50);
        v233.receiver = v162;
        v233.super_class = v161;
        v226 = objc_msgSendSuper2(&v233, "init");
        sub_1000073A0((uint64_t)v235, &qword_100640E50);
        sub_100041DDC((uint64_t)&v236);
        v163 = v216;
        v229 = sub_10008D300(v216, (char)v229);
        v225 = v164;
        sub_10002B1E8(v208, v155, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10002B1E8(v159, v156, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        v165 = v231;
        v166 = v228;
        (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v228, v163, v98);
        v167 = *(unsigned __int8 *)(v197 + 80);
        v168 = (v167 + 24) & ~v167;
        v169 = *(unsigned __int8 *)(v224 + 80);
        v170 = (v198 + v169 + v168) & ~v169;
        v171 = *(unsigned __int8 *)(v165 + 80);
        v172 = (v196 + v171 + v170) & ~v171;
        v173 = (v195 + v172 + 7) & 0xFFFFFFFFFFFFFFF8;
        v174 = (v173 + 15) & 0xFFFFFFFFFFFFFFF8;
        v175 = (v174 + 15) & 0xFFFFFFFFFFFFFFF8;
        v176 = (v175 + 15) & 0xFFFFFFFFFFFFFFF8;
        v177 = swift_allocObject(&unk_1005F4458, v176 + 8, v167 | v169 | v171 | 7);
        v178 = v227;
        *(_QWORD *)(v177 + 16) = v227;
        sub_10001F580(v210, v177 + v168, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F580(v209, v177 + v170, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        v179 = v177 + v172;
        v180 = v232;
        ((void (*)(uint64_t, char *, uint64_t))v230)(v179, v166, v232);
        *(_QWORD *)(v177 + v173) = v187;
        *(_QWORD *)(v177 + v174) = v201;
        *(_QWORD *)(v177 + v175) = v202;
        v181 = v199;
        *(_QWORD *)(v177 + v176) = v199;
        sub_100005ED8(0, &qword_100649E68, UIContextMenuConfiguration_ptr);
        v182 = v178;
        swift_retain();
        swift_retain();
        swift_retain();
        v183 = v181;
        v149 = sub_10015DA7C((uint64_t)v226, (uint64_t)v229, v225, (uint64_t)sub_10017F458, v177);
        (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v216, v180);
        sub_10001F544(v217, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
        sub_1000073A0((uint64_t)v214, (uint64_t *)&unk_100640EE0);
        sub_1000073A0((uint64_t)v222, &qword_100649E60);
        sub_10001F544((uint64_t)v213, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        swift_release();
        swift_release();
        return (uint64_t)v149;
      }
      sub_10001F544(v147, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
      v145 = (uint64_t *)&unk_100640EE0;
      sub_1000073A0(v93, (uint64_t *)&unk_100640EE0);
      v146 = v112;
    }
    sub_1000073A0(v146, &qword_100649E60);
    sub_10001F544(v113, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_1000073A0(v144, v145);
    swift_release();
    swift_release();
    return 0;
  }
  v229 = 0;
  v95 = (uint64_t)v214;
  if ((unint64_t)v86 >> 62)
  {
    if (v86 < 0)
      v184 = v86;
    else
      v184 = v86 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v86);
    v185 = sub_10002A750((uint64_t *)&unk_100649E80);
    v97 = _bridgeCocoaArray<A>(_:)(v184, v185);
    swift_bridgeObjectRelease(v86);
  }
  else
  {
    swift_bridgeObjectRetain(v86);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v96);
    v97 = v86;
  }
  v98 = v232;
  v99 = (uint64_t)v222;
  sub_1000073A0((uint64_t)v222, &qword_100649E60);
  v100 = (uint64_t)v212;
  *v212 = v97;
  *(_QWORD *)(v100 + 8) = v90;
  v101 = v225;
  swift_storeEnumTagMultiPayload(v100, v225, 0);
  v190(v100, 0, 1, v101);
  result = sub_10000F614(v100, v99, &qword_100649E60);
  if ((v86 & 0xC000000000000001) != 0)
  {
    v103 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v90, v86);
    v93 = v95;
    goto LABEL_23;
  }
  if ((v90 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v90 < *(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v93 = v95;
    v103 = (char *)*(id *)(v86 + 8 * v90 + 32);
LABEL_23:
    swift_bridgeObjectRelease(v86);
    sub_1000073A0(v93, (uint64_t *)&unk_100640EE0);
    v104 = (uint64_t)v204;
    (*(void (**)(char *, char *, uint64_t))(v231 + 16))(v204, &v103[direct field offset for TTRIQuickLookImageAttachmentPreviewItem.fileURL], v98);

    v105 = 1;
    v189(v104, 0, 1, v98);
    sub_10000F614(v104, v93, (uint64_t *)&unk_100640EE0);
    v106 = v215;
    v107 = v215[2];
    if (v107)
    {
      v108 = v223;
      v109 = (uint64_t)v215
           + ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80));
      sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
      v110 = *(_QWORD *)(v108 + 72);
      swift_bridgeObjectRetain(v106);
      while (1)
      {
        sub_10002B1E8(v109, (uint64_t)v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        if ((static NSObject.== infix(_:_:)(*v94, v89) & 1) != 0)
          break;
        sub_10001F544((uint64_t)v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        v109 += v110;
        if (!--v107)
        {
          swift_bridgeObjectRelease(v106);
          v105 = 1;
          v111 = v203;
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease(v106);
      v111 = v203;
      sub_10001F580((uint64_t)v94, v203, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
      v105 = 0;
    }
    else
    {
      v111 = v203;
    }
LABEL_31:
    v115 = v223;
    v116 = v105;
    v117 = v230;
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v223 + 56))(v111, v116, 1, v230);
    v118 = swift_bridgeObjectRelease(v106);
    v119 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, __n128))(v115 + 48))(v111, 1, v117, v118);
    v112 = (uint64_t)v222;
    v113 = (uint64_t)v213;
    if (v119 == 1)
    {
      sub_1000073A0(v111, &qword_100649E58);
      v120 = 0;
    }
    else
    {
      v120 = *(void **)(v111 + *((int *)v117 + 6));
      v121 = v120;
      sub_10001F544(v111, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
    }
    v122 = *(void **)(v202 + 16);
    *(_QWORD *)(v202 + 16) = v120;

    v123 = v205;
    v124 = static UTType.image.getter();
    v125 = UTType.identifier.getter(v124);
    v127 = v126;
    (*(void (**)(char *, uint64_t))(v206 + 8))(v123, v207);
    v128 = v201;
    v114 = *(_QWORD **)(v201 + 24);
    *(_QWORD *)(v201 + 16) = v125;
    *(_QWORD *)(v128 + 24) = v127;
    v88 = v225;
    v87 = v224;
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

void sub_1001590E4(uint64_t a1, void (**a2)(_QWORD), void **a3, char a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(_BYTE *);
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  void **v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  __n128 v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t (*v47)(uint64_t, _QWORD *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, __n128);
  __n128 v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  void **v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSString v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  NSString v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  void *Strong;
  void *v114;
  _BYTE v115[12];
  int v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  void (**v131)(_QWORD);
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  void **aBlock;
  uint64_t v137;
  void (*v138)(uint64_t, void *);
  void *v139;
  double (*v140)(uint64_t);
  _QWORD *v141;
  uint64_t v142[3];
  char v143[8];

  v126 = a5;
  v131 = a2;
  v130 = a1;
  v6 = a4 & 1;
  v7 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v7);
  v122 = &v115[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v121 = type metadata accessor for Date(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v118 = &v115[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v132 = type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType(0);
  v134 = *(_QWORD *)(v132 - 8);
  v10 = __chkstk_darwin(v132);
  v12 = &v115[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v115[-v13];
  v15 = sub_10002A750((uint64_t *)&unk_100653A90);
  v123 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v125 = &v115[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v16);
  v127 = &v115[-v19];
  v20 = __chkstk_darwin(v18);
  v22 = &v115[-v21];
  v124 = v23;
  __chkstk_darwin(v20);
  v128 = &v115[-v24];
  v25 = type metadata accessor for Logger(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = &v115[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v29 = sub_100012DC4(v25, (uint64_t)qword_100648980);
  v30 = *(void (**)(_BYTE *))(v26 + 16);
  v129 = v29;
  v30(v28);
  v31 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v31, v143);
  v33 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x6168547265646C6FLL;
  *(_QWORD *)(inited + 40) = 0xEF7368746E6F4D6ELL;
  v34 = v6;
  if ((_DWORD)v6)
  {
    v35 = a3;
    v39 = (uint64_t *)(inited + 48);
    *(_QWORD *)(inited + 72) = &type metadata for String;
  }
  else
  {
    v35 = a3;
    aBlock = a3;
    v36 = sub_10017EEF0();
    v37 = BinaryInteger.description.getter(&type metadata for Int, v36);
    v39 = (uint64_t *)(v33 + 48);
    *(_QWORD *)(v33 + 72) = &type metadata for String;
    if (v38)
    {
      *v39 = v37;
      goto LABEL_8;
    }
  }
  *v39 = 7104878;
  v38 = 0xE300000000000000;
LABEL_8:
  *(_QWORD *)(v33 + 56) = v38;
  v40 = sub_10002D32C(v33);
  sub_1000143B4((uint64_t)"Reminder list request delete completed reminders {olderThanMonths: %@}", 70, 2, v40);
  v41 = swift_bridgeObjectRelease(v40);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v26 + 8))(v28, v25, v41);
  v42 = v133;
  v44 = v133[17];
  v43 = (_QWORD *)v133[18];
  ObjectType = swift_getObjectType(v44, v45);
  v47 = (uint64_t (*)(uint64_t, _QWORD *))v43[6];
  v119 = ObjectType;
  v48 = v47(ObjectType, v43);
  if (v48)
  {
    v50 = v48;
    v51 = v49;
    v117 = v44;
    v52 = swift_getObjectType(v48, v49);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v51);
    swift_unknownObjectRelease(v50);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v134 + 32))(v14, v12, v132);
    TTRRemindersListViewModel.DeleteCompletedMenuItem.completeBeforeDateFromNow()(v130, v131, v35, v34);
    v131 = (void (**)(_QWORD))v43;
    v53 = v42;
    v54 = v128;
    sub_10000F614((uint64_t)v22, (uint64_t)v128, (uint64_t *)&unk_100653A90);
    v55 = v53[10];
    v57 = swift_getObjectType(v53[9], v56);
    v58 = (uint64_t)v54;
    v59 = v127;
    sub_10000735C(v58, (uint64_t)v127, (uint64_t *)&unk_100653A90);
    v60 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t, uint64_t))(v55 + 112))(v14, v59, v57, v55);
    v116 = v61;
    v130 = v60;
    sub_1000073A0((uint64_t)v59, (uint64_t *)&unk_100653A90);
    (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v14, v132);
    v62 = v53[29];
    v63 = *(_QWORD *)(v62 + 96);
    swift_beginAccess(v63 + 40, v142, 0, 0);
    v65 = *(_QWORD *)(v63 + 40);
    if (v65)
    {
      v66 = *(_QWORD *)(v63 + 48);
      v67 = swift_getObjectType(v65, v64);
      v68 = *(void (**)(uint64_t, uint64_t, __n128))(v66 + 24);
      v69 = swift_unknownObjectRetain(v65);
      v68(v67, v66, v69);
      swift_unknownObjectRelease(v65);
    }
    sub_10041C214(v62);
    v70 = v120;
    v71 = v128;
    v72 = v121;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v120 + 48))(v128, 1, v121))
    {
      v73 = 7104878;
      v74 = 0xE300000000000000;
    }
    else
    {
      v75 = v118;
      v76 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 16))(v118, v71, v72);
      v73 = Date.description.getter(v76);
      v74 = v77;
      (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v75, v72);
    }
    v78 = (uint64_t)v122;
    v79 = swift_bridgeObjectRetain_n(v74, 2);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.info.getter();
    v82 = os_log_type_enabled(v80, v81);
    v132 = v74;
    if (v82)
    {
      v83 = swift_slowAlloc(22, -1);
      v84 = (void **)swift_slowAlloc(32, -1);
      aBlock = v84;
      *(_DWORD *)v83 = 136315394;
      swift_bridgeObjectRetain(v74);
      v135 = sub_100027E40(v73, v74, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &aBlock, v83 + 4, v83 + 12);
      swift_bridgeObjectRelease_n(v74, 3);
      *(_WORD *)(v83 + 12) = 2048;
      v135 = v130;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &aBlock, v83 + 14, v83 + 22);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "Presenting confirmation alert for batch delete {olderThanDate: %s, reminderCountToBeDeleted: %ld}", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy(v84, 1, &type metadata for Any[8]);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v83, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v74, 2);
    }
    v131[17](v119);
    v85 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v78, 1, v85);
    v134 = v73;
    if (v86 == 1)
    {
      sub_1000073A0(v78, &qword_100649CA0);
      v87 = 0;
    }
    else
    {
      v87 = *(unsigned __int8 *)(v78 + *(int *)(v85 + 112));
      sub_10001F544(v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    v88 = v130;
    static TTRLocalizableStrings.RemindersList.deleteCompletedRemindersConfirmationText(withCount:isForGroceries:supportRecentlyDeletedList:)(v130, v87, v116 & 1);
    v90 = v89;
    v91 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v90);
    v92 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v91, 0, 0);

    static TTRLocalizableStrings.Common.alertCancelButton.getter(v93);
    v95 = v94;
    v96 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v95);
    v140 = sub_1001652D8;
    v141 = 0;
    aBlock = _NSConcreteStackBlock;
    v137 = 1107296256;
    v138 = sub_1000D4884;
    v139 = &unk_1005F4380;
    v97 = _Block_copy(&aBlock);
    swift_release();
    v98 = (void *)objc_opt_self(UIAlertAction);
    v131 = (void (**)(_QWORD))objc_msgSend(v98, "actionWithTitle:style:handler:", v96, 1, v97);
    _Block_release(v97);

    static TTRLocalizableStrings.RemindersList.deleteRemindersConfirmationText(withCount:isForGroceries:)(v88, v87);
    v100 = v99;
    v101 = swift_allocObject(&unk_1005F3738, 24, 7);
    v102 = v133;
    swift_weakInit(v101 + 16, v133);
    v103 = v125;
    sub_10000735C((uint64_t)v71, (uint64_t)v125, (uint64_t *)&unk_100653A90);
    v104 = *(unsigned __int8 *)(v123 + 80);
    v105 = (v104 + 40) & ~v104;
    v106 = (_QWORD *)swift_allocObject(&unk_1005F43B8, v105 + v124, v104 | 7);
    v107 = v132;
    v106[2] = v134;
    v106[3] = v107;
    v106[4] = v101;
    sub_10000F614((uint64_t)v103, (uint64_t)v106 + v105, (uint64_t *)&unk_100653A90);
    swift_retain();
    v108 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v100);
    v140 = sub_10017EEA8;
    v141 = v106;
    aBlock = _NSConcreteStackBlock;
    v137 = 1107296256;
    v138 = sub_1000D4884;
    v139 = &unk_1005F43D0;
    v109 = _Block_copy(&aBlock);
    v110 = objc_msgSend(v98, "actionWithTitle:style:handler:", v108, 2, v109, swift_release().n128_f64[0]);
    _Block_release(v109);
    swift_release();

    objc_msgSend(v92, "addAction:", v110);
    v111 = v131;
    objc_msgSend(v92, "addAction:");
    v112 = objc_msgSend(v92, "popoverPresentationController");
    objc_msgSend(v112, "setSourceItem:", v126);

    Strong = (void *)swift_unknownObjectWeakLoadStrong(v102[11] + 16);
    if (Strong)
    {
      v114 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v92, 1, 0);

      v92 = v111;
      v111 = v110;
      v110 = v114;
    }

    sub_1000073A0((uint64_t)v128, (uint64_t *)&unk_100653A90);
  }
}

void sub_100159DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void *v9;
  id v10;
  void *v11;
  NSString v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v5 = v4;
  ObjectType = swift_getObjectType(a3, a2);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(ObjectType, a4);
  v10 = objc_msgSend(v9, "objectID");

  v11 = (void *)objc_opt_self(TTRUndoManager);
  v12 = String._bridgeToObjectiveC()();
  v13 = (_QWORD *)swift_allocObject(&unk_1005F4318, 48, 7);
  v13[2] = v5;
  v13[3] = v10;
  v13[4] = a3;
  v13[5] = a4;
  v14 = swift_allocObject(&unk_1005F4340, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_10017EDE4;
  *(_QWORD *)(v14 + 24) = v13;
  v17[4] = sub_1000381EC;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10001B258;
  v17[3] = &unk_1005F4358;
  v15 = _Block_copy(v17);
  swift_retain();
  v16 = v10;
  swift_unknownObjectRetain(a3);
  swift_retain();
  objc_msgSend(v11, "withActionName:block:", v12, v15, swift_release().n128_f64[0]);

  _Block_release(v15);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v14, "", 136, 3436, 51, 1);
  swift_release();
  swift_release();
  if ((v16 & 1) != 0)
    __break(1u);
}

uint64_t sub_100159F64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *Strong;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  UIPopoverArrowDirection v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  Swift::String v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  void *v85;
  void *v86;
  Swift::String v87;
  Swift::String v88;
  NSString v89;
  uint64_t v90;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118[10];
  _QWORD v119[8];
  _QWORD v120[8];
  _OWORD v121[2];
  _BYTE v122[25];
  __int128 v123;
  __int128 v124;
  _OWORD v125[3];
  id v126;

  LODWORD(v107) = a8;
  v105 = a6;
  v106 = a7;
  v103 = a2;
  v104 = a5;
  v112 = a4;
  v18 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v109 = *(_QWORD *)(v18 - 8);
  v110 = v18;
  __chkstk_darwin(v18);
  v93 = v19;
  v94 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002A750(&qword_100642D18);
  v102 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v101 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for REMNavigationSpecifier(0);
  v114 = *(_QWORD *)(v26 - 8);
  v115 = v26;
  __chkstk_darwin(v26);
  v113 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = a3;
  v28 = a3 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v28);
  v126 = a1;
  if (Strong
    && (v30 = objc_msgSend(Strong, "navigationController"), Strong,
                                                                                                v30)
    || (v30 = (id)swift_unknownObjectWeakLoadStrong(v28)) != 0)
  {
    v99 = v20;
    v100 = v15;
    v111 = v30;
    v96 = a12;
    v97 = a11;
    v98 = a10;
    v95 = a9;
    v31 = sub_10002A750((uint64_t *)&unk_100642D20);
    v32 = v113;
    v33 = &v113[*(int *)(v31 + 48)];
    v34 = v126;
    *(_QWORD *)v32 = objc_msgSend(v126, "objectID");
    v92 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
    v92(v33, v112, v110);
    v35 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.showDetail(_:);
    v36 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v33, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v32, enum case for REMNavigationSpecifier.reminder(_:), v115);
    if (qword_10063D358 != -1)
      swift_once(&qword_10063D358, sub_10009EA10);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_100012DC4(v37, (uint64_t)qword_100642B30);
    REMNavigationSpecifier.url.getter(v38);
    sub_1002EB730(0x7265646E696D6552, 0xEE007473694C2073, 0x7265646E696D6552, 0xEF6C696174654420, (uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    type metadata accessor for TTRIReminderDetailAssembly(0);
    TTRReminderDetailPendingMoveInteractorCapability.PendingMoveContext.init(persistLastSelectedListID:customSmartListToMatch:)(v118, 0, 0, 0);
    v39 = (void *)static TTRIReminderDetailAssembly.createViewController(subject:delegate:style:savesOnCommit:itemCount:pendingMoveContext:ttrSectionLite:manualOrdering:)(v34, v103, v104, v105, v106, v107, v95 & 1, v98, v118, v97, v96);
    v41 = v40;
    v43 = v42;
    sub_1000A2754(v118);
    v44 = objc_allocWithZone((Class)UINavigationController);
    v107 = v39;
    v45 = objc_msgSend(v44, "initWithRootViewController:", v39);
    sub_10001413C(a13, a13[3]);
    sub_1003E3A18(v119);
    sub_10000F614((uint64_t)v119, (uint64_t)v121, &qword_100642D10);
    if ((~v122[8] & 0xFE) != 0)
    {
      v123 = v121[0];
      v124 = v121[1];
      v125[0] = *(_OWORD *)v122;
      *(_OWORD *)((char *)v125 + 9) = *(_OWORD *)&v122[9];
      v46 = UIPopoverArrowDirection.addingRTLFallback()();
      TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)(v120, v46);
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v120);
      sub_10008C9D8((uint64_t)v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866C4);
    }
    v47 = v108;
    swift_unknownObjectWeakAssign(v108 + 56, v45);
    *(_QWORD *)(v47 + 32) = v43;
    swift_unknownObjectWeakAssign(v47 + 24, v41);
    v48 = objc_msgSend(v45, "presentationController");
    if (v48)
    {
      v50 = v48;
      ObjectType = swift_getObjectType(v41, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 88))(v50, a14 & 1, ObjectType, v43);

    }
    v106 = v45;
    if ((a15 & 1) != 0)
    {
      v116 = UIViewController.futureForPresenting(_:animated:)(v45, 1);
      v52 = sub_10002A750((uint64_t *)&unk_100649C60);
      v53 = sub_10002A750((uint64_t *)&unk_100642D30);
      v54 = sub_100023FEC((unint64_t *)&unk_100649C70, (uint64_t *)&unk_100642D30, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v55 = v101;
      Publisher<>.setFailureType<A>(to:)(v52, v53, v52, v54, &protocol self-conformance witness table for Error);
      swift_release();
      v56 = sub_100023FEC((unint64_t *)&unk_100642D40, &qword_100642D18, (uint64_t)&protocol conformance descriptor for Publishers.SetFailureType<A, B>);
      v57 = v99;
      Publisher<>.legacyPromise()(v99, v56);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v57);
      v58 = v94;
      v59 = v110;
      v92(v94, v112, v110);
      v60 = v109;
      v61 = *(unsigned __int8 *)(v109 + 80);
      v62 = (v61 + 32) & ~v61;
      v63 = swift_allocObject(&unk_1005F3878, v62 + v93, v61 | 7);
      *(_QWORD *)(v63 + 16) = v41;
      *(_QWORD *)(v63 + 24) = v43;
      (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v63 + v62, v58, v59);
      v64 = swift_allocObject(&unk_1005F38A0, 32, 7);
      *(_QWORD *)(v64 + 16) = sub_10017A2CC;
      *(_QWORD *)(v64 + 24) = v63;
      swift_unknownObjectRetain(v41);
      v66 = (void *)zalgo.getter(v65);
      v67 = dispatch thunk of Promise.then<A>(on:closure:)(v66, sub_10019C880, v64, &type metadata for Any[8]);
      swift_release();
      swift_release();

      sub_10017C154((uint64_t)v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);
      swift_unknownObjectRelease(v41);
    }
    else
    {
      v68 = swift_getObjectType(v41, v49);
      v69 = (*(uint64_t (**)(uint64_t, _QWORD, char *, char *, uint64_t, uint64_t))(v43 + 96))(v112, 0, &type metadata for Any[8], &type metadata for Any[8], v68, v43);
      v116 = UIViewController.futureForPresenting(_:animated:)(v45, 1);
      v70 = sub_10002A750((uint64_t *)&unk_100649C60);
      v71 = sub_10002A750((uint64_t *)&unk_100642D30);
      v72 = sub_100023FEC((unint64_t *)&unk_100649C70, (uint64_t *)&unk_100642D30, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v73 = v101;
      Publisher<>.setFailureType<A>(to:)(v70, v71, v70, v72, &protocol self-conformance witness table for Error);
      swift_release();
      v74 = sub_100023FEC((unint64_t *)&unk_100642D40, &qword_100642D18, (uint64_t)&protocol conformance descriptor for Publishers.SetFailureType<A, B>);
      v75 = v99;
      Publisher<>.legacyPromise()(v99, v74);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v73, v75);
      v76 = swift_allocObject(&unk_1005F3850, 32, 7);
      *(_QWORD *)(v76 + 16) = sub_10017A228;
      *(_QWORD *)(v76 + 24) = v69;
      v77 = swift_retain();
      v78 = (void *)zalgo.getter(v77);
      v67 = dispatch thunk of Promise.then<A>(on:closure:)(v78, sub_10017A230, v76, &type metadata for Any[8]);

      sub_10017C154((uint64_t)v119, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);
      swift_unknownObjectRelease(v41);
      swift_release();
      swift_release();
      swift_release();

    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
  }
  else
  {
    v79 = (void *)objc_opt_self(REMError);
    v116 = 0;
    v117 = 0xE000000000000000;
    _StringGuts.grow(_:)(79);
    v80._object = (void *)0x8000000100563700;
    v80._countAndFlagsBits = 0xD00000000000004BLL;
    String.append(_:)(v80);
    v81 = v126;
    v82 = objc_msgSend(v126, "objectID");
    v83 = objc_msgSend(v82, "description");
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v86 = v85;

    v87._countAndFlagsBits = v84;
    v87._object = v86;
    String.append(_:)(v87);

    swift_bridgeObjectRelease(v86);
    v88._countAndFlagsBits = 32041;
    v88._object = (void *)0xE200000000000000;
    String.append(_:)(v88);
    v67 = v117;
    v89 = String._bridgeToObjectiveC()();
    objc_msgSend(v79, "internalErrorWithDebugDescription:", v89, swift_bridgeObjectRelease(v67).n128_f64[0]);

    swift_willThrow(v90);
  }
  return v67;
}

uint64_t sub_10015A89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100648980);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100648980);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10015A92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 296))(a1, 0, 0, a2, a3);
}

uint64_t sub_10015A944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_10015324C(0x6843656C61636F6CLL, 0xED00006465676E61);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_10015A9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    v7 = *(_QWORD *)(v5 + 24);
    result = swift_release(v5);
    if (Strong)
    {
      ObjectType = swift_getObjectType(Strong, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 168))(a1, ObjectType, v7);
      return swift_unknownObjectRelease(Strong);
    }
  }
  return result;
}

uint64_t sub_10015AA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a6;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 32) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)(v6 + 48) = v10;
  return swift_task_switch(sub_10015AABC, v9, v10);
}

uint64_t sub_10015AABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v2, v6 + v4, v5 | 7);
  *(_QWORD *)(v0 + 56) = v7;
  *(_OWORD *)(v7 + 16) = xmmword_100520250;
  sub_10002B1E8(v1, v7 + v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v8 = (_QWORD *)swift_task_alloc(dword_10064A75C);
  *(_QWORD *)(v0 + 64) = v8;
  *v8 = v0;
  v8[1] = sub_10015AB90;
  return sub_1001A04C4(*(_BYTE *)(v0 + 72), v7, 0);
}

uint64_t sub_10015AB90(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 64);
  *(_BYTE *)(*v1 + 73) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10015ABF0, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10015ABF0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 73);
  v2 = *(unsigned __int8 *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 32));
  if (v1 == 1 && v2 != 0)
  {
    v5 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v5 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v5 + 136), v3);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(ObjectType, v6);
    if (v8)
    {
      v10 = v8;
      v11 = v9;
      v12 = swift_getObjectType(v8, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(2, v12, v11);
      swift_unknownObjectRelease(v10);
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015AC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[8] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[9] = v10;
  v7[10] = v11;
  return swift_task_switch(sub_10015ACEC, v10, v11);
}

uint64_t sub_10015ACEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v0 + 96) = v4;
  LODWORD(v3) = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 120) = v3;
  v3 = v3;
  v5 = (v3 + 32) & ~v3;
  v6 = swift_allocObject(v2, v5 + v4, v3 | 7);
  *(_QWORD *)(v0 + 104) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_100520250;
  sub_10002B1E8(v1, v6 + v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v7 = (_QWORD *)swift_task_alloc(dword_10064A7C4);
  *(_QWORD *)(v0 + 112) = v7;
  *v7 = v0;
  v7[1] = sub_10015ADC8;
  return sub_1001A1B88(v6, 0);
}

uint64_t sub_10015ADC8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 112);
  *(_BYTE *)(*v1 + 124) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_10015AE28, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_10015AE28()
{
  uint64_t v0;
  int v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t **v13;

  v1 = *(unsigned __int8 *)(v0 + 124);
  v2 = swift_release();
  if (v1 == 1)
  {
    v3 = *(unsigned __int8 *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = (v3 + 32) & ~v3;
    v7 = swift_allocObject(*(_QWORD *)(v0 + 88), v6 + *(_QWORD *)(v0 + 96), v3 | 7);
    *(_OWORD *)(v7 + 16) = xmmword_100520250;
    sub_10002B1E8(v4, v7 + v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)(v0 + 16) = v7;
    v8 = sub_10002A750(&qword_100649DF0);
    v9 = sub_100005ED8(0, &qword_100649ED8, REMAccountCapabilities_ptr);
    v10 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
    v11 = sub_100017608((unint64_t *)&qword_100649EE8, &qword_100649ED8, REMAccountCapabilities_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v12 = Sequence.compactMapToSet<A>(_:)(sub_100180628, v5, v8, v9, v10, v11);
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v5 + 128);
    swift_retain();
    v13 = sub_1002AC13C(v12);
    swift_bridgeObjectRelease(v12);
    type metadata accessor for TTRIPrivacyChecker(0);
    TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)((Swift::OpaquePointer)v13);
    swift_release();
    swift_release();
    v2 = swift_bridgeObjectRelease(v7);
  }
  (*(void (**)(_QWORD, __n128))(v0 + 48))(*(unsigned __int8 *)(v0 + 124), v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10015B0AC(_OWORD *a1, uint64_t a2, uint64_t a3, NSString a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  Swift::String v18;
  unint64_t v19;
  Swift::String v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  NSString v41;
  void *v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  NSString v60;
  void *v61;
  void *v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  NSString v72;
  void *v73;
  id v74;
  Swift::String v75;
  Swift::String v76;
  void *v77;
  NSString v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t countAndFlagsBits;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void **v94;
  uint64_t v95;
  void (*v96)(uint64_t, void *);
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[112];
  uint64_t v103;
  unint64_t v104;
  char v105;

  v90 = a6;
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v89 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v89 + 64);
  __chkstk_darwin(v13);
  v91 = (char *)&countAndFlagsBits - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2 + 16;
  swift_beginAccess(a2 + 16, &v101, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v17 = Strong;
    v87 = a7;
    if (a4)
    {
      v103 = 34;
      v104 = 0xE100000000000000;
      v18._countAndFlagsBits = a3;
      v18._object = a4;
      String.append(_:)(v18);
      v19 = v104;
      swift_bridgeObjectRetain(v104);
      v20._countAndFlagsBits = 34;
      v20._object = (void *)0xE100000000000000;
      String.append(_:)(v20);
      v21 = swift_bridgeObjectRelease(v19);
      v22 = v104;
      TTRAssignment.assignmentString.getter(v21);
      v24 = v23;
      if (v22)
      {
        a4 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v22);
      }
      else
      {
        a4 = 0;
      }
    }
    else
    {
      ((void (*)(void))TTRAssignment.assignmentString.getter)();
      v24 = v25;
    }
    v86 = a5;
    v88 = v17;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v27 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", a4, v26, 0);

    if ((a1[6] & 1) == 0
      || (sub_10000F614((uint64_t)(a1 + 7), (uint64_t)v102, &qword_10064A088),
          sub_10000F614((uint64_t)v102, (uint64_t)&v103, &qword_10064A088),
          !v103)
      || (v105 & 1) == 0)
    {
      v28._countAndFlagsBits = 0xD000000000000033;
      v28._object = (void *)0x8000000100567FA0;
      v29._countAndFlagsBits = 0x6E6F432077656956;
      v29._object = (void *)0xEC00000074636174;
      object = TTRLocalizedString(_:comment:)(v29, v28)._object;
      v31 = swift_allocObject(&unk_1005F3738, 24, 7);
      swift_beginAccess(v15, &v100, 0, 0);
      v32 = swift_weakLoadStrong(v15);
      swift_weakInit(v31 + 16, v32);
      swift_release();
      v33 = swift_allocObject(&unk_1005F4DB8, 248, 7);
      v34 = a1[11];
      *(_OWORD *)(v33 + 184) = a1[10];
      *(_OWORD *)(v33 + 200) = v34;
      v35 = a1[13];
      *(_OWORD *)(v33 + 216) = a1[12];
      *(_OWORD *)(v33 + 232) = v35;
      v36 = a1[7];
      *(_OWORD *)(v33 + 120) = a1[6];
      *(_OWORD *)(v33 + 136) = v36;
      v37 = a1[9];
      *(_OWORD *)(v33 + 152) = a1[8];
      *(_OWORD *)(v33 + 168) = v37;
      v38 = a1[3];
      *(_OWORD *)(v33 + 56) = a1[2];
      *(_OWORD *)(v33 + 72) = v38;
      v39 = a1[5];
      *(_OWORD *)(v33 + 88) = a1[4];
      *(_OWORD *)(v33 + 104) = v39;
      v40 = a1[1];
      *(_OWORD *)(v33 + 24) = *a1;
      *(_QWORD *)(v33 + 16) = v31;
      *(_OWORD *)(v33 + 40) = v40;
      swift_retain();
      sub_100182638((uint64_t)a1);
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v98 = sub_10018262C;
      v99 = v33;
      v94 = _NSConcreteStackBlock;
      v95 = 1107296256;
      v96 = sub_1000D4884;
      v97 = &unk_1005F4DD0;
      v42 = _Block_copy(&v94);
      swift_release();
      v43 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v41, 0, v42);
      _Block_release(v42);
      swift_release();

      objc_msgSend(v27, "addAction:", v43);
    }
    v44._countAndFlagsBits = 0xD00000000000002FLL;
    v44._object = (void *)0x8000000100567FE0;
    v45._countAndFlagsBits = 0x6E67697373616552;
    v45._object = (void *)0xE800000000000000;
    v46 = TTRLocalizedString(_:comment:)(v45, v44);
    countAndFlagsBits = v46._countAndFlagsBits;
    v47 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_beginAccess(v15, &v93, 0, 0);
    v48 = swift_weakLoadStrong(v15);
    swift_weakInit(v47 + 16, v48);
    swift_release();
    v49 = (uint64_t)v91;
    sub_10002B1E8(v90, (uint64_t)v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v50 = *(unsigned __int8 *)(v89 + 80);
    v51 = (v50 + 32) & ~v50;
    v52 = (v14 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject(&unk_1005F4E08, v52 + 8, v50 | 7);
    v90 = v15;
    v54 = v27;
    v55 = v86;
    *(_QWORD *)(v53 + 16) = v47;
    *(_QWORD *)(v53 + 24) = v55;
    sub_10001F580(v49, v53 + v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v56 = v87;
    *(_QWORD *)(v53 + v52) = v87;
    swift_retain();
    v57 = v55;
    v58 = v54;
    v59 = v57;
    v91 = v56;
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v46._object);
    v98 = sub_100182BA4;
    v99 = v53;
    v94 = _NSConcreteStackBlock;
    v95 = 1107296256;
    v96 = sub_1000D4884;
    v97 = &unk_1005F4E20;
    v61 = _Block_copy(&v94);
    swift_release();
    v62 = (void *)objc_opt_self(UIAlertAction);
    v63 = objc_msgSend(v62, "actionWithTitle:style:handler:", v60, 0, v61);
    _Block_release(v61);
    swift_release();

    objc_msgSend(v54, "addAction:", v63);
    v64._countAndFlagsBits = 0xD000000000000038;
    v65._object = (void *)0x8000000100568010;
    v64._object = (void *)0x8000000100568030;
    v65._countAndFlagsBits = 0xD000000000000011;
    v66 = TTRLocalizedString(_:comment:)(v65, v64)._object;
    v67 = swift_allocObject(&unk_1005F3738, 24, 7);
    v68 = v90;
    swift_beginAccess(v90, &v92, 0, 0);
    v69 = swift_weakLoadStrong(v68);
    swift_weakInit(v67 + 16, v69);
    swift_release();
    v70 = swift_allocObject(&unk_1005F4E58, 32, 7);
    *(_QWORD *)(v70 + 16) = v67;
    *(_QWORD *)(v70 + 24) = v59;
    v71 = v59;
    swift_retain();
    v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v66);
    v98 = sub_100182C28;
    v99 = v70;
    v94 = _NSConcreteStackBlock;
    v95 = 1107296256;
    v96 = sub_1000D4884;
    v97 = &unk_1005F4E70;
    v73 = _Block_copy(&v94);
    v74 = objc_msgSend(v62, "actionWithTitle:style:handler:", v72, 2, v73, swift_release().n128_f64[0]);
    _Block_release(v73);
    swift_release();

    objc_msgSend(v58, "addAction:", v74);
    v75._countAndFlagsBits = 0xD000000000000020;
    v75._object = (void *)0x8000000100568070;
    v76._countAndFlagsBits = 0x6C65636E6143;
    v76._object = (void *)0xE600000000000000;
    v77 = TTRLocalizedString(_:comment:)(v76, v75)._object;
    v78 = String._bridgeToObjectiveC()();
    v79 = objc_msgSend(v62, "actionWithTitle:style:handler:", v78, 1, 0, swift_bridgeObjectRelease(v77).n128_f64[0]);

    objc_msgSend(v58, "addAction:", v79);
    v80 = objc_msgSend(v58, "popoverPresentationController");
    if (v80)
    {
      v81 = v80;
      objc_msgSend(v80, "setSourceView:", v91);

    }
    v82 = *(_QWORD *)(v88 + 88);
    v83 = (void *)swift_unknownObjectWeakLoadStrong(v82 + 16);
    if (v83)
    {
      v84 = v83;
      objc_msgSend(v83, "presentViewController:animated:completion:", v58, 1, 0, swift_unknownObjectRetain(v82).n128_f64[0]);

      swift_unknownObjectRelease(v82);
      swift_release();

    }
    else
    {

      swift_release();
    }
  }
}

void sub_10015B8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  _QWORD v23[6];
  _BYTE v24[24];
  _BYTE v25[112];
  uint64_t v26;
  void *v27;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    if ((*(_BYTE *)(a3 + 96) & 1) != 0)
    {
      sub_10000F614(a3 + 112, (uint64_t)v25, &qword_10064A088);
      sub_10000F614((uint64_t)v25, (uint64_t)&v26, &qword_10064A088);
      if (!v26)
        goto LABEL_10;
      v7 = v27;
      if (!v27)
        goto LABEL_10;
    }
    else
    {
      v7 = *(void **)(a3 + 8);
      if (!v7)
      {
LABEL_10:
        swift_release();
        return;
      }
    }
    v8 = (void *)objc_opt_self(CNContactViewController);
    v9 = v7;
    v10 = objc_msgSend(v8, "viewControllerForContact:", v9);
    v11 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v10);
    v12 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v6, "dismissViewContact:");
    v13 = objc_msgSend(v10, "navigationItem");
    objc_msgSend(v13, "setLeftBarButtonItem:", v12);

    v14 = *(_QWORD *)(v6 + 88);
    v15 = (void *)swift_unknownObjectWeakLoadStrong(v14 + 16);
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, "presentedViewController", swift_unknownObjectRetain(v14).n128_f64[0]);
      if (v17)
      {
        v18 = v17;
        v19 = swift_allocObject(&unk_1005F4EA8, 33, 7);
        *(_QWORD *)(v19 + 16) = v16;
        *(_QWORD *)(v19 + 24) = v11;
        *(_BYTE *)(v19 + 32) = 1;
        v23[4] = sub_10019C898;
        v23[5] = v19;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 1107296256;
        v23[2] = sub_100006378;
        v23[3] = &unk_1005F4EC0;
        v20 = _Block_copy(v23);
        v21 = v16;
        v22 = v11;
        objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, v20, swift_release().n128_f64[0]);

        _Block_release(v20);
        swift_unknownObjectRelease(v14);
        swift_release();

      }
      else
      {
        objc_msgSend(v16, "presentViewController:animated:completion:", v11, 1, 0);

        swift_unknownObjectRelease(v14);
        swift_release();

      }
    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_10015BBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  void *v42;
  _BYTE v43[24];
  _OWORD v44[2];
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  char v48;

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v43, 0, 0);
  result = swift_weakLoadStrong(v8);
  if (result)
  {
    v11 = (_QWORD *)result;
    v12 = *(_QWORD *)(result + 80);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + 72), v10);
    v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 160))(a3, ObjectType, v12);
    v14 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject(v14, v18 + *(_QWORD *)(v16 + 72), v17 | 7);
    v20 = v19 + v18;
    sub_10002B1E8(a4, v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v44, a5, 0, 1, v21);
    v40 = v44[1];
    v41 = v44[0];
    v38 = v46;
    v39 = v45;
    v22 = v47;
    v23 = v48;
    v24 = *(_QWORD *)((char *)v11
                    + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
    v25 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
    v26 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v27 = v26 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
    sub_10002B1E8(v20, v26 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
    v28 = v26 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
    *(_OWORD *)v28 = v41;
    *(_OWORD *)(v28 + 16) = v40;
    *(_QWORD *)(v28 + 32) = v39;
    *(_QWORD *)(v28 + 40) = v38;
    *(_QWORD *)(v28 + 48) = v22;
    *(_BYTE *)(v28 + 56) = v23;
    *(_QWORD *)(v26
              + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v24;
    swift_setDeallocating(v19);
    swift_retain();
    swift_arrayDestroy(v20, 1, v15);
    swift_deallocClassInstance(v19, 32, 7);
    v29 = type metadata accessor for ReminderDetailModuleDelegate();
    v30 = swift_allocObject(v29, 40, 7);
    v31 = swift_weakInit(v30 + 16, 0);
    *(_QWORD *)(v30 + 24) = 0;
    *(_QWORD *)(v30 + 32) = 0;
    swift_weakAssign(v31, v11);
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v30 + 24) = 0;
    *(_QWORD *)(v30 + 32) = 0;
    sub_1000381B8(v32, v33);
    v34 = v11[45];
    v11[45] = v30;
    v11[46] = &off_1005F2F80;
    swift_unknownObjectRelease(v34);
    v35 = v11[11];
    v36 = v11[45];
    v37 = v11[46];
    swift_unknownObjectRetain(v36);
    sub_100174290(v42, 1, 1, v36, v37, v26, v35);
    swift_release();
    swift_release();

    return swift_unknownObjectRelease(v36);
  }
  return result;
}

uint64_t sub_10015BE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  _BYTE v12[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 72);
    v9 = *(_QWORD *)(result + 80);
    ObjectType = swift_getObjectType(v8, v6);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 576);
    swift_unknownObjectRetain(v8);
    v11(a3, ObjectType, v9);
    swift_release(v7);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_10015BF04(void *a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD), void **a5, char a6)
{
  uint64_t v11;
  uint64_t result;
  id v13;
  _BYTE v14[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v13 = objc_msgSend(a1, "presentationSourceItem");
    sub_1001590E4(a3, a4, a5, a6 & 1, (uint64_t)v13);
    swift_release();
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

double sub_10015BFBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _BYTE v19[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v10 = *(_QWORD *)(Strong + 232);
    v11 = *(_QWORD *)(v10 + 96);
    swift_beginAccess(v11 + 40, &v18, 0, 0);
    v13 = *(_QWORD *)(v11 + 40);
    if (v13)
    {
      v14 = *(_QWORD *)(v11 + 48);
      ObjectType = swift_getObjectType(v13, v12);
      v16 = *(void (**)(uint64_t, uint64_t, __n128))(v14 + 24);
      v17 = swift_unknownObjectRetain(v13);
      v16(ObjectType, v14, v17);
      swift_unknownObjectRelease(v13);
    }
    sub_10041C214(v10);
    swift_retain();
    sub_1001A4878(a3, a1, a4);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10015C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v39, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(Strong + 232);
    v14 = *(_QWORD *)(v13 + 96);
    swift_beginAccess(v14 + 40, v38, 0, 0);
    v16 = *(_QWORD *)(v14 + 40);
    if (v16)
    {
      v17 = *(_QWORD *)(v14 + 48);
      ObjectType = swift_getObjectType(v16, v15);
      v19 = *(void (**)(uint64_t, uint64_t, __n128))(v17 + 24);
      v20 = swift_unknownObjectRetain(v16);
      v19(ObjectType, v17, v20);
      swift_unknownObjectRelease(v16);
    }
    sub_10041C214(v13);
    if (a2)
    {
      v21 = *(_QWORD *)(v12 + 232);
      v22 = *(_QWORD *)(v21 + 96);
      swift_beginAccess(v22 + 40, v37, 0, 0);
      v24 = *(_QWORD *)(v22 + 40);
      if (v24)
      {
        v25 = *(_QWORD *)(v22 + 48);
        v26 = swift_getObjectType(v24, v23);
        v27 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 24);
        v28 = swift_unknownObjectRetain(v24);
        v27(v26, v25, v28);
        swift_unknownObjectRelease(v24);
      }
      sub_10041C214(v21);
      sub_1001ACF1C(a4, a1, a2, a5, 0, 0, 1, 0, 0);
    }
    else
    {
      v29 = *(_QWORD *)(v12 + 232);
      v30 = *(_QWORD *)(v29 + 96);
      swift_beginAccess(v30 + 40, v37, 0, 0);
      v32 = *(_QWORD *)(v30 + 40);
      if (v32)
      {
        v33 = *(_QWORD *)(v30 + 48);
        v34 = swift_getObjectType(v32, v31);
        v35 = *(void (**)(uint64_t, uint64_t, __n128))(v33 + 24);
        v36 = swift_unknownObjectRetain(v32);
        v35(v34, v33, v36);
        swift_unknownObjectRelease(v32);
      }
      sub_10041C214(v29);
      sub_1001ACF1C(a4, 0, 0xE000000000000000, a5, 0, 1, 1, 0, 0);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10015C2A0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double result;
  _BYTE v26[24];

  v8 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v26, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v12 = Strong;
    v13 = objc_msgSend(a4, "list");
    v14 = objc_msgSend(v13, "groceryContext");

    if (v14)
    {
      v15 = objc_msgSend(v14, "groceryLocaleID");
      if (v15)
      {
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v19 = v18;

        v20 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
        type metadata accessor for MainActor(0);
        swift_retain();
        v21 = swift_retain();
        v22 = static MainActor.shared.getter(v21);
        v23 = (_QWORD *)swift_allocObject(&unk_1005F4D40, 72, 7);
        v23[2] = v22;
        v23[3] = &protocol witness table for MainActor;
        v23[4] = v12;
        v23[5] = v17;
        v23[6] = v19;
        v23[7] = a1;
        v23[8] = a2;
        sub_100148388((uint64_t)v10, (uint64_t)&unk_10064A048, (uint64_t)v23, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
        swift_release();
        swift_release();

        return result;
      }

    }
    a1(_swiftEmptyArrayStorage);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  else
  {
    a1(_swiftEmptyArrayStorage);
  }
  return result;
}

uint64_t sub_10015C49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[7] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v8[8] = v11;
  v8[9] = v12;
  return swift_task_switch(sub_10015C510, v11, v12);
}

uint64_t sub_10015C510(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  v3 = v2[2];
  v4 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  v6 = *(int **)(v4 + 544);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[10] = v7;
  *v7 = v2;
  v7[1] = sub_10015C590;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v9)(v2[3], v2[4], ObjectType, v4);
}

uint64_t sub_10015C590(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10015C5E8, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_10015C5E8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(uint64_t))(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  v2(v1);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015C638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 88) = a5;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a6;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 56) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v6 + 64) = v9;
  *(_QWORD *)(v6 + 72) = v10;
  return swift_task_switch(sub_10015C6A8, v9, v10);
}

uint64_t sub_10015C6A8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064A75C);
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_10015C704;
  return sub_1001A04C4(*(_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 48), 1);
}

uint64_t sub_10015C704()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_10015C750, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10015C750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v2 = *(_QWORD *)(v1 + 232);
  v3 = *(_QWORD *)(v2 + 96);
  swift_beginAccess(v3 + 40, v0 + 16, 0, 0);
  v5 = *(_QWORD *)(v3 + 40);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 48);
    ObjectType = swift_getObjectType(v5, v4);
    v8 = *(void (**)(uint64_t, uint64_t, __n128))(v6 + 24);
    v9 = swift_unknownObjectRetain(v5);
    v8(ObjectType, v6, v9);
    swift_unknownObjectRelease(v5);
  }
  sub_10041C214(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_10015C7F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v20 = _swiftEmptyArrayStorage;
  sub_1003D7FFC(0, v5, 0);
  v18 = a1;
  if (v5)
  {
    v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v7 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_10002B1E8(v6, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v8 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v9 = TTRTreeStorageItem.treeItemDescription.getter(v19, v8);
      v11 = v10;
      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_1003D7FFC(0, v12[2] + 1, 1);
        v12 = v20;
      }
      v14 = v12[2];
      v13 = v12[3];
      if (v14 >= v13 >> 1)
      {
        sub_1003D7FFC(v13 > 1, v14 + 1, 1);
        v12 = v20;
      }
      v12[2] = v14 + 1;
      v15 = &v12[2 * v14];
      v15[4] = v9;
      v15[5] = v11;
      v6 += v7;
      --v5;
    }
    while (v5);
  }
  else
  {
    v12 = v20;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(v18);
  return v12;
}

uint64_t sub_10015C99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[5] = v8;
  v5[6] = v9;
  return swift_task_switch(sub_10015CA08, v8, v9);
}

uint64_t sub_10015CA08()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064A7C4);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_10015CA60;
  return sub_1001A1B88(*(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_10015CA60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_100049824, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10015CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_10015CB18, v7, v8);
}

uint64_t sub_10015CB18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + 128);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)
                                  + 1));
  v0[7] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10015CB8C;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10015CB8C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_10019C6D4, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_10015CBD8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  void *v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  void *v46;
  id v47;
  const void *v48;
  void *v49;
  id v50;
  void *v51;
  void *Strong;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void **aBlock;
  uint64_t v65;
  void (*v66)(uint64_t, void *);
  void *v67;
  void *v68;
  uint64_t v69;

  v5 = v4;
  v62 = a4;
  v58 = a3;
  v59 = a1;
  v6 = a2;
  v56 = a2;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TTRLocalizableStrings.Alerts.updateRecurringReminderConfirmationTitle(isUpdatingMoreThanOneReminder:)(0);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v61 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, 0, 1);

  static TTRLocalizableStrings.Alerts.updateRecurringReminderThisInstanceButton(isUpdatingMoreThanOneReminder:)(0);
  v16 = v15;
  v17 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v17 + 16, v5);
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = v19 + v10;
  v21 = v18 | 7;
  v22 = (v19 + v10) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 8;
  v57 = v22 + 8;
  v54 = v22 + 24;
  v55 = v21;
  v24 = swift_allocObject(&unk_1005F4B10, v22 + 24, v21);
  *(_QWORD *)(v24 + 16) = v17;
  sub_10001F580((uint64_t)v11, v24 + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_BYTE *)(v24 + v20) = v6;
  v25 = (_QWORD *)(v24 + v23);
  v26 = v58;
  v27 = v62;
  *v25 = v58;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v68 = sub_10018134C;
  v69 = v24;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_1000D4884;
  v67 = &unk_1005F4B28;
  v29 = _Block_copy(&aBlock);
  swift_release();
  v30 = (void *)objc_opt_self(UIAlertAction);
  v60 = objc_msgSend(v30, "actionWithTitle:style:handler:", v28, 0, v29);
  _Block_release(v29);
  swift_release();

  static TTRLocalizableStrings.Alerts.updateRecurringReminderAllFutureInstancesButton.getter();
  v32 = v31;
  v33 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v33 + 16, v63);
  sub_10002B1E8(v59, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v34 = swift_allocObject(&unk_1005F4B60, v54, v55);
  *(_QWORD *)(v34 + 16) = v33;
  sub_10001F580((uint64_t)v11, v34 + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_BYTE *)(v34 + v20) = v56;
  v35 = (_QWORD *)(v34 + v57);
  v36 = v26;
  *v35 = v26;
  v37 = v62;
  v35[1] = v62;
  swift_retain();
  swift_retain();
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v68 = sub_100181738;
  v69 = v34;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_1000D4884;
  v67 = &unk_1005F4B78;
  v39 = _Block_copy(&aBlock);
  v40 = objc_msgSend(v30, "actionWithTitle:style:handler:", v38, 0, v39, swift_release().n128_f64[0]);
  _Block_release(v39);
  swift_release();

  static TTRLocalizableStrings.Common.alertCancelButton.getter(v41);
  v43 = v42;
  v44 = swift_allocObject(&unk_1005F4BB0, 32, 7);
  *(_QWORD *)(v44 + 16) = v36;
  *(_QWORD *)(v44 + 24) = v37;
  swift_retain();
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  v68 = sub_1000B09F4;
  v69 = v44;
  aBlock = _NSConcreteStackBlock;
  v65 = 1107296256;
  v66 = sub_1000D4884;
  v67 = &unk_1005F4BC8;
  v46 = _Block_copy(&aBlock);
  v47 = objc_msgSend(v30, "actionWithTitle:style:handler:", v45, 1, v46, swift_release().n128_f64[0]);
  v48 = v46;
  v49 = v60;
  _Block_release(v48);

  v50 = v61;
  objc_msgSend(v61, "addAction:", v49);
  objc_msgSend(v50, "addAction:", v40);
  v51 = v50;
  objc_msgSend(v50, "addAction:", v47);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v63 + 88) + 16);
  if (Strong)
  {
    v53 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v51, 1, 0);

    v40 = v47;
    v47 = v53;
  }

}

double sub_10015D094(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  _BOOL8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  double result;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(id, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111[13];
  _QWORD v112[8];
  _OWORD v113[2];
  _OWORD v114[2];
  _OWORD v115[2];
  _OWORD v116[2];
  _QWORD v117[6];
  _QWORD v118[8];

  v104 = a5;
  v8 = a4;
  v98 = a2;
  sub_10000F614(a4, (uint64_t)v112, &qword_100642D10);
  v95 = v112[1];
  v96 = (id)v112[0];
  v93 = v112[3];
  v94 = v112[2];
  v91 = v112[5];
  v92 = v112[4];
  v11 = sub_10002A750((uint64_t *)&unk_100649BE0);
  v100 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v100 + 64);
  __chkstk_darwin(v11);
  v103 = (uint64_t)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v13);
  v102 = (char *)v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = v6;
  v15 = *(_QWORD *)(v6 + 104);
  swift_retain();
  v16 = 0;
  v17 = (uint64_t)sub_1001BAE68(a1, v15);
  swift_release();
  if ((unint64_t)v17 >> 62)
  {
LABEL_42:
    if (v17 < 0)
      v85 = v17;
    else
      v85 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v19 = *(_QWORD *)(a1 + 16);
  v101 = v12;
  if (v18 != v19)
  {
    swift_bridgeObjectRelease(v17);
    v20 = *(_QWORD *)(v15 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(v15 + 56), v21);
    v23 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v20 + 256))(a1, 0, ObjectType, v20);
    v17 = (uint64_t)sub_1001BAE7C(a1, v23);
    swift_bridgeObjectRelease(v23);
  }
  type metadata accessor for TTRListEditor(0);
  v24 = static TTRListEditor.filterOutSubtasksWithParents(in:)(v17);
  v12 = v24;
  v25 = (unint64_t)v24 >> 62;
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v86 = v24;
    else
      v86 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v26 = _CocoaArrayWrapper.endIndex.getter(v86);
  }
  else
  {
    v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v24);
  }
  v105 = (uint64_t)a6;
  v106 = v17;
  v99 = v8;
  if (v26)
  {
    v88[1] = v16;
    v89 = v25;
    v90 = a3;
    v15 = *(_QWORD *)(v107 + 72);
    v28 = *(_QWORD *)(v107 + 80);
    v29 = swift_getObjectType(v15, v27);
    v97 = 0;
    v8 = 0;
    a3 = *(_QWORD *)(v28 + 8);
    v109 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(a3 + 16);
    v110 = v29;
    a1 = v12 & 0xC000000000000001;
    v108 = v12 & 0xFFFFFFFFFFFFFF8;
LABEL_9:
    v16 = v26;
    v30 = v8;
    do
    {
      if (a1)
      {
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v12);
      }
      else
      {
        if (v30 >= *(_QWORD *)(v108 + 16))
          goto LABEL_41;
        v31 = *(id *)(v12 + 8 * v30 + 32);
      }
      a6 = v31;
      v8 = v30 + 1;
      if (__OFADD__(v30, 1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      v17 = v109(v31, 1, v110, a3);

      if (v17)
      {
        v97 = 1;
        v26 = v16;
        if (v8 != v16)
          goto LABEL_9;
        swift_bridgeObjectRelease(v12);
        a3 = v90;
        goto LABEL_21;
      }
      ++v30;
    }
    while (v8 != v16);
    swift_bridgeObjectRelease(v12);
    a3 = v90;
    v17 = v106;
    if ((v97 & 1) == 0)
      goto LABEL_24;
LABEL_21:
    if (v89)
    {
      if (v12 < 0)
        v44 = v12;
      else
        v44 = v108;
      swift_bridgeObjectRetain(v12);
      v32 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v32 = *(_QWORD *)(v108 + 16);
    }
    v45 = swift_bridgeObjectRelease(v12);
    v46 = v32 > 1;
    v41 = static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeletedReminderWithSubtasksConfirmationAlertMessage(isDeletingMoreThanOneReminder:)(v46, v45);
    v43 = v47;
    v35 = static TTRLocalizableStrings.Alerts.deleteReminderWithSubtasksConfirmationTitle(isDeletingMoreThanOneReminder:)(v46);
    v37 = v48;
    swift_bridgeObjectRetain(v43);
    v38 = v41;
    v40 = v43;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
LABEL_24:
    v33 = swift_bridgeObjectRelease(v12);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v87 = v17;
      else
        v87 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v34 = _CocoaArrayWrapper.endIndex.getter(v87);
      v33 = swift_bridgeObjectRelease(v17);
    }
    else
    {
      v34 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v35 = static TTRLocalizableStrings.Alerts.deleteReminderConfirmationTitle(isDeletingMoreThanOneReminder:)(v34 > 1, v33);
    v37 = v36;
    v38 = static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)(v34, 1);
    v40 = v39;
    v41 = static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)(v34, 0);
    v43 = v42;
  }
  v49 = static TTRLocalizableStrings.Common.deleteButton.getter();
  v117[0] = v35;
  v117[1] = v37;
  v117[2] = v38;
  v117[3] = v40;
  v117[4] = v49;
  v117[5] = v50;
  v51 = static TTRLocalizableStrings.Common.deleteButton.getter();
  v118[0] = 0;
  v118[1] = 0;
  v118[2] = v41;
  v118[3] = v43;
  v118[4] = v51;
  v118[5] = v52;
  v53 = v99;
  sub_10017C154(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
  v54 = AlertStyleBuilder.init(alertInfo:actionSheetInfo:alertPreferredStyle:popoverAnchor:)(v111, v117, v118, v98, v53);
  AlertStyleBuilder.title.getter(v54);
  v56 = v55;
  AlertStyleBuilder.message.getter();
  v58 = v57;
  if (v56)
  {
    v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v56);
    if (v58)
    {
LABEL_34:
      v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
      goto LABEL_37;
    }
  }
  else
  {
    v59 = 0;
    if (v57)
      goto LABEL_34;
  }
  v60 = 0;
LABEL_37:
  v61 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v59, v60, v111[12]);

  v62 = sub_10002A750(&qword_100649EF0);
  v63 = swift_allocObject(v62, 96, 7);
  *(_OWORD *)(v63 + 16) = xmmword_1005201E0;
  v64 = AlertStyleBuilder.primaryButtonTitle.getter();
  v66 = v65;
  sub_100180640(v111);
  LOBYTE(v115[0]) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)(v64, v66, 2, v115, &type metadata for Bool);
  v110 = v63;
  v68 = static TTRLocalizableStrings.Common.alertCancelButton.getter(v67);
  LOBYTE(v115[0]) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)(v68, v69, 1, v115, &type metadata for Bool);
  sub_10000F614(v53, (uint64_t)v113, &qword_100642D10);
  if ((~BYTE8(v114[0]) & 0xFE) != 0)
  {
    v115[0] = v113[0];
    v115[1] = v113[1];
    v116[0] = v114[0];
    *(_OWORD *)((char *)v116 + 9) = *(_OWORD *)((char *)v114 + 9);
    sub_1000A2644(v96, v95, v94, v93, v92, v91);
    UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v115);
    sub_10017C154(v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);
  }
  v70 = type metadata accessor for TaskPriority(0);
  v71 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v102, 1, 1, v70);
  v72 = a3;
  v73 = v103;
  sub_10000735C(v72, v103, (uint64_t *)&unk_100649BE0);
  type metadata accessor for MainActor(0);
  v74 = v107;
  swift_retain();
  v75 = v61;
  v77 = v104;
  v76 = v105;
  v78 = sub_100053DE4(v104, v105);
  v79 = static MainActor.shared.getter(v78);
  v80 = *(unsigned __int8 *)(v100 + 80);
  v81 = (v80 + 80) & ~v80;
  v82 = (_QWORD *)swift_allocObject(&unk_1005F4638, v81 + v101, v80 | 7);
  v82[2] = v79;
  v82[3] = &protocol witness table for MainActor;
  v82[4] = v74;
  v82[5] = v75;
  v82[6] = v110;
  v82[7] = v77;
  v83 = v106;
  v82[8] = v76;
  v82[9] = v83;
  sub_10000F614(v73, (uint64_t)v82 + v81, (uint64_t *)&unk_100649BE0);
  sub_100148388(v71, (uint64_t)&unk_100649F00, (uint64_t)v82, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10015D7C8(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v3 = a2 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100012DC4(v4, (uint64_t)qword_100648980);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v25[0] = v9;
    if ((a1 & 1) != 0)
      v10 = 1702195828;
    else
      v10 = 0x65736C6166;
    if ((a1 & 1) != 0)
      v11 = 0xE400000000000000;
    else
      v11 = 0xE500000000000000;
    v24 = sub_100027E40(v10, v11, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "streamShowRemindersAsOverdue userDefaults changed, reloading reminders list {newValue: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v3, v25, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(Strong + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 136), v13);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 200))(ObjectType, v16);
    v19 = swift_unknownObjectWeakLoadStrong(v15 + 16);
    if (v19)
    {
      v21 = v19;
      v22 = *(_QWORD *)(v15 + 24);
      v23 = swift_getObjectType(v19, v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 112))(v18, v23, v22);
      swift_release();
      swift_release();
      swift_unknownObjectRelease(v21);
    }
    else
    {
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

Class sub_10015D9F4(UIMenuElementSize a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  UIMenu v8;
  _BYTE v10[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  if (!swift_weakLoadStrong(v7))
    return 0;
  v8.super.super.isa = sub_100157000(a3, a1, a4).super.super.isa;
  swift_release();
  return v8.super.super.isa;
}

id sub_10015DA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  void *v13;
  id v14;
  void **v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  if (!a2)
  {
    v12 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    goto LABEL_6;
  }
  v20 = a2;
  v21 = a3;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_100172B3C;
  v19 = &unk_1005F36B0;
  v12 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v20 = a4;
  v21 = a5;
  v16 = _NSConcreteStackBlock;
  v17 = 1107296256;
  v18 = sub_100172B74;
  v19 = &unk_1005F3688;
  v13 = _Block_copy(&v16);
  swift_retain();
  swift_release();
LABEL_6:
  v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "configurationWithIdentifier:previewProvider:actionProvider:", a1, v12, v13);
  sub_1000381B8(a4, a5);
  sub_1000381B8(a2, a3);
  swift_unknownObjectRelease(a1);
  _Block_release(v13);
  _Block_release(v12);
  return v14;
}

id sub_10015DBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  objc_super v15;
  _OWORD v16[2];
  _QWORD v17[5];

  v0 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v1);
  v6 = (char *)&v15 - v5;
  v7 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v4);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v7);
  v8 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v6, v3);
  sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v9 = sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v10 = 0;
  if ((v8 & 1) == 0)
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v9);
    sub_10002B1E8((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v11 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
    AnyHashable.init<A>(_:)(v17, v3, v0, v11);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v12 = (objc_class *)type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
    memset(v16, 0, sizeof(v16));
    v13 = objc_allocWithZone(v12);
    sub_1001033E8((uint64_t)v17, (uint64_t)v13 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_itemID);
    sub_10000735C((uint64_t)v16, (uint64_t)v13 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_userInfo, &qword_100640E50);
    v15.receiver = v13;
    v15.super_class = v12;
    v10 = objc_msgSendSuper2(&v15, "init");
    sub_1000073A0((uint64_t)v16, &qword_100640E50);
    sub_100041DDC((uint64_t)v17);
  }
  return v10;
}

double sub_10015DDA8@<D0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = a1();
  if (v3)
  {
    v7 = v3;
    v4 = type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
    v5 = sub_1000175C8(&qword_100649FC8, (uint64_t (*)(uint64_t))type metadata accessor for TTRITreeViewContextMenuItemIdentifier, (uint64_t)&protocol conformance descriptor for NSObject);
    AnyHashable.init<A>(_:)((_QWORD *)a2, &v7, v4, v5);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void *sub_10015DE30(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[32];
  void *v7;

  sub_100028CFC(a1, (uint64_t)v6);
  v1 = type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
  if (!swift_dynamicCast(&v7, v6, &type metadata for Any[8], v1, 6))
    return 0;
  v2 = v7;
  sub_10000735C((uint64_t)v7 + OBJC_IVAR____TtC9Reminders37TTRITreeViewContextMenuItemIdentifier_userInfo, (uint64_t)v6, &qword_100640E50);

  v3 = sub_10002A750(&qword_100640E50);
  v4 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier(0);
  if (swift_dynamicCast(&v7, v6, v3, v4, 6))
    return v7;
  else
    return 0;
}

void sub_10015DEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(_QWORD);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  void *v18;
  __n128 v19;
  void *Strong;
  void *v21;
  uint64_t v22;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1+ OBJC_IVAR____TtCC9Reminders28TTRIRemindersCommonPresenterP33_5CD98EDF15D0ED6BAC909BA9376202F921ContextMenuIdentifier_action, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
    type metadata accessor for TTRIRemindersListRouter();
    sub_1000A1790();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v13 = *v10;
    v14 = v10[1];
    v15 = *(_QWORD *)(a2 + 88);
    v16 = objc_allocWithZone((Class)type metadata accessor for TTRIQuickLookPreviewController(0, v12));
    v17 = swift_bridgeObjectRetain(v13);
    v18 = (void *)TTRIQuickLookPreviewController.init(ttr_previewItems:)(v17);
    objc_msgSend(v18, "setCurrentPreviewItemIndex:", v14);
    TTRIQuickLookPreviewController.transitionDelegate.setter(v19);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v15 + 16);
    if (Strong)
    {
      v21 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v18, 1, 0);
      swift_bridgeObjectRelease(v13);

    }
    else
    {
      swift_bridgeObjectRelease(v13);
    }

  }
}

UIMenu sub_10015E0A4(UIMenuElementSize a1)
{
  Swift::String v2;
  Swift::OpaquePointer v4;
  UIImage_optional v5;

  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  swift_bridgeObjectRetain(a1);
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5.value.super.isa = 0;
  v5.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v2, (Swift::String_optional)0, v5, 0, 0xFFFFFFFFFFFFFFFFLL, a1, v4);
}

uint64_t sub_10015E114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_10015E184, v7, v8);
}

uint64_t sub_10015E184(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[3];
  v1[7] = *(_QWORD *)(v1[2] + 88);
  v1[8] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[9] = v4;
  v1[10] = v5;
  return swift_task_switch(sub_10015E1EC, v4, v5);
}

uint64_t sub_10015E1EC()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[7] + 16);
  v0[11] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.dismissAndWait(animated:)[1]);
    v0[12] = v2;
    *v2 = v0;
    v2[1] = sub_10015E274;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_10019C6D4, v0[5], v0[6]);
  }
}

uint64_t sub_10015E274()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));

  return swift_task_switch(sub_10015E2C4, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10015E2C4()
{
  _QWORD *v0;

  swift_release(v0[8]);
  return swift_task_switch(sub_10019C6D4, v0[5], v0[6]);
}

uint64_t sub_10015E2FC(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for AnyTip(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListTips(0);
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 16))(v5, &a1[*(int *)(v6 + 20)], v2);
  v7 = TTRRemindersListTips.TipID.assetColor.getter(*a1);
  v8 = sub_1000175C8(&qword_100649B88, (uint64_t (*)(uint64_t))&type metadata accessor for AnyTip, (uint64_t)&protocol conformance descriptor for AnyTip);
  return TTRTipContentView.init(tip:assetColor:)(v5, v7, v2, v8);
}

double sub_10015E458(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    v5 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = *(unsigned __int8 *)(v7 + 80);
    v10 = (v9 + 32) & ~v9;
    v11 = swift_allocObject(v5, v10 + v8, v9 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_100520250;
    v12 = v11 + v10;
    v13 = sub_10002B1E8(a2, v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v13);
    sub_10041D610(*v14, v11);
    swift_setDeallocating(v11);
    swift_arrayDestroy(v12, *(_QWORD *)(v11 + 16), v6);
    swift_deallocClassInstance(v11, 32, 7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_10015E56C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;

  v3 = v2;
  v6 = sub_10002A750(&qword_100653A10);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  v12 = (void *)v3[23];
  if (v12 == (void *)3)
  {
    if (a2 == (void *)3)
      return;
  }
  else if (a2 != (void *)3)
  {
    v13 = v3[22];
    sub_10017B678(a1, a2);
    sub_10017B678(v13, v12);
    v14 = static TTRRemindersListViewModel.ListSharingInfo.__derived_struct_equals(_:_:)(v13 & 0x101, v12, a1 & 0x101, a2);
    sub_10017B6A0(a1, a2);
    sub_10017B6A0(v13, v12);
    if ((v14 & 1) != 0)
      return;
  }
  v15 = type metadata accessor for TTRSharedWithYouHighlight(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  v16 = (char *)v3[23];
  if ((unint64_t)(v16 - 1) >= 3)
  {
    v17 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v17 + 16, v3);
    sub_10017B68C(v16);
    swift_retain();
    sub_1001AA72C(v16, (uint64_t)sub_10017B6C8, v17, (uint64_t)v8);
    swift_release_n(v17, 2);
    sub_10017B6B4(v16);
    sub_1000073A0((uint64_t)v11, &qword_100653A10);
    sub_10000F614((uint64_t)v8, (uint64_t)v11, &qword_100653A10);
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 2);
  if (Strong)
  {
    v20 = Strong;
    v21 = v3[3];
    ObjectType = swift_getObjectType(Strong, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 160))(v11, ObjectType, v21);
    swift_unknownObjectRelease(v20);
  }
  sub_1000073A0((uint64_t)v11, &qword_100653A10);
}

uint64_t sub_10015E774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 16);
    v7 = *(_QWORD *)(v5 + 24);
    result = swift_release(v5);
    if (Strong)
    {
      ObjectType = swift_getObjectType(Strong, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 160))(a1, ObjectType, v7);
      return swift_unknownObjectRelease(Strong);
    }
  }
  return result;
}

double sub_10015E808(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _BYTE v15[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    v5 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = *(unsigned __int8 *)(v7 + 80);
    v10 = (v9 + 32) & ~v9;
    v11 = swift_allocObject(v5, v10 + v8, v9 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_100520250;
    v12 = v11 + v10;
    v13 = sub_10002B1E8(a1, v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v13);
    sub_10041D610(*v14, v11);
    swift_setDeallocating(v11);
    swift_arrayDestroy(v12, *(_QWORD *)(v11 + 16), v6);
    swift_deallocClassInstance(v11, 32, 7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_10015E91C(_QWORD *a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  _QWORD *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::String v45;
  Swift::String v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  LODWORD(v53) = a3;
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[18];
  ObjectType = swift_getObjectType(a1[17], v13);
  (*(void (**)(void *, uint64_t, uint64_t))(v12 + 232))(a2, ObjectType, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
    v15 = objc_msgSend((id)objc_opt_self(REMError), "noSuchObjectErrorWithObjectID:", a2);
    swift_willThrow(v15);
  }
  else
  {
    sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 2);
    v18 = (uint64_t)v11;
    if (Strong)
    {
      v19 = Strong;
      v20 = a1[3];
      v21 = swift_getObjectType(Strong, v17);
      a1 = (_QWORD *)(*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t, uint64_t))(v20 + 240))(v11, 0, v53 & 1, v21, v20);
      swift_unknownObjectRelease(v19);
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    else
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v22 = type metadata accessor for Logger(0);
      sub_100012DC4(v22, (uint64_t)qword_100648980);
      swift_retain_n(a1, 2);
      v23 = a2;
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.fault.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc(22, -1);
        v52 = (_QWORD *)swift_slowAlloc(8, -1);
        v53 = swift_slowAlloc(32, -1);
        v54 = v53;
        *(_DWORD *)v26 = 136315394;
        v56 = (uint64_t)a1;
        v27 = type metadata accessor for TTRIRemindersCommonPresenter(0);
        swift_retain();
        v28 = String.init<A>(describing:)(&v56, v27);
        v51 = v24;
        v29 = v23;
        v31 = v30;
        v56 = sub_100027E40(v28, v30, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v26 + 4, v26 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v31);
        *(_WORD *)(v26 + 12) = 2112;
        v56 = (uint64_t)v29;
        v32 = v29;
        v23 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v26 + 14, v26 + 22);
        v33 = v52;
        *v52 = v23;

        v34 = v51;
        _os_log_impl((void *)&_mh_execute_header, v51, v25, "RemindersListPresenter.delegate is nil. Cannot navigate to reminder {presenter: %s, reminder: %@}", (uint8_t *)v26, 0x16u);
        v35 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v33, 1, v35);
        swift_slowDealloc(v33, -1, -1);
        v36 = v53;
        swift_arrayDestroy(v53, 1, &type metadata for Any[8]);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v26, -1, -1);

      }
      else
      {

        swift_release_n(a1, 2);
      }
      v37 = (void *)objc_opt_self(REMError);
      v54 = 0;
      v55 = 0xE000000000000000;
      _StringGuts.grow(_:)(97);
      v38._object = (void *)0x8000000100567160;
      v38._countAndFlagsBits = 0xD000000000000050;
      String.append(_:)(v38);
      v56 = (uint64_t)a1;
      v39 = type metadata accessor for TTRIRemindersCommonPresenter(0);
      _print_unlocked<A, B>(_:_:)(&v56, &v54, v39, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v40._countAndFlagsBits = 0x646E696D6572202CLL;
      v40._object = (void *)0xEC000000203A7265;
      String.append(_:)(v40);
      v41 = objc_msgSend(v23, "description");
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      v45._countAndFlagsBits = v42;
      v45._object = v44;
      String.append(_:)(v45);
      swift_bridgeObjectRelease(v44);
      v46._countAndFlagsBits = 125;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      v47 = v55;
      a1 = String._bridgeToObjectiveC()();
      objc_msgSend(v37, "internalErrorWithDebugDescription:", a1, swift_bridgeObjectRelease(v47).n128_f64[0]);

      swift_willThrow(v48);
      sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return a1;
}

uint64_t sub_10015EE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v26 = a3;
  v25 = a4;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  ObjectType = swift_getObjectType(v16, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 232))(a2, ObjectType, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    v20 = objc_msgSend((id)objc_opt_self(REMError), "noSuchObjectErrorWithObjectID:", a2);
    return swift_willThrow(v20);
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22 = v25;
    sub_10001F580((uint64_t)v13, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v23 = type metadata accessor for TTRRemindersListHighlightTarget(0);
    return swift_storeEnumTagMultiPayload(v22, v23, v26 & 1);
  }
}

uint64_t sub_10015EFF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  NSString v19;
  uint64_t v20;

  swift_retain();
  v6 = sub_100175B78(a1, a2);
  swift_release();
  v7 = a2[18];
  ObjectType = swift_getObjectType(a2[17], v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 192))(ObjectType, v7);
  v12 = *(_QWORD *)(v10 + 24);
  v11 = *(_QWORD *)(v10 + 32);
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v10);
  v14 = swift_getObjectType(v12, v13);
  v15 = TTRTreeContentsQueryable.sortByIndexPath(_:unknownIndexPathTreatment:)(v6, 1, v14, *(_QWORD *)(v11 + 8));
  swift_unknownObjectRelease(v12);
  swift_bridgeObjectRelease(v6);
  if (*(_QWORD *)(v15 + 16))
  {
    *a3 = v15;
    v16 = type metadata accessor for TTRRemindersListHighlightTarget(0);
    return swift_storeEnumTagMultiPayload(a3, v16, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    v18 = (void *)objc_opt_self(REMError);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "internalErrorWithDebugDescription:", v19);

    return swift_willThrow(v20);
  }
}

uint64_t sub_10015F14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v26 = a3;
  v25 = a4;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  ObjectType = swift_getObjectType(v16, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 264))(a2, ObjectType, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    v20 = objc_msgSend((id)objc_opt_self(REMError), "noSuchObjectErrorWithObjectID:", a2);
    return swift_willThrow(v20);
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22 = v25;
    sub_10001F580((uint64_t)v13, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v23 = type metadata accessor for TTRRemindersListHighlightTarget(0);
    return swift_storeEnumTagMultiPayload(v22, v23, v26 & 1);
  }
}

uint64_t sub_10015F30C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  double v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  unint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;

  v37 = a3;
  v34 = a4;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 144);
  ObjectType = swift_getObjectType(v16, v18);
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 272))(a2, ObjectType, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    v20 = (void *)objc_opt_self(REMError);
    v35 = 0;
    v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v36).n128_u64[0];
    v35 = 0xD00000000000001FLL;
    v36 = 0x8000000100567230;
    v22 = objc_msgSend(a2, "description", v21);
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v25);
    v27 = v36;
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "internalErrorWithDebugDescription:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

    return swift_willThrow(v29);
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v31 = v34;
    sub_10001F580((uint64_t)v12, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v32 = type metadata accessor for TTRRemindersListHighlightTarget(0);
    return swift_storeEnumTagMultiPayload(v31, v32, v37 & 1);
  }
}

NSString sub_10015F56C(uint64_t a1, void (*a2)(void), NSString a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v25;

  v9 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(a1 + 24);
    a2();
    if (v4)
    {
      swift_unknownObjectRelease(v13);
    }
    else
    {
      ObjectType = swift_getObjectType(v13, v15);
      a3 = (NSString)(*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 232))(v11, a4 & 1, ObjectType, v14);
      swift_unknownObjectRelease(v13);
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    }
  }
  else
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100012DC4(v16, (uint64_t)qword_100648980);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.fault.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "RemindersListPresenter.delegate is nil. Cannot navigate to item(s)", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    v21 = (void *)objc_opt_self(REMError);
    a3 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "internalErrorWithDebugDescription:", a3);

    swift_willThrow(v22);
  }
  return a3;
}

void sub_10015F770(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  uint64_t v9;

  v6 = *a1;
  ObjectType = swift_getObjectType(a2, a2);
  type metadata accessor for RDIDispatchQueue(0);
  v8 = (void *)static RDIDispatchQueue.utilityQueue.getter();
  v9 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(a3 + 216))(v6, v8, ObjectType, a3);

  *a4 = v9;
}

void sub_10015F7F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  void *v7;

  v4 = *a1;
  ObjectType = swift_getObjectType(a2, a2);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 160))(v4, ObjectType, a3);
  v7 = v6;
  CurrentValueSubject.send(_:)(&v7);

}

uint64_t sub_10015F864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t (*v19)(_QWORD);
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 *v40;
  id v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  _OWORD v50[4];
  char v51;
  _BYTE v52[72];
  _QWORD v53[5];
  unsigned __int8 v54;
  uint64_t v55;
  char v56;
  _QWORD v57[7];
  char v58;

  v5 = v4;
  v10 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v16);
  v18 = (id *)((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    v43 = v12;
    v44 = v5;
    v42 = *v18;
    v20 = objc_msgSend(v42, "presentationSourceItem");
    if (v20)
    {
      v21 = v20;
      static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)(v53, v20, 15, 0);
      v22 = (void *)v53[0];
      v23 = v53[1];
      v24 = v53[2];
      v25 = v53[3];
      v26 = v53[4];
      v27 = v54;
      v28 = v55;
      v29 = v56;
      swift_unknownObjectRelease(v21);
    }
    else
    {
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v28 = 0;
      v29 = 0;
      v27 = 254;
    }
    v57[0] = v22;
    v57[1] = v23;
    v57[2] = v24;
    v57[3] = v25;
    v57[4] = v26;
    v57[5] = v27;
    v57[6] = v28;
    v58 = v29;
    v30 = v44;
    sub_10016E780((uint64_t)v57, (uint64_t)v52);
    v31 = v25;
    v5 = v30;
    sub_1000866B0(v22, v23, v24, v31, v26, v27);

    v12 = v43;
  }
  else
  {
    sub_10001F580((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10015FCE0((uint64_t)v15, a2, a3, a4, (uint64_t)v52);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  sub_10000735C((uint64_t)v52, (uint64_t)&v45, &qword_100649D20);
  if ((_QWORD)v45)
  {
    v50[2] = v47;
    v50[3] = v48;
    v51 = v49;
    v50[0] = v45;
    v50[1] = v46;
    v32 = *(_QWORD *)(v5 + 360);
    v33 = v48;
    *(_OWORD *)(v5 + 360) = v48;
    swift_unknownObjectRetain(v33);
    swift_unknownObjectRelease(v32);
    v34 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
    sub_10017C018((uint64_t)v50, (uint64_t)&v45);
    type metadata accessor for MainActor(0);
    v35 = swift_retain();
    v36 = static MainActor.shared.getter(v35);
    v37 = swift_allocObject(&unk_1005F3FA8, 105, 7);
    v38 = v45;
    *(_OWORD *)(v37 + 56) = v46;
    v39 = v48;
    *(_OWORD *)(v37 + 72) = v47;
    *(_OWORD *)(v37 + 88) = v39;
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v37 + 32) = v5;
    *(_BYTE *)(v37 + 104) = v49;
    *(_OWORD *)(v37 + 40) = v38;
    sub_100148388((uint64_t)v12, (uint64_t)&unk_100649D90, v37, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
    swift_release();
    sub_10017C128((uint64_t)v50);
    v40 = (__int128 *)v52;
  }
  else
  {
    sub_1000073A0((uint64_t)v52, &qword_100649D20);
    v40 = &v45;
  }
  return sub_1000073A0((uint64_t)v40, &qword_100649D20);
}

id sub_10015FC00(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = sub_1001AF340(a1);
  if (!v1)
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100648980);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Items selected don't qualify for batch date editing", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  return v1;
}

void sub_10015FCE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  _UNKNOWN **v84;
  _QWORD v85[7];
  unsigned __int8 v86;
  _QWORD v87[7];
  unsigned __int8 v88;
  _BYTE v89[48];

  v6 = v5;
  v74 = a3;
  sub_10000F614(a2, (uint64_t)v87, &qword_100642D10);
  v11 = (void *)v87[0];
  v81 = v87[1];
  v79 = v87[2];
  v80 = v87[3];
  v12 = v87[5];
  v77 = v87[4];
  v76 = v87[6];
  v78 = v88;
  v75 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v15, v16);
  sub_10000F614(a2, (uint64_t)v89, &qword_100642D10);
  if ((~v89[40] & 0xFE) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v5 + 2);
    if (Strong)
    {
      v19 = Strong;
      v20 = v6[3];
      ObjectType = swift_getObjectType(Strong, v18);
      (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t))(v20 + 224))(v85, v15, ObjectType, v20);
      v11 = (void *)v85[0];
      v81 = v85[1];
      v79 = v85[2];
      v80 = v85[3];
      v12 = v85[5];
      v77 = v85[4];
      v76 = v85[6];
      v78 = v86;
      swift_unknownObjectRelease(v19);
    }
    else
    {
      v11 = 0;
      v81 = 0;
      v79 = 0;
      v80 = 0;
      v77 = 0;
      v76 = 0;
      v78 = 0;
      v12 = 254;
    }
  }
  sub_10017C154(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v22 = (void *)sub_100171D9C(a1, (void (*)(uint64_t *__return_ptr))sub_10041C0C0, 0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))sub_10041C0CC, 0);
  if (v22 == (void *)1)
    goto LABEL_11;
  v24 = v22;
  if ((v23 & 1) != 0)
  {

    goto LABEL_11;
  }
  if (!v22)
  {
LABEL_11:
    *(_BYTE *)(a5 + 64) = 0;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    sub_1000866B0(v11, v81, v79, v80, v77, v12);
    return;
  }
  v73 = v11;
  v72 = a4;
  v25 = v6[10];
  swift_getObjectType(v6[9], v23);
  v26 = *(uint64_t (**)(void))(v25 + 160);
  v70 = v24;
  v27 = v26();
  v28 = swift_unknownObjectWeakLoadStrong(v6 + 2);
  v71 = v27;
  if (v28)
  {
    v30 = v28;
    v67 = (_QWORD *)v6[3];
    v66 = swift_getObjectType(v28, v29);
    v31 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v32 = *(unsigned __int8 *)(v13 + 80);
    v33 = (v32 + 32) & ~v32;
    v68 = v33 + *(_QWORD *)(v13 + 72);
    v34 = v32 | 7;
    v35 = swift_allocObject(v31, v68, v32 | 7);
    *(_OWORD *)(v35 + 16) = xmmword_100520250;
    sub_10002B1E8(a1, v35 + v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ((void (*)(uint64_t, uint64_t))v67[27])(v35, v66);
    swift_unknownObjectRelease(v30);
    swift_setDeallocating(v35);
    v36 = v75;
    swift_arrayDestroy(v35 + v33, *(_QWORD *)(v35 + 16), v75);
    v37 = v35;
    v38 = v34;
    v39 = v68;
    swift_deallocClassInstance(v37, 32, 7);
  }
  else
  {
    v40 = *(unsigned __int8 *)(v13 + 80);
    v33 = (v40 + 32) & ~v40;
    v39 = v33 + *(_QWORD *)(v13 + 72);
    v38 = v40 | 7;
    v36 = v75;
  }
  v41 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v68 = swift_allocObject(v41, v39, v38);
  v42 = v68 + v33;
  v65 = v68 + v33;
  sub_10002B1E8(a1, v68 + v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v66 = *(_QWORD *)((char *)v6
                  + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v43 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v44 = swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v45 = v44 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
  sub_10002B1E8(v42, v44 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v45, 0, 1, v36);
  v46 = v44 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
  v47 = v73;
  v48 = v81;
  *(_QWORD *)v46 = v73;
  *(_QWORD *)(v46 + 8) = v48;
  v81 = v48;
  v49 = v80;
  *(_QWORD *)(v46 + 16) = v79;
  *(_QWORD *)(v46 + 24) = v49;
  v80 = v49;
  v50 = v77;
  *(_QWORD *)(v46 + 32) = v77;
  *(_QWORD *)(v46 + 40) = v12;
  v69 = v12;
  *(_QWORD *)(v46 + 48) = v76;
  *(_BYTE *)(v46 + 56) = v78;
  v67 = v6;
  *(_QWORD *)(v44
            + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v66;
  v83 = v43;
  v84 = &off_100605368;
  v51 = v68;
  swift_setDeallocating(v68);
  v52 = v48;
  v53 = v79;
  v54 = v49;
  v55 = v50;
  sub_1000A7020(v47, v52, v79, v54, v50, v12);
  swift_retain();
  swift_arrayDestroy(v65, 1, v75);
  swift_deallocClassInstance(v51, 32, 7);
  *(_QWORD *)&v82 = v44;
  v56 = type metadata accessor for ReminderDetailModuleDelegate();
  v57 = swift_allocObject(v56, 40, 7);
  v58 = swift_weakInit(v57 + 16, 0);
  *(_QWORD *)(v57 + 24) = 0;
  *(_QWORD *)(v57 + 32) = 0;
  swift_weakAssign(v58, v67);
  v59 = *(_QWORD *)(v57 + 24);
  v60 = *(_QWORD *)(v57 + 32);
  v61 = v74;
  v62 = v72;
  *(_QWORD *)(v57 + 24) = v74;
  *(_QWORD *)(v57 + 32) = v62;
  sub_100053DE4(v61, v62);
  sub_1000381B8(v59, v60);
  v63 = v70;

  sub_1000866B0(v73, v81, v53, v80, v55, v69);
  *(_QWORD *)a5 = v71;
  sub_10002E37C(&v82, a5 + 8);
  *(_QWORD *)(a5 + 48) = v57;
  *(_QWORD *)(a5 + 56) = &off_1005F2F80;
  *(_BYTE *)(a5 + 64) = 1;
}

double sub_100160368(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    sub_1001534A0(a3 & 1);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001603C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_QWORD *)Strong;
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_100648980);
    v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Reminders List select reminders", 31, 2, v7);
    swift_bridgeObjectRelease(v7);
    sub_10041C21C(v5[29]);
    v8 = v5[18];
    ObjectType = swift_getObjectType(v5[17], v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 688))(1, ObjectType, v8);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001604B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    v4 = (uint64_t *)TTRITipKitSignalContext.RemindersList.MoreMenu.showCompleted.unsafeMutableAddressor();
    v5 = *v4;
    v6 = (void *)v4[1];
    swift_bridgeObjectRetain(v6);
    sub_10015207C(v5, v6);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

double sub_100160530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[128];
  _BYTE v36[32];

  v4 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v36, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    v33 = v5;
    v34 = a1;
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v15 = sub_100012DC4(v8, (uint64_t)qword_100648980);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
    v16 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v16, v35);
    *(_OWORD *)(inited + 16) = xmmword_1005201E0;
    *(_QWORD *)(inited + 32) = 6581359;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    v32 = v9;
    v18 = *(_QWORD *)(v14 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 136), v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 600))(ObjectType, v18);
    v21 = sub_1000175C8(&qword_100649F90, (uint64_t (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SortingStyle);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v4, v21);
    v24 = v23;
    v31 = v8;
    v25 = v33;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
    *(_QWORD *)(inited + 48) = v22;
    *(_QWORD *)(inited + 56) = v24;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 7824750;
    *(_QWORD *)(inited + 88) = 0xE300000000000000;
    v26 = v34;
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v4, v21);
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 96) = v27;
    *(_QWORD *)(inited + 104) = v28;
    v29 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"Reminder list changed sorting style {old: %@, new: %@}", 54, 2, v29);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v11, v31, v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v26, v4);
    sub_100152A34(v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001607BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_100151F88();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100160810(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  void *v36;
  char *v37;
  uint64_t v38;
  void (**v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  double v45;
  id v46;
  id v47;
  uint64_t v48;
  objc_super v49;
  char v50[80];
  char v51[24];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v51, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = a4 & 1;
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v14 = sub_100012DC4(v7, (uint64_t)qword_100648980);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
    v15 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v15, v50);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    strcpy((char *)(inited + 32), "sourceListID");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    v17 = TTRListOrCustomSmartList.objectID.getter(a3, v13);
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v17;
    v18 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"Reminders List Save List as Template {sourceListID: %@}", 55, 2, v18);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v19);
    v20 = swift_unknownObjectWeakLoadStrong(v12 + 16);
    if (v20)
    {
      v22 = v20;
      v23 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType(v20, v21);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 72))(ObjectType, v23);
      v27 = v26;
      swift_unknownObjectRelease(v22);
    }
    else
    {
      v25 = 0;
      v27 = 0;
    }
    v28 = (objc_class *)type metadata accessor for TTRITemplateSavingDismissAnimationCoordinator();
    v29 = (char *)objc_allocWithZone(v28);
    v30 = &v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presenter];
    *((_QWORD *)v30 + 1) = 0;
    swift_unknownObjectWeakInit(v30, 0);
    v31 = &v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_presentee];
    *((_QWORD *)v31 + 1) = 0;
    swift_unknownObjectWeakInit(v31, 0);
    v32 = &v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    v33 = &v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_frameOfDestBarButtonInWindow];
    *(_OWORD *)v33 = 0u;
    *((_OWORD *)v33 + 1) = 0u;
    v33[32] = 1;
    v34 = &v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceView];
    *((_QWORD *)v34 + 8) = 0;
    *((_OWORD *)v34 + 2) = 0u;
    *((_OWORD *)v34 + 3) = 0u;
    *(_OWORD *)v34 = 0u;
    *((_OWORD *)v34 + 1) = 0u;
    *(_QWORD *)&v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_sourceSnapshotView] = 0;
    *(_QWORD *)&v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_containerView] = 0;
    *(_QWORD *)&v29[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_destBarButtonView] = 0;
    *((_QWORD *)v30 + 1) = v27;
    swift_unknownObjectWeakAssign(v30, v25);
    v49.receiver = v29;
    v49.super_class = v28;
    v35 = objc_msgSendSuper2(&v49, "init");
    swift_unknownObjectRelease(v25);
    v36 = *(void **)(v12
                   + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator);
    *(_QWORD *)(v12
              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = v35;
    v37 = (char *)v35;

    v38 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v38 + 16, v12);
    v39 = (void (**)())&v37[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion];
    v40 = *(_QWORD *)&v37[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion];
    v41 = *(_QWORD *)&v37[OBJC_IVAR____TtC9Reminders45TTRITemplateSavingDismissAnimationCoordinator_completion + 8];
    *v39 = sub_10018119C;
    v39[1] = (void (*)())v38;
    sub_1000381B8(v40, v41);
    v42 = *(_QWORD *)(v12 + 88);
    v43 = (void *)swift_unknownObjectWeakLoadStrong(v42 + 16);
    v44 = v37;
    *(_QWORD *)&v45 = swift_unknownObjectRetain(v42).n128_u64[0];
    if (v43
      && (v46 = objc_msgSend(v43, "navigationController", v45),
          v43,
          v46)
      || (v46 = (id)swift_unknownObjectWeakLoadStrong(v42 + 16)) != 0)
    {
      v47 = sub_1001E6438(a3, v13, v35);
      sub_100035FC8();
      objc_msgSend(v46, "presentViewController:animated:completion:", v47, 1, 0);
      swift_release();
      swift_unknownObjectRelease(v42);

      v44 = (char *)v46;
    }
    else
    {
      swift_release();
      swift_unknownObjectRelease(v42);
      v47 = v44;
    }

  }
}

void sub_100160C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(void **)(Strong
                  + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator);
    *(_QWORD *)(Strong
              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
    swift_release(Strong);

  }
}

uint64_t sub_100160C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = *(_QWORD *)(result + 232);
    swift_unknownObjectRetain(v4);
    swift_release();
    sub_10041927C();
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_100160CDC(char a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t v9;
  _QWORD *Strong;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  void *v20;
  _BYTE v21[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = (_QWORD *)swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = (uint64_t)Strong;
    if ((a1 & 1) != 0)
    {
      if (a4 != -1)
      {
        v16 = Strong[10];
        v15 = Strong[11];
        ObjectType = swift_getObjectType(Strong[9], v11);
        v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 32);
        sub_1000B5EC0(a3, a4);
        v19 = swift_unknownObjectRetain(v15);
        v20 = (void *)v18(ObjectType, v16, v19);
        swift_retain();
        sub_1000A0B88(a3, a4 & 1, v20, a5, v13, (uint64_t)&off_1005F2FB0);
        swift_unknownObjectRelease(v15);

        swift_release_n(v13, 2);
        sub_1000760F4(a3, a4);
        return result;
      }
    }
    else
    {
      v14 = Strong[29];
      swift_unknownObjectRetain(v14);
      sub_10041927C();
      swift_unknownObjectRelease(v14);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100160E1C(NSObject *a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  NSObject *v23;
  char v24;
  void (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  NSObject *v56;
  NSString v57;
  uint64_t v58;
  void *v59;
  char isEscapingClosureAtFileLocation;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v65;
  _QWORD aBlock[7];
  char v67[24];
  char v68[24];

  v12 = a3 + 16;
  swift_beginAccess(a3 + 16, v68, 0, 0);
  Strong = swift_weakLoadStrong(v12);
  if (Strong)
  {
    v15 = Strong;
    v63 = a5;
    v16 = *(_QWORD *)(Strong + 232);
    v17 = *(_QWORD *)(v16 + 96);
    swift_beginAccess(v17 + 40, v67, 0, 0);
    v19 = *(_QWORD *)(v17 + 40);
    if (v19)
    {
      v20 = *(_QWORD *)(v17 + 48);
      ObjectType = swift_getObjectType(*(_QWORD *)(v17 + 40), v18);
      v22 = v15;
      v23 = a1;
      v24 = a2;
      v25 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 24);
      v26 = swift_unknownObjectRetain(v19);
      v25(ObjectType, v20, v26);
      a2 = v24;
      a1 = v23;
      v15 = v22;
      swift_unknownObjectRelease(v19);
    }
    sub_10041C214(v16);
    if (a2 == -1)
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_100012DC4(v34, (uint64_t)qword_100648980);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled((os_log_t)v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v36, v37, "Reminders List failed to move reminders to another list due to invalid target list.", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
        swift_release();

        return result;
      }
LABEL_19:

LABEL_29:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    if ((a4 & 1) != 0)
    {
      if ((a2 & 1) != 0)
      {
        v27 = qword_10063D400;
        v28 = a1;
        if (v27 != -1)
          swift_once(&qword_10063D400, sub_10015A89C);
        v29 = type metadata accessor for Logger(0);
        v30 = sub_100012DC4(v29, (uint64_t)qword_100648980);
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Reminders List failed to move reminders to another list due to Recently Deleted List don't support move to CSL.", v33, 2u);
          swift_slowDealloc(v33, -1, -1);

LABEL_28:
          sub_1000760F4(a1, a2);
          goto LABEL_29;
        }
        swift_release();

      }
      else
      {
        sub_1000B5EC0(a1, a2);
        swift_retain();
        sub_1001AB8F8(v63, a1, a6);
        swift_release();
        swift_release();
      }
      sub_1000760F4(a1, a2);
      return result;
    }
    sub_1000B5EC0(a1, a2);
    swift_bridgeObjectRetain(a7);
    v40 = (uint64_t)sub_100176ABC(v39, (uint64_t)a1, a2 & 1);
    swift_bridgeObjectRelease(a7);
    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v61 = v40;
      else
        v61 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v62 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease(v40);
      if (v62)
        goto LABEL_17;
    }
    else if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_17:
      v65 = (a2 & 1) != 0;
      v42 = *(_QWORD *)(v15 + 104);
      v43 = *(_QWORD *)(v42 + 64);
      v44 = swift_getObjectType(*(_QWORD *)(v42 + 56), v41);
      v45 = a2;
      v46 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 192);
      swift_retain();
      v47 = v46(v44, v43);
      v49 = v48;
      swift_retain();
      swift_bridgeObjectRetain(v63);
      v51 = sub_100175E3C(v50, v47, v49, v42, v63);
      swift_unknownObjectRelease(v47);
      swift_release_n(v42, 2);
      v52 = swift_bridgeObjectRelease(v63);
      static TTRLocalizableStrings.UndoAction.moveReminders.getter(v52);
      v54 = v53;
      v55 = (void *)objc_opt_self(TTRUndoManager);
      v56 = a1;
      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v54);
      v36 = swift_allocObject(&unk_1005F3788, 49, 7);
      *(_QWORD *)(v36 + 16) = v51;
      *(_QWORD *)(v36 + 24) = v15;
      *(_QWORD *)(v36 + 32) = v40;
      *(_QWORD *)(v36 + 40) = v56;
      *(_BYTE *)(v36 + 48) = v65;
      v58 = swift_allocObject(&unk_1005F37B0, 32, 7);
      *(_QWORD *)(v58 + 16) = sub_10017A014;
      *(_QWORD *)(v58 + 24) = v36;
      aBlock[4] = sub_10001B278;
      aBlock[5] = v58;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005F37C8;
      v59 = _Block_copy(aBlock);
      sub_1000B5EC0(v56, v45);
      swift_retain();
      swift_retain();
      objc_msgSend(v55, "withActionName:block:", v57, v59, swift_release().n128_f64[0]);

      sub_1000760F4(v56, v45);
      swift_release();
      _Block_release(v59);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v58, "", 136, 2662, 63, 1);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease(v40);
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_100161370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;

  v5 = a4;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v20 = a5;
    v9 = *(_QWORD *)(a2 + 80);
    v19 = a2;
    ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 72), a2);
    swift_bridgeObjectRetain_n(a1, 2);
    v11 = (uint64_t *)(a1 + 16 * v7 + 24);
    do
    {
      --v7;
      v12 = *v11;
      v13 = (id)*(v11 - 1);
      swift_bridgeObjectRetain(v12);
      v14 = objc_msgSend(v13, "list");
      TTRRemindersListInteractorType.move(reminders:to:position:)(v12, v14, v13, 1, ObjectType, v9);
      swift_bridgeObjectRelease(v12);

      v11 -= 2;
    }
    while (v7);
    swift_bridgeObjectRelease_n(a1, 2);
    v6 = a3;
    v5 = a4;
    a5 = v20;
    a2 = v19;
  }
  v15 = a5 & 1;
  v16 = *(_QWORD *)(a2 + 80);
  v17 = swift_getObjectType(*(_QWORD *)(a2 + 72), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 392))(v6, v5, v15, v17, v16);
}

double sub_1001614A4(uint64_t a1)
{
  return sub_1001652E8(a1, (uint64_t)"User cancelled deleting reminders", 33);
}

uint64_t sub_1001614B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[10] = v8;
  v5[11] = v9;
  return swift_task_switch(sub_100161520, v8, v9);
}

uint64_t sub_100161520()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064A7C4);
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_100161578;
  return sub_1001A1B88(*(_QWORD *)(v0 + 64), 0);
}

uint64_t sub_100161578(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_BYTE *)(*v1 + 104) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1001615D0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1001615D0()
{
  uint64_t v0;
  int v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t **v18;

  v1 = *(unsigned __int8 *)(v0 + 104);
  v2 = swift_release();
  if (v1 == 1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 232);
    v4 = *(_QWORD *)(v3 + 96);
    swift_beginAccess(v4 + 40, v0 + 16, 0, 0);
    v6 = *(_QWORD *)(v4 + 40);
    if (v6)
    {
      v7 = *(_QWORD *)(v4 + 48);
      ObjectType = swift_getObjectType(v6, v5);
      v9 = *(void (**)(uint64_t, uint64_t, __n128))(v7 + 24);
      v10 = swift_unknownObjectRetain(v6);
      v9(ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
    }
    v12 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 64);
    sub_10041C214(v3);
    *(_QWORD *)(v0 + 40) = v11;
    v13 = sub_10002A750(&qword_100649DF0);
    v14 = sub_100005ED8(0, &qword_100649ED8, REMAccountCapabilities_ptr);
    v15 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
    v16 = sub_100017608((unint64_t *)&qword_100649EE8, &qword_100649ED8, REMAccountCapabilities_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = Sequence.compactMapToSet<A>(_:)(sub_100180628, v12, v13, v14, v15, v16);
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v12 + 128);
    swift_retain();
    v18 = sub_1002AC13C(v17);
    swift_bridgeObjectRelease(v17);
    type metadata accessor for TTRIPrivacyChecker(0);
    TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)((Swift::OpaquePointer)v18);
    swift_release();
    v2 = swift_release();
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_10016178C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v20, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v14 = Strong;
    if (a1 > 4u)
    {
      sub_100153844(a4, a5, 0, 0);
    }
    else
    {
      v15 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
      type metadata accessor for MainActor(0);
      v16 = swift_retain();
      v17 = static MainActor.shared.getter(v16);
      v18 = (_QWORD *)swift_allocObject(&unk_1005F48B8, 40, 7);
      v18[2] = v17;
      v18[3] = &protocol witness table for MainActor;
      v18[4] = v14;
      sub_100148388((uint64_t)v11, (uint64_t)&unk_100649F78, (uint64_t)v18, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
      swift_release();
      sub_1001A7E14(a4, a1);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100161904(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v7 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    type metadata accessor for MainActor(0);
    swift_retain();
    swift_bridgeObjectRetain(a4);
    v15 = static MainActor.shared.getter(v14);
    v16 = swift_allocObject(&unk_1005F4840, 56, 7);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v16 + 32) = v12;
    *(_BYTE *)(v16 + 40) = a3 & 1;
    *(_QWORD *)(v16 + 48) = a4;
    sub_100148388((uint64_t)v9, (uint64_t)&unk_100649F58, v16, (uint64_t)&unk_1005F4868, (uint64_t)&type metadata for Bool, (uint64_t)&unk_100649F68);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100161A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a6;
  *(_BYTE *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = v10;
  return swift_task_switch(sub_100161AC4, v9, v10);
}

uint64_t sub_100161AC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064A75C);
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_100161B20;
  return sub_1001A04C4(*(_BYTE *)(v0 + 72), *(_QWORD *)(v0 + 32), 1);
}

uint64_t sub_100161B20(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_BYTE *)(*v1 + 73) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100161B78, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100161B78()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 73);
  v2 = *(_BYTE **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100161BB4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    swift_retain();
    sub_1001A27AC(a3 & 1, a4);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100161C38(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  if (sub_10037BF58(a1, a4))
    v13 = a5;
  else
    v13 = 0;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v14 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v14 + 16, a6);
  v15 = (_QWORD *)swift_allocObject(&unk_1005F47F0, 40, 7);
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a7;
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a3);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(a2, a3, 0, 0, 0, 0, 0, 0, 0, 0, v13, sub_100180DE0, v15);
}

double sub_100161D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    swift_retain();
    sub_1001AC4A4(a3, a4);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100161DC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v8;
  double result;
  _BYTE v10[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  if (swift_weakLoadStrong(v8))
  {
    if ((a3 & 1) != 0)
    {
      sub_100150EB8(a4);
    }
    else if ((a5 & 1) != 0)
    {
      sub_1001510D4(a4);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100161E50(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v4 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = swift_allocObject(&unk_1005F47A0, 128, 7);
    sub_100180C6C((uint64_t)a1, v13 + 16);
    v14 = *(_QWORD *)(v12 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v14, v26, 0, 0);
    sub_10002B1E8(v14, (uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v15 = v9[*(int *)(v7 + 20)];
    sub_100180CB0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100182738);
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v15 & 1) != 0
      || (v16 = swift_unknownObjectWeakLoadStrong(v12 + 16)) != 0
      && (v18 = v16,
          v19 = *(_QWORD *)(v12 + 24),
          ObjectType = swift_getObjectType(v16, v17),
          LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(ObjectType, v19),
          swift_unknownObjectRelease(v18),
          (v19 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100012DC4(v21, (uint64_t)qword_100648980);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }
      swift_release();
      swift_release();

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_100180CA8, v13, (uint64_t)v6);
      sub_1000073A0((uint64_t)v6, &qword_100654880);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_1001620E8(uint64_t a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[14];
  _QWORD v16[15];

  sub_100180C6C((uint64_t)a2, (uint64_t)v15);
  v4 = (void *)v15[0];
  v3 = (void *)v15[1];
  v5 = v15[3];
  v6 = v15[5];
  v7 = v15[7];
  v8 = v15[9];
  v9 = v15[11];
  v10 = (void *)v15[13];
  sub_100180C6C((uint64_t)a2, (uint64_t)v16);
  v11 = v16[0];
  if (v16[0])
  {
    v12 = v10;
    v13 = v4;
    v14 = v3;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    TTRReminderEditor.addAssignment(assigneeID:originatorID:)(v11, 0);
    sub_100180CB0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100180D04);
  }
  else
  {
    TTRReminderEditor.removeAllAssignments()();
  }
}

void sub_1001621CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  id v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[28];
  _OWORD v28[14];
  _OWORD v29[7];

  v6 = *(_QWORD *)(a3 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 136), a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v6 + 280))(v27, a2, ObjectType, v6);
  sub_10000F614((uint64_t)v27, (uint64_t)v28, (uint64_t *)&unk_100649F30);
  if (sub_100076D84((uint64_t *)v28) == 1)
  {
    v8 = 0;
  }
  else
  {
    v29[4] = v28[4];
    v29[5] = v28[5];
    v29[6] = v28[6];
    v29[0] = v28[0];
    v29[1] = v28[1];
    v29[2] = v28[2];
    v29[3] = v28[3];
    sub_1001809E4((uint64_t)v29);
    sub_100180A6C((uint64_t)v27);
    v8 = *(id *)&v29[0];
    sub_10017EADC((uint64_t)v29);
  }
  v9 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  v11 = *a1;
  v26 = *a1;
  *a1 = 0x8000000000000000;
  v13 = sub_1002AA5A4(v8);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = v12;
  if (*(_QWORD *)(v11 + 24) >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_15;
  }
  else
  {
    sub_10045BD04(v16, isUniquelyReferenced_nonNull_native);
    v11 = v26;
    v17 = sub_1002AA5A4(v8);
    if ((v3 & 1) != (v18 & 1))
    {
      v25 = sub_10002A750(&qword_100642AC0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v25);
      __break(1u);
      return;
    }
    v13 = v17;
  }
  while (1)
  {
    v19 = *a1;
    *a1 = v11;
    swift_bridgeObjectRelease(v19);
    v20 = (_QWORD *)*a1;
    swift_bridgeObjectRetain(*a1);
    if ((v3 & 1) == 0)
    {
      sub_10045DF88(v13, (uint64_t)v8, 0, v20);
      v21 = v9;
    }
    a1 = (_QWORD *)v20[7];
    swift_bridgeObjectRelease(v20);
    v22 = a1[v13];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
      break;
LABEL_14:
    __break(1u);
LABEL_15:
    sub_1002B1034();
    v11 = v26;
  }
  a1[v13] = v24;

}

void sub_1001623C4(uint64_t a1, uint64_t a2, char a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v15;
  _BYTE v16[24];

  v15 = a6 + 16;
  swift_beginAccess(a6 + 16, v16, 0, 0);
  if (swift_weakLoadStrong(v15))
  {
    swift_retain();
    sub_1001AC6B4(a1, a2, a3 & 1, (uint64_t)a4, a5, a7, a8);
    swift_release();
    swift_release();
  }
  else
  {
    a4(_swiftEmptyArrayStorage);
  }
}

double sub_100162498(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    swift_retain();
    swift_release();
    sub_1001AC900(a1, a3);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10016251C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double result;
  _BYTE v10[24];

  v6 = a2 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_100648980);
  v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List Set Custom Tags", 30, 2, v8);
  swift_bridgeObjectRelease(v8);
  swift_beginAccess(v6, v10, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    sub_100153AE8(a3, a4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100162600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE v18[24];

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v18, 0, 0);
  if (swift_weakLoadStrong(a4))
  {
    switch(a3)
    {
      case 2:
        goto LABEL_6;
      case 1:
        swift_retain();
        sub_1001ACB18(a1, a2, a5);
        swift_release();
LABEL_7:
        swift_release();
        return;
      case 0:
LABEL_6:
        swift_retain();
        sub_1001ACB30(a1, a2, a5);
        swift_release();
        goto LABEL_7;
    }
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v14 = sub_100012DC4(v10, (uint64_t)qword_100648980);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
    v15 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    v16 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"unknown menu item state", 23, 2uLL, v15, v16);
    __break(1u);
  }
}

double sub_10016279C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    swift_retain();
    swift_release();
    sub_1001ACD38((uint64_t)&_swiftEmptySetSingleton, a2);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100162820(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double result;
  _BYTE v9[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  if (swift_weakLoadStrong(v7))
  {
    swift_retain();
    swift_release();
    sub_1001A4878(a3, a1, a4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001628B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    if (a2)
    {
      v12 = *(_QWORD *)(Strong + 232);
      v13 = *(_QWORD *)(v12 + 96);
      swift_beginAccess(v13 + 40, v28, 0, 0);
      v15 = *(_QWORD *)(v13 + 40);
      if (v15)
      {
        v16 = *(_QWORD *)(v13 + 48);
        ObjectType = swift_getObjectType(v15, v14);
        v18 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 24);
        v19 = swift_unknownObjectRetain(v15);
        v18(ObjectType, v16, v19);
        swift_unknownObjectRelease(v15);
      }
      sub_10041C214(v12);
      sub_1001ACF1C(a4, a1, a2, a5, 0, 0, 1, 0, 0);
    }
    else
    {
      v20 = *(_QWORD *)(Strong + 232);
      v21 = *(_QWORD *)(v20 + 96);
      swift_beginAccess(v21 + 40, v28, 0, 0);
      v23 = *(_QWORD *)(v21 + 40);
      if (v23)
      {
        v24 = *(_QWORD *)(v21 + 48);
        v25 = swift_getObjectType(v23, v22);
        v26 = *(void (**)(uint64_t, uint64_t, __n128))(v24 + 24);
        v27 = swift_unknownObjectRetain(v23);
        v26(v25, v24, v27);
        swift_unknownObjectRelease(v23);
      }
      sub_10041C214(v20);
      sub_1001ACF1C(a4, 0, 0xE000000000000000, a5, 0, 1, 1, 0, 0);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100162A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = *(_QWORD *)(Strong + 232);
    v10 = *(_QWORD *)(v9 + 96);
    swift_beginAccess(v10 + 40, v17, 0, 0);
    v12 = *(_QWORD *)(v10 + 40);
    if (v12)
    {
      v13 = *(_QWORD *)(v10 + 48);
      ObjectType = swift_getObjectType(v12, v11);
      v15 = *(void (**)(uint64_t, uint64_t, __n128))(v13 + 24);
      v16 = swift_unknownObjectRetain(v12);
      v15(ObjectType, v13, v16);
      swift_unknownObjectRelease(v12);
    }
    sub_10041C214(v9);
    sub_1001ACF1C(a3, 0, 0xE000000000000000, a4, 0, 1, 1, 0, 0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100162B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
    type metadata accessor for MainActor(0);
    swift_retain();
    swift_bridgeObjectRetain(a3);
    v17 = static MainActor.shared.getter(v16);
    v18 = (_QWORD *)swift_allocObject(a4, 48, 7);
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v14;
    v18[5] = a3;
    sub_100148388((uint64_t)v11, a5, (uint64_t)v18, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100162C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[12] = a4;
  v5[13] = a5;
  v6 = sub_10002A750((uint64_t *)&unk_100649BE0);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100649CA0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[16] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v5[17] = v10;
  v5[18] = v11;
  return swift_task_switch(sub_100162D2C, v10, v11);
}

uint64_t sub_100162D2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 104);
  v2 = sub_1001AFB84(*(_QWORD *)(v0 + 104));
  if (v5 <= 3u)
  {
    sub_1001805D4((uint64_t)v2, v3, v4, v5);
    v6 = (_QWORD *)swift_task_alloc(dword_10064A7C4);
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_100162F08;
    return sub_1001A1B88(*(_QWORD *)(v0 + 104), 0);
  }
  v8 = *(_QWORD *)(v0 + 120);
  swift_release();
  v9 = *(_QWORD *)(v1 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 56), v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 136))(ObjectType, v9);
  v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12);
  v14 = *(_QWORD *)(v0 + 120);
  if (v13 == 1)
  {
    v15 = &qword_100649CA0;
  }
  else
  {
    v16 = *(_BYTE *)(v14 + *(int *)(v12 + 116));
    sub_10001F544(v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if ((v16 & 1) == 0)
      goto LABEL_9;
    v17 = *(_QWORD *)(v0 + 104);
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_9;
    v18 = *(_QWORD *)(v0 + 112);
    v19 = enum case for REMRDLUserOperationDetail.rdl_displayMenuToDelete(_:);
    v20 = type metadata accessor for REMRDLUserOperationDetail(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104))(v18, v19, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    *(_QWORD *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 56) = xmmword_1005218A0;
    *(_BYTE *)(v0 + 72) = 0;
    sub_10015D094(v17, 1, v18, v0 + 16, 0, 0);
    v15 = (uint64_t *)&unk_100649BE0;
    v14 = v18;
  }
  sub_1000073A0(v14, v15);
LABEL_9:
  v22 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100162F08(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_BYTE *)(*v1 + 73) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100162F60, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_100162F60()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 73);
  swift_release();
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 104);
    v3 = sub_10002A750(&qword_100649DF0);
    v4 = sub_100005ED8(0, &qword_100649ED8, REMAccountCapabilities_ptr);
    v5 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
    v6 = sub_100017608((unint64_t *)&qword_100649EE8, &qword_100649ED8, REMAccountCapabilities_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = Sequence.compactMapToSet<A>(_:)(sub_100180628, v2, v3, v4, v5, v6);
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v2 + 128);
    swift_retain();
    v8 = sub_1002AC13C(v7);
    swift_bridgeObjectRelease(v7);
    type metadata accessor for TTRIPrivacyChecker(0);
    TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)((Swift::OpaquePointer)v8);
    swift_release();
    swift_release();
  }
  v9 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001630BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _OWORD v14[2];
  uint64_t v15;
  __int128 v16;
  char v17;

  v5 = sub_10002A750((uint64_t *)&unk_100649BE0);
  __chkstk_darwin(v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v9 = enum case for REMRDLUserOperationDetail.rdl_displayMenuToRecover(_:);
    v10 = type metadata accessor for REMRDLUserOperationDetail(0);
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v7, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    v16 = xmmword_1005218A0;
    v17 = 0;
    sub_100179238(a3, (uint64_t)v7, (uint64_t)v14);
    swift_release();
    return sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100649BE0);
  }
  return result;
}

void sub_1001631E0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD v46[7];
  char v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _BYTE v56[72];

  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    sub_10002B1E8(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v14 = Strong;
      v15 = *(_QWORD *)(a2 + 24);
      ObjectType = swift_getObjectType(Strong, v13);
      (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t))(v15 + 224))(v46, v11, ObjectType, v15);
      v44 = a3;
      v17 = (void *)v46[0];
      v18 = v46[1];
      v19 = v46[2];
      v21 = v46[3];
      v20 = v46[4];
      v22 = v46[6];
      v45 = v46[5];
      v23 = v47;
      swift_unknownObjectRelease(v14);
      v24 = (uint64_t)v11;
      v25 = v17;
      a3 = v44;
      sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10000F614((uint64_t)v46, (uint64_t)v56, &qword_100642D10);
      v26 = v45;
      if ((~v56[40] & 0xFE) != 0)
        goto LABEL_10;
      goto LABEL_7;
    }
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v25 = 0;
  v18 = 0;
  v19 = 0;
  v21 = 0;
  v20 = 0;
  v26 = 254;
LABEL_7:
  v45 = v26;
  v27 = objc_opt_self(UITableViewCell);
  v28 = swift_dynamicCastObjCClass(a3, v27);
  if (v28)
  {
    v29 = v28;
    v30 = a3;
    v31 = v19;
    v32 = v18;
    v33 = v25;
    v34 = v30;
    static TTRIPopoverAnchor.trailingPortion(in:permittedArrowDirections:)(&v48, v29, 0, 1);
    v44 = v48;
    v43 = v49;
    v35 = v51;
    v42 = v50;
    v36 = v20;
    v20 = v52;
    v37 = v53;
    v38 = v21;
    v39 = v54;
    v23 = v55;
    sub_1000866B0(v33, v32, v31, v38, v36, v45);

    v25 = v44;
    v18 = v43;
    v19 = v42;
    v26 = v37;
    v22 = v39;
    v21 = v35;
  }
  else
  {
    sub_1000866B0(v25, v18, v19, v21, v20, v45);
    static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(&v48, a3, 0, 1, v40);
    v25 = v48;
    v18 = v49;
    v19 = v50;
    v21 = v51;
    v20 = v52;
    v26 = v53;
    v22 = v54;
    v23 = v55;
  }
LABEL_10:
  *(_QWORD *)a4 = v25;
  *(_QWORD *)(a4 + 8) = v18;
  *(_QWORD *)(a4 + 16) = v19;
  *(_QWORD *)(a4 + 24) = v21;
  *(_QWORD *)(a4 + 32) = v20;
  *(_QWORD *)(a4 + 40) = v26;
  *(_QWORD *)(a4 + 48) = v22;
  *(_BYTE *)(a4 + 56) = v23;
}

uint64_t sub_1001634BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, a2) & 1) != 0)
  {
    v6 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.LinkAttachment(0) + 20);
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a3, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, v7);
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
}

Class sub_100163598(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  NSString v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  NSString v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t (*v58)(uint64_t, uint64_t);
  char v59;
  unint64_t v60;
  unint64_t v61;
  const char *v62;
  unint64_t v63;
  unint64_t v64;
  Swift::String v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void (*v76)(char *, id, uint64_t);
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  id v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  id v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  UIMenuElementSize v101;
  uint64_t v102;
  UIMenuElementSize v103;
  Swift::String v104;
  Class isa;
  uint64_t v107;
  uint64_t v108;
  Swift::OpaquePointer v109;
  id v110;
  id v111;
  uint64_t v112;
  void *object;
  uint64_t countAndFlagsBits;
  void (*v115)(uint64_t, char *, uint64_t);
  uint64_t v116;
  void (*v117)(char *, id, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  char *v123;
  id v124;
  char *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133[5];
  char v134;
  UIImage_optional v135;

  v119 = a7;
  v120 = a8;
  v128 = a3;
  v129 = a6;
  v124 = a5;
  v127 = a4;
  v121 = a2;
  v118 = a9;
  v112 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v112 - 8);
  v125 = *(char **)(v10 + 64);
  __chkstk_darwin(v112);
  v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = v12;
  v13 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v20._countAndFlagsBits = 0xD000000000000018;
  v20._object = (void *)0x80000001005674F0;
  v21._countAndFlagsBits = 2037411651;
  v21._object = (void *)0xE400000000000000;
  v22 = TTRLocalizedString(_:comment:)(v21, v20);
  countAndFlagsBits = v22._countAndFlagsBits;
  object = v22._object;
  v23 = String._bridgeToObjectiveC()();
  v130 = (id)objc_opt_self(UIImage);
  v110 = objc_msgSend(v130, "_systemImageNamed:", v23);

  sub_10002B1E8(a3, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v24 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v127, (uint64_t)v24, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
  v117 = *(void (**)(char *, id, uint64_t))(v10 + 16);
  v25 = v112;
  v117(v12, v124, v112);
  v26 = *(unsigned __int8 *)(v17 + 80);
  v27 = (v26 + 24) & ~v26;
  v126 = (id)(v27 + v18);
  v127 = v27;
  v28 = v26 | 7;
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v27 + v18 + v29) & ~v29;
  v31 = *(unsigned __int8 *)(v10 + 80);
  v32 = (v15 + v31 + v30) & ~v31;
  v122 = v28;
  v116 = v28 | v31;
  v33 = swift_allocObject(&unk_1005F4480, &v125[v32], v28 | v31 | v29);
  v34 = v121;
  *(_QWORD *)(v33 + 16) = v121;
  sub_10001F580((uint64_t)v19, v33 + v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F580((uint64_t)v24, v33 + v30, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
  v115 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v35 = v123;
  v115(v33 + v32, v123, v25);
  v111 = v34;
  v121 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v110, 0, 0, 0, 0, 0, 0, sub_10017F9DC, v33);
  v36._countAndFlagsBits = 0xD000000000000019;
  v36._object = (void *)0x8000000100567510;
  v37._countAndFlagsBits = 0x6572616853;
  v37._object = (void *)0xE500000000000000;
  v38 = TTRLocalizedString(_:comment:)(v37, v36);
  countAndFlagsBits = v38._countAndFlagsBits;
  object = v38._object;
  v39 = String._bridgeToObjectiveC()();
  v110 = objc_msgSend(v130, "_systemImageNamed:", v39);

  v40 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v40 + 16, v129);
  sub_10002B1E8(v128, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v41 = v35;
  v42 = v25;
  v117(v41, v124, v25);
  v43 = ((unint64_t)v126 + v31) & ~v31;
  v44 = (unint64_t)&v125[v43 + 7] & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject(&unk_1005F44A8, v47 + 8, v116);
  v49 = v111;
  *(_QWORD *)(v48 + 16) = v111;
  v125 = v19;
  sub_10001F580((uint64_t)v19, v48 + v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v115(v48 + v43, v123, v42);
  *(_QWORD *)(v48 + v44) = v119;
  *(_QWORD *)(v48 + v45) = v120;
  *(_QWORD *)(v48 + v46) = v40;
  v50 = (void *)v118;
  *(_QWORD *)(v48 + v47) = v118;
  v51 = v49;
  swift_retain();
  swift_retain();
  v52 = v50;
  v124 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v110, 0, 0, 0, 0, 0, 0, sub_10017FEC8, v48);
  v53 = *(char **)(v129 + 136);
  v54 = *(_QWORD *)(v129 + 144);
  v55 = v129;
  ObjectType = swift_getObjectType(v53, v56);
  v58 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 144);
  v123 = v53;
  v119 = ObjectType;
  v120 = v54;
  v59 = v58(ObjectType, v54);
  v60 = 0xD00000000000001DLL;
  if ((v59 & 1) != 0)
  {
    v61 = 0x8000000100567570;
    v62 = "Small Thumbnail Toggle string";
  }
  else
  {
    v61 = 0x8000000100567530;
    v62 = "Large Thumbnail Toggle string";
  }
  v63 = (unint64_t)(v62 - 32) | 0x8000000000000000;
  v64 = 0xD000000000000010;
  v65 = TTRLocalizedString(_:comment:)(*(Swift::String *)(&v61 - 1), *(Swift::String *)&v60);
  v118 = v65._countAndFlagsBits;
  v117 = (void (*)(char *, id, uint64_t))v65._object;
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v130, "_systemImageNamed:", v66);

  v68 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v68 + 16, v55);
  v69 = v128;
  v70 = (uint64_t)v125;
  sub_10002B1E8(v128, (uint64_t)v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v71 = ((unint64_t)v126 + 7) & 0xFFFFFFFFFFFFFFF8;
  v116 = v71 + 8;
  v72 = v122;
  v73 = swift_allocObject(&unk_1005F44D0, v71 + 8, v122);
  *(_QWORD *)(v73 + 16) = v51;
  v74 = v127;
  sub_10001F580(v70, v73 + v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v73 + v71) = v68;
  v75 = v51;
  v126 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v118, v117, 0, 0, v67, 0, 0, 0, 0, 0, 0, sub_10017FF70, v73);
  v118 = static TTRLocalizableStrings.Common.deleteButton.getter();
  v117 = v76;
  v77 = String._bridgeToObjectiveC()();
  v78 = objc_msgSend(v130, "_systemImageNamed:", v77);

  v79 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v79 + 16, v129);
  sub_10002B1E8(v69, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v80 = swift_allocObject(&unk_1005F44F8, v116, v72);
  *(_QWORD *)(v80 + 16) = v75;
  sub_10001F580(v70, v80 + v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v80 + v71) = v79;
  v81 = v75;
  v82 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v118, v117, 0, 0, v78, 0, 0, 0, 0, 2, 0, sub_10018035C, v80);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v120 + 8))(v133, v119);
  sub_100179C5C(v133);
  v132 = (uint64_t)_swiftEmptyArrayStorage;
  v83 = v121;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83);
  v85 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v84 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v85 >= v84 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1);
  v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v83);
  specialized Array._endMutation()(v86);
  v87 = v124;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
  v89 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v88 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v89 >= v88 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
  v90 = v134;
  v91 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
  specialized Array._endMutation()(v91);
  v92 = v126;
  if ((v90 & 1) == 0)
  {
    v93 = v126;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
    v95 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v94 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v95 >= v94 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
    v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v93);
    specialized Array._endMutation()(v96);
    v97 = v82;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
    v99 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v98 = *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v99 >= v98 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
    v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
    specialized Array._endMutation()(v100);
  }
  v101 = v132;
  if ((unint64_t)v132 >> 62)
  {
    if (v132 < 0)
      v107 = v132;
    else
      v107 = v132 & 0xFFFFFFFFFFFFFF8;
    v108 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v101);
    v103 = _bridgeCocoaArray<A>(_:)(v107, v108);
    swift_bridgeObjectRelease(v101);
  }
  else
  {
    swift_bridgeObjectRetain(v132);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v102);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v103 = v101;
  }
  swift_bridgeObjectRelease(v101);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v104._countAndFlagsBits = 0;
  v104._object = (void *)0xE000000000000000;
  v135.value.super.isa = 0;
  v135.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v104, (Swift::String_optional)0, v135, 0, 0xFFFFFFFFFFFFFFFFLL, v103, v109).super.super.isa;

  return isa;
}

void sub_100163FA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  Class isa;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD aBlock[7];
  char v80[40];
  char v81[80];

  v78 = a5;
  v77 = a4;
  v76 = type metadata accessor for URL(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v69 = v6;
  v70 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for URLResourceValues(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v74 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100649EA0);
  __chkstk_darwin(v8);
  v73 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v17 = sub_100012DC4(v13, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v18, v81);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656D686361747441;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  v20 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = 1835365449;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v22 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v23 = a2;
  v24 = TTRTreeStorageItem.treeItemDescription.getter(v21, v22);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v24;
  *(_QWORD *)(inited + 104) = v25;
  v26 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Copy {Attachment: %@} from {Item: %@)", 52, 2, v26);
  v27 = swift_bridgeObjectRelease(v26);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v27);
  sub_10002B1E8(v77, (uint64_t)v12, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
    v28 = v78;
LABEL_7:
    v40 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
    v41 = sub_10002A750(&qword_10064B8E0);
    v42 = v75;
    v43 = *(unsigned __int8 *)(v75 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v41, v44 + *(_QWORD *)(v75 + 72), v43 | 7);
    *(_OWORD *)(v45 + 16) = xmmword_100520250;
    v46 = v45 + v44;
    v47 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v46, v28, v76);
    v48 = sub_1000175C8((unint64_t *)&qword_100649EB0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    UIPasteboard.setObjects<A>(_:)(v45, v47, v48);

    swift_bridgeObjectRelease(v45);
    return;
  }
  swift_bridgeObjectRelease(*v12);
  v29 = sub_10002A750(&qword_100649EB8);
  v30 = swift_initStackObject(v29, v80);
  *(_OWORD *)(v30 + 16) = xmmword_100520250;
  *(_QWORD *)(v30 + 32) = NSURLContentTypeKey;
  v31 = NSURLContentTypeKey;
  sub_10049016C(v30);
  v33 = v32;
  swift_setDeallocating(v30);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(v30 + 32, 1, v34);
  v35 = v74;
  v28 = v78;
  URL.resourceValues(forKeys:)(v33);
  v36 = swift_bridgeObjectRelease(v33);
  v37 = (uint64_t)v73;
  URLResourceValues.contentType.getter(v36);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v72);
  v38 = type metadata accessor for UTType(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_1000073A0(v37, (uint64_t *)&unk_100649EA0);
    goto LABEL_7;
  }
  UTType.identifier.getter();
  v50 = v49;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  v51 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v52 = String._bridgeToObjectiveC()();
  v53 = swift_bridgeObjectRelease(v50);
  v54 = v75;
  v55 = v70;
  v56 = v28;
  v57 = v76;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v75 + 16))(v70, v56, v76, v53);
  v58 = *(unsigned __int8 *)(v54 + 80);
  v59 = (v58 + 16) & ~v58;
  v60 = swift_allocObject(&unk_1005F4520, v59 + v69, v58 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v60 + v59, v55, v57);
  aBlock[4] = sub_10018042C;
  aBlock[5] = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001647A0;
  aBlock[3] = &unk_1005F4538;
  v61 = _Block_copy(aBlock);
  objc_msgSend(v51, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:", v52, 0, v61, swift_release().n128_f64[0]);
  _Block_release(v61);

  v62 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v63 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v64 = swift_allocObject(v63, 40, 7);
  *(_OWORD *)(v64 + 16) = xmmword_100521140;
  *(_QWORD *)(v64 + 32) = v51;
  aBlock[0] = v64;
  specialized Array._endMutation()(v64);
  v65 = aBlock[0];
  sub_100005ED8(0, &qword_100649EC0, NSItemProvider_ptr);
  v66 = v51;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v62, "setItemProviders:", isa, swift_bridgeObjectRelease(v65).n128_f64[0]);

}

uint64_t sub_1001646CC(void (*a1)(uint64_t, unint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  URL.startAccessingSecurityScopedResource()();
  v5 = Data.init(contentsOf:options:)(a3, 0);
  v7 = v6;
  sub_1001804A4(v5, v6);
  a1(v5, v7, 0);
  sub_1000A2B58(v5, v7);
  sub_1000A2B58(v5, v7);
  URL.stopAccessingSecurityScopedResource()();
  return 0;
}

id sub_1001647A0(uint64_t a1, void *aBlock)
{
  uint64_t (*v2)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t);
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = *(uint64_t (**)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject(&unk_1005F4570, 24, 7);
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v5 = (void *)v2(sub_10018049C, v4);
  swift_release();
  swift_release();
  return v5;
}

void sub_10016481C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  isa = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = _convertErrorToNSError(_:)(a3);
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);

}

uint64_t sub_10016489C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[136];

  v52 = a8;
  v49 = a6;
  v50 = a5;
  v53 = a4;
  v54 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a7 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v17 = sub_100012DC4(v12, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  v18 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v18, v58);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656D686361747441;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  v20 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = 1835365449;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v22 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v23 = a2;
  v24 = TTRTreeStorageItem.treeItemDescription.getter(v21, v22);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v24;
  *(_QWORD *)(inited + 104) = v25;
  v26 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Share {Attachment: %@} from {Item: %@)", 53, 2, v26);
  v27 = swift_bridgeObjectRelease(v26);
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
  v29 = v53;
  if ((URL.isFileURL.getter(v28) & 1) != 0)
  {
    v30 = v50;
    v31 = (void **)(v49 + 16);
    v32 = sub_10002A750(&qword_100642C58);
    v33 = &v11[*(int *)(v32 + 48)];
    v34 = *(int *)(v32 + 64);
    v35 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v11, v29, v35);
    swift_beginAccess(v30 + 16, v56, 0, 0);
    v36 = *(_QWORD *)(v30 + 24);
    *(_QWORD *)v33 = *(_QWORD *)(v30 + 16);
    *((_QWORD *)v33 + 1) = v36;
    swift_beginAccess(v31, v55, 0, 0);
    v37 = *v31;
    *(_QWORD *)&v11[v34] = v37;
    v38 = v54;
    swift_storeEnumTagMultiPayload(v11, v54, 0);
    v39 = v37;
    swift_bridgeObjectRetain(v36);
  }
  else
  {
    v40 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v11, v29, v40);
    v38 = v54;
    swift_storeEnumTagMultiPayload(v11, v54, 1);
  }
  swift_beginAccess(v16, v57, 0, 0);
  Strong = swift_weakLoadStrong(v16);
  if (Strong)
  {
    v42 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v42);
    swift_release();
    v43 = sub_10002A750((uint64_t *)&unk_100649E90);
    v44 = *(unsigned __int8 *)(v51 + 80);
    v45 = (v44 + 32) & ~v44;
    v46 = swift_allocObject(v43, v45 + *(_QWORD *)(v51 + 72), v44 | 7);
    *(_OWORD *)(v46 + 16) = xmmword_100520250;
    v47 = v46 + v45;
    sub_10002B1E8((uint64_t)v11, v47, type metadata accessor for TTRIRemindersListRouterShareSheetItem);
    sub_10009F7C4(v46, v52);
    swift_setDeallocating(v46);
    swift_arrayDestroy(v47, 1, v38);
    swift_deallocClassInstance(v46, 32, 7);
    swift_unknownObjectRelease(v42);
  }
  return sub_10001F544((uint64_t)v11, type metadata accessor for TTRIRemindersListRouterShareSheetItem);
}

double sub_100164CAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t Strong;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[24];
  _BYTE v37[128];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a4 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = sub_100012DC4(v6, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v37);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656D686361747441;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  v14 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = 1835365449;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v16 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v17 = a2;
  v18 = TTRTreeStorageItem.treeItemDescription.getter(v15, v16);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v18;
  *(_QWORD *)(inited + 104) = v19;
  v20 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Toggle Size {Attachment: %@} from {Item: %@)", 59, 2, v20);
  v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v21);
  swift_beginAccess(v10, v36, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v25 = Strong;
    v26 = *(_QWORD *)(Strong + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 136), v23);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 144))(ObjectType, v26);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v26 + 152))((v28 & 1) == 0, ObjectType, v26);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 200))(ObjectType, v26);
    v30 = swift_unknownObjectWeakLoadStrong(v25 + 16);
    if (v30)
    {
      v32 = v30;
      v33 = *(_QWORD *)(v25 + 24);
      v34 = swift_getObjectType(v30, v31);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 112))(v29, v34, v33);
      swift_release();
      swift_release();
      swift_unknownObjectRelease(v32);
    }
    else
    {
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_100164F40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t Strong;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _BYTE v32[24];
  _BYTE v33[136];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a4 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v12 = sub_100012DC4(v7, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656D686361747441;
  *(_QWORD *)(inited + 40) = 0xEA0000000000746ELL;
  v15 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = 1835365449;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v18 = a2;
  v19 = TTRTreeStorageItem.treeItemDescription.getter(v16, v17);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v19;
  *(_QWORD *)(inited + 104) = v20;
  v21 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Delete {Attachment: %@} from {Item: %@)", 54, 2, v21);
  v22 = swift_bridgeObjectRelease(v21);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v22);
  swift_beginAccess(v11, v32, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v24 = *(_QWORD **)(Strong + 232);
    swift_unknownObjectRetain(v24);
    swift_release();
    v25 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v26 = *(_QWORD *)(v16 - 8);
    v27 = *(_QWORD *)(v26 + 72);
    v28 = *(unsigned __int8 *)(v26 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(v25, v29 + v27, v28 | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100520250;
    sub_10002B1E8(a3, v30 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v31 = v18;
    sub_10042C684(v30, v24, (uint64_t)v31);
    swift_unknownObjectRelease(v24);
    swift_bridgeObjectRelease(v30);

  }
}

uint64_t sub_1001651CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v9);
  result = swift_getEnumCaseMultiPayload(v8, v6);
  if ((result - 1) < 2)
  {
    result = sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_6:
    *a3 = 0;
    return result;
  }
  if ((_DWORD)result)
    goto LABEL_6;
  v13 = *(_QWORD *)(a2 + 136);
  v12 = *(_QWORD *)(a2 + 144);
  ObjectType = swift_getObjectType(v13, v11);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 248))(a1, ObjectType, v12);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = REMReminder.accountCapabilities.getter();

    *a3 = v17;
  }
  else
  {
    *a3 = 0;
  }
  return sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
}

double sub_1001652D8(uint64_t a1)
{
  return sub_1001652E8(a1, (uint64_t)"User cancelled deleting completed reminders", 43);
}

double sub_1001652E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  double result;

  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100648980);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4(a2, a3, 2, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

double sub_10016537C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  __n128 v23;
  uint64_t Strong;
  uint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void (*v41)(char *, uint64_t, void *, void (*)(uint64_t, uint64_t, char), uint64_t, uint64_t, uint64_t);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[80];

  v44 = a5;
  v45 = type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType(0);
  v8 = *(_QWORD *)(v45 - 8);
  v9 = __chkstk_darwin(v45);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v43 - v12;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a4 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v19 = sub_100012DC4(v14, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
  v20 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v20, v47);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  strcpy((char *)(inited + 32), "olderThanDate");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  v22 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"User confirmed deleting completed reminders {olderThanDate: %@}", 63, 2, v22);
  v23 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v23);
  swift_beginAccess(v18, v46, 0, 0);
  Strong = swift_weakLoadStrong(v18);
  if (Strong)
  {
    v27 = Strong;
    v28 = *(_QWORD *)(Strong + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 136), v25);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 48))(ObjectType, v28);
    if (v30)
    {
      v32 = v30;
      v33 = v31;
      v34 = swift_getObjectType(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v33);
      swift_unknownObjectRelease(v32);
      v35 = v45;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v45);
      v36 = *(_QWORD *)(v27 + 80);
      v38 = swift_getObjectType(*(_QWORD *)(v27 + 72), v37);
      v39 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v40 = (void *)static OS_dispatch_queue.main.getter(v39);
      v41 = *(void (**)(char *, uint64_t, void *, void (*)(uint64_t, uint64_t, char), uint64_t, uint64_t, uint64_t))(v36 + 120);
      swift_retain();
      v41(v13, v44, v40, sub_10017EF34, v27, v38, v36);

      v42 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v13, v35, v42);
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100165650(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;
  uint64_t v20;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;
  uint64_t v24;

  if ((a3 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v6 = type metadata accessor for Logger(0);
    sub_100012DC4(v6, (uint64_t)qword_100648980);
    swift_errorRetain(a1);
    v7 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v23 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(a1, v22, v21);
      v11 = Error.rem_errorDescription.getter(v21[1], v21[2]);
      v13 = v12;
      v20 = sub_100027E40(v11, v12, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v13);
      sub_10017EF40(a1, a2, 1);
      sub_10017EF40(a1, a2, 1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Reminder list failed to delete completed reminders {error: %s}", v9, 0xCu);
      swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      sub_10017EF40(a1, a2, 1);
    }
    else
    {
      sub_10017EF40(a1, a2, 1);
      sub_10017EF40(a1, a2, 1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (a1 <= 0)
    {
      swift_bridgeObjectRetain(a2);
    }
    else
    {
      v23 = *(_QWORD *)(a4 + 128);
      sub_10017EF50(a1, a2, 0);
      type metadata accessor for TTRIPrivacyChecker(0);
      swift_retain();
      TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)((Swift::OpaquePointer)a2);
      swift_release();
    }
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v14 = type metadata accessor for Logger(0);
    sub_100012DC4(v14, (uint64_t)qword_100648980);
    swift_bridgeObjectRetain(a2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v18 = 134217984;
      sub_10017EF40(a1, a2, 0);
      v23 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v18 + 4, v18 + 12);
      sub_10017EF40(a1, a2, 0);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reminder list deleted completed reminders {count: %ld}", v18, 0xCu);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      sub_10017EF40(a1, a2, 0);
      sub_10017EF40(a1, a2, 0);
    }

  }
}

void sub_1001659F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[40];

  v7 = *(_QWORD *)(a1 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 72), a2);
  v9 = sub_10002A750((uint64_t *)&unk_1006415A0);
  inited = swift_initStackObject(v9, v17);
  *(_OWORD *)(inited + 16) = xmmword_100521140;
  *(_QWORD *)(inited + 32) = a2;
  v16 = inited;
  specialized Array._endMutation()(inited);
  v11 = a2;
  v12 = TTRUndoNavigationEditingTarget.init(reminderIDs:)(v16);
  v14 = swift_getObjectType(a3, v13);
  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(v14, a4);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 520))(v12, v15, ObjectType, v7);
  swift_bridgeObjectRelease(v12);

}

uint64_t sub_100165AD4()
{
  uint64_t v0;

  sub_10014866C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100165AF8()
{
  return type metadata accessor for TTRIRemindersCommonPresenter(0);
}

uint64_t type metadata accessor for TTRIRemindersCommonPresenter(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_1006489E0, (uint64_t)&nominal type descriptor for TTRIRemindersCommonPresenter);
}

void sub_100165B14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[32];

  v4[0] = &unk_100526F50;
  v4[1] = &unk_100526F68;
  v4[2] = &unk_100526F80;
  v4[3] = &unk_100526F80;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_100526F98;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = &unk_100526F80;
  v4[9] = &unk_100526F50;
  v4[10] = &unk_100526F98;
  v4[11] = &unk_100526FB0;
  v4[12] = &unk_100526F68;
  v4[13] = &unk_100526F80;
  v4[14] = &unk_100526F80;
  v4[15] = &unk_100526FC8;
  v4[16] = &unk_100526FC8;
  v4[17] = &unk_100526FE0;
  v4[18] = &unk_100526FE0;
  v4[19] = &unk_100526FF8;
  v4[20] = &unk_100527010;
  v4[21] = &unk_100526FE0;
  v4[22] = &unk_100527010;
  v4[23] = &unk_100527028;
  v4[24] = &unk_100527010;
  v4[25] = &unk_100527010;
  v4[26] = &unk_100526F98;
  v4[27] = &unk_100526F98;
  sub_1000492C8(319);
  if (v3 <= 0x3F)
  {
    v4[28] = *(_QWORD *)(v2 - 8) + 64;
    v4[29] = &unk_100527010;
    v4[30] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[31] = &unk_100527010;
    swift_updateClassMetadata2(a1, 256, 32, v4, a1 + 80);
  }
}

uint64_t sub_100165C1C()
{
  return type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier(0);
}

uint64_t type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100649348, (uint64_t)&nominal type descriptor for TTRIRemindersCommonPresenter.ContextMenuIdentifier);
}

uint64_t sub_100165C38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(uint64_t a1)
{
  return sub_100007328(a1, qword_100649B10, (uint64_t)&nominal type descriptor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
}

void *sub_100165CE0(char a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_100172EB4(a1 & 1, v1);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v3 + 8);
  swift_unknownObjectWeakAssign(v1 + 16, v4);
  return v2;
}

uint64_t sub_100165D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 576))(ObjectType, v3);
}

uint64_t sub_100165D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 584))(a1, ObjectType, v4);
}

double sub_100165DCC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_10002B1E8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  type metadata accessor for MainActor(0);
  v14 = swift_retain();
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 41) & ~v16;
  v18 = swift_allocObject(&unk_1005F38C8, v17 + v8, v16 | 7);
  *(_QWORD *)(v18 + 16) = v15;
  *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v18 + 32) = v3;
  *(_BYTE *)(v18 + 40) = a1;
  sub_10001F580((uint64_t)v9, v18 + v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100148388((uint64_t)v12, (uint64_t)&unk_100649C90, v18, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100165F4C()
{
  sub_1001A12F8();
}

BOOL sub_100165F70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  _BOOL8 v11;

  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  v9 = v8 + v7;
  sub_10002B1E8(a1, v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1001AB0E8(v8);
  v11 = (v10 & 0xFF00) != 512;
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, *(_QWORD *)(v8 + 16), v3);
  swift_deallocClassInstance(v8, 32, 7);
  return v11;
}

BOOL sub_100166054(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v5 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v4, v8 + v6, v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_100520250;
  sub_10002B1E8(a2, v9 + v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v10 = sub_1001A27AC(a1, v9);
  swift_bridgeObjectRelease(v9);
  return v10 > 0;
}

void sub_10016610C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100178A34(a1, a4);
}

void sub_100166114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  sub_100178BD0(a1, a4, a5, a6);
}

double sub_100166130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100178D7C(a1, a4, a5, a6);
}

uint64_t sub_100166150(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 208))(a1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_1001661C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _BYTE v6[24];

  v3 = *(_QWORD *)(v1 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v3, v6, 0, 0);
  a1[3] = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  a1[4] = &off_100606E48;
  v4 = sub_100028D70(a1);
  return sub_10002B1E8(v3, (uint64_t)v4, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
}

BOOL sub_100166248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6[5];
  char v7;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v6, ObjectType, v3);
  sub_100179C5C(v6);
  return (v7 & 1) == 0;
}

uint64_t sub_1001662B8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_100648980);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List select reminders", 31, 2, v2);
  swift_bridgeObjectRelease(v2);
  sub_10041C21C(v0[29]);
  v3 = v0[18];
  ObjectType = swift_getObjectType(v0[17], v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 688))(1, ObjectType, v3);
}

uint64_t sub_100166374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t);
  _BYTE v8[24];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + 96);
  result = swift_beginAccess(v1 + 40, v8, 0, 0);
  v4 = *(_QWORD *)(v1 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 48);
    ObjectType = swift_getObjectType(v4, v3);
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 48);
    swift_unknownObjectRetain(v4);
    v7(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_100166400(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10041AFC4(a1, a2);
}

uint64_t sub_100166420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t);
  _BYTE v8[24];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + 96);
  result = swift_beginAccess(v1 + 40, v8, 0, 0);
  v4 = *(_QWORD *)(v1 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 48);
    ObjectType = swift_getObjectType(v4, v3);
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
    swift_unknownObjectRetain(v4);
    v7(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

_QWORD *sub_1001664A0(uint64_t a1)
{
  return sub_10014B830(a1);
}

uint64_t sub_1001664C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[88];

  sub_10014BB08(a1, (uint64_t)v4);
  return sub_100179CD0((uint64_t)v4, a2);
}

uint64_t sub_1001664F8(unint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  return sub_10014C3F8(a1, a2, a3, a4);
}

uint64_t sub_100166504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  _BYTE v10[24];

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v1 + 96);
  swift_beginAccess(v2 + 40, v10, 0, 0);
  v4 = *(_QWORD *)(v2 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(v2 + 48);
    ObjectType = swift_getObjectType(v4, v3);
    v7 = *(void (**)(uint64_t, uint64_t, __n128))(v5 + 24);
    v8 = swift_unknownObjectRetain(v4);
    v7(ObjectType, v5, v8);
    swift_unknownObjectRelease(v4);
  }
  return sub_10041C214(v1);
}

void sub_100166590()
{
  Swift::String v0;

  v0._object = (void *)0x8000000100566EA0;
  v0._countAndFlagsBits = 0xD000000000000013;
  TTRDeferredAction.drain(reason:)(v0);
}

uint64_t sub_1001665D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(ObjectType, v3);
}

uint64_t sub_10016660C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[6];

  sub_100028CFC(v0 + 264, (uint64_t)v4);
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v4[4] = v1;
  v4[5] = v2;
  swift_unknownObjectRetain(v1);
  sub_100027F10(v4);
  return v1;
}

uint64_t sub_10016665C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 216))(a1, ObjectType, v4);
}

uint64_t sub_1001666BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A5954(a1, a2, a3) & 1;
}

uint64_t sub_1001666E0(uint64_t a1, uint64_t a2)
{
  return sub_1001A5D5C(a1, a2) & 1;
}

BOOL sub_100166710(uint64_t a1)
{
  return sub_1001A7878(a1) > 0;
}

BOOL sub_100166738(uint64_t a1)
{
  return sub_1001A7A5C(a1) > 0;
}

double sub_10016676C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;
  __int128 v8;

  v3 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v4 = type metadata accessor for TTRIRemindersListPasteRequest();
  v5 = swift_allocObject(v4, 56, 7);
  *(_QWORD *)(v5 + 16) = v3;
  v6 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(v5 + 24) = v6;
  v8 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v5 + 40) = v8;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRetain(v8);
  sub_100252F7C(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

BOOL sub_100166810(uint64_t a1)
{
  return sub_1001A5C28(a1);
}

BOOL sub_100166834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6[5];
  char v7;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v6, ObjectType, v3);
  sub_100179C5C(v6);
  return (v7 & 1) == 0;
}

uint64_t sub_100166894(uint64_t a1)
{
  return sub_1001A7C14(a1) & 0xFFFFFF01;
}

BOOL sub_1001668C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor(0);
  v6 = swift_retain();
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_1005F36E8, 40, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_100148388((uint64_t)v4, (uint64_t)&unk_100649BB0, (uint64_t)v8, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  swift_release();
  return sub_1001A8210(1) > 0;
}

uint64_t sub_1001669DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t sub_1001669E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t sub_1001669F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 440);
  if (v1)
  {
    objc_msgSend(v1, "stopObserving");
    v1 = *(void **)(v0 + 440);
  }
  *(_QWORD *)(v0 + 440) = 0;
  return swift_unknownObjectRelease(v1);
}

uint64_t sub_100166A24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 32;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100010634(v3, a1);
}

uint64_t sub_100166A6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1128))();
}

uint64_t sub_100166A78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1136))();
}

id sub_100166A8C()
{
  void *v0;
  void *v1;
  id v2;
  _QWORD v4[6];

  v0 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v4[4] = sub_10015E0A4;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100172B74;
  v4[3] = &unk_1005F3660;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v1, swift_release().n128_f64[0]);
  _Block_release(v1);
  return v2;
}

uint64_t sub_100166B3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1168))();
}

uint64_t sub_100166B48()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1176))();
}

uint64_t sub_100166B54(uint64_t a1, uint64_t a2)
{
  return sub_1001A5138(a1, a2);
}

double sub_100166B74(uint64_t a1)
{
  return sub_1001A57E4(a1);
}

uint64_t sub_100166B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3) & 1;
}

uint64_t sub_100166BE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t sub_100166BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  unsigned int v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 104);
  v4 = *(_QWORD *)(v3 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56), a2);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 176))(ObjectType, v4);
  v8 = (v7 >> 8) & 1;
  sub_1000760F4(v6, v7);
  return v8;
}

uint64_t sub_100166C2C()
{
  return sub_10041927C();
}

uint64_t sub_100166C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v4 = *(_QWORD *)(v2 + 104);
  v5 = *(_QWORD *)(v4 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 56), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(ObjectType, v5);
  LOBYTE(a1) = sub_10037F70C(a1);
  swift_unknownObjectRelease(v7);
  return a1 & 1;
}

BOOL sub_100166CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1001A8F08(a1, a2);
  v3 = v2;
  if (v2)
    swift_bridgeObjectRelease(v2);
  return v3 != 0;
}

uint64_t sub_100166CF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  _BYTE *v15;

  v4 = type metadata accessor for TTRRemindersListTips(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for TTRRemindersListTip(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v9, v10);
  sub_10001F580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
  v15 = v6;
  a2[3] = sub_10002A750(&qword_100649B68);
  a2[4] = sub_100023FEC(&qword_100649B70, &qword_100649B68, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
  sub_100028D70(a2);
  v11 = sub_10002A750(&qword_100649B78);
  v12 = sub_100023FEC(&qword_100649B80, &qword_100649B78, (uint64_t)&protocol conformance descriptor for TTRTipContentView<A>);
  UIHostingConfiguration<>.init(content:)(sub_100171D94, v14, v11, v12);
  return sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
}

char *sub_100166E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  char *v7;

  v4 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 192))(ObjectType, v4);
  v7 = sub_1001479F8(a1);
  swift_unknownObjectRelease(v6);
  return v7;
}

uint64_t sub_100166EB4(uint64_t a1)
{
  return sub_1001A90A0(a1) & 1;
}

uint64_t sub_100166EDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 200))(a2, 0, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_100166F48()
{
  if ((sub_10035738C() & 1) != 0)
    sub_100357F3C(0);
}

uint64_t sub_100166F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(result, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 152))(a3, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_100166FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(result, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 144))(a3, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

double sub_100167044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  sub_10002B1E8(a3, (uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_1005F3968, v9 + v7, v8 | 7);
  *(_QWORD *)(v10 + 16) = v3;
  sub_10001F580((uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  sub_10009F0B0((void (*)(void))sub_10017AB64, v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100167128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(result, v6);
    v10 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(_QWORD *)(v12 + 72);
    v14 = *(unsigned __int8 *)(v12 + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = swift_allocObject(v10, v15 + v13, v14 | 7);
    *(_OWORD *)(v16 + 16) = xmmword_100520250;
    v17 = v16 + v15;
    sub_10002B1E8(a3, v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 216))(v16, ObjectType, v8);
    swift_unknownObjectRelease(v7);
    swift_setDeallocating(v16);
    swift_arrayDestroy(v17, *(_QWORD *)(v16 + 16), v11);
    return swift_deallocClassInstance(v16, 32, 7);
  }
  return result;
}

uint64_t sub_100167250@<X0>(uint64_t a1@<X8>)
{
  return sub_100168B48(a1);
}

uint64_t sub_10016726C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = v7;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a3;
  v8[3] = a4;
  return swift_task_switch(sub_100167290, 0, 0);
}

uint64_t sub_100167290()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = *(_QWORD **)(v0[7] + 104);
  v2 = v1[30];
  v3 = v1[31];
  sub_10001413C(v1 + 27, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[8] = v5;
  *v5 = v0;
  v5[1] = sub_100167320;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v7)(v0[2], v0[3], v0[4], v0[5], v0[6], v2, v3);
}

uint64_t sub_100167320(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 64);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_100167374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 104);
  TTRDebouncedAction.drain()();
  v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle, v30, 1, 0);
  v4 = *v3;
  *v3 = 0;
  swift_bridgeObjectRelease(v4);
  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID, v29, 1, 0);
  v6 = *v5;
  *v5 = 0;
  swift_bridgeObjectRelease(v6);
  v7 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection, v28, 1, 0);
  v8 = *v7;
  *v7 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v2 + 64);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56), v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(ObjectType, v9);
  if (v12)
  {
    v14 = v12;
    v15 = v13;
    v16 = swift_getObjectType(v12, v13);
    (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(&_swiftEmptySetSingleton, v16, v15);
    swift_unknownObjectRelease(v14);
  }
  v17 = *(_QWORD *)(v2 + 64);
  v18 = swift_getObjectType(*(_QWORD *)(v2 + 56), v13);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96))(v18, v17);
  if (v19)
  {
    v20 = v19;
    swift_beginAccess(v19 + 40, &v27, 1, 0);
    v21 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v20 + 40) = &_swiftEmptySetSingleton;
    swift_unknownObjectRelease(v20);
    swift_bridgeObjectRelease(v21);
  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v24 = result;
    v25 = *(_QWORD *)(v1 + 24);
    v26 = swift_getObjectType(result, v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 288))(v26, v25);
    return swift_unknownObjectRelease(v24);
  }
  return result;
}

void sub_100167528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v21[24];

  v2 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)(a1 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v8, v21, 0, 0);
  sub_10002B1E8(v8, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  LOBYTE(v5) = v7[*(int *)(v5 + 20)];
  sub_10001F544((uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v5 & 1) != 0
    || (Strong = swift_unknownObjectWeakLoadStrong(a1 + 16)) != 0
    && (v11 = Strong,
        v12 = *(_QWORD *)(a1 + 24),
        ObjectType = swift_getObjectType(Strong, v10),
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(ObjectType, v12),
        swift_unknownObjectRelease(v11),
        (v14 & 1) != 0))
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100648980);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRIRemindersCommonPresenter: cannot perform requestNewReminderInDefaultSection", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_10041960C((void *)8, 0, 0, (uint64_t)v4);
    sub_1000073A0((uint64_t)v4, &qword_100654880);
  }
}

uint64_t sub_100167738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 88);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
  if (!Strong)
    goto LABEL_13;
  v5 = (void *)Strong;
  v6 = swift_unknownObjectWeakLoadStrong(v2 + 24);
  if (!v6)
  {

    goto LABEL_13;
  }
  v7 = v6;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = objc_msgSend(v5, "presentingViewController");
  if (!v9)
  {

    swift_unknownObjectRelease(v7);
    goto LABEL_13;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "presentedViewController");
  if (!v11)
  {

LABEL_12:
    swift_unknownObjectRelease(v7);

    goto LABEL_13;
  }
  v12 = v11;
  sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v13 = v5;
  v14 = v12;
  v15 = static NSObject.== infix(_:_:)(v14, v13);

  if ((v15 & 1) == 0)
  {

    goto LABEL_12;
  }
  ObjectType = swift_getObjectType(v7, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(ObjectType, v8);

  swift_unknownObjectRelease(v7);
  if (v18)
    return v18;
LABEL_13:
  v21 = *(_QWORD *)(v1 + 136);
  v20 = *(_QWORD *)(v1 + 144);
  v22 = swift_getObjectType(v21, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 592))(v22, v20);
}

uint64_t sub_10016789C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 152);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v0 + 160);
    ObjectType = swift_getObjectType(Strong, v3);
    v13[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v13[4] = &off_1005F31C8;
    v13[0] = v0;
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 8);
    swift_retain();
    v8 = v7(v13, ObjectType, v5);
    swift_unknownObjectRelease(v4);
    sub_100027F10(v13);
  }
  else
  {
    v8 = 0;
  }
  v9 = v1 + 32;
  swift_beginAccess(v1 + 32, v13, 33, 0);
  v11 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  sub_100028D48(v9, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v8, v11, v10);
  return swift_endAccess(v13);
}

double sub_10016798C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 136), a2);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 120))(ObjectType, v8);
  LOBYTE(v8) = TTRModuleState.isReady.getter();
  swift_release(v10);
  if ((v8 & 1) != 0 && (Strong = swift_unknownObjectWeakLoadStrong(v4 + 16)) != 0)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v4 + 24);
    v15 = swift_getObjectType(Strong, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 192))(a1, a2, v15, v14);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_100167A4C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 505) == 1)
  {
    *(_BYTE *)(v0 + 505) = 0;
    sub_10015324C(0xD00000000000001BLL, 0x80000001005670E0);
  }
  TTRDebouncedAction.drain()();
}

uint64_t sub_100167A9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(*v2 + 136), a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 120))(ObjectType, v4);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v6 = swift_allocObject(&unk_1005F3D50, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_10017B028;
  *(_QWORD *)(v6 + 24) = v3;
  v7 = swift_retain();
  v8 = (void *)zalgo.getter(v7);
  v9 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v10 = dispatch thunk of Promise.then<A>(on:closure:)(v8, sub_10019C7EC, v6, v9);
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_100167B64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = *v1;
  result = swift_unknownObjectWeakLoadStrong(*v1 + 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 96))(a1, ObjectType, v7);
    result = swift_unknownObjectRelease(v6);
  }
  *(_BYTE *)(v3 + 504) = 1;
  return result;
}

id sub_100167BC8()
{
  id *v0;

  return objc_msgSend(*v0, "willNavigateTo");
}

double sub_100167BD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  double result;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = swift_allocObject(&unk_1005F3D00, 24, 7);
  swift_weakInit(v3 + 16, v2);
  v4 = (_QWORD *)swift_allocObject(&unk_1005F3D28, 40, 7);
  v4[2] = v3;
  v4[3] = sub_10017B4C4;
  v4[4] = v1;
  swift_retain_n(v1, 2);
  swift_retain();
  sub_10009F0B0(sub_10017B524, (uint64_t)v4);
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100167C84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100167CA4(a1, a2, a3, a4);
}

uint64_t sub_100167CA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;

  v55 = a4;
  v56 = a1;
  v53 = a3;
  v6 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  v7 = *(_QWORD *)(v51 + 64);
  __chkstk_darwin(v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 136);
  v8 = *(_QWORD *)(v4 + 144);
  v54 = v4;
  ObjectType = swift_getObjectType(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 104))(ObjectType, v8);
  if (v12)
  {
    v14 = v12;
    v15 = v13;
    v16 = swift_getObjectType(v12, v13);
    TTRRemindersListDataModelSourceLayoutContextType.forceListLayoutIfNeeded(forNavigatingTo:persistingPreferencesIfPossible:)(a2, 0, v16, v15);
    swift_unknownObjectRelease(v14);
  }
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
  if (v17)
  {
    v19 = v17;
    v20 = v18;
    v48 = swift_getObjectType(v17, v18);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 168))(ObjectType, v8);
    v49 = v7;
    v22 = a2;
    v24 = v23;
    v26 = v25 & 1;
    TTRRemindersListDataModelSourceShowCompletedContextType.setShowCompletedIfNeeded(forRevealing:pathSpecifier:subtaskDisplayStyle:persistingPreferencesIfPossible:)(v56, v22, v21, v23, v26, 0, v48, v20);
    swift_unknownObjectRelease(v19);
    v27 = v24;
    a2 = v22;
    v7 = v49;
    sub_10017B4B4(v21, v27, v26);
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 120))(ObjectType, v8);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v28 = swift_allocObject(&unk_1005F3C60, 32, 7);
  v29 = v54;
  *(_QWORD *)(v28 + 16) = sub_10017B028;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = swift_retain();
  v31 = (void *)zalgo.getter(v30);
  v32 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v49 = dispatch thunk of Promise.then<A>(on:closure:)(v31, sub_10019C7EC, v28, v32);
  swift_release();
  swift_release();

  v33 = v50;
  v34 = v51;
  v35 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, a2, v52);
  v36 = *(unsigned __int8 *)(v34 + 80);
  v37 = (v36 + 24) & ~v36;
  v38 = (v7 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1005F3C88, v40 + 8, v36 | 7);
  v42 = v55;
  *(_QWORD *)(v41 + 16) = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v41 + v37, v33, v35);
  *(_QWORD *)(v41 + v38) = v29;
  v43 = v56;
  *(_QWORD *)(v41 + v39) = v56;
  *(_QWORD *)(v41 + v40) = v53;
  swift_retain();
  v44 = (void *)zalgo.getter(v43);
  v45 = dispatch thunk of Promise.then<A>(on:closure:)(v44, sub_10017B430, v41, v42);
  swift_release();
  swift_release();

  return v45;
}

uint64_t sub_100167F88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100167FA8(a1, a2, a3, a4);
}

uint64_t sub_100167FA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v26 = a2;
  v27 = a1;
  v6 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v4 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 136), v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 120))(ObjectType, v10);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v13 = swift_allocObject(&unk_1005F3BE8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_10017B028;
  *(_QWORD *)(v13 + 24) = v4;
  v14 = swift_retain();
  v15 = (void *)zalgo.getter(v14);
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10019C7EC, v13, v16);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v26, v6);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1005F3C10, v20 + 8, v17 | 7);
  *(_QWORD *)(v21 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21 + v18, v9, v6);
  *(_QWORD *)(v21 + v19) = v4;
  v22 = v27;
  *(_QWORD *)(v21 + v20) = v27;
  swift_retain();
  v23 = (void *)zalgo.getter(v22);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_10017B304, v21, a4);
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_100168184(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001681A4(a1, a2, a3, a4);
}

uint64_t sub_1001681A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v26 = a2;
  v27 = a1;
  v6 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v4 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 136), v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 120))(ObjectType, v10);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v13 = swift_allocObject(&unk_1005F3B70, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_10017B028;
  *(_QWORD *)(v13 + 24) = v4;
  v14 = swift_retain();
  v15 = (void *)zalgo.getter(v14);
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10019C7EC, v13, v16);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v26, v6);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1005F3B98, v20 + 8, v17 | 7);
  *(_QWORD *)(v21 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21 + v18, v9, v6);
  *(_QWORD *)(v21 + v19) = v4;
  v22 = v27;
  *(_QWORD *)(v21 + v20) = v27;
  swift_retain();
  v23 = (void *)zalgo.getter(v22);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_10017B23C, v21, a4);
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_100168380(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001683A0(a1, a2, a3, a4);
}

uint64_t sub_1001683A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;

  v26 = a2;
  v27 = a1;
  v6 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v4 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 136), v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 120))(ObjectType, v10);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v13 = swift_allocObject(&unk_1005F3AF8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_10017B028;
  *(_QWORD *)(v13 + 24) = v4;
  v14 = swift_retain();
  v15 = (void *)zalgo.getter(v14);
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10019C7EC, v13, v16);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v26, v6);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1005F3B20, v20 + 8, v17 | 7);
  *(_QWORD *)(v21 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21 + v18, v9, v6);
  *(_QWORD *)(v21 + v19) = v4;
  v22 = v27;
  *(_QWORD *)(v21 + v20) = v27;
  swift_retain();
  v23 = (void *)zalgo.getter(v22);
  v24 = dispatch thunk of Promise.then<A>(on:closure:)(v23, sub_10017B1E8, v21, a4);
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_10016857C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10016859C(a1, a2, a3);
}

uint64_t sub_10016859C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v5 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 136), v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 120))(ObjectType, v9);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v12 = swift_allocObject(&unk_1005F3A30, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10017B028;
  *(_QWORD *)(v12 + 24) = v3;
  v13 = swift_retain();
  v14 = (void *)zalgo.getter(v13);
  v15 = sub_10002A750((uint64_t *)&unk_100649CC0);
  dispatch thunk of Promise.then<A>(on:closure:)(v14, sub_10017B02C, v12, v15);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v25, v5);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1005F3A58, v18 + 8, v16 | 7);
  *(_QWORD *)(v19 + 16) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19 + v17, v8, v5);
  *(_QWORD *)(v19 + v18) = v3;
  v20 = swift_retain();
  v21 = (void *)zalgo.getter(v20);
  v22 = dispatch thunk of Promise.then<A>(on:closure:)(v21, sub_10017B0C8, v19, a3);
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_100168764(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v9 = *v1;
  v2 = v9;
  v10 = a1;
  v11 = 0;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  firstly<A>(closure:)(sub_10019C6DC, &v8, v3);
  v4 = swift_retain();
  v5 = (void *)zalgo.getter(v4);
  v6 = dispatch thunk of Promise.then<A>(on:closure:)(v5, sub_10017B010, v2, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_100168800()
{
  return sub_100167738();
}

uint64_t sub_100168820(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(*(_QWORD *)v2 + 136), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(ObjectType, v4);
  if (result)
  {
    v7 = result;
    sub_1000D1468(a1 & 1);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_100168888()
{
  return sub_10016789C();
}

double sub_1001688A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_10016798C(a1, a2, a3);
}

void sub_1001688C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(*v2 + 136), a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 120))(ObjectType, v6);
  TTRModuleState.readyPromise.getter();
  swift_release();
  v8 = (_QWORD *)swift_allocObject(&unk_1005F39E0, 40, 7);
  v8[2] = v5;
  v8[3] = a1;
  v8[4] = a2;
  v9 = swift_allocObject(&unk_1005F3A08, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10017AFC8;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  v10 = swift_retain();
  v12 = (id)zalgo.getter(v10);
  v11 = sub_10002A750((uint64_t *)&unk_100649CB0);
  dispatch thunk of Promise.then<A>(on:closure:)(v12, sub_10017AFD4, v9, v11);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1001689CC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *v1;
  v11[2] = v3;
  v11[3] = a1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  firstly<A>(closure:)(sub_10017AB70, v11, v4);
  v5 = swift_allocObject(&unk_1005F3990, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = a1;
  swift_retain();
  v6 = (void *)zalgo.getter(a1);
  dispatch thunk of Promise.then<A>(on:closure:)(v6, sub_10017ABB4, v5, v4);
  swift_release();
  swift_release();

  v8 = (void *)zalgo.getter(v7);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v8, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, (char *)&type metadata for () + 8);
  swift_release();

  return v9;
}

void sub_100168AC4()
{
  sub_100167A4C();
}

void sub_100168AE4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)v0 + 505) = 1;
  TTRDebouncedAction.drain()();
}

uint64_t sub_100168B14()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 104));
}

uint64_t sub_100168B20()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_100168B48@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v27[5];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 19);
  if (Strong)
  {
    v12 = Strong;
    v13 = v2[20];
    ObjectType = swift_getObjectType(Strong, v11);
    v27[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v27[4] = &off_1005F31C8;
    v27[0] = v2;
    v15 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v13 + 8);
    swift_retain();
    v16 = v15(v27, ObjectType, v13);
    swift_unknownObjectRelease(v12);
    sub_100027F10(v27);
    v17 = v2[17];
    v18 = v2[18];
    v20 = swift_getObjectType(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 136))(v20, v18);
    v21 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v6, 1, v21) == 1)
    {
      sub_1000073A0((uint64_t)v6, &qword_100649CA0);
      v22 = type metadata accessor for TTRListType(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
    }
    else
    {
      sub_10000735C((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_100665590);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    TTRRemindersListUndoContext.init(undoManager:listType:)(v16, v9);
    v25 = type metadata accessor for TTRRemindersListUndoContext(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 0, 1, v25);
  }
  else
  {
    v23 = type metadata accessor for TTRRemindersListUndoContext(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
}

uint64_t sub_100168D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017B530(a3);
}

uint64_t sub_100168D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v13;
  void (*v14)(_BYTE *, _QWORD);
  _BYTE v15[32];

  v5 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 136), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 112))(ObjectType, v5);
  if (result)
  {
    v9 = result;
    v10 = v8;
    v11 = swift_getObjectType(result, v8);
    v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 24);
    v13 = swift_bridgeObjectRetain(a3);
    v14 = (void (*)(_BYTE *, _QWORD))v12(v15, v11, v10, v13);
    sub_100477818(a3);
    v14(v15, 0);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

double sub_100168E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = v5;
  v41 = a4;
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
    return result;
  }
  sub_10001F580((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = v6[18];
  ObjectType = swift_getObjectType(v6[17], v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 192))(ObjectType, v19);
  v23 = sub_1001479F8((uint64_t)v17);
  v25 = v24;
  v26 = swift_unknownObjectRelease(v22);
  if (!v25)
    goto LABEL_6;
  v27 = (uint64_t *)TTRAccesibility.RemindersList.AutoCategorization.ProbableUserCategorizationError.unsafeMutableAddressor(v26);
  v28 = v27[1];
  v40 = *v27;
  v29 = sub_10002A750((uint64_t *)&unk_100640FD0);
  v30 = swift_allocObject(v29, 152, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1005275C0;
  *(_QWORD *)(v30 + 56) = &type metadata for String;
  v31 = sub_1000770A4();
  *(_QWORD *)(v30 + 32) = a2;
  *(_QWORD *)(v30 + 40) = a3;
  *(_QWORD *)(v30 + 96) = &type metadata for String;
  *(_QWORD *)(v30 + 104) = v31;
  *(_QWORD *)(v30 + 64) = v31;
  *(_QWORD *)(v30 + 72) = v23;
  *(_QWORD *)(v30 + 80) = v25;
  *(_QWORD *)(v30 + 136) = &type metadata for String;
  *(_QWORD *)(v30 + 144) = v31;
  *(_QWORD *)(v30 + 112) = v41;
  *(_QWORD *)(v30 + 120) = a5;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  v32 = static String.localizedStringWithFormat(_:_:)(v40, v28, v30);
  v34 = v33;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v30);
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 2);
  if (Strong)
  {
    v37 = Strong;
    v38 = v6[3];
    v39 = swift_getObjectType(Strong, v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 296))(v32, v34, v39, v38);
    swift_bridgeObjectRelease(v34);
    swift_unknownObjectRelease(v37);
LABEL_6:
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return result;
  }
  sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
  return result;
}

uint64_t sub_10016907C()
{
  return sub_10015324C(0xD000000000000020, 0x8000000100567250);
}

void sub_100169098()
{
  if ((sub_10035738C() & 1) != 0)
    sub_100357F3C(1);
}

uint64_t sub_1001690C4()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1001690F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  sub_1000381B8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ReminderDetailModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F928ReminderDetailModuleDelegate);
}

void sub_10016913C(uint64_t a1, uint64_t a2, char a3)
{
  sub_10017C5F4(a3 & 1);
}

uint64_t sub_100169148()
{
  return sub_100169E6C();
}

uint64_t sub_10016915C()
{
  _QWORD *v0;

  swift_weakDestroy(v0 + 2);
  swift_unknownObjectWeakDestroy(v0 + 3);
  swift_bridgeObjectRelease(v0[4]);
  sub_1000381B8(v0[5], v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for BatchDueDatePickerDetailModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F938BatchDueDatePickerDetailModuleDelegate);
}

void sub_1001691B8(uint64_t a1, uint64_t a2, char a3)
{
  sub_10017C888(a3 & 1);
}

uint64_t sub_1001691C4()
{
  return sub_1001691D8();
}

uint64_t sub_1001691D8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (!Strong)
    return 2;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 136), v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    v10 = swift_getObjectType(v6, v7);
    LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
    swift_release(v3);
    swift_unknownObjectRelease(v8);
    return v9 & 1;
  }
  else
  {
    swift_release(v3);
    return 0;
  }
}

uint64_t sub_10016926C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for BatchAssignPickerDetailModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F937BatchAssignPickerDetailModuleDelegate);
}

void sub_1001692C0(uint64_t a1, uint64_t a2, char a3)
{
  sub_10017D268(a3 & 1);
}

void sub_1001692CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v23[24];

  v2 = v1;
  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong + 232);
    v7 = *(_QWORD *)(v6 + 96);
    swift_beginAccess(v7 + 40, v23, 0, 0);
    v9 = *(_QWORD *)(v7 + 40);
    if (v9)
    {
      v10 = *(_QWORD *)(v7 + 48);
      ObjectType = swift_getObjectType(v9, v8);
      v12 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 24);
      v13 = swift_unknownObjectRetain(v9);
      v12(ObjectType, v10, v13);
      swift_unknownObjectRelease(v9);
    }
    sub_10041C214(v6);
    v5 = swift_release();
  }
  static TTRLocalizableStrings.UndoAction.batchChangeTags.getter(v5);
  v15 = v14;
  v16 = (void *)objc_opt_self(TTRUndoManager);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v18 = swift_allocObject(&unk_1005F4070, 32, 7);
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  v19 = swift_allocObject(&unk_1005F4098, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_10017EB68;
  *(_QWORD *)(v19 + 24) = v18;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005F40B0;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  swift_retain();
  objc_msgSend(v16, "withActionName:block:", v17, v20, swift_release().n128_f64[0]);

  _Block_release(v20);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 136, 3781, 51, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1001694BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t inited;
  unint64_t v27;
  __n128 v28;
  uint64_t (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  id v49;
  uint64_t v50;
  _QWORD aBlock[6];
  uint64_t v52;
  char v53[96];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if (swift_weakLoadStrong(a1 + 16))
    {
      swift_retain();
      swift_release();
      sub_1001ACD38(a2, *(_QWORD *)(a1 + 24));
      swift_release();
    }
  }
  else
  {
    v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v7 = *(_QWORD *)(a2 + 56);
    v44 = a2 + 56;
    v8 = 1 << *(_BYTE *)(a2 + 32);
    v9 = -1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    v10 = v9 & v7;
    v46 = a1 + 16;
    v45 = (unint64_t)(v8 + 63) >> 6;
    swift_bridgeObjectRetain(a2);
    v11 = 0;
    v42 = xmmword_1005201E0;
    v41 = a2;
    v40 = a1;
    v39 = v5;
    while (1)
    {
      do
      {
        if (v10)
        {
          v12 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v13 = v12 | (v11 << 6);
        }
        else
        {
          v14 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_31;
          if (v14 >= v45)
          {
LABEL_28:
            swift_release();
            return;
          }
          v15 = *(_QWORD *)(v44 + 8 * v14);
          ++v11;
          if (!v15)
          {
            v11 = v14 + 1;
            if (v14 + 1 >= v45)
              goto LABEL_28;
            v15 = *(_QWORD *)(v44 + 8 * v11);
            if (!v15)
            {
              v11 = v14 + 2;
              if (v14 + 2 >= v45)
                goto LABEL_28;
              v15 = *(_QWORD *)(v44 + 8 * v11);
              if (!v15)
              {
                v16 = v14 + 3;
                if (v16 >= v45)
                  goto LABEL_28;
                v15 = *(_QWORD *)(v44 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    v11 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_32;
                    if (v11 >= v45)
                      goto LABEL_28;
                    v15 = *(_QWORD *)(v44 + 8 * v11);
                    ++v16;
                    if (v15)
                      goto LABEL_22;
                  }
                }
                v11 = v16;
              }
            }
          }
LABEL_22:
          v10 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v11 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v13);
        v18 = *v17;
        v19 = v17[1];
        Strong = swift_weakLoadStrong(v46);
      }
      while (!Strong);
      v47 = v10;
      v48 = v11;
      v21 = *(_QWORD *)(Strong + 104);
      swift_bridgeObjectRetain(v19);
      swift_retain();
      swift_release();
      v22 = *(_QWORD *)(a1 + 24);
      if (qword_10063D420 != -1)
        swift_once(&qword_10063D420, sub_1001AF584);
      v23 = sub_100012DC4(v4, (uint64_t)qword_10064A550);
      v24 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v43, v23, v4);
      v25 = sub_10002A750((uint64_t *)&unk_100640F20);
      inited = swift_initStackObject(v25, v53);
      *(_OWORD *)(inited + 16) = v42;
      *(_QWORD *)(inited + 32) = 0x67617468736168;
      *(_QWORD *)(inited + 40) = 0xE700000000000000;
      *(_QWORD *)(inited + 48) = v18;
      *(_QWORD *)(inited + 56) = v19;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 80) = 0x736D657469;
      *(_QWORD *)(inited + 88) = 0xE500000000000000;
      *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
      *(_QWORD *)(inited + 96) = v22;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v22);
      v27 = sub_10002D32C(inited);
      sub_1000143B4((uint64_t)"Reminders List add  {hashtag: %@, items: %@}", 44, 2, v27);
      v28 = swift_bridgeObjectRelease(v27);
      v29 = *(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8);
      v30 = v4;
      v31 = v29(v24, v4, v28);
      v32 = static TTRLocalizableStrings.UndoAction.hashtagChange.getter(v31);
      v50 = v33;
      __chkstk_darwin(v32);
      *(&v38 - 2) = v18;
      *(&v38 - 1) = v19;
      v52 = 0;
      v49 = (id)objc_opt_self(TTRUndoManager);
      v34 = String._bridgeToObjectiveC()();
      v35 = (_QWORD *)swift_allocObject(&unk_1005F40E8, 56, 7);
      v35[2] = &v52;
      v35[3] = v21;
      v35[4] = v22;
      v35[5] = sub_10017EB80;
      v35[6] = &v38 - 4;
      v36 = swift_allocObject(&unk_1005F4110, 32, 7);
      *(_QWORD *)(v36 + 16) = sub_10017EBC8;
      *(_QWORD *)(v36 + 24) = v35;
      aBlock[4] = sub_1000381EC;
      aBlock[5] = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005F4128;
      v37 = _Block_copy(aBlock);
      swift_retain();
      swift_bridgeObjectRetain(v22);
      swift_retain();
      objc_msgSend(v49, "withActionName:block:", v34, v37, swift_release().n128_f64[0]);

      _Block_release(v37);
      LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v36, "", 118, 2753, 51, 1);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v50);
      swift_release();
      swift_release();
      if ((v34 & 1) != 0)
        break;
      swift_release();
      a2 = v41;
      a1 = v40;
      v4 = v30;
      v5 = v39;
      v11 = v48;
      v10 = v47;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
}

uint64_t sub_100169A8C()
{
  return sub_10016A264((void (*)(_QWORD))&_swift_bridgeObjectRelease, 33);
}

uint64_t type metadata accessor for BatchHashtagEditorModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F932BatchHashtagEditorModuleDelegate);
}

void sub_100169AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t);
  id v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];
  __int128 v35[2];
  _QWORD v36[5];
  _BYTE v37[32];

  v2 = v1;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = Strong;
    v33 = a1;
    v6 = *(_QWORD *)(Strong + 232);
    v7 = *(_QWORD *)(v6 + 96);
    swift_beginAccess(v7 + 40, v37, 0, 0);
    v9 = *(_QWORD *)(v7 + 40);
    if (v9)
    {
      v10 = *(_QWORD *)(v7 + 48);
      ObjectType = swift_getObjectType(v9, v8);
      v12 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 24);
      v13 = swift_unknownObjectRetain(v9);
      v12(ObjectType, v10, v13);
      swift_unknownObjectRelease(v9);
    }
    v14 = sub_10041C214(v6);
    static TTRLocalizableStrings.UndoAction.hashtagsChange.getter(v14);
    v16 = v15;
    v17 = *(_QWORD *)(v5 + 72);
    v18 = *(_QWORD *)(v5 + 80);
    v19 = swift_getObjectType(v17, v15);
    v20 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v21 = swift_allocObject(v20, 40, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100521140;
    v22 = *(void **)(v2 + 24);
    *(_QWORD *)(v21 + 32) = v22;
    aBlock[0] = v21;
    specialized Array._endMutation()(v21);
    v23 = *(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t))(v18 + 56);
    swift_unknownObjectRetain(v17);
    v24 = v22;
    v23(v36, aBlock[0], v19, v18);
    swift_unknownObjectRelease(v17);
    swift_bridgeObjectRelease(aBlock[0]);
    v25 = (void *)objc_opt_self(TTRUndoManager);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    sub_100010634((uint64_t)v36, (uint64_t)v35);
    v27 = swift_allocObject(&unk_1005F4160, 64, 7);
    sub_10002E37C(v35, v27 + 16);
    *(_QWORD *)(v27 + 56) = v33;
    v28 = swift_allocObject(&unk_1005F4188, 32, 7);
    *(_QWORD *)(v28 + 16) = sub_10017EC14;
    *(_QWORD *)(v28 + 24) = v27;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005F41A0;
    v29 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(v33);
    swift_retain();
    objc_msgSend(v25, "withActionName:block:", v26, v29, swift_release().n128_f64[0]);

    _Block_release(v29);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v28, "", 136, 3829, 51, 1);
    swift_release();
    if ((v26 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v31 = *(_QWORD *)(v5 + 80);
      v32 = swift_getObjectType(*(_QWORD *)(v5 + 72), v30);
      (*(void (**)(id, _QWORD, _QWORD, uint64_t, uint64_t))(v31 + 192))(v24, 0, 0, v32, v31);
      sub_100027F10(v36);
      swift_release();
      swift_release();
    }
  }
}

uint64_t type metadata accessor for SingleItemHashtagEditorModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F937SingleItemHashtagEditorModuleDelegate);
}

void sub_100169DB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;

  v8 = type metadata accessor for TTRReminderEditor(0);
  ObjectType = swift_getObjectType(a2, v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(ObjectType, a3);
  v12 = *(_QWORD *)(a1 + 16);
  v15 = a4;
  v13 = sub_1000175C8((unint64_t *)&qword_100643728, (uint64_t (*)(uint64_t))&type metadata accessor for TTRReminderEditor, (uint64_t)&protocol conformance descriptor for TTRReminderEditor);
  v14 = a4;
  static TTRUndoableEditing.reapplyActions(in:overridingTargetWith:sourceChangeItemID:)(v11, v12, &v15, v8, v13);

}

uint64_t sub_100169E6C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_weakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + 136), v2);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = swift_getObjectType(v6, v7);
      LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
      swift_release(v3);
      swift_unknownObjectRelease(v8);
      return v9 & 1;
    }
    else
    {
      swift_release(v3);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NavigationBarReminderCreationReminderDetailModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F957NavigationBarReminderCreationReminderDetailModuleDelegate);
}

void sub_100169F1C(uint64_t a1, uint64_t a2, char a3)
{
  sub_10017D890(a3 & 1);
}

double sub_100169F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE v25[24];

  v3 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong)
  {
    v11 = Strong;
    v12 = swift_allocObject(&unk_1005F4200, 24, 7);
    *(_QWORD *)(v12 + 16) = a1;
    v13 = *(_QWORD *)(v11 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v13, v25, 0, 0);
    sub_10002B1E8(v13, (uint64_t)v8, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v13) = v8[*(int *)(v6 + 20)];
    swift_bridgeObjectRetain(a1);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v13 & 1) != 0
      || (v14 = swift_unknownObjectWeakLoadStrong(v11 + 16)) != 0
      && (v16 = v14,
          v17 = *(_QWORD *)(v11 + 24),
          ObjectType = swift_getObjectType(v14, v15),
          LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(ObjectType, v17),
          swift_unknownObjectRelease(v16),
          (v17 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_100012DC4(v19, (uint64_t)qword_100648980);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
      }
      swift_release();
      swift_release();

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_10017ECCC, v12, (uint64_t)v5);
      sub_1000073A0((uint64_t)v5, &qword_100654880);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10016A194()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for NavigationBarReminderCreationHashtagEditorModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F956NavigationBarReminderCreationHashtagEditorModuleDelegate);
}

uint64_t sub_10016A1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 24), a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 72))(v8, ObjectType, v3);
  v5 = v9;
  v6 = v10;
  sub_10001413C(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 152))(a2, v5, v6);
  return sub_100027F10(v8);
}

uint64_t sub_10016A254()
{
  return sub_10016A264((void (*)(_QWORD))&_swift_unknownObjectRelease, 40);
}

uint64_t sub_10016A264(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_weakDestroy(v2 + 16);
  a1(*(_QWORD *)(v2 + 24));
  return swift_deallocClassInstance(v2, a2, 7);
}

uint64_t type metadata accessor for AttachmentImportingControllerDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F937AttachmentImportingControllerDelegate);
}

void sub_10016A2CC(uint64_t a1, uint64_t a2)
{
  sub_10017DE44(a2);
}

uint64_t type metadata accessor for NavigationBarReminderCreationAttachmentImportingControllerDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F966NavigationBarReminderCreationAttachmentImportingControllerDelegate);
}

double sub_10016A2F4()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  _QWORD *v3;
  void *v4;
  uint64_t v5;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = *(void **)(Strong + 392);
    v5 = v3[50];
    v3[50] = 0;
    v3[51] = 0;
    v3[49] = 0;
    sub_10017C190(v4, v5);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10016A340(uint64_t a1, uint64_t a2)
{
  return sub_10017E0E4(a2);
}

double sub_10016A348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v7;
  double result;
  _QWORD *v9;
  uint64_t ObjectType;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];

  v3 = v2;
  Strong = swift_weakLoadStrong(v3 + 16);
  if (Strong)
  {
    v9 = (_QWORD *)Strong;
    ObjectType = swift_getObjectType(a1, v7);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v9[53];
      v9[53] = 0;
      v9[54] = 0;
      swift_unknownObjectRelease(v13);
      v14 = v9[9];
      v15 = v9[10];
      v17 = swift_getObjectType(v14, v16);
      v18 = sub_10002A750((uint64_t *)&unk_1006415A0);
      inited = swift_initStackObject(v18, v24);
      *(_OWORD *)(inited + 16) = xmmword_100521140;
      v20 = *(void **)(v3 + 24);
      *(_QWORD *)(inited + 32) = v20;
      v23 = inited;
      specialized Array._endMutation()(inited);
      swift_unknownObjectRetain(v14);
      v21 = v20;
      v22 = TTRUndoNavigationEditingTarget.init(reminderIDs:)(v23);
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v15 + 520))(v22, v12, v17, v15);
      swift_release();

      swift_unknownObjectRelease(v14);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t type metadata accessor for LocationPickerModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F928LocationPickerModuleDelegate);
}

double sub_10016A49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    v4 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v5 = (void *)TTRReminderProtocol.mostRelevantAlarmLocationTrigger()(v4, &protocol witness table for REMReminderChangeItem);
    if (v5)
    {
      v6 = v5;
      v7 = v5;
      TTRReminderEditor.edit(locationTrigger:)(v6);
    }
    else
    {
      v8 = (void *)TTRReminderProtocol.mostRelevantVehicleTrigger()(v4, &protocol witness table for REMReminderChangeItem);
      if (!v8)
      {
LABEL_7:
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
      v9 = v8;
      v7 = v8;
      TTRReminderEditor.edit(vehicleTrigger:)(v9);
    }

    goto LABEL_7;
  }
  return result;
}

uint64_t sub_10016A590()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for NavigationBarReminderCreationLocationPickerModuleDelegate()
{
  return objc_opt_self(_TtC9RemindersP33_5CD98EDF15D0ED6BAC909BA9376202F957NavigationBarReminderCreationLocationPickerModuleDelegate);
}

uint64_t sub_10016A5E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v9;
  __int128 v10[2];

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v4);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 80))(v10, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return sub_10002E37C(v10, (uint64_t)a1);
  }
  else
  {
    v9 = type metadata accessor for TTRDerivedUntouchedPresentationTreeMaker();
    result = swift_allocObject(v9, 16, 7);
    a1[3] = v9;
    a1[4] = (uint64_t)&off_100606988;
    *a1 = result;
  }
  return result;
}

void sub_10016A674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(uint64_t, uint64_t);
  char v25;
  uint64_t Strong;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int v35;
  Swift::Bool_optional v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, __n128);
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[24];
  uint64_t v99;
  uint64_t v100[3];
  _BYTE v101[32];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v90 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v87 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v88 = (uint64_t)&v85 - v8;
  v9 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v9);
  v93 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v11);
  v92 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - v14;
  v96 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v16 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v95 = (uint64_t)&v85 - v19;
  v20 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 144);
  ObjectType = swift_getObjectType(v20, v22);
  v24 = *(void (**)(uint64_t, uint64_t))(v21 + 120);
  v24(ObjectType, v21);
  v25 = TTRModuleState.modelLoaded.getter();
  swift_release();
  v86 = v1 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v97 = v1;
  if (Strong)
  {
    v29 = Strong;
    v30 = *(_QWORD *)(v97 + 24);
    v31 = swift_getObjectType(Strong, v27);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 112);
    v33 = v30;
    v2 = v97;
    v32(a1, v31, v33);
    swift_unknownObjectRelease(v29);
  }
  if (*(_BYTE *)(v2 + 168) == 1
    && (v34 = ((uint64_t (*)(uint64_t, uint64_t))v24)(ObjectType, v21),
        swift_beginAccess(v34 + 32, v98, 0, 0),
        v35 = *(unsigned __int8 *)(v34 + 32),
        v28 = swift_release(),
        v35 == 1))
  {
    v36.value = 0;
  }
  else
  {
    v36.value = 2;
  }
  ((void (*)(uint64_t, uint64_t, __n128))v24)(ObjectType, v21, v28);
  TTRModuleState.modelDidLoad(defersResolveOverride:)(v36);
  swift_release();
  if ((v25 & 1) == 0)
  {
    v37 = v97 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
    swift_beginAccess(v97 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, v101, 0, 0);
    sub_10000735C(v37, (uint64_t)v15, (uint64_t *)&unk_1006463C0);
    v38 = v96;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v96) == 1)
    {
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
      return;
    }
    v39 = v95;
    sub_10001F580((uint64_t)v15, v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v41 = (uint64_t)v92;
    v40(v92, 1, 1, v38);
    swift_beginAccess(v37, v100, 33, 0);
    sub_100041F2C(v41, v37, (uint64_t *)&unk_1006463C0);
    swift_endAccess(v100);
    v42 = v93;
    sub_10000735C(a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing, v93, (uint64_t *)&unk_100649CE0);
    v43 = sub_10002A750((uint64_t *)&unk_100649CF0);
    v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43);
    sub_1000073A0(v42, (uint64_t *)&unk_100649CE0);
    v45 = (uint64_t)v94;
    if (v44 == 1)
    {
      v46 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 192);
      v47 = v97;
      swift_retain();
      v48 = swift_unknownObjectRetain(v20);
      v49 = v46(ObjectType, v21, v48);
      swift_release();
      swift_unknownObjectRelease(v20);
      v50 = *(_QWORD *)(v49 + 24);
      v51 = *(_QWORD *)(v49 + 32);
      swift_unknownObjectRetain(v50);
      swift_unknownObjectRelease(v49);
      v53 = swift_getObjectType(v50, v52);
      v100[0] = v50;
      v54 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 + 8) + 40);
      v55 = (uint64_t)v90;
      v54(v39, v53);
      swift_unknownObjectRelease(v50);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v55, 1, v91) != 1)
      {
        v66 = v55;
        v67 = v88;
        sub_10001F580(v66, v88, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (qword_10063D400 != -1)
          swift_once(&qword_10063D400, sub_10015A89C);
        v68 = type metadata accessor for Logger(0);
        sub_100012DC4(v68, (uint64_t)qword_100648980);
        v69 = v87;
        v70 = sub_10002B1E8(v67, v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v71 = Logger.logObject.getter(v70);
        v72 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc(12, -1);
          v74 = swift_slowAlloc(32, -1);
          v100[0] = v74;
          *(_DWORD *)v73 = 136315138;
          v75 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
          v76 = TTRTreeStorageItem.treeItemDescription.getter(v91, v75);
          v78 = v77;
          v99 = sub_100027E40(v76, v77, v100);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v73 + 4, v73 + 12);
          swift_bridgeObjectRelease(v78);
          sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "TTRIRemindersCommonPresenter: restoring firstVisibleItem {item: %s}", v73, 0xCu);
          swift_arrayDestroy(v74, 1, &type metadata for Any[8]);
          swift_slowDealloc(v74, -1, -1);
          v79 = v73;
          v47 = v97;
          swift_slowDealloc(v79, -1, -1);
        }
        else
        {
          sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        }

        v80 = swift_unknownObjectWeakLoadStrong(v86);
        if (v80)
        {
          v82 = v80;
          v83 = *(_QWORD *)(v47 + 24);
          v84 = swift_getObjectType(v80, v81);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 272))(v67, v84, v83);
          swift_unknownObjectRelease(v82);
        }
        sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v65 = v39;
        goto LABEL_27;
      }
      sub_1000073A0(v55, (uint64_t *)&unk_100640EB0);
    }
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v56 = type metadata accessor for Logger(0);
    sub_100012DC4(v56, (uint64_t)qword_100648980);
    v57 = sub_10002B1E8(v39, v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v100[0] = v61;
      *(_DWORD *)v60 = 136315138;
      v62 = TTRRemindersListViewModel.ItemID.description.getter(v61);
      v64 = v63;
      v99 = sub_100027E40(v62, v63, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease(v64);
      sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "TTRIRemindersCommonPresenter: failed to look up item for firstVisibleItemID {itemID: %s}", v60, 0xCu);
      swift_arrayDestroy(v61, 1, &type metadata for Any[8]);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

    }
    else
    {

      sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    v65 = v39;
LABEL_27:
    sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
}

void sub_10016AEC0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 2);
  if (Strong)
  {
    v6 = Strong;
    v7 = v2[3];
    ObjectType = swift_getObjectType(Strong, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 128))(a1, ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
  v9 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 36));
  v10 = *v9;
  v11 = (void *)v9[1];
  v12 = v2[22];
  v13 = (void *)v2[23];
  v2[22] = *v9;
  v2[23] = v11;
  sub_10017B678(v10, v11);
  sub_10017B678(v10, v11);
  sub_10017B678(v12, v13);
  sub_10017B6A0(v12, v13);
  sub_10015E56C(v12, v13);
  sub_10017B6A0(v10, v11);
  sub_10017B6A0(v12, v13);
}

uint64_t *sub_10016B038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10016B0F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease(*a1);
  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t *sub_10016B144(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t *sub_10016B1D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain(v10);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *sub_10016B284(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10016B310(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10016B3B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100526F80;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIRemindersCommonPresenter.AttachImportingContext(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  __int128 v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v6;
  v4 = v3;
  swift_unknownObjectRetain(v6);
  return a1;
}

uint64_t destroy for TTRIRemindersCommonPresenter.AttachImportingContext(uint64_t a1)
{

  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for TTRIRemindersCommonPresenter.AttachImportingContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t assignWithTake for TTRIRemindersCommonPresenter.AttachImportingContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersCommonPresenter.AttachImportingContext()
{
  return &type metadata for TTRIRemindersCommonPresenter.AttachImportingContext;
}

double sub_10016B550(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  double result;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  _QWORD v52[2];

  v4 = v3;
  v8 = type metadata accessor for REMFeatureFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v9 + 104))(v12, enum case for REMFeatureFlags.groceryToast(_:), v8, v10);
  v14 = REMFeatureFlags.isEnabled.getter(v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if ((v14 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v4 + 2);
    if (Strong)
    {
      v17 = Strong;
      v18 = v4[3];
      v19 = v4[18];
      ObjectType = swift_getObjectType(v4[17], v16);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(ObjectType, v19);
      v23 = v21;
      if (v21)
      {
        v24 = v22;
        v25 = swift_getObjectType(v21, v22);
        LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v25, v24);
        swift_unknownObjectRelease(v23);
        v23 = v24 & 1;
      }
      v26 = swift_getObjectType(v17, v22);
      (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 280))(a1, a2, a3, v23, v26, v18);
      swift_unknownObjectRelease(v17);
    }
  }
  v27 = sub_100478CEC(a1, a2, a3);
  if (v28)
  {
    v30 = v27;
    v31 = v28;
    v32 = swift_unknownObjectWeakLoadStrong(v4 + 2);
    if (v32)
    {
      v34 = v32;
      v35 = v4[3];
      v36 = swift_getObjectType(v32, v33);
      v37 = sub_10002A750((uint64_t *)&unk_100654F80);
      v38 = swift_allocObject(v37, 64, 7);
      *(_OWORD *)(v38 + 16) = xmmword_1005201E0;
      *(_QWORD *)(v38 + 32) = v30;
      *(_QWORD *)(v38 + 40) = v31;
      v39 = (uint64_t *)TTRAccesibility.RemindersList.AutoCategorization.AutoCategorizationOverlayHint.unsafeMutableAddressor();
      v41 = *v39;
      v40 = v39[1];
      *(_QWORD *)(v38 + 48) = v41;
      *(_QWORD *)(v38 + 56) = v40;
      v52[1] = v38;
      swift_bridgeObjectRetain(v40);
      v43 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v42);
      v44 = *v43;
      v45 = v43[1];
      swift_bridgeObjectRetain(v45);
      v46 = sub_10002A750(&qword_1006466D0);
      v47 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
      v48 = BidirectionalCollection<>.joined(separator:)(v44, v45, v46, v47);
      v50 = v49;
      swift_bridgeObjectRelease(v38);
      v51 = swift_bridgeObjectRelease(v45);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v35 + 296))(v48, v50, v36, v35, v51);
      swift_bridgeObjectRelease(v50);
      swift_unknownObjectRelease(v34);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10016B7B4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType(Strong, v2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  return v6;
}

uint64_t sub_10016B820()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    return v6 & 1;
  }
  return result;
}

uint64_t sub_10016B87C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    return v6 & 1;
  }
  return result;
}

uint64_t sub_10016B8D4(char a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(result, v6);
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v8 + 104))(a1 & 1, a2 & 1, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10016B954(uint64_t a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(a1);
  return sub_10041D610(*v2, a1);
}

uint64_t sub_10016B988(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 136))(a1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10016B9F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v2 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  v9 = v8 + v7;
  v10 = sub_10002B1E8(a1, v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v11 = (uint64_t *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v10);
  sub_10041D610(*v11, v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, *(_QWORD *)(v8 + 16), v3);
  return swift_deallocClassInstance(v8, 32, 7);
}

uint64_t sub_10016BAC4(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 256))(a1 & 1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10016BB2C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(result, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 176))(a1, a2 & 1, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10016BBAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(result, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 184))(a1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10016BC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13;

  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 264))(a1, a2, ObjectType, v10);
    return swift_unknownObjectRelease(v9);
  }
  else
  {
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_10016BCB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[4];
  __int128 v4;

  sub_100028CFC(v0 + 264, (uint64_t)v3);
  v4 = *(_OWORD *)(v0 + 296);
  v1 = v4;
  swift_unknownObjectRetain(v4);
  sub_10004DB20();
  swift_unknownObjectRelease(v1);
  return sub_100027F10(v3);
}

id sub_10016BD0C()
{
  void *v0;

  return objc_msgSend(v0, "representedListWasDeleted");
}

uint64_t sub_10016BD1C(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 1440))(a1 & 1);
}

double sub_10016BD30(unsigned __int8 a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE v41[24];
  _OWORD v42[2];
  uint64_t v43;
  __int128 v44;
  char v45;

  v6 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v6);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v9);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v12);
  v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v15);
  v17 = &v41[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v41, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v20 = Strong;
    if (a1 > 4u)
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v33 = type metadata accessor for Logger(0);
      sub_100012DC4(v33, (uint64_t)qword_100648980);
      v34 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1000143B4((uint64_t)"Reminders List New Reminder With Custom Due Date", 48, 2, v34);
      swift_bridgeObjectRelease(v34);
      *v8 = a2;
      swift_storeEnumTagMultiPayload(v8, v6, 1);
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      v44 = xmmword_1005218A0;
      v45 = 0;
      v35 = a2;
      sub_10015F864((uint64_t)v8, (uint64_t)v42, 0, 0);
      swift_release();
      sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
    }
    else
    {
      v21 = swift_allocObject(&unk_1005F3F58, 17, 7);
      *(_BYTE *)(v21 + 16) = a1;
      v22 = *(_QWORD *)(v20 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
      swift_beginAccess(v22, v42, 0, 0);
      sub_10002B1E8(v22, (uint64_t)v17, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      LOBYTE(v22) = v17[*(int *)(v15 + 20)];
      sub_10001F544((uint64_t)v17, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      if ((v22 & 1) != 0
        || (v23 = swift_unknownObjectWeakLoadStrong(v20 + 16)) != 0
        && (v25 = v23,
            v26 = *(_QWORD *)(v20 + 24),
            ObjectType = swift_getObjectType(v23, v24),
            LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 64))(ObjectType, v26),
            swift_unknownObjectRelease(v25),
            (v26 & 1) != 0))
      {
        if (qword_10063D400 != -1)
          swift_once(&qword_10063D400, sub_10015A89C);
        v28 = type metadata accessor for Logger(0);
        v29 = sub_100012DC4(v28, (uint64_t)qword_100648980);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v32, 2u);
          swift_slowDealloc(v32, -1, -1);
        }
        swift_release();

      }
      else
      {
        sub_10041960C((void *)8, (uint64_t)sub_10017C3A4, v21, (uint64_t)v11);
        sub_1000073A0((uint64_t)v11, &qword_100654880);
        swift_release();
      }
      v36 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 1, 1, v36);
      type metadata accessor for MainActor(0);
      v37 = swift_retain();
      v38 = static MainActor.shared.getter(v37);
      v39 = (_QWORD *)swift_allocObject(&unk_1005F3F80, 40, 7);
      v39[2] = v38;
      v39[3] = &protocol witness table for MainActor;
      v39[4] = v20;
      sub_100148388((uint64_t)v14, (uint64_t)&unk_100649D78, (uint64_t)v39, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10016C198(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = sub_10002A750(&qword_100649D80);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRDateChangeType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListPostponeType.dateChangeType.getter(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1000073A0((uint64_t)v5, &qword_100649D80);
  sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
  TTRReminderEditor.edit(dueDateComponentsUsing:)(v9);
  return sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
}

uint64_t sub_10016C2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[5] = v7;
  v4[6] = v8;
  return swift_task_switch(sub_10016C310, v7, v8);
}

uint64_t sub_10016C310()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + 128);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[7] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10015CA60;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

void sub_10016C384(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void (*v21)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v22[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v22, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = *(_QWORD *)(Strong + 72);
    v13 = *(_QWORD *)(Strong + 80);
    ObjectType = swift_getObjectType(v12, v11);
    type metadata accessor for RDIDispatchQueue(0);
    v15 = swift_unknownObjectRetain(v12);
    v16 = (void *)static RDIDispatchQueue.storeUserInteractiveQueue.getter(v15);
    v17 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v18 = a5;
    v19 = (void *)static OS_dispatch_queue.main.getter(v17);
    v20 = swift_allocObject(a4, 32, 7);
    *(_QWORD *)(v20 + 16) = a1;
    *(_QWORD *)(v20 + 24) = a2;
    v21 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 600);
    swift_retain();
    v21(v16, v19, v18, v20, ObjectType, v13);
    swift_release();
    swift_unknownObjectRelease(v12);

    swift_release();
  }
  else
  {
    a1(_swiftEmptyArrayStorage);
  }
}

double sub_10016C4C8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t Strong;
  double result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE *v29;
  _BYTE *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  _BYTE v72[4];
  int v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  id v82;
  _BYTE v83[24];
  _QWORD v84[3];
  void *v85;
  _UNKNOWN **v86;
  unsigned __int8 v87;
  uint64_t v88;
  unsigned __int8 v89;

  v4 = sub_10002A750(&qword_100649D38);
  __chkstk_darwin(v4);
  v6 = &v72[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10002A750(&qword_100649D40);
  __chkstk_darwin(v7);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = a2 + 16;
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = type metadata accessor for Logger(0);
  sub_100012DC4(v11, (uint64_t)qword_100648980);
  v12 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders List New Reminder With Custom Tags", 44, 2, v12);
  swift_bridgeObjectRelease(v12);
  swift_beginAccess(v10, v83, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v15 = (_QWORD *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + 152);
    if (v16)
    {
      v18 = v16;
      v19 = v15[20];
      ObjectType = swift_getObjectType(v16, v17);
      v85 = (void *)type metadata accessor for TTRIRemindersCommonPresenter(0);
      v86 = &off_1005F31C8;
      v84[0] = v15;
      v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 8);
      swift_retain();
      v22 = (void *)v21(v84, ObjectType, v19);
      swift_unknownObjectRelease(v18);
      sub_100027F10(v84);
      v23 = (_QWORD *)v15[29];
      sub_10041AA68(0, (uint64_t)v6);
      v24 = sub_10002A750(&qword_100649D48);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v6, 1, v24) == 1)
      {
        sub_1000073A0((uint64_t)v6, &qword_100649D38);
        swift_release();

        return result;
      }
      v81 = v22;
      v82 = a1;
      v25 = &v6[*(int *)(v24 + 48)];
      v26 = *(_QWORD *)v25;
      v27 = *((_QWORD *)v25 + 1);
      v28 = v25[16];
      v29 = &v9[*(int *)(v7 + 48)];
      sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      *(_QWORD *)v29 = v26;
      *((_QWORD *)v29 + 1) = v27;
      v29[16] = v28;
      v30 = &v9[*(int *)(v7 + 48)];
      v31 = *(void **)v30;
      v32 = (void *)*((_QWORD *)v30 + 1);
      v33 = v30[16];
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v34 = v23[7];
      v36 = swift_getObjectType(v23[6], v35);
      v37 = v23[5];
      v39 = swift_getObjectType(v23[4], v38);
      v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 432))(v39, v37);
      v41 = TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)(0, 0, 0xE000000000000000, v31, v32, v33, 1, 4, v40, v36, v34);
      swift_bridgeObjectRelease(v40);
      sub_100089930(v31, v32, v33);
      if (!v41)
      {
        swift_release();

        return result;
      }
      v42 = objc_msgSend(v82, "presentationSourceItem");
      v79 = (void *)v41;
      if (v42)
      {
        v43 = v42;
        static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)(v84, v42, 15, 0);
        v44 = (void *)v84[0];
        v45 = v84[1];
        v46 = v84[2];
        v82 = v85;
        v47 = (uint64_t)v86;
        v80 = v87;
        v48 = v88;
        v73 = v89;
        swift_unknownObjectRelease(v43);
      }
      else
      {
        v44 = 0;
        v45 = 0;
        v46 = 0;
        v82 = 0;
        v47 = 0;
        v48 = 0;
        v73 = 0;
        v80 = 254;
      }
      v74 = *(_QWORD *)((char *)v15
                      + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
      v49 = v74;
      v50 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
      v51 = swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
      v52 = v51 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
      v53 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
      v78 = v51;
      v54 = v51 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
      *(_QWORD *)v54 = v44;
      *(_QWORD *)(v54 + 8) = v45;
      v55 = v45;
      v56 = v46;
      *(_QWORD *)(v54 + 16) = v46;
      v57 = v82;
      *(_QWORD *)(v54 + 24) = v82;
      *(_QWORD *)(v54 + 32) = v47;
      *(_QWORD *)(v54 + 40) = v80;
      *(_QWORD *)(v54 + 48) = v48;
      *(_BYTE *)(v54 + 56) = v73;
      *(_QWORD *)(v51
                + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v49;
      v58 = type metadata accessor for NavigationBarReminderCreationHashtagEditorModuleDelegate();
      v59 = swift_allocObject(v58, 24, 7);
      v60 = swift_weakInit(v59 + 16, 0);
      swift_weakAssign(v60, v15);
      v75 = v44;
      v76 = v55;
      v61 = v56;
      v77 = v56;
      v82 = v57;
      v62 = v47;
      v63 = v15[47];
      v15[47] = v59;
      v15[48] = &off_1005F2EA8;
      v64 = v44;
      v65 = v80;
      sub_1000A7020(v64, v55, v61, (uint64_t)v57, v47, v80);
      swift_retain();
      swift_unknownObjectRelease(v63);
      v66 = v15[11];
      v67 = v15[47];
      v68 = v15[48];
      swift_unknownObjectRetain(v67);
      v69 = v79;
      v70 = v68;
      v71 = v81;
      sub_100173AE0((uint64_t)v79, 1, v67, v70, (uint64_t)v81, v78, v66);

      swift_unknownObjectRelease(v67);
      sub_1000866B0(v75, v76, v77, (uint64_t)v82, v62, v65);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10016CA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v7 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v15 = Strong;
    v16 = swift_allocObject(&unk_1005F3EB8, 32, 7);
    *(_QWORD *)(v16 + 16) = a1;
    *(_QWORD *)(v16 + 24) = a2;
    v17 = *(_QWORD *)(v15 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v17, v29, 0, 0);
    sub_10002B1E8(v17, (uint64_t)v12, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v18 = v12[*(int *)(v10 + 20)];
    swift_bridgeObjectRetain(a2);
    sub_10001F544((uint64_t)v12, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v18 & 1) != 0
      || (v19 = swift_unknownObjectWeakLoadStrong(v15 + 16)) != 0
      && (v21 = v19,
          v22 = *(_QWORD *)(v15 + 24),
          ObjectType = swift_getObjectType(v19, v20),
          LOBYTE(v22) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(ObjectType, v22),
          swift_unknownObjectRelease(v21),
          (v22 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v24 = type metadata accessor for Logger(0);
      v25 = sub_100012DC4(v24, (uint64_t)qword_100648980);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }
      swift_release();
      swift_release();

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_10017C358, v16, (uint64_t)v9);
      sub_1000073A0((uint64_t)v9, &qword_100654880);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10016CC90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = a6;
  *(_BYTE *)(v6 + 72) = a4;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = v10;
  return swift_task_switch(sub_10016CD00, v9, v10);
}

uint64_t sub_10016CD00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v4;

  if (*(_BYTE *)(v0 + 72) == 1)
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 128);
    v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
    *(_QWORD *)(v0 + 64) = v1;
    v2 = type metadata accessor for TTRIPrivacyChecker(0);
    *v1 = v0;
    v1[1] = sub_10016CDB0;
    return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
  }
  else
  {
    v4 = swift_release();
    (*(void (**)(_QWORD, _QWORD, __n128))(**(_QWORD **)(v0 + 24) + 1416))(*(unsigned __int8 *)(v0 + 72), *(_QWORD *)(v0 + 32), v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10016CDB0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10016CDFC, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10016CDFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v0 + 24) + 1416))(*(unsigned __int8 *)(v0 + 72), *(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10016CE40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  char v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[24];

  v5 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v5);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v8);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v15);
  v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002B1E8(a2, (uint64_t)v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1)
  {
    v19 = swift_allocObject(&unk_1005F3E68, 17, 7);
    *(_BYTE *)(v19 + 16) = a1 & 1;
    v20 = *(_QWORD *)(v2 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v20, v39, 0, 0);
    sub_10002B1E8(v20, (uint64_t)v10, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v21 = v10[*(int *)(v8 + 20)];
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v21 & 1) != 0
      || (Strong = swift_unknownObjectWeakLoadStrong(v2 + 16)) != 0
      && (v24 = Strong,
          v25 = *(_QWORD *)(v2 + 24),
          ObjectType = swift_getObjectType(Strong, v23),
          v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(ObjectType, v25),
          swift_unknownObjectRelease(v24),
          (v27 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v28 = type metadata accessor for Logger(0);
      v29 = sub_100012DC4(v28, (uint64_t)qword_100648980);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v32, 2u);
        swift_slowDealloc(v32, -1, -1);
      }
      swift_release();

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_10017C204, v19, (uint64_t)v7);
      sub_1000073A0((uint64_t)v7, &qword_100654880);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  else
  {
    sub_10001F580((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v34 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v35 = *(unsigned __int8 *)(v12 + 80);
    v36 = (v35 + 32) & ~v35;
    v37 = swift_allocObject(v34, v36 + *(_QWORD *)(v12 + 72), v35 | 7);
    *(_OWORD *)(v37 + 16) = xmmword_100520250;
    sub_10002B1E8((uint64_t)v14, v37 + v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1001A27AC(a1 & 1, v37);
    swift_bridgeObjectRelease(v37);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

void sub_10016D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  __n128 v12;
  _BYTE v13[80];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v13);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x656372756F73;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for TTRIAttachmentImportingController.Source;
  *(_BYTE *)(inited + 48) = a1;
  v11 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List show attachment importer {source: %@}", 52, 2, v11);
  v12 = swift_bridgeObjectRelease(v11);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v12);
  sub_10016D308(a1, a2);
}

void sub_10016D308(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  unint64_t v22;
  void **v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  __n128 v35;
  char *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  void *Strong;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  char *v49;
  void **aBlock;
  unint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  id (*v54)();
  uint64_t v55;
  _BYTE v56[24];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIAttachmentImportingController(0)), "init");
  v13 = TTRIAttachmentImportingController.createPicker(of:)(a1);
  if (!v13)
  {

    return;
  }
  v14 = (void *)v13;
  sub_10002B1E8(a2, (uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v15 = type metadata accessor for NavigationBarReminderCreationAttachmentImportingControllerDelegate();
    v16 = swift_allocObject(v15, 24, 7);
    v17 = swift_weakInit(v16 + 16, 0);
    swift_weakAssign(v17, v2);
    v18 = &off_1005F2E78;
  }
  else
  {
    sub_10001F580((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = v2[30];
    ObjectType = swift_getObjectType(v2[29], v20);
    aBlock = 0;
    v51 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    v22 = v51;
    v23 = (void **)_typeName(_:qualified:)(*v3, 0);
    v25 = v24;
    swift_bridgeObjectRelease(v22);
    aBlock = v23;
    v51 = v25;
    v26._object = (void *)0x80000001005672C0;
    v26._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v26);
    v27 = v51;
    v28 = sub_1003003A4((uint64_t)v9, (uint64_t)aBlock, v51);
    v30 = v29;
    swift_bridgeObjectRelease(v27);
    if (!v28)
    {
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

      return;
    }
    v31 = type metadata accessor for AttachmentImportingControllerDelegate();
    v16 = swift_allocObject(v31, 40, 7);
    v32 = swift_weakInit(v16 + 16, 0);
    swift_weakAssign(v32, v3);
    *(_QWORD *)(v16 + 24) = v28;
    *(_QWORD *)(v16 + 32) = v30;
    v33 = *(_QWORD *)(v19 + 16);
    v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v33 + 88);
    v35 = swift_unknownObjectRetain(v28);
    v34(v9, ObjectType, v33, v35);
    swift_unknownObjectRelease(v28);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = &off_1005F2E90;
  }
  v36 = &v49[direct field offset for TTRIAttachmentImportingController.delegate];
  swift_beginAccess(&v49[direct field offset for TTRIAttachmentImportingController.delegate], v56, 1, 0);
  *((_QWORD *)v36 + 1) = v18;
  swift_unknownObjectWeakAssign(v36, v16);
  v37 = (void *)v3[49];
  v38 = v3[50];
  v39 = v49;
  v3[49] = v49;
  v3[50] = v16;
  v3[51] = v18;
  v40 = v39;
  swift_unknownObjectRetain(v16);
  sub_10017C190(v37, v38);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3[11] + 16);
  if (Strong)
  {
    v42 = Strong;
    v43 = objc_msgSend(Strong, "presentedViewController");
    if (v43)
    {
      v44 = v43;
      v45 = swift_allocObject(&unk_1005F3E18, 33, 7);
      *(_QWORD *)(v45 + 16) = v42;
      *(_QWORD *)(v45 + 24) = v14;
      *(_BYTE *)(v45 + 32) = 1;
      v54 = sub_10017C1E8;
      v55 = v45;
      aBlock = _NSConcreteStackBlock;
      v51 = 1107296256;
      v52 = sub_100006378;
      v53 = &unk_1005F3E30;
      v46 = _Block_copy(&aBlock);
      v47 = v42;
      v48 = v14;
      objc_msgSend(v44, "dismissViewControllerAnimated:completion:", 1, v46, swift_release().n128_f64[0]);

      _Block_release(v46);
      swift_unknownObjectRelease(v16);

    }
    else
    {
      objc_msgSend(v42, "presentViewController:animated:completion:", v14, 1, 0);

      swift_unknownObjectRelease(v16);
    }
  }
  else
  {

    swift_unknownObjectRelease(v16);
  }
}

void sub_10016D754(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __int128 v53;
  uint64_t v54;

  v4 = v3;
  v52 = a3;
  *(_QWORD *)&v53 = a2;
  v51 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v51);
  v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  __chkstk_darwin(v18);
  v22 = a1;
  if (a1 < 5u)
  {
    v23 = (char *)&v51 - v20;
    v24 = v21;
    v25 = *(_QWORD *)(v4 + 256);
    ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 248), v19);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 16))(a1, 6, 0, ObjectType, v25);
    if (v27)
    {
      v28 = v4;
      v54 = v27;
      v29 = swift_allocObject(&unk_1005F3738, 24, 7);
      swift_weakInit(v29 + 16, v4);
      sub_10002B1E8(v53, (uint64_t)v23, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
      v30 = *(unsigned __int8 *)(v24 + 80);
      v31 = (v30 + 24) & ~v30;
      v32 = swift_allocObject(&unk_1005F3D78, v31 + v13, v30 | 7);
      *(_QWORD *)(v32 + 16) = v29;
      sub_10001F580((uint64_t)v23, v32 + v31, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
      v33 = sub_10002A750(&qword_100649D00);
      v34 = sub_100023FEC(&qword_100649D08, &qword_100649D00, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v35 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, sub_10017BAD4, v32, v33, v34);
      swift_release();
      swift_release();
      *(_QWORD *)(v28 + 416) = v35;
      swift_release();
    }
    return;
  }
  v36 = v51;
  v37 = v52;
  if (v22 == 5)
  {
    sub_10002B1E8(v53, (uint64_t)v17, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
    {
      *v7 = v37;
      swift_storeEnumTagMultiPayload(v7, v36, 1);
      v38 = v37;
      sub_10016DB88((uint64_t)v7);
      v39 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget;
      v40 = (uint64_t)v7;
    }
    else
    {
      sub_10001F580((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_storeEnumTagMultiPayload(v7, v36, 0);
      sub_10016DB88((uint64_t)v7);
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
      v40 = (uint64_t)v11;
      v39 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item;
    }
    goto LABEL_11;
  }
  sub_10002B1E8(v53, (uint64_t)v14, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
  v41 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    v42 = (uint64_t)v11;
    sub_10001F580((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v43 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v44 = *(_QWORD *)(v41 + 72);
    v45 = *(unsigned __int8 *)(v41 + 80);
    v46 = (v45 + 32) & ~v45;
    v47 = v46 + v44;
    v48 = v45 | 7;
    v49 = swift_allocObject(v43, v46 + v44, v45 | 7);
    v53 = xmmword_100520250;
    *(_OWORD *)(v49 + 16) = xmmword_100520250;
    sub_10002B1E8(v42, v49 + v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1001AE2B0(0, v49);
    swift_bridgeObjectRelease(v49);
    v50 = swift_allocObject(v43, v47, v48);
    *(_OWORD *)(v50 + 16) = v53;
    sub_10002B1E8(v42, v50 + v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1001AE4B0(0, v50);
    swift_bridgeObjectRelease(v50);
    v40 = v42;
    v39 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item;
LABEL_11:
    sub_10001F544(v40, v39);
  }
}

uint64_t sub_10016DB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t (*v13)(_QWORD);
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  id v43;
  char *v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  char v50;
  id v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];
  _QWORD v55[5];
  unsigned __int8 v56;
  uint64_t v57;
  unsigned __int8 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  char v63;

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v10);
  v12 = (id *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v44 = v6;
    v14 = *v12;
    v15 = objc_msgSend(*v12, "presentationSourceItem");
    if (v15)
    {
      v16 = v15;
      static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)(v55, v15, 15, 0);
      v17 = (void *)v55[0];
      v18 = v55[1];
      v19 = v55[2];
      v20 = v55[3];
      v21 = v55[4];
      v45 = v56;
      v22 = v57;
      v46 = v58;
      swift_unknownObjectRelease(v16);
    }
    else
    {
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v46 = 0;
      v45 = 254;
    }
    *(_QWORD *)&v59 = v17;
    *((_QWORD *)&v59 + 1) = v18;
    *(_QWORD *)&v60 = v19;
    *((_QWORD *)&v60 + 1) = v20;
    v61 = v21;
    *(_QWORD *)&v62 = v45;
    *((_QWORD *)&v62 + 1) = v22;
    v63 = v46;
    sub_10016E780((uint64_t)&v59, (uint64_t)&v51);
    v30 = v51;
    if (v51)
    {
      v47 = v52;
      v48 = v53;
      v49[0] = v54[0];
      *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)((char *)v54 + 9);
      v31 = type metadata accessor for NavigationBarReminderCreationLocationPickerModuleDelegate();
      v32 = swift_allocObject(v31, 32, 7);
      v43 = v14;
      v26 = v32;
      v33 = swift_weakInit(v32 + 16, 0);
      swift_weakAssign(v33, v2);
      *(_QWORD *)(v26 + 24) = v30;
      v34 = v30;
      sub_1000866B0(v17, v18, v19, v20, v21, v45);

      v35 = *(_QWORD *)(v2 + 424);
      v29 = &off_1005F2E58;
      *(_QWORD *)(v2 + 424) = v26;
      *(_QWORD *)(v2 + 432) = &off_1005F2E58;
      swift_retain();
      swift_unknownObjectRelease(v35);
      v51 = v34;
      v52 = v47;
      v53 = v48;
      v54[0] = v49[0];
      *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v49 + 9);
      v6 = v44;
      goto LABEL_9;
    }
    sub_1000866B0(v17, v18, v19, v20, v21, v45);

  }
  else
  {
    sub_10001F580((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v59 = 0u;
    v60 = 0u;
    v61 = 0;
    v62 = xmmword_1005218A0;
    v63 = 0;
    sub_10015FCE0((uint64_t)v9, (uint64_t)&v59, 0, 0, (uint64_t)&v51);
    v23 = v51;
    if (v51)
    {
      v47 = v52;
      v48 = v53;
      v49[0] = v54[0];
      *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)((char *)v54 + 9);
      swift_retain();
      v24 = objc_msgSend(v23, "objectID");
      v25 = type metadata accessor for LocationPickerModuleDelegate();
      v26 = swift_allocObject(v25, 32, 7);
      v27 = swift_weakInit(v26 + 16, 0);
      swift_weakAssign(v27, v2);
      swift_release();
      *(_QWORD *)(v26 + 24) = v24;
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v28 = *(_QWORD *)(v2 + 424);
      v29 = &off_1005F2E68;
      *(_QWORD *)(v2 + 424) = v26;
      *(_QWORD *)(v2 + 432) = &off_1005F2E68;
      swift_retain();
      swift_unknownObjectRelease(v28);
      v51 = v23;
      v52 = v47;
      v53 = v48;
      v54[0] = v49[0];
      *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v49 + 9);
LABEL_9:
      v36 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
      sub_10017C018((uint64_t)&v51, (uint64_t)&v47);
      type metadata accessor for MainActor(0);
      swift_retain();
      swift_unknownObjectRetain(v26);
      v38 = static MainActor.shared.getter(v37);
      v39 = swift_allocObject(&unk_1005F3DF0, 128, 7);
      v40 = v47;
      *(_OWORD *)(v39 + 56) = v48;
      v41 = v49[1];
      *(_OWORD *)(v39 + 72) = v49[0];
      *(_OWORD *)(v39 + 88) = v41;
      *(_QWORD *)(v39 + 16) = v38;
      *(_QWORD *)(v39 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v39 + 32) = v2;
      *(_BYTE *)(v39 + 104) = v50;
      *(_OWORD *)(v39 + 40) = v40;
      *(_QWORD *)(v39 + 112) = v26;
      *(_QWORD *)(v39 + 120) = v29;
      sub_100148388((uint64_t)v6, (uint64_t)&unk_100649D30, v39, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
      swift_unknownObjectRelease(v26);
      swift_release();
      return sub_10017C128((uint64_t)&v51);
    }
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return sub_1000073A0((uint64_t)&v51, &qword_100649D20);
}

double sub_10016E06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char *v26;
  char v28[24];

  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(void **)a1;
  v14 = *(_BYTE *)(a1 + 8);
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v17 = Strong;
    *(_QWORD *)(Strong + 416) = 0;
    swift_release();
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    sub_10002B1E8(a3, (uint64_t)&v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    type metadata accessor for MainActor(0);
    v19 = v13;
    v20 = swift_retain();
    v21 = static MainActor.shared.getter(v20);
    v22 = *(unsigned __int8 *)(v7 + 80);
    v23 = (v22 + 40) & ~v22;
    v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = (_QWORD *)swift_allocObject(&unk_1005F3DA0, v24 + 9, v22 | 7);
    v25[2] = v21;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v17;
    sub_10001F580((uint64_t)v9, (uint64_t)v25 + v23, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
    v26 = (char *)v25 + v24;
    *(_QWORD *)v26 = v13;
    v26[8] = v14;
    sub_100148388((uint64_t)v12, (uint64_t)&unk_100649D18, (uint64_t)v25, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_10016E25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)(v7 + 160) = a7;
  *(_QWORD *)(v7 + 56) = a5;
  *(_QWORD *)(v7 + 64) = a6;
  *(_QWORD *)(v7 + 48) = a4;
  v8 = sub_10002A750(&qword_100654880);
  *(_QWORD *)(v7 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  *(_QWORD *)(v7 + 80) = v9;
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  *(_QWORD *)(v7 + 96) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 104) = v11;
  *(_QWORD *)(v7 + 112) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  *(_QWORD *)(v7 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 128) = static MainActor.shared.getter(v13);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor, v14);
  *(_QWORD *)(v7 + 136) = v15;
  *(_QWORD *)(v7 + 144) = v16;
  return swift_task_switch(sub_10016E360, v15, v16);
}

uint64_t sub_10016E360()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[5] = *(_QWORD *)(v0[6] + 128);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to TTRPrivacyChecker.checkLocationAccess()
                                  + 1));
  v0[19] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10016E3CC;
  return TTRPrivacyChecker.checkLocationAccess()(v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10016E3CC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return swift_task_switch(sub_10016E418, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_10016E418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release();
  sub_10002B1E8(v4, v1, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_BYTE *)(v0 + 160);
    v8 = *(void **)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = swift_allocObject(&unk_1005F3DC8, 25, 7);
    *(_QWORD *)(v10 + 16) = v8;
    *(_BYTE *)(v10 + 24) = v7 & 1;
    v11 = *(_QWORD *)(v9 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v11, v0 + 16, 0, 0);
    sub_10002B1E8(v11, v5, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v11) = *(_BYTE *)(v5 + *(int *)(v6 + 20));
    v12 = v8;
    sub_10001F544(v5, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v11 & 1) != 0
      || (Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 48) + 16)) != 0
      && (v15 = Strong,
          v16 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24),
          ObjectType = swift_getObjectType(Strong, v14),
          LOBYTE(v16) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 64))(ObjectType, v16),
          swift_unknownObjectRelease(v15),
          (v16 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100012DC4(v18, (uint64_t)qword_100648980);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

    }
    else
    {
      v34 = *(_QWORD *)(v0 + 72);
      sub_10041960C((void *)8, (uint64_t)sub_10017C00C, v10, v34);
      sub_1000073A0(v34, &qword_100654880);
    }
    swift_release();
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 104);
    v25 = *(_BYTE *)(v0 + 160);
    v26 = *(void **)(v0 + 64);
    sub_10001F580(*(_QWORD *)(v0 + 120), v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v28 = *(unsigned __int8 *)(v24 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(v27, v29 + *(_QWORD *)(v24 + 72), v28 | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100520250;
    sub_10002B1E8(v23, v30 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v31 = v26;
    v32 = *(_QWORD *)(v0 + 64);
    if ((v25 & 1) != 0)
      sub_1001AE4B0(v32, v30);
    else
      sub_1001AE2B0(v32, v30);
    v33 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease(v30);

    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  v35 = *(_QWORD *)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 88);
  v37 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10016E72C(uint64_t a1, void *a2, char a3)
{
  id v5;

  v5 = a2;
  if ((a3 & 1) != 0)
    TTRReminderEditor.edit(vehicleTrigger:)(a2);
  else
    TTRReminderEditor.edit(locationTrigger:)(a2);

}

double sub_10016E780@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  id v45;
  __int128 v46;
  uint64_t v47;
  _UNKNOWN **v48;

  v3 = v2;
  v6 = sub_10002A750(&qword_100649D38);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649D40);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD **)(v2 + 232);
  sub_10041AA68(0, (uint64_t)v8);
  v13 = sub_10002A750(&qword_100649D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) == 1)
  {
    sub_1000073A0((uint64_t)v8, &qword_100649D38);
  }
  else
  {
    v43 = v3;
    v44 = a1;
    v14 = &v8[*(int *)(v13 + 48)];
    v15 = *(_QWORD *)v14;
    v16 = *((_QWORD *)v14 + 1);
    v17 = v14[16];
    v18 = &v11[*(int *)(v9 + 48)];
    sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    *(_QWORD *)v18 = v15;
    *((_QWORD *)v18 + 1) = v16;
    v18[16] = v17;
    v19 = &v11[*(int *)(v9 + 48)];
    v20 = *(void **)v19;
    v21 = (void *)*((_QWORD *)v19 + 1);
    v22 = v19[16];
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v23 = v12[7];
    ObjectType = swift_getObjectType(v12[6], v24);
    v26 = v12[5];
    v28 = swift_getObjectType(v12[4], v27);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 432))(v28, v26);
    v45 = (id)TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)(0, 0, 0xE000000000000000, v20, v21, v22, 1, 4, v29, ObjectType, v23);
    swift_bridgeObjectRelease(v29);
    sub_100089930(v20, v21, v22);
    if (v45)
    {
      v30 = v43;
      v31 = *(_QWORD *)(v43 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
      v32 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
      v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
      v34 = v33 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
      v35 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
      v36 = v44;
      sub_10000F614(v44, v33 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor, &qword_100642D10);
      *(_QWORD *)(v33
                + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v31;
      v47 = v32;
      v48 = &off_100605368;
      *(_QWORD *)&v46 = v33;
      v37 = type metadata accessor for NavigationBarReminderCreationReminderDetailModuleDelegate();
      v38 = swift_allocObject(v37, 32, 7);
      v39 = swift_weakInit(v38 + 16, 0);
      swift_weakAssign(v39, v30);
      v40 = v45;
      *(_QWORD *)(v38 + 24) = v45;
      *(_QWORD *)a2 = v40;
      sub_10002E37C(&v46, a2 + 8);
      *(_QWORD *)(a2 + 48) = v38;
      *(_QWORD *)(a2 + 56) = &off_1005F2EC0;
      *(_BYTE *)(a2 + 64) = 0;
      sub_10017C154(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
      swift_retain();
      v41 = v45;
      return result;
    }
  }
  *(_BYTE *)(a2 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_10016EAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_10016EB1C, v8, v9);
}

uint64_t sub_10016EB1C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + 128);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[8] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10016EB90;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10016EB90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10016EBDC, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10016EBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(void **)v1;
  v5 = *(unsigned __int8 *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = sub_10001413C((_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 32));
  sub_10017395C(v4, v5, v6, v7, *v8, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016EC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[8] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v7[9] = v10;
  v7[10] = v11;
  return swift_task_switch(sub_10016ECC8, v10, v11);
}

uint64_t sub_10016ECC8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[4] + 128);
  v0[11] = v1;
  v0[2] = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[12] = v2;
  v3 = type metadata accessor for TTRIPrivacyChecker(0);
  v0[13] = v3;
  *v2 = v0;
  v2[1] = sub_10016ED44;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v3, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10016ED44()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = (_QWORD *)*v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  v1[3] = v2;
  v1 += 3;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
  v1[11] = v3;
  *v3 = v5;
  v3[1] = sub_10016EDBC;
  return TTRPrivacyChecker.checkLocationAccess()(v1[10], &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10016EDBC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_10016EE08, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10016EE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  swift_release();
  v5 = *(_QWORD *)(v4 + 88);
  v6 = *(_QWORD *)v3;
  v7 = *(_BYTE *)(v3 + 64);
  v8 = sub_10001413C((_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 32));
  sub_100174420(v6, v7, v2, v1, *v8, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016EE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE v17[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(Strong + 104);
    swift_retain(v14);
    swift_release(v13);
    v15 = a7(a3, a4);
    swift_release(v14);
  }
  else
  {
    v15 = 0;
  }
  return a5(v15 & 1);
}

uint64_t sub_10016EF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v8[10] = v14;
  v8[11] = v15;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[12] = v9;
  v8[13] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v8[14] = v11;
  v8[15] = v12;
  return swift_task_switch(sub_10016EFC0, v11, v12);
}

uint64_t sub_10016EFC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[12];
  v1[16] = *(_QWORD *)(v1[5] + 88);
  v1[17] = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[18] = v4;
  v1[19] = v5;
  return swift_task_switch(sub_10016F02C, v4, v5);
}

uint64_t sub_10016F02C()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0[16] + 16);
  v0[20] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    v0[21] = v2;
    *v2 = v0;
    v2[1] = sub_10016F0D4;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 22, v0[6], v0[7], 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_10016F24C, v0[14], v0[15]);
  }
}

uint64_t sub_10016F0D4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));

  *(_BYTE *)(v1 + 177) = *(_BYTE *)(v1 + 176);
  return swift_task_switch(sub_10016F12C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_10016F12C()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_10016F164, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_10016F164()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, __n128);

  v1 = *(unsigned __int8 *)(v0 + 177);
  v2 = swift_release();
  if ((_DWORD)v1 == 1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 232);
    v4 = *(_QWORD *)(v3 + 96);
    swift_beginAccess(v4 + 40, v0 + 16, 0, 0);
    v6 = *(_QWORD *)(v4 + 40);
    if (v6)
    {
      v7 = *(_QWORD *)(v4 + 48);
      ObjectType = swift_getObjectType(v6, v5);
      v9 = *(void (**)(uint64_t, uint64_t, __n128))(v7 + 24);
      v10 = swift_unknownObjectRetain(v6);
      v9(ObjectType, v7, v10);
      swift_unknownObjectRelease(v6);
    }
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 64);
    sub_10041C214(v3);
    v2.n128_f64[0] = sub_1001AEEE4(v11, v12);
    if (v13)
    {
      v14 = *(void (**)(uint64_t, __n128))(v0 + 64);
LABEL_7:
      v14(v1, v2);
    }
  }
  else
  {
    v14 = *(void (**)(uint64_t, __n128))(v0 + 64);
    if (v14)
      goto LABEL_7;
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10016F24C()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(void (**)(_QWORD))(v0 + 64);
  if (v1)
    v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016F290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(_QWORD *__return_ptr, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD v8[5];

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  v5 = *(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v3 + 336);
  swift_retain(v2);
  v5(v8, 0, sub_10017C388, v2, ObjectType, v3);
  swift_release(v2);
  v6 = v8[0];
  swift_release(v8[4]);
  return v6;
}

uint64_t sub_10016F32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017658C(a3);
}

Class sub_10016F334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001774B8(a3);
}

uint64_t sub_10016F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017717C(a3);
}

uint64_t sub_10016F344()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1400))();
}

uint64_t sub_10016F350()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1408))();
}

double sub_10016F35C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v5 = v4;
  v8 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  type metadata accessor for MainActor(0);
  swift_retain();
  v12 = sub_10017C154(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000A7020);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1005F3E90, 105, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_BYTE *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = v5;
  sub_10000F614(a4, v14 + 48, &qword_100642D10);
  sub_100148388((uint64_t)v10, (uint64_t)&unk_100649D58, v14, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10016F49C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType(result, v2);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
    return v6;
  }
  return result;
}

uint64_t sub_10016F4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[8] = v8;
  v5[9] = v9;
  return swift_task_switch(sub_10016F568, v8, v9);
}

uint64_t sub_10016F568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 80) = v2;
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v4 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 88) = v4;
      v5 = *(unsigned __int8 *)(v3 + v4 + 32);
      if (v5 != 3)
        break;
      if (v2 == ++v4)
      {
        swift_bridgeObjectRelease(v3);
        goto LABEL_9;
      }
    }
    if (*(_BYTE *)(v3 + v4 + 32))
    {
      if (v5 == 1)
      {
        *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
        v6 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
        *(_QWORD *)(v0 + 104) = v6;
        v7 = type metadata accessor for TTRIPrivacyChecker(0);
        *v6 = v0;
        v6[1] = sub_10016F8DC;
        return TTRPrivacyChecker.checkLocationAccess()(v7, &protocol witness table for TTRIPrivacyChecker);
      }
      else
      {
        *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
        v12 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkContactsAccess(contactsFeature:)[1]);
        *(_QWORD *)(v0 + 112) = v12;
        v13 = type metadata accessor for TTRIPrivacyChecker(0);
        *v12 = v0;
        v12[1] = sub_10016F928;
        return TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(0, v13, &protocol witness table for TTRIPrivacyChecker);
      }
    }
    else
    {
      *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
      v10 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
      *(_QWORD *)(v0 + 96) = v10;
      v11 = type metadata accessor for TTRIPrivacyChecker(0);
      *v10 = v0;
      v10[1] = sub_10016F704;
      return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v11, &protocol witness table for TTRIPrivacyChecker);
    }
  }
  else
  {
LABEL_9:
    v9 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
  }
}

uint64_t sub_10016F704()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_10016F750, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10016F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80) - 1;
  do
  {
    if (v2 == v1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
      v8 = swift_release();
      return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
    }
    v3 = *(_QWORD *)(v0 + 40) + v1++;
    *(_QWORD *)(v0 + 88) = v1;
    v4 = *(unsigned __int8 *)(v3 + 33);
  }
  while (v4 == 3);
  if (v4)
  {
    if (v4 == 1)
    {
      *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
      v5 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
      *(_QWORD *)(v0 + 104) = v5;
      v6 = type metadata accessor for TTRIPrivacyChecker(0);
      *v5 = v0;
      v5[1] = sub_10016F8DC;
      return TTRPrivacyChecker.checkLocationAccess()(v6, &protocol witness table for TTRIPrivacyChecker);
    }
    else
    {
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
      v11 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkContactsAccess(contactsFeature:)[1]);
      *(_QWORD *)(v0 + 112) = v11;
      v12 = type metadata accessor for TTRIPrivacyChecker(0);
      *v11 = v0;
      v11[1] = sub_10016F928;
      return TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(0, v12, &protocol witness table for TTRIPrivacyChecker);
    }
  }
  else
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 128);
    v9 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
    *(_QWORD *)(v0 + 96) = v9;
    v10 = type metadata accessor for TTRIPrivacyChecker(0);
    *v9 = v0;
    v9[1] = sub_10016F704;
    return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v10, &protocol witness table for TTRIPrivacyChecker);
  }
}

uint64_t sub_10016F8DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return swift_task_switch(sub_10019C8D0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10016F928()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_10019C8D0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

void sub_10016F974(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[7];
  char v59;

  v3 = v2;
  v6 = v2 + 2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 2);
  if (Strong)
  {
    v9 = Strong;
    v10 = v3[3];
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 224))(v58, a1, ObjectType, v10);
    v12 = (void *)v58[0];
    v13 = v58[3];
    v56 = v58[1];
    v57 = v58[2];
    v14 = v58[4];
    v55 = v58[5];
    v15 = v58[6];
    v16 = v59;
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = 0;
    v56 = 0;
    v57 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v55 = 254;
  }
  v17 = (void *)sub_100171D9C(a1, (void (*)(uint64_t *__return_ptr))sub_10041C0C0, 0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))sub_10041C0CC, 0);
  if (v17 == (void *)1)
    goto LABEL_11;
  v19 = v17;
  if ((v18 & 1) != 0)
  {

    goto LABEL_11;
  }
  if (!v17)
  {
LABEL_11:
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    sub_1000866B0(v12, v56, v57, v13, v14, v55);
    return;
  }
  v54 = v12;
  v50 = v13;
  v51 = v14;
  v52 = v15;
  v53 = v16;
  v20 = v3[10];
  swift_getObjectType(v3[9], v18);
  v21 = *(uint64_t (**)(void))(v20 + 160);
  v48 = v19;
  v49 = v21();
  v22 = swift_unknownObjectWeakLoadStrong(v6);
  if (v22)
  {
    v24 = v22;
    v25 = v3[3];
    v26 = swift_getObjectType(v22, v23);
    v27 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    v31 = *(unsigned __int8 *)(v29 + 80);
    v32 = (v31 + 32) & ~v31;
    v33 = swift_allocObject(v27, v32 + v30, v31 | 7);
    *(_OWORD *)(v33 + 16) = xmmword_100520250;
    v34 = v33 + v32;
    sub_10002B1E8(a1, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 216))(v33, v26, v25);
    swift_unknownObjectRelease(v24);
    swift_setDeallocating(v33);
    swift_arrayDestroy(v34, *(_QWORD *)(v33 + 16), v28);
    swift_deallocClassInstance(v33, 32, 7);
  }
  v35 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v36 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 + 32) & ~v38;
  v47 = swift_allocObject(v35, v39 + *(_QWORD *)(v37 + 72), v38 | 7);
  v40 = v47 + v39;
  v46 = v47 + v39;
  sub_10002B1E8(a1, v47 + v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v41 = *(_QWORD *)((char *)v3
                  + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v42 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v43 = swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v44 = v43 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
  sub_10002B1E8(v40, v43 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v36);
  v45 = v43 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
  *(_QWORD *)v45 = v54;
  *(_QWORD *)(v45 + 8) = v56;
  *(_QWORD *)(v45 + 16) = v57;
  *(_QWORD *)(v45 + 24) = v50;
  *(_QWORD *)(v45 + 32) = v51;
  *(_QWORD *)(v45 + 40) = v55;
  *(_QWORD *)(v45 + 48) = v52;
  *(_BYTE *)(v45 + 56) = v53;
  *(_QWORD *)(v43
            + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v41;
  *(_QWORD *)(a2 + 32) = v42;
  *(_QWORD *)(a2 + 40) = &off_100605368;
  sub_1000A7020(v54, v56, v57, v50, v51, v55);
  swift_retain();

  sub_1000866B0(v54, v56, v57, v50, v51, v55);
  swift_setDeallocating(v47);
  swift_arrayDestroy(v46, 1, v36);
  swift_deallocClassInstance(v47, 32, 7);
  *(_QWORD *)a2 = v49;
  *(_QWORD *)(a2 + 8) = v43;
}

void sub_10016FD74(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  sub_10017E5E0(a3, a4);
}

uint64_t sub_10016FD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_10016D308(a4, (uint64_t)v8);
  return sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersListNavigationBarEditingTarget);
}

uint64_t sub_10016FE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(result, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 208))(a3, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10016FEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _OWORD v8[2];
  uint64_t v9;
  __int128 v10;
  char v11;

  v4 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v6, v4, 0);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v10 = xmmword_1005218A0;
  v11 = 0;
  sub_10015F864((uint64_t)v6, (uint64_t)v8, 0, 0);
  return sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
}

uint64_t sub_10016FF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v6, v4, 0);
  sub_10016DB88((uint64_t)v6);
  return sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
}

uint64_t sub_100170024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017E72C(a3);
}

void sub_10017002C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  id v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v3 + 88) + 16);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", a3, 1, 0);

  }
}

uint64_t sub_100170090(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_10017E850(a3, a4, a5);
}

double sub_1001700A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double result;
  uint64_t v14;

  v4 = v3;
  v6 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(a3);
  v10 = swift_retain();
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_1005F3FD0, 48, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = a3;
  v12[5] = v4;
  sub_100148388((uint64_t)v8, (uint64_t)&unk_100649DA0, (uint64_t)v12, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001701A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD v65[5];

  v63 = a4;
  v64 = a6;
  v60 = a5;
  v8 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  v9 = __chkstk_darwin(v8);
  v59 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - v16;
  v18 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v22, a2, v18, v20);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v18);
  if (v23 == enum case for REMNavigationSpecifier.ReminderPathSpecifier.showInList(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v22, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    if (v24 == enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.revealSubtasks(_:))
    {
      v25 = objc_msgSend(v63, "objectID");
      __chkstk_darwin(v25);
      *(&v58 - 4) = a3;
      *(&v58 - 3) = v26;
      *((_BYTE *)&v58 - 16) = 1;
      __chkstk_darwin(v26);
      *(&v58 - 4) = a3;
      *(&v58 - 3) = (uint64_t)sub_10019C8B0;
      *(&v58 - 2) = v27;
      *((_BYTE *)&v58 - 8) = v28;
      firstly<A>(closure:)(sub_10019C6F4, &v58 - 6, (char *)&type metadata for () + 8);

      v29 = swift_allocObject(&unk_1005F3CB0, 32, 7);
      v30 = v64;
      *(_QWORD *)(v29 + 16) = v64;
      *(_QWORD *)(v29 + 24) = a3;
      v31 = swift_retain();
      v32 = zalgo.getter(v31);
      v33 = (void *)v32;
LABEL_8:
      v52 = dispatch thunk of Promise.then<A>(on:closure:)(v32, sub_10019C7D8, v29, v30);
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return v52;
    }
    if (v24 == enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.selectItem(_:))
    {
      v53 = objc_msgSend(v63, "objectID");
      __chkstk_darwin(v53);
      *(&v58 - 4) = a3;
      *(&v58 - 3) = v54;
      *((_BYTE *)&v58 - 16) = 0;
      __chkstk_darwin(v54);
      *(&v58 - 4) = a3;
      *(&v58 - 3) = (uint64_t)sub_10019C8B0;
      *(&v58 - 2) = v55;
      *((_BYTE *)&v58 - 8) = 1;
      firstly<A>(closure:)(sub_10019C6F4, &v58 - 6, (char *)&type metadata for () + 8);

      v29 = swift_allocObject(&unk_1005F3CD8, 32, 7);
      v30 = v64;
      *(_QWORD *)(v29 + 16) = v64;
      *(_QWORD *)(v29 + 24) = a3;
      v56 = swift_retain();
      v32 = zalgo.getter(v56);
      v33 = (void *)v32;
      goto LABEL_8;
    }
  }
  else
  {
    if (v23 == enum case for REMNavigationSpecifier.ReminderPathSpecifier.showDetail(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
      v34 = v61;
      v35 = (uint64_t)v59;
      v36 = v22;
      v37 = v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v59, v36, v62);
      v38 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
      v39 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
      v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
      v41 = v40 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
      v42 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
      v43 = v40 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
      *(_OWORD *)v43 = 0u;
      *(_OWORD *)(v43 + 16) = 0u;
      *(_QWORD *)(v43 + 32) = 0;
      *(_OWORD *)(v43 + 40) = xmmword_1005218A0;
      *(_BYTE *)(v43 + 56) = 0;
      *(_QWORD *)(v40
                + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v38;
      v65[3] = v39;
      v65[4] = &off_100605368;
      v65[0] = v40;
      v44 = type metadata accessor for ReminderDetailModuleDelegate();
      v45 = swift_allocObject(v44, 40, 7);
      v46 = swift_weakInit(v45 + 16, 0);
      *(_QWORD *)(v45 + 24) = 0;
      *(_QWORD *)(v45 + 32) = 0;
      swift_weakAssign(v46, a3);
      v48 = *(_QWORD *)(v45 + 24);
      v47 = *(_QWORD *)(v45 + 32);
      *(_QWORD *)(v45 + 24) = 0;
      *(_QWORD *)(v45 + 32) = 0;
      swift_retain();
      sub_1000381B8(v48, v47);
      v49 = *(_QWORD *)(a3 + 360);
      *(_QWORD *)(a3 + 360) = v45;
      *(_QWORD *)(a3 + 368) = &off_1005F2F80;
      swift_unknownObjectRelease(v49);
      v51 = *(_QWORD *)(a3 + 360);
      v50 = *(_QWORD *)(a3 + 368);
      swift_unknownObjectRetain(v51);
      v52 = sub_10009EB24((uint64_t)v63, v35, v51, v50, (uint64_t)v65, v60, v64);
      swift_unknownObjectRelease(v51);
      sub_100027F10(v65);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v37);
      return v52;
    }
    _diagnoseUnexpectedEnumCase<A>(type:)(v18, v18);
    __break(1u);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v11, v11);
  __break(1u);
  return result;
}

uint64_t sub_100170704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v5;
  _QWORD v7[4];

  v7[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
  v7[0] = a2;
  swift_retain();
  throwingCast<A>(_:as:failureMessage:)(v7, a3, 0, 0, a3, v5);
  return sub_100027F10(v7);
}

uint64_t sub_100170784(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  BOOL v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v9 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a2, v9, v11);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.none(_:)
    || v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:))
  {
    v16 = v14 != enum case for REMNavigationSpecifier.SectionPathSpecifier.none(_:);
    v17 = objc_msgSend(a4, "objectID");
    __chkstk_darwin(v17);
    *(&v25 - 4) = a3;
    *(&v25 - 3) = v18;
    *((_BYTE *)&v25 - 16) = v16;
    __chkstk_darwin(v18);
    *(&v25 - 4) = a3;
    *(&v25 - 3) = (uint64_t)sub_10019C89C;
    *(&v25 - 2) = v19;
    *((_BYTE *)&v25 - 8) = 1;
    firstly<A>(closure:)(sub_10019C6F4, &v25 - 6, (char *)&type metadata for () + 8);

    v20 = swift_allocObject(&unk_1005F3C38, 32, 7);
    *(_QWORD *)(v20 + 16) = a5;
    *(_QWORD *)(v20 + 24) = a3;
    v21 = swift_retain();
    v22 = (void *)zalgo.getter(v21);
    v23 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_10019C7D8, v20, a5);
    swift_release();
    swift_release();

    return v23;
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
    __break(1u);
  }
  return result;
}

uint64_t sub_100170964(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  int v14;
  BOOL v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v9 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a2, v9, v11);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.none(_:)
    || v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:))
  {
    v16 = v14 != enum case for REMNavigationSpecifier.SectionPathSpecifier.none(_:);
    v17 = objc_msgSend(a4, "objectID");
    __chkstk_darwin(v17);
    *(&v25 - 4) = a3;
    *(&v25 - 3) = v18;
    *((_BYTE *)&v25 - 16) = v16;
    __chkstk_darwin(v18);
    *(&v25 - 4) = a3;
    *(&v25 - 3) = (uint64_t)sub_10017B258;
    *(&v25 - 2) = v19;
    *((_BYTE *)&v25 - 8) = 1;
    firstly<A>(closure:)(sub_10019C6F4, &v25 - 6, (char *)&type metadata for () + 8);

    v20 = swift_allocObject(&unk_1005F3BC0, 32, 7);
    *(_QWORD *)(v20 + 16) = a5;
    *(_QWORD *)(v20 + 24) = a3;
    v21 = swift_retain();
    v22 = (void *)zalgo.getter(v21);
    v23 = dispatch thunk of Promise.then<A>(on:closure:)(v22, sub_10019C7D8, v20, a5);
    swift_release();
    swift_release();

    return v23;
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
    __break(1u);
  }
  return result;
}

uint64_t sub_100170B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v9 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a2, v9, v11);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if ((_DWORD)v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.none(_:)
    || (_DWORD)v14 == enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:))
  {
    __chkstk_darwin(v14);
    *(&v24 - 4) = a3;
    *(&v24 - 3) = a4;
    *((_BYTE *)&v24 - 16) = v16;
    __chkstk_darwin(v17);
    *(&v24 - 4) = a3;
    *(&v24 - 3) = (uint64_t)sub_10017B204;
    *(&v24 - 2) = v18;
    *((_BYTE *)&v24 - 8) = 1;
    firstly<A>(closure:)(sub_10019C6F4, &v24 - 6, (char *)&type metadata for () + 8);
    v19 = swift_allocObject(&unk_1005F3B48, 32, 7);
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a3;
    v20 = swift_retain();
    v21 = (void *)zalgo.getter(v20);
    v22 = dispatch thunk of Promise.then<A>(on:closure:)(v21, sub_10017B220, v19, a5);
    swift_release();
    swift_release();

    return v22;
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
    __break(1u);
  }
  return result;
}

uint64_t sub_100170D04(uint64_t a1, NSObject *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void **v23;
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  _QWORD *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t Strong;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  _QWORD v63[3];
  uint64_t v64;
  _BYTE v65[24];
  _OWORD v66[2];
  uint64_t v67;
  __int128 v68;
  char v69;
  uint64_t v70;

  v7 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v7);
  v60 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v62 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v61 = (char *)&v60 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - v17;
  v19 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (void **)((char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, NSObject *, uint64_t, double))(v20 + 16))(v23, a2, v19, v21);
  v24 = (*(uint64_t (**)(void **, uint64_t))(v20 + 88))(v23, v19);
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.select(_:))
  {
    v25 = (*(uint64_t (**)(void **, uint64_t))(v20 + 96))(v23, v19);
    v26 = *v23;
    __chkstk_darwin(v25);
    *(&v60 - 4) = (uint64_t)a3;
    *(&v60 - 3) = (uint64_t)v26;
    *((_BYTE *)&v60 - 16) = 0;
    __chkstk_darwin(v27);
    *(&v60 - 4) = (uint64_t)a3;
    *(&v60 - 3) = (uint64_t)sub_10017B158;
    *(&v60 - 2) = v28;
    *((_BYTE *)&v60 - 8) = 1;
    firstly<A>(closure:)(sub_10017B174, &v60 - 6, (char *)&type metadata for () + 8);
    v29 = swift_allocObject(&unk_1005F3AA8, 32, 7);
    *(_QWORD *)(v29 + 16) = a4;
    *(_QWORD *)(v29 + 24) = a3;
    v30 = swift_retain();
    v31 = (void *)zalgo.getter(v30);
    a2 = dispatch thunk of Promise.then<A>(on:closure:)(v31, sub_10019C7D8, v29, a4);

    swift_release();
LABEL_5:
    swift_release();

    return (uint64_t)a2;
  }
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(void **, uint64_t))(v20 + 96))(v23, v19);
    v32 = *v23;
    v33 = a3[18];
    ObjectType = swift_getObjectType(a3[17], v34);
    (*(void (**)(uint64_t, uint64_t))(v33 + 120))(ObjectType, v33);
    TTRModuleState.readyAndModelIsUpToDatePromise.getter();
    swift_release();
    v36 = (_QWORD *)swift_allocObject(&unk_1005F3A80, 40, 7);
    v36[2] = a4;
    v36[3] = a3;
    v36[4] = v32;
    v37 = swift_retain();
    v31 = (void *)zalgo.getter(v37);
    a2 = dispatch thunk of Promise.then<A>(on:closure:)(v31, sub_10017B13C, v36, a4);
    swift_release();
    goto LABEL_5;
  }
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.showContents(_:))
    goto LABEL_8;
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.newReminder(_:))
  {
    a2 = a3[29];
    v42 = (uint64_t)a2 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess((char *)a2 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state, v65, 0, 0);
    sub_10002B1E8(v42, (uint64_t)v11, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    v43 = v11[*(int *)(v9 + 20)];
    sub_10001F544((uint64_t)v11, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v43 & 1) != 0
      || (Strong = swift_unknownObjectWeakLoadStrong(a3 + 2)) != 0
      && (v46 = Strong,
          v47 = a3[3],
          v48 = swift_getObjectType(Strong, v45),
          LOBYTE(v47) = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 64))(v48, v47),
          swift_unknownObjectRelease(v46),
          (v47 & 1) != 0))
    {
      v49 = v70;
      v50 = v62;
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v51 = type metadata accessor for Logger(0);
      v52 = sub_100012DC4(v51, (uint64_t)qword_100648980);
      a2 = Logger.logObject.getter(v52);
      v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(a2, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, a2, v53, "TTRIRemindersCommonPresenter: cannot perform requestNewReminderInDefaultSection", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }

    }
    else
    {
      v58 = v60;
      sub_10041960C((void *)8, 0, 0, v60);
      sub_1000073A0(v58, &qword_100654880);
      v49 = v70;
      v50 = v62;
    }
    v64 = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v63[0] = a3;
    swift_retain();
    throwingCast<A>(_:as:failureMessage:)(v63, a4, 0, 0, a4, v59);
    if (!v49)
    {
      type metadata accessor for Promise(0, a4);
      sub_100027F10(v63);
      v41 = v50;
      return Promise.__allocating_init(value:)(v41);
    }
    goto LABEL_25;
  }
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_8:
    v64 = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v63[0] = a3;
    swift_retain();
    v39 = v70;
    throwingCast<A>(_:as:failureMessage:)(v63, a4, 0, 0, a4, v40);
    if (!v39)
    {
      type metadata accessor for Promise(0, a4);
      sub_100027F10(v63);
      v41 = v18;
      return Promise.__allocating_init(value:)(v41);
    }
    goto LABEL_25;
  }
  if (v24 == enum case for REMNavigationSpecifier.CommonListPathSpecifier.showManageSharedList(_:))
  {
    v67 = 0;
    memset(v66, 0, sizeof(v66));
    v68 = xmmword_1005218A0;
    v69 = 0;
    (*(void (**)(_QWORD, _OWORD *))(*a3 + 1416))(0, v66);
    v64 = type metadata accessor for TTRIRemindersCommonPresenter(0);
    v63[0] = a3;
    swift_retain();
    v55 = v61;
    v56 = v70;
    throwingCast<A>(_:as:failureMessage:)(v63, a4, 0, 0, a4, v57);
    if (!v56)
    {
      type metadata accessor for Promise(0, a4);
      sub_100027F10(v63);
      v41 = v55;
      return Promise.__allocating_init(value:)(v41);
    }
LABEL_25:
    sub_100027F10(v63);
    return (uint64_t)a2;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v19, v19);
  __break(1u);
  return result;
}

uint64_t sub_10017138C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[5];
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  v14 = a3;
  v11[2] = a2;
  v11[3] = sub_10017B194;
  v11[4] = &v13;
  v12 = 1;
  firstly<A>(closure:)(sub_10019C6F4, v11, (char *)&type metadata for () + 8);
  v6 = swift_allocObject(&unk_1005F3AD0, 32, 7);
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_retain();
  v8 = (void *)zalgo.getter(v7);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v8, sub_10019C7D8, v6, a4);
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_10017146C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType(result, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 200))(a1, 0, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001714D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  Swift::String v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  unint64_t v50;
  NSString v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v16 = Strong;
    v54 = v3;
    v17 = a2;
    v18 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType(Strong, v15);
    v53 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 248))(a1, ObjectType, v18);
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    sub_10002B1E8(a1, (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    type metadata accessor for MainActor(0);
    v21 = swift_retain();
    v22 = static MainActor.shared.getter(v21);
    v23 = *(unsigned __int8 *)(v8 + 80);
    v24 = (v23 + 41) & ~v23;
    v25 = swift_allocObject(&unk_1005F39B8, v24 + v9, v23 | 7);
    *(_QWORD *)(v25 + 16) = v22;
    *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v25 + 32) = v17;
    *(_BYTE *)(v25 + 40) = 1;
    sub_10001F580((uint64_t)v10, v25 + v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100148388((uint64_t)v13, (uint64_t)&unk_100649CA8, v25, (uint64_t)&unk_1005F3710, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_100649BC0);
    swift_unknownObjectRelease(v16);
    swift_release();
    return (uint64_t)v53;
  }
  else
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v27 = type metadata accessor for Logger(0);
    sub_100012DC4(v27, (uint64_t)qword_100648980);
    swift_retain_n(a2, 2);
    v28 = a3;
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.fault.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v53 = (_QWORD *)swift_slowAlloc(8, -1);
      v54 = swift_slowAlloc(32, -1);
      v55 = v54;
      *(_DWORD *)v31 = 136315394;
      v57 = a2;
      v32 = type metadata accessor for TTRIRemindersCommonPresenter(0);
      swift_retain();
      v33 = String.init<A>(describing:)(&v57, v32);
      v35 = v34;
      v57 = sub_100027E40(v33, v34, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v31 + 4, v31 + 12);
      swift_release_n(a2, 2);
      swift_bridgeObjectRelease(v35);
      *(_WORD *)(v31 + 12) = 2112;
      v57 = (uint64_t)v28;
      v36 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v31 + 14, v31 + 22);
      v37 = v53;
      *v53 = v28;

      _os_log_impl((void *)&_mh_execute_header, v29, v30, "RemindersListPresenter.delegate is nil. Cannot mark reminder as completed {presenter: %s, reminder: %@}", (uint8_t *)v31, 0x16u);
      v38 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v37, 1, v38);
      swift_slowDealloc(v37, -1, -1);
      v39 = v54;
      swift_arrayDestroy(v54, 1, &type metadata for Any[8]);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_release_n(a2, 2);
    }
    v40 = (void *)objc_opt_self(REMError);
    v55 = 0;
    v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(103);
    v41._object = (void *)0x8000000100567100;
    v41._countAndFlagsBits = 0xD000000000000056;
    String.append(_:)(v41);
    v57 = a2;
    v42 = type metadata accessor for TTRIRemindersCommonPresenter(0);
    _print_unlocked<A, B>(_:_:)(&v57, &v55, v42, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v43._countAndFlagsBits = 0x646E696D6572202CLL;
    v43._object = (void *)0xEC000000203A7265;
    String.append(_:)(v43);
    v44 = objc_msgSend(v28, "description");
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v47 = v46;

    v48._countAndFlagsBits = v45;
    v48._object = v47;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v47);
    v49._countAndFlagsBits = 125;
    v49._object = (void *)0xE100000000000000;
    String.append(_:)(v49);
    v50 = v56;
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v40, "internalErrorWithDebugDescription:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

    return swift_willThrow(v52);
  }
}

BOOL sub_1001719F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  v8 = Strong;
  if (Strong)
  {
    v9 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(Strong, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 304))(a2, a3, ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  return v8 == 0;
}

uint64_t sub_100171A60@<X0>(uint64_t (*a1)(void)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100171A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(v4 + 152);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v4 + 160);
    ObjectType = swift_getObjectType(result, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(a3, a4, 1, ObjectType, v10);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_100171B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v2 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(ObjectType, v3);
  v7 = result;
  if (result)
  {
    v8 = v6;
    v9 = swift_getObjectType(result, v6);
    LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
    swift_unknownObjectRelease(v7);
    return v8 & 1;
  }
  return result;
}

id sub_100171B88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    sub_10003E1F0(a3, a4, a5, a6, a7, a8, a9);
    return sub_10003E218(a10, a11, a12, a13, a14, a15, a16);
  }
  return result;
}

uint64_t sub_100171C50(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_100171C68(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

void sub_100171CCC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    sub_10003E2EC(a3, a4, a5, a6, a7, a8, a9);
    sub_10003E314(a10, a11, a12, a13, a14, a15, a16);
  }
}

uint64_t sub_100171D94()
{
  uint64_t v0;

  return sub_10015E2FC(*(unsigned __int8 **)(v0 + 16));
}

uint64_t sub_100171D9C(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *object;
  Swift::Bool isValid;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSString v63;
  id v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::tuple_title_String_isValid_Bool v87;

  v6 = v5;
  v79 = a5;
  v80 = a4;
  v78 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = __chkstk_darwin(v78);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v77 - v12;
  v14 = v5[5];
  ObjectType = swift_getObjectType(v5[4], v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 464))(a1, ObjectType, v14);
  v18 = swift_release();
  if (v17)
  {
    v19 = TTRInCellEditingPresenterManagingHelper.activeInCellEditingPresenter(editing:)(a1, v18);
    if (v19)
    {
      v21 = v19;
      v22 = v20;
      v23 = swift_getObjectType(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v22 + 40))(v23, v22);
    }
    else
    {
      Strong = swift_unknownObjectWeakLoadStrong(v5 + 2);
      if (!Strong)
      {
LABEL_9:
        v81 = 0;
        v82 = 0xE000000000000000;
        _StringGuts.grow(_:)(33);
        v30 = v82;
        v31 = _typeName(_:qualified:)(*v6, 0);
        v33 = v32;
        swift_bridgeObjectRelease(v30);
        v81 = v31;
        v82 = v33;
        v34._object = (void *)0x8000000100566FA0;
        v34._countAndFlagsBits = 0xD00000000000001FLL;
        String.append(_:)(v34);
        v35 = v82;
        v36 = sub_1003003A4(a1, v81, v82);
        v38 = v37;
        swift_bridgeObjectRelease(v35);
        if (v36)
        {
          v40 = swift_getObjectType(v36, v39);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 32))(&v81, v40, v38);
          v41 = v83;
          v42 = v84;
          sub_10001413C(&v81, v83);
          (*(void (**)(uint64_t, uint64_t))(v42 + 48))(v41, v42);
          if (v43)
          {
            v44 = v43;
            v87 = String.validatedReminderTitle()();
            object = v87.title._object;
            isValid = v87.isValid;
            swift_bridgeObjectRelease(v44);
            sub_100027F10(&v81);
            v47 = swift_bridgeObjectRelease(object);
            if (isValid)
              goto LABEL_19;
          }
          else
          {
            sub_100027F10(&v81);
          }
          TTRRemindersListEditingSession.effectiveParentList.getter(&v81, v40, v38, v47);
          static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)(&v81);
          v61 = v60;
          sub_1000073A0((uint64_t)&v81, &qword_100649C80);
          v62 = objc_allocWithZone((Class)NSAttributedString);
          v63 = String._bridgeToObjectiveC()();
          v64 = objc_msgSend(v62, "initWithString:", v63, swift_bridgeObjectRelease(v61).n128_f64[0]);

          TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)(v64, 0, 0, 2, 1, v40, v38);
          v66 = (_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v65);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v38 + 104))(*v66, v40, v38);
LABEL_19:
          v80(&v81, v36, v38, v47);
          swift_unknownObjectRelease(v36);
          return v81;
        }
        if (qword_10063D7C8 != -1)
          swift_once(&qword_10063D7C8, sub_1004191EC);
        v48 = type metadata accessor for Logger(0);
        sub_100012DC4(v48, (uint64_t)qword_10065C128);
        v49 = sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(12, -1);
          v53 = swift_slowAlloc(32, -1);
          v81 = v53;
          *(_DWORD *)v52 = 136315138;
          v54 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
          v55 = TTRTreeStorageItem.treeItemDescription.getter(v78, v54);
          v57 = v56;
          v85 = sub_100027E40(v55, v56, &v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v52 + 4, v52 + 12);
          swift_bridgeObjectRelease(v57);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "commitForShowingReminderDetail: failed to acquire editing session {item: %s}", v52, 0xCu);
          v58 = 1;
          swift_arrayDestroy(v53, 1, &type metadata for Any[8]);
          v59 = v53;
LABEL_25:
          swift_slowDealloc(v59, -1, -1);
          swift_slowDealloc(v52, -1, -1);

          return v58;
        }
        v75 = (uint64_t)v13;
        goto LABEL_28;
      }
      v21 = Strong;
      v28 = v6[3];
      v29 = swift_getObjectType(Strong, v27);
      (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v28 + 32))(v6, &off_100606F60, a1, v29, v28);
    }
    swift_unknownObjectRelease(v21);
    goto LABEL_9;
  }
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 248))(a1, ObjectType, v14, v18);
  if (!v24)
  {
    if (qword_10063D7C8 != -1)
      swift_once(&qword_10063D7C8, sub_1004191EC);
    v67 = type metadata accessor for Logger(0);
    sub_100012DC4(v67, (uint64_t)qword_10065C128);
    v68 = sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v50 = Logger.logObject.getter(v68);
    v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v69))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = swift_slowAlloc(32, -1);
      v81 = v70;
      *(_DWORD *)v52 = 136315138;
      v71 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v72 = TTRTreeStorageItem.treeItemDescription.getter(v78, v71);
      v74 = v73;
      v85 = sub_100027E40(v72, v73, &v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v52 + 4, v52 + 12);
      swift_bridgeObjectRelease(v74);
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v50, v69, "commitForShowingReminderDetail: failed to get REMReminder {item: %s}", v52, 0xCu);
      v58 = 1;
      swift_arrayDestroy(v70, 1, &type metadata for Any[8]);
      v59 = v70;
      goto LABEL_25;
    }
    v75 = (uint64_t)v11;
LABEL_28:
    sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

    return 1;
  }
  v25 = (void *)v24;
  a2(&v81);

  return v81;
}

uint64_t sub_100172410(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *object;
  Swift::Bool isValid;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  Swift::tuple_title_String_isValid_Bool v86;

  v6 = v5;
  v78 = a5;
  v79 = a4;
  v77 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = __chkstk_darwin(v77);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v76 - v12;
  v14 = v5[5];
  ObjectType = swift_getObjectType(v5[4], v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 464))(a1, ObjectType, v14);
  v18 = swift_release();
  if (v17)
  {
    v19 = TTRInCellEditingPresenterManagingHelper.activeInCellEditingPresenter(editing:)(a1, v18);
    if (v19)
    {
      v21 = v19;
      v22 = v20;
      v23 = swift_getObjectType(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v22 + 40))(v23, v22);
    }
    else
    {
      Strong = swift_unknownObjectWeakLoadStrong(v5 + 2);
      if (!Strong)
      {
LABEL_9:
        v80 = 0;
        v81 = 0xE000000000000000;
        _StringGuts.grow(_:)(33);
        v30 = v81;
        v31 = _typeName(_:qualified:)(*v6, 0);
        v33 = v32;
        swift_bridgeObjectRelease(v30);
        v80 = v31;
        v81 = v33;
        v34._object = (void *)0x8000000100566FA0;
        v34._countAndFlagsBits = 0xD00000000000001FLL;
        String.append(_:)(v34);
        v35 = v81;
        v36 = sub_1003003A4(a1, v80, v81);
        v38 = v37;
        swift_bridgeObjectRelease(v35);
        if (v36)
        {
          v40 = swift_getObjectType(v36, v39);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 32))(&v80, v40, v38);
          v41 = v82;
          v42 = v83;
          sub_10001413C(&v80, v82);
          (*(void (**)(uint64_t, uint64_t))(v42 + 48))(v41, v42);
          if (v43)
          {
            v44 = v43;
            v86 = String.validatedReminderTitle()();
            object = v86.title._object;
            isValid = v86.isValid;
            swift_bridgeObjectRelease(v44);
            sub_100027F10(&v80);
            v47 = swift_bridgeObjectRelease(object);
            if (isValid)
              goto LABEL_19;
          }
          else
          {
            sub_100027F10(&v80);
          }
          TTRRemindersListEditingSession.effectiveParentList.getter(&v80, v40, v38, v47);
          static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)(&v80);
          v60 = v59;
          sub_1000073A0((uint64_t)&v80, &qword_100649C80);
          v61 = objc_allocWithZone((Class)NSAttributedString);
          v62 = String._bridgeToObjectiveC()();
          v63 = objc_msgSend(v61, "initWithString:", v62, swift_bridgeObjectRelease(v60).n128_f64[0]);

          TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)(v63, 0, 0, 2, 1, v40, v38);
          v65 = (_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v64);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v38 + 104))(*v65, v40, v38);
LABEL_19:
          v79(&v80, v36, v38, v47);
          swift_unknownObjectRelease(v36);
          return v80;
        }
        if (qword_10063D7C8 != -1)
          swift_once(&qword_10063D7C8, sub_1004191EC);
        v48 = type metadata accessor for Logger(0);
        sub_100012DC4(v48, (uint64_t)qword_10065C128);
        v49 = sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(12, -1);
          v53 = swift_slowAlloc(32, -1);
          v80 = v53;
          *(_DWORD *)v52 = 136315138;
          v54 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
          v55 = TTRTreeStorageItem.treeItemDescription.getter(v77, v54);
          v57 = v56;
          v84 = sub_100027E40(v55, v56, &v80);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v52 + 4, v52 + 12);
          swift_bridgeObjectRelease(v57);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "commitForShowingReminderDetail: failed to acquire editing session {item: %s}", v52, 0xCu);
          swift_arrayDestroy(v53, 1, &type metadata for Any[8]);
          v58 = v53;
LABEL_25:
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v52, -1, -1);

          return 0;
        }
        v75 = (uint64_t)v13;
        goto LABEL_28;
      }
      v21 = Strong;
      v28 = v6[3];
      v29 = swift_getObjectType(Strong, v27);
      (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v28 + 32))(v6, &off_100606F60, a1, v29, v28);
    }
    swift_unknownObjectRelease(v21);
    goto LABEL_9;
  }
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 248))(a1, ObjectType, v14, v18);
  if (v24)
  {
    v25 = (void *)v24;
    a2(&v80);

    return v80;
  }
  if (qword_10063D7C8 != -1)
    swift_once(&qword_10063D7C8, sub_1004191EC);
  v67 = type metadata accessor for Logger(0);
  sub_100012DC4(v67, (uint64_t)qword_10065C128);
  v68 = sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v50 = Logger.logObject.getter(v68);
  v69 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v69))
  {
    v52 = (uint8_t *)swift_slowAlloc(12, -1);
    v70 = swift_slowAlloc(32, -1);
    v80 = v70;
    *(_DWORD *)v52 = 136315138;
    v71 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v72 = TTRTreeStorageItem.treeItemDescription.getter(v77, v71);
    v74 = v73;
    v84 = sub_100027E40(v72, v73, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v52 + 4, v52 + 12);
    swift_bridgeObjectRelease(v74);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v50, v69, "commitForShowingReminderDetail: failed to get REMReminder {item: %s}", v52, 0xCu);
    swift_arrayDestroy(v70, 1, &type metadata for Any[8]);
    v58 = v70;
    goto LABEL_25;
  }
  v75 = (uint64_t)v11;
LABEL_28:
  sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

  return 0;
}

uint64_t sub_100172A8C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100172AF0;
  return v6(a1);
}

uint64_t sub_100172AF0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_100172B3C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id sub_100172B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v7 = (void *)v4(v6);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100172BEC()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_100172C04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649BAC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10015CAAC(a1, v4, v5, v6);
}

uint64_t sub_100172C70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100172C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100649BBC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006083C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100649BB8 + dword_100649BB8))(a1, v4);
}

void sub_100172D04(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  sub_10002A750(&qword_100649F28);
  v2 = static _DictionaryStorage.copy(original:)(a1);
  v3 = (_QWORD *)v2;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = v2 + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = 8 * i;
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i) + 16);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v18;
    v21[1] = v17;
    *(_QWORD *)(v3[7] + v19) = v20;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    swift_bridgeObjectRetain(v17);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void *sub_100172EB4(char a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  if ((a1 & 1) != 0)
  {
    v8 = type metadata accessor for TTRIRemindersBoardPresenter();
    v9 = swift_allocObject(v8, 97, 7);
    v10 = swift_retain(a2);
    v4 = (_QWORD *)sub_100173018(v10, v9);
    v11 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIRemindersBoardMainViewController(0));
    v12 = swift_retain(v4);
    v7 = sub_10017552C(v12, v11);
    swift_release(v4);
    v4[5] = &off_1006036E0;
  }
  else
  {
    v3 = type metadata accessor for TTRIRemindersListPresenter();
    v4 = (_QWORD *)swift_allocObject(v3, 72, 7);
    v4[3] = 0;
    swift_unknownObjectWeakInit(v4 + 2, 0);
    v4[5] = 0;
    swift_unknownObjectWeakInit(v4 + 4, 0);
    v4[6] = a2;
    v4[7] = &off_1005F31B0;
    v4[8] = &off_1005F32B0;
    v5 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListContentViewController(0));
    swift_retain(a2);
    v6 = swift_retain(v4);
    v7 = sub_1001751C8(v6, v5);
    swift_release(v4);
    v4[5] = &off_1005FDF10;
  }
  swift_unknownObjectWeakAssign(v4 + 4, v7);
  return v7;
}

uint64_t sub_100173018(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  *(_QWORD *)(a2 + 24) = 0;
  swift_unknownObjectWeakInit(a2 + 16, 0);
  *(_QWORD *)(a2 + 40) = 0;
  v4 = swift_unknownObjectWeakInit(a2 + 32, 0);
  v5 = type metadata accessor for TTRRemindersBoardPresentationTreesManagementPresenterCapability(0, v4);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = TTRRemindersBoardPresentationTreesManagementPresenterCapability.init()();
  *(_QWORD *)(a2 + 72) = v6;
  v7 = type metadata accessor for TTRRemindersBoardCollapsedStatesPresenterCapability(0);
  swift_allocObject(v7, 56, 7);
  v8 = TTRRemindersBoardCollapsedStatesPresenterCapability.init()();
  *(_QWORD *)(a2 + 80) = v8;
  v9 = type metadata accessor for TTRRemindersBoardCellPresentationStatesPresenterCapability(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  *(_QWORD *)(a2 + 88) = TTRRemindersBoardCellPresentationStatesPresenterCapability.init(showsInfoButtonWhenSelected:)(0);
  *(_BYTE *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 48) = a1;
  *(_QWORD *)(a2 + 56) = &off_1005F31B0;
  *(_QWORD *)(a2 + 64) = &off_1005F32B0;
  swift_beginAccess(v6 + 16, v21, 1, 0);
  *(_QWORD *)(v6 + 24) = &off_1005EF6B8;
  swift_unknownObjectWeakAssign(v6 + 16, a2);
  v10 = swift_allocObject(&unk_1005F38F0, 24, 7);
  swift_weakInit(v10 + 16, a2);
  swift_beginAccess(v8 + 16, v20, 1, 0);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 16) = sub_10017A3E0;
  *(_QWORD *)(v8 + 24) = v10;
  sub_1000381B8(v11, v12);
  v13 = *(_QWORD *)(a2 + 88);
  v14 = swift_allocObject(&unk_1005F38F0, 24, 7);
  swift_weakInit(v14 + 16, a2);
  v15 = (uint64_t *)(v13
                  + direct field offset for TTRRemindersBoardCellPresentationStatesPresenterCapability.cellPresentationStatesDidChange);
  swift_beginAccess(v15, v19, 1, 0);
  v16 = *v15;
  v17 = v15[1];
  *v15 = (uint64_t)sub_10017A3E8;
  v15[1] = v14;
  sub_1000381B8(v16, v17);
  return a2;
}

uint64_t sub_1001731D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  __int128 v60;
  id v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  _QWORD v77[5];
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  _UNKNOWN **v81;

  v73 = a2;
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit(a3 + 16, 0);
  *(_QWORD *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit(a3 + 152, 0);
  *(_OWORD *)(a3 + 176) = xmmword_100522BB0;
  v75 = a3 + 448;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  v12 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 504) = 0;
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  v14 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  v74 = sub_10002A750((uint64_t *)&unk_100649DB0);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  *(_QWORD *)(a3 + v14) = CurrentValueSubject.init(_:)(v11);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  v16 = *(_OWORD *)(a1 + 16);
  v65 = *(_OWORD *)a1;
  v66 = v16;
  *(_OWORD *)(a3 + 72) = v65;
  *(_OWORD *)(a3 + 88) = v16;
  v67 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v67;
  sub_100028CFC(a1 + 216, (uint64_t)&v79);
  v72 = a3 + 264;
  v76 = *(_OWORD *)(a1 + 248);
  sub_100028D38(&v79, (_OWORD *)(a3 + 264));
  *(_OWORD *)(a3 + 296) = v76;
  sub_100028CFC(a1 + 264, (uint64_t)&v79);
  v18 = *(_QWORD *)(a1 + 296);
  v17 = *(_QWORD *)(a1 + 304);
  sub_100028D38(&v79, (_OWORD *)(a3 + 312));
  *(_QWORD *)(a3 + 344) = v18;
  *(_QWORD *)(a3 + 352) = v17;
  sub_100010634(a1 + 120, a3 + 192);
  v60 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v60;
  v62 = *(_OWORD *)(a1 + 368);
  *(_OWORD *)(a3 + 248) = v62;
  v19 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v20 = *(int *)(v19 + 100);
  v21 = v19;
  v71 = v19;
  *(_BYTE *)(a3 + 168) = *(_BYTE *)(a1 + v20);
  *(_QWORD *)(a3 + 160) = a5;
  swift_unknownObjectWeakAssign(a3 + 152, a2);
  v22 = *(_QWORD *)a1;
  v70 = *(_QWORD *)(a1 + 8);
  v23 = *(_QWORD *)(a1 + 32);
  v69 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  v61 = *(id *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 104);
  v68 = *(_QWORD *)(a1 + 112);
  sub_100010634(a1 + 160, (uint64_t)&v79);
  v26 = *(_QWORD *)(a1 + 200);
  v64 = *(_QWORD *)(a1 + 208);
  v27 = *(_QWORD *)(a1 + 312);
  v63 = *(_QWORD *)(a1 + 320);
  sub_100010634(a1 + 328, (uint64_t)&v78);
  sub_100010634(a1 + *(int *)(v21 + 92), (uint64_t)v77);
  v28 = type metadata accessor for TTRRemindersListPresenterCapability(0);
  v59[1] = swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  swift_unknownObjectRetain(v65);
  swift_unknownObjectRetain(v66);
  swift_unknownObjectRetain(v67);
  swift_unknownObjectRetain(v76);
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRetain(v60);
  swift_unknownObjectRetain(v62);
  swift_unknownObjectRetain(v22);
  swift_unknownObjectRetain(v23);
  swift_retain(v24);
  v29 = v61;
  swift_unknownObjectRetain(v25);
  swift_unknownObjectRetain(v26);
  v59[0] = v27;
  swift_unknownObjectRetain(v27);
  v58 = v27;
  v57 = v26;
  v30 = v26;
  v31 = v25;
  v32 = sub_1001BC280(v22, v70, v23, v69, v24, v29, v25, v68, &v79, v57, v64, v58, v63, &v78, v77);
  swift_unknownObjectRelease(v22);
  swift_unknownObjectRelease(v23);
  swift_release(v24);

  swift_unknownObjectRelease(v31);
  swift_unknownObjectRelease(v30);
  swift_unknownObjectRelease(v59[0]);
  *(_QWORD *)(a3 + 104) = v32;
  *(_BYTE *)(a3 + 112) = *(_BYTE *)(a1 + 80);
  v34 = *(_QWORD *)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 120) = v34;
  *(_QWORD *)(a3 + 128) = v33;
  v35 = v71;
  sub_100010634(a1 + *(int *)(v71 + 96), a3 + 32);
  v32[3] = &off_1005F3160;
  swift_unknownObjectWeakAssign(v32 + 2, a3);
  v36 = (void *)objc_opt_self(NSNotificationCenter);
  swift_retain(v32);
  swift_retain(v33);
  swift_retain(v34);
  v37 = objc_msgSend(v36, "defaultCenter");
  v79 = 0u;
  v80 = 0u;
  v38 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v39 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v39 + 16, a3);
  swift_retain(v39);
  v40 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(NSCurrentLocaleDidChangeNotification, &v79, v38, sub_10017EA0C, v39);

  swift_release(v39);
  sub_1000073A0((uint64_t)&v79, &qword_100640E50);
  swift_release(v39);
  v41 = *(_QWORD *)(a3 + 496);
  *(_QWORD *)(a3 + 496) = v40;
  swift_release(v41);
  v42 = a1 + *(int *)(v35 + 88);
  v43 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, &v79, 33, 0);
  sub_10017EA14(v42, v43);
  swift_endAccess(&v79);
  v44 = *(_QWORD *)(v72 + 32);
  swift_beginAccess(a3 + 32, v77, 0, 0);
  v45 = *sub_10001413C((_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 56));
  *((_QWORD *)&v80 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  v81 = &off_100608590;
  *(_QWORD *)&v79 = v45;
  v46 = *(_QWORD *)(v44 + 120);
  *(_QWORD *)(v44 + 120) = v32;
  swift_retain(v45);
  swift_release(v46);
  sub_100010634((uint64_t)&v79, (uint64_t)&v78);
  swift_retain(v32);
  sub_1004ACC24((uint64_t)&v78);
  sub_100027F10(&v79);
  *(_QWORD *)&v79 = *(_QWORD *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v47 = v79;
  v48 = swift_allocObject(&unk_1005F3738, 24, 7);
  swift_weakInit(v48 + 16, a3);
  v49 = sub_100023FEC((unint64_t *)&qword_100649DC0, (uint64_t *)&unk_100649DB0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  swift_retain(v47);
  v50 = Publisher<>.sink(receiveValue:)(sub_10017EA5C, v48, v74, v49);
  swift_release(v48);
  swift_release(v79);
  v51 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v50;
  swift_release(v51);
  v53 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v52);
  *((_QWORD *)&v80 + 1) = type metadata accessor for TTRUserDefaults(0);
  v81 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  v54 = v53;
  swift_release(v32);
  swift_unknownObjectRelease(v73);
  *(_QWORD *)&v79 = v54;
  sub_10001F544(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v55 = v75;
  swift_beginAccess(v75, &v78, 33, 0);
  sub_100041F2C((uint64_t)&v79, v55, &qword_100649DC8);
  swift_endAccess(&v78);
  return a3;
}

uint64_t sub_10017395C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _QWORD v23[9];
  char v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  _OWORD *v28;
  _QWORD *v29;
  __int16 v30;
  _QWORD v31[5];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[5];

  v20 = a3;
  v21 = a4;
  v22 = a2;
  v9 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v31[4] = &off_100605368;
  v31[0] = a5;
  v13 = (void *)TTRReminderDetailSubject.init(reminderChangeItem:)(a1);
  v15 = v14;
  *v12 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection.dueDate(_:), v9);
  v32 = 1;
  v33 = 0u;
  v34 = 0u;
  memset(v35, 0, 64);
  v23[2] = v13;
  v23[3] = v15;
  v23[4] = a6;
  v23[5] = v12;
  v23[6] = v20;
  v23[7] = v21;
  v23[8] = 1;
  v24 = 0;
  v25 = v22;
  v26 = 1;
  v27 = &v32;
  v28 = v35;
  v29 = v31;
  v30 = 0;
  swift_retain();
  v16 = a1;
  firstly<A>(closure:)(sub_10017A214, v23, &type metadata for Any[8]);
  swift_release();

  v17 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v17);
  return sub_100027F10(v31);
}

uint64_t sub_100173AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  UIPopoverArrowDirection v21;
  id v22;
  void *v23;
  void *Strong;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v33;
  _QWORD v34[6];
  _QWORD v35[3];
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[8];
  _QWORD v39[8];
  _OWORD v40[2];
  _OWORD v41[4];
  _OWORD v42[3];

  v33 = a7;
  v13 = sub_10002A750((uint64_t *)&unk_100649D60);
  __chkstk_darwin(v13);
  v15 = (char *)&v34[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v37 = &off_100605368;
  v35[0] = a6;
  type metadata accessor for TTRIHashtagEditorAssembly(0);
  v16 = type metadata accessor for TTRIHashtagEditorModuleState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_retain();
  v17 = (void *)static TTRIHashtagEditorAssembly.createViewController(style:reminderChangeItem:previousModuleState:delegate:undoManager:)(a2, 1, a1, v15, a3, a4, a5);
  v19 = v18;
  sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100649D60);
  swift_unknownObjectRelease(v19);
  v20 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
  sub_10001413C(v35, v36);
  sub_1003E3A18(v38);
  sub_10000F614((uint64_t)v38, (uint64_t)v40, &qword_100642D10);
  if ((~BYTE8(v41[0]) & 0xFE) != 0)
  {
    v41[2] = v40[0];
    v41[3] = v40[1];
    v42[0] = v41[0];
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v41 + 9);
    v21 = UIPopoverArrowDirection.addingRTLFallback()();
    TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)(v39, v21);
    UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v39);
    sub_10008C9D8((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866C4);
  }
  v22 = objc_msgSend(v20, "presentationController", v33);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "setDelegate:", v17);

  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v33 + 16);
  if (Strong)
  {
    v25 = Strong;
    v26 = objc_msgSend(Strong, "presentedViewController");
    if (v26)
    {
      v27 = v26;
      v28 = swift_allocObject(&unk_1005F3EE0, 33, 7);
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v20;
      *(_BYTE *)(v28 + 32) = 1;
      v34[4] = sub_10019C898;
      v34[5] = v28;
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 1107296256;
      v34[2] = sub_100006378;
      v34[3] = &unk_1005F3EF8;
      v29 = _Block_copy(v34);
      v30 = v25;
      v31 = v20;
      objc_msgSend(v27, "dismissViewControllerAnimated:completion:", 1, v29, swift_release().n128_f64[0]);

      _Block_release(v29);
      v25 = v27;
    }
    else
    {
      objc_msgSend(v25, "presentViewController:animated:completion:", v20, 1, 0);
    }

  }
  sub_10017C154((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);

  return sub_100027F10(v35);
}

id sub_100173DFC(uint64_t a1, _BYTE *a2)
{
  objc_class *ObjectType;
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_nameTextView] = 0;
  v5 = &a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  swift_unknownObjectWeakInit(&a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_ttriAccessibilityViewToFocusWhenEditingEnds], 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousTextColor] = 0;
  v6 = &a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousText];
  *v6 = 0;
  v6[1] = 0;
  a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_needsLayoutEmptyTextView] = 0;
  v7 = &a2[OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_presenter];
  *v7 = a1;
  v7[1] = &off_100606B40;
  v9.receiver = a2;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "init");
}

id sub_100173EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE *v27;
  uint64_t v28;
  id v29;
  void (*v30)(uint64_t, _UNKNOWN **);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v35 = a6;
  v36 = a5;
  v37 = a2;
  v12 = a8 & 1;
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRIRemindersListEditableSectionNameRouter();
  v17 = swift_allocObject(v16, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, 0);
  sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v18 = type metadata accessor for TTRRemindersListEditableSectionNameEditingPresenter(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_unknownObjectRetain(a3);
  swift_retain();
  v19 = TTRRemindersListEditableSectionNameEditingPresenter.init(item:interactor:presenterManager:)(v15, a7, &protocol witness table for TTRRemindersListEditableSectionNameInteractor, a3, a4);
  v38[3] = v16;
  v38[4] = &off_100605168;
  v38[0] = v17;
  v20 = type metadata accessor for TTRIRemindersListEditableSectionNamePresenter(0);
  v21 = (_QWORD *)swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v22 = sub_100028D48((uint64_t)v38, v16);
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  v26 = sub_10017416C(a7, *v24, v19, v12, v21);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100027F10(v38);
  v27 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListEditableSectionNameViewController());
  v28 = swift_retain();
  v29 = sub_100173DFC(v28, v27);
  v30 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)a7 + 120);
  v31 = swift_retain();
  v30(v31, &off_100606B08);
  v26[3] = &off_1005F5D18;
  swift_unknownObjectWeakAssign(v26 + 2, v29);
  v32 = v36;
  v26[7] = v35;
  swift_unknownObjectWeakAssign(v26 + 6, v32);
  swift_unknownObjectWeakAssign(v17 + 16, v37);
  swift_release();
  v33 = v19 + direct field offset for TTRRemindersListEditableSectionNameEditingPresenter.delegate;
  swift_beginAccess(v19 + direct field offset for TTRRemindersListEditableSectionNameEditingPresenter.delegate, v38, 1, 0);
  *(_QWORD *)(v33 + 8) = &off_100606A90;
  swift_unknownObjectWeakAssign(v33, v26);
  swift_release();
  return v29;
}

_QWORD *sub_10017416C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  char v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v9 = a4 & 1;
  v10 = (_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_router);
  v10[3] = type metadata accessor for TTRIRemindersListEditableSectionNameRouter();
  v10[4] = &off_100605168;
  *v10 = a2;
  a5[3] = 0;
  swift_unknownObjectWeakInit(a5 + 2, 0);
  a5[5] = 0;
  swift_unknownObjectWeakInit(a5 + 4, 0);
  a5[7] = 0;
  swift_unknownObjectWeakInit(a5 + 6, 0);
  v11 = (char *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  v12 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_currentText) = 0;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) = 2;
  v13 = (_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_interactor);
  *v13 = a1;
  v13[1] = &protocol witness table for TTRRemindersListEditableSectionNameInteractor;
  v14 = (_QWORD *)((char *)a5
                 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter);
  *v14 = a3;
  v14[1] = &protocol witness table for TTRRemindersListEditableSectionNameEditingPresenter;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_listLayout) = v9;
  return a5;
}

uint64_t sub_100174290(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _QWORD v25[9];
  char v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  _OWORD *v30;
  _QWORD *v31;
  __int16 v32;
  _QWORD v33[5];
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[5];

  v22 = a5;
  v24 = a3;
  v23 = a2;
  v11 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[3] = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v33[4] = &off_100605368;
  v33[0] = a6;
  v15 = (void *)TTRReminderDetailSubject.init(reminderChangeItem:)(a1);
  v17 = v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection.assignments(_:), v11);
  v34 = 1;
  v35 = 0u;
  v36 = 0u;
  memset(v37, 0, 64);
  v25[2] = v15;
  v25[3] = v17;
  v25[4] = a7;
  v25[5] = v14;
  v25[6] = a4;
  v25[7] = v22;
  v25[8] = 3;
  v26 = 2;
  v27 = v23;
  v28 = v24;
  v29 = &v34;
  v30 = v37;
  v31 = v33;
  v32 = 1;
  swift_retain();
  v18 = a1;
  firstly<A>(closure:)(sub_10017A214, v25, &type metadata for Any[8]);
  swift_release();

  v19 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v19);
  return sub_100027F10(v33);
}

uint64_t sub_100174420(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  UIPopoverArrowDirection v23;
  id v24;
  _QWORD v26[5];
  _QWORD v27[8];
  _QWORD v28[8];
  _OWORD v29[2];
  _BYTE v30[25];
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];

  v12 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
  v26[3] = v12;
  v26[4] = &off_100605368;
  v26[0] = a5;
  v13 = a6 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a6 + 16);
  swift_retain();
  if (Strong
    && (v15 = objc_msgSend(Strong, "navigationController"), Strong,
                                                                                                v15)
    || (v15 = (id)swift_unknownObjectWeakLoadStrong(v13)) != 0)
  {
    v16 = (void *)static TTRIReminderLocationPickerAssembly.createViewController(reminderChangeItem:showsDoneButton:savesOnCommit:delegate:undoManager:)(a1, 1, a2 & 1, a3, a4, 0);
    v18 = v17;
    v20 = v19;
    v21 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v16);
    sub_10001413C(v26, v12);
    sub_1003E3A18(v27);
    sub_10000F614((uint64_t)v27, (uint64_t)v29, &qword_100642D10);
    if ((~v30[8] & 0xFE) != 0)
    {
      v31 = v29[0];
      v32 = v29[1];
      v33[0] = *(_OWORD *)v30;
      *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&v30[9];
      v23 = UIPopoverArrowDirection.addingRTLFallback()();
      TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)(v28, v23);
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(v28);
      sub_10008C9D8((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866C4);
    }
    swift_getObjectType(v18, v22);
    v24 = objc_msgSend(v21, "presentationController");
    (*(void (**)(void))(v20 + 16))();

    objc_msgSend(v15, "presentViewController:animated:completion:", v21, 1, 0);
    sub_10017C154((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866B0);

    swift_unknownObjectRelease(v18);
  }
  return sub_100027F10(v26);
}

uint64_t sub_10017463C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1001746A4;
  return v5(v2 + 32);
}

uint64_t sub_1001746A4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1001746F4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 32) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 40) = v3;
  *v3 = v2;
  v3[1] = sub_10017475C;
  return v5(v2 + 16);
}

uint64_t sub_10017475C()
{
  uint64_t *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_OWORD **)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  *v2 = *(_OWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

_QWORD *sub_1001747AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  _QWORD v25[14];
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v27 = a2;
  v28 = a3;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v25[4] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10064A050);
  v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v25[5] = (char *)v25 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    v25[12] = v7;
    v25[13] = v10;
    v25[3] = v3;
    v30 = _swiftEmptyArrayStorage;
    sub_1003D7E90(0, v12, 0);
    v14 = 0;
    v13 = v30;
    v29 = a1 + 32;
    v15 = v12;
    v26 = v12;
    do
    {
      v16 = (uint64_t *)(v29 + 16 * v14);
      v17 = *v16;
      v18 = *((unsigned __int8 *)v16 + 8);
      if (v18 >= 2)
        __asm { BR              X8 }
      v30 = v13;
      v20 = v13[2];
      v19 = v13[3];
      if (v20 >= v19 >> 1)
      {
        v22 = v18;
        v23 = v17;
        sub_1003D7E90(v19 > 1, v20 + 1, 1);
        v17 = v23;
        LOBYTE(v18) = v22;
        v15 = v26;
        v13 = v30;
      }
      ++v14;
      v13[2] = v20 + 1;
      v21 = &v13[2 * v20];
      v21[4] = v17;
      *((_BYTE *)v21 + 40) = v18;
      *((_BYTE *)v21 + 41) = 1;
      *((_BYTE *)v21 + 42) = 0;
    }
    while (v14 != v15);
  }
  return v13;
}

_QWORD *sub_100174E00(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v8 = *(v6 - 2);
      v7 = *(v6 - 1);
      v9 = *v6;
      v6 += 3;
      swift_bridgeObjectRetain(v9);
      v10 = a2(v8, v7, v9);
      v11 = swift_bridgeObjectRelease(v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100174EE0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v25;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a3);
    v21 = a3;
    v6 = (_QWORD *)(a3 + 64);
    do
    {
      v10 = (void *)*(v6 - 4);
      v9 = *(v6 - 3);
      v11 = *(v6 - 2);
      v25 = *(v6 - 1);
      v12 = *v6;
      swift_bridgeObjectRetain(*v6);
      v13 = v10;
      swift_bridgeObjectRetain(v11);
      v14 = sub_10037BB08((uint64_t)v10, a4);

      v15 = v13;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      if ((v14 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(a2) & 1) == 0)
          a2 = sub_1004568FC(0, a2[2] + 1, 1, a2);
        v17 = a2[2];
        v16 = a2[3];
        v18 = v17 + 1;
        if (v17 >= v16 >> 1)
          a2 = sub_1004568FC((_QWORD *)(v16 > 1), v17 + 1, 1, a2);
        v7 = a2;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
          a1 = sub_1004568FC(0, a1[2] + 1, 1, a1);
        v17 = a1[2];
        v19 = a1[3];
        v18 = v17 + 1;
        if (v17 >= v19 >> 1)
          a1 = sub_1004568FC((_QWORD *)(v19 > 1), v17 + 1, 1, a1);
        v7 = a1;
      }
      v7[2] = v18;
      v8 = &v7[5 * v17];
      v8[4] = v10;
      v8[5] = v9;
      v8[6] = v11;
      v6 += 5;
      v8[7] = v25;
      v8[8] = v12;
      swift_bridgeObjectRelease(v11);

      swift_bridgeObjectRelease(v12);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v21);
  }
  return a1;
}

uint64_t sub_1001750BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
  v6 = objc_msgSend(v5, "enableAutoCompleteReminders");

  if (v6)
  {
    sub_10000735C(a1, (uint64_t)v4, (uint64_t *)&unk_100640EB0);
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7) != 1)
    {
      v8 = TTRRemindersListViewModel.Item.isEligibleForAutoCompleteReminder.getter();
      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v8 & 1;
    }
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
  }
  v8 = 0;
  return v8 & 1;
}

char *sub_1001751C8(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  objc_super v34;
  _WORD v35[12];

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  v5 = &a2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  v6 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_preferredChromelessBarStates;
  v35[0] = 0;
  v7 = sub_10002A750((uint64_t *)&unk_1006549B0);
  swift_allocObject(v7, 32, 7);
  v8 = a2;
  *(_QWORD *)&a2[v6] = TTRObservableViewModel.init(value:)(v35);
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController] = 0;
  v9 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_itemStateTracker;
  v10 = type metadata accessor for TTRRemindersListItemStateTracker(0);
  swift_allocObject(v10, 24, 7);
  *(_QWORD *)&v8[v9] = TTRRemindersListItemStateTracker.init()();
  v11 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker;
  v12 = type metadata accessor for TTRIRemindersListPencilAutoCommitTracker();
  v13 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_QWORD *)&v8[v11] = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView] = 0;
  v14 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides;
  v15 = type metadata accessor for TTRIRemindersListTemporaryItemSet();
  v16 = swift_allocObject(v15, 32, 7);
  *(_QWORD *)(v16 + 24) = &_swiftEmptySetSingleton;
  v17 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v18 = static OS_dispatch_queue.main.getter(v17);
  v19 = type metadata accessor for TTRDeferredAction(0);
  swift_allocObject(v19, 56, 7);
  v20 = TTRDeferredAction.init(queue:)(v18);
  *(_QWORD *)(v16 + 16) = v20;
  swift_beginAccess(v20 + 16, v35, 1, 0);
  *(_QWORD *)(v20 + 24) = &off_1006006D0;
  swift_unknownObjectWeakAssign(v20 + 16, v16);
  *(_QWORD *)&v8[v14] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController] = 0;
  v21 = &v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem];
  v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 0;
  v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically] = 0;
  v23(&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore], 1, 1, v22);
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor] = 0;
  v24 = &v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
  *(_QWORD *)v24 = a1;
  *((_QWORD *)v24 + 1) = &off_100600A50;
  swift_unknownObjectRetain(a1);
  v26 = static OS_dispatch_queue.main.getter(v25);
  v27 = type metadata accessor for TTRIDebouncedHoverAction();
  v28 = (_QWORD *)swift_allocObject(v27, 64, 7);
  v28[3] = 0;
  swift_unknownObjectWeakInit(v28 + 2, 0);
  v29 = sub_10002A750(&qword_10063D8D0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v28[6] = PassthroughSubject.init()();
  v28[7] = 0;
  v28[4] = v26;
  v28[5] = 0x3FF8000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction] = v28;

  v34.receiver = v8;
  v34.super_class = ObjectType;
  v30 = (char *)objc_msgSendSuper2(&v34, "initWithNibName:bundle:", 0, 0);
  v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction];
  swift_beginAccess(v31 + 16, &v33, 1, 0);
  *(_QWORD *)(v31 + 24) = &off_1005FDEB8;
  swift_unknownObjectWeakAssign(v31 + 16, v30);
  return v30;
}

id sub_10017552C(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_super v21;
  __int16 v22;

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  v5 = &a2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_initialFrameForLoadingView];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  v6 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_preferredChromelessBarStates;
  v22 = 0;
  v7 = sub_10002A750((uint64_t *)&unk_1006549B0);
  swift_allocObject(v7, 32, 7);
  v8 = a2;
  *(_QWORD *)&a2[v6] = TTRObservableViewModel.init(value:)(&v22);
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource] = 0;
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_eventPublishers];
  v10 = sub_10002A750(&qword_100646F70);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = PassthroughSubject.init()();
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = PassthroughSubject.init()();
  *v9 = v11;
  v9[1] = v12;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_observableScrollViewInsets] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_rootViewDragInteractionHandler] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController] = 0;
  v13 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemStateTracker;
  v14 = type metadata accessor for TTRRemindersListItemStateTracker(0);
  swift_allocObject(v14, 24, 7);
  *(_QWORD *)&v8[v13] = TTRRemindersListItemStateTracker.init()();
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_focusController] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_scrollToTopCancellable] = 0;
  v15 = &v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedHeaderViewState];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState];
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  *(_QWORD *)v16 = 0;
  v17 = &v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo];
  v18 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = &v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = &off_1005EF260;
  swift_unknownObjectRetain(a1);

  v21.receiver = v8;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, "initWithNibName:bundle:", 0, 0);
}

_QWORD *sub_1001757C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v34 = a3;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - v10;
  result = _swiftEmptyArrayStorage;
  v38 = (unint64_t)_swiftEmptyArrayStorage;
  v36 = *(_QWORD *)(a1 + 16);
  if (v36)
  {
    v31[1] = v3;
    v13 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
    v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v35 = a1 + v14;
    v37 = *(_QWORD *)(a2 + 16);
    v15 = *(_QWORD *)(v13 + 72);
    v33 = a2 + v14;
    v31[0] = a1;
    swift_bridgeObjectRetain(a1);
    v17 = 0;
    v32 = a2;
    do
    {
      v18 = v35 + v15 * v17;
      if (v37)
      {
        swift_bridgeObjectRetain(a2);
        v20 = v33;
        v21 = v37;
        do
        {
          v22 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
          v23 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v11, v8);
          sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v19 = sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          if ((v23 & 1) != 0)
          {
            a2 = v32;
            swift_bridgeObjectRelease(v32);
            goto LABEL_4;
          }
          v20 += v15;
          --v21;
        }
        while (v21);
        a2 = v32;
        swift_bridgeObjectRelease(v32);
      }
      v24 = *(_QWORD *)(v34 + 64);
      ObjectType = swift_getObjectType(*(_QWORD *)(v34 + 56), v16);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 248))(v18, ObjectType, v24);
      if (v26)
      {
        v27 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v29 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v28 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v29 >= v28 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
        specialized Array._endMutation()(v30);
      }
LABEL_4:
      ++v17;
    }
    while (v17 != v36);
    swift_bridgeObjectRelease(v31[0]);
    return (_QWORD *)v38;
  }
  return result;
}

_QWORD *sub_1001759F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  _QWORD *v19;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v25 = a7;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  swift_bridgeObjectRetain(a1);
  v15 = _swiftEmptyArrayStorage;
  do
  {
    sub_1001B70E4(v13, a2, a3, a5, a6, v25, &v24);
    if (v7)
    {
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(a1);
      return v15;
    }
    if ((_QWORD)v24)
    {
      v23 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
        v15 = sub_100456044(0, v15[2] + 1, 1, v15);
      v17 = v15[2];
      v16 = v15[3];
      v18 = v23;
      if (v17 >= v16 >> 1)
      {
        v19 = sub_100456044((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
        v18 = v23;
        v15 = v19;
      }
      v15[2] = v17 + 1;
      *(_OWORD *)&v15[2 * v17 + 4] = v18;
    }
    v13 += v14;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease(a1);
  return v15;
}

_QWORD *sub_100175B78(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(id, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v32 = (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v27 = (uint64_t)&v25 - v12;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v13; v13 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v25 = v3;
    v31 = a1 & 0xC000000000000001;
    v3 = a2[17];
    v15 = a2[18];
    ObjectType = swift_getObjectType(v3, v14);
    a2 = _swiftEmptyArrayStorage;
    v30 = v15;
    v28 = *(void (**)(id, uint64_t, uint64_t))(v15 + 232);
    v16 = 4;
    v26 = a1;
    while (1)
    {
      v17 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a1) : *(id *)(a1 + 8 * v16);
      v18 = v17;
      v19 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
        break;
      v28(v17, ObjectType, v30);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v33) == 1)
      {
        sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
      }
      else
      {
        v20 = v27;
        sub_10001F580((uint64_t)v8, v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F580(v20, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(a2) & 1) == 0)
          a2 = (_QWORD *)sub_100454EEC(0, a2[2] + 1, 1, (unint64_t)a2);
        v22 = a2[2];
        v21 = a2[3];
        if (v22 >= v21 >> 1)
          a2 = (_QWORD *)sub_100454EEC(v21 > 1, v22 + 1, 1, (unint64_t)a2);
        a2[2] = v22 + 1;
        sub_10001F580(v32, (uint64_t)a2+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        a1 = v26;
      }
      ++v16;
      if (v19 == v13)
      {
        swift_bridgeObjectRelease(a1);
        return a2;
      }
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100175E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t, __n128);
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  void *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void (*v75)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v76;
  _QWORD *v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v72 = a5;
  v79 = a4;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v86 = (uint64_t)&v67 - v13;
  __chkstk_darwin(v14);
  v82 = (uint64_t)&v67 - v15;
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v16);
  v71 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v80 = (uint64_t)&v67 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v67 - v21;
  v23 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v23);
  v70 = (uint64_t)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v85 = (uint64_t)&v67 - v26;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v68 = a1;
    v69 = v11;
    v74 = v5;
    v28 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v84 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain(a1);
    v76 = v22;
    v77 = _swiftEmptyArrayStorage;
    v88 = v8;
    v87 = v9;
    v81 = a2;
    while (1)
    {
      swift_retain();
      TTRMutableTreeStorage.parent(of:)(v28);
      v32 = swift_release();
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48);
      if (v33(v22, 1, v8, v32) == 1)
        break;
      v34 = v82;
      sub_10002B1E8((uint64_t)v22, v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v35 = swift_getEnumCaseMultiPayload(v34, v8) == 1;
      v30 = v85;
      if (v35)
      {
        sub_10001F580(v34, v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v36 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v30, 0, 1, v36);
      }
      else
      {
        sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v36 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v30, 1, 1, v36);
      }
      sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v83 = *(_QWORD *)(v36 - 8);
      v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
      if (v37(v30, 1, v36) == 1)
        goto LABEL_4;
      v78 = v37;
      sub_1000073A0(v30, (uint64_t *)&unk_100649B50);
      v38 = v86;
      sub_10002B1E8(v28, v86, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v39 = v80;
      sub_10002B1E8(v38, v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v75 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56);
      v75(v39, 0, 1, v88);
      swift_retain();
      v40 = TTRMutableTreeStorage.numberOfChildren(of:)(v39);
      swift_release();
      sub_1000073A0(v39, (uint64_t *)&unk_100640EB0);
      sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v40 > 0)
      {
        v42 = *(_QWORD *)(v79 + 64);
        ObjectType = swift_getObjectType(*(_QWORD *)(v79 + 56), v41);
        v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 248))(v28, ObjectType, v42);
        if (v44)
        {
          v73 = v44;
          swift_retain();
          v45 = (uint64_t)v71;
          TTRMutableTreeStorage.parent(of:)(v28);
          v46 = swift_release();
          v47 = v88;
          v48 = v33((char *)v45, 1, v88, v46);
          v22 = v76;
          if (v48 == 1)
          {
            sub_1000073A0(v45, (uint64_t *)&unk_100640EB0);
            v49 = v70;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v70, 1, 1, v36);
            goto LABEL_20;
          }
          v50 = (uint64_t)v69;
          sub_10002B1E8(v45, (uint64_t)v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v50, v47) == 1)
          {
            v51 = v50;
            v49 = v70;
            sub_10001F580(v51, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            v52 = 0;
          }
          else
          {
            sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v52 = 1;
            v49 = v70;
          }
          v53 = v78;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v49, v52, 1, v36);
          sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v53(v49, 1, v36) == 1)
          {
LABEL_20:
            sub_1000073A0(v49, (uint64_t *)&unk_100649B50);
            v54 = _swiftEmptyArrayStorage;
            v8 = v88;
          }
          else
          {
            sub_1000073A0(v49, (uint64_t *)&unk_100649B50);
            v55 = v80;
            sub_10002B1E8(v28, v80, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v8 = v88;
            v75(v55, 0, 1, v88);
            swift_retain();
            v54 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v55);
            swift_release();
            sub_1000073A0(v55, (uint64_t *)&unk_100640EB0);
          }
          v9 = v87;
          v56 = v72;
          swift_bridgeObjectRetain(v72);
          v57 = v79;
          swift_retain();
          v58 = v74;
          v59 = (uint64_t)sub_1001757C8((uint64_t)v54, v56, v57);
          v74 = v58;
          swift_bridgeObjectRelease(v54);
          swift_bridgeObjectRelease(v56);
          swift_release();
          if ((unint64_t)v59 >> 62)
          {
            if (v59 < 0)
              v65 = v59;
            else
              v65 = v59 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v59);
            v60 = _CocoaArrayWrapper.endIndex.getter(v65);
            swift_bridgeObjectRelease(v59);
          }
          else
          {
            v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v60)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) != 0)
              v61 = v77;
            else
              v61 = sub_100456A1C(0, v77[2] + 1, 1, v77);
            v63 = v61[2];
            v62 = v61[3];
            if (v63 >= v62 >> 1)
              v61 = sub_100456A1C((_QWORD *)(v62 > 1), v63 + 1, 1, v61);
            v61[2] = v63 + 1;
            v77 = v61;
            v64 = &v61[2 * v63];
            v64[4] = v73;
            v64[5] = v59;
          }
          else
          {
            swift_bridgeObjectRelease(v59);

          }
          goto LABEL_5;
        }
      }
      v8 = v88;
      v9 = v87;
      v22 = v76;
LABEL_5:
      v28 += v84;
      if (!--v27)
      {
        swift_bridgeObjectRelease(v68);
        return v77;
      }
    }
    sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100640EB0);
    v29 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    v30 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v85, 1, 1, v29);
LABEL_4:
    sub_1000073A0(v30, (uint64_t *)&unk_100649B50);
    v31 = v86;
    sub_10002B1E8(v28, v86, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v8 = v88;
    v9 = v87;
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10017658C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[7];
  char v41;
  _QWORD v42[7];
  char v43;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1003505B4((uint64_t)_swiftEmptyArrayStorage);
    v13 = v12;
    v14 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v14 + 16, v2);
    v15 = (uint64_t)sub_100439948(0x10000, v13, (uint64_t)sub_10017C38C, v14);
    swift_release();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
    v38 = v2;
    v39 = v7;
    if (Strong)
    {
      v18 = Strong;
      v19 = *(_QWORD *)(v2 + 24);
      ObjectType = swift_getObjectType(Strong, v17);
      (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t))(v19 + 224))(v40, v7, ObjectType, v19);
      v21 = (void *)v40[0];
      v22 = v40[1];
      v23 = v40[2];
      v24 = v40[3];
      v25 = v40[4];
      v26 = v40[5];
      v27 = v40[6];
      v28 = v41;
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v27 = 0;
      v28 = 0;
      v26 = 254;
    }
    v36 = v25;
    v37 = v27;
    v42[0] = v21;
    v42[1] = v22;
    v42[2] = v23;
    v42[3] = v24;
    v42[4] = v25;
    v42[5] = v26;
    v42[6] = v27;
    v43 = v28;
    v29 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v30 = *(unsigned __int8 *)(v5 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = swift_allocObject(v29, v31 + *(_QWORD *)(v5 + 72), v30 | 7);
    *(_OWORD *)(v32 + 16) = xmmword_100520250;
    v33 = (uint64_t)v39;
    sub_10002B1E8((uint64_t)v39, v32 + v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = sub_100155414(v32, 0, 1, (uint64_t)v42);
    swift_bridgeObjectRelease(v32);
    sub_1000866B0(v21, v22, v23, v24, v36, v26);
    sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v15;
}

void sub_10017681C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  uint64_t v9;
  id v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t i;
  uint64_t v18;
  void *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[10];
  _QWORD *v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = 0;
    v31 = a1 + 32;
    v37 = a2 + 56;
    v5 = _swiftEmptyArrayStorage;
    v30 = *(_QWORD *)(a1 + 16);
    do
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v32 = v5;
      v33 = v6;
      while (1)
      {
        if (v4 == v33)
        {
          __break(1u);
          return;
        }
        v7 = (__int128 *)(v31 + 40 * v4);
        v8 = v7[1];
        v9 = *((_QWORD *)v7 + 4);
        ++v4;
        v35 = v8;
        v36 = *v7;
        if (!*(_QWORD *)(a2 + 16))
          break;
        Hasher.init(_seed:)(v38, *(_QWORD *)(a2 + 40));
        v34 = v9;
        swift_bridgeObjectRetain(v9);
        v10 = (id)v36;
        swift_bridgeObjectRetain(v35);
        TTRSectionID.hash(into:)(v38, v36);
        v11 = Hasher._finalize()();
        v12 = -1 << *(_BYTE *)(a2 + 32);
        v13 = v11 & ~v12;
        if (((*(_QWORD *)(v37 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        {

LABEL_17:
          v9 = v34;
          goto LABEL_18;
        }
        v14 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
        v15 = v14;
        LOBYTE(v14) = static TTRSectionID.__derived_enum_equals(_:_:)(v14, v36);

        if ((v14 & 1) == 0)
        {
          v16 = ~v12;
          for (i = v13 + 1; ; i = v18 + 1)
          {
            v18 = i & v16;
            if (((*(_QWORD *)(v37 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0)
              break;
            v19 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v18);
            v20 = v19;
            LOBYTE(v19) = static TTRSectionID.__derived_enum_equals(_:_:)(v19, v36);

            if ((v19 & 1) != 0)
              goto LABEL_7;
          }

          v2 = v30;
          v5 = v32;
          goto LABEL_17;
        }
LABEL_7:

        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v35);
        v2 = v30;
        v5 = v32;
        if (v4 == v30)
          return;
      }
      v27 = *(void **)v7;
      v28 = v8;
      swift_bridgeObjectRetain(v9);
      v29 = v27;
      swift_bridgeObjectRetain(v28);
LABEL_18:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      v39 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1003D7E74(0, v5[2] + 1, 1);
        v5 = v39;
      }
      v23 = v35;
      v22 = v36;
      v25 = v5[2];
      v24 = v5[3];
      if (v25 >= v24 >> 1)
      {
        sub_1003D7E74(v24 > 1, v25 + 1, 1);
        v23 = v35;
        v22 = v36;
        v5 = v39;
      }
      v5[2] = v25 + 1;
      v26 = &v5[5 * v25];
      *((_OWORD *)v26 + 2) = v22;
      *((_OWORD *)v26 + 3) = v23;
      v26[8] = v9;
    }
    while (v4 != v2);
  }
}

_QWORD *sub_100176ABC(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  unsigned int v17;

  LOBYTE(v3) = a3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      v17 = v3 & 1;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v3 = v9;
        v10 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_15;
        v11 = objc_msgSend(v9, "list");
        v12 = objc_msgSend(v11, "objectID");

        v13 = (void *)TTRListOrCustomSmartList.objectID.getter(a2, v17);
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        LOBYTE(v11) = static NSObject.== infix(_:_:)(v12, v13);

        if ((v11 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v7 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v3);
          specialized ContiguousArray._endMutation()(v8);
        }
        ++v6;
        if (v10 == v5)
          return _swiftEmptyArrayStorage;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v9 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100176C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  v14 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  static DispatchTime.now()();
  + infix(_:_:)(v10, 1.0);
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  aBlock[4] = sub_10017A3F0;
  v27 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005F3908;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10002A750((uint64_t *)&unk_100640F40);
  v20 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v1, v18);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v6, v3, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
}

void sub_100176F10()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  NSString v7;
  NSString v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  id v20;
  void *Strong;
  void *v22;
  _QWORD v23[6];

  v1._countAndFlagsBits = 0xD00000000000004FLL;
  v1._object = (void *)0x8000000100566FF0;
  v2._countAndFlagsBits = 0x7561666544206F4ELL;
  v2._object = (void *)0xEF7473694C20746CLL;
  object = TTRLocalizedString(_:comment:)(v2, v1)._object;
  v4._countAndFlagsBits = 0xD000000000000051;
  v5._object = (void *)0x8000000100567040;
  v4._object = (void *)0x8000000100567080;
  v5._countAndFlagsBits = 0xD000000000000037;
  v6 = TTRLocalizedString(_:comment:)(v5, v4)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v9 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v7, v8, 1);

  static TTRLocalizableStrings.Common.alertCancelButton.getter(v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v14 = (void *)objc_opt_self(UIAlertAction);
  v15 = objc_msgSend(v14, "actionWithTitle:style:handler:", v13, 1, 0);

  static TTRLocalizableStrings.Common.settingsButton.getter(objc_msgSend(v9, "addAction:", v15));
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v23[4] = sub_10008E1FC;
  v23[5] = 0;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000D4884;
  v23[3] = &unk_1005F3930;
  v19 = _Block_copy(v23);
  v20 = objc_msgSend(v14, "actionWithTitle:style:handler:", v18, 0, v19, swift_release().n128_f64[0]);
  _Block_release(v19);

  objc_msgSend(v9, "addAction:", v20);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 88) + 16);
  if (Strong)
  {
    v22 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v9, 1, 0);

    v15 = v20;
    v20 = v22;
  }

}

uint64_t sub_10017717C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double (*v29)(void *);
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  double (*v39)(void *);
  uint64_t v40;
  char *v41;
  _QWORD v42[7];
  char v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(void (*)(_QWORD *), uint64_t);
  uint64_t v49;
  double (*v50)(void *);
  uint64_t v51;
  double (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *v54)(Swift::OpaquePointer);
  uint64_t v55;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    v12 = sub_1003506AC((uint64_t)_swiftEmptyArrayStorage);
    v13 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v13 + 16, v2);
    v14 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v14 + 16, v2);
    v15 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v15 + 16, v2);
    v45 = 1;
    LOBYTE(v46) = 3;
    v47 = v12;
    v48 = sub_10017C2FC;
    LOBYTE(v44) = 0;
    v49 = v13;
    v50 = sub_10017C324;
    v51 = v14;
    v52 = sub_10017C32C;
    v53 = v15;
    v54 = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
    v55 = 0;
    sub_100439D8C((uint64_t)&v44);
    v17 = v16;
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
    v41 = v7;
    v40 = v2;
    if (Strong)
    {
      v20 = Strong;
      v21 = *(_QWORD *)(v2 + 24);
      ObjectType = swift_getObjectType(Strong, v19);
      (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t))(v21 + 224))(v42, v7, ObjectType, v21);
      v23 = (void *)v42[0];
      v24 = v42[1];
      v25 = v42[2];
      v26 = v42[3];
      v27 = v42[4];
      v28 = v42[5];
      v29 = (double (*)(void *))v42[6];
      v30 = v43;
      swift_unknownObjectRelease(v20);
    }
    else
    {
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v29 = 0;
      v30 = 0;
      v28 = 254;
    }
    v38 = v27;
    v39 = v29;
    v44 = v23;
    v45 = v24;
    v46 = v25;
    v47 = v26;
    v48 = (void (*)(void (*)(_QWORD *), uint64_t))v27;
    v49 = v28;
    v50 = v29;
    LOBYTE(v51) = v30;
    v31 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v32 = *(unsigned __int8 *)(v5 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = swift_allocObject(v31, v33 + *(_QWORD *)(v5 + 72), v32 | 7);
    *(_OWORD *)(v34 + 16) = xmmword_100520250;
    v35 = (uint64_t)v41;
    sub_10002B1E8((uint64_t)v41, v34 + v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 = sub_100156620(v34, 0, (uint64_t)&v44);
    swift_bridgeObjectRelease(v34);
    sub_1000866B0(v23, v24, v25, v26, v38, v28);
    sub_10001F544(v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v17;
}

Class sub_1001774B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t *__return_ptr, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v10, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    v13 = *(_QWORD *)(v2 + 144);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 136), v12);
    v15 = *(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 336);
    swift_retain();
    v15(&v24, 0, sub_10017C388, v2, ObjectType, v13);
    swift_release();
    v16 = v25;
    swift_release();
    __asm { BR              X9 }
  }
  sub_10001F580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v17, v19 + *(_QWORD *)(v5 + 72), v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v7, v20 + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v21 = sub_1001563E4(v20, 0);
  swift_bridgeObjectRelease(v20);
  sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v21;
}

uint64_t sub_100177800()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;

  v0 = sub_10021DD18();
  v1 = v0[2];
  swift_bridgeObjectRelease(v0);
  if (!v1)
    return 0;
  v2 = sub_10021DD18();
  v3 = v2[2];
  swift_bridgeObjectRelease(v2);
  if (v3 == 1)
  {
    v4 = sub_10021DD18();
    v5 = v4;
    if (v4[2])
    {
      v6 = (void *)v4[4];
      v7 = v4[6];
      v8 = v4[8];
      swift_bridgeObjectRetain(v8);
      v9 = v6;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v5);
      v10 = static TTRSectionID.__derived_enum_equals(_:_:)(v6, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v7);

      if ((v10 & 1) != 0)
        return 0;
    }
    else
    {
      swift_bridgeObjectRelease(v4);
    }
  }
  return 1;
}

void sub_1001778C8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  char v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unsigned int EnumCaseMultiPayload;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t inited;
  id v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  char v60;
  void *v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  unsigned int (**v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  _QWORD *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __n128 v170;
  _QWORD *v171;
  _QWORD *v172;
  __n128 v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  _QWORD *v178;
  __int128 v179;
  void *v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  BOOL v187;
  uint8_t *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  unsigned int (**v215)(uint64_t, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _OWORD v222[2];
  char *v223;
  unsigned __int8 v224;
  uint64_t v225;
  unsigned __int8 v226;
  id v227[17];
  char v228[40];
  _QWORD v229[5];
  _QWORD v230[5];
  _QWORD v231[6];

  v5 = v4;
  v202 = a3;
  v203 = a4;
  v201 = a2;
  v220 = a1;
  v6 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v213 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v212 = (char *)&v189 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v8);
  v206 = (char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_10002A750(&qword_100649C00);
  v205 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v204 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100649C08);
  v209 = *(_QWORD *)(v11 - 8);
  v210 = v11;
  __chkstk_darwin(v11);
  v208 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType(0);
  v198 = *(_QWORD *)(v13 - 8);
  v199 = (void *)v13;
  __chkstk_darwin(v13);
  v200 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v191);
  v192 = (uint64_t)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v196 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  *(_QWORD *)&v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v193 = (uint64_t)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  __chkstk_darwin(v17);
  v194 = (char *)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v19);
  v214 = (char *)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v215 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v21 - 8);
  v216 = v21;
  __chkstk_darwin(v21);
  v197 = (uint64_t)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v23);
  v221 = (uint64_t)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v4[17];
  v25 = v4[18];
  ObjectType = swift_getObjectType(v26, v27);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 96);
  v218 = ObjectType;
  v30 = v29(ObjectType, v25);
  v211 = v6;
  v219 = v25;
  if (!v30)
  {
    v44 = 0;
LABEL_14:
    v43 = v220;
    goto LABEL_15;
  }
  v31 = v30;
  Strong = swift_unknownObjectWeakLoadStrong(v30 + 56);
  if (!Strong)
  {
    v30 = swift_unknownObjectRelease(v31);
    v44 = 0;
    goto LABEL_14;
  }
  v34 = Strong;
  v217 = v26;
  v35 = v5;
  v36 = *(_QWORD *)(v31 + 64);
  v37 = swift_getObjectType(Strong, v33);
  v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v220, v37, v36);
  v40 = v39;
  v41 = ~v39;
  swift_unknownObjectRelease(v34);
  if (!v41)
  {
    v30 = swift_unknownObjectRelease(v31);
LABEL_13:
    v44 = 0;
    v5 = v35;
    v25 = v219;
    v26 = v217;
    goto LABEL_14;
  }
  v42 = sub_100177800();
  swift_unknownObjectRelease(v31);
  if ((v42 & 1) == 0)
  {
    sub_1000760F4(v38, v40);
    goto LABEL_13;
  }
  v5 = v35;
  v43 = v220;
  if (v40)
  {
    v25 = v219;
    if (v40 == 1)
    {
      sub_1000760F4(v38, 1);
      v44 = 0;
    }
    else
    {
      sub_1000760F4(v38, 2);
      v44 = 1;
    }
    v26 = v217;
  }
  else
  {
    sub_1000760F4(v38, 0);
    v44 = 1;
    v25 = v219;
    v26 = v217;
  }
LABEL_15:
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v30);
  v45 = v221;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v221, v23);
  if (EnumCaseMultiPayload < 2)
  {
    v47 = sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    if (v44)
    {
      v48 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v47);
      if (v48)
      {
        v217 = v26;
        v49 = v29(v218, v25);
        if (!v49)
        {

          v48 = 0;
          v80 = 0;
          v83 = 0;
          v84 = 0;
          v82 = 1;
          v26 = v217;
          goto LABEL_41;
        }
        v50 = v49;
        v190 = v5;
        v51 = sub_10002A750((uint64_t *)&unk_1006415A0);
        inited = swift_initStackObject(v51, v228);
        *(_OWORD *)(inited + 16) = xmmword_100521140;
        *(_QWORD *)(inited + 32) = v48;
        v227[0] = (id)inited;
        specialized Array._endMutation()(inited);
        v53 = v227[0];
        v54 = v48;
        v55 = sub_100017684((uint64_t)v53);
        swift_bridgeObjectRelease(v53);
        v56 = (_QWORD *)sub_1003504B4((uint64_t)_swiftEmptyArrayStorage);
        swift_unknownObjectRetain(v50);
        v57 = sub_1001BB050(v56, v55);
        swift_bridgeObjectRelease(v55);
        swift_unknownObjectRelease(v50);
        if (*(_QWORD *)(v57 + 16))
        {
          v58 = v54;
          v59 = sub_1002AA364((uint64_t)v58);
          if ((v60 & 1) != 0)
          {
            v61 = *(void **)(*(_QWORD *)(v57 + 56) + 8 * v59);
            v62 = v61;

            v63 = swift_bridgeObjectRelease(v57);
            if (v61)
            {
              v64 = swift_unknownObjectWeakLoadStrong(v50 + 56);
              if (v64)
              {
                v66 = v64;
                v67 = *(_QWORD *)(v50 + 64);
                v68 = swift_getObjectType(v64, v65);
                v69 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 16);
                v70 = v62;
                v71 = v69(v68, v67);
                swift_unknownObjectRelease(v66);
                v72 = v70;
                v73 = TTRSection.init(with:store:)(v72, v71);
                if ((_BYTE)v74 != 0xFF)
                {
                  v75 = (void *)v73;
                  v76 = v74;
                  v77 = TTRSection.sectionID.getter();
                  v78 = TTRSection.displayName.getter(v75, v76);
                  v80 = v79;

                  v48 = (void *)v78;
                  v81 = v75;
                  v82 = v77;
                  sub_1000760F4(v81, v76);
                  swift_unknownObjectRelease(v50);

                  v83 = 0;
                  v84 = 0;
                  v5 = v190;
                  v26 = v217;
                  v43 = v220;
                  goto LABEL_41;
                }
              }
              else
              {
                v182 = v62;
              }
              if (qword_10063D400 != -1)
                swift_once(&qword_10063D400, sub_10015A89C);
              v183 = type metadata accessor for Logger(0);
              v184 = sub_100012DC4(v183, (uint64_t)qword_100648980);
              v185 = Logger.logObject.getter(v184);
              v186 = static os_log_type_t.error.getter();
              v187 = os_log_type_enabled(v185, v186);
              v43 = v220;
              if (v187)
              {
                v188 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v188 = 0;
                _os_log_impl((void *)&_mh_execute_header, v185, v186, "Reminder list failed to fetch section in sectionsContext", v188, 2u);
                swift_slowDealloc(v188, -1, -1);
              }
              swift_unknownObjectRelease(v50);

              v48 = 0;
              v80 = 0;
              v83 = 0;
              v84 = 0;
              v82 = 1;
              v5 = v190;
              v26 = v217;
              goto LABEL_41;
            }
LABEL_40:
            v100 = v200;
            (*(void (**)(char *, _QWORD, void *, __n128))(v198 + 104))(v200, enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:), v199, v63);
            TTRSectionLite.init(sectionType:)(v230, v100);
            v82 = v230[0];
            v48 = (void *)v230[1];
            v101 = v230[2];
            v83 = v230[3];
            v102 = v43;
            v103 = v230[4];
            swift_unknownObjectRelease(v50);

            v26 = v217;
            v80 = v101;
            v84 = v103;
            v43 = v102;
            v5 = v190;
            goto LABEL_41;
          }

        }
        v63 = swift_bridgeObjectRelease(v57);
        goto LABEL_40;
      }
    }
    else
    {
      v48 = 0;
    }
    v80 = 0;
    v83 = 0;
    v84 = 0;
    v82 = 1;
    goto LABEL_41;
  }
  if (EnumCaseMultiPayload != 2)
    return;
  if (v44)
  {
    v85 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 192);
    swift_retain();
    v86 = swift_unknownObjectRetain(v26);
    v87 = v85(v218, v25, v86);
    swift_release();
    swift_unknownObjectRelease(v26);
    v88 = *(void **)(v87 + 24);
    v89 = *(_QWORD *)(v87 + 32);
    swift_unknownObjectRetain(v88);
    swift_unknownObjectRelease(v87);
    v91 = swift_getObjectType(v88, v90);
    v227[0] = v88;
    v92 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v89 + 8) + 48);
    v93 = (uint64_t)v214;
    v92(v43, v91);
    swift_unknownObjectRelease(v88);
    if (v215[6](v93, 1, v216) == 1)
    {
      sub_1000073A0(v93, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      v94 = v197;
      v95 = sub_10001F580(v93, v197, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v96 = (uint64_t)v194;
      TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v95);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v195 + 48))(v96, 1, v196) != 1)
      {
        v97 = v193;
        sub_10001F580(v96, v193, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v98 = v192;
        sub_10002B1E8(v97, v192, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v99 = (char *)&loc_100178074 + dword_100178A0C[swift_getEnumCaseMultiPayload(v98, v191)];
        __asm { BR              X10 }
      }
      sub_10001F544(v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  v48 = 0;
  v80 = 0;
  v83 = 0;
  v84 = 0;
  v82 = 1;
  sub_10001F544(v221, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_41:
  v231[0] = v82;
  v231[1] = v48;
  v231[2] = v80;
  v231[3] = v83;
  v231[4] = v84;
  v104 = v5;
  v105 = v5[29];
  v106 = v43;
  v107 = v43;
  v108 = v84;
  v109 = sub_100172410(v107, (void (*)(uint64_t *__return_ptr))sub_10017A034, v105, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))sub_10041C1CC, 0);
  if (v110 == (void *)1)
  {
    v112 = (void *)v82;
    v113 = (uint64_t)v48;
    v114 = v80;
    v115 = v83;
    v116 = v84;
  }
  else
  {
    v117 = v110;
    v220 = v108;
    v221 = v83;
    if ((v109 & 1) != 0)
    {
      sub_10017A1E8(v110, v111);
    }
    else if (v110)
    {
      v214 = (char *)v111;
      v118 = sub_10002A750((uint64_t *)&unk_1006469C0);
      v199 = v48;
      v200 = (char *)v82;
      v119 = v215;
      v120 = *((unsigned __int8 *)v215 + 80);
      v121 = (v120 + 32) & ~v120;
      v122 = swift_allocObject(v118, (char *)v215[9] + v121, v120 | 7);
      v217 = v26;
      v123 = v122;
      v124 = v122 + v121;
      sub_10002B1E8(v106, v122 + v121, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v222, v201, 0, 1, v125);
      v195 = v222[1];
      v196 = v222[0];
      v193 = v224;
      v194 = v223;
      v201 = v80;
      v126 = v225;
      LODWORD(v192) = v226;
      v127 = *(_QWORD *)((char *)v104
                       + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
      v198 = type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider(0);
      v128 = swift_allocObject(v198, *(unsigned int *)(v198 + 48), *(unsigned __int16 *)(v198 + 52));
      v129 = v128 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
      sub_10002B1E8(v124, v128 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v130 = v129;
      v131 = v216;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v119[7])(v130, 0, 1, v216);
      v197 = v128;
      v132 = v128 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor;
      v133 = v195;
      *(_OWORD *)v132 = v196;
      *(_OWORD *)(v132 + 16) = v133;
      v134 = v193;
      *(_QWORD *)(v132 + 32) = v194;
      *(_QWORD *)(v132 + 40) = v134;
      *(_QWORD *)(v132 + 48) = v126;
      *(_BYTE *)(v132 + 56) = v192;
      *(_QWORD *)(v128
                + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion) = v127;
      swift_setDeallocating(v123);
      swift_retain();
      swift_arrayDestroy(v124, 1, v131);
      swift_deallocClassInstance(v123, 32, 7);
      v135 = type metadata accessor for ReminderDetailModuleDelegate();
      v136 = swift_allocObject(v135, 40, 7);
      v137 = swift_weakInit(v136 + 16, 0);
      *(_QWORD *)(v136 + 24) = 0;
      *(_QWORD *)(v136 + 32) = 0;
      swift_weakAssign(v137, v104);
      v138 = *(_QWORD *)(v136 + 24);
      v139 = *(_QWORD *)(v136 + 32);
      v140 = v202;
      v141 = (uint64_t)v203;
      *(_QWORD *)(v136 + 24) = v202;
      *(_QWORD *)(v136 + 32) = v141;
      sub_100053DE4(v140, v141);
      sub_1000381B8(v138, v139);
      v203 = v104 + 45;
      v142 = v104[45];
      v104[45] = v136;
      v104[46] = &off_1005F2F80;
      swift_unknownObjectRelease(v142);
      v227[0] = v117;
      v143 = sub_10002A750(&qword_100649C10);
      swift_allocObject(v143, *(unsigned int *)(v143 + 48), *(unsigned __int16 *)(v143 + 52));
      v215 = v117;
      v216 = CurrentValueSubject.init(_:)(v227);
      v144 = swift_retain();
      *(_QWORD *)&v196 = TTRReminderDetailSubject.init(reminderChangeItemSubject:)(v144);
      v202 = v145;
      v190 = v104;
      v146 = (char *)v104[9];
      *(_QWORD *)&v195 = v104[10];
      v147 = v195;
      v227[0] = v214;
      v148 = swift_allocObject(&unk_1005F3800, 32, 7);
      v194 = v146;
      *(_QWORD *)(v148 + 16) = v146;
      *(_QWORD *)(v148 + 24) = v147;
      swift_unknownObjectRetain(v146);
      v150 = static Subscribers.Demand.unlimited.getter(v149);
      v151 = sub_10002A750(&qword_100649C18);
      v152 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v153 = sub_10002A750(&qword_100649C28);
      v154 = sub_100023FEC(&qword_100649C30, &qword_100649C18, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v155 = sub_100023FEC((unint64_t *)&unk_100649C38, &qword_100649C28, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v156 = v204;
      Publisher.flatMap<A, B>(maxPublishers:_:)(v150, sub_10017A09C, v148, v151, v152, v153, v154, v155);
      swift_release();
      v227[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v157 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      v158 = (uint64_t)v206;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v206, 1, 1, v157);
      v159 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
      v160 = sub_100023FEC((unint64_t *)&unk_100649C48, &qword_100649C00, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
      v161 = sub_100017608((unint64_t *)&qword_100642DA0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
      v162 = v207;
      v163 = v208;
      Publisher.receive<A>(on:options:)(v227, v158, v207, v159, v160, v161);
      sub_1000073A0(v158, &qword_1006547E0);

      (*(void (**)(char *, uint64_t))(v205 + 8))(v156, v162);
      v164 = (_QWORD *)swift_allocObject(&unk_1005F3828, 40, 7);
      v166 = v194;
      v165 = v195;
      v164[2] = v194;
      v164[3] = v165;
      v164[4] = v216;
      v167 = sub_100023FEC(&qword_100649C58, &qword_100649C08, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      swift_retain();
      swift_unknownObjectRetain(v166);
      v168 = v210;
      v169 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, sub_10017A0BC, v164, v210, v167);
      v170 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v209 + 8))(v163, v168, v170);
      v171 = v190;
      v190[61] = v169;
      v172 = v171;
      v173 = swift_release();
      v174 = v172[11];
      v176 = v212;
      v175 = v213;
      v177 = v211;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v213 + 104))(v212, enum case for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection.none(_:), v211, v173);
      v178 = (*(_QWORD *(**)(id *__return_ptr, uint64_t))(v219 + 632))(v227, v218);
      v229[3] = v198;
      v229[4] = &off_100605368;
      v229[0] = v197;
      *(double *)&v179 = __chkstk_darwin(v178);
      v180 = (void *)v196;
      *(&v189 - 10) = v174;
      *(&v189 - 9) = (uint64_t)v180;
      *(&v189 - 8) = v202;
      *(&v189 - 7) = (uint64_t)v176;
      *((_OWORD *)&v189 - 3) = v179;
      *(&v189 - 4) = (uint64_t)v229;
      *(&v189 - 3) = (uint64_t)v231;
      v181 = v179;
      *(&v189 - 2) = (uint64_t)v227;
      swift_unknownObjectRetain(v179);
      swift_retain();
      firstly<A>(closure:)(sub_10017A0C8, &v189 - 12, &type metadata for Any[8]);
      sub_100027F10(v229);
      swift_unknownObjectRelease(v181);
      sub_10017A154((uint64_t)v227);
      swift_release();

      swift_release();
      swift_release();

      swift_release();
      sub_10017A03C(v200, (uint64_t)v199, v201, v221, v220);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v176, v177);
      swift_release();
      return;
    }
    v112 = (void *)v82;
    v113 = (uint64_t)v48;
    v114 = v80;
    v116 = v220;
    v115 = v221;
  }
  sub_10017A03C(v112, v113, v114, v115, v116);
}

void sub_100178A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  _BYTE v17[80];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v17);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v13 = TTRTreeStorageItem.treeItemDescription.getter(v11, v12);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v14;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Show Reminder Details {item: %@}", 47, 2, v15);
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v16);
  sub_1001778C8(a1, a2, 0, 0);
}

void sub_100178BD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  _BYTE v21[80];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v12 = sub_100012DC4(v8, (uint64_t)qword_100648980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v21);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v16 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v17 = TTRTreeStorageItem.treeItemDescription.getter(v15, v16);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Show Reminder Details (Swipe Action) {item: %@}", 62, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
  sub_1001778C8(a1, a2, a3, a4);
}

double sub_100178D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double result;
  __int128 v28;
  uint64_t v29;
  _BYTE v30[80];
  _OWORD v31[2];
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v29 = a4;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v30);
  v28 = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v16 = TTRTreeStorageItem.treeItemDescription.getter(v14, v15);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List Show Due Date Picker (swipe action) {item: %@}", 61, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v19);
  v20 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v21 = *(_QWORD *)(v14 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject(v20, v24 + v22, v23 | 7);
  *(_OWORD *)(v25 + 16) = v28;
  sub_10002B1E8(a1, v25 + v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v31, a2, 0, 1, v26);
  v36[0] = v31[0];
  v36[1] = v31[1];
  v37 = v32;
  v38 = v33;
  v39 = v34;
  v40 = v35;
  sub_100153844(v25, (uint64_t)v36, a3, v29);
  sub_10008C9D8((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866C4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  return result;
}

uint64_t sub_100178FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  sub_10000735C(a2, (uint64_t)v11, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
    v22 = 1;
  }
  else
  {
    v23 = sub_10001F580((uint64_t)v11, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v24 = v29;
    v25 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v23);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
    v26 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v8, v5);
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10002B1E8(v24, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((v26 & 1) != 0)
      v22 = static TTRRemindersListViewModel.Item.itemTypesEqual(_:_:)(v18, v15) ^ 1;
    else
      v22 = 1;
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v22 & 1;
}

void sub_100179238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[4];
  int v23;
  uint64_t v24;
  _BOOL4 v25;
  int v26;
  uint64_t v27;

  v7 = sub_10002A750((uint64_t *)&unk_100649BE0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = sub_1001AB5E0(a1);
  if (v10)
  {
    v12 = v10;
    v23 = v11 & 0x100;
    v25 = v23 == 0;
    v26 = v11 & 1;
    v27 = v3[11];
    v24 = a3;
    v13 = v3[10];
    ObjectType = swift_getObjectType(v3[9], v11);
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(ObjectType, v13);
    v16 = swift_allocObject(&unk_1005F3738, 24, 7);
    swift_weakInit(v16 + 16, v3);
    sub_10000735C(a2, (uint64_t)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&unk_100649BE0);
    v17 = *(unsigned __int8 *)(v8 + 80);
    v18 = (v17 + 40) & ~v17;
    v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_1005F3760, v19 + 8, v17 | 7);
    *(_QWORD *)(v20 + 16) = v16;
    *(_BYTE *)(v20 + 24) = BYTE1(v23);
    *(_QWORD *)(v20 + 32) = a1;
    sub_10000F614((uint64_t)&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v20 + v18, (uint64_t *)&unk_100649BE0);
    *(_QWORD *)(v20 + v19) = v12;
    swift_retain();
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v12);
    sub_10009F408(v21, v26, v25, (uint64_t)v15, v24, (uint64_t)sub_100179FD4, v20);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v12);

  }
}

uint64_t sub_1001793F8(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unsigned __int8 v30;
  BOOL v31;
  uint64_t v32;
  unsigned __int8 v33;
  void *v34;
  char v35;
  _BYTE *v36;
  objc_super *v37;
  char v38;
  char *v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD v58[5];
  _QWORD v59[2];

  v2 = type metadata accessor for UTType(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  v3 = __chkstk_darwin(v2);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, "items", v3);
  v6 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
    goto LABEL_27;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (!v8)
  {
LABEL_31:
    v42 = 0;
    goto LABEL_32;
  }
LABEL_3:
  v9 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
  v52 = v7 & 0xC000000000000001;
  v10 = 4;
  v50 = 0x8000000100566E70;
  v51 = 0x8000000100566E40;
  v49 = v7;
  while (1)
  {
    v11 = v10 - 4;
    if (v52)
    {
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7);
      v13 = v10 - 3;
      if (__OFADD__(v11, 1))
        goto LABEL_26;
    }
    else
    {
      v12 = *(id *)(v7 + 8 * v10);
      v13 = v10 - 3;
      if (__OFADD__(v11, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        if (v7 < 0)
          v43 = v7;
        else
          v43 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v8 = _CocoaArrayWrapper.endIndex.getter(v43);
        if (!v8)
          goto LABEL_31;
        goto LABEL_3;
      }
    }
    v53 = v13;
    v56 = 0xD000000000000029;
    v57 = v51;
    v14 = v12;
    AnyHashable.init<A>(_:)(v58, &v56, &type metadata for String, &protocol witness table for String);
    UIDragItem.localObject<A>(ofType:forKey:)(v59, v9, v58, v9);
    sub_100041DDC((uint64_t)v58);
    v15 = (void *)v59[0];
    if (v59[0])
    {
      v34 = *(void **)(v59[0] + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder);
      v35 = *(_BYTE *)(v59[0] + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
      v36 = objc_allocWithZone(v9);
      v36[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
      *(_QWORD *)&v36[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v34;
      v36[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v35;
      v54 = v36;
      v37 = (objc_super *)&v54;
LABEL_24:
      v37->super_class = v9;
      v41 = v34;

      v42 = 1;
      goto LABEL_32;
    }
    v16 = v8;

    v17 = (objc_class *)type metadata accessor for TTRIRemindersListDragSection();
    v56 = 0xD000000000000027;
    v57 = v50;
    v18 = v14;
    AnyHashable.init<A>(_:)(v58, &v56, &type metadata for String, &protocol witness table for String);
    UIDragItem.localObject<A>(ofType:forKey:)(v59, v17, v58, v17);
    sub_100041DDC((uint64_t)v58);
    v15 = (void *)v59[0];
    if (v59[0])
    {
      v34 = *(void **)(v59[0] + OBJC_IVAR____TtC9Reminders28TTRIRemindersListDragSection_section);
      v38 = *(_BYTE *)(v59[0] + OBJC_IVAR____TtC9Reminders28TTRIRemindersListDragSection_section + 8);
      v39 = (char *)objc_allocWithZone(v17);
      v40 = &v39[OBJC_IVAR____TtC9Reminders28TTRIRemindersListDragSection_section];
      *(_QWORD *)v40 = v34;
      v40[8] = v38;
      v55 = v39;
      v37 = (objc_super *)&v55;
      v9 = v17;
      v7 = v49;
      goto LABEL_24;
    }

    v19 = objc_msgSend(v18, "itemProvider");
    v20 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    if ((objc_msgSend(v19, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v20)) & 1) != 0)
      goto LABEL_15;
    v21 = v46;
    v22 = static UTType.image.getter();
    UTType.identifier.getter(v22);
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
    v25 = String._bridgeToObjectiveC()();
    LOBYTE(v24) = objc_msgSend(v19, "hasItemConformingToTypeIdentifier:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

    if ((v24 & 1) != 0
      || (v26 = sub_100005ED8(0, &qword_100649BC8, NSURL_ptr),
          (objc_msgSend(v19, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v26)) & 1) != 0)
      || (v27 = sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr),
          (objc_msgSend(v19, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v27)) & 1) != 0))
    {
LABEL_15:

    }
    else
    {
      v32 = sub_100005ED8(0, (unint64_t *)&qword_100649BD8, NSString_ptr);
      v33 = objc_msgSend(v19, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v32));

      if ((v33 & 1) == 0)
      {

        goto LABEL_17;
      }
    }
    v28 = objc_msgSend(v18, "itemProvider");
    v29 = type metadata accessor for TTRIAccountsListsDragItem(0);
    v30 = objc_msgSend(v28, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v29));

    if ((v30 & 1) == 0)
      break;
LABEL_17:
    ++v10;
    v8 = v16;
    v31 = v53 == v16;
    v7 = v49;
    if (v31)
      goto LABEL_31;
  }
  v42 = 1;
  v7 = v49;
LABEL_32:
  swift_bridgeObjectRelease_n(v7, 2);
  return v42;
}

void sub_10017990C(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Date(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1001799B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100648980);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.fault.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v1 - 72) = v7;
    *(_DWORD *)v6 = 136315138;
    *(_BYTE *)(v1 - 80) = v0;
    v8 = String.init<A>(describing:)(v1 - 80, &type metadata for TTRRemindersListPostponeType);
    v10 = v9;
    *(_QWORD *)(v1 - 80) = sub_100027E40(v8, v9, (uint64_t *)(v1 - 72));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 80, v1 - 72, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Trying to get keyCommandTitle for unsupported postponeType %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  return 0;
}

uint64_t *sub_100179C5C(uint64_t *a1)
{
  sub_100179C8C(a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_100179C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)(a2 - 1) >= 3)
    return sub_100179CA0(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_100179CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_100179CD0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIListDetailEditFiltersCellStateAdaptor.State(a2, a1);
  return a2;
}

uint64_t sub_100179D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  _OWORD v29[2];
  _BYTE v30[80];
  _OWORD v31[2];
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v4 = sub_10002A750((uint64_t *)&unk_100649BE0);
  __chkstk_darwin(v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D400 != -1)
    swift_once(&qword_10063D400, sub_10015A89C);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100648980);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v30);
  v29[0] = xmmword_100520250;
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  *(_QWORD *)(inited + 72) = v14;
  v15 = sub_100028D70((_QWORD *)(inited + 48));
  sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminder list move items to Any List {items: %@}", 48, 2, v16);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v17);
  v18 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v19 = *(_QWORD *)(v14 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = *(unsigned __int8 *)(v19 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v18, v22 + v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = v29[0];
  sub_10002B1E8(a1, v23 + v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v24 = enum case for REMRDLUserOperationDetail.rdl_swipeToMoveAndRecover(_:);
  v25 = type metadata accessor for REMRDLUserOperationDetail(0);
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v6, v24, v25);
  v27.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v6, 0, 1, v25);
  static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v31, a2, 0, 1, v27);
  v36[0] = v31[0];
  v36[1] = v31[1];
  v37 = v32;
  v38 = v33;
  v39 = v34;
  v40 = v35;
  sub_100179238(v23, (uint64_t)v6, (uint64_t)v36);
  sub_10008C9D8((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000866C4);
  swift_bridgeObjectRelease(v23);
  return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100649BE0);
}

uint64_t sub_100179FD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10017A014()
{
  uint64_t v0;

  return sub_100161370(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_10017A024()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017A034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10041C114(a1, v2, a2);
}

void *sub_10017A03C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result != (void *)1)
  {

    swift_bridgeObjectRelease(a3);
    return (void *)swift_bridgeObjectRelease(a5);
  }
  return result;
}

uint64_t sub_10017A078()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10017A09C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_10015F770(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10017A0A4()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

void sub_10017A0BC(uint64_t *a1)
{
  uint64_t v1;

  sub_10015F7F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10017A0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int16 v14;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 64);
  v5[1] = *(_OWORD *)(v0 + 24);
  v6 = v1;
  v7 = v2;
  v8 = *(_OWORD *)(v0 + 48);
  v9 = 0;
  v10 = 258;
  v11 = 1;
  v12 = *(_OWORD *)(v0 + 72);
  v13 = v3;
  v14 = 256;
  return firstly<A>(closure:)(sub_10017A214, v5, &type metadata for Any[8]);
}

uint64_t sub_10017A154(uint64_t a1)
{
  sub_10017A18C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return a1;
}

void sub_10017A18C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a2);

    swift_bridgeObjectRelease(a8);
  }
}

void *sub_10017A1E8(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_release(a2);
  }
  return result;
}

uint64_t sub_10017A214()
{
  return sub_10017E9A0();
}

uint64_t sub_10017A228()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_10017A230()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10017A258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10017A2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(0)
                                      - 8)
                          + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = v0 + ((v1 + 32) & ~v1);
  ObjectType = swift_getObjectType(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v3 + 96))(v4, 1, &type metadata for Any[8], &type metadata for Any[8], ObjectType, v3);
}

uint64_t sub_10017A344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = v1 + ((v4 + 41) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_100649C8C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006083C;
  return sub_10015AA4C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_10017A3E0()
{
  uint64_t v0;

  return sub_1000A2CE8(v0);
}

uint64_t sub_10017A3E8()
{
  uint64_t v0;

  return sub_1000A2CF4(v0);
}

void sub_10017A3F0()
{
  sub_100166F48();
}

uint64_t sub_10017A3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a1);
  if (!v4)
    return 0;
LABEL_3:
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  for (i = 0; ; ++i)
  {
    v6 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1)
       : (char *)*(id *)(a1 + 8 * i + 32);
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)(*(_QWORD *)&v6[direct field offset for TTRIQuickLookImageAttachmentPreviewItem.attachmentID], a2);

    if ((v8 & 1) != 0)
      break;
    v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v9 == v4)
      return 0;
  }
  return i;
}

uint64_t sub_10017A528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v2 + 96);
  swift_beginAccess(v3 + 40, v15, 0, 0);
  v5 = *(_QWORD *)(v3 + 40);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 48);
    ObjectType = swift_getObjectType(v5, v4);
    v8 = *(void (**)(uint64_t, uint64_t, __n128))(v6 + 24);
    v9 = swift_unknownObjectRetain(v5);
    v8(ObjectType, v6, v9);
    swift_unknownObjectRelease(v5);
  }
  sub_10041C214(v2);
  v11 = *(_QWORD *)(v1 + 136);
  v10 = *(_QWORD *)(v1 + 144);
  v13 = swift_getObjectType(v11, v12);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v10 + 688))(0, v13, v10);
}

Class sub_10017A5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *preferredElementSize;
  Swift::String v11;
  Class isa;
  Swift::OpaquePointer v14;
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  char v19;
  unint64_t v20;
  UIImage_optional v21;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1368))();
  v2 = v1;
  v20 = (unint64_t)_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
  {
    swift_retain();
    preferredElementSize = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  v4 = v1 + 32;
  swift_retain();
  do
  {
    sub_10017C4F0(v4, (uint64_t)v17);
    if ((v19 & 1) != 0)
    {
      v15[0] = v17[0];
      v15[1] = v17[1];
      v16 = v18;
      v6 = (*(uint64_t (**)(_OWORD *))(*(_QWORD *)v0 + 1376))(v15);
      v7 = sub_100041DDC((uint64_t)v15);
      if (!v6)
        goto LABEL_4;
    }
    else
    {
      sub_100153FA8(v17[0]);
      v6 = v7;
      if (!v7)
        goto LABEL_4;
    }
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
    specialized Array._endMutation()(v5);
LABEL_4:
    v4 += 48;
    --v3;
  }
  while (v3);
  preferredElementSize = (_QWORD *)v20;
LABEL_13:
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v21.value.super.isa = 0;
  v21.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v14).super.super.isa;
  swift_bridgeObjectRelease(v2);
  swift_release();
  return isa;
}

void sub_10017A770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[80];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)(*(uint64_t (**)(double))(*(_QWORD *)v0 + 1424))(v4);
  if (v7)
  {
    v17 = v7;
    v8 = objc_msgSend(v7, "capabilities");
    v9 = objc_msgSend(v8, "supportsTemplates");

    if (v9)
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v10 = sub_100012DC4(v2, (uint64_t)qword_100648980);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v10, v2);
      v11 = sub_10002A750((uint64_t *)&unk_100640F20);
      inited = swift_initStackObject(v11, v18);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      *(_QWORD *)(inited + 32) = 0x49746E756F636361;
      *(_QWORD *)(inited + 40) = 0xE900000000000044;
      v13 = objc_msgSend(v17, "objectID");
      *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      *(_QWORD *)(inited + 48) = v13;
      v14 = sub_10002D32C(inited);
      sub_1000143B4((uint64_t)"Reminders List show templates list {accountID: %@}", 50, 2, v14);
      v15 = swift_bridgeObjectRelease(v14);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v15);
      sub_1000A0014(v17, v1, (uint64_t)&off_1005F2FC8);

    }
    else
    {

    }
  }
}

void *sub_10017A964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  char v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "objectID");
      v9 = static NSObject.== infix(_:_:)(v8, a2);

      if ((v9 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void *sub_10017AABC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType(Strong, v2);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  if (v6)
  {
    v7 = objc_msgSend(v6, "primaryLanguage");

    if (v7)
    {
      v6 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

      return v6;
    }
    return 0;
  }
  return v6;
}

uint64_t sub_10017AB64()
{
  return sub_100181D2C(sub_100166EDC);
}

uint64_t sub_10017AB70()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];
  char v4;

  v3[1] = *(_OWORD *)(v0 + 16);
  v4 = 0;
  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return firstly<A>(closure:)(sub_10017AF98, v3, v1);
}

uint64_t sub_10017ABB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001714D4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10017ABD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 41) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

_QWORD *sub_10017AF98()
{
  uint64_t v0;

  return sub_10015E91C(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10017AFB4()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 40);
}

BOOL sub_10017AFC8()
{
  uint64_t *v0;

  return sub_1001719F0(v0[2], v0[3], v0[4]);
}

uint64_t sub_10017AFD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10017B010(uint64_t a1)
{
  uint64_t v1;

  return sub_10017146C(a1, v1);
}

uint64_t sub_10017B02C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10017B054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10017B0C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_100170D04(a1, (v1 + v5), *(_QWORD **)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)), v3);
}

uint64_t sub_10017B134()
{
  return sub_10017EB90(40);
}

uint64_t sub_10017B13C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10017138C(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_10017B158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015EE30(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

NSString sub_10017B174()
{
  uint64_t v0;

  return sub_10015F56C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(NSString *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_10017B194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10015EFF0(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_10017B1AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  a1[3] = type metadata accessor for TTRIRemindersCommonPresenter(0);
  a1[4] = &off_1005F31C8;
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_10017B1E8(uint64_t a1)
{
  return sub_10017B320(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t))sub_100170B44);
}

uint64_t sub_10017B204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015F30C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_10017B220(uint64_t a1)
{
  uint64_t v1;

  return sub_100170704(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_10017B23C(uint64_t a1)
{
  return sub_10017B320(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t))sub_100170964);
}

uint64_t sub_10017B258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015F14C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_10017B278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10017B304(uint64_t a1)
{
  return sub_10017B320(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t))sub_100170784);
}

uint64_t sub_10017B320(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(a1, v2 + v7, *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFF8)), v5);
}

uint64_t sub_10017B39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_10017B430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001701A4(a1, v1 + v5, *(_QWORD *)(v1 + v6), *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), v3);
}

uint64_t sub_10017B4B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_release(a2);
  return result;
}

void sub_10017B4C4()
{
  uint64_t v0;

  sub_100167528(v0);
}

uint64_t sub_10017B4CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017B4F0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10017B524()
{
  uint64_t v0;

  sub_10009F228(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10017B530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v1 + 104) + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_currentShareURL;
  swift_beginAccess(v10, v13, 0, 0);
  sub_10000735C(v10, (uint64_t)v5, (uint64_t *)&unk_100640EE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EE0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  TTRSharedWithYouProvider.postNotice(for:with:)(v9, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10017B678(uint64_t a1, void *a2)
{
  if (a2 != (void *)3)
    sub_10017B68C(a2);
}

id sub_10017B68C(id result)
{
  if ((char *)result - 1 >= (char *)2)
    return result;
  return result;
}

void sub_10017B6A0(uint64_t a1, void *a2)
{
  if (a2 != (void *)3)
    sub_10017B6B4(a2);
}

void sub_10017B6B4(id a1)
{
  if ((char *)a1 - 1 >= (char *)2)

}

uint64_t sub_10017B6C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10015E774(a1, v1);
}

uint64_t type metadata accessor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget(uint64_t a1)
{
  return sub_100007328(a1, qword_10064A308, (uint64_t)&nominal type descriptor for TTRIRemindersCommonPresenter.NavigationBarEditingTarget);
}

uint64_t sub_10017B6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = *(_QWORD *)(type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release();
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload(v0 + v3, v6))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v0 + v3, v8))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1u:
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v0 + v3, v9))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
            break;
          default:
            break;
        }
LABEL_24:
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v21 = (char *)v5 + *(int *)(v20 + 20);
        v22 = *((_QWORD *)v21 + 1);
        if (v22)
        {
          swift_bridgeObjectRelease(v22);
          sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
          v23 = v21[120];
          if (v23 != 255)
            sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
        }

        return swift_deallocObject(v0, v3 + v4, v2 | 7);
      case 2u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v11))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return swift_deallocObject(v0, v3 + v4, v2 | 7);
          }
        }
        return swift_deallocObject(v0, v3 + v4, v2 | 7);
      case 3u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v12))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return swift_deallocObject(v0, v3 + v4, v2 | 7);
          }
        }
        return swift_deallocObject(v0, v3 + v4, v2 | 7);
      case 4u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v13))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return swift_deallocObject(v0, v3 + v4, v2 | 7);
          }
        }
        return swift_deallocObject(v0, v3 + v4, v2 | 7);
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:

        return swift_deallocObject(v0, v3 + v4, v2 | 7);
      case 7u:
        v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v3, 1, v14))
        {
          swift_bridgeObjectRelease(*v5);
          v15 = (char *)v5 + *(int *)(v14 + 20);
          v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        }
        v5 = (_QWORD *)((char *)v5
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v17 = v5[1];
        if (!v17)
          return swift_deallocObject(v0, v3 + v4, v2 | 7);
        swift_bridgeObjectRelease(v17);
LABEL_18:

        break;
      case 8u:
        v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v3, 1, v18))
        {
          return swift_deallocObject(v0, v3 + v4, v2 | 7);
        }
LABEL_20:
        v19 = type metadata accessor for Date(0);
LABEL_22:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
        break;
      case 9u:
        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v19 = type metadata accessor for AnyTip(0);
        goto LABEL_22;
      default:
        return swift_deallocObject(v0, v3 + v4, v2 | 7);
    }
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_10017BAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0) - 8)
                          + 80);
  return sub_10016E06C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10017BB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;

  v1 = *(_QWORD *)(type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload(v0 + v3, v6))
    {
      case 0u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v0 + v3, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1u:
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v0 + v3, v11))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v12 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v3, v12);
            break;
          default:
            break;
        }
LABEL_24:
        v22 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v23 = (char *)v5 + *(int *)(v22 + 20);
        v24 = *((_QWORD *)v23 + 1);
        if (v24)
        {
          swift_bridgeObjectRelease(v24);
          sub_10003E2EC(*((void **)v23 + 2), *((_QWORD *)v23 + 3), *((_QWORD *)v23 + 4), *((_QWORD *)v23 + 5), *((_QWORD *)v23 + 6), *((_QWORD *)v23 + 7), v23[64]);
          v25 = v23[120];
          if (v25 != 255)
            sub_10002B328(*((void **)v23 + 9), *((_QWORD *)v23 + 10), *((_QWORD *)v23 + 11), *((_QWORD *)v23 + 12), *((_QWORD *)v23 + 13), *((_QWORD *)v23 + 14), v25 & 1);
        }

        break;
      case 2u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v13))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 3u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v14))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 4u:

        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15))
        {
          switch(swift_getEnumCaseMultiPayload(v5, v15))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              goto LABEL_2;
          }
        }
        break;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:

        break;
      case 7u:
        v16 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v0 + v3, 1, v16))
        {
          swift_bridgeObjectRelease(*v5);
          v17 = (char *)v5 + *(int *)(v16 + 20);
          v18 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        }
        v5 = (_QWORD *)((char *)v5
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v19 = v5[1];
        if (!v19)
          break;
        swift_bridgeObjectRelease(v19);
LABEL_18:

        break;
      case 8u:
        v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v0 + v3, 1, v20))
        {
          break;
        }
LABEL_20:
        v21 = type metadata accessor for Date(0);
LABEL_22:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v5, v21);
        break;
      case 9u:
        v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v21 = type metadata accessor for AnyTip(0);
        goto LABEL_22;
      default:
        break;
    }
  }
LABEL_2:
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 9;

  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10017BF28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  v13 = (_QWORD *)swift_task_alloc(dword_100649D14);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006083C;
  return sub_10016E25C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_10017BFE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10017C00C(uint64_t a1)
{
  uint64_t v1;

  sub_10016E72C(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_10017C018(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(a2, a1);
  return a2;
}

uint64_t sub_10017C04C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  sub_100027F10((_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10017C098(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[14];
  v8 = v1[15];
  v10 = (_QWORD *)swift_task_alloc(dword_100649D2C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006083C;
  return sub_10016EC58(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10017C128(uint64_t a1)
{
  destroy for TTRIRemindersCommonPresenter.ParamsForPresentingDetails(a1);
  return a1;
}

uint64_t sub_10017C154(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

void *sub_10017C190(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease(a2);
  }
  return result;
}

uint64_t sub_10017C1BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

id sub_10017C1E8()
{
  uint64_t v0;

  return sub_10009F094(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_10017C1F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10017C204()
{
  uint64_t v0;

  TTRReminderEditor.edit(isFlagged:)(*(_BYTE *)(v0 + 16));
}

uint64_t sub_10017C22C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  if ((~*(_DWORD *)(v0 + 88) & 0xFELL) != 0)
    sub_1000866C4(*(id *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 105, 7);
}

uint64_t sub_10017C278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_100649D54);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10016CC90(a1, v4, v5, v6, v7, v1 + 48);
}

void sub_10017C2FC(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  sub_10016C384(a1, a2, v2, (uint64_t)&unk_1005F3F30, (uint64_t)sub_10002D4F8);
}

double sub_10017C324(void *a1)
{
  uint64_t v1;

  return sub_10016C4C8(a1, v1);
}

double sub_10017C32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10016CA04(a1, a2, a3, v3);
}

uint64_t sub_10017C334()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10017C358()
{
  uint64_t v0;

}

double sub_10017C38C(unsigned __int8 a1, void *a2)
{
  uint64_t v2;

  return sub_10016BD30(a1, a2, v2);
}

uint64_t sub_10017C394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10017C3A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10016C198(a1, *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_10017C3AC()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_10017C3C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649D74);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10016C2A4(a1, v4, v5, v6);
}

uint64_t sub_10017C430()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  sub_100027F10((_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 105, 7);
}

uint64_t sub_10017C474(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649D8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10016EAB0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10017C4F0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRIRemindersListActionMenuItems.MenuItem(a2, a1);
  return a2;
}

uint64_t sub_10017C52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 72), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 528))(ObjectType, v3);
}

uint64_t sub_10017C568()
{
  return sub_1001817DC((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10017C57C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100649D9C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10016F4FC(a1, v4, v5, v7, v6);
}

void sub_10017C5F4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void (*v15)(_QWORD);
  uint64_t v16;

  v2 = v1;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v5);
    swift_release();
    if ((a1 & 1) != 0 && (v6 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 56)) != 0)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "presentingViewController");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "presentedViewController");
        if (v10)
        {
          v11 = v10;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v12 = v7;
          v13 = v11;
          v14 = static NSObject.== infix(_:_:)(v13, v12);

          if ((v14 & 1) != 0)
            objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
          swift_unknownObjectRelease(v5);

        }
        else
        {
          swift_unknownObjectRelease(v5);

        }
      }
      else
      {
        swift_unknownObjectRelease(v5);

      }
    }
    else
    {
      swift_unknownObjectRelease(v5);
    }
    v15 = *(void (**)(_QWORD))(v2 + 24);
    if (v15)
    {
      v16 = *(_QWORD *)(v2 + 32);
      swift_retain();
      v15(0);
      sub_1000381B8((uint64_t)v15, v16);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10017C780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  Swift::String_optional v18;

  v5 = v2 + 16;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v7);
    swift_release();
    sub_10009F0B0(0, 0);
    v8 = swift_unknownObjectRelease(v7);
    v9 = *(void (**)(uint64_t))(v2 + 24);
    if (v9)
    {
      v10 = *(_QWORD *)(v2 + 32);
      swift_retain();
      v9(1);
      v8 = sub_1000381B8((uint64_t)v9, v10);
    }
    v11 = static TTRLocalizableStrings.UndoAction.changeReminder.getter(v8);
    v13 = v12;
    if (swift_weakLoadStrong(v5))
    {
      sub_100159DA4(v11, v13, a1, a2);
      swift_release();
      v14 = swift_bridgeObjectRelease(v13);
      v15 = (uint64_t *)TTRITipKitSignalContext.ReminderDetail.AnyField.unsafeMutableAddressor(v14);
      v16 = *v15;
      v17 = (void *)v15[1];
      swift_bridgeObjectRetain(v17);
      v18.value._countAndFlagsBits = v16;
      v18.value._object = v17;
      TTRITipKitSignal.donate(signalContext:)(v18);
      swift_bridgeObjectRelease(v17);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10017C888(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void (*v15)(_QWORD);

  v2 = v1;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v5 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v5);
    swift_release();
    if ((a1 & 1) != 0 && (v6 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 56)) != 0)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "presentingViewController");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "presentedViewController");
        if (v10)
        {
          v11 = v10;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v12 = v7;
          v13 = v11;
          v14 = static NSObject.== infix(_:_:)(v13, v12);

          if ((v14 & 1) != 0)
            objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
          swift_unknownObjectRelease(v5);

        }
        else
        {
          swift_unknownObjectRelease(v5);

        }
      }
      else
      {
        swift_unknownObjectRelease(v5);

      }
    }
    else
    {
      swift_unknownObjectRelease(v5);
    }
  }
  v15 = *(void (**)(_QWORD))(v2 + 40);
  if (v15)
    v15(0);
}

double sub_10017C9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t inited;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double result;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char v99[32];

  v3 = v2;
  v92 = a1;
  v5 = type metadata accessor for Logger(0);
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  v6 = __chkstk_darwin(v5);
  v89 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TTRRecurrenceRuleModel(0, v6);
  v85 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100641728);
  __chkstk_darwin(v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v95 = (uint64_t)&v85 - v13;
  v14 = v2 + 16;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v16 = *(_QWORD *)(Strong + 232);
    v17 = *(_QWORD *)(v16 + 96);
    swift_beginAccess(v17 + 40, v99, 0, 0);
    v19 = *(_QWORD *)(v17 + 40);
    if (v19)
    {
      v20 = *(_QWORD *)(v17 + 48);
      ObjectType = swift_getObjectType(v19, v18);
      v87 = v3;
      v22 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 24);
      v23 = swift_unknownObjectRetain(v19);
      v22(ObjectType, v20, v23);
      v3 = v87;
      swift_unknownObjectRelease(v19);
    }
    sub_10041C214(v16);
    swift_release();
  }
  v24 = swift_weakLoadStrong(v14);
  if (v24)
  {
    v25 = *(_QWORD *)(v24 + 88);
    swift_unknownObjectRetain(v25);
    swift_release();
    sub_10009F0B0(0, 0);
    swift_unknownObjectRelease(v25);
  }
  v26 = *(void (**)(uint64_t))(v3 + 40);
  if (v26)
    v26(1);
  if (swift_weakLoadStrong(v14))
  {
    swift_retain();
    swift_release();
    v27 = (void *)swift_unknownObjectWeakLoadStrong(v3 + 24);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, "dueDateComponents");

      if (v29)
      {
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v29);

        v30 = type metadata accessor for DateComponents(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 0, 1, v30);
      }
      else
      {
        v32 = type metadata accessor for DateComponents(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
      }
      sub_10000F614((uint64_t)v11, v95, &qword_100641728);
    }
    else
    {
      v31 = type metadata accessor for DateComponents(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v95, 1, 1, v31);
    }
    v33 = v95;
    sub_1001AE068(v95, *(_QWORD *)(v3 + 32));
    swift_release();
    sub_1000073A0(v33, &qword_100641728);
  }
  v34 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3 + 24);
  if (v34
    && (v35 = v34, v36 = objc_msgSend(v34, "recurrenceRules"),
                   v35,
                   v36))
  {
    v87 = v3;
    v94 = a2;
    v37 = sub_100005ED8(0, &qword_100649DF8, REMRecurrenceRule_ptr);
    v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v84 = v38;
      else
        v84 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v38);
      v39 = _CocoaArrayWrapper.endIndex.getter(v84);
      swift_bridgeObjectRelease(v38);
    }
    else
    {
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v40 = (uint64_t)v86;
    v93 = v14;
    if (v39)
    {
      v97 = _swiftEmptyArrayStorage;
      sub_1003D84D4(0, v39 & ~(v39 >> 63), 0);
      if (v39 < 0)
      {
        __break(1u);
        goto LABEL_48;
      }
      v41 = 0;
      v35 = v97;
      v42 = v85;
      do
      {
        if ((v38 & 0xC000000000000001) != 0)
          v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41, v38);
        else
          v43 = *(id *)(v38 + 8 * v41 + 32);
        TTRRecurrenceRuleModel.init(sourceRule:)(v43);
        v97 = v35;
        v45 = v35[2];
        v44 = v35[3];
        if (v45 >= v44 >> 1)
        {
          sub_1003D84D4(v44 > 1, v45 + 1, 1);
          v42 = v85;
          v35 = v97;
        }
        ++v41;
        v35[2] = v45 + 1;
        sub_10001F580(v40, (uint64_t)v35+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRecurrenceRuleModel);
      }
      while (v39 != v41);
      swift_bridgeObjectRelease(v38);
      v14 = v93;
    }
    else
    {
      swift_bridgeObjectRelease(v38);
      v35 = _swiftEmptyArrayStorage;
    }
    v62 = swift_weakLoadStrong(v14);
    a2 = v94;
    if (v62)
    {
      swift_retain();
      swift_release();
      v3 = *(_QWORD *)(v87 + 32);
      if (qword_10063D420 == -1)
      {
LABEL_38:
        v63 = v91;
        v64 = sub_100012DC4(v91, (uint64_t)qword_10064A550);
        v66 = v89;
        v65 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v64, v63);
        v67 = sub_10002A750((uint64_t *)&unk_100640F20);
        inited = swift_initStackObject(v67, &v96);
        *(_OWORD *)(inited + 16) = xmmword_1005201E0;
        *(_QWORD *)(inited + 32) = 0x6E65727275636572;
        *(_QWORD *)(inited + 40) = 0xEF73656C75526563;
        swift_bridgeObjectRetain(v35);
        v70 = Array.description.getter(v69, v88);
        v72 = v71;
        swift_bridgeObjectRelease(v35);
        *(_QWORD *)(inited + 48) = v70;
        *(_QWORD *)(inited + 56) = v72;
        *(_QWORD *)(inited + 72) = &type metadata for String;
        *(_QWORD *)(inited + 80) = 0x736D657469;
        *(_QWORD *)(inited + 88) = 0xE500000000000000;
        *(_QWORD *)(inited + 120) = sub_10002A750(&qword_100649DF0);
        *(_QWORD *)(inited + 96) = v3;
        swift_bridgeObjectRetain(v3);
        v73 = sub_10002D32C(inited);
        sub_1000143B4((uint64_t)"Reminders List set  {recurrenceRules: %@, items: %@}", 52, 2, v73);
        v74 = swift_bridgeObjectRelease(v73);
        v75 = (*(uint64_t (**)(char *, uint64_t, __n128))(v65 + 8))(v66, v63, v74);
        v76 = static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter(v75);
        v78 = v77;
        __chkstk_darwin(v76);
        *(&v85 - 2) = (uint64_t)v35;
        sub_1001B35FC(v3, v79, v78, (uint64_t)sub_10019C6D8, (uint64_t)(&v85 - 4));
        swift_release();
        swift_bridgeObjectRelease(v35);
        v46 = swift_bridgeObjectRelease(v78);
        v14 = v93;
        a2 = v94;
        goto LABEL_40;
      }
LABEL_48:
      swift_once(&qword_10063D420, sub_1001AF584);
      goto LABEL_38;
    }
    v46 = swift_bridgeObjectRelease(v35);
  }
  else if (swift_weakLoadStrong(v14))
  {
    v93 = v14;
    v94 = a2;
    swift_retain();
    swift_release();
    v47 = *(_QWORD *)(v3 + 32);
    if (qword_10063D420 != -1)
      swift_once(&qword_10063D420, sub_1001AF584);
    v48 = v91;
    v49 = sub_100012DC4(v91, (uint64_t)qword_10064A550);
    v50 = v89;
    v51 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v49, v48);
    v52 = sub_10002A750((uint64_t *)&unk_100640F20);
    v53 = swift_initStackObject(v52, &v98);
    *(_OWORD *)(v53 + 16) = xmmword_1005201E0;
    *(_QWORD *)(v53 + 32) = 0x6E65727275636572;
    *(_QWORD *)(v53 + 40) = 0xEF73656C75526563;
    *(_QWORD *)(v53 + 48) = Array.description.getter(_swiftEmptyArrayStorage, v88);
    *(_QWORD *)(v53 + 56) = v54;
    *(_QWORD *)(v53 + 72) = &type metadata for String;
    *(_QWORD *)(v53 + 80) = 0x736D657469;
    *(_QWORD *)(v53 + 88) = 0xE500000000000000;
    *(_QWORD *)(v53 + 120) = sub_10002A750(&qword_100649DF0);
    *(_QWORD *)(v53 + 96) = v47;
    swift_bridgeObjectRetain(v47);
    v55 = sub_10002D32C(v53);
    sub_1000143B4((uint64_t)"Reminders List set  {recurrenceRules: %@, items: %@}", 52, 2, v55);
    v56 = swift_bridgeObjectRelease(v55);
    v57 = (*(uint64_t (**)(char *, uint64_t, __n128))(v51 + 8))(v50, v48, v56);
    v58 = static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter(v57);
    v60 = v59;
    __chkstk_darwin(v58);
    *(&v85 - 2) = (uint64_t)_swiftEmptyArrayStorage;
    sub_1001B35FC(v47, v61, v60, (uint64_t)sub_10017EAD4, (uint64_t)(&v85 - 4));
    swift_release();
    v46 = swift_bridgeObjectRelease(v60);
    v14 = v93;
    a2 = v94;
  }
LABEL_40:
  v80 = static TTRLocalizableStrings.UndoAction.batchChangeDueDate.getter(v46);
  v82 = v81;
  if (swift_weakLoadStrong(v14))
  {
    sub_100159DA4(v80, v82, v92, a2);
    swift_release();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v82).n128_u64[0];
  return result;
}

void sub_10017D268(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v4);
    swift_release();
    if ((a1 & 1) != 0 && (v5 = (void *)swift_unknownObjectWeakLoadStrong(v4 + 56)) != 0)
    {
      v13 = v5;
      v6 = objc_msgSend(v5, "presentingViewController");
      if (v6)
      {
        v12 = v6;
        v7 = objc_msgSend(v6, "presentedViewController");
        if (v7)
        {
          v8 = v7;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v9 = v13;
          v10 = v8;
          LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

          if ((v8 & 1) != 0)
            objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
          swift_unknownObjectRelease(v4);

        }
        else
        {
          swift_unknownObjectRelease(v4);

        }
        v11 = v12;
      }
      else
      {
        swift_unknownObjectRelease(v4);
        v11 = v13;
      }

    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
}

double sub_10017D3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double result;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];
  _QWORD v54[10];
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  __int128 v64[6];
  __int128 v65;

  v3 = v2;
  v6 = v2 + 16;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (Strong)
  {
    v8 = *(_QWORD *)(Strong + 232);
    v9 = *(_QWORD *)(v8 + 96);
    swift_beginAccess(v9 + 40, v53, 0, 0);
    v11 = *(_QWORD *)(v9 + 40);
    if (v11)
    {
      v12 = *(_QWORD *)(v9 + 48);
      ObjectType = swift_getObjectType(v11, v10);
      v14 = *(void (**)(uint64_t, uint64_t, __n128))(v12 + 24);
      v15 = swift_unknownObjectRetain(v11);
      v14(ObjectType, v12, v15);
      swift_unknownObjectRelease(v11);
    }
    sub_10041C214(v8);
    swift_release();
  }
  v16 = swift_weakLoadStrong(v6);
  if (v16)
  {
    v17 = *(_QWORD *)(v16 + 88);
    swift_unknownObjectRetain(v17);
    swift_release();
    sub_10009F0B0(0, 0);
    swift_unknownObjectRelease(v17);
  }
  v18 = swift_unknownObjectWeakLoadStrong(v3 + 24);
  if (!v18)
  {
    memset(v64, 0, 40);
    goto LABEL_20;
  }
  v19 = (void *)v18;
  REMReminderChangeItem.ttrAssignmentContext.getter(v64);

  if (!*((_QWORD *)&v64[1] + 1))
  {
LABEL_20:
    sub_1000073A0((uint64_t)v64, (uint64_t *)&unk_100649E00);
    goto LABEL_26;
  }
  sub_10002E37C(v64, (uint64_t)v50);
  v20 = v51;
  v21 = v52;
  sub_10001413C(v50, v51);
  v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "assigneeID");

    if (v24)
    {
      v25 = swift_unknownObjectWeakLoadStrong(v3 + 24);
      if (v25)
      {
        v26 = (void *)v25;
        REMReminderChangeItem.ttrList.getter(v64, v25);

        if (*((_QWORD *)&v64[1] + 1))
        {
          sub_10002E37C(v64, (uint64_t)v47);
          v27 = v48;
          v28 = v49;
          sub_10001413C(v47, v48);
          v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v27, v28);
          if (v29
            && (v30 = v29,
                v31 = objc_msgSend(v29, "objectID"),
                v30,
                v31))
          {
            v32 = v48;
            v33 = v49;
            sub_10001413C(v47, v48);
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v33 + 88))(v64, v32, v33);
            v34 = *((_QWORD *)&v64[1] + 1);
            if (*((_QWORD *)&v64[1] + 1))
            {
              v35 = *(_QWORD *)&v64[2];
              sub_10001413C(v64, *((uint64_t *)&v64[1] + 1));
              v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
              sub_100027F10(v64);
              v37 = v24;
              v38 = sub_10017A964(v36, (uint64_t)v37);
              swift_bridgeObjectRelease(v36);

              if (v38)
              {
                v39 = v38;
                TTRParticipantModel.init(sharee:)(v54);
                sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
                v40 = v37;
                v41 = static NSObject.== infix(_:_:)(v31, v40);
                TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)(&v55, v40, 0, v54, v41 & 1, 0);
                *(__int128 *)((char *)v64 + 8) = v56;
                *(__int128 *)((char *)&v64[1] + 8) = v57;
                *(__int128 *)((char *)&v64[2] + 8) = v58;
                *(__int128 *)((char *)&v64[3] + 8) = v59;
                *(__int128 *)((char *)&v64[4] + 8) = v60;
                *(_QWORD *)&v64[0] = v55;
                *((_QWORD *)&v64[5] + 1) = v61;
                *(_QWORD *)&v65 = v62;
                *((_QWORD *)&v65 + 1) = v63;
                if (swift_weakLoadStrong(v6))
                {
                  swift_retain();
                  swift_release();
                  sub_1001AC900(v64, *(_QWORD *)(v3 + 32));

                  sub_10017EADC((uint64_t)&v55);
                  swift_release();
                }
                else
                {

                  sub_10017EADC((uint64_t)&v55);
                }

                sub_100027F10(v47);
                sub_100027F10(v50);
                goto LABEL_28;
              }

            }
            else
            {

              sub_1000073A0((uint64_t)v64, &qword_10063F580);
            }
          }
          else
          {

          }
          sub_100027F10(v47);
          goto LABEL_25;
        }
      }
      else
      {
        memset(v64, 0, 40);
      }

      sub_1000073A0((uint64_t)v64, &qword_100649C80);
    }
  }
LABEL_25:
  sub_100027F10(v50);
LABEL_26:
  if (swift_weakLoadStrong(v6))
  {
    swift_retain();
    swift_release();
    v65 = 0u;
    memset(v64, 0, sizeof(v64));
    sub_1001AC900(v64, *(_QWORD *)(v3 + 32));
    v42 = swift_release();
  }
LABEL_28:
  v43 = static TTRLocalizableStrings.UndoAction.batchChangeAssignment.getter(v42);
  v45 = v44;
  if (swift_weakLoadStrong(v6))
  {
    sub_100159DA4(v43, v45, a1, a2);
    swift_release();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v45).n128_u64[0];
  return result;
}

void sub_10017D890(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + 88);
    swift_unknownObjectRetain(v4);
    swift_release();
    if ((a1 & 1) != 0 && (v5 = (void *)swift_unknownObjectWeakLoadStrong(v4 + 56)) != 0)
    {
      v13 = v5;
      v6 = objc_msgSend(v5, "presentingViewController");
      if (v6)
      {
        v12 = v6;
        v7 = objc_msgSend(v6, "presentedViewController");
        if (v7)
        {
          v8 = v7;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v9 = v13;
          v10 = v8;
          LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

          if ((v8 & 1) != 0)
            objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
          swift_unknownObjectRelease(v4);

        }
        else
        {
          swift_unknownObjectRelease(v4);

        }
        v11 = v12;
      }
      else
      {
        swift_unknownObjectRelease(v4);
        v11 = v13;
      }

    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10017D9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  __n128 v31;
  uint64_t *v32;
  uint64_t v33;
  void *v34;
  Swift::String_optional v35;
  _BYTE v37[24];

  v5 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v2 + 16;
  Strong = swift_weakLoadStrong(v2 + 16);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_14;
  }
  v13 = *(_QWORD *)(Strong + 88);
  swift_unknownObjectRetain(v13);
  swift_release();
  sub_10009F0B0(0, 0);
  swift_unknownObjectRelease(v13);
  v14 = objc_msgSend(*(id *)(v2 + 24), "objectID");
  v15 = swift_weakLoadStrong(v11);
  if (!v15)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v16 = v15;
  v17 = (_QWORD *)swift_allocObject(&unk_1005F41D8, 40, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = v14;
  v18 = *(_QWORD *)(v16 + 232) + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess(v18, v37, 0, 0);
  sub_10002B1E8(v18, (uint64_t)v10, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v19 = v10[*(int *)(v8 + 20)];
  swift_unknownObjectRetain(a1);
  v20 = v14;
  sub_10001F544((uint64_t)v10, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v19 & 1) != 0
    || (v21 = swift_unknownObjectWeakLoadStrong(v16 + 16)) != 0
    && (v23 = v21,
        v24 = *(_QWORD *)(v16 + 24),
        ObjectType = swift_getObjectType(v21, v22),
        LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(ObjectType, v24),
        swift_unknownObjectRelease(v23),
        (v24 & 1) != 0))
  {
    if (qword_10063D400 != -1)
      swift_once(&qword_10063D400, sub_10015A89C);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100012DC4(v26, (uint64_t)qword_100648980);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
    swift_release();
    swift_release();

  }
  else
  {
    sub_10041960C((void *)8, (uint64_t)sub_10017EC9C, (uint64_t)v17, (uint64_t)v7);
    sub_1000073A0((uint64_t)v7, &qword_100654880);
    swift_release();
    v31 = swift_release();
  }
  v32 = (uint64_t *)TTRITipKitSignalContext.ReminderDetail.AnyField.unsafeMutableAddressor(v31);
  v33 = *v32;
  v34 = (void *)v32[1];
  swift_bridgeObjectRetain(v34);
  v35.value._countAndFlagsBits = v33;
  v35.value._object = v34;
  TTRITipKitSignal.donate(signalContext:)(v35);

  swift_bridgeObjectRelease(v34);
}

double sub_10017DD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t Strong;
  double result;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 24), v5);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 112))(0, ObjectType, v4);
  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    v9 = (_QWORD *)Strong;
    v10 = *(void **)(Strong + 392);
    v11 = v9[50];
    v9[50] = 0;
    v9[51] = 0;
    v9[49] = 0;
    sub_10017C190(v10, v11);
    v12 = swift_unknownObjectWeakLoadStrong(v9 + 2);
    if (v12)
    {
      v14 = v12;
      v15 = v9[3];
      v16 = swift_getObjectType(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 200))(v3, 0, v16, v15);
      swift_release();
      swift_unknownObjectRelease(v14);
      sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_10017DE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t Strong;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self(TTRUndoManager);
  static TTRLocalizableStrings.UndoAction.addAttachments.getter();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v11 = swift_allocObject(&unk_1005F4228, 32, 7);
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = swift_allocObject(&unk_1005F4250, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10017ECF8;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005F4268;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  swift_retain();
  objc_msgSend(v7, "withActionName:block:", v10, v13, swift_release().n128_f64[0]);

  _Block_release(v13);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v12, "", 136, 3933, 88, 1);
  swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = *(_QWORD *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 32);
    v17 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor(v14);
    v19 = *(_QWORD *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
    if ((v19 & ~v17) == 0)
      v19 = 0;
    v20 = v19 | v17;
    ObjectType = swift_getObjectType(v15, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v20, ObjectType, v16);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 112))(0, ObjectType, v16);
    Strong = swift_weakLoadStrong(v2 + 16);
    if (Strong)
    {
      v23 = (_QWORD *)Strong;
      v24 = *(void **)(Strong + 392);
      v25 = v23[50];
      v23[50] = 0;
      v23[51] = 0;
      v23[49] = 0;
      sub_10017C190(v24, v25);
      v26 = swift_unknownObjectWeakLoadStrong(v23 + 2);
      if (v26)
      {
        v28 = v26;
        v29 = v23[3];
        v30 = swift_getObjectType(v26, v27);
        (*(void (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 200))(v6, 0, v30, v29);
        swift_release();
        swift_unknownObjectRelease(v28);
        sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        swift_release();
      }
    }
    swift_release();
  }
}

double sub_10017E0E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  double result;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v27[24];

  v3 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong)
  {
    v11 = (_QWORD *)Strong;
    v12 = *(void **)(Strong + 392);
    v13 = v11[50];
    v11[50] = 0;
    v11[51] = 0;
    v11[49] = 0;
    sub_10017C190(v12, v13);
    v14 = swift_allocObject(&unk_1005F42A0, 24, 7);
    *(_QWORD *)(v14 + 16) = a1;
    v15 = v11[29] + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v15, v27, 0, 0);
    sub_10002B1E8(v15, (uint64_t)v8, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v15) = v8[*(int *)(v6 + 20)];
    swift_bridgeObjectRetain(a1);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v15 & 1) != 0
      || (v16 = swift_unknownObjectWeakLoadStrong(v11 + 2)) != 0
      && (v18 = v16,
          v19 = v11[3],
          ObjectType = swift_getObjectType(v16, v17),
          LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(ObjectType, v19),
          swift_unknownObjectRelease(v18),
          (v19 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100012DC4(v21, (uint64_t)qword_100648980);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }
      swift_release();
      swift_release();

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_10017ED10, v14, (uint64_t)v5);
      sub_1000073A0((uint64_t)v5, &qword_100654880);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_10017E364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BYTE v23[24];

  v1 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    v8 = (_QWORD *)Strong;
    v9 = *(_QWORD *)(Strong + 424);
    v8[53] = 0;
    v8[54] = 0;
    swift_unknownObjectRelease(v9);
    v10 = swift_allocObject(&unk_1005F42C8, 24, 7);
    swift_weakInit(v10 + 16, v0);
    v11 = v8[29] + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
    swift_beginAccess(v11, v23, 0, 0);
    sub_10002B1E8(v11, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v11) = v6[*(int *)(v4 + 20)];
    swift_retain();
    sub_10001F544((uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if ((v11 & 1) != 0
      || (v12 = swift_unknownObjectWeakLoadStrong(v8 + 2)) != 0
      && (v14 = v12,
          v15 = v8[3],
          ObjectType = swift_getObjectType(v12, v13),
          LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(ObjectType, v15),
          swift_unknownObjectRelease(v14),
          (v15 & 1) != 0))
    {
      if (qword_10063D400 != -1)
        swift_once(&qword_10063D400, sub_10015A89C);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100012DC4(v17, (uint64_t)qword_100648980);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRIRemindersCommonPresenter: cannot perform createNewReminderInDefaultSectionForNavigationbar", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }
      swift_release();
      swift_release_n(v10, 2);

    }
    else
    {
      sub_10041960C((void *)8, (uint64_t)sub_10017ED38, v10, (uint64_t)v3);
      sub_1000073A0((uint64_t)v3, &qword_100654880);
      swift_release();
      swift_release_n(v10, 2);
    }
  }
}

void sub_10017E5E0(void *a1, char a2)
{
  uint64_t v2;
  void *Strong;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD aBlock[6];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + 88) + 16);
  if (Strong)
  {
    v13 = Strong;
    v6 = objc_msgSend(Strong, "presentedViewController");
    if (v6)
    {
      v7 = v6;
      v8 = swift_allocObject(&unk_1005F3FF8, 33, 7);
      *(_QWORD *)(v8 + 16) = v13;
      *(_QWORD *)(v8 + 24) = a1;
      v9 = a2 & 1;
      *(_BYTE *)(v8 + 32) = v9;
      aBlock[4] = sub_10019C898;
      aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100006378;
      aBlock[3] = &unk_1005F4010;
      v10 = _Block_copy(aBlock);
      v11 = v13;
      v12 = a1;
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", v9, v10, swift_release().n128_f64[0]);

      _Block_release(v10);
    }
    else
    {
      objc_msgSend(v13, "presentViewController:animated:completion:", a1, a2 & 1, 0);

    }
  }
}

uint64_t sub_10017E72C(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  __int128 v18[2];

  sub_10016F974(a1, (uint64_t)&v14);
  if (!v14)
    return sub_1000073A0((uint64_t)&v14, &qword_100649DA8);
  v17 = v14;
  sub_10002E37C(&v15, (uint64_t)v18);
  v2 = v17;
  sub_10002E37C(v18, (uint64_t)&v14);
  v3 = type metadata accessor for ReminderDetailModuleDelegate();
  v4 = swift_allocObject(v3, 40, 7);
  v5 = swift_weakInit(v4 + 16, 0);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  swift_weakAssign(v5, v1);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  sub_1000381B8(v6, v7);
  v8 = v1[45];
  v1[45] = v4;
  v1[46] = &off_1005F2F80;
  swift_unknownObjectRelease(v8);
  v9 = v1[11];
  v11 = v1[45];
  v10 = v1[46];
  v12 = *sub_10001413C(&v14, v16);
  swift_unknownObjectRetain(v11);
  sub_100174290(v2, 1, 1, v11, v10, v12, v9);

  swift_unknownObjectRelease(v11);
  return sub_100027F10(&v14);
}

uint64_t sub_10017E850(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a3, (uint64_t)v8, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v13 = sub_1003003A4((uint64_t)v12, a1, a2);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v13;
}

uint64_t sub_10017E9A0()
{
  uint64_t v0;

  return sub_100159F64(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(_BYTE *)(v0 + 73), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD **)(v0 + 104), *(_BYTE *)(v0 + 112), *(_BYTE *)(v0 + 113));
}

uint64_t type metadata accessor for TTRIRemindersCommonPresenterConfiguration(uint64_t a1)
{
  return sub_100007328(a1, qword_10064A210, (uint64_t)&nominal type descriptor for TTRIRemindersCommonPresenterConfiguration);
}

uint64_t sub_10017EA0C(uint64_t a1)
{
  uint64_t v1;

  return sub_10015A944(a1, v1);
}

uint64_t sub_10017EA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017EA5C(uint64_t a1)
{
  uint64_t v1;

  return sub_10015A9B8(a1, v1);
}

uint64_t sub_10017EA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100649DD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10004A08C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100649DD0 + dword_100649DD0))(a1, v4);
}

uint64_t sub_10017EAD4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B4028(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10017EADC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(void **)(a1 + 104);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  return a1;
}

void sub_10017EB68()
{
  uint64_t v0;

  sub_1001694BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10017EB70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017EB80(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001B4070(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10017EB88()
{
  return sub_10017EB90(56);
}

uint64_t sub_10017EB90(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t (*sub_10017EBC8())(char *, uint64_t, uint64_t)
{
  uint64_t v0;

  return sub_1001B8298(*(uint64_t (***)(char *, uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10017EBD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017EBE8()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10017EC14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  sub_10001413C(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v1, v3, v2);
}

uint64_t sub_10017EC60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017EC70()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10017EC9C(uint64_t a1)
{
  uint64_t v1;

  sub_100169DB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10017ECA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017ECCC()
{
  uint64_t v0;

  return TTRReminderEditor.updateHashtags(toMatchLabels:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10017ECF8()
{
  uint64_t v0;

  return sub_10016A1DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10017ED00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10017ED10()
{
  Swift::OpaquePointer *v0;

  TTRReminderEditor.add(attachments:)(v0[2]);
}

double sub_10017ED38(uint64_t a1)
{
  uint64_t v1;

  return sub_10016A49C(a1, v1);
}

uint64_t sub_10017ED40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100649E2C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006083C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100649E28 + dword_100649E28))(a1, v4);
}

uint64_t sub_10017EDB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10017EDE4()
{
  uint64_t v0;

  sub_1001659F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10017EDF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017EE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10002A750((uint64_t *)&unk_100653A90) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release();
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_10017EEA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750((uint64_t *)&unk_100653A90) - 8) + 80);
  return sub_10016537C(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

unint64_t sub_10017EEF0()
{
  unint64_t result;

  result = qword_100649E50;
  if (!qword_100649E50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_100649E50);
  }
  return result;
}

void sub_10017EF34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_100165650(a1, a2, a3 & 1, v3);
}

uint64_t sub_10017EF40(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10017EF50(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_errorRetain();
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10017EF60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017EF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v36 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v36 + 24) & ~v36;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v35 = *(_QWORD *)(v11 + 64);

  v13 = (_QWORD *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload(v13, v1))
  {
    case 0u:
      v34 = v9;
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v13, v14))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v34 = v9;
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v13, v15))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v16 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
          break;
        default:
          break;
      }
LABEL_22:
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v27 = (char *)v13 + *(int *)(v26 + 20);
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        swift_bridgeObjectRelease(v28);
        sub_10003E2EC(*((void **)v27 + 2), *((_QWORD *)v27 + 3), *((_QWORD *)v27 + 4), *((_QWORD *)v27 + 5), *((_QWORD *)v27 + 6), *((_QWORD *)v27 + 7), v27[64]);
        v29 = v27[120];
        if (v29 != 255)
          sub_10002B328(*((void **)v27 + 9), *((_QWORD *)v27 + 10), *((_QWORD *)v27 + 11), *((_QWORD *)v27 + 12), *((_QWORD *)v27 + 13), *((_QWORD *)v27 + 14), v29 & 1);
      }

      v9 = v34;
      break;
    case 2u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v17))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 3u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v13, 1, v18))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v18))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 4u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v19))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:

      break;
    case 7u:
      v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20))
      {
        swift_bridgeObjectRelease(*v13);
        v21 = (char *)v13 + *(int *)(v20 + 20);
        v22 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v13 = (_QWORD *)((char *)v13
                     + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v23 = v13[1];
      if (!v23)
        break;
      swift_bridgeObjectRelease(v23);
LABEL_16:

      break;
    case 8u:
      v24 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v13, 1, v24))
        break;
LABEL_18:
      v25 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v13, v25);
      break;
    case 9u:
      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v25 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_26:
  if (swift_getEnumCaseMultiPayload(v0 + v8, v5) == 1)
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v30(v0 + v8, v10);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
    v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  }
  v31 = (v8 + v9 + v12) & ~v12;
  v32 = (((((((v35 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v30(v0 + v31, v10);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject(v0, v32 + 8, v36 | v7 | v12 | 7);
}

Class sub_10017F458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100163598(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, (void *)(v1 + v10), *(_QWORD *)(v1 + v11), *(_QWORD *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1+ ((((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10017F538@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1001634BC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10017F550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v36 = *(_QWORD *)(v7 + 64);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v35 = *(_QWORD *)(v11 + 64);

  v13 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v13, v1))
  {
    case 0u:
      v34 = v9;
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v13, v14))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v34 = v9;
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v13, v15))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v16 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
          break;
        default:
          break;
      }
LABEL_22:
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v27 = (char *)v13 + *(int *)(v26 + 20);
      v28 = *((_QWORD *)v27 + 1);
      if (v28)
      {
        swift_bridgeObjectRelease(v28);
        sub_10003E2EC(*((void **)v27 + 2), *((_QWORD *)v27 + 3), *((_QWORD *)v27 + 4), *((_QWORD *)v27 + 5), *((_QWORD *)v27 + 6), *((_QWORD *)v27 + 7), v27[64]);
        v29 = v27[120];
        if (v29 != 255)
          sub_10002B328(*((void **)v27 + 9), *((_QWORD *)v27 + 10), *((_QWORD *)v27 + 11), *((_QWORD *)v27 + 12), *((_QWORD *)v27 + 13), *((_QWORD *)v27 + 14), v29 & 1);
      }

      v9 = v34;
      break;
    case 2u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v17))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 3u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v13, 1, v18))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v18))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 4u:

      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19))
      {
        switch(swift_getEnumCaseMultiPayload(v13, v19))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_26;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:

      break;
    case 7u:
      v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20))
      {
        swift_bridgeObjectRelease(*v13);
        v21 = (char *)v13 + *(int *)(v20 + 20);
        v22 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v13 = (_QWORD *)((char *)v13
                     + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v23 = v13[1];
      if (!v23)
        break;
      swift_bridgeObjectRelease(v23);
LABEL_16:

      break;
    case 8u:
      v24 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v13, 1, v24))
        break;
LABEL_18:
      v25 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v13, v25);
      break;
    case 9u:
      v13 = (_QWORD *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v25 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_26:
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v30(v0 + v9, v10);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + v9));
    v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  }
  v31 = (v9 + v36 + v12) & ~v12;
  v32 = v31 + v35;
  v30(v0 + v31, v10);
  return swift_deallocObject(v0, v32, v3 | v8 | v12 | 7);
}

void sub_10017F9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for TTRIRemindersCommonPresenter.ContextMenuIdentifier.Action(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_100163FA4(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_10017FA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v30 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v30 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);

  v9 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v10))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v11))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v12 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
          break;
        default:
          break;
      }
LABEL_22:
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v24 = (char *)v9 + *(int *)(v23 + 20);
      v25 = *((_QWORD *)v24 + 1);
      if (v25)
      {
        swift_bridgeObjectRelease(v25);
        sub_10003E2EC(*((void **)v24 + 2), *((_QWORD *)v24 + 3), *((_QWORD *)v24 + 4), *((_QWORD *)v24 + 5), *((_QWORD *)v24 + 6), *((_QWORD *)v24 + 7), v24[64]);
        v26 = v24[120];
        if (v26 != 255)
          sub_10002B328(*((void **)v24 + 9), *((_QWORD *)v24 + 10), *((_QWORD *)v24 + 11), *((_QWORD *)v24 + 12), *((_QWORD *)v24 + 13), *((_QWORD *)v24 + 14), v26 & 1);
      }
      v16 = *(id *)((char *)v9 + *(int *)(v23 + 44));
      goto LABEL_26;
    case 2u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v9, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v13))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v14))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v9, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v9, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v16 = (id)*v9;
      goto LABEL_26;
    case 7u:
      v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v0 + v4, 1, v17))
      {
        swift_bridgeObjectRelease(*v9);
        v18 = (char *)v9 + *(int *)(v17 + 20);
        v19 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v20 = v9[1];
      if (!v20)
        break;
      swift_bridgeObjectRelease(v20);
LABEL_16:
      v16 = (id)v9[2];
LABEL_26:

      break;
    case 8u:
      v21 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v0 + v4, 1, v21))
        break;
LABEL_18:
      v22 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v9, v22);
      break;
    case 9u:
      v9 = (_QWORD *)((char *)v9 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v22 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v27 = (v4 + v5 + v7) & ~v7;
  v28 = (((((((v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v27, v30);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject(v0, v28 + 8, v3 | v7 | 7);
}

uint64_t sub_10017FEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10016489C(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, *(_QWORD *)(v1 + v8), *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1+ ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10017FF70(uint64_t a1)
{
  return sub_100180368(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_100164CAC);
}

uint64_t sub_10017FF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10018035C(uint64_t a1)
{
  return sub_100180368(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_100164F40);
}

uint64_t sub_100180368(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + v5, *(_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001803CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10018042C(void (*a1)(uint64_t, unint64_t, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1001646CC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_100180478()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10018049C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10016481C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1001804A4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1001804E8()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

double sub_100180500(uint64_t a1)
{
  uint64_t v1;

  return sub_100161BB4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_100180514(uint64_t a1)
{
  uint64_t v1;

  return sub_100162B38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1005F4610, (uint64_t)&unk_100649ED0);
}

uint64_t sub_100180540(uint64_t a1)
{
  uint64_t v1;

  return sub_1001630BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100180548()
{
  return sub_1001817DC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10018055C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100649ECC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_100162C78(a1, v4, v5, v7, v6);
}

uint64_t sub_1001805D4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      goto LABEL_3;
    case 1:
    case 3:
      goto LABEL_4;
    case 2:
      a2 = a3;
LABEL_3:
      swift_bridgeObjectRelease(result);
      result = a2;
LABEL_4:
      result = swift_bridgeObjectRelease(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100180628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1001651CC(a1, v2, a2);
}

uint64_t *sub_100180640(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  v6 = a1[10];
  v7 = a1[11];
  sub_1001806B4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1001806B4(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1001806B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1001806F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10002A750((uint64_t *)&unk_100649BE0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 80) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  v5 = type metadata accessor for REMRDLUserOperationDetail(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001807C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_10002A750((uint64_t *)&unk_100649BE0);
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_100649EFC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006083C;
  return sub_10016EF3C(a1, v3, v4, v5, v6, v7, v8, v9);
}

double sub_100180884(uint64_t a1)
{
  uint64_t *v1;

  return sub_100162A40(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100180890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100181F60(a1, a2, a3);
}

double sub_1001808A8(void *a1)
{
  uint64_t *v1;

  return sub_100162820(a1, v1[2], v1[3], v1[4]);
}

double sub_1001808B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001628B4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t *sub_1001808C4(uint64_t *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *a1;
  v3 = (void *)a1[2];
  v4 = a1[7];
  v5 = a1[8];
  v6 = a1[9];
  v7 = a1[10];
  v8 = *((_BYTE *)a1 + 24);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_100180954(v3, v8);
  swift_release();
  sub_1000381B8(v4, v5);
  sub_1000381B8(v6, v7);
  return a1;
}

void sub_100180954(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease(a1);
  }
  else if (!a2)
  {

  }
}

void sub_100180970(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  sub_10016C384(a1, a2, v2, (uint64_t)&unk_1005F4750, (uint64_t)sub_10001B280);
}

double sub_10018099C(uint64_t a1)
{
  uint64_t v1;

  return sub_10016251C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

void sub_1001809AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100162600(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

double sub_1001809B8()
{
  uint64_t v0;

  return sub_10016279C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1001809C0(uint64_t a1, uint64_t a2, char a3, void (*a4)(_QWORD *), uint64_t a5, double a6, double a7)
{
  uint64_t v7;

  sub_1001623C4(a1, a2, a3, a4, a5, v7, a6, a7);
}

double sub_1001809DC(_QWORD *a1)
{
  uint64_t v1;

  return sub_100162498(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001809E4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(id *)(a1 + 104);
  v10 = v2;
  v11 = v3;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100180A6C(uint64_t a1)
{
  sub_100180ADC(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(void **)(a1 + 104), *(void **)(a1 + 112), *(void **)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216));
  return a1;
}

void sub_100180ADC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a1)
  {

    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);

    sub_100180D04(a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
  }
}

double sub_100180C04(_QWORD *a1)
{
  uint64_t v1;

  return sub_100161E50(a1, v1);
}

uint64_t sub_100180C0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  }
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100180C6C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRAssigneeCandidate - 1) + 32))(a2, a1);
  return a2;
}

void sub_100180CA8(uint64_t a1)
{
  uint64_t v1;

  sub_1001620E8(a1, (_QWORD *)(v1 + 16));
}

_QWORD *sub_100180CB0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

void sub_100180D04(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  if (a1)
  {

    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);

  }
}

uint64_t sub_100180D90()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 41);
}

double sub_100180DA8(uint64_t a1)
{
  uint64_t v1;

  return sub_100161DC8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_100180DBC(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_100161C38(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_100180DC8()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

double sub_100180DE0(uint64_t a1)
{
  uint64_t *v1;

  return sub_100161D44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100180DEC()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 40);
}

double sub_100180E04(uint64_t a1)
{
  uint64_t v1;

  return sub_100161904(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100180E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_100649F54);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_100161A50(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100180E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100649F64);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006083C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100649F60 + dword_100649F60))(a1, v4);
}

uint64_t sub_100180F10()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  if ((~*(_DWORD *)(v0 + 72) & 0xFELL) != 0)
    sub_1000866C4(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 89, 7);
}

double sub_100180F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10016178C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32);
}

uint64_t sub_100180F68()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_100180F80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649F74);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10015CAAC(a1, v4, v5, v6);
}

double sub_100180FF0(uint64_t a1)
{
  uint64_t v1;

  return sub_100162B38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1005F4958, (uint64_t)&unk_100649F88);
}

uint64_t sub_100181018()
{
  return sub_1001817DC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10018102C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100649F84);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10004A08C;
  return sub_1001614B4(a1, v4, v5, v7, v6);
}

uint64_t sub_1001810A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  if (*(unsigned __int8 *)(v0 + 32) != 255)

  return swift_deallocObject(v0, 48, 7);
}

double sub_1001810E4(char a1)
{
  uint64_t v1;

  return sub_100160CDC(a1 & 1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10018110C(uint64_t a1)
{
  uint64_t v1;

  return sub_100160C74(a1, v1);
}

uint64_t sub_100181114()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 33, 7);
}

void sub_100181140(uint64_t a1)
{
  uint64_t v1;

  sub_100160810(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

double sub_10018114C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001607BC(a1, v1);
}

double sub_100181154(uint64_t a1)
{
  uint64_t v1;

  return sub_100160530(a1, v1);
}

double sub_10018115C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001604B4(a1, v1);
}

double sub_100181164(uint64_t a1)
{
  uint64_t v1;

  return sub_1001603C4(a1, v1);
}

uint64_t sub_10018116C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_100181190(uint64_t a1)
{
  uint64_t v1;

  return sub_100160368(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_10018119C()
{
  uint64_t v0;

  sub_100160C18(v0);
}

uint64_t sub_1001811A4()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_1001811BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649FA4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10015E114(a1, v4, v5, v6);
}

uint64_t sub_100181228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100181254()
{
  uint64_t v0;

  sub_10015DEF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10018125C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

Class sub_100181290(UIMenuElementSize a1)
{
  uint64_t v1;

  return sub_10015D9F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_10018129C()
{
  return sub_10015DBE0();
}

double sub_1001812A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015DDA8(*(uint64_t (**)(void))(v1 + 16), a1);
}

double sub_1001812BC(char a1)
{
  uint64_t v1;

  return sub_10015D7C8(a1, v1);
}

uint64_t sub_1001812C4()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_1001812DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100649FD4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10015CAAC(a1, v4, v5, v6);
}

uint64_t sub_10018134C(uint64_t a1)
{
  return sub_100181744(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001AE6B0);
}

uint64_t sub_10018135C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 24, v3 | 7);
}

uint64_t sub_100181738(uint64_t a1)
{
  return sub_100181744(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001A7FE0);
}

uint64_t sub_100181744(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10016EE84(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(uint64_t (**)(_QWORD))(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 16), a2);
}

uint64_t sub_1001817B0()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release, 40);
}

uint64_t sub_1001817C8()
{
  return sub_1001817DC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001817DC(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_unknownObjectRelease(v2[2]);
  a1(v2[4]);
  a2(v2[5]);
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_100181828(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100649FF4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_10015C99C(a1, v4, v5, v7, v6);
}

uint64_t sub_1001818A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001BAA44(a1, a2);
}

void sub_1001818B8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if ((unsigned __int16)((unsigned __int16)a4 >> 10) <= 0x3Eu)
    sub_1001818CC(a1, a2, a3, a4);
}

void sub_1001818CC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  int v7;
  unsigned int v8;

  v7 = (unsigned __int16)a4 >> 14;
  if (v7 == 2 || v7 == 1)
  {
    swift_bridgeObjectRelease(a1);

    v8 = (a4 >> 8) & 0x3F;
  }
  else
  {
    if ((unsigned __int16)a4 >> 14)
      return;
    swift_bridgeObjectRelease(a1);

    LOBYTE(v8) = BYTE1(a4);
  }
  sub_1000B5F28(a3, a4, v8);
}

double sub_100181944(uint64_t a1)
{
  uint64_t v1;

  return sub_10015E808(a1, v1);
}

uint64_t sub_100181960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100181D20()
{
  return sub_100181D2C((uint64_t (*)(_QWORD, uint64_t))sub_10015E458);
}

uint64_t sub_100181D2C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_100181D70()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100181DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10064A034);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_10015C638(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100181E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10002A750((uint64_t *)&unk_100649BE0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v5 = type metadata accessor for REMRDLUserOperationDetail(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

double sub_100181EF0(NSObject *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_10002A750((uint64_t *)&unk_100649BE0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100160E1C(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100181F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t result;

  v6 = *(_QWORD *)(v3 + 144);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 136), a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 248))(a1, ObjectType, v6);
  *a3 = result;
  return result;
}

double sub_100181FC4(void *a1)
{
  uint64_t *v1;

  return sub_10015BFBC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100181FD4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100182008(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_10015C0B8(a1, a2, v2[2], v2[3], v2[4]);
}

double sub_100182018(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_10015C2A0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100182020()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10018205C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_10064A044);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006083C;
  return sub_10015C49C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_10064A1A8, (uint64_t)&nominal type descriptor for TTRIRemindersListItemAdjustedSelection.AssociatedItems);
}

uint64_t type metadata accessor for TTRIRemindersListItemAdjustedSelection(uint64_t a1)
{
  return sub_100007328(a1, qword_10064A0F8, (uint64_t)&nominal type descriptor for TTRIRemindersListItemAdjustedSelection);
}

uint64_t sub_100182118()
{
  return sub_100006AC8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_100182130(void *a1)
{
  uint64_t v1;

  return sub_10015BF04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (***)(_QWORD))(v1 + 32), *(void ***)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_100182140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v24 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;

  return swift_deallocObject(v0, v25, v3 | 7);
}

void sub_10018252C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10015B0AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSString *)(v1 + 32), *(void **)(v1 + 40), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100182584()
{
  uint64_t v0;
  void *v1;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  v1 = *(void **)(v0 + 136);
  if (v1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));

  }
  return swift_deallocObject(v0, 248, 7);
}

void sub_10018262C(uint64_t a1)
{
  uint64_t v1;

  sub_10015B8E8(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_100182638(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 88);
  v23 = *(void **)(a1 + 120);
  v24 = *(_QWORD *)(a1 + 112);
  v22 = *(_QWORD *)(a1 + 128);
  v20 = *(_QWORD *)(a1 + 144);
  v21 = *(_QWORD *)(a1 + 136);
  v18 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 168);
  v15 = *(_OWORD *)(a1 + 192);
  v16 = *(_OWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 208);
  v10 = *(void **)(a1 + 216);
  v11 = *(id *)(a1 + 104);
  v12 = v2;
  v13 = v3;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  sub_100182738(v24, v23, v22, v21, v20, v19, v18, v17, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v9, v10);
  return a1;
}

uint64_t sub_100182738(uint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v18;
  id v19;
  id v20;
  id v21;

  if (result)
  {
    v18 = (void *)result;
    v19 = a14;
    v20 = v18;
    v21 = a2;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    return swift_bridgeObjectRetain(a12);
  }
  return result;
}

uint64_t sub_1001827C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v24 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;

  return swift_deallocObject(v0, v25, v3 | 7);
}

uint64_t sub_100182BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10015BBD8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100182BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100182C28(uint64_t a1)
{
  uint64_t v1;

  return sub_10015BE6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100182C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_100183018(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_10064A094);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006083C;
  return sub_10015AC7C(a1, v6, v7, v8, v9, v11, v12);
}

_QWORD *sub_1001830D4(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(void **, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  void **v33;
  void *v34;
  uint64_t v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void **, uint64_t, uint64_t);
  id v41;
  uint64_t v42;
  void **v43;
  void *v44;
  uint64_t v45;
  void **v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(void **, uint64_t, uint64_t);
  id v51;
  uint64_t v52;
  void **v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void **v90;
  void (*v91)(char *, char *, uint64_t, __n128);
  __n128 v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  int v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  void *v144;
  id v145;
  int *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  id v186;
  void *v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  id v195;
  void *v196;
  id v197;
  uint64_t v198;
  void **v199;
  void **v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  id v205;
  void **v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  id v211;
  void **v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  uint64_t v216;
  void **v217;
  void **v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int (*v221)(void **, uint64_t, uint64_t);
  id v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  void **v226;
  void **v227;
  uint64_t v228;
  uint64_t v229;
  unsigned int (*v230)(void **, uint64_t, uint64_t);
  id v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  void **v235;
  void **v236;
  uint64_t v237;
  uint64_t v238;
  unsigned int (*v239)(void **, uint64_t, uint64_t);
  id v240;
  uint64_t v241;
  void *v242;
  id v243;
  void **v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  void *v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  id v260;
  void **v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  id v265;
  void **v266;
  uint64_t v267;
  uint64_t v268;
  void *v269;
  id v270;
  void **v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(char *, char *, uint64_t, __n128);
  __n128 v280;
  uint64_t v281;
  _QWORD *v282;
  _QWORD *v283;
  uint64_t v284;
  void *v285;
  id v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  void *v319;
  id v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  id v327;
  void *v328;
  id v329;
  int *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void *v351;
  id v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  void *v358;
  id v359;
  void *v360;
  id v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  void *v375;
  id v376;
  void *v377;
  id v378;
  uint64_t v379;
  uint64_t v381;
  char v382;
  unsigned __int8 v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  uint64_t v394;
  void *v395;
  _QWORD *v396;
  _QWORD *v397;
  _QWORD *v398;
  char *v399;
  unsigned __int8 v400;
  char v401;
  unsigned __int8 v402;
  char v403;
  _QWORD *v404;
  _QWORD *v405;
  _QWORD *v406;
  _QWORD *v407;
  void **v408;
  void **v409;
  void **v410;
  char *v411;
  void **v412;
  void **v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (void **)&a1[v7];
    v9 = (void **)((char *)a2 + v7);
    v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v9, v10))
    {
      case 0u:
        v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v396 = v3;
        v404 = v4;
        v389 = v6;
        switch(swift_getEnumCaseMultiPayload(v9, v11))
        {
          case 1u:
            v12 = *v9;
            *v8 = *v9;
            v13 = v12;
            v14 = v8;
            v15 = v11;
            v16 = 1;
            goto LABEL_43;
          case 2u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v8, v9, v103);
            v14 = v8;
            v15 = v11;
            v16 = 2;
            goto LABEL_43;
          case 3u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v8, v9, v104);
            v14 = v8;
            v15 = v11;
            v16 = 3;
            goto LABEL_43;
          case 4u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v8, v9, v105);
            v14 = v8;
            v15 = v11;
            v16 = 4;
            goto LABEL_43;
          case 5u:
            v106 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v8, v9, v106);
            v14 = v8;
            v15 = v11;
            v16 = 5;
            goto LABEL_43;
          case 6u:
            v107 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v8, v9, v107);
            v14 = v8;
            v15 = v11;
            v16 = 6;
            goto LABEL_43;
          case 8u:
            v108 = *v9;
            *v8 = *v9;
            v109 = v108;
            v14 = v8;
            v15 = v11;
            v16 = 8;
            goto LABEL_43;
          case 9u:
            v110 = *v9;
            *v8 = *v9;
            v111 = v110;
            v14 = v8;
            v15 = v11;
            v16 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
            break;
        }
        v112 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v113 = v112[5];
        v114 = (char *)v8 + v113;
        v115 = (char *)v9 + v113;
        v116 = *(uint64_t *)((char *)v9 + v113 + 8);
        if (v116)
        {
          v412 = v8;
          v385 = v10;
          *(_QWORD *)v114 = *(_QWORD *)v115;
          *((_QWORD *)v114 + 1) = v116;
          v117 = (void *)*((_QWORD *)v115 + 2);
          v118 = *((_QWORD *)v115 + 3);
          v120 = *((_QWORD *)v115 + 4);
          v119 = *((_QWORD *)v115 + 5);
          v121 = *((_QWORD *)v115 + 6);
          v381 = *((_QWORD *)v115 + 7);
          v122 = v115[64];
          swift_bridgeObjectRetain(v116);
          sub_10003E1F0(v117, v118, v120, v119, v121, v381, v122);
          *((_QWORD *)v114 + 2) = v117;
          *((_QWORD *)v114 + 3) = v118;
          *((_QWORD *)v114 + 4) = v120;
          *((_QWORD *)v114 + 5) = v119;
          *((_QWORD *)v114 + 6) = v121;
          *((_QWORD *)v114 + 7) = v381;
          v114[64] = v122;
          *(_DWORD *)(v114 + 65) = *(_DWORD *)(v115 + 65);
          v123 = v115[120];
          if (v123 == 255)
          {
            v124 = *(_OWORD *)(v115 + 88);
            *(_OWORD *)(v114 + 72) = *(_OWORD *)(v115 + 72);
            *(_OWORD *)(v114 + 88) = v124;
            *(_OWORD *)(v114 + 104) = *(_OWORD *)(v115 + 104);
            v114[120] = v115[120];
          }
          else
          {
            v382 = v123 & 1;
            v129 = (void *)*((_QWORD *)v115 + 9);
            v128 = *((_QWORD *)v115 + 10);
            v130 = *((_QWORD *)v115 + 11);
            v131 = *((_QWORD *)v115 + 12);
            v132 = *((_QWORD *)v115 + 13);
            v133 = *((_QWORD *)v115 + 14);
            sub_10002B764(v129, v128, v130, v131, v132, v133, v123 & 1);
            *((_QWORD *)v114 + 9) = v129;
            *((_QWORD *)v114 + 10) = v128;
            *((_QWORD *)v114 + 11) = v130;
            *((_QWORD *)v114 + 12) = v131;
            *((_QWORD *)v114 + 13) = v132;
            *((_QWORD *)v114 + 14) = v133;
            v114[120] = v382;
          }
          v3 = v396;
          v4 = v404;
          v10 = v385;
          v6 = v389;
          v114[121] = v115[121];
          v8 = v412;
        }
        else
        {
          v125 = *((_OWORD *)v115 + 5);
          *((_OWORD *)v114 + 4) = *((_OWORD *)v115 + 4);
          *((_OWORD *)v114 + 5) = v125;
          *((_OWORD *)v114 + 6) = *((_OWORD *)v115 + 6);
          *(_OWORD *)(v114 + 106) = *(_OWORD *)(v115 + 106);
          v126 = *((_OWORD *)v115 + 1);
          *(_OWORD *)v114 = *(_OWORD *)v115;
          *((_OWORD *)v114 + 1) = v126;
          v127 = *((_OWORD *)v115 + 3);
          *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
          *((_OWORD *)v114 + 3) = v127;
        }
        *((_BYTE *)v8 + v112[6]) = *((_BYTE *)v9 + v112[6]);
        *((_BYTE *)v8 + v112[7]) = *((_BYTE *)v9 + v112[7]);
        *((_BYTE *)v8 + v112[8]) = *((_BYTE *)v9 + v112[8]);
        *((_BYTE *)v8 + v112[9]) = *((_BYTE *)v9 + v112[9]);
        *((_BYTE *)v8 + v112[10]) = *((_BYTE *)v9 + v112[10]);
        v134 = v112[11];
        v135 = *(void **)((char *)v9 + v134);
        *(void **)((char *)v8 + v134) = v135;
        v136 = v135;
        v56 = v8;
        v57 = v10;
        v58 = 0;
        goto LABEL_100;
      case 1u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v397 = v3;
        v405 = v4;
        v390 = v6;
        switch(swift_getEnumCaseMultiPayload(v9, v18))
        {
          case 1u:
            v19 = *v9;
            *v8 = *v9;
            v20 = v19;
            v21 = v8;
            v22 = v18;
            v23 = 1;
            goto LABEL_59;
          case 2u:
            v137 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v8, v9, v137);
            v21 = v8;
            v22 = v18;
            v23 = 2;
            goto LABEL_59;
          case 3u:
            v138 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v8, v9, v138);
            v21 = v8;
            v22 = v18;
            v23 = 3;
            goto LABEL_59;
          case 4u:
            v139 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v8, v9, v139);
            v21 = v8;
            v22 = v18;
            v23 = 4;
            goto LABEL_59;
          case 5u:
            v140 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v8, v9, v140);
            v21 = v8;
            v22 = v18;
            v23 = 5;
            goto LABEL_59;
          case 6u:
            v141 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v8, v9, v141);
            v21 = v8;
            v22 = v18;
            v23 = 6;
            goto LABEL_59;
          case 8u:
            v142 = *v9;
            *v8 = *v9;
            v143 = v142;
            v21 = v8;
            v22 = v18;
            v23 = 8;
            goto LABEL_59;
          case 9u:
            v144 = *v9;
            *v8 = *v9;
            v145 = v144;
            v21 = v8;
            v22 = v18;
            v23 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v146 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v147 = v146[5];
        v148 = (char *)v8 + v147;
        v149 = (char *)v9 + v147;
        v150 = *(uint64_t *)((char *)v9 + v147 + 8);
        if (v150)
        {
          v413 = v8;
          v386 = v10;
          *(_QWORD *)v148 = *(_QWORD *)v149;
          *((_QWORD *)v148 + 1) = v150;
          v152 = (void *)*((_QWORD *)v149 + 2);
          v151 = *((_QWORD *)v149 + 3);
          v153 = *((_QWORD *)v149 + 4);
          v154 = *((_QWORD *)v149 + 5);
          v155 = *((_QWORD *)v149 + 6);
          v156 = *((_QWORD *)v149 + 7);
          v383 = v149[64];
          swift_bridgeObjectRetain(v150);
          sub_10003E1F0(v152, v151, v153, v154, v155, v156, v383);
          *((_QWORD *)v148 + 2) = v152;
          *((_QWORD *)v148 + 3) = v151;
          *((_QWORD *)v148 + 4) = v153;
          *((_QWORD *)v148 + 5) = v154;
          *((_QWORD *)v148 + 6) = v155;
          *((_QWORD *)v148 + 7) = v156;
          v148[64] = v383;
          *(_DWORD *)(v148 + 65) = *(_DWORD *)(v149 + 65);
          v157 = v149[120];
          if (v157 == 255)
          {
            v158 = *(_OWORD *)(v149 + 88);
            *(_OWORD *)(v148 + 72) = *(_OWORD *)(v149 + 72);
            *(_OWORD *)(v148 + 88) = v158;
            *(_OWORD *)(v148 + 104) = *(_OWORD *)(v149 + 104);
            v148[120] = v149[120];
          }
          else
          {
            v384 = v157 & 1;
            v163 = (void *)*((_QWORD *)v149 + 9);
            v162 = *((_QWORD *)v149 + 10);
            v164 = *((_QWORD *)v149 + 11);
            v165 = *((_QWORD *)v149 + 12);
            v166 = *((_QWORD *)v149 + 13);
            v167 = *((_QWORD *)v149 + 14);
            sub_10002B764(v163, v162, v164, v165, v166, v167, v157 & 1);
            *((_QWORD *)v148 + 9) = v163;
            *((_QWORD *)v148 + 10) = v162;
            *((_QWORD *)v148 + 11) = v164;
            *((_QWORD *)v148 + 12) = v165;
            *((_QWORD *)v148 + 13) = v166;
            *((_QWORD *)v148 + 14) = v167;
            v148[120] = v384;
          }
          v3 = v397;
          v4 = v405;
          v10 = v386;
          v6 = v390;
          v148[121] = v149[121];
          v8 = v413;
        }
        else
        {
          v159 = *((_OWORD *)v149 + 5);
          *((_OWORD *)v148 + 4) = *((_OWORD *)v149 + 4);
          *((_OWORD *)v148 + 5) = v159;
          *((_OWORD *)v148 + 6) = *((_OWORD *)v149 + 6);
          *(_OWORD *)(v148 + 106) = *(_OWORD *)(v149 + 106);
          v160 = *((_OWORD *)v149 + 1);
          *(_OWORD *)v148 = *(_OWORD *)v149;
          *((_OWORD *)v148 + 1) = v160;
          v161 = *((_OWORD *)v149 + 3);
          *((_OWORD *)v148 + 2) = *((_OWORD *)v149 + 2);
          *((_OWORD *)v148 + 3) = v161;
        }
        *((_BYTE *)v8 + v146[6]) = *((_BYTE *)v9 + v146[6]);
        *((_BYTE *)v8 + v146[7]) = *((_BYTE *)v9 + v146[7]);
        *((_BYTE *)v8 + v146[8]) = *((_BYTE *)v9 + v146[8]);
        *((_BYTE *)v8 + v146[9]) = *((_BYTE *)v9 + v146[9]);
        *((_BYTE *)v8 + v146[10]) = *((_BYTE *)v9 + v146[10]);
        v168 = v146[11];
        v169 = *(void **)((char *)v9 + v168);
        *(void **)((char *)v8 + v168) = v169;
        v170 = v169;
        v56 = v8;
        v57 = v10;
        v58 = 1;
        goto LABEL_100;
      case 2u:
        v24 = *v9;
        *v8 = *v9;
        v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v408 = v8;
        v26 = (void **)((char *)v8 + v25);
        v27 = (void **)((char *)v9 + v25);
        v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48);
        v31 = v24;
        if (v30(v27, 1, v28))
        {
          v32 = sub_10002A750(&qword_100644980);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          v33 = v408;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v27, v28))
          {
            case 1u:
              v71 = *v27;
              *v26 = *v27;
              v72 = v71;
              v73 = v26;
              v74 = v28;
              v75 = 1;
              goto LABEL_75;
            case 2u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v26, v27, v171);
              v73 = v26;
              v74 = v28;
              v75 = 2;
              goto LABEL_75;
            case 3u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v26, v27, v172);
              v73 = v26;
              v74 = v28;
              v75 = 3;
              goto LABEL_75;
            case 4u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v26, v27, v173);
              v73 = v26;
              v74 = v28;
              v75 = 4;
              goto LABEL_75;
            case 5u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v26, v27, v174);
              v73 = v26;
              v74 = v28;
              v75 = 5;
              goto LABEL_75;
            case 6u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v26, v27, v175);
              v73 = v26;
              v74 = v28;
              v75 = 6;
              goto LABEL_75;
            case 8u:
              v176 = *v27;
              *v26 = *v27;
              v177 = v176;
              v73 = v26;
              v74 = v28;
              v75 = 8;
              goto LABEL_75;
            case 9u:
              v178 = *v27;
              *v26 = *v27;
              v179 = v178;
              v73 = v26;
              v74 = v28;
              v75 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(v26, v27, *(_QWORD *)(v29 + 64));
              break;
          }
          v33 = v408;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v56 = v33;
        v57 = v10;
        v58 = 2;
        goto LABEL_100;
      case 3u:
        v34 = *v9;
        *v8 = *v9;
        v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v409 = v8;
        v36 = (void **)((char *)v8 + v35);
        v37 = (void **)((char *)v9 + v35);
        v38 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v39 = *(_QWORD *)(v38 - 8);
        v40 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48);
        v41 = v34;
        if (v40(v37, 1, v38))
        {
          v42 = sub_10002A750(&qword_100644980);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          v43 = v409;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v37, v38))
          {
            case 1u:
              v76 = *v37;
              *v36 = *v37;
              v77 = v76;
              v78 = v36;
              v79 = v38;
              v80 = 1;
              goto LABEL_86;
            case 2u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v36, v37, v180);
              v78 = v36;
              v79 = v38;
              v80 = 2;
              goto LABEL_86;
            case 3u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v36, v37, v181);
              v78 = v36;
              v79 = v38;
              v80 = 3;
              goto LABEL_86;
            case 4u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v36, v37, v182);
              v78 = v36;
              v79 = v38;
              v80 = 4;
              goto LABEL_86;
            case 5u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v36, v37, v183);
              v78 = v36;
              v79 = v38;
              v80 = 5;
              goto LABEL_86;
            case 6u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v36, v37, v184);
              v78 = v36;
              v79 = v38;
              v80 = 6;
              goto LABEL_86;
            case 8u:
              v185 = *v37;
              *v36 = *v37;
              v186 = v185;
              v78 = v36;
              v79 = v38;
              v80 = 8;
              goto LABEL_86;
            case 9u:
              v187 = *v37;
              *v36 = *v37;
              v188 = v187;
              v78 = v36;
              v79 = v38;
              v80 = 9;
LABEL_86:
              swift_storeEnumTagMultiPayload(v78, v79, v80);
              break;
            default:
              memcpy(v36, v37, *(_QWORD *)(v39 + 64));
              break;
          }
          v43 = v409;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        v56 = v43;
        v57 = v10;
        v58 = 3;
        goto LABEL_100;
      case 4u:
        v44 = *v9;
        *v8 = *v9;
        v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v410 = v8;
        v46 = (void **)((char *)v8 + v45);
        v47 = (void **)((char *)v9 + v45);
        v48 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v49 = *(_QWORD *)(v48 - 8);
        v50 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v49 + 48);
        v51 = v44;
        if (v50(v47, 1, v48))
        {
          v52 = sub_10002A750(&qword_100644980);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          v53 = v410;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v47, v48))
          {
            case 1u:
              v81 = *v47;
              *v46 = *v47;
              v82 = v81;
              v83 = v46;
              v84 = v48;
              v85 = 1;
              goto LABEL_97;
            case 2u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v46, v47, v189);
              v83 = v46;
              v84 = v48;
              v85 = 2;
              goto LABEL_97;
            case 3u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v46, v47, v190);
              v83 = v46;
              v84 = v48;
              v85 = 3;
              goto LABEL_97;
            case 4u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v46, v47, v191);
              v83 = v46;
              v84 = v48;
              v85 = 4;
              goto LABEL_97;
            case 5u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v46, v47, v192);
              v83 = v46;
              v84 = v48;
              v85 = 5;
              goto LABEL_97;
            case 6u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v46, v47, v193);
              v83 = v46;
              v84 = v48;
              v85 = 6;
              goto LABEL_97;
            case 8u:
              v194 = *v47;
              *v46 = *v47;
              v195 = v194;
              v83 = v46;
              v84 = v48;
              v85 = 8;
              goto LABEL_97;
            case 9u:
              v196 = *v47;
              *v46 = *v47;
              v197 = v196;
              v83 = v46;
              v84 = v48;
              v85 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v83, v84, v85);
              break;
            default:
              memcpy(v46, v47, *(_QWORD *)(v49 + 64));
              break;
          }
          v53 = v410;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
        }
        v56 = v53;
        v57 = v10;
        v58 = 4;
        goto LABEL_100;
      case 5u:
        *v8 = *v9;
        *((_BYTE *)v8 + 8) = *((_BYTE *)v9 + 8);
        *(_WORD *)((char *)v8 + 9) = *(_WORD *)((char *)v9 + 9);
        v54 = v9[2];
        v8[2] = v54;
        v55 = v54;
        v56 = v8;
        v57 = v10;
        v58 = 5;
        goto LABEL_100;
      case 6u:
        v66 = *v9;
        *v8 = *v9;
        v67 = v66;
        v56 = v8;
        v57 = v10;
        v58 = 6;
        goto LABEL_100;
      case 7u:
        v59 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48))(v9, 1, v59))
        {
          v61 = sub_10002A750(&qword_100644600);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          v86 = *v9;
          *v8 = *v9;
          v87 = *(int *)(v59 + 20);
          v411 = (char *)v8 + v87;
          v398 = v3;
          v88 = (char *)v9 + v87;
          v391 = v6;
          v89 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v90 = v8;
          v91 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v89 - 8) + 16);
          v92 = swift_bridgeObjectRetain(v86);
          v93 = v88;
          v94 = v89;
          v6 = v391;
          v3 = v398;
          v91(v411, v93, v94, v92);
          v8 = v90;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v60 + 56))(v90, 0, 1, v59);
        }
        v95 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v96 = (void **)((char *)v8 + v95);
        v97 = (void **)((char *)v9 + v95);
        v98 = v97[1];
        if (v98)
        {
          *v96 = *v97;
          v96[1] = v98;
          v99 = (void *)v97[2];
          v96[2] = v99;
          swift_bridgeObjectRetain(v98);
          v100 = v99;
        }
        else
        {
          *(_OWORD *)v96 = *(_OWORD *)v97;
          v96[2] = v97[2];
        }
        v56 = v8;
        v57 = v10;
        v58 = 7;
        goto LABEL_100;
      case 8u:
        v68 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v69 + 48))(v9, 1, v68))
        {
          v70 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          v101 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v8, v9, v101);
          *((_BYTE *)v8 + *(int *)(v68 + 20)) = *((_BYTE *)v9 + *(int *)(v68 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v69 + 56))(v8, 0, 1, v68);
        }
        v102 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v8 + *(int *)(v102 + 20)) = *(void **)((char *)v9 + *(int *)(v102 + 20));
        v56 = v8;
        v57 = v10;
        v58 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)v8 = *(_BYTE *)v9;
        v62 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v63 = (char *)v8 + v62;
        v64 = (char *)v9 + v62;
        v65 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        v56 = v8;
        v57 = v10;
        v58 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v56, v57, v58);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v198 = *(int *)(v6 + 24);
    v199 = (void **)((char *)v4 + v198);
    v200 = (void **)((char *)v3 + v198);
    v201 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v201 + 48))(v200, 2, v10))
    {
      v202 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
      memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v200, v10))
      {
        case 0u:
          v203 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v406 = v4;
          v414 = v201;
          v387 = v10;
          switch(swift_getEnumCaseMultiPayload(v200, v203))
          {
            case 1u:
              v204 = *v200;
              *v199 = *v200;
              v205 = v204;
              v206 = v199;
              v207 = v203;
              v208 = 1;
              goto LABEL_143;
            case 2u:
              v289 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v199, v200, v289);
              v206 = v199;
              v207 = v203;
              v208 = 2;
              goto LABEL_143;
            case 3u:
              v290 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v199, v200, v290);
              v206 = v199;
              v207 = v203;
              v208 = 3;
              goto LABEL_143;
            case 4u:
              v291 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v199, v200, v291);
              v206 = v199;
              v207 = v203;
              v208 = 4;
              goto LABEL_143;
            case 5u:
              v292 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v199, v200, v292);
              v206 = v199;
              v207 = v203;
              v208 = 5;
              goto LABEL_143;
            case 6u:
              v293 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(v199, v200, v293);
              v206 = v199;
              v207 = v203;
              v208 = 6;
              goto LABEL_143;
            case 8u:
              v294 = *v200;
              *v199 = *v200;
              v295 = v294;
              v206 = v199;
              v207 = v203;
              v208 = 8;
              goto LABEL_143;
            case 9u:
              v296 = *v200;
              *v199 = *v200;
              v297 = v296;
              v206 = v199;
              v207 = v203;
              v208 = 9;
LABEL_143:
              swift_storeEnumTagMultiPayload(v206, v207, v208);
              break;
            default:
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
              break;
          }
          v298 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v299 = v298[5];
          v300 = (char *)v199 + v299;
          v301 = (char *)v200 + v299;
          v302 = *(uint64_t *)((char *)v200 + v299 + 8);
          if (v302)
          {
            *(_QWORD *)v300 = *(_QWORD *)v301;
            *((_QWORD *)v300 + 1) = v302;
            v303 = (void *)*((_QWORD *)v301 + 2);
            v304 = *((_QWORD *)v301 + 3);
            v305 = *((_QWORD *)v301 + 4);
            v306 = *((_QWORD *)v301 + 5);
            v307 = *((_QWORD *)v301 + 6);
            v392 = *((_QWORD *)v301 + 7);
            v400 = v301[64];
            swift_bridgeObjectRetain(v302);
            sub_10003E1F0(v303, v304, v305, v306, v307, v392, v400);
            *((_QWORD *)v300 + 2) = v303;
            *((_QWORD *)v300 + 3) = v304;
            *((_QWORD *)v300 + 4) = v305;
            *((_QWORD *)v300 + 5) = v306;
            *((_QWORD *)v300 + 6) = v307;
            *((_QWORD *)v300 + 7) = v392;
            v300[64] = v400;
            *(_DWORD *)(v300 + 65) = *(_DWORD *)(v301 + 65);
            v308 = v301[120];
            if (v308 == 255)
            {
              v309 = *(_OWORD *)(v301 + 88);
              *(_OWORD *)(v300 + 72) = *(_OWORD *)(v301 + 72);
              *(_OWORD *)(v300 + 88) = v309;
              *(_OWORD *)(v300 + 104) = *(_OWORD *)(v301 + 104);
              v300[120] = v301[120];
            }
            else
            {
              v401 = v308 & 1;
              v313 = *((_QWORD *)v301 + 10);
              v393 = (void *)*((_QWORD *)v301 + 9);
              v314 = *((_QWORD *)v301 + 11);
              v315 = *((_QWORD *)v301 + 12);
              v316 = *((_QWORD *)v301 + 13);
              v317 = *((_QWORD *)v301 + 14);
              sub_10002B764(v393, v313, v314, v315, v316, v317, v308 & 1);
              *((_QWORD *)v300 + 9) = v393;
              *((_QWORD *)v300 + 10) = v313;
              *((_QWORD *)v300 + 11) = v314;
              *((_QWORD *)v300 + 12) = v315;
              *((_QWORD *)v300 + 13) = v316;
              *((_QWORD *)v300 + 14) = v317;
              v300[120] = v401;
            }
            v4 = v406;
            v201 = v414;
            v10 = v387;
            v300[121] = v301[121];
          }
          else
          {
            v310 = *((_OWORD *)v301 + 5);
            *((_OWORD *)v300 + 4) = *((_OWORD *)v301 + 4);
            *((_OWORD *)v300 + 5) = v310;
            *((_OWORD *)v300 + 6) = *((_OWORD *)v301 + 6);
            *(_OWORD *)(v300 + 106) = *(_OWORD *)(v301 + 106);
            v311 = *((_OWORD *)v301 + 1);
            *(_OWORD *)v300 = *(_OWORD *)v301;
            *((_OWORD *)v300 + 1) = v311;
            v312 = *((_OWORD *)v301 + 3);
            *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
            *((_OWORD *)v300 + 3) = v312;
          }
          *((_BYTE *)v199 + v298[6]) = *((_BYTE *)v200 + v298[6]);
          *((_BYTE *)v199 + v298[7]) = *((_BYTE *)v200 + v298[7]);
          *((_BYTE *)v199 + v298[8]) = *((_BYTE *)v200 + v298[8]);
          *((_BYTE *)v199 + v298[9]) = *((_BYTE *)v200 + v298[9]);
          *((_BYTE *)v199 + v298[10]) = *((_BYTE *)v200 + v298[10]);
          v318 = v298[11];
          v319 = *(void **)((char *)v200 + v318);
          *(void **)((char *)v199 + v318) = v319;
          v320 = v319;
          v244 = v199;
          v245 = v10;
          v246 = 0;
          goto LABEL_200;
        case 1u:
          v209 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v407 = v4;
          v415 = v201;
          v388 = v10;
          switch(swift_getEnumCaseMultiPayload(v200, v209))
          {
            case 1u:
              v210 = *v200;
              *v199 = *v200;
              v211 = v210;
              v212 = v199;
              v213 = v209;
              v214 = 1;
              goto LABEL_159;
            case 2u:
              v321 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v199, v200, v321);
              v212 = v199;
              v213 = v209;
              v214 = 2;
              goto LABEL_159;
            case 3u:
              v322 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v199, v200, v322);
              v212 = v199;
              v213 = v209;
              v214 = 3;
              goto LABEL_159;
            case 4u:
              v323 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v199, v200, v323);
              v212 = v199;
              v213 = v209;
              v214 = 4;
              goto LABEL_159;
            case 5u:
              v324 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v199, v200, v324);
              v212 = v199;
              v213 = v209;
              v214 = 5;
              goto LABEL_159;
            case 6u:
              v325 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v199, v200, v325);
              v212 = v199;
              v213 = v209;
              v214 = 6;
              goto LABEL_159;
            case 8u:
              v326 = *v200;
              *v199 = *v200;
              v327 = v326;
              v212 = v199;
              v213 = v209;
              v214 = 8;
              goto LABEL_159;
            case 9u:
              v328 = *v200;
              *v199 = *v200;
              v329 = v328;
              v212 = v199;
              v213 = v209;
              v214 = 9;
LABEL_159:
              swift_storeEnumTagMultiPayload(v212, v213, v214);
              break;
            default:
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
              break;
          }
          v330 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v331 = v330[5];
          v332 = (char *)v199 + v331;
          v333 = (char *)v200 + v331;
          v334 = *(uint64_t *)((char *)v200 + v331 + 8);
          if (v334)
          {
            *(_QWORD *)v332 = *(_QWORD *)v333;
            *((_QWORD *)v332 + 1) = v334;
            v335 = (void *)*((_QWORD *)v333 + 2);
            v336 = *((_QWORD *)v333 + 3);
            v337 = *((_QWORD *)v333 + 4);
            v338 = *((_QWORD *)v333 + 5);
            v339 = *((_QWORD *)v333 + 6);
            v394 = *((_QWORD *)v333 + 7);
            v402 = v333[64];
            swift_bridgeObjectRetain(v334);
            sub_10003E1F0(v335, v336, v337, v338, v339, v394, v402);
            *((_QWORD *)v332 + 2) = v335;
            *((_QWORD *)v332 + 3) = v336;
            *((_QWORD *)v332 + 4) = v337;
            *((_QWORD *)v332 + 5) = v338;
            *((_QWORD *)v332 + 6) = v339;
            *((_QWORD *)v332 + 7) = v394;
            v332[64] = v402;
            *(_DWORD *)(v332 + 65) = *(_DWORD *)(v333 + 65);
            v340 = v333[120];
            if (v340 == 255)
            {
              v341 = *(_OWORD *)(v333 + 88);
              *(_OWORD *)(v332 + 72) = *(_OWORD *)(v333 + 72);
              *(_OWORD *)(v332 + 88) = v341;
              *(_OWORD *)(v332 + 104) = *(_OWORD *)(v333 + 104);
              v332[120] = v333[120];
            }
            else
            {
              v403 = v340 & 1;
              v345 = *((_QWORD *)v333 + 10);
              v395 = (void *)*((_QWORD *)v333 + 9);
              v346 = *((_QWORD *)v333 + 11);
              v347 = *((_QWORD *)v333 + 12);
              v348 = *((_QWORD *)v333 + 13);
              v349 = *((_QWORD *)v333 + 14);
              sub_10002B764(v395, v345, v346, v347, v348, v349, v340 & 1);
              *((_QWORD *)v332 + 9) = v395;
              *((_QWORD *)v332 + 10) = v345;
              *((_QWORD *)v332 + 11) = v346;
              *((_QWORD *)v332 + 12) = v347;
              *((_QWORD *)v332 + 13) = v348;
              *((_QWORD *)v332 + 14) = v349;
              v332[120] = v403;
            }
            v4 = v407;
            v201 = v415;
            v10 = v388;
            v332[121] = v333[121];
          }
          else
          {
            v342 = *((_OWORD *)v333 + 5);
            *((_OWORD *)v332 + 4) = *((_OWORD *)v333 + 4);
            *((_OWORD *)v332 + 5) = v342;
            *((_OWORD *)v332 + 6) = *((_OWORD *)v333 + 6);
            *(_OWORD *)(v332 + 106) = *(_OWORD *)(v333 + 106);
            v343 = *((_OWORD *)v333 + 1);
            *(_OWORD *)v332 = *(_OWORD *)v333;
            *((_OWORD *)v332 + 1) = v343;
            v344 = *((_OWORD *)v333 + 3);
            *((_OWORD *)v332 + 2) = *((_OWORD *)v333 + 2);
            *((_OWORD *)v332 + 3) = v344;
          }
          *((_BYTE *)v199 + v330[6]) = *((_BYTE *)v200 + v330[6]);
          *((_BYTE *)v199 + v330[7]) = *((_BYTE *)v200 + v330[7]);
          *((_BYTE *)v199 + v330[8]) = *((_BYTE *)v200 + v330[8]);
          *((_BYTE *)v199 + v330[9]) = *((_BYTE *)v200 + v330[9]);
          *((_BYTE *)v199 + v330[10]) = *((_BYTE *)v200 + v330[10]);
          v350 = v330[11];
          v351 = *(void **)((char *)v200 + v350);
          *(void **)((char *)v199 + v350) = v351;
          v352 = v351;
          v244 = v199;
          v245 = v10;
          v246 = 1;
          goto LABEL_200;
        case 2u:
          v215 = *v200;
          *v199 = *v200;
          v216 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v217 = (void **)((char *)v199 + v216);
          v218 = (void **)((char *)v200 + v216);
          v219 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v220 = *(_QWORD *)(v219 - 8);
          v221 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v220 + 48);
          v222 = v215;
          if (v221(v218, 1, v219))
          {
            v223 = sub_10002A750(&qword_100644980);
            memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v218, v219))
            {
              case 1u:
                v259 = *v218;
                *v217 = *v218;
                v260 = v259;
                v261 = v217;
                v262 = v219;
                v263 = 1;
                goto LABEL_175;
              case 2u:
                v353 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v217, v218, v353);
                v261 = v217;
                v262 = v219;
                v263 = 2;
                goto LABEL_175;
              case 3u:
                v354 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v217, v218, v354);
                v261 = v217;
                v262 = v219;
                v263 = 3;
                goto LABEL_175;
              case 4u:
                v355 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v217, v218, v355);
                v261 = v217;
                v262 = v219;
                v263 = 4;
                goto LABEL_175;
              case 5u:
                v356 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v217, v218, v356);
                v261 = v217;
                v262 = v219;
                v263 = 5;
                goto LABEL_175;
              case 6u:
                v357 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v217, v218, v357);
                v261 = v217;
                v262 = v219;
                v263 = 6;
                goto LABEL_175;
              case 8u:
                v358 = *v218;
                *v217 = *v218;
                v359 = v358;
                v261 = v217;
                v262 = v219;
                v263 = 8;
                goto LABEL_175;
              case 9u:
                v360 = *v218;
                *v217 = *v218;
                v361 = v360;
                v261 = v217;
                v262 = v219;
                v263 = 9;
LABEL_175:
                swift_storeEnumTagMultiPayload(v261, v262, v263);
                break;
              default:
                memcpy(v217, v218, *(_QWORD *)(v220 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
          }
          v244 = v199;
          v245 = v10;
          v246 = 2;
          goto LABEL_200;
        case 3u:
          v224 = *v200;
          *v199 = *v200;
          v225 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v226 = (void **)((char *)v199 + v225);
          v227 = (void **)((char *)v200 + v225);
          v228 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v229 = *(_QWORD *)(v228 - 8);
          v230 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v229 + 48);
          v231 = v224;
          if (v230(v227, 1, v228))
          {
            v232 = sub_10002A750(&qword_100644980);
            memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v227, v228))
            {
              case 1u:
                v264 = *v227;
                *v226 = *v227;
                v265 = v264;
                v266 = v226;
                v267 = v228;
                v268 = 1;
                goto LABEL_197;
              case 2u:
                v362 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v226, v227, v362);
                v266 = v226;
                v267 = v228;
                v268 = 2;
                goto LABEL_197;
              case 3u:
                v363 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v226, v227, v363);
                v266 = v226;
                v267 = v228;
                v268 = 3;
                goto LABEL_197;
              case 4u:
                v364 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v226, v227, v364);
                v266 = v226;
                v267 = v228;
                v268 = 4;
                goto LABEL_197;
              case 5u:
                v379 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v226, v227, v379);
                v266 = v226;
                v267 = v228;
                v268 = 5;
                goto LABEL_197;
              case 6u:
                v365 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v226, v227, v365);
                v266 = v226;
                v267 = v228;
                v268 = 6;
                goto LABEL_197;
              case 8u:
                v366 = *v227;
                *v226 = *v227;
                v367 = v366;
                v266 = v226;
                v267 = v228;
                v268 = 8;
                goto LABEL_197;
              case 9u:
                v368 = *v227;
                *v226 = *v227;
                v369 = v368;
                v266 = v226;
                v267 = v228;
                v268 = 9;
LABEL_197:
                swift_storeEnumTagMultiPayload(v266, v267, v268);
                break;
              default:
                memcpy(v226, v227, *(_QWORD *)(v229 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
          }
          v244 = v199;
          v245 = v10;
          v246 = 3;
          goto LABEL_200;
        case 4u:
          v233 = *v200;
          *v199 = *v200;
          v234 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v235 = (void **)((char *)v199 + v234);
          v236 = (void **)((char *)v200 + v234);
          v237 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v238 = *(_QWORD *)(v237 - 8);
          v239 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v238 + 48);
          v240 = v233;
          if (v239(v236, 1, v237))
          {
            v241 = sub_10002A750(&qword_100644980);
            memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v236, v237))
            {
              case 1u:
                v269 = *v236;
                *v235 = *v236;
                v270 = v269;
                v271 = v235;
                v272 = v237;
                v273 = 1;
                goto LABEL_193;
              case 2u:
                v370 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v235, v236, v370);
                v271 = v235;
                v272 = v237;
                v273 = 2;
                goto LABEL_193;
              case 3u:
                v371 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v235, v236, v371);
                v271 = v235;
                v272 = v237;
                v273 = 3;
                goto LABEL_193;
              case 4u:
                v372 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v235, v236, v372);
                v271 = v235;
                v272 = v237;
                v273 = 4;
                goto LABEL_193;
              case 5u:
                v373 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v235, v236, v373);
                v271 = v235;
                v272 = v237;
                v273 = 5;
                goto LABEL_193;
              case 6u:
                v374 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v235, v236, v374);
                v271 = v235;
                v272 = v237;
                v273 = 6;
                goto LABEL_193;
              case 8u:
                v375 = *v236;
                *v235 = *v236;
                v376 = v375;
                v271 = v235;
                v272 = v237;
                v273 = 8;
                goto LABEL_193;
              case 9u:
                v377 = *v236;
                *v235 = *v236;
                v378 = v377;
                v271 = v235;
                v272 = v237;
                v273 = 9;
LABEL_193:
                swift_storeEnumTagMultiPayload(v271, v272, v273);
                break;
              default:
                memcpy(v235, v236, *(_QWORD *)(v238 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
          }
          v244 = v199;
          v245 = v10;
          v246 = 4;
          goto LABEL_200;
        case 5u:
          *v199 = *v200;
          *((_BYTE *)v199 + 8) = *((_BYTE *)v200 + 8);
          *(_WORD *)((char *)v199 + 9) = *(_WORD *)((char *)v200 + 9);
          v242 = v200[2];
          v199[2] = v242;
          v243 = v242;
          v244 = v199;
          v245 = v10;
          v246 = 5;
          goto LABEL_200;
        case 6u:
          v254 = *v200;
          *v199 = *v200;
          v255 = v254;
          v244 = v199;
          v245 = v10;
          v246 = 6;
          goto LABEL_200;
        case 7u:
          v416 = v201;
          v247 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v248 = *(_QWORD *)(v247 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v248 + 48))(v200, 1, v247))
          {
            v249 = sub_10002A750(&qword_100644600);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
          }
          else
          {
            v274 = *v200;
            *v199 = *v200;
            v275 = *(int *)(v247 + 20);
            v399 = (char *)v199 + v275;
            v276 = (char *)v200 + v275;
            v277 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v278 = v10;
            v279 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v277 - 8) + 16);
            v280 = swift_bridgeObjectRetain(v274);
            v279(v399, v276, v277, v280);
            v10 = v278;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v248 + 56))(v199, 0, 1, v247);
          }
          v281 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v282 = (void **)((char *)v199 + v281);
          v283 = (void **)((char *)v200 + v281);
          v284 = v283[1];
          v201 = v416;
          if (v284)
          {
            *v282 = *v283;
            v282[1] = v284;
            v285 = (void *)v283[2];
            v282[2] = v285;
            swift_bridgeObjectRetain(v284);
            v286 = v285;
          }
          else
          {
            *(_OWORD *)v282 = *(_OWORD *)v283;
            v282[2] = v283[2];
          }
          v244 = v199;
          v245 = v10;
          v246 = 7;
          goto LABEL_200;
        case 8u:
          v256 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v257 = *(_QWORD *)(v256 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v257 + 48))(v200, 1, v256))
          {
            v258 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
          }
          else
          {
            v287 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(v199, v200, v287);
            *((_BYTE *)v199 + *(int *)(v256 + 20)) = *((_BYTE *)v200 + *(int *)(v256 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v257 + 56))(v199, 0, 1, v256);
          }
          v288 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v199 + *(int *)(v288 + 20)) = *(void **)((char *)v200 + *(int *)(v288 + 20));
          v244 = v199;
          v245 = v10;
          v246 = 8;
          goto LABEL_200;
        case 9u:
          *(_BYTE *)v199 = *(_BYTE *)v200;
          v250 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v251 = (char *)v199 + v250;
          v252 = (char *)v200 + v250;
          v253 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(v251, v252, v253);
          v244 = v199;
          v245 = v10;
          v246 = 9;
LABEL_200:
          swift_storeEnumTagMultiPayload(v244, v245, v246);
          break;
        default:
          memcpy(v199, v200, *(_QWORD *)(v201 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v201 + 56))(v199, 0, 2, v10);
    }
  }
  return v4;
}

void sub_1001850F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(id *, uint64_t);
  id *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v4, v5))
  {
    case 0u:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v4, v6))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
          break;
        default:
          break;
      }
LABEL_22:
      v19 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v20 = (char *)v4 + *(int *)(v19 + 20);
      v21 = *((_QWORD *)v20 + 1);
      if (v21)
      {
        swift_bridgeObjectRelease(v21);
        sub_10003E2EC(*((void **)v20 + 2), *((_QWORD *)v20 + 3), *((_QWORD *)v20 + 4), *((_QWORD *)v20 + 5), *((_QWORD *)v20 + 6), *((_QWORD *)v20 + 7), v20[64]);
        v22 = v20[120];
        if (v22 != 255)
          sub_10002B328(*((void **)v20 + 9), *((_QWORD *)v20 + 10), *((_QWORD *)v20 + 11), *((_QWORD *)v20 + 12), *((_QWORD *)v20 + 13), *((_QWORD *)v20 + 14), v22 & 1);
      }
      v12 = *(id *)((char *)v4 + *(int *)(v19 + 44));
      goto LABEL_26;
    case 2u:

      v4 = (_QWORD *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v4, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v4 = (_QWORD *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v4, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v4 = (_QWORD *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v4, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v12 = (id)*v4;
      goto LABEL_26;
    case 7u:
      v13 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13))
      {
        swift_bridgeObjectRelease(*v4);
        v14 = (char *)v4 + *(int *)(v13 + 20);
        v15 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      v4 = (_QWORD *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v16 = v4[1];
      if (!v16)
        break;
      swift_bridgeObjectRelease(v16);
LABEL_16:
      v12 = (id)v4[2];
LABEL_26:

      break;
    case 8u:
      v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17))
        break;
LABEL_18:
      v18 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v4, v18);
      break;
    case 9u:
      v4 = (_QWORD *)((char *)v4 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v18 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v23 = (id *)(a1 + *(int *)(a2 + 24));
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v23, 2, v5))
  {
    switch(swift_getEnumCaseMultiPayload(v23, v5))
    {
      case 0u:
        v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v23, v24))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_51;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_32;
          default:
            goto LABEL_52;
        }
        goto LABEL_52;
      case 1u:
        v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v23, v25))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_51:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_32:
            v26 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v23, v26);
            break;
          default:
            break;
        }
LABEL_52:
        v42 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v43 = (char *)v23 + *(int *)(v42 + 20);
        v44 = *((_QWORD *)v43 + 1);
        if (v44)
        {
          swift_bridgeObjectRelease(v44);
          sub_10003E2EC(*((void **)v43 + 2), *((_QWORD *)v43 + 3), *((_QWORD *)v43 + 4), *((_QWORD *)v43 + 5), *((_QWORD *)v43 + 6), *((_QWORD *)v43 + 7), v43[64]);
          v45 = v43[120];
          if (v45 != 255)
            sub_10002B328(*((void **)v43 + 9), *((_QWORD *)v43 + 10), *((_QWORD *)v43 + 11), *((_QWORD *)v43 + 12), *((_QWORD *)v43 + 13), *((_QWORD *)v43 + 14), v45 & 1);
        }
        v32 = *(id *)((char *)v23 + *(int *)(v42 + 44));
        goto LABEL_56;
      case 2u:

        v27 = (id *)((char *)v23 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
        {
          switch(swift_getEnumCaseMultiPayload(v27, v28))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_57;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_39;
            default:
              return;
          }
        }
        return;
      case 3u:

        v27 = (id *)((char *)v23 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v27, 1, v29))
        {
          switch(swift_getEnumCaseMultiPayload(v27, v29))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_57;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_39;
            default:
              return;
          }
        }
        return;
      case 4u:

        v27 = (id *)((char *)v23 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v27, 1, v30))
        {
          switch(swift_getEnumCaseMultiPayload(v27, v30))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_57:
              v32 = *v27;
              goto LABEL_56;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_39:
              v31 = type metadata accessor for Date(0);
              goto LABEL_49;
            default:
              return;
          }
        }
        return;
      case 5u:
        v32 = v23[2];
        goto LABEL_56;
      case 6u:
        v32 = *v23;
        goto LABEL_56;
      case 7u:
        v33 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v23, 1, v33))
        {
          swift_bridgeObjectRelease(*v23);
          v34 = (char *)v23 + *(int *)(v33 + 20);
          v35 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        }
        v36 = (char *)v23 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v37 = *((_QWORD *)v36 + 1);
        if (!v37)
          return;
        swift_bridgeObjectRelease(v37);
        v32 = (id)*((_QWORD *)v36 + 2);
LABEL_56:

        break;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v23, 1, v38))
          return;
        v39 = type metadata accessor for Date(0);
        v40 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
        v41 = v23;
LABEL_50:
        v40(v41, v39);
        break;
      case 9u:
        v27 = (id *)((char *)v23 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v31 = type metadata accessor for AnyTip(0);
LABEL_49:
        v39 = v31;
        v40 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
        v41 = v27;
        goto LABEL_50;
      default:
        return;
    }
  }
}

_BYTE *sub_100185850(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void **v31;
  void *v32;
  uint64_t v33;
  void **v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(void **, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  void **v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  void **v51;
  void *v52;
  id v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void **v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  _BYTE *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t, __n128);
  __n128 v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned __int8 v120;
  int v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void **v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  id v144;
  void *v145;
  id v146;
  int *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  void **v200;
  void **v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  id v206;
  void **v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  id v212;
  void **v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  void **v218;
  void **v219;
  uint64_t v220;
  uint64_t v221;
  unsigned int (*v222)(void **, uint64_t, uint64_t);
  id v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  void **v227;
  void **v228;
  uint64_t v229;
  uint64_t v230;
  unsigned int (*v231)(void **, uint64_t, uint64_t);
  id v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  void **v236;
  void **v237;
  uint64_t v238;
  uint64_t v239;
  unsigned int (*v240)(void **, uint64_t, uint64_t);
  id v241;
  uint64_t v242;
  void *v243;
  id v244;
  void **v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  void *v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  id v261;
  void **v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  id v266;
  void **v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  id v271;
  void **v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(char *, char *, uint64_t, __n128);
  __n128 v281;
  uint64_t v282;
  _QWORD *v283;
  _QWORD *v284;
  uint64_t v285;
  void *v286;
  id v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  id v296;
  void *v297;
  id v298;
  int *v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  int v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  id v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  void *v329;
  id v330;
  int *v331;
  uint64_t v332;
  char *v333;
  char *v334;
  uint64_t v335;
  void *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  void *v352;
  id v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void *v367;
  id v368;
  void *v369;
  id v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  id v377;
  void *v378;
  id v379;
  uint64_t v380;
  char *v382;
  uint64_t v383;
  char v384;
  unsigned __int8 v385;
  char v386;
  _BYTE *v387;
  _BYTE *v388;
  uint64_t v389;
  void *v390;
  uint64_t v391;
  void *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  _BYTE *v397;
  _BYTE *v398;
  _BYTE *v399;
  _BYTE *v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  unsigned __int8 v404;
  char v405;
  unsigned __int8 v406;
  char v407;
  void **v408;
  void **v409;
  void **v410;
  void **v411;
  void **v412;
  void **v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (void **)&a1[v6];
  v8 = (void **)&a2[v6];
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v8, v9))
  {
    case 0u:
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v397 = v5;
      v401 = v3;
      v387 = v4;
      switch(swift_getEnumCaseMultiPayload(v8, v10))
      {
        case 1u:
          v11 = *v8;
          *v7 = *v8;
          v12 = v11;
          v13 = v7;
          v14 = v10;
          v15 = 1;
          goto LABEL_41;
        case 2u:
          v101 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v7, v8, v101);
          v13 = v7;
          v14 = v10;
          v15 = 2;
          goto LABEL_41;
        case 3u:
          v102 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v7, v8, v102);
          v13 = v7;
          v14 = v10;
          v15 = 3;
          goto LABEL_41;
        case 4u:
          v103 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v7, v8, v103);
          v13 = v7;
          v14 = v10;
          v15 = 4;
          goto LABEL_41;
        case 5u:
          v104 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v7, v8, v104);
          v13 = v7;
          v14 = v10;
          v15 = 5;
          goto LABEL_41;
        case 6u:
          v105 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v7, v8, v105);
          v13 = v7;
          v14 = v10;
          v15 = 6;
          goto LABEL_41;
        case 8u:
          v106 = *v8;
          *v7 = *v8;
          v107 = v106;
          v13 = v7;
          v14 = v10;
          v15 = 8;
          goto LABEL_41;
        case 9u:
          v108 = *v8;
          *v7 = *v8;
          v109 = v108;
          v13 = v7;
          v14 = v10;
          v15 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v13, v14, v15);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
      v110 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v111 = v110[5];
      v112 = (char *)v7 + v111;
      v113 = (char *)v8 + v111;
      v114 = *(uint64_t *)((char *)v8 + v111 + 8);
      if (v114)
      {
        v412 = v7;
        v393 = v9;
        *(_QWORD *)v112 = *(_QWORD *)v113;
        *((_QWORD *)v112 + 1) = v114;
        v115 = (void *)*((_QWORD *)v113 + 2);
        v116 = *((_QWORD *)v113 + 3);
        v118 = *((_QWORD *)v113 + 4);
        v117 = *((_QWORD *)v113 + 5);
        v119 = *((_QWORD *)v113 + 7);
        v383 = *((_QWORD *)v113 + 6);
        v120 = v113[64];
        swift_bridgeObjectRetain(v114);
        sub_10003E1F0(v115, v116, v118, v117, v383, v119, v120);
        *((_QWORD *)v112 + 2) = v115;
        *((_QWORD *)v112 + 3) = v116;
        *((_QWORD *)v112 + 4) = v118;
        *((_QWORD *)v112 + 5) = v117;
        *((_QWORD *)v112 + 6) = v383;
        *((_QWORD *)v112 + 7) = v119;
        v112[64] = v120;
        *(_DWORD *)(v112 + 65) = *(_DWORD *)(v113 + 65);
        v121 = v113[120];
        if (v121 == 255)
        {
          v122 = *(_OWORD *)(v113 + 88);
          *(_OWORD *)(v112 + 72) = *(_OWORD *)(v113 + 72);
          *(_OWORD *)(v112 + 88) = v122;
          *(_OWORD *)(v112 + 104) = *(_OWORD *)(v113 + 104);
          v112[120] = v113[120];
        }
        else
        {
          v384 = v121 & 1;
          v127 = (void *)*((_QWORD *)v113 + 9);
          v126 = *((_QWORD *)v113 + 10);
          v128 = *((_QWORD *)v113 + 11);
          v129 = *((_QWORD *)v113 + 12);
          v130 = *((_QWORD *)v113 + 13);
          v131 = *((_QWORD *)v113 + 14);
          sub_10002B764(v127, v126, v128, v129, v130, v131, v121 & 1);
          *((_QWORD *)v112 + 9) = v127;
          *((_QWORD *)v112 + 10) = v126;
          *((_QWORD *)v112 + 11) = v128;
          *((_QWORD *)v112 + 12) = v129;
          *((_QWORD *)v112 + 13) = v130;
          *((_QWORD *)v112 + 14) = v131;
          v112[120] = v384;
        }
        v9 = v393;
        v5 = v397;
        v4 = v387;
        v112[121] = v113[121];
        v7 = v412;
      }
      else
      {
        v123 = *((_OWORD *)v113 + 5);
        *((_OWORD *)v112 + 4) = *((_OWORD *)v113 + 4);
        *((_OWORD *)v112 + 5) = v123;
        *((_OWORD *)v112 + 6) = *((_OWORD *)v113 + 6);
        *(_OWORD *)(v112 + 106) = *(_OWORD *)(v113 + 106);
        v124 = *((_OWORD *)v113 + 1);
        *(_OWORD *)v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v124;
        v125 = *((_OWORD *)v113 + 3);
        *((_OWORD *)v112 + 2) = *((_OWORD *)v113 + 2);
        *((_OWORD *)v112 + 3) = v125;
      }
      *((_BYTE *)v7 + v110[6]) = *((_BYTE *)v8 + v110[6]);
      *((_BYTE *)v7 + v110[7]) = *((_BYTE *)v8 + v110[7]);
      *((_BYTE *)v7 + v110[8]) = *((_BYTE *)v8 + v110[8]);
      *((_BYTE *)v7 + v110[9]) = *((_BYTE *)v8 + v110[9]);
      *((_BYTE *)v7 + v110[10]) = *((_BYTE *)v8 + v110[10]);
      v132 = v110[11];
      v133 = *(void **)((char *)v8 + v132);
      *(void **)((char *)v7 + v132) = v133;
      v134 = v133;
      v135 = v7;
      v136 = v9;
      v137 = 0;
      goto LABEL_65;
    case 1u:
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v398 = v5;
      v401 = v3;
      v388 = v4;
      switch(swift_getEnumCaseMultiPayload(v8, v16))
      {
        case 1u:
          v17 = *v8;
          *v7 = *v8;
          v18 = v17;
          v19 = v7;
          v20 = v16;
          v21 = 1;
          goto LABEL_57;
        case 2u:
          v138 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v7, v8, v138);
          v19 = v7;
          v20 = v16;
          v21 = 2;
          goto LABEL_57;
        case 3u:
          v139 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v7, v8, v139);
          v19 = v7;
          v20 = v16;
          v21 = 3;
          goto LABEL_57;
        case 4u:
          v140 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v7, v8, v140);
          v19 = v7;
          v20 = v16;
          v21 = 4;
          goto LABEL_57;
        case 5u:
          v141 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v7, v8, v141);
          v19 = v7;
          v20 = v16;
          v21 = 5;
          goto LABEL_57;
        case 6u:
          v142 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v7, v8, v142);
          v19 = v7;
          v20 = v16;
          v21 = 6;
          goto LABEL_57;
        case 8u:
          v143 = *v8;
          *v7 = *v8;
          v144 = v143;
          v19 = v7;
          v20 = v16;
          v21 = 8;
          goto LABEL_57;
        case 9u:
          v145 = *v8;
          *v7 = *v8;
          v146 = v145;
          v19 = v7;
          v20 = v16;
          v21 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v19, v20, v21);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          break;
      }
      v147 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v148 = v147[5];
      v149 = (char *)v7 + v148;
      v150 = (char *)v8 + v148;
      v151 = *(uint64_t *)((char *)v8 + v148 + 8);
      if (v151)
      {
        v413 = v7;
        v394 = v9;
        *(_QWORD *)v149 = *(_QWORD *)v150;
        *((_QWORD *)v149 + 1) = v151;
        v153 = (void *)*((_QWORD *)v150 + 2);
        v152 = *((_QWORD *)v150 + 3);
        v154 = *((_QWORD *)v150 + 4);
        v155 = *((_QWORD *)v150 + 5);
        v156 = *((_QWORD *)v150 + 6);
        v157 = *((_QWORD *)v150 + 7);
        v385 = v150[64];
        swift_bridgeObjectRetain(v151);
        sub_10003E1F0(v153, v152, v154, v155, v156, v157, v385);
        *((_QWORD *)v149 + 2) = v153;
        *((_QWORD *)v149 + 3) = v152;
        *((_QWORD *)v149 + 4) = v154;
        *((_QWORD *)v149 + 5) = v155;
        *((_QWORD *)v149 + 6) = v156;
        *((_QWORD *)v149 + 7) = v157;
        v149[64] = v385;
        *(_DWORD *)(v149 + 65) = *(_DWORD *)(v150 + 65);
        v158 = v150[120];
        if (v158 == 255)
        {
          v159 = *(_OWORD *)(v150 + 88);
          *(_OWORD *)(v149 + 72) = *(_OWORD *)(v150 + 72);
          *(_OWORD *)(v149 + 88) = v159;
          *(_OWORD *)(v149 + 104) = *(_OWORD *)(v150 + 104);
          v149[120] = v150[120];
        }
        else
        {
          v386 = v158 & 1;
          v164 = (void *)*((_QWORD *)v150 + 9);
          v163 = *((_QWORD *)v150 + 10);
          v165 = *((_QWORD *)v150 + 11);
          v166 = *((_QWORD *)v150 + 12);
          v167 = *((_QWORD *)v150 + 13);
          v168 = *((_QWORD *)v150 + 14);
          sub_10002B764(v164, v163, v165, v166, v167, v168, v158 & 1);
          *((_QWORD *)v149 + 9) = v164;
          *((_QWORD *)v149 + 10) = v163;
          *((_QWORD *)v149 + 11) = v165;
          *((_QWORD *)v149 + 12) = v166;
          *((_QWORD *)v149 + 13) = v167;
          *((_QWORD *)v149 + 14) = v168;
          v149[120] = v386;
        }
        v9 = v394;
        v5 = v398;
        v4 = v388;
        v149[121] = v150[121];
        v7 = v413;
      }
      else
      {
        v160 = *((_OWORD *)v150 + 5);
        *((_OWORD *)v149 + 4) = *((_OWORD *)v150 + 4);
        *((_OWORD *)v149 + 5) = v160;
        *((_OWORD *)v149 + 6) = *((_OWORD *)v150 + 6);
        *(_OWORD *)(v149 + 106) = *(_OWORD *)(v150 + 106);
        v161 = *((_OWORD *)v150 + 1);
        *(_OWORD *)v149 = *(_OWORD *)v150;
        *((_OWORD *)v149 + 1) = v161;
        v162 = *((_OWORD *)v150 + 3);
        *((_OWORD *)v149 + 2) = *((_OWORD *)v150 + 2);
        *((_OWORD *)v149 + 3) = v162;
      }
      *((_BYTE *)v7 + v147[6]) = *((_BYTE *)v8 + v147[6]);
      *((_BYTE *)v7 + v147[7]) = *((_BYTE *)v8 + v147[7]);
      *((_BYTE *)v7 + v147[8]) = *((_BYTE *)v8 + v147[8]);
      *((_BYTE *)v7 + v147[9]) = *((_BYTE *)v8 + v147[9]);
      *((_BYTE *)v7 + v147[10]) = *((_BYTE *)v8 + v147[10]);
      v169 = v147[11];
      v170 = *(void **)((char *)v8 + v169);
      *(void **)((char *)v7 + v169) = v170;
      v171 = v170;
      v135 = v7;
      v136 = v9;
      v137 = 1;
LABEL_65:
      swift_storeEnumTagMultiPayload(v135, v136, v137);
      v3 = v401;
      break;
    case 2u:
      v22 = *v8;
      *v7 = *v8;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v408 = v7;
      v24 = (void **)((char *)v7 + v23);
      v25 = (void **)((char *)v8 + v23);
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
      v29 = v22;
      if (v28(v25, 1, v26))
      {
        v30 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = v408;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 1u:
            v69 = *v25;
            *v24 = *v25;
            v70 = v69;
            v71 = v24;
            v72 = v26;
            v73 = 1;
            goto LABEL_74;
          case 2u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v24, v25, v172);
            v71 = v24;
            v72 = v26;
            v73 = 2;
            goto LABEL_74;
          case 3u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v24, v25, v173);
            v71 = v24;
            v72 = v26;
            v73 = 3;
            goto LABEL_74;
          case 4u:
            v174 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v24, v25, v174);
            v71 = v24;
            v72 = v26;
            v73 = 4;
            goto LABEL_74;
          case 5u:
            v175 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v24, v25, v175);
            v71 = v24;
            v72 = v26;
            v73 = 5;
            goto LABEL_74;
          case 6u:
            v176 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v24, v25, v176);
            v71 = v24;
            v72 = v26;
            v73 = 6;
            goto LABEL_74;
          case 8u:
            v177 = *v25;
            *v24 = *v25;
            v178 = v177;
            v71 = v24;
            v72 = v26;
            v73 = 8;
            goto LABEL_74;
          case 9u:
            v179 = *v25;
            *v24 = *v25;
            v180 = v179;
            v71 = v24;
            v72 = v26;
            v73 = 9;
LABEL_74:
            swift_storeEnumTagMultiPayload(v71, v72, v73);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        v31 = v408;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v54 = v31;
      v55 = v9;
      v56 = 2;
      goto LABEL_99;
    case 3u:
      v32 = *v8;
      *v7 = *v8;
      v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v409 = v7;
      v34 = (void **)((char *)v7 + v33);
      v35 = (void **)((char *)v8 + v33);
      v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48);
      v39 = v32;
      if (v38(v35, 1, v36))
      {
        v40 = sub_10002A750(&qword_100644980);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v41 = v409;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v35, v36))
        {
          case 1u:
            v74 = *v35;
            *v34 = *v35;
            v75 = v74;
            v76 = v34;
            v77 = v36;
            v78 = 1;
            goto LABEL_85;
          case 2u:
            v181 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v34, v35, v181);
            v76 = v34;
            v77 = v36;
            v78 = 2;
            goto LABEL_85;
          case 3u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v34, v35, v182);
            v76 = v34;
            v77 = v36;
            v78 = 3;
            goto LABEL_85;
          case 4u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v34, v35, v183);
            v76 = v34;
            v77 = v36;
            v78 = 4;
            goto LABEL_85;
          case 5u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v34, v35, v184);
            v76 = v34;
            v77 = v36;
            v78 = 5;
            goto LABEL_85;
          case 6u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v34, v35, v185);
            v76 = v34;
            v77 = v36;
            v78 = 6;
            goto LABEL_85;
          case 8u:
            v186 = *v35;
            *v34 = *v35;
            v187 = v186;
            v76 = v34;
            v77 = v36;
            v78 = 8;
            goto LABEL_85;
          case 9u:
            v188 = *v35;
            *v34 = *v35;
            v189 = v188;
            v76 = v34;
            v77 = v36;
            v78 = 9;
LABEL_85:
            swift_storeEnumTagMultiPayload(v76, v77, v78);
            break;
          default:
            memcpy(v34, v35, *(_QWORD *)(v37 + 64));
            break;
        }
        v41 = v409;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v54 = v41;
      v55 = v9;
      v56 = 3;
      goto LABEL_99;
    case 4u:
      v42 = *v8;
      *v7 = *v8;
      v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v410 = v7;
      v44 = (void **)((char *)v7 + v43);
      v45 = (void **)((char *)v8 + v43);
      v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
      v49 = v42;
      if (v48(v45, 1, v46))
      {
        v50 = sub_10002A750(&qword_100644980);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v51 = v410;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v45, v46))
        {
          case 1u:
            v79 = *v45;
            *v44 = *v45;
            v80 = v79;
            v81 = v44;
            v82 = v46;
            v83 = 1;
            goto LABEL_96;
          case 2u:
            v190 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v44, v45, v190);
            v81 = v44;
            v82 = v46;
            v83 = 2;
            goto LABEL_96;
          case 3u:
            v191 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v44, v45, v191);
            v81 = v44;
            v82 = v46;
            v83 = 3;
            goto LABEL_96;
          case 4u:
            v192 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v44, v45, v192);
            v81 = v44;
            v82 = v46;
            v83 = 4;
            goto LABEL_96;
          case 5u:
            v193 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v44, v45, v193);
            v81 = v44;
            v82 = v46;
            v83 = 5;
            goto LABEL_96;
          case 6u:
            v194 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v44, v45, v194);
            v81 = v44;
            v82 = v46;
            v83 = 6;
            goto LABEL_96;
          case 8u:
            v195 = *v45;
            *v44 = *v45;
            v196 = v195;
            v81 = v44;
            v82 = v46;
            v83 = 8;
            goto LABEL_96;
          case 9u:
            v197 = *v45;
            *v44 = *v45;
            v198 = v197;
            v81 = v44;
            v82 = v46;
            v83 = 9;
LABEL_96:
            swift_storeEnumTagMultiPayload(v81, v82, v83);
            break;
          default:
            memcpy(v44, v45, *(_QWORD *)(v47 + 64));
            break;
        }
        v51 = v410;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v54 = v51;
      v55 = v9;
      v56 = 4;
      goto LABEL_99;
    case 5u:
      *v7 = *v8;
      *((_BYTE *)v7 + 8) = *((_BYTE *)v8 + 8);
      *(_WORD *)((char *)v7 + 9) = *(_WORD *)((char *)v8 + 9);
      v52 = v8[2];
      v7[2] = v52;
      v53 = v52;
      v54 = v7;
      v55 = v9;
      v56 = 5;
      goto LABEL_99;
    case 6u:
      v64 = *v8;
      *v7 = *v8;
      v65 = v64;
      v54 = v7;
      v55 = v9;
      v56 = 6;
      goto LABEL_99;
    case 7u:
      v402 = v3;
      v57 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v58 + 48))(v8, 1, v57))
      {
        v59 = sub_10002A750(&qword_100644600);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v84 = *v8;
        *v7 = *v8;
        v85 = *(int *)(v57 + 20);
        v382 = (char *)v7 + v85;
        v411 = v7;
        v86 = (char *)v8 + v85;
        v87 = v4;
        v88 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v89 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v88 - 8) + 16);
        v90 = swift_bridgeObjectRetain(v84);
        v91 = v86;
        v7 = v411;
        v92 = v88;
        v4 = v87;
        v89(v382, v91, v92, v90);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v58 + 56))(v411, 0, 1, v57);
      }
      v93 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v94 = (void **)((char *)v7 + v93);
      v95 = (void **)((char *)v8 + v93);
      v96 = v95[1];
      v3 = v402;
      if (v96)
      {
        *v94 = *v95;
        v94[1] = v96;
        v97 = (void *)v95[2];
        v94[2] = v97;
        swift_bridgeObjectRetain(v96);
        v98 = v97;
      }
      else
      {
        *(_OWORD *)v94 = *(_OWORD *)v95;
        v94[2] = v95[2];
      }
      v54 = v7;
      v55 = v9;
      v56 = 7;
      goto LABEL_99;
    case 8u:
      v66 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v67 = *(_QWORD *)(v66 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v67 + 48))(v8, 1, v66))
      {
        v68 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v99 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v7, v8, v99);
        *((_BYTE *)v7 + *(int *)(v66 + 20)) = *((_BYTE *)v8 + *(int *)(v66 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v67 + 56))(v7, 0, 1, v66);
      }
      v100 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)v7 + *(int *)(v100 + 20)) = *(void **)((char *)v8 + *(int *)(v100 + 20));
      v54 = v7;
      v55 = v9;
      v56 = 8;
      goto LABEL_99;
    case 9u:
      *(_BYTE *)v7 = *(_BYTE *)v8;
      v60 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v61 = (char *)v7 + v60;
      v62 = (char *)v8 + v60;
      v63 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      v54 = v7;
      v55 = v9;
      v56 = 9;
LABEL_99:
      swift_storeEnumTagMultiPayload(v54, v55, v56);
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v199 = *(int *)(v3 + 24);
  v200 = (void **)&v5[v199];
  v201 = (void **)&v4[v199];
  v202 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v202 + 48))(v201, 2, v9))
  {
    v203 = type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0);
    memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v201, v9))
    {
      case 0u:
        v204 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v395 = v9;
        v399 = v5;
        v414 = v202;
        switch(swift_getEnumCaseMultiPayload(v201, v204))
        {
          case 1u:
            v205 = *v201;
            *v200 = *v201;
            v206 = v205;
            v207 = v200;
            v208 = v204;
            v209 = 1;
            goto LABEL_142;
          case 2u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v200, v201, v290);
            v207 = v200;
            v208 = v204;
            v209 = 2;
            goto LABEL_142;
          case 3u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v200, v201, v291);
            v207 = v200;
            v208 = v204;
            v209 = 3;
            goto LABEL_142;
          case 4u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v200, v201, v292);
            v207 = v200;
            v208 = v204;
            v209 = 4;
            goto LABEL_142;
          case 5u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(v200, v201, v293);
            v207 = v200;
            v208 = v204;
            v209 = 5;
            goto LABEL_142;
          case 6u:
            v294 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v294 - 8) + 16))(v200, v201, v294);
            v207 = v200;
            v208 = v204;
            v209 = 6;
            goto LABEL_142;
          case 8u:
            v295 = *v201;
            *v200 = *v201;
            v296 = v295;
            v207 = v200;
            v208 = v204;
            v209 = 8;
            goto LABEL_142;
          case 9u:
            v297 = *v201;
            *v200 = *v201;
            v298 = v297;
            v207 = v200;
            v208 = v204;
            v209 = 9;
LABEL_142:
            swift_storeEnumTagMultiPayload(v207, v208, v209);
            break;
          default:
            memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
            break;
        }
        v299 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v300 = v299[5];
        v301 = (char *)v200 + v300;
        v302 = (char *)v201 + v300;
        v303 = *(uint64_t *)((char *)v201 + v300 + 8);
        if (v303)
        {
          *(_QWORD *)v301 = *(_QWORD *)v302;
          *((_QWORD *)v301 + 1) = v303;
          v304 = (void *)*((_QWORD *)v302 + 2);
          v305 = *((_QWORD *)v302 + 3);
          v306 = *((_QWORD *)v302 + 4);
          v307 = *((_QWORD *)v302 + 5);
          v308 = *((_QWORD *)v302 + 6);
          v389 = *((_QWORD *)v302 + 7);
          v404 = v302[64];
          swift_bridgeObjectRetain(v303);
          sub_10003E1F0(v304, v305, v306, v307, v308, v389, v404);
          *((_QWORD *)v301 + 2) = v304;
          *((_QWORD *)v301 + 3) = v305;
          *((_QWORD *)v301 + 4) = v306;
          *((_QWORD *)v301 + 5) = v307;
          *((_QWORD *)v301 + 6) = v308;
          *((_QWORD *)v301 + 7) = v389;
          v301[64] = v404;
          *(_DWORD *)(v301 + 65) = *(_DWORD *)(v302 + 65);
          v309 = v302[120];
          if (v309 == 255)
          {
            v310 = *(_OWORD *)(v302 + 88);
            *(_OWORD *)(v301 + 72) = *(_OWORD *)(v302 + 72);
            *(_OWORD *)(v301 + 88) = v310;
            *(_OWORD *)(v301 + 104) = *(_OWORD *)(v302 + 104);
            v301[120] = v302[120];
          }
          else
          {
            v405 = v309 & 1;
            v314 = *((_QWORD *)v302 + 10);
            v390 = (void *)*((_QWORD *)v302 + 9);
            v315 = *((_QWORD *)v302 + 11);
            v316 = *((_QWORD *)v302 + 12);
            v317 = *((_QWORD *)v302 + 13);
            v318 = *((_QWORD *)v302 + 14);
            sub_10002B764(v390, v314, v315, v316, v317, v318, v309 & 1);
            *((_QWORD *)v301 + 9) = v390;
            *((_QWORD *)v301 + 10) = v314;
            *((_QWORD *)v301 + 11) = v315;
            *((_QWORD *)v301 + 12) = v316;
            *((_QWORD *)v301 + 13) = v317;
            *((_QWORD *)v301 + 14) = v318;
            v301[120] = v405;
          }
          v9 = v395;
          v5 = v399;
          v202 = v414;
          v301[121] = v302[121];
        }
        else
        {
          v311 = *((_OWORD *)v302 + 5);
          *((_OWORD *)v301 + 4) = *((_OWORD *)v302 + 4);
          *((_OWORD *)v301 + 5) = v311;
          *((_OWORD *)v301 + 6) = *((_OWORD *)v302 + 6);
          *(_OWORD *)(v301 + 106) = *(_OWORD *)(v302 + 106);
          v312 = *((_OWORD *)v302 + 1);
          *(_OWORD *)v301 = *(_OWORD *)v302;
          *((_OWORD *)v301 + 1) = v312;
          v313 = *((_OWORD *)v302 + 3);
          *((_OWORD *)v301 + 2) = *((_OWORD *)v302 + 2);
          *((_OWORD *)v301 + 3) = v313;
        }
        *((_BYTE *)v200 + v299[6]) = *((_BYTE *)v201 + v299[6]);
        *((_BYTE *)v200 + v299[7]) = *((_BYTE *)v201 + v299[7]);
        *((_BYTE *)v200 + v299[8]) = *((_BYTE *)v201 + v299[8]);
        *((_BYTE *)v200 + v299[9]) = *((_BYTE *)v201 + v299[9]);
        *((_BYTE *)v200 + v299[10]) = *((_BYTE *)v201 + v299[10]);
        v319 = v299[11];
        v320 = *(void **)((char *)v201 + v319);
        *(void **)((char *)v200 + v319) = v320;
        v321 = v320;
        v245 = v200;
        v246 = v9;
        v247 = 0;
        goto LABEL_199;
      case 1u:
        v210 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v396 = v9;
        v400 = v5;
        v415 = v202;
        switch(swift_getEnumCaseMultiPayload(v201, v210))
        {
          case 1u:
            v211 = *v201;
            *v200 = *v201;
            v212 = v211;
            v213 = v200;
            v214 = v210;
            v215 = 1;
            goto LABEL_158;
          case 2u:
            v322 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v200, v201, v322);
            v213 = v200;
            v214 = v210;
            v215 = 2;
            goto LABEL_158;
          case 3u:
            v323 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v200, v201, v323);
            v213 = v200;
            v214 = v210;
            v215 = 3;
            goto LABEL_158;
          case 4u:
            v324 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v200, v201, v324);
            v213 = v200;
            v214 = v210;
            v215 = 4;
            goto LABEL_158;
          case 5u:
            v325 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v200, v201, v325);
            v213 = v200;
            v214 = v210;
            v215 = 5;
            goto LABEL_158;
          case 6u:
            v326 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v200, v201, v326);
            v213 = v200;
            v214 = v210;
            v215 = 6;
            goto LABEL_158;
          case 8u:
            v327 = *v201;
            *v200 = *v201;
            v328 = v327;
            v213 = v200;
            v214 = v210;
            v215 = 8;
            goto LABEL_158;
          case 9u:
            v329 = *v201;
            *v200 = *v201;
            v330 = v329;
            v213 = v200;
            v214 = v210;
            v215 = 9;
LABEL_158:
            swift_storeEnumTagMultiPayload(v213, v214, v215);
            break;
          default:
            memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
            break;
        }
        v331 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v332 = v331[5];
        v333 = (char *)v200 + v332;
        v334 = (char *)v201 + v332;
        v335 = *(uint64_t *)((char *)v201 + v332 + 8);
        if (v335)
        {
          *(_QWORD *)v333 = *(_QWORD *)v334;
          *((_QWORD *)v333 + 1) = v335;
          v336 = (void *)*((_QWORD *)v334 + 2);
          v337 = *((_QWORD *)v334 + 3);
          v338 = *((_QWORD *)v334 + 4);
          v339 = *((_QWORD *)v334 + 5);
          v340 = *((_QWORD *)v334 + 6);
          v391 = *((_QWORD *)v334 + 7);
          v406 = v334[64];
          swift_bridgeObjectRetain(v335);
          sub_10003E1F0(v336, v337, v338, v339, v340, v391, v406);
          *((_QWORD *)v333 + 2) = v336;
          *((_QWORD *)v333 + 3) = v337;
          *((_QWORD *)v333 + 4) = v338;
          *((_QWORD *)v333 + 5) = v339;
          *((_QWORD *)v333 + 6) = v340;
          *((_QWORD *)v333 + 7) = v391;
          v333[64] = v406;
          *(_DWORD *)(v333 + 65) = *(_DWORD *)(v334 + 65);
          v341 = v334[120];
          if (v341 == 255)
          {
            v342 = *(_OWORD *)(v334 + 88);
            *(_OWORD *)(v333 + 72) = *(_OWORD *)(v334 + 72);
            *(_OWORD *)(v333 + 88) = v342;
            *(_OWORD *)(v333 + 104) = *(_OWORD *)(v334 + 104);
            v333[120] = v334[120];
          }
          else
          {
            v407 = v341 & 1;
            v346 = *((_QWORD *)v334 + 10);
            v392 = (void *)*((_QWORD *)v334 + 9);
            v347 = *((_QWORD *)v334 + 11);
            v348 = *((_QWORD *)v334 + 12);
            v349 = *((_QWORD *)v334 + 13);
            v350 = *((_QWORD *)v334 + 14);
            sub_10002B764(v392, v346, v347, v348, v349, v350, v341 & 1);
            *((_QWORD *)v333 + 9) = v392;
            *((_QWORD *)v333 + 10) = v346;
            *((_QWORD *)v333 + 11) = v347;
            *((_QWORD *)v333 + 12) = v348;
            *((_QWORD *)v333 + 13) = v349;
            *((_QWORD *)v333 + 14) = v350;
            v333[120] = v407;
          }
          v9 = v396;
          v5 = v400;
          v202 = v415;
          v333[121] = v334[121];
        }
        else
        {
          v343 = *((_OWORD *)v334 + 5);
          *((_OWORD *)v333 + 4) = *((_OWORD *)v334 + 4);
          *((_OWORD *)v333 + 5) = v343;
          *((_OWORD *)v333 + 6) = *((_OWORD *)v334 + 6);
          *(_OWORD *)(v333 + 106) = *(_OWORD *)(v334 + 106);
          v344 = *((_OWORD *)v334 + 1);
          *(_OWORD *)v333 = *(_OWORD *)v334;
          *((_OWORD *)v333 + 1) = v344;
          v345 = *((_OWORD *)v334 + 3);
          *((_OWORD *)v333 + 2) = *((_OWORD *)v334 + 2);
          *((_OWORD *)v333 + 3) = v345;
        }
        *((_BYTE *)v200 + v331[6]) = *((_BYTE *)v201 + v331[6]);
        *((_BYTE *)v200 + v331[7]) = *((_BYTE *)v201 + v331[7]);
        *((_BYTE *)v200 + v331[8]) = *((_BYTE *)v201 + v331[8]);
        *((_BYTE *)v200 + v331[9]) = *((_BYTE *)v201 + v331[9]);
        *((_BYTE *)v200 + v331[10]) = *((_BYTE *)v201 + v331[10]);
        v351 = v331[11];
        v352 = *(void **)((char *)v201 + v351);
        *(void **)((char *)v200 + v351) = v352;
        v353 = v352;
        v245 = v200;
        v246 = v9;
        v247 = 1;
        goto LABEL_199;
      case 2u:
        v216 = *v201;
        *v200 = *v201;
        v217 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v218 = (void **)((char *)v200 + v217);
        v219 = (void **)((char *)v201 + v217);
        v220 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v221 = *(_QWORD *)(v220 - 8);
        v222 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v221 + 48);
        v223 = v216;
        if (v222(v219, 1, v220))
        {
          v224 = sub_10002A750(&qword_100644980);
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v219, v220))
          {
            case 1u:
              v260 = *v219;
              *v218 = *v219;
              v261 = v260;
              v262 = v218;
              v263 = v220;
              v264 = 1;
              goto LABEL_174;
            case 2u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v218, v219, v354);
              v262 = v218;
              v263 = v220;
              v264 = 2;
              goto LABEL_174;
            case 3u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v218, v219, v355);
              v262 = v218;
              v263 = v220;
              v264 = 3;
              goto LABEL_174;
            case 4u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v218, v219, v356);
              v262 = v218;
              v263 = v220;
              v264 = 4;
              goto LABEL_174;
            case 5u:
              v357 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v218, v219, v357);
              v262 = v218;
              v263 = v220;
              v264 = 5;
              goto LABEL_174;
            case 6u:
              v358 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v218, v219, v358);
              v262 = v218;
              v263 = v220;
              v264 = 6;
              goto LABEL_174;
            case 8u:
              v359 = *v219;
              *v218 = *v219;
              v360 = v359;
              v262 = v218;
              v263 = v220;
              v264 = 8;
              goto LABEL_174;
            case 9u:
              v361 = *v219;
              *v218 = *v219;
              v362 = v361;
              v262 = v218;
              v263 = v220;
              v264 = 9;
LABEL_174:
              swift_storeEnumTagMultiPayload(v262, v263, v264);
              break;
            default:
              memcpy(v218, v219, *(_QWORD *)(v221 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
        }
        v245 = v200;
        v246 = v9;
        v247 = 2;
        goto LABEL_199;
      case 3u:
        v225 = *v201;
        *v200 = *v201;
        v226 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v227 = (void **)((char *)v200 + v226);
        v228 = (void **)((char *)v201 + v226);
        v229 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v230 = *(_QWORD *)(v229 - 8);
        v231 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v230 + 48);
        v232 = v225;
        if (v231(v228, 1, v229))
        {
          v233 = sub_10002A750(&qword_100644980);
          memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v228, v229))
          {
            case 1u:
              v265 = *v228;
              *v227 = *v228;
              v266 = v265;
              v267 = v227;
              v268 = v229;
              v269 = 1;
              goto LABEL_196;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v227, v228, v363);
              v267 = v227;
              v268 = v229;
              v269 = 2;
              goto LABEL_196;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v227, v228, v364);
              v267 = v227;
              v268 = v229;
              v269 = 3;
              goto LABEL_196;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v227, v228, v365);
              v267 = v227;
              v268 = v229;
              v269 = 4;
              goto LABEL_196;
            case 5u:
              v380 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v227, v228, v380);
              v267 = v227;
              v268 = v229;
              v269 = 5;
              goto LABEL_196;
            case 6u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v227, v228, v366);
              v267 = v227;
              v268 = v229;
              v269 = 6;
              goto LABEL_196;
            case 8u:
              v367 = *v228;
              *v227 = *v228;
              v368 = v367;
              v267 = v227;
              v268 = v229;
              v269 = 8;
              goto LABEL_196;
            case 9u:
              v369 = *v228;
              *v227 = *v228;
              v370 = v369;
              v267 = v227;
              v268 = v229;
              v269 = 9;
LABEL_196:
              swift_storeEnumTagMultiPayload(v267, v268, v269);
              break;
            default:
              memcpy(v227, v228, *(_QWORD *)(v230 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
        }
        v245 = v200;
        v246 = v9;
        v247 = 3;
        goto LABEL_199;
      case 4u:
        v234 = *v201;
        *v200 = *v201;
        v235 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v236 = (void **)((char *)v200 + v235);
        v237 = (void **)((char *)v201 + v235);
        v238 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v239 = *(_QWORD *)(v238 - 8);
        v240 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v239 + 48);
        v241 = v234;
        if (v240(v237, 1, v238))
        {
          v242 = sub_10002A750(&qword_100644980);
          memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v237, v238))
          {
            case 1u:
              v270 = *v237;
              *v236 = *v237;
              v271 = v270;
              v272 = v236;
              v273 = v238;
              v274 = 1;
              goto LABEL_192;
            case 2u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v236, v237, v371);
              v272 = v236;
              v273 = v238;
              v274 = 2;
              goto LABEL_192;
            case 3u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v236, v237, v372);
              v272 = v236;
              v273 = v238;
              v274 = 3;
              goto LABEL_192;
            case 4u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v236, v237, v373);
              v272 = v236;
              v273 = v238;
              v274 = 4;
              goto LABEL_192;
            case 5u:
              v374 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v236, v237, v374);
              v272 = v236;
              v273 = v238;
              v274 = 5;
              goto LABEL_192;
            case 6u:
              v375 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v236, v237, v375);
              v272 = v236;
              v273 = v238;
              v274 = 6;
              goto LABEL_192;
            case 8u:
              v376 = *v237;
              *v236 = *v237;
              v377 = v376;
              v272 = v236;
              v273 = v238;
              v274 = 8;
              goto LABEL_192;
            case 9u:
              v378 = *v237;
              *v236 = *v237;
              v379 = v378;
              v272 = v236;
              v273 = v238;
              v274 = 9;
LABEL_192:
              swift_storeEnumTagMultiPayload(v272, v273, v274);
              break;
            default:
              memcpy(v236, v237, *(_QWORD *)(v239 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
        }
        v245 = v200;
        v246 = v9;
        v247 = 4;
        goto LABEL_199;
      case 5u:
        *v200 = *v201;
        *((_BYTE *)v200 + 8) = *((_BYTE *)v201 + 8);
        *(_WORD *)((char *)v200 + 9) = *(_WORD *)((char *)v201 + 9);
        v243 = v201[2];
        v200[2] = v243;
        v244 = v243;
        v245 = v200;
        v246 = v9;
        v247 = 5;
        goto LABEL_199;
      case 6u:
        v255 = *v201;
        *v200 = *v201;
        v256 = v255;
        v245 = v200;
        v246 = v9;
        v247 = 6;
        goto LABEL_199;
      case 7u:
        v416 = v202;
        v248 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v249 = *(_QWORD *)(v248 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v249 + 48))(v201, 1, v248))
        {
          v250 = sub_10002A750(&qword_100644600);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
        }
        else
        {
          v275 = *v201;
          *v200 = *v201;
          v276 = *(int *)(v248 + 20);
          v403 = (char *)v200 + v276;
          v277 = (char *)v201 + v276;
          v278 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v279 = v9;
          v280 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v278 - 8) + 16);
          v281 = swift_bridgeObjectRetain(v275);
          v280(v403, v277, v278, v281);
          v9 = v279;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v249 + 56))(v200, 0, 1, v248);
        }
        v282 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v283 = (void **)((char *)v200 + v282);
        v284 = (void **)((char *)v201 + v282);
        v285 = v284[1];
        v202 = v416;
        if (v285)
        {
          *v283 = *v284;
          v283[1] = v285;
          v286 = (void *)v284[2];
          v283[2] = v286;
          swift_bridgeObjectRetain(v285);
          v287 = v286;
        }
        else
        {
          *(_OWORD *)v283 = *(_OWORD *)v284;
          v283[2] = v284[2];
        }
        v245 = v200;
        v246 = v9;
        v247 = 7;
        goto LABEL_199;
      case 8u:
        v257 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v258 = *(_QWORD *)(v257 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v258 + 48))(v201, 1, v257))
        {
          v259 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
        }
        else
        {
          v288 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(v200, v201, v288);
          *((_BYTE *)v200 + *(int *)(v257 + 20)) = *((_BYTE *)v201 + *(int *)(v257 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v258 + 56))(v200, 0, 1, v257);
        }
        v289 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v200 + *(int *)(v289 + 20)) = *(void **)((char *)v201 + *(int *)(v289 + 20));
        v245 = v200;
        v246 = v9;
        v247 = 8;
        goto LABEL_199;
      case 9u:
        *(_BYTE *)v200 = *(_BYTE *)v201;
        v251 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v252 = (char *)v200 + v251;
        v253 = (char *)v201 + v251;
        v254 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v252, v253, v254);
        v245 = v200;
        v246 = v9;
        v247 = 9;
LABEL_199:
        swift_storeEnumTagMultiPayload(v245, v246, v247);
        break;
      default:
        memcpy(v200, v201, *(_QWORD *)(v202 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v202 + 56))(v200, 0, 2, v9);
  }
  return v5;
}

_BYTE *sub_100187844(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void **v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(void **, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t, __n128);
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  id v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _BYTE *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  id v145;
  void *v146;
  id v147;
  int *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  id v193;
  void *v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  id v202;
  void *v203;
  id v204;
  uint64_t v205;
  void **v206;
  void **v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(void **, uint64_t, uint64_t);
  int v211;
  int v212;
  uint64_t v213;
  void *v214;
  id v215;
  void **v216;
  uint64_t v217;
  uint64_t v218;
  size_t v219;
  uint64_t v220;
  void *v221;
  id v222;
  void **v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  id v228;
  void **v229;
  uint64_t v230;
  uint64_t v231;
  _BYTE *v232;
  void *v233;
  uint64_t v234;
  void **v235;
  void **v236;
  uint64_t v237;
  uint64_t v238;
  unsigned int (*v239)(void **, uint64_t, uint64_t);
  id v240;
  uint64_t v241;
  _BYTE *v242;
  void *v243;
  uint64_t v244;
  void **v245;
  void **v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int (*v249)(void **, uint64_t, uint64_t);
  id v250;
  uint64_t v251;
  _BYTE *v252;
  void *v253;
  uint64_t v254;
  void **v255;
  void **v256;
  uint64_t v257;
  uint64_t v258;
  unsigned int (*v259)(void **, uint64_t, uint64_t);
  id v260;
  uint64_t v261;
  void *v262;
  id v263;
  void **v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  void *v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  id v281;
  void **v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  uint64_t v286;
  void **v287;
  void **v288;
  uint64_t v289;
  uint64_t v290;
  unsigned int (*v291)(void **, uint64_t, uint64_t);
  id v292;
  uint64_t v293;
  void *v294;
  uint64_t v295;
  void **v296;
  void **v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int (*v300)(void **, uint64_t, uint64_t);
  id v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  void **v305;
  void **v306;
  uint64_t v307;
  uint64_t v308;
  unsigned int (*v309)(void **, uint64_t, uint64_t);
  id v310;
  uint64_t v311;
  void *v312;
  id v313;
  _BYTE *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  void *v322;
  id v323;
  void **v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  void **v329;
  uint64_t v330;
  uint64_t v331;
  void *v332;
  id v333;
  void **v334;
  uint64_t v335;
  uint64_t v336;
  void *v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  void (*v341)(char *, char *, uint64_t, __n128);
  __n128 v342;
  uint64_t v343;
  _QWORD *v344;
  _QWORD *v345;
  uint64_t v346;
  void *v347;
  id v348;
  __int128 v349;
  void *v350;
  id v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  void *v357;
  id v358;
  void **v359;
  uint64_t v360;
  uint64_t v361;
  void *v362;
  id v363;
  void **v364;
  uint64_t v365;
  uint64_t v366;
  void *v367;
  id v368;
  void **v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  void (*v376)(char *, char *, uint64_t, __n128);
  __n128 v377;
  uint64_t v378;
  _QWORD *v379;
  _QWORD *v380;
  uint64_t v381;
  void *v382;
  id v383;
  __int128 v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  void *v392;
  id v393;
  void *v394;
  id v395;
  int *v396;
  uint64_t v397;
  char *v398;
  char *v399;
  uint64_t v400;
  void *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  int v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  void *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  void *v420;
  id v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  void *v427;
  id v428;
  void *v429;
  id v430;
  int *v431;
  uint64_t v432;
  char *v433;
  char *v434;
  uint64_t v435;
  void *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  int v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  void *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  void *v455;
  id v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  void *v462;
  id v463;
  void *v464;
  id v465;
  int *v466;
  uint64_t v467;
  char *v468;
  char *v469;
  uint64_t v470;
  void *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  int v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  uint64_t v486;
  void *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  void *v492;
  id v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  void *v499;
  id v500;
  void *v501;
  id v502;
  int *v503;
  uint64_t v504;
  char *v505;
  char *v506;
  uint64_t v507;
  void *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  int v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  uint64_t v523;
  void *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  void *v529;
  id v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  void *v536;
  id v537;
  void *v538;
  id v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  void *v545;
  id v546;
  void *v547;
  id v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  void *v554;
  id v555;
  void *v556;
  id v557;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  void *v564;
  id v565;
  void *v566;
  id v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  void *v573;
  id v574;
  void *v575;
  id v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  void *v582;
  id v583;
  void *v584;
  id v585;
  unsigned __int8 v586;
  uint64_t v587;
  uint64_t v588;
  char v589;
  unsigned __int8 v590;
  char v591;
  _BYTE *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  char *v597;
  void **v598;
  void **v599;
  int *v600;
  int *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  unsigned __int8 v609;
  uint64_t v610;
  unsigned __int8 v611;
  uint64_t v612;
  int *v613;
  int *v614;
  _BYTE *v615;
  _BYTE *v616;
  _BYTE *v617;
  _BYTE *v618;
  _BYTE *v619;
  _BYTE *v620;
  _BYTE *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  char *v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char *v629;
  uint64_t v630;
  char v631;
  uint64_t v632;
  char v633;
  unsigned __int8 v634;
  char v635;
  unsigned __int8 v636;
  char v637;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (void **)&a1[v6];
    v8 = (void **)&a2[v6];
    sub_10001F544((uint64_t)&a1[v6], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v8, v9))
    {
      case 0u:
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v606 = v3;
        v615 = v5;
        switch(swift_getEnumCaseMultiPayload(v8, v10))
        {
          case 1u:
            v11 = *v8;
            *v7 = *v8;
            v12 = v11;
            v13 = v7;
            v14 = v10;
            v15 = 1;
            goto LABEL_42;
          case 2u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v7, v8, v101);
            v13 = v7;
            v14 = v10;
            v15 = 2;
            goto LABEL_42;
          case 3u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v7, v8, v102);
            v13 = v7;
            v14 = v10;
            v15 = 3;
            goto LABEL_42;
          case 4u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v7, v8, v103);
            v13 = v7;
            v14 = v10;
            v15 = 4;
            goto LABEL_42;
          case 5u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v7, v8, v104);
            v13 = v7;
            v14 = v10;
            v15 = 5;
            goto LABEL_42;
          case 6u:
            v105 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v7, v8, v105);
            v13 = v7;
            v14 = v10;
            v15 = 6;
            goto LABEL_42;
          case 8u:
            v106 = *v8;
            *v7 = *v8;
            v107 = v106;
            v13 = v7;
            v14 = v10;
            v15 = 8;
            goto LABEL_42;
          case 9u:
            v108 = *v8;
            *v7 = *v8;
            v109 = v108;
            v13 = v7;
            v14 = v10;
            v15 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v13, v14, v15);
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        v110 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v111 = v110[5];
        v112 = (char *)v7 + v111;
        v113 = (char *)v8 + v111;
        if (*(void **)((char *)v8 + v111 + 8))
        {
          v598 = v7;
          v626 = v9;
          *(_QWORD *)v112 = *(_QWORD *)v113;
          v114 = *((_QWORD *)v113 + 1);
          *((_QWORD *)v112 + 1) = v114;
          v115 = (void *)*((_QWORD *)v113 + 2);
          v116 = *((_QWORD *)v113 + 3);
          v117 = *((_QWORD *)v113 + 4);
          v118 = *((_QWORD *)v113 + 5);
          v119 = *((_QWORD *)v113 + 6);
          v588 = *((_QWORD *)v113 + 7);
          v586 = v113[64];
          swift_bridgeObjectRetain(v114);
          sub_10003E1F0(v115, v116, v117, v118, v119, v588, v586);
          *((_QWORD *)v112 + 2) = v115;
          *((_QWORD *)v112 + 3) = v116;
          *((_QWORD *)v112 + 4) = v117;
          *((_QWORD *)v112 + 5) = v118;
          *((_QWORD *)v112 + 6) = v119;
          *((_QWORD *)v112 + 7) = v588;
          v112[64] = v586;
          v112[65] = v113[65];
          v112[66] = v113[66];
          v112[67] = v113[67];
          v112[68] = v113[68];
          v120 = v113[120];
          if (v120 == 255)
          {
            v121 = *(_OWORD *)(v113 + 72);
            v122 = *(_OWORD *)(v113 + 88);
            v123 = *(_OWORD *)(v113 + 104);
            v112[120] = v113[120];
            *(_OWORD *)(v112 + 88) = v122;
            *(_OWORD *)(v112 + 104) = v123;
            *(_OWORD *)(v112 + 72) = v121;
          }
          else
          {
            v589 = v120 & 1;
            v132 = (void *)*((_QWORD *)v113 + 9);
            v131 = *((_QWORD *)v113 + 10);
            v134 = *((_QWORD *)v113 + 11);
            v133 = *((_QWORD *)v113 + 12);
            v135 = *((_QWORD *)v113 + 13);
            v587 = *((_QWORD *)v113 + 14);
            sub_10002B764(v132, v131, v134, v133, v135, v587, v120 & 1);
            *((_QWORD *)v112 + 9) = v132;
            *((_QWORD *)v112 + 10) = v131;
            *((_QWORD *)v112 + 11) = v134;
            *((_QWORD *)v112 + 12) = v133;
            *((_QWORD *)v112 + 13) = v135;
            *((_QWORD *)v112 + 14) = v587;
            v112[120] = v589;
          }
          v3 = v606;
          v130 = v615;
          v9 = v626;
          v112[121] = v113[121];
          v7 = v598;
        }
        else
        {
          v124 = *(_OWORD *)v113;
          v125 = *((_OWORD *)v113 + 1);
          v126 = *((_OWORD *)v113 + 3);
          *((_OWORD *)v112 + 2) = *((_OWORD *)v113 + 2);
          *((_OWORD *)v112 + 3) = v126;
          *(_OWORD *)v112 = v124;
          *((_OWORD *)v112 + 1) = v125;
          v127 = *((_OWORD *)v113 + 4);
          v128 = *((_OWORD *)v113 + 5);
          v129 = *((_OWORD *)v113 + 6);
          *(_OWORD *)(v112 + 106) = *(_OWORD *)(v113 + 106);
          *((_OWORD *)v112 + 5) = v128;
          *((_OWORD *)v112 + 6) = v129;
          *((_OWORD *)v112 + 4) = v127;
          v130 = v615;
        }
        *((_BYTE *)v7 + v110[6]) = *((_BYTE *)v8 + v110[6]);
        *((_BYTE *)v7 + v110[7]) = *((_BYTE *)v8 + v110[7]);
        *((_BYTE *)v7 + v110[8]) = *((_BYTE *)v8 + v110[8]);
        *((_BYTE *)v7 + v110[9]) = *((_BYTE *)v8 + v110[9]);
        *((_BYTE *)v7 + v110[10]) = *((_BYTE *)v8 + v110[10]);
        v136 = v110[11];
        v137 = *(void **)((char *)v8 + v136);
        *(void **)((char *)v7 + v136) = v137;
        v138 = v137;
        swift_storeEnumTagMultiPayload(v7, v9, 0);
        v5 = v130;
        break;
      case 1u:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v607 = v3;
        v616 = v5;
        v592 = v4;
        switch(swift_getEnumCaseMultiPayload(v8, v16))
        {
          case 1u:
            v17 = *v8;
            *v7 = *v8;
            v18 = v17;
            v19 = v7;
            v20 = v16;
            v21 = 1;
            goto LABEL_58;
          case 2u:
            v139 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v7, v8, v139);
            v19 = v7;
            v20 = v16;
            v21 = 2;
            goto LABEL_58;
          case 3u:
            v140 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v7, v8, v140);
            v19 = v7;
            v20 = v16;
            v21 = 3;
            goto LABEL_58;
          case 4u:
            v141 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v7, v8, v141);
            v19 = v7;
            v20 = v16;
            v21 = 4;
            goto LABEL_58;
          case 5u:
            v142 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v7, v8, v142);
            v19 = v7;
            v20 = v16;
            v21 = 5;
            goto LABEL_58;
          case 6u:
            v143 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v7, v8, v143);
            v19 = v7;
            v20 = v16;
            v21 = 6;
            goto LABEL_58;
          case 8u:
            v144 = *v8;
            *v7 = *v8;
            v145 = v144;
            v19 = v7;
            v20 = v16;
            v21 = 8;
            goto LABEL_58;
          case 9u:
            v146 = *v8;
            *v7 = *v8;
            v147 = v146;
            v19 = v7;
            v20 = v16;
            v21 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        v148 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v149 = v148[5];
        v150 = (char *)v7 + v149;
        v151 = (char *)v8 + v149;
        if (*(void **)((char *)v8 + v149 + 8))
        {
          v599 = v7;
          v627 = v9;
          *(_QWORD *)v150 = *(_QWORD *)v151;
          v152 = *((_QWORD *)v151 + 1);
          *((_QWORD *)v150 + 1) = v152;
          v153 = (void *)*((_QWORD *)v151 + 2);
          v154 = *((_QWORD *)v151 + 3);
          v155 = *((_QWORD *)v151 + 4);
          v156 = *((_QWORD *)v151 + 5);
          v157 = *((_QWORD *)v151 + 6);
          v158 = *((_QWORD *)v151 + 7);
          v590 = v151[64];
          swift_bridgeObjectRetain(v152);
          sub_10003E1F0(v153, v154, v155, v156, v157, v158, v590);
          *((_QWORD *)v150 + 2) = v153;
          *((_QWORD *)v150 + 3) = v154;
          *((_QWORD *)v150 + 4) = v155;
          *((_QWORD *)v150 + 5) = v156;
          *((_QWORD *)v150 + 6) = v157;
          *((_QWORD *)v150 + 7) = v158;
          v150[64] = v590;
          v150[65] = v151[65];
          v150[66] = v151[66];
          v150[67] = v151[67];
          v150[68] = v151[68];
          v159 = v151[120];
          if (v159 == 255)
          {
            v160 = *(_OWORD *)(v151 + 72);
            v161 = *(_OWORD *)(v151 + 88);
            v162 = *(_OWORD *)(v151 + 104);
            v150[120] = v151[120];
            *(_OWORD *)(v150 + 88) = v161;
            *(_OWORD *)(v150 + 104) = v162;
            *(_OWORD *)(v150 + 72) = v160;
          }
          else
          {
            v591 = v159 & 1;
            v170 = (void *)*((_QWORD *)v151 + 9);
            v169 = *((_QWORD *)v151 + 10);
            v171 = *((_QWORD *)v151 + 11);
            v172 = *((_QWORD *)v151 + 12);
            v174 = *((_QWORD *)v151 + 13);
            v173 = *((_QWORD *)v151 + 14);
            sub_10002B764(v170, v169, v171, v172, v174, v173, v159 & 1);
            *((_QWORD *)v150 + 9) = v170;
            *((_QWORD *)v150 + 10) = v169;
            *((_QWORD *)v150 + 11) = v171;
            *((_QWORD *)v150 + 12) = v172;
            *((_QWORD *)v150 + 13) = v174;
            *((_QWORD *)v150 + 14) = v173;
            v150[120] = v591;
          }
          v3 = v607;
          v5 = v616;
          v9 = v627;
          v4 = v592;
          v7 = v599;
          v150[121] = v151[121];
        }
        else
        {
          v163 = *(_OWORD *)v151;
          v164 = *((_OWORD *)v151 + 1);
          v165 = *((_OWORD *)v151 + 3);
          *((_OWORD *)v150 + 2) = *((_OWORD *)v151 + 2);
          *((_OWORD *)v150 + 3) = v165;
          *(_OWORD *)v150 = v163;
          *((_OWORD *)v150 + 1) = v164;
          v166 = *((_OWORD *)v151 + 4);
          v167 = *((_OWORD *)v151 + 5);
          v168 = *((_OWORD *)v151 + 6);
          *(_OWORD *)(v150 + 106) = *(_OWORD *)(v151 + 106);
          *((_OWORD *)v150 + 5) = v167;
          *((_OWORD *)v150 + 6) = v168;
          *((_OWORD *)v150 + 4) = v166;
        }
        *((_BYTE *)v7 + v148[6]) = *((_BYTE *)v8 + v148[6]);
        *((_BYTE *)v7 + v148[7]) = *((_BYTE *)v8 + v148[7]);
        *((_BYTE *)v7 + v148[8]) = *((_BYTE *)v8 + v148[8]);
        *((_BYTE *)v7 + v148[9]) = *((_BYTE *)v8 + v148[9]);
        *((_BYTE *)v7 + v148[10]) = *((_BYTE *)v8 + v148[10]);
        v175 = v148[11];
        v176 = *(void **)((char *)v8 + v175);
        *(void **)((char *)v7 + v175) = v176;
        v177 = v176;
        v54 = v7;
        v55 = v9;
        v56 = 1;
        goto LABEL_99;
      case 2u:
        v622 = v9;
        v22 = *v8;
        *v7 = *v8;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (void **)((char *)v7 + v23);
        v25 = (void **)((char *)v8 + v23);
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
        v29 = v22;
        if (v28(v25, 1, v26))
        {
          v30 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          v31 = v622;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 1u:
              v70 = *v25;
              *v24 = *v25;
              v71 = v70;
              v72 = v24;
              v73 = v26;
              v74 = 1;
              goto LABEL_74;
            case 2u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v24, v25, v178);
              v72 = v24;
              v73 = v26;
              v74 = 2;
              goto LABEL_74;
            case 3u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v24, v25, v179);
              v72 = v24;
              v73 = v26;
              v74 = 3;
              goto LABEL_74;
            case 4u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v24, v25, v180);
              v72 = v24;
              v73 = v26;
              v74 = 4;
              goto LABEL_74;
            case 5u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v24, v25, v181);
              v72 = v24;
              v73 = v26;
              v74 = 5;
              goto LABEL_74;
            case 6u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v24, v25, v182);
              v72 = v24;
              v73 = v26;
              v74 = 6;
              goto LABEL_74;
            case 8u:
              v183 = *v25;
              *v24 = *v25;
              v184 = v183;
              v72 = v24;
              v73 = v26;
              v74 = 8;
              goto LABEL_74;
            case 9u:
              v185 = *v25;
              *v24 = *v25;
              v186 = v185;
              v72 = v24;
              v73 = v26;
              v74 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v72, v73, v74);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          v31 = v622;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v54 = v7;
        v55 = v31;
        v56 = 2;
        goto LABEL_99;
      case 3u:
        v623 = v9;
        v32 = *v8;
        *v7 = *v8;
        v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v34 = (void **)((char *)v7 + v33);
        v35 = (void **)((char *)v8 + v33);
        v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v37 = *(_QWORD *)(v36 - 8);
        v38 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v37 + 48);
        v39 = v32;
        if (v38(v35, 1, v36))
        {
          v40 = sub_10002A750(&qword_100644980);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          v41 = v623;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v35, v36))
          {
            case 1u:
              v75 = *v35;
              *v34 = *v35;
              v76 = v75;
              v77 = v34;
              v78 = v36;
              v79 = 1;
              goto LABEL_85;
            case 2u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v34, v35, v187);
              v77 = v34;
              v78 = v36;
              v79 = 2;
              goto LABEL_85;
            case 3u:
              v188 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v34, v35, v188);
              v77 = v34;
              v78 = v36;
              v79 = 3;
              goto LABEL_85;
            case 4u:
              v189 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v34, v35, v189);
              v77 = v34;
              v78 = v36;
              v79 = 4;
              goto LABEL_85;
            case 5u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v34, v35, v190);
              v77 = v34;
              v78 = v36;
              v79 = 5;
              goto LABEL_85;
            case 6u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v34, v35, v191);
              v77 = v34;
              v78 = v36;
              v79 = 6;
              goto LABEL_85;
            case 8u:
              v192 = *v35;
              *v34 = *v35;
              v193 = v192;
              v77 = v34;
              v78 = v36;
              v79 = 8;
              goto LABEL_85;
            case 9u:
              v194 = *v35;
              *v34 = *v35;
              v195 = v194;
              v77 = v34;
              v78 = v36;
              v79 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v77, v78, v79);
              break;
            default:
              memcpy(v34, v35, *(_QWORD *)(v37 + 64));
              break;
          }
          v41 = v623;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        v54 = v7;
        v55 = v41;
        v56 = 3;
        goto LABEL_99;
      case 4u:
        v624 = v9;
        v42 = *v8;
        *v7 = *v8;
        v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v44 = (void **)((char *)v7 + v43);
        v45 = (void **)((char *)v8 + v43);
        v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
        v49 = v42;
        if (v48(v45, 1, v46))
        {
          v50 = sub_10002A750(&qword_100644980);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          v51 = v624;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v45, v46))
          {
            case 1u:
              v80 = *v45;
              *v44 = *v45;
              v81 = v80;
              v82 = v44;
              v83 = v46;
              v84 = 1;
              goto LABEL_96;
            case 2u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v44, v45, v196);
              v82 = v44;
              v83 = v46;
              v84 = 2;
              goto LABEL_96;
            case 3u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v44, v45, v197);
              v82 = v44;
              v83 = v46;
              v84 = 3;
              goto LABEL_96;
            case 4u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v44, v45, v198);
              v82 = v44;
              v83 = v46;
              v84 = 4;
              goto LABEL_96;
            case 5u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v199 - 8) + 16))(v44, v45, v199);
              v82 = v44;
              v83 = v46;
              v84 = 5;
              goto LABEL_96;
            case 6u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v44, v45, v200);
              v82 = v44;
              v83 = v46;
              v84 = 6;
              goto LABEL_96;
            case 8u:
              v201 = *v45;
              *v44 = *v45;
              v202 = v201;
              v82 = v44;
              v83 = v46;
              v84 = 8;
              goto LABEL_96;
            case 9u:
              v203 = *v45;
              *v44 = *v45;
              v204 = v203;
              v82 = v44;
              v83 = v46;
              v84 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v82, v83, v84);
              break;
            default:
              memcpy(v44, v45, *(_QWORD *)(v47 + 64));
              break;
          }
          v51 = v624;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        v54 = v7;
        v55 = v51;
        v56 = 4;
        goto LABEL_99;
      case 5u:
        *v7 = *v8;
        *((_BYTE *)v7 + 8) = *((_BYTE *)v8 + 8);
        *((_BYTE *)v7 + 9) = *((_BYTE *)v8 + 9);
        *((_BYTE *)v7 + 10) = *((_BYTE *)v8 + 10);
        v52 = v8[2];
        v7[2] = v52;
        v53 = v52;
        v54 = v7;
        v55 = v9;
        v56 = 5;
        goto LABEL_99;
      case 6u:
        v57 = *v8;
        *v7 = *v8;
        v58 = v57;
        v54 = v7;
        v55 = v9;
        v56 = 6;
        goto LABEL_99;
      case 7u:
        v59 = v5;
        v608 = v3;
        v60 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(v8, 1, v60))
        {
          v62 = sub_10002A750(&qword_100644600);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v85 = *v8;
          *v7 = *v8;
          v86 = *(int *)(v60 + 20);
          v625 = (char *)v7 + v86;
          v597 = (char *)v8 + v86;
          v87 = v9;
          v88 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v89 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v88 - 8) + 16);
          v90 = swift_bridgeObjectRetain(v85);
          v91 = v88;
          v9 = v87;
          v89(v625, v597, v91, v90);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(v7, 0, 1, v60);
        }
        v92 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v93 = (void **)((char *)v7 + v92);
        v94 = (void **)((char *)v8 + v92);
        v3 = v608;
        if (v94[1])
        {
          *v93 = *v94;
          v95 = v94[1];
          v93[1] = v95;
          v96 = (void *)v94[2];
          v93[2] = v96;
          swift_bridgeObjectRetain(v95);
          v97 = v96;
        }
        else
        {
          v98 = *(_OWORD *)v94;
          v93[2] = v94[2];
          *(_OWORD *)v93 = v98;
        }
        v5 = v59;
        v54 = v7;
        v55 = v9;
        v56 = 7;
        goto LABEL_99;
      case 8u:
        v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(v8, 1, v63))
        {
          v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v99 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v7, v8, v99);
          *((_BYTE *)v7 + *(int *)(v63 + 20)) = *((_BYTE *)v8 + *(int *)(v63 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(v7, 0, 1, v63);
        }
        v100 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v7 + *(int *)(v100 + 20)) = *(void **)((char *)v8 + *(int *)(v100 + 20));
        v54 = v7;
        v55 = v9;
        v56 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v66 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v67 = (char *)v7 + v66;
        v68 = (char *)v8 + v66;
        v69 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        v54 = v7;
        v55 = v9;
        v56 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v54, v55, v56);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v205 = *(int *)(v3 + 24);
  v206 = (void **)&v5[v205];
  v207 = (void **)&v4[v205];
  v208 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v209 = *(_QWORD *)(v208 - 8);
  v210 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v209 + 48);
  v211 = v210(v206, 2, v208);
  v212 = v210(v207, 2, v208);
  if (v211)
  {
    if (!v212)
    {
      switch(swift_getEnumCaseMultiPayload(v207, v208))
      {
        case 0u:
          v213 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v617 = v5;
          switch(swift_getEnumCaseMultiPayload(v207, v213))
          {
            case 1u:
              v214 = *v207;
              *v206 = *v207;
              v215 = v214;
              v216 = v206;
              v217 = v213;
              v218 = 1;
              goto LABEL_179;
            case 2u:
              v387 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v206, v207, v387);
              v216 = v206;
              v217 = v213;
              v218 = 2;
              goto LABEL_179;
            case 3u:
              v388 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v206, v207, v388);
              v216 = v206;
              v217 = v213;
              v218 = 3;
              goto LABEL_179;
            case 4u:
              v389 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v206, v207, v389);
              v216 = v206;
              v217 = v213;
              v218 = 4;
              goto LABEL_179;
            case 5u:
              v390 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v206, v207, v390);
              v216 = v206;
              v217 = v213;
              v218 = 5;
              goto LABEL_179;
            case 6u:
              v391 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v206, v207, v391);
              v216 = v206;
              v217 = v213;
              v218 = 6;
              goto LABEL_179;
            case 8u:
              v392 = *v207;
              *v206 = *v207;
              v393 = v392;
              v216 = v206;
              v217 = v213;
              v218 = 8;
              goto LABEL_179;
            case 9u:
              v394 = *v207;
              *v206 = *v207;
              v395 = v394;
              v216 = v206;
              v217 = v213;
              v218 = 9;
LABEL_179:
              swift_storeEnumTagMultiPayload(v216, v217, v218);
              break;
            default:
              memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
              break;
          }
          v396 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v397 = v396[5];
          v398 = (char *)v206 + v397;
          v399 = (char *)v207 + v397;
          if (*(void **)((char *)v207 + v397 + 8))
          {
            v600 = v396;
            *(_QWORD *)v398 = *(_QWORD *)v399;
            v400 = *((_QWORD *)v399 + 1);
            *((_QWORD *)v398 + 1) = v400;
            v401 = (void *)*((_QWORD *)v399 + 2);
            v402 = *((_QWORD *)v399 + 3);
            v403 = *((_QWORD *)v399 + 4);
            v593 = *((_QWORD *)v399 + 5);
            v404 = *((_QWORD *)v399 + 6);
            v630 = *((_QWORD *)v399 + 7);
            v609 = v399[64];
            swift_bridgeObjectRetain(v400);
            sub_10003E1F0(v401, v402, v403, v593, v404, v630, v609);
            *((_QWORD *)v398 + 2) = v401;
            *((_QWORD *)v398 + 3) = v402;
            *((_QWORD *)v398 + 4) = v403;
            *((_QWORD *)v398 + 5) = v593;
            *((_QWORD *)v398 + 6) = v404;
            *((_QWORD *)v398 + 7) = v630;
            v398[64] = v609;
            v398[65] = v399[65];
            v398[66] = v399[66];
            v398[67] = v399[67];
            v398[68] = v399[68];
            v405 = v399[120];
            if (v405 == 255)
            {
              v406 = *(_OWORD *)(v399 + 72);
              v407 = *(_OWORD *)(v399 + 88);
              v408 = *(_OWORD *)(v399 + 104);
              v398[120] = v399[120];
              *(_OWORD *)(v398 + 88) = v407;
              *(_OWORD *)(v398 + 104) = v408;
              *(_OWORD *)(v398 + 72) = v406;
            }
            else
            {
              v631 = v405 & 1;
              v415 = (void *)*((_QWORD *)v399 + 9);
              v610 = *((_QWORD *)v399 + 10);
              v416 = *((_QWORD *)v399 + 11);
              v417 = *((_QWORD *)v399 + 12);
              v418 = *((_QWORD *)v399 + 13);
              v594 = *((_QWORD *)v399 + 14);
              sub_10002B764(v415, v610, v416, v417, v418, v594, v405 & 1);
              *((_QWORD *)v398 + 9) = v415;
              *((_QWORD *)v398 + 10) = v610;
              *((_QWORD *)v398 + 11) = v416;
              *((_QWORD *)v398 + 12) = v417;
              *((_QWORD *)v398 + 13) = v418;
              *((_QWORD *)v398 + 14) = v594;
              v398[120] = v631;
            }
            v5 = v617;
            v398[121] = v399[121];
            v396 = v600;
          }
          else
          {
            v409 = *(_OWORD *)v399;
            v410 = *((_OWORD *)v399 + 1);
            v411 = *((_OWORD *)v399 + 3);
            *((_OWORD *)v398 + 2) = *((_OWORD *)v399 + 2);
            *((_OWORD *)v398 + 3) = v411;
            *(_OWORD *)v398 = v409;
            *((_OWORD *)v398 + 1) = v410;
            v412 = *((_OWORD *)v399 + 4);
            v413 = *((_OWORD *)v399 + 5);
            v414 = *((_OWORD *)v399 + 6);
            *(_OWORD *)(v398 + 106) = *(_OWORD *)(v399 + 106);
            *((_OWORD *)v398 + 5) = v413;
            *((_OWORD *)v398 + 6) = v414;
            *((_OWORD *)v398 + 4) = v412;
          }
          *((_BYTE *)v206 + v396[6]) = *((_BYTE *)v207 + v396[6]);
          *((_BYTE *)v206 + v396[7]) = *((_BYTE *)v207 + v396[7]);
          *((_BYTE *)v206 + v396[8]) = *((_BYTE *)v207 + v396[8]);
          *((_BYTE *)v206 + v396[9]) = *((_BYTE *)v207 + v396[9]);
          *((_BYTE *)v206 + v396[10]) = *((_BYTE *)v207 + v396[10]);
          v419 = v396[11];
          v420 = *(void **)((char *)v207 + v419);
          *(void **)((char *)v206 + v419) = v420;
          v421 = v420;
          v264 = v206;
          v265 = v208;
          v266 = 0;
          goto LABEL_268;
        case 1u:
          v226 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v618 = v5;
          switch(swift_getEnumCaseMultiPayload(v207, v226))
          {
            case 1u:
              v227 = *v207;
              *v206 = *v207;
              v228 = v227;
              v229 = v206;
              v230 = v226;
              v231 = 1;
              goto LABEL_195;
            case 2u:
              v422 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v422 - 8) + 16))(v206, v207, v422);
              v229 = v206;
              v230 = v226;
              v231 = 2;
              goto LABEL_195;
            case 3u:
              v423 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v423 - 8) + 16))(v206, v207, v423);
              v229 = v206;
              v230 = v226;
              v231 = 3;
              goto LABEL_195;
            case 4u:
              v424 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v424 - 8) + 16))(v206, v207, v424);
              v229 = v206;
              v230 = v226;
              v231 = 4;
              goto LABEL_195;
            case 5u:
              v425 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v425 - 8) + 16))(v206, v207, v425);
              v229 = v206;
              v230 = v226;
              v231 = 5;
              goto LABEL_195;
            case 6u:
              v426 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v426 - 8) + 16))(v206, v207, v426);
              v229 = v206;
              v230 = v226;
              v231 = 6;
              goto LABEL_195;
            case 8u:
              v427 = *v207;
              *v206 = *v207;
              v428 = v427;
              v229 = v206;
              v230 = v226;
              v231 = 8;
              goto LABEL_195;
            case 9u:
              v429 = *v207;
              *v206 = *v207;
              v430 = v429;
              v229 = v206;
              v230 = v226;
              v231 = 9;
LABEL_195:
              swift_storeEnumTagMultiPayload(v229, v230, v231);
              break;
            default:
              memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
              break;
          }
          v431 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v432 = v431[5];
          v433 = (char *)v206 + v432;
          v434 = (char *)v207 + v432;
          if (*(void **)((char *)v207 + v432 + 8))
          {
            v601 = v431;
            *(_QWORD *)v433 = *(_QWORD *)v434;
            v435 = *((_QWORD *)v434 + 1);
            *((_QWORD *)v433 + 1) = v435;
            v436 = (void *)*((_QWORD *)v434 + 2);
            v437 = *((_QWORD *)v434 + 3);
            v438 = *((_QWORD *)v434 + 4);
            v595 = *((_QWORD *)v434 + 5);
            v439 = *((_QWORD *)v434 + 6);
            v632 = *((_QWORD *)v434 + 7);
            v611 = v434[64];
            swift_bridgeObjectRetain(v435);
            sub_10003E1F0(v436, v437, v438, v595, v439, v632, v611);
            *((_QWORD *)v433 + 2) = v436;
            *((_QWORD *)v433 + 3) = v437;
            *((_QWORD *)v433 + 4) = v438;
            *((_QWORD *)v433 + 5) = v595;
            *((_QWORD *)v433 + 6) = v439;
            *((_QWORD *)v433 + 7) = v632;
            v433[64] = v611;
            v433[65] = v434[65];
            v433[66] = v434[66];
            v433[67] = v434[67];
            v433[68] = v434[68];
            v440 = v434[120];
            if (v440 == 255)
            {
              v441 = *(_OWORD *)(v434 + 72);
              v442 = *(_OWORD *)(v434 + 88);
              v443 = *(_OWORD *)(v434 + 104);
              v433[120] = v434[120];
              *(_OWORD *)(v433 + 88) = v442;
              *(_OWORD *)(v433 + 104) = v443;
              *(_OWORD *)(v433 + 72) = v441;
            }
            else
            {
              v633 = v440 & 1;
              v450 = (void *)*((_QWORD *)v434 + 9);
              v612 = *((_QWORD *)v434 + 10);
              v451 = *((_QWORD *)v434 + 11);
              v452 = *((_QWORD *)v434 + 12);
              v453 = *((_QWORD *)v434 + 13);
              v596 = *((_QWORD *)v434 + 14);
              sub_10002B764(v450, v612, v451, v452, v453, v596, v440 & 1);
              *((_QWORD *)v433 + 9) = v450;
              *((_QWORD *)v433 + 10) = v612;
              *((_QWORD *)v433 + 11) = v451;
              *((_QWORD *)v433 + 12) = v452;
              *((_QWORD *)v433 + 13) = v453;
              *((_QWORD *)v433 + 14) = v596;
              v433[120] = v633;
            }
            v5 = v618;
            v433[121] = v434[121];
            v431 = v601;
          }
          else
          {
            v444 = *(_OWORD *)v434;
            v445 = *((_OWORD *)v434 + 1);
            v446 = *((_OWORD *)v434 + 3);
            *((_OWORD *)v433 + 2) = *((_OWORD *)v434 + 2);
            *((_OWORD *)v433 + 3) = v446;
            *(_OWORD *)v433 = v444;
            *((_OWORD *)v433 + 1) = v445;
            v447 = *((_OWORD *)v434 + 4);
            v448 = *((_OWORD *)v434 + 5);
            v449 = *((_OWORD *)v434 + 6);
            *(_OWORD *)(v433 + 106) = *(_OWORD *)(v434 + 106);
            *((_OWORD *)v433 + 5) = v448;
            *((_OWORD *)v433 + 6) = v449;
            *((_OWORD *)v433 + 4) = v447;
          }
          *((_BYTE *)v206 + v431[6]) = *((_BYTE *)v207 + v431[6]);
          *((_BYTE *)v206 + v431[7]) = *((_BYTE *)v207 + v431[7]);
          *((_BYTE *)v206 + v431[8]) = *((_BYTE *)v207 + v431[8]);
          *((_BYTE *)v206 + v431[9]) = *((_BYTE *)v207 + v431[9]);
          *((_BYTE *)v206 + v431[10]) = *((_BYTE *)v207 + v431[10]);
          v454 = v431[11];
          v455 = *(void **)((char *)v207 + v454);
          *(void **)((char *)v206 + v454) = v455;
          v456 = v455;
          v264 = v206;
          v265 = v208;
          v266 = 1;
          goto LABEL_268;
        case 2u:
          v232 = v5;
          v233 = *v207;
          *v206 = *v207;
          v234 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v235 = (void **)((char *)v206 + v234);
          v236 = (void **)((char *)v207 + v234);
          v237 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v238 = *(_QWORD *)(v237 - 8);
          v239 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v238 + 48);
          v240 = v233;
          if (v239(v236, 1, v237))
          {
            v241 = sub_10002A750(&qword_100644980);
            memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
            v5 = v232;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v236, v237))
            {
              case 1u:
                v322 = *v236;
                *v235 = *v236;
                v323 = v322;
                v324 = v235;
                v325 = v237;
                v326 = 1;
                goto LABEL_243;
              case 2u:
                v531 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v235, v236, v531);
                v324 = v235;
                v325 = v237;
                v326 = 2;
                goto LABEL_243;
              case 3u:
                v532 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v532 - 8) + 16))(v235, v236, v532);
                v324 = v235;
                v325 = v237;
                v326 = 3;
                goto LABEL_243;
              case 4u:
                v533 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v533 - 8) + 16))(v235, v236, v533);
                v324 = v235;
                v325 = v237;
                v326 = 4;
                goto LABEL_243;
              case 5u:
                v534 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v534 - 8) + 16))(v235, v236, v534);
                v324 = v235;
                v325 = v237;
                v326 = 5;
                goto LABEL_243;
              case 6u:
                v535 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v535 - 8) + 16))(v235, v236, v535);
                v324 = v235;
                v325 = v237;
                v326 = 6;
                goto LABEL_243;
              case 8u:
                v536 = *v236;
                *v235 = *v236;
                v537 = v536;
                v324 = v235;
                v325 = v237;
                v326 = 8;
                goto LABEL_243;
              case 9u:
                v538 = *v236;
                *v235 = *v236;
                v539 = v538;
                v324 = v235;
                v325 = v237;
                v326 = 9;
LABEL_243:
                swift_storeEnumTagMultiPayload(v324, v325, v326);
                break;
              default:
                memcpy(v235, v236, *(_QWORD *)(v238 + 64));
                break;
            }
            v5 = v232;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
          }
          v264 = v206;
          v265 = v208;
          v266 = 2;
          goto LABEL_268;
        case 3u:
          v242 = v5;
          v243 = *v207;
          *v206 = *v207;
          v244 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v245 = (void **)((char *)v206 + v244);
          v246 = (void **)((char *)v207 + v244);
          v247 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v248 = *(_QWORD *)(v247 - 8);
          v249 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v248 + 48);
          v250 = v243;
          if (v249(v246, 1, v247))
          {
            v251 = sub_10002A750(&qword_100644980);
            memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
            v5 = v242;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v246, v247))
            {
              case 1u:
                v327 = *v246;
                *v245 = *v246;
                v328 = v327;
                v329 = v245;
                v330 = v247;
                v331 = 1;
                goto LABEL_254;
              case 2u:
                v540 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v540 - 8) + 16))(v245, v246, v540);
                v329 = v245;
                v330 = v247;
                v331 = 2;
                goto LABEL_254;
              case 3u:
                v541 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v541 - 8) + 16))(v245, v246, v541);
                v329 = v245;
                v330 = v247;
                v331 = 3;
                goto LABEL_254;
              case 4u:
                v542 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v542 - 8) + 16))(v245, v246, v542);
                v329 = v245;
                v330 = v247;
                v331 = 4;
                goto LABEL_254;
              case 5u:
                v543 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v543 - 8) + 16))(v245, v246, v543);
                v329 = v245;
                v330 = v247;
                v331 = 5;
                goto LABEL_254;
              case 6u:
                v544 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v544 - 8) + 16))(v245, v246, v544);
                v329 = v245;
                v330 = v247;
                v331 = 6;
                goto LABEL_254;
              case 8u:
                v545 = *v246;
                *v245 = *v246;
                v546 = v545;
                v329 = v245;
                v330 = v247;
                v331 = 8;
                goto LABEL_254;
              case 9u:
                v547 = *v246;
                *v245 = *v246;
                v548 = v547;
                v329 = v245;
                v330 = v247;
                v331 = 9;
LABEL_254:
                swift_storeEnumTagMultiPayload(v329, v330, v331);
                break;
              default:
                memcpy(v245, v246, *(_QWORD *)(v248 + 64));
                break;
            }
            v5 = v242;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
          }
          v264 = v206;
          v265 = v208;
          v266 = 3;
          goto LABEL_268;
        case 4u:
          v252 = v5;
          v253 = *v207;
          *v206 = *v207;
          v254 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v255 = (void **)((char *)v206 + v254);
          v256 = (void **)((char *)v207 + v254);
          v257 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v258 = *(_QWORD *)(v257 - 8);
          v259 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v258 + 48);
          v260 = v253;
          if (v259(v256, 1, v257))
          {
            v261 = sub_10002A750(&qword_100644980);
            memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
            v5 = v252;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v256, v257))
            {
              case 1u:
                v332 = *v256;
                *v255 = *v256;
                v333 = v332;
                v334 = v255;
                v335 = v257;
                v336 = 1;
                goto LABEL_265;
              case 2u:
                v549 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v549 - 8) + 16))(v255, v256, v549);
                v334 = v255;
                v335 = v257;
                v336 = 2;
                goto LABEL_265;
              case 3u:
                v550 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v255, v256, v550);
                v334 = v255;
                v335 = v257;
                v336 = 3;
                goto LABEL_265;
              case 4u:
                v551 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v551 - 8) + 16))(v255, v256, v551);
                v334 = v255;
                v335 = v257;
                v336 = 4;
                goto LABEL_265;
              case 5u:
                v552 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v255, v256, v552);
                v334 = v255;
                v335 = v257;
                v336 = 5;
                goto LABEL_265;
              case 6u:
                v553 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v553 - 8) + 16))(v255, v256, v553);
                v334 = v255;
                v335 = v257;
                v336 = 6;
                goto LABEL_265;
              case 8u:
                v554 = *v256;
                *v255 = *v256;
                v555 = v554;
                v334 = v255;
                v335 = v257;
                v336 = 8;
                goto LABEL_265;
              case 9u:
                v556 = *v256;
                *v255 = *v256;
                v557 = v556;
                v334 = v255;
                v335 = v257;
                v336 = 9;
LABEL_265:
                swift_storeEnumTagMultiPayload(v334, v335, v336);
                break;
              default:
                memcpy(v255, v256, *(_QWORD *)(v258 + 64));
                break;
            }
            v5 = v252;
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
          }
          v264 = v206;
          v265 = v208;
          v266 = 4;
          goto LABEL_268;
        case 5u:
          *v206 = *v207;
          *((_BYTE *)v206 + 8) = *((_BYTE *)v207 + 8);
          *((_BYTE *)v206 + 9) = *((_BYTE *)v207 + 9);
          *((_BYTE *)v206 + 10) = *((_BYTE *)v207 + 10);
          v262 = v207[2];
          v206[2] = v262;
          v263 = v262;
          v264 = v206;
          v265 = v208;
          v266 = 5;
          goto LABEL_268;
        case 6u:
          v274 = *v207;
          *v206 = *v207;
          v275 = v274;
          v264 = v206;
          v265 = v208;
          v266 = 6;
          goto LABEL_268;
        case 7u:
          v619 = v5;
          v267 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v268 = *(_QWORD *)(v267 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v268 + 48))(v207, 1, v267))
          {
            v269 = sub_10002A750(&qword_100644600);
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
          }
          else
          {
            v337 = *v207;
            *v206 = *v207;
            v338 = *(int *)(v267 + 20);
            v339 = (char *)v206 + v338;
            v628 = (char *)v207 + v338;
            v340 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v341 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v340 - 8) + 16);
            v342 = swift_bridgeObjectRetain(v337);
            v341(v339, v628, v340, v342);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v268 + 56))(v206, 0, 1, v267);
          }
          v343 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v344 = (void **)((char *)v206 + v343);
          v345 = (void **)((char *)v207 + v343);
          v5 = v619;
          if (v345[1])
          {
            *v344 = *v345;
            v346 = v345[1];
            v344[1] = v346;
            v347 = (void *)v345[2];
            v344[2] = v347;
            swift_bridgeObjectRetain(v346);
            v348 = v347;
          }
          else
          {
            v349 = *(_OWORD *)v345;
            v344[2] = v345[2];
            *(_OWORD *)v344 = v349;
          }
          v264 = v206;
          v265 = v208;
          v266 = 7;
          goto LABEL_268;
        case 8u:
          v276 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v277 = *(_QWORD *)(v276 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v277 + 48))(v207, 1, v276))
          {
            v278 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
          }
          else
          {
            v355 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v206, v207, v355);
            *((_BYTE *)v206 + *(int *)(v276 + 20)) = *((_BYTE *)v207 + *(int *)(v276 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v277 + 56))(v206, 0, 1, v276);
          }
          v356 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)v206 + *(int *)(v356 + 20)) = *(void **)((char *)v207 + *(int *)(v356 + 20));
          v264 = v206;
          v265 = v208;
          v266 = 8;
          goto LABEL_268;
        case 9u:
          *(_BYTE *)v206 = *(_BYTE *)v207;
          v270 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v271 = (char *)v206 + v270;
          v272 = (char *)v207 + v270;
          v273 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 16))(v271, v272, v273);
          v264 = v206;
          v265 = v208;
          v266 = 9;
LABEL_268:
          swift_storeEnumTagMultiPayload(v264, v265, v266);
          break;
        default:
          memcpy(v206, v207, *(_QWORD *)(v209 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v209 + 56))(v206, 0, 2, v208);
      return v5;
    }
    goto LABEL_107;
  }
  if (v212)
  {
    sub_10001F544((uint64_t)v206, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_107:
    v219 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TTRIRemindersListItemAdjustedSelection.AssociatedItems(0)
                                 - 8)
                     + 64);
LABEL_108:
    memcpy(v206, v207, v219);
    return v5;
  }
  if (v5 != v4)
  {
    sub_10001F544((uint64_t)v206, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v207, v208))
    {
      case 0u:
        v220 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v220))
        {
          case 1u:
            v221 = *v207;
            *v206 = *v207;
            v222 = v221;
            v223 = v206;
            v224 = v220;
            v225 = 1;
            goto LABEL_211;
          case 2u:
            v457 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v457 - 8) + 16))(v206, v207, v457);
            v223 = v206;
            v224 = v220;
            v225 = 2;
            goto LABEL_211;
          case 3u:
            v458 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v458 - 8) + 16))(v206, v207, v458);
            v223 = v206;
            v224 = v220;
            v225 = 3;
            goto LABEL_211;
          case 4u:
            v459 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v459 - 8) + 16))(v206, v207, v459);
            v223 = v206;
            v224 = v220;
            v225 = 4;
            goto LABEL_211;
          case 5u:
            v460 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v460 - 8) + 16))(v206, v207, v460);
            v223 = v206;
            v224 = v220;
            v225 = 5;
            goto LABEL_211;
          case 6u:
            v461 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v461 - 8) + 16))(v206, v207, v461);
            v223 = v206;
            v224 = v220;
            v225 = 6;
            goto LABEL_211;
          case 8u:
            v462 = *v207;
            *v206 = *v207;
            v463 = v462;
            v223 = v206;
            v224 = v220;
            v225 = 8;
            goto LABEL_211;
          case 9u:
            v464 = *v207;
            *v206 = *v207;
            v465 = v464;
            v223 = v206;
            v224 = v220;
            v225 = 9;
LABEL_211:
            swift_storeEnumTagMultiPayload(v223, v224, v225);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
            break;
        }
        v466 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v467 = v466[5];
        v468 = (char *)v206 + v467;
        v469 = (char *)v207 + v467;
        if (*(void **)((char *)v207 + v467 + 8))
        {
          v613 = v466;
          v620 = v5;
          *(_QWORD *)v468 = *(_QWORD *)v469;
          v470 = *((_QWORD *)v469 + 1);
          *((_QWORD *)v468 + 1) = v470;
          v471 = (void *)*((_QWORD *)v469 + 2);
          v472 = *((_QWORD *)v469 + 3);
          v473 = *((_QWORD *)v469 + 4);
          v474 = *((_QWORD *)v469 + 5);
          v475 = *((_QWORD *)v469 + 7);
          v602 = *((_QWORD *)v469 + 6);
          v634 = v469[64];
          swift_bridgeObjectRetain(v470);
          sub_10003E1F0(v471, v472, v473, v474, v602, v475, v634);
          *((_QWORD *)v468 + 2) = v471;
          *((_QWORD *)v468 + 3) = v472;
          *((_QWORD *)v468 + 4) = v473;
          *((_QWORD *)v468 + 5) = v474;
          *((_QWORD *)v468 + 6) = v602;
          *((_QWORD *)v468 + 7) = v475;
          v468[64] = v634;
          v468[65] = v469[65];
          v468[66] = v469[66];
          v468[67] = v469[67];
          v468[68] = v469[68];
          v476 = v469[120];
          if (v476 == 255)
          {
            v477 = *(_OWORD *)(v469 + 72);
            v478 = *(_OWORD *)(v469 + 88);
            v479 = *(_OWORD *)(v469 + 104);
            v468[120] = v469[120];
            *(_OWORD *)(v468 + 88) = v478;
            *(_OWORD *)(v468 + 104) = v479;
            *(_OWORD *)(v468 + 72) = v477;
          }
          else
          {
            v635 = v476 & 1;
            v487 = (void *)*((_QWORD *)v469 + 9);
            v486 = *((_QWORD *)v469 + 10);
            v488 = *((_QWORD *)v469 + 11);
            v489 = *((_QWORD *)v469 + 12);
            v490 = *((_QWORD *)v469 + 13);
            v603 = *((_QWORD *)v469 + 14);
            sub_10002B764(v487, v486, v488, v489, v490, v603, v476 & 1);
            *((_QWORD *)v468 + 9) = v487;
            *((_QWORD *)v468 + 10) = v486;
            *((_QWORD *)v468 + 11) = v488;
            *((_QWORD *)v468 + 12) = v489;
            *((_QWORD *)v468 + 13) = v490;
            *((_QWORD *)v468 + 14) = v603;
            v468[120] = v635;
          }
          v466 = v613;
          v5 = v620;
          v468[121] = v469[121];
        }
        else
        {
          v480 = *(_OWORD *)v469;
          v481 = *((_OWORD *)v469 + 1);
          v482 = *((_OWORD *)v469 + 3);
          *((_OWORD *)v468 + 2) = *((_OWORD *)v469 + 2);
          *((_OWORD *)v468 + 3) = v482;
          *(_OWORD *)v468 = v480;
          *((_OWORD *)v468 + 1) = v481;
          v483 = *((_OWORD *)v469 + 4);
          v484 = *((_OWORD *)v469 + 5);
          v485 = *((_OWORD *)v469 + 6);
          *(_OWORD *)(v468 + 106) = *(_OWORD *)(v469 + 106);
          *((_OWORD *)v468 + 5) = v484;
          *((_OWORD *)v468 + 6) = v485;
          *((_OWORD *)v468 + 4) = v483;
        }
        *((_BYTE *)v206 + v466[6]) = *((_BYTE *)v207 + v466[6]);
        *((_BYTE *)v206 + v466[7]) = *((_BYTE *)v207 + v466[7]);
        *((_BYTE *)v206 + v466[8]) = *((_BYTE *)v207 + v466[8]);
        *((_BYTE *)v206 + v466[9]) = *((_BYTE *)v207 + v466[9]);
        *((_BYTE *)v206 + v466[10]) = *((_BYTE *)v207 + v466[10]);
        v491 = v466[11];
        v492 = *(void **)((char *)v207 + v491);
        *(void **)((char *)v206 + v491) = v492;
        v493 = v492;
        swift_storeEnumTagMultiPayload(v206, v208, 0);
        break;
      case 1u:
        v279 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v207, v279))
        {
          case 1u:
            v280 = *v207;
            *v206 = *v207;
            v281 = v280;
            v282 = v206;
            v283 = v279;
            v284 = 1;
            goto LABEL_227;
          case 2u:
            v494 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v494 - 8) + 16))(v206, v207, v494);
            v282 = v206;
            v283 = v279;
            v284 = 2;
            goto LABEL_227;
          case 3u:
            v495 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v495 - 8) + 16))(v206, v207, v495);
            v282 = v206;
            v283 = v279;
            v284 = 3;
            goto LABEL_227;
          case 4u:
            v496 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v496 - 8) + 16))(v206, v207, v496);
            v282 = v206;
            v283 = v279;
            v284 = 4;
            goto LABEL_227;
          case 5u:
            v497 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v497 - 8) + 16))(v206, v207, v497);
            v282 = v206;
            v283 = v279;
            v284 = 5;
            goto LABEL_227;
          case 6u:
            v498 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v498 - 8) + 16))(v206, v207, v498);
            v282 = v206;
            v283 = v279;
            v284 = 6;
            goto LABEL_227;
          case 8u:
            v499 = *v207;
            *v206 = *v207;
            v500 = v499;
            v282 = v206;
            v283 = v279;
            v284 = 8;
            goto LABEL_227;
          case 9u:
            v501 = *v207;
            *v206 = *v207;
            v502 = v501;
            v282 = v206;
            v283 = v279;
            v284 = 9;
LABEL_227:
            swift_storeEnumTagMultiPayload(v282, v283, v284);
            break;
          default:
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
            break;
        }
        v503 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v504 = v503[5];
        v505 = (char *)v206 + v504;
        v506 = (char *)v207 + v504;
        if (*(void **)((char *)v207 + v504 + 8))
        {
          v614 = v503;
          v621 = v5;
          *(_QWORD *)v505 = *(_QWORD *)v506;
          v507 = *((_QWORD *)v506 + 1);
          *((_QWORD *)v505 + 1) = v507;
          v508 = (void *)*((_QWORD *)v506 + 2);
          v509 = *((_QWORD *)v506 + 3);
          v510 = *((_QWORD *)v506 + 4);
          v511 = *((_QWORD *)v506 + 5);
          v512 = *((_QWORD *)v506 + 7);
          v604 = *((_QWORD *)v506 + 6);
          v636 = v506[64];
          swift_bridgeObjectRetain(v507);
          sub_10003E1F0(v508, v509, v510, v511, v604, v512, v636);
          *((_QWORD *)v505 + 2) = v508;
          *((_QWORD *)v505 + 3) = v509;
          *((_QWORD *)v505 + 4) = v510;
          *((_QWORD *)v505 + 5) = v511;
          *((_QWORD *)v505 + 6) = v604;
          *((_QWORD *)v505 + 7) = v512;
          v505[64] = v636;
          v505[65] = v506[65];
          v505[66] = v506[66];
          v505[67] = v506[67];
          v505[68] = v506[68];
          v513 = v506[120];
          if (v513 == 255)
          {
            v514 = *(_OWORD *)(v506 + 72);
            v515 = *(_OWORD *)(v506 + 88);
            v516 = *(_OWORD *)(v506 + 104);
            v505[120] = v506[120];
            *(_OWORD *)(v505 + 88) = v515;
            *(_OWORD *)(v505 + 104) = v516;
            *(_OWORD *)(v505 + 72) = v514;
          }
          else
          {
            v637 = v513 & 1;
            v524 = (void *)*((_QWORD *)v506 + 9);
            v523 = *((_QWORD *)v506 + 10);
            v525 = *((_QWORD *)v506 + 11);
            v526 = *((_QWORD *)v506 + 12);
            v527 = *((_QWORD *)v506 + 13);
            v605 = *((_QWORD *)v506 + 14);
            sub_10002B764(v524, v523, v525, v526, v527, v605, v513 & 1);
            *((_QWORD *)v505 + 9) = v524;
            *((_QWORD *)v505 + 10) = v523;
            *((_QWORD *)v505 + 11) = v525;
            *((_QWORD *)v505 + 12) = v526;
            *((_QWORD *)v505 + 13) = v527;
            *((_QWORD *)v505 + 14) = v605;
            v505[120] = v637;
          }
          v503 = v614;
          v5 = v621;
          v505[121] = v506[121];
        }
        else
        {
          v517 = *(_OWORD *)v506;
          v518 = *((_OWORD *)v506 + 1);
          v519 = *((_OWORD *)v506 + 3);
          *((_OWORD *)v505 + 2) = *((_OWORD *)v506 + 2);
          *((_OWORD *)v505 + 3) = v519;
          *(_OWORD *)v505 = v517;
          *((_OWORD *)v505 + 1) = v518;
          v520 = *((_OWORD *)v506 + 4);
          v521 = *((_OWORD *)v506 + 5);
          v522 = *((_OWORD *)v506 + 6);
          *(_OWORD *)(v505 + 106) = *(_OWORD *)(v506 + 106);
          *((_OWORD *)v505 + 5) = v521;
          *((_OWORD *)v505 + 6) = v522;
          *((_OWORD *)v505 + 4) = v520;
        }
        *((_BYTE *)v206 + v503[6]) = *((_BYTE *)v207 + v503[6]);
        *((_BYTE *)v206 + v503[7]) = *((_BYTE *)v207 + v503[7]);
        *((_BYTE *)v206 + v503[8]) = *((_BYTE *)v207 + v503[8]);
        *((_BYTE *)v206 + v503[9]) = *((_BYTE *)v207 + v503[9]);
        *((_BYTE *)v206 + v503[10]) = *((_BYTE *)v207 + v503[10]);
        v528 = v503[11];
        v529 = *(void **)((char *)v207 + v528);
        *(void **)((char *)v206 + v528) = v529;
        v530 = v529;
        swift_storeEnumTagMultiPayload(v206, v208, 1);
        break;
      case 2u:
        v285 = *v207;
        *v206 = *v207;
        v286 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v287 = (void **)((char *)v206 + v286);
        v288 = (void **)((char *)v207 + v286);
        v289 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v290 = *(_QWORD *)(v289 - 8);
        v291 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v290 + 48);
        v292 = v285;
        if (v291(v288, 1, v289))
        {
          v293 = sub_10002A750(&qword_100644980);
          memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v288, v289))
          {
            case 1u:
              v357 = *v288;
              *v287 = *v288;
              v358 = v357;
              v359 = v287;
              v360 = v289;
              v361 = 1;
              goto LABEL_279;
            case 2u:
              v559 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v287, v288, v559);
              v359 = v287;
              v360 = v289;
              v361 = 2;
              goto LABEL_279;
            case 3u:
              v560 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v560 - 8) + 16))(v287, v288, v560);
              v359 = v287;
              v360 = v289;
              v361 = 3;
              goto LABEL_279;
            case 4u:
              v561 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v561 - 8) + 16))(v287, v288, v561);
              v359 = v287;
              v360 = v289;
              v361 = 4;
              goto LABEL_279;
            case 5u:
              v562 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v562 - 8) + 16))(v287, v288, v562);
              v359 = v287;
              v360 = v289;
              v361 = 5;
              goto LABEL_279;
            case 6u:
              v563 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v563 - 8) + 16))(v287, v288, v563);
              v359 = v287;
              v360 = v289;
              v361 = 6;
              goto LABEL_279;
            case 8u:
              v564 = *v288;
              *v287 = *v288;
              v565 = v564;
              v359 = v287;
              v360 = v289;
              v361 = 8;
              goto LABEL_279;
            case 9u:
              v566 = *v288;
              *v287 = *v288;
              v567 = v566;
              v359 = v287;
              v360 = v289;
              v361 = 9;
LABEL_279:
              swift_storeEnumTagMultiPayload(v359, v360, v361);
              break;
            default:
              memcpy(v287, v288, *(_QWORD *)(v290 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v290 + 56))(v287, 0, 1, v289);
        }
        swift_storeEnumTagMultiPayload(v206, v208, 2);
        break;
      case 3u:
        v294 = *v207;
        *v206 = *v207;
        v295 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v296 = (void **)((char *)v206 + v295);
        v297 = (void **)((char *)v207 + v295);
        v298 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v299 = *(_QWORD *)(v298 - 8);
        v300 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v299 + 48);
        v301 = v294;
        if (v300(v297, 1, v298))
        {
          v302 = sub_10002A750(&qword_100644980);
          memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v297, v298))
          {
            case 1u:
              v362 = *v297;
              *v296 = *v297;
              v363 = v362;
              v364 = v296;
              v365 = v298;
              v366 = 1;
              goto LABEL_290;
            case 2u:
              v568 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v568 - 8) + 16))(v296, v297, v568);
              v364 = v296;
              v365 = v298;
              v366 = 2;
              goto LABEL_290;
            case 3u:
              v569 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v569 - 8) + 16))(v296, v297, v569);
              v364 = v296;
              v365 = v298;
              v366 = 3;
              goto LABEL_290;
            case 4u:
              v570 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v570 - 8) + 16))(v296, v297, v570);
              v364 = v296;
              v365 = v298;
              v366 = 4;
              goto LABEL_290;
            case 5u:
              v571 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v571 - 8) + 16))(v296, v297, v571);
              v364 = v296;
              v365 = v298;
              v366 = 5;
              goto LABEL_290;
            case 6u:
              v572 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v572 - 8) + 16))(v296, v297, v572);
              v364 = v296;
              v365 = v298;
              v366 = 6;
              goto LABEL_290;
            case 8u:
              v573 = *v297;
              *v296 = *v297;
              v574 = v573;
              v364 = v296;
              v365 = v298;
              v366 = 8;
              goto LABEL_290;
            case 9u:
              v575 = *v297;
              *v296 = *v297;
              v576 = v575;
              v364 = v296;
              v365 = v298;
              v366 = 9;
LABEL_290:
              swift_storeEnumTagMultiPayload(v364, v365, v366);
              break;
            default:
              memcpy(v296, v297, *(_QWORD *)(v299 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v299 + 56))(v296, 0, 1, v298);
        }
        swift_storeEnumTagMultiPayload(v206, v208, 3);
        break;
      case 4u:
        v303 = *v207;
        *v206 = *v207;
        v304 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v305 = (void **)((char *)v206 + v304);
        v306 = (void **)((char *)v207 + v304);
        v307 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v308 = *(_QWORD *)(v307 - 8);
        v309 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v308 + 48);
        v310 = v303;
        if (v309(v306, 1, v307))
        {
          v311 = sub_10002A750(&qword_100644980);
          memcpy(v305, v306, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v306, v307))
          {
            case 1u:
              v367 = *v306;
              *v305 = *v306;
              v368 = v367;
              v369 = v305;
              v370 = v307;
              v371 = 1;
              goto LABEL_301;
            case 2u:
              v577 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v577 - 8) + 16))(v305, v306, v577);
              v369 = v305;
              v370 = v307;
              v371 = 2;
              goto LABEL_301;
            case 3u:
              v578 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v578 - 8) + 16))(v305, v306, v578);
              v369 = v305;
              v370 = v307;
              v371 = 3;
              goto LABEL_301;
            case 4u:
              v579 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v579 - 8) + 16))(v305, v306, v579);
              v369 = v305;
              v370 = v307;
              v371 = 4;
              goto LABEL_301;
            case 5u:
              v580 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v580 - 8) + 16))(v305, v306, v580);
              v369 = v305;
              v370 = v307;
              v371 = 5;
              goto LABEL_301;
            case 6u:
              v581 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v581 - 8) + 16))(v305, v306, v581);
              v369 = v305;
              v370 = v307;
              v371 = 6;
              goto LABEL_301;
            case 8u:
              v582 = *v306;
              *v305 = *v306;
              v583 = v582;
              v369 = v305;
              v370 = v307;
              v371 = 8;
              goto LABEL_301;
            case 9u:
              v584 = *v306;
              *v305 = *v306;
              v585 = v584;
              v369 = v305;
              v370 = v307;
              v371 = 9;
LABEL_301:
              swift_storeEnumTagMultiPayload(v369, v370, v371);
              break;
            default:
              memcpy(v305, v306, *(_QWORD *)(v308 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v308 + 56))(v305, 0, 1, v307);
        }
        swift_storeEnumTagMultiPayload(v206, v208, 4);
        break;
      case 5u:
        *v206 = *v207;
        *((_BYTE *)v206 + 8) = *((_BYTE *)v207 + 8);
        *((_BYTE *)v206 + 9) = *((_BYTE *)v207 + 9);
        *((_BYTE *)v206 + 10) = *((_BYTE *)v207 + 10);
        v312 = v207[2];
        v206[2] = v312;
        v313 = v312;
        swift_storeEnumTagMultiPayload(v206, v208, 5);
        break;
      case 6u:
        v350 = *v207;
        *v206 = *v207;
        v351 = v350;
        swift_storeEnumTagMultiPayload(v206, v208, 6);
        break;
      case 7u:
        v314 = v5;
        v315 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v316 = *(_QWORD *)(v315 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v316 + 48))(v207, 1, v315))
        {
          v317 = sub_10002A750(&qword_100644600);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
        }
        else
        {
          v372 = *v207;
          *v206 = *v207;
          v373 = *(int *)(v315 + 20);
          v629 = (char *)v206 + v373;
          v374 = (char *)v207 + v373;
          v375 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v376 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v375 - 8) + 16);
          v377 = swift_bridgeObjectRetain(v372);
          v376(v629, v374, v375, v377);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v316 + 56))(v206, 0, 1, v315);
        }
        v378 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v379 = (void **)((char *)v206 + v378);
        v380 = (void **)((char *)v207 + v378);
        if (v380[1])
        {
          *v379 = *v380;
          v381 = v380[1];
          v379[1] = v381;
          v382 = (void *)v380[2];
          v379[2] = v382;
          swift_bridgeObjectRetain(v381);
          v383 = v382;
        }
        else
        {
          v384 = *(_OWORD *)v380;
          v379[2] = v380[2];
          *(_OWORD *)v379 = v384;
        }
        v5 = v314;
        swift_storeEnumTagMultiPayload(v206, v208, 7);
        break;
      case 8u:
        v352 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v353 = *(_QWORD *)(v352 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v353 + 48))(v207, 1, v352))
        {
          v354 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
        }
        else
        {
          v385 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v206, v207, v385);
          *((_BYTE *)v206 + *(int *)(v352 + 20)) = *((_BYTE *)v207 + *(int *)(v352 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v353 + 56))(v206, 0, 1, v352);
        }
        v386 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v206 + *(int *)(v386 + 20)) = *(void **)((char *)v207 + *(int *)(v386 + 20));
        swift_storeEnumTagMultiPayload(v206, v208, 8);
        break;
      case 9u:
        *(_BYTE *)v206 = *(_BYTE *)v207;
        v318 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v319 = (char *)v206 + v318;
        v320 = (char *)v207 + v318;
        v321 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v319, v320, v321);
        swift_storeEnumTagMultiPayload(v206, v208, 9);
        break;
      default:
        v219 = *(_QWORD *)(v209 + 64);
        goto LABEL_108;
    }
  }
  return v5;
}

